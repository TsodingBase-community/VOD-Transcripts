start,end,text
640,6800," looks like we're live hello everyone and welcome to yet another recreational programming session"
6800,12160," with a mr zozin who's dying let's make a little bit of an announcement and officially start the"
12160,19680," stream as usual uh live on twitch and what are we doing today on twitch.at.tv website"
19680,25680," today we're doing content aware resizing and see how about that so i'm going to give the link to"
25680,33040," where we're doing all that uh twitch.tv/zozin uh let me properly spell twitch.tv/zozin and i'm gonna"
33040,38560," ping everyone who's interested in being pinged and go the stream has officially started the stream has"
38560,42800," officially started i really apologize for being a little bit sleepy right now because my sleeping"
42800,51120," schedule is up again so it is what it is and it isn't what it isn't so um yeah so several people over"
51680,58880," some time posted this interesting thing in our discord server which is called scene carving and"
58880,65440," this is a really interesting idea so essentially it's a content aware resizing right so you probably heard"
65440,72880," about it you probably even seen it so um i suppose it was probably implemented in some uh in some graphic"
72880,80560," applications and stuff like that so this is sort of like a test image and the idea is to resize it to make"
80560,89040," it narrower without distorting neither the building nor the person in here right so and essentially this"
89040,93840," is a pretty straightforward algorithm that allows you to do that right so and the result of this"
93840,100320," algorithm when you make it narrower looks like this and it's out absolutely automatic right so no human"
100320,109680," is involved in here so it's just like an algorithm that just does that somehow right so this is rather"
109680,115680," interesting and it apparently there's nothing fancy about it so there's no ai involved or anything in"
115680,127360," fact it's from 2005 right it is from 2005 so yeah so freaking simple it is so freaking simple um so and uh"
127360,136160," i looked up the paper right so you can even find the paper in here right so all of that is going to be in the"
136160,142080," description obviously if you're watching on youtube um so there this is the paper and there's also"
142080,148080," supplementary video uh about how the algorithm works and i really recommend to watch it right so the reason"
148080,154240," why i even started to uh to stream this entire idea is because i've watched this video and explained really"
154240,159920," well how this algorithm works and that's what's inspired me to even start streaming this entire thing"
160720,166000," so i really recommend to check it out it's going to be in the description and also another thing that"
166000,172320," was posted in our discord server uh which is a visualization of how this algorithm works right so"
172320,180720," it basically it does what it says in the name it cars the seams right it literally cars the seams"
180720,186880," so i suppose it was implemented by adam uh right so it's their implementation and this is how it works"
187520,194720," as you can see there is like the seams that are sort of aware of the kid and they're trying to avoid that"
194720,200160," and they're inserting new pixels where it doesn't really matter so they're still disturbing some"
200160,208240," things but they're not disturbing the important things right so and again this is absolutely automatic"
208240,214320," no human input was provided it is just automatically does that so it was not your implementation it was"
214320,221280," stolen from github i see i see but in any case uh right so it's doing all of that automatically you"
221280,227120," can provide human input you can implement the algorithm where you can provide the human input but you don't"
227120,233600," have to you literally don't have to that's that's what's cool about it right it's content aware it's like"
233600,243280," automatic um so um so there's a couple of things in here they don't really matter and essentially the"
243280,250960," idea is the following the idea is the following you need to compute an energy function on an image"
250960,257440," that's what you need you need to compute an energy function and the energy function is going to be what"
257440,266000," determines the seams that you're reducing or expanding so your goal is to find the seams that go across"
266000,271360," like vertically or horizontally right so but usually vertically right so if you want to make a thing"
271360,280240," narrower we probably want to remove the uh the vertical seams and those seams basically the sum of the energy"
280880,291440," along that seam is the smallest right so and uh interestingly enough like what can you use as an"
291440,299840," energy function so usually you can use whatever you want honestly even the user input right so this is"
299840,305840," where the user input can come in but you don't have to so one of the things that people use quite often"
305840,314480," is a gradient magnitude which is basically a gradient of the brightness of the pixel right and uh that is"
314480,321760," an energy function so and that is actually very cool energy function because like the gradient magnitude"
321760,329600," is essentially like a sobel filter like sobel operator uh which is used to detect the edges of the"
329600,337040," image right so that means um the things that are energy dense are the ones that have a lot of"
337040,343920," edges which makes a lot of sense right so it's it's the thing that have a lot of edges and uh"
343920,353280," because they have a lot of edges a seam going across such an energy dense um object is going to uh contain"
353280,359360," the the sum of the pixels are going to contain a lot of energy so because of that the the seam will try"
359360,367120," to avoid this energy dense objects and will go around them and that's how it becomes aware of the content"
367120,374640," that's how it becomes aware of the content such a cool idea like it's also so simple right all of that"
374640,380800," like makes sense right so yeah so you you have objects that have a lot of edges right you assign an"
380800,386480," energy function to that and you make seams that avoid specifically avoid this entire thing and just like"
386480,393360," yeah it makes perfect sense right so and that's precisely what i wanted to code today so the only"
393360,399840," problem is that how you find these seams right so you have a like an energy function you have basically"
399840,407120," association of energy with each individual pixel how can you find the smallest sort of path from top to"
407120,415840," bottom where the sum is the smallest right because uh you have like a exponential amount of amount of"
415840,422000," sums in there right so one of the ways you can do that so one of the ways the uh the wikipedia page"
422000,427760," suggests and also the paper the original paper is a dynamic programming right so with dynamic programming"
427760,433120," you basically scan from left to right top bottom and you look at the neighboring pixels and you just pick the"
433120,438320," uh the square means so what do they use each square represent i don't really know like what's the"
438320,443520," what's the usual path what's the usual function they use to actually combine the the energies of the"
443520,448960," pixels is that the sum or is that like a mean or is that a minimum or something like that i don't"
448960,455440," quite remember honestly uh calculate the weight density of each pixel right so from energy make a list of"
455440,461280," seems seems unranked by energy with low energy seems being least importance they don't really say it in"
461280,471120," here competing the seams uh yeah but in any case in any case so we'll figure it out i think uh we'll"
471120,476800," figure it out so today this is what i want you to try to implement right so i try to implement like a"
476800,484560," content aware resizing of the images um right so that's the plan for today that's the plan for today"
486000,494320," uh all right so let's go ahead and just like do that uh so let me see sim carving all right let's do"
494320,504240," sim carving and let's create a main.cn as usual uh let's create a simple hello world uh so this is going"
504240,510160," to be hello world one of the important things that will probably need to happen here is an ability to load and"
510160,519520," save images so i suppose uh i'll need to bring the stb libraries i'm going to steal them from the mutualizer"
519520,527920," um all right so let me take a look at the ray leap relief 05 and in ray leap we do have them in"
528800,537920," here besides two stb image resize two not the first one very interesting never heard about the second one"
537920,544560," the recite the first resize was so good they made the second one surprisingly so another thing maybe"
544560,552080," it makes sense to bring the like knob uh in here so let's go ahead and do that uh so where knob is"
552080,561040," located i think knob is located somewhere here knob.h boom there we go there we go there we go so let's"
561040,568160," go ahead and just create knob.c uh which is going to build the original thing in here so as well just like"
568160,575600," go ahead and include this thing and we're gonna have an input in here which is also accepts the arguments and"
575600,584560," stuff like that right knob go rebuild yourself technology right so i need to open it so i can"
584560,590480," auto complete things in here i'm gonna provide this step and there you go there we go i'm not sure if it's"
590480,595440," really necessary to do it like that right so because the program is going to be super small"
598720,610560," so uh yeah let's see let's see cmd is it's actually knob uh cmd cmd let's go like that uh knob cmd append"
610560,617920," and what we're appending in here so we're going to be using cc uh i want to include a bunch of flags"
617920,623760," right so for extra protection and stuff like that so it probably also makes sense to include the debug"
623760,630000," information as usual uh right in case i want to debug this entire thing and in here i'm going to"
630000,636240," output main uh and as an input we're going to have main i have not decided like what exactly i'm going"
636240,645360," to use as the as the name in here but yeah so one of the thing i'm 100 going to link with is math um"
645360,650720," i'm not sure if we're going to have any gui right so if i were to add guis i suppose i'm going to be"
650720,655120," using ray leap but i don't feel like doing it right now but it will be kind of cool to maybe"
655120,662480," have some gui to interactively resize with content aware stuff um yeah we'll see we'll see anyways uh"
662480,670800," so knob cmd run synchronously we're running this entire thing synchronously and if it failed we just"
670800,677440," exit with node zero exit code and that's about it so uh let me now build this entire thing knob"
677440,686160," knob.c uh right so we got that and something is not working this is because i did not include"
686160,692320," the uh knob implementation right so knob implementation there we go so let me try to rebuild this entire thing"
692320,698400," and that should be working that should be twerking mine at front and it is in fact working it is in fact"
698400,705120," working so if i run this entire thing it says hello world okay so let's just grab some image right so"
705120,712000," let's grab this one i think it's a good idea and maybe load it up um so i'm gonna just like go ahead"
712000,717840," and download this entire thing so jpeg so do we can we even load jpeg i think we should be able to load"
717840,726720," jpeg so do you support yeah it does in fact support jpeg so stbi uh load right so that's the things we need"
726720,734640," in here not the things we deserve but definitely the things that we need uh right so let's go so this is"
734640,740800," the this is how we're going to be loading things um so i would like to maybe rename this to width and"
740800,747440," height uh i don't really care about the components specifically because of that i'm not going to define"
747440,754480," n i want to put null uh as n in here but i'm going to also say that convert it to four components right"
754480,759520," so because it's going to be easier for me to to work with if i just have four components because it's 32"
759520,766160," bits uh right so and in here we have just pixels and i would like to treat the pixels as just like you"
766160,773120," insert it to right so you insert it to there we go so we've got the pixels and if that didn't work"
773120,778880," so for instance pixels is equal to no uh that means we could not load that specific file all right so it's"
778880,788080," called file path uh const char file path and let's take this thing like so so this is the file path we're"
788080,797280," dealing with uh fprintf std error uh right error could not read uh we're going to put s in here"
797280,802320," all right so it's going to be file path let's go and we're going to return uh this kind of thing okay"
802320,808240," cool so we managed to load the image and let's actually print some info about that uh so we're going"
808240,816080," to say file path is this which is in fact file path and then we're going to have width uh which is going"
816080,821200," to be just the width of this thing and then we're going to have height which is the height of this"
821200,827920," entire thing all right so let me try to rebuild this entire stuff it does not rebuild because we didn't"
827920,837600," include stb image right so it's going to be stb image dot h and so let me let me see so there's also"
837600,844560," should be an implementation for this entire thing so let's put it in here and there we go it seems to be"
844560,850720," working right so it just complains about unused pixels but that's fine that's totally fine now we"
850720,858800," should be able to run this entire thing and it successfully loaded this entire image uh 1428 by 968"
858800,865520," right so that is actually perfect we managed to load the image so that's pretty cool that's pretty cool"
865520,871520," that's pretty cool so the next thing we need to do we need to apply the sub operator on this entire thing"
871520,877840," all right so let me actually take a look at this entire stuff so i had um yeah the the sub operator"
877840,885680," this one so it should allow us to detect the edges of the image right so essentially you have"
885680,890880," this kind of image right so valve original so this is the original valve"
890880,899680," and this is after application of the sub operator so as you can see it allows you to detect edges and stuff like that and that's what we're going to be using as the energy function"
899680,911680," uh right so because the objects with a lot of edges they are coherent objects that contain details that we don't want to lose right we can treat edges as the details"
911680,925680," so that's actually a cool idea so this energy function like shows the concentration of details and force when we build the seams and stuff like that to avoid the clusters of details because we don't want to lose them"
925680,931760," it's actually a very interesting way to look at it honestly it's actually a very cool way to look at it"
931760,938000," um so yeah and all of that is just like in 2005 before ai or anything like that it's just like"
938000,943200," it's quite bizarre how simple algorithm can be like as powerful as ai"
943840,947200," to be fair uh right so"
947200,952080," um"
952080,955120," slay 29 thank you so much for tier one thank you thank you thank you"
955120,957520," all right so uh let's continue"
957520,958800," uh"
958800,964080," now what do we have in here what do we have in here"
964080,970320," uh so we probably need to convert that to brightness because as far as you can tell i never actually"
970320,974960," implemented the subloperator even though it's it's pretty simple right it it's basically"
974960,982320," a convolution right and you have two kernels for the convolution uh right and essentially you have the"
982320,988480," horizontal and vertical uh kernel for the convolution and then what you do you just take a square"
988480,994640," uh square root of their you know squares some squares square root of the sum of squares"
996320,1000800," but basically the distance if you treat it as a vector you you basically take a distance"
1000800,1006880," and as far as i know subloperator is basically an approximation of gradient"
1006880,1013840," all right and to be fair specifically for the image we didn't really need this kind of thing"
1013840,1022960," all right we could just like compute the um you know the delta of the brightness directly and get like"
1022960,1028960," roughly the same thing uh but this thing is probably basically doing the same right it is probably"
1028960,1036480," doing basically the same anyways uh so we need to convert this entire thing to a brightness and uh i"
1036480,1041680," was looking through like how do you convert the brightness and i googled up some some things in"
1041680,1048480," here right so there was a formula that takes rgb right it takes rgb and converts it to brightness"
1048480,1057680," so something like that luminance uh right so we could use luminance um so perceived option two slower"
1057680,1064560," but yeah it converts basically to perceived because it's used a square root a square root and stuff like"
1064560,1071200," that um for certain color spaces maybe this is what we want to use because this one is actually super easy"
1072000,1082800," um to implement but anyway so what we want to do is maybe allocate some stuff right because uh"
1082800,1089360," it's going to be probably floats those things are going to be probably floats so let's go ahead and do"
1089360,1096480," that and i don't really know what they use in r in here do they use the value from 0 to 155 or from 0 to 1"
1096480,1105280," probably from 0 to 1 like i'm pretty sure it's from 0 to 1 um right so it's sort of like normalized values"
1105280,1112640," we'll see we'll see right so i want to basically allocate uh something like this right so it's going"
1112640,1123200," to be malloc uh size of floats uh maybe even the size of brightness uh right but dereferenced rights we're"
1123200,1129920," going to multiply by width and height so there we go so now we have this kind of thing so afterwards"
1129920,1137920," we probably want to um just go ahead and convert each individual pixel into the brightness so we can"
1137920,1145120," even have maybe some sort of a function uh which is basically rgb to brightness uh right and here we're"
1145120,1154400," going to accept the rgb which is this thing uh and then we'll have to basically extract the um the"
1154400,1162160," components right so as far as i can tell all of that is lsb right so all of that is lsb which means"
1162160,1169040," i don't remember in which order we're talking about that so"
1170080,1178000," yeah essentially r is probably going to be just this so this is going to be our r"
1178000,1192800," like so then g is going to be basically like this right and b is going to be 16. we can even think about"
1192800,1200720," this stuff as zero in here right for the symmetry and stuff like that and because of that we can even"
1200720,1207120," think about it like so right so it's multiplied by one and this is multiplied by two right so for the"
1207120,1214240," sake of symmetry i think i like i really like to define these things like that um okay cool so this is the"
1214240,1221440," the values but these are the values from 0 255 and i suppose this formula that converts rgb to brightness"
1221440,1228240," is using normalized rgbs so probably you'll have to normalize them somehow so let's go ahead and try to"
1228240,1239840," do that uh what i want to do i think is to probably just go ahead and divide them by 255 and that will"
1239840,1248640," automatically convert it to float and there we go we have rgb in b in floats so that essentially should"
1248640,1259120," allow us to directly use this formula uh like this right i didn't copy paste it properly there we go"
1259120,1268960," so now we have this function that accepts rgb right so we're just extracting the components of rgb and then"
1268960,1274400," we're converting them to to brightness or lumen luminance uh maybe i should actually call this"
1274400,1283200," thing luminance uh let's call it lume rgb to lume uh and here we're gonna call this entire thing"
1283200,1289840," luminance as well uh i'm not sure if that's a good idea to use this specific value but why not"
1289840,1298160," um why not why not people are freaking out about double but i feel like the compiler will tell me"
1298960,1308640," it doesn't really matter uh yeah so it actually did in fact matter whatever who cares uh so okay"
1308640,1313040," so the thing we want to do in here is probably just convert that what's funny is that the luminance"
1313040,1320880," doesn't really depend on the on the coordinate at all right so x and y of the pixel doesn't really matter in"
1320880,1325600," that case because of that because of that we can just go ahead and iterate from zero to"
1325600,1337200," width multiply by height right so and essentially just do uh luminance i equal to pixels i rgb to luminance"
1337200,1344880," there we go so that's one of the things we can do in here um so for the debug purpose it would be nice to"
1344880,1353600," actually see this entire thing somehow right it would be kind of cool to see um so because of that"
1353600,1362800," i feel like maybe it makes sense to actually do conversion back right so essentially take the luminance"
1362800,1369840," right and turn it into rgb right but in that case it's going to be grayscale right so i want to see"
1369840,1378160," the grayscale image of this entire thing uh right so how can we even do that so essentially we just"
1378160,1385680," multiply this entire thing by 255 and we just turn it into this thing right so which is going to be"
1385680,1391280," just i don't know so some some value i don't really know how to call that uh right it's some sort of a"
1391280,1398080," value and we want to turn it into rgb uh right so in that case we want to actually take the alpha"
1399200,1405680," right so which is going to be how to head code it to 155 then we're combining it with value which is"
1405680,1416080," shifted by um by you know eight multiplied by two uh something like that and uh right so just in case"
1416080,1423520," i want to just like you know properly parenthesize all of that stuff right and then it's going to be zero"
1423520,1429840," and that's about it actually so and here we have some sort of a like a pixel right so this is some"
1429840,1435920," sort of a pixel in fact we just want to assign these things right away to pixels uh right and we've got"
1435920,1442240," the pixels right so we just take the color image we convert it to luminance and we convert it back into rgb"
1442240,1451040," so then we can try to save that right so to save all of that stuff we need stb image right uh right"
1451040,1462800," so stb image right so let's go ahead and just like write all of that stuff stb image right stbi"
1463760,1467440," so we're going to be writing png right so that's what we're going to be doing we're going to be"
1467440,1474800," writing png so what's going to be the output we'll probably need to have something like a out"
1474800,1481120," file path right so some sort of the out file path i'm going to call it loom png so that's what we're"
1481120,1486960," going to be calling it uh you know what i'm going to call it loom because i feel like we need to uh"
1487600,1493360," actually save all of the possible different stages right so we need to save all the possible"
1493360,1499440," different stages like the luminance then the you know the sobel operator so the the gradient"
1499440,1505680," magnitude or whatever the fuck these people like to call it different uh interchangeable names for"
1505680,1510320," gatekeeping purposes or something like that but it doesn't really freaking matter uh all that"
1510320,1515920," shit is the same so this is going to be width and this is going to be the height so the amount of"
1515920,1522880," component is four then we provide the pixels and a stride is basically the width but the width in"
1522880,1531040," bytes so that means we need to multiply this entire thing by the pixels like so so and i suppose if this"
1531040,1537120," thing returns false we have to say that we didn't manage to save that specific file so we're going to"
1537120,1547040," say std error right it's going to be error would not save file s uh and we're going to provide the loom"
1547040,1553040," file path there we're going to return this kind of thing and that's about it right so i suppose here i"
1553040,1563920," can say okay uh right so okay okay okay let's try to compile this entire shed and see if it's going to"
1563920,1574560," even work stbi uninitialized what really ah this is because okay um so it doesn't return void it returns"
1574560,1582480," specifically like pixels okay so let's go ahead and just try to run it it's taking some time uh it actually"
1582480,1588080," took quite a lot of time to to implement i'm surprised yeah there we go so that's that's the luminance"
1588880,1595840," uh so that's actually kind of cool oh i kind of like this"
1595840,1604800," all right so the original image should look like this so this was the original image"
1604800,1612880," so then we took only the luminance whatever the it is by using that formula and the formula was actually"
1612880,1618720," kind of so slow right even though we didn't really optimize anything so if we try to"
1618720,1625360," time this entire thing so how much time it took to to do this two seconds okay so what if i like"
1625360,1632160," optimize all that stuff what if we try to optimize like all three uh compiling all that stuff is going"
1632160,1637680," to be a little bit of an s because uh we're also going to be optimizing all of these libraries and they"
1637680,1644080," are huge s libraries with thousands of lines of code sometimes almost 8 000 lines of code imagine"
1644080,1648560," compiling all that with all three so it's going to take some time all right so it's definitely"
1648560,1671840," going to take some time okay good come on see it's taking some time we're optimizing we're crunching the"
1671840,1684320," numbers let's go and uh we're going to try to run this entire thing and yeah so we managed to optimize"
1684320,1689200," one and a half of a second i don't think it's worth it right so waiting all that time for for this"
1689200,1694160," kind of optimization so i'm going to disable that so at least the compilation is going to be a little bit"
1694160,1704080," faster hopefully um surprisingly here's an interesting thing okay so if i go to c uh and also after this"
1704080,1713360," entire step i'm going to do cmd count to clean up this thing uh and then i'm going to just run uh main"
1714480,1719760," like so right so let's see how much time it will take"
1719760,1731440," yeah so accumulated time compilation plus the run time compilation plus the run time"
1731440,1739280," how much time it will take four seconds okay so i'm gonna try to do that one more time"
1741680,1748640," okay okay now if i enable optimizations the run time will become faster but the compilation time"
1748640,1752640," will become slower what is the sum what is the sum"
1759280,1769120," i think it's longer than four i think it's longer than four yeah it is definitely longer right if you"
1769120,1774240," are constantly recompiling and then running optimizing is actually slower"
1774240,1786320," so that it's 27 oh right so anything this kind of effect sometimes happens um in"
1787520,1795200," jit compilers right because something like that may happen in pi pi for instance right so have you"
1795200,1801200," noticed that in pi pi for a very simple script it takes too much time to compile that script first"
1801200,1808400," and then run it very fast but i mean at that point just regular python c python is going to be"
1808400,1814400," faster right it's kind of an interesting effect right so just like uh sometimes it's worth it but"
1814400,1821120," sometimes it doesn't right it depends it depends it depends anyways so we get the luminance and uh"
1821120,1828800," stuff like that so we need to compute the uh the gradient thing here so the sobel operator the sobel"
1828800,1837840," operator so we have a basically the convolution kernel do you guys know how to uh like convolve this kind of"
1837840,1847520," the kernels and stuff like that you guys know so essentially you scan the image uh right you scan the"
1847520,1856800," image with the window three by three and you multiply each individual pixel with that window with these"
1856800,1865760," coefficients and you sum them up and then uh the the final value becomes the value of the pixel here in the middle"
1865760,1872480," so and you just basically scanning from left to right so scanning from left to right yeah okay so in that"
1872480,1879520," sense you can say that this is an ai algorithm right so uh you may say that essentially the entire content"
1879520,1887280," aware you can say that the entire content aware scaling algorithm is just a you know handcrafted"
1887280,1894000," convolutional neural network yes it's a handcrafted convolutional neural network yes that's what it is"
1894000,1906640," damn damn damn damn damn anyways"
1909840,1918320," uh let me let me let me see let me see um so we have a luminance and in here and here's the"
1918320,1926320," interesting thing so you have a gx and gy so one is uh horizontal another one is vertical right so you"
1926320,1934320," kind of need both of them actually you kind of need both of them and um then to compute the final one"
1934320,1939760," you will have to do this kind of thing um i suppose we can actually compute them sort of like"
1939760,1944960," simultaneously if you know what i mean sort of like simultaneously so let's like let's actually uh"
1944960,1955040," how to code these kernels right so we're gonna have a static and uh those are i suppose we're gonna"
1955040,1963040," treat them as floats uh so how i'm gonna call them i'm gonna call them gx and i wonder what's gonna be the easiest way for me to work with all that"
1963040,1972160," work with all that so maybe is it gonna be like um you know plane array or is it gonna be like a two-dimensional array"
1972160,1978400," three by three so what which one is gonna be easier for me to handle i think this one uh right so"
1978400,1989760," to do so this is gx uh one uh zero minus one"
1992320,2002800," uh-huh like something like that two zero minus two so i'm just retyping the weights of the"
2002800,2010880," convolutional neural network that's right so openai with their cluster of gpus trained"
2010880,2018800," this convolutional neural network and posted them on wikipedia for us to copy paste thank you so much openai"
2020160,2023200," so"
2023200,2030000," anyways um so there is a kind of symmetrical right so it's the same thing but just rotate it"
2030000,2034240," if i if i understand correctly right so it's just basically the same thing maybe we can"
2034240,2039840," even specify this entire thing once and just rotate but to be fair i don't really want to do that"
2039840,2044800," uh right it's kind of it's kind of dumb it's but it's better to just you know how to quote all this"
2044800,2054640," shit it's better just heard cut out of this sheissa heart cut all of this sheissa mind if we're going to"
2054640,2059120," transpose yeah so it's transposed more like transposed"
2061040,2068240," all right so let me let me see so we have the luminance in here that's cool that's cool that's cool"
2068240,2072480," and uh here i suppose we're gonna have the"
2074160,2083520," um the gradient all right so we can call grad uh grad so this is artificial intelligence holy"
2083520,2088080," shit all right so we'll do another mail that says oh and by the way i forgot a very important"
2088080,2093440," thing i forgot to check that this thing is never equal to to null i think it's quite important so let's"
2093440,2102560," actually do it like that uh all right something something bizarre is going on hopefully hopefully"
2102560,2112400," that's not my neighbors being angry at me for speaking the western spy language in the middle of russia"
2112400,2120080," uh all right so and in here we're gonna have assert grad not equal to null and there we go"
2120640,2124480," so how are we going to be approaching this intention kgb on their way"
2124480,2135200," um yes so yes so yes so we're going to start with i suppose iterating each individual pixel in here"
2135200,2139840," um like so uh why"
2139840,2149120," and height so basically we're going to be iterating row wise and then column wise like so plus plus one"
2150320,2159520," and uh there we go so uh there we go so that's pretty epogers that's pretty epogers so how are we"
2159520,2164800," going to be approaching this entire stuff so this is going to be very very interesting because"
2164800,2180240," so we can maybe start iterating in a sense of like dx dy from minus one to one right and"
2180240,2187200," that's kind of roughly three by three so minus one zero one minus one zero one uh right and that's kind"
2187200,2195760," of cool i think um right because it will enable us so it will be enable us to do something like"
2195760,2207200," x plus dx right and in here you have a luminance x plus dx and y plus dy right and of course it can go"
2207200,2212800," of you know out of you know out of the bounds but that doesn't matter right now um so what i'm thinking"
2212800,2217120," is that maybe we want to have something like we want to rename those things let's actually call"
2217120,2225840," them center right so this is like the center where they're located so c c y then c x c x c x"
2225840,2232160," right so that enables us to do something cool actually x is going to be equal to c x plus dx and y"
2232160,2238080," y is going to be equal to c y plus y right and so that gives us the coordinate in the luminance right"
2238080,2248240," so x and y but that only makes sense if um you know x and y are sort of like um within the bounds right"
2248240,2252880," so if they are outside of the bounds i suppose we can just make them equal to zero right so there are"
2252880,2259120," different strategies how to handle out of bounds when you can roll the thing uh so but in this case i just"
2259120,2265280," want to make this coefficient kind of equal to zero right so let's actually create float and this is"
2265280,2272800," going to be sort of the coefficient c and if x if we are within the boundaries right so if we are within"
2272800,2282320," boundaries so zero is less or equal than x and x is less than width and zero uh less or equal than y and"
2282320,2289040," y less than height in that case we just take the luminance uh x and y otherwise we just take the"
2289040,2293440," zero so that's how we're going to be handling all of that that's going to be handling all of that so we"
2293440,2299280," have c so the next thing we need to do we need to take the convolution thingy right so we're taking the"
2299280,2306560," convolution thingy so we need to take um gx right so did i actually call gx yeah in fact i called it gx"
2307280,2314080," and uh we can just use dy right so dy and dx but the problem is that this mother flippers start from"
2314080,2320560," minus one so i suppose one of the things we want to do we want to do plus one on them so and that way"
2320560,2325680," they're going to be going from zero to two which is precisely what we want and here we can just do"
2326320,2337680," multiply by c uh right but um we want to collect all that so if it's a sobel operator right if it's a"
2337680,2344400," sobel operator i suppose i can call it s and we have two operators right so we're going to have uh the x"
2344400,2352560," one and y one so you know gx and gy so we suppose what we want to do in here is just to have both of them"
2352560,2359920," cx and cy something like this and we're going to be simply adding those things in here uh right and"
2359920,2366320," for the vertical one we're going to be just adding this thing in here so yeah so by the end of this"
2366320,2374400," entire stuff we basically convolved we basically folded a single pixels pixel for a single kernel uh and"
2374400,2383520," we've got cx and cy uh and those cx and cy are basically these values are basically these values"
2383520,2391120," that we probably want to do something like cx cx plus cy cy and simply a square tf and that's the final"
2391120,2400640," value of that goddamn gradient believe it or not so cy uh cx right that's what it is honestly"
2403280,2409920," so that's how we convolved how we this is how we apply this sobel operator right if i didn't make"
2409920,2423680," any fucky wacky and potential oopsie doopsies so basically basically basically basically"
2423680,2432160," sorry so i'm thinking is that i actually want to save both of these things right i want to save both of these"
2432160,2439520," things so we have we have luminance and we have the gradient stuff um so maybe it would make sense to"
2439520,2446960," factor out this entire thing into into separate function what do you guys think like this thing"
2446960,2453280," is that a good idea to factor shut out or should we just like continue shutting out the code without"
2453280,2458640," structuring"
2458640,2465280," okay good so slate 29 thank you so much for uh to one submission thank you thank you thank you"
2465280,2477120," i really appreciate that i ran out of tea i ran out of tea so can grad be bigger than one uh can grad be"
2477120,2482640," bigger bigger than one well it is bigger than one always probably i don't know"
2482640,2493120," honestly i i i don't know can it uh can luminance be bigger than one though that's a good question"
2494160,2500720," that is an ironically good question uh i actually want to maybe figure out"
2500720,2515200," so analyze uh mean and max so here i'm going to provide the you know values right so some sort of"
2515200,2523440," values um let's call it maybe matrix matrix and this matrix is going to have width and height"
2523440,2533200," right and essentially here we can iterate from zero to width multiply by height"
2533200,2542800," and i want to keep track of min and max so min is going to be that which is going to be flt max right and"
2542800,2555920," max is going to be flt uh right so flt min so and essentially mat i if mat i is less than a man a man"
2555920,2567120," becomes mat i uh right and then if this thing is greater than x uh it becomes maximum so and in here"
2567120,2572800," what we want to do we want to do we want to actually print them so it may be nice to have some sort of"
2572800,2590960," prompt in here uh prompt so um prompt s and here we can say min is f max is f like so so this is a prompt"
2592240,2602480," min max so that way after i completed luminance i can do something like analyze uh lume um"
2602480,2606800," lume width and height like so"
2606800,2617360," and after i completed grad i can do the same uh with a grad and just see what's going on in there so this is a"
2617360,2622240," grad and this is a grad and this is why i wanted to actually factor out this entire thing"
2622240,2631840," so i can basically keep saving uh you know different mattresses that i have in here right"
2631840,2641360," but maybe for now i don't want to save anything i just want to analyze analyze all of these things so"
2641360,2647040," let's go ahead and just like run this entire stuff and see how it goes flt max i think it's located"
2647040,2655280," somewhere in float dot h i'm pretty sure about that so and in here uh subscripted value is neither array"
2655280,2664880," nor pointer but it is in fact a pointer i see what you mean by that i see i literally freaking see okay so"
2664880,2675040," this has to be multiplied by width and plus x and this one is a similar thing multiplied by width um the"
2675040,2683840," fuck is that width plus uh cx all right so we'll get let's review that and okay so that is true gradient"
2683840,2689680," that can be actually bigger than four surprisingly it cannot be negative uh which is fine i suppose"
2690640,2700640," which is totally fine um so the question is how exactly we're going to represent that how exactly"
2700640,2707360," we're going to be representing that we can basically normalize that um using this notation we can also"
2707360,2717520," calculate the gradient direction uh uh but we only kind of care about the magnitude right so we don't"
2717520,2726400," really care about the direction only the magnitude all right all right all right all right so we can"
2726400,2736720," literally just create a function that um that's called normalize normalize and it's going to accept"
2736720,2746080," this entire thing it's kind of interesting thing so that means i can factor out mean and max uh operations um"
2747520,2760320," yeah that's a cool idea so mean and max so here i accept damn that becomes kind of cool it almost feels"
2760320,2768480," like i'm programming python using numpy or some shit like that i don't know um so and in here we can just"
2768480,2775680," factor out this intensive so and we're probably going to be you know accepting this stuff like this float mean and"
2775680,2781440," max so here i'm going to be just doing that and when i'm accepting this i'm going to be just doing that"
2781440,2790640," so then it's super easy for me to just allocate min and max uh like so and just min and max"
2790640,2801200," matte width height uh like i feel like i'm reinventing nn dot h like i just should just bring uh nn dot h because"
2801200,2804160," there's a convenient way to work with mattresses there"
2804160,2811840," i'm just kind of funny isn't it i think the thing is kind of funny right so and then here i can do this"
2811840,2820560," kind of thing and then after i figured all of that out uh right i can just i can just do that uh i"
2821520,2831680," like so divide it by uh well yeah so i can basically make it equal to"
2831680,2836880," so i need to basically bring it"
2836880,2843840," yeah i need to have set it by the minimum right so i need to have set it by the minimum"
2846080,2854560," and divide uh by the max minus min right since it's going to be zero it's going to be fine"
2854560,2858960," so something like that something like that and that's how we're going to normalize"
2858960,2866560," these gradients right so normalize grad width and height uh all right"
2868640,2877280," uh-huh yeah as you can see so grad got normalized grad got normalized so and let's actually factor out"
2877280,2880800," um let's actually factor out this kind of thing like dump"
2880800,2884960," metrics uh so we're gonna come to the char"
2884960,2890640," file path and we're gonna just you know accept this in test"
2896640,2902640," um so this is what we've got this is what we've got"
2902640,2912560," damn who needs python i'm telling you it's just like it is as convenient as python honestly"
2912560,2919920," right a little bit more cucumbers some syntax but overall it's just like it's fine uh you can do this"
2919920,2926480," kind of stuff in c no problem um okay so what we have in here uh we're going to convert it to"
2926480,2933200," mat right so this is just mat uh and here's just a file path nothing particularly special"
2933200,2939920," um might as well honestly return something like boolean or whatnot"
2939920,2946400," so we can do false in here then return true and then print f"
2947760,2953200," so okay generated as and i'm gonna save file path"
2953200,2964560," uh so let me let me let me let me see okay so what we have in here boolean unknown"
2964560,2972240," uh can do this just debuting so what else do we have in here so it accepts the pixel again damn"
2972240,2978400," breathe so you need the intermediate sort of like array of pixels which is rather interesting because we"
2978400,2984560," can kind of uh we can kind of allocate it in here honestly uh you insert two pixels"
2986000,2997280," as a temporary thing so size of pixels multiplied by width by height of course it's going to assert"
2997280,3004480," pixels equal to null but there is a little bit of a problem in here is because it's a temporary uh"
3004480,3011680," temporary data we should not forget to free this entire thing basically at any return"
3012400,3018480," basically at any return which means maybe we can use the defer pattern i think we could use a defer"
3018480,3024800," pattern in here so i'm gonna basically pre sort of define this entire thing in here"
3024800,3030160," like so so this is going to be initially null and we're also going to have some sort of like"
3030160,3037360," result in here which is true initially so then we can have a defer pattern which frees this entire thing"
3037360,3043520," and returns the result and instead of actual returning here we want to use a knob return defer"
3043520,3048400," and we return false in here and that automatically just works and we don't have to do this kind of"
3048400,3055360," shit so this return like short circuits to these defer in here so that's basically what we have yeah"
3059360,3064560," there we go so we're going to try to do that implicit declaration oh this is because i never really"
3064560,3070080," included knob let's include knob dot h you probably don't even have to include implementations because"
3070080,3076000," it's a macro it's just a macro and as you can see everything seems to be working everything seems to be"
3076000,3084800," twerking so that's pretty cool uh what if now we try to dump uh dump matrix right so this is going to be"
3085440,3097120," grad png grad width height and uh so another thing we're going to also dump luminance in here"
3097120,3104960," both of them i think all that is going to be very much useful let's go let's go many people let's go"
3104960,3112880," let's go let's go let's go whenever let's go okay so we got all these things so original image was this"
3112880,3120000," all right so the luminance is a second sometime okay so we read that because it's modified and"
3120000,3126640," most importantly gradient uh yeah so we detected the edges so that was easy"
3126640,3136160," okay so who needs python and numpy and some other you can do all of that in c"
3137120,3145920," you can do all of this shit and see fucking easy uh so it's just like yeah and we generated this image"
3145920,3152480," with pre-trained convolutional neural network with the hard-coded weights in the source code this is a"
3152480,3158400," small mini convolutional neural network and it helped us to pre-process the image"
3159600,3165680," so that yeah so as you can see this is a small convolutional neural network okay so we've got the"
3165680,3173360," energy field right we've got the energy fields that we can use for the seam carving now um so the only"
3173360,3181200," thing we need to do we need to probably apply this um dynamic programming algorithm to figure out the"
3181200,3187520," shortest path right so um i'm still not sure like what exactly gonna be is the function that is used in"
3187520,3194880," there uh they don't really tell us uh right we'll see we'll figure it out so i'm registering for one hour"
3194880,3201200," and it ran out of tea uh so i think the time has come to make a small break and refill the cup of tea"
3201840,3207840," and after refilling the cup of tea we're going to try to uh you know uh continue doing this entire"
3207840,3212800," thing specifically dynamic programming right so we're going to try to find the shortest path"
3212800,3218880," that sums up to the smallest amount of energy right so and the energy field is going to be"
3218880,3224960," this gradient that we managed to create with the sobel filter right this is actually super cool"
3226480,3234880," anyways let's make a break um okay so we need to understand how you compute the um uh the energy"
3234880,3241280," for these themes so apparently after discussing with the chat um it it is just the sum right it is just"
3241280,3249200," the sum we can take a look at the uh the original paper so to speak um so i didn't look into the paper"
3249200,3259040," itself right but i watched the video i watched the video and in the video uh so just a second i'm going"
3259040,3263360," to actually mute this entire thing and i'm really becoming to watch this video because like it really"
3263360,3270800," inspired me to to do today's stream uh it explains this stuff too freaking well uh so look at that look"
3270800,3277440," at the explanation like look look how it's going to look like so holy so this is what"
3277440,3283360," this algorithm is capable of doing this is what this algorithm is capable of doing so it's aware"
3283360,3290640," of the content so to speak it's so freaking cool love it um all right so and the fact that all of"
3290640,3297120," that is just like unsupervised right so you just give it and it just figures out itself that's beautiful"
3297120,3303280," no ai no any just math but i mean you can argue that ai is also just math but whatever it's data"
3303280,3312240," driven right this is not data driven um so let me let me see so finding the sim uh right so finding the"
3312240,3322080," optimal sim argmin so i suppose it's just like um what is the freaking mathematicians using their"
3322080,3332000," notations and shit um so oh okay so if um yeah so if this what they're doing here is dynamic"
3332000,3338240," programming right uh they are taking a minimum between the previous solutions of the dynamic"
3338240,3342240," programming and they added it to the current energy level so that means it's literally the sum"
3342240,3347760," it is literally the sum i can i can see that so i don't understand this mathematician"
3347760,3352720," bullshit right but this is a programmer's bullshit i do understand programmers bullshit so i understand"
3352720,3359680," this one so this is literally some accumulative uh costs metrics yeah yeah yeah okay so that's cool"
3359680,3362640," that's cool that's cool uh dynamic programming"
3362640,3374160," uh so yes yes yes yes yes yes um what i'm thinking is that maybe i want to factor out some of these"
3374160,3381920," functions in here right so essentially uh the function that computes the luminance of the of the image"
3381920,3388800," right so that would be kind of cool um so and this one is going to be maybe returning something like this"
3388800,3398320," uh right it's going to be accepting the the pixels right so pixels uh int width"
3399120,3407600," int height so i'm gonna factor out some stuff that i shared it out in here right so namely these things"
3407600,3414800," uh right so we just pre-allocate uh this thing by width and height then we iterate in the pixels"
3414800,3422560," then we're doing that and then we just return this entire thing uh right and effectively luminance"
3423600,3430880," is going to be pixels width and height obviously all of that leaks the memory but who freaking cares we"
3430880,3437760," are not doing like a long running application that needs to run 24 7. it's just it's a batch application"
3437760,3441760," all of the memory that we allocated in here is going to be allocated by operating system at the end"
3441760,3448560," doesn't matter so no need to really free anything i still freeze some stuff in some of the places but"
3448560,3454640," this is these are like places that potentially can be run in a in a loop right so and it's better to"
3454640,3460560," actually delegate some stuff in here here at the top level it doesn't really matter honestly um right"
3460560,3466640," so this is the luminance and let's introduce something like a gradient um you know what i'm"
3466640,3471120," gonna literally call it a sobel filter this is actually kind of cool so this gives me an opportunity"
3471120,3476560," to give like a cool names to this entire ship right so it's gonna be matte uh width and height"
3476560,3481520," like imagine you accept in the matrix and you apply a sobel filter into it i think that's pretty freaking"
3481520,3490080," cool um right and here we can just like grab this entire stuff uh right put it in here and just return"
3490080,3504800," the grud uh like so and in here uh we're gonna just doing uh sobel filter plum width and height yeah so"
3505760,3511360," this is literally the reason why i wanted to factor all of that out uh because i'm loading an image"
3511360,3516240," i'm computing the luminance of that image right so analyzing meaning max just to get the idea what"
3516240,3522560," the fuck is going on then i'm dumping it to into a file so i can inspect it later then based on that"
3522560,3529040," luminance i computed gradient of it by applying sobel filter which implies that i can have different kind"
3529040,3534240," of filters for this kind of stuff right i also normalize it in here so then i can sort of dump it in"
3534240,3544000," here which is rather interesting so can i normalize this stuff inside of the yeah inside of the dump"
3544000,3548880," matrix this is actually a cool idea i think normalization has to be applied inside of the"
3548880,3551440," dump matrix so the outside i don't really care about it"
3554160,3563840," i think it is true i think it is in fact true so honestly um maybe the way we can do all of that"
3563840,3573120," though the way we can do all of that is rather interesting so we are taking the matrix and we need"
3573120,3579680," to take its mean and max right so we want to take its mean and max and we're literally going to do mean and"
3579680,3591280," max so mat width height uh mean and max right so and as we work with all of that we can just normalize"
3591280,3598960," it like this in here we can just normalize it like this in here uh which means that we don't really need"
3598960,3605680," that normalize right so we normalize it in place and then multiply by 255 um right"
3605680,3615120," so i can just call it something like t all right so it's a normalized value t and then multiply 255"
3615120,3621200," convert the u int and then blah blah blah blah blah blah blah blah blah blah so because of that normalize is"
3621200,3627600," not really needed by itself right so there's no other really application for that function anymore"
3627600,3638720," right so you don't need that also we may want to take a look at the grad uh grad mean mean and max"
3638720,3645680," and there we go so we factored all of that out uh so let's go ahead and just try to recompile this"
3645680,3657280," entity i think so it's mn what else we have in here so uh yeah this one is an input all right so that"
3657280,3663520," means here we have to do mat uh-huh okay that's cool"
3668480,3675680," all right so we factored out all these things successfully so here is that uh and here is that"
3675680,3685440," okay so i suppose the time has come to now compute the dynamic programming table right so essentially"
3685440,3692640," just like iterate from left to right and just do the dynamic programming thingy um so maybe i should have"
3692640,3701680," not close that specific image uh from the paper right so let's go ahead and just open it up all the time"
3701680,3704400," maybe i should have actually screenshot it or something like that"
3716400,3724960," so where is the dynamic programming here it is yeah so we're looking at minus one minus one"
3724960,3737440," then um minus one j minus one so we're literally looking only at these things at this theory so okay"
3737440,3742720," fair enough fair enough so we can think about it as like a two-dimensional convolution"
3744320,3750880," yeah it's kind of funny it's kind of funny anyway so it's posed right so perfect um"
3750880,3758320," we need to allocate more uh you know memory for all that so let's do malloc"
3758320,3768240," it's gonna be size of dp uh and we're gonna multiply the width and height uh and of course obviously we"
3768240,3774800," want to insert that this thing is not equal to null uh right and we're going to be just iterating row wise"
3774800,3776480," and column wise and stuff like that"
3776480,3786480," though i suppose the first um column the first column has to be allocated"
3786480,3790800," um has to be allocated"
3791680,3796960," basically initialized with the gradient right so we can just iterate"
3796960,3802880," x uh and then x then width something like plus plus x"
3802880,3809120," uh we should start with the second row exactly exactly so this is like a classical dynamic programming"
3809120,3818080," right so uh classical dynamic programming um so this is going to be a row is zero but x is going to be"
3818080,3825600," equal to grad zero x so we're literally just copying a single row right so we're initializing the single row"
3825600,3833280," and effectively at some point i would like to also dump this thing as a as the image as well"
3833280,3838000," right so uh we'll see how it goes so maybe it's not going to have"
3838000,3843440," uh negative values i don't think so right because everything is positive so it's going to be"
3844320,3848080," all of that all of that is going to be basically positive so that means we should be able to use"
3848080,3854000," our dump mat function there as well it will normalize everything and just like print print"
3854000,3859520," perfectly uh okay so we need to start iterating from one uh right so it's going to be height plus"
3859520,3870560," plus prime uh right and what do we have in here so um so we can have actually interesting situations"
3870560,3882800," in a sense that uh we can go out of bounds which is understandable as well so we can do uh maybe"
3882800,3890240," something like dx damn it like i as i already said it feels like a like one dimensional convolution"
3890240,3896320," right so it does in fact feel like one dimensional convolution which is really funny um so we want to"
3896320,3908320," start with the x in here because of that maybe i should call it cx uh cy cy and cx uh cx zero cx less than"
3908320,3919440," width like so plus plus cx uh there we go and honestly c doesn't really have to be y if you're asking it"
3919440,3924480," just it just has to be something like this x is going to be uh cx"
3924480,3936240," so we need to iterate uh this into stuff we need to iterate this entire stuff so it's going to be"
3936960,3948320," dx minus 1 dx equal to 1 plus plus dx uh huh afterwards we're going to have x which is cx plus dx"
3948320,3958240," right and the most interesting part is that you can we can have a value which is depending on whether we are"
3958240,3968160," within like proper x zero less or equal x and x is less than width in that case we just do um so the"
3968160,3974720," value that we really care about right the value that we really care about is dp y minus one specifically"
3974720,3980400," x otherwise if we out of bounds for whatever freaking reason is going to be zero right away"
3980400,3985840," right and what's interesting is that here we're computing the minimum according to this specific"
3985840,3991600," formula right so we're computing the minimum because we're trying to find the minimum path minimum sum"
3991600,3998000," uh right so because of that we need to uh have this kind of thing so this is going to be it's called m"
3998000,4007280," so since it's a minimum it has to be flt flt max right so and if uh value is less than m that means"
4007280,4012480," m is the value right so because it's it's less than the minimum so that's what it is"
4013280,4018560," all right so that's pretty cool you know that's pretty cool you know"
4018560,4030480," so now what we have to do we have to apply the dp which is going to be y cx"
4033760,4046320," equal to grad y cx plus that m that we computed in here and that basically gives us the dp all right"
4046320,4054320," so and that dp is going to be useful for computing the uh specific seam that you want to either extend"
4054320,4063520," or remove right so that's basically what's going on in here so afterwards we probably want to i just"
4063520,4068720," want to analyze the min max just to see how they look like so what's going to be the minimum what's"
4068720,4075840," going to be the maximum so it's going to be just dp uh let's go it doesn't even compile freaking uh"
4075840,4081600," subscribe oh yeah i freaking remember all of that so it has to be multiplied by width of course because"
4081600,4091680," it's a single uh you know one dimensional array that's what it is one dimensional array"
4091680,4095600," hope i didn't do any fucky whacking"
4095600,4107120," uh all right let's go so what else yeah we also have these sheets multiply by width plus x let's go"
4109200,4117040," uh we're good oh gucci are we tamaguchi yes we generated some images and shut okay so yeah"
4117040,4129920," surprisingly it's maximum is four huh which i mean is understandable sure sure it's probably"
4129920,4136480," understandable not really though but um so we were looking at the previous ones"
4139360,4148000," yeah should be fine should be fine i didn't expect that honestly but okay um so let's just dump the dp png"
4148000,4155920," right so it's gonna be dp oh yeah i see what's going on of course of course of course"
4161440,4167040," all right so what do we have and yeah that's what i'm talking about 81"
4167040,4176560," uh which is not that much honestly it's not that much it's fine uh let's go ahead and just dump"
4176560,4183760," uh the the image in here all right so we'll just go ahead and dump the image and just look inside of"
4183760,4194000," this entire thing zero times width yes this is needed for the symmetry"
4194000,4198640," um the compiler is going to optimize it anyway so who cares"
4205280,4212720," not bad so that's kind of you can kind of see the person in here for instance"
4212720,4220640," so just like and the the building and stuff right so that's kind of cool"
4220640,4223760," very like that"
4227680,4237040," so so and using this dp we're supposed to compute a sim right so we're supposed to compute the sim so"
4237040,4242480," i suppose we're gonna start with the bottom right so we start with the bottom we need to find"
4243840,4253280," like the minimum um you know the the minimum summon there right the minimum summon there and we need"
4253280,4262640," to start working upwards we start working uh like working upwards and i suppose just removing the pixels"
4262640,4271840," simply removing the pixels uh right and i suppose we can write a function that just picks the minimum"
4273360,4279600," uh sim builds a sim and removes it and we can repeat that function several times and it will"
4279600,4285280," effectively shrink the image as much as it can preserving the details of important objects the"
4285280,4290480," objects with the highest amount of energy and we can see that energy in here right so to do"
4290480,4295920," fair this is not really the energy uh right so the actual energy is something like this but i mean"
4295920,4302800," this is just like the uh the map that helps us to compute the uh the minimum right it's the map that"
4302800,4312880," helps us to consider the minimum dark spot near the the yeah this is weird honestly i have no idea what"
4312880,4320720," causes that it shouldn't be a thing in all fairness in all fairness it shouldn't be a thing um"
4323120,4327280," so yeah if we take a look at the gradient in here"
4327280,4330880," i don't really know what it is"
4330880,4342560," that's a really cool looking picture error in the normalization function probably"
4344160,4353600," something with the normalization got up so dump mat dump mat what exactly are we doing in here so we"
4353600,4357040," kind of we compute this entire thing only like once"
4357040,4364000," uh maybe it just gets overflown or no i didn't think so"
4366000,4367200," honestly i don't think so"
4367200,4381280," um maybe it should be minus"
4381280,4386800," yeah it should be actually minus thank you thank you so much"
4389840,4395600," so because you have a value as a minimum you subtract it to yeah okay so that explains it so"
4395600,4401360," that's probably what it was and so that means the other images were kind of incorrect slightly"
4401360,4405680," right so okay let's take a look at them then uh so luminance"
4405680,4411200," uh it's kind of the same looks it was kind of the same a gradient"
4411760,4420080," uh it's also kind of the same and now dp uh yeah now there is no such patch in here so i guess that patch"
4420080,4428560," was the only sort of problem uh okay sure the the thing i want to do now uh the thing i want to do"
4428560,4438800," i want to draw the path so to speak uh right to draw the path what i want to do i want to iterate"
4438800,4448080," the x right so it's going to be x less than width um right and essentially what i want to do i want to"
4448080,4458560," find the index of the minimum path the index of the minimum path how can we do that um so we can start"
4458560,4468640," with something we can actually start with using index um zero right so"
4468800,4474880," and we can just start iterating from one and we can just keep comparing with that so if dp"
4474880,4489600," y actually not y height minus one um x is less than this thing we found a new thing so i becomes x"
4490160,4504000," right so afterwards we can say uh the minimal seam starts at column uh and let's put i in here right"
4504000,4510560," because i just really want to see that so maybe dumping all of that is too much right actually"
4510560,4516720," dumping all of these things takes too much time but anyway whatever um let's do that nonetheless i keep"
4516720,4523120," forgetting maybe we should like write a macro for the syntax thing i think writing the macro would be"
4523120,4527840," beneficial but i mean right now it's going to just take too much time anyway uh"
4527840,4533520," uh right so did i do that correctly i think i did it correctly"
4536800,4546000," all right all right so luminance we generated that that's and okay the minimal seam starts at really"
4546000,4552880," did i do a fucky wacky that's kind of bizarre that it starts in here"
4552880,4558880," is that even correct that is truly sus"
4560800,4568160," that is truly sus one of the things we can try to do is maybe yeah i don't know"
4568160,4574240," it's like oh but what is the maximum then so what if i just switch it around"
4575280,4587840," uh okay so what's what's the maximum so all right show me what you get"
4587840,4598880," and 136 and if we take a look at the file uh what's the resolution of this thing"
4600320,4608560," uh it's actually uh 1428 right and it was like 1300 and something"
4608560,4613840," so yeah i think it is correct so i think it's kind it was kind of accidental"
4613840,4620480," that it starts from there um so but that's fine that's that's kind of fine actually it's kind of fine"
4622000,4624400," um so we found that one x"
4624400,4632560," all right so we can maybe even call it a column instead"
4632560,4638560," so this is more of a column um yeah"
4645360,4656560," so we found that one and afterwards we can try to move upwards uh so we can even do something like y"
4656560,4662480," y um so height minus one actually height minus two"
4662480,4670480," y greater equal than zero right so minus minus y so we're moving upwards we're moving upwards"
4671120,4678960," and as we move upwards we are basically repeating whatever we had in this dp uh just trying to find"
4678960,4687040," all these things so here is an idea that i have uh i'm gonna go into the pixels and in here i'm gonna"
4687040,4694480," just literally take this column i'm gonna literally take this column and i'm gonna place a red color"
4695440,4704160," a red pixel in there right i'm gonna place a red pixel in there and as i go upwards i'm gonna be keep"
4704160,4713360," placing red pixels in there right um so and that way we'll be able to see that sim so"
4713360,4724480," um what's cool is that what's cool is that so let me let me see so imagine that we have an image"
4725680,4732400," right right so that's the image uh pixels uh the problem here is that in the memory it's actually"
4732400,4738960," flat so it looks more like this right so there's no spaces and there is just like a you know flat thing"
4738960,4747920," uh what we want to do we want to be replacing like literal columns right we want to be replacing"
4747920,4753040," literal columns but since it's like flat in the memory it's not that easy to do that"
4754000,4760400," so what i'm thinking is that we're going to be actually leaving a little bit of a space in"
4760400,4767440," here so as we keep removing the seam and it's going to be in random places right so it's going to be in"
4767440,4776000," random places like so but at the end of the day you gonna have the rows of the same the same amount of"
4776000,4785520," columns so we can actually use the notion of the stride to remove the pixels"
4785520,4792960," we can use the notion of the stride so we can just use the same buffer into which we loaded the image"
4792960,4799840," right and as we shrinking the image down we're using the same buffer but we're just increasing"
4800400,4805520," the stride so we're decreasing the amount of columns but the stride stays the same that way"
4805520,4812720," um we can just save the shrink down image so i'm just thinking about how like to to manage memory and"
4812720,4814800," stuff like that yeah"
4814800,4829680," okay uh team epic four thank you so much for twitch prime so all right let's continue drawing this team"
4829680,4839120," continue drawing this team um so we need to do this iteration with dx and stuff like that all right so it's"
4839120,4849680," going to be dx uh and what we need to do in here is that we need to pick this thing accordingly"
4849680,4857360," so we need to pick the next column we need to pick the next column so how can we pick the next column"
4857360,4866480," um so i'm gonna call it next column right so and the next column could be"
4868240,4874320," honestly the current column right so we can just say okay that the current column is the so the next"
4874320,4881920," column right so just like the next best thing anyway um so yeah"
4881920,4898080," and then what do we do we see if like we need to take the dp we take y the current y which is one"
4898080,4911040," minus um plus um plus the next column that is not true that is not necessarily true so we need some sort of like um"
4911040,4922480," um so this is an offset this is an offset this is an offset this is an offset so it's an offset from"
4924480,4927840," from the current column from the current column plus dx so this is"
4927840,4934960," sort of a potential it's it's a potential new candidate that's what it is uh right so it's a potential new"
4934960,4941040," candidate so if we do x and that thing is for whatever reason um"
4945360,4953440," that's pretty cool actually for whatever reason"
4953440,4956080," less than column"
4956080,4964960," it's kind of weird but i mean it may work honestly it may actually work"
4966800,4976240," uh but but but it has to be only if x is within the boundaries right so x uh zero less equal x less than"
4976240,4983920," width only then it is like that damn that makes too much freaking sense we can even maybe combine all"
4983920,4995200," that's the uh right for extra uh golfiness all right so it's just like yeah we use the column as the current"
4995200,4999760," candidate and we just like peak that's a pretty good way to do that honestly"
5001680,5010640," it's actually a good way to do that and after we just found a new column we simply do it like that"
5010640,5018800," right we simply do it like that and uh we can just go ahead and save"
5019920,5025200," um that thing so stbi write in the image"
5025200,5036960," so we're writing so file path this is going to be out file path this is also out file path uh right"
5036960,5045360," and that out file path is going to be a sim png right we're going to be drawing a single sim"
5048560,5052640," all right i like what i see i'm not sure if it's going to work but we'll see we'll see"
5052640,5058640," so what what do you what do you say oh yeah this one is just like uh return one in this case"
5058640,5065760," because we don't have a defer we don't have a deferring here um okay so we have we have"
5065760,5076160," a boom i said boom yeah boy uh all right so we generated do generate the sim"
5077680,5084880," do you see the sim i don't freaking see the sim um oh"
5084880,5097680," okay uh that's cool that's already something uh let us see oh i see i see i see i see i see"
5097680,5102560," that's that makes sense one more time one more time"
5105840,5111600," small stream yeah so we're almost done i think i'm pretty sure we're almost done"
5111600,5117280," with this i think if nothing bad happens uh"
5117280,5120880," well that is funny"
5120880,5127760," i mean that is a valid way to define that honestly"
5130560,5136800," right who who said that this is not the minimal path or path honestly who said that is not the"
5136800,5144320," minimal path maybe it is right so maybe it freaking is um so another interesting thing would be to"
5144320,5153440," maybe actually pick not the smallest column in here but something in the middle uh maybe i'm going to even"
5153440,5161840," use this super comment uh right so i'm gonna be else and if so i'm gonna say column is basically half of the"
5161840,5168000," width let's say that this thing is going to start from like you know half of the width and let's see how"
5168000,5176400," that specific sim is going to behave right so how is it going to behave it's going to behave nice or is it going to be something else"
5176400,5182560," uh we'll see let's see all right so now now we're freaking yes"
5182560,5192800," now we're freaking talking now that looks like a seam so yeah i suppose it just it was the minimal thing"
5192800,5202560," it was the minimal thing in there so and the idea basically the idea basically is to just remove these seams"
5203920,5210240," just simply remove the seams i don't know the strategy of removing these seams um how do you remove them"
5210240,5216560," do you remove the smallest one do you constantly recompute them as well like every time i think it"
5216560,5221280," does make sense to constantly recompute them um so i'm not 100 sure"
5221280,5231280," so what's the strategy on on removing them but what's funny is that what's funny is that we can"
5233280,5244000," um instead of placing like um a red pixel in there what we can do we can try to do mem move"
5244000,5252400," to remove that pixel like technically like upset an entire thing this is something that we can do in"
5252400,5263040," there right but that will also mean that we have to update the gradient right so i'm not quite sure do we"
5263040,5268560," have to recompute the luminance and gradient and dp and stuff like that do we really have to do all of"
5268560,5280000," that stuff um because kind of yeah i think we have to do all of that stuff like every time we remove one"
5280000,5283600," thing uh it may change the details"
5286880,5297280," yeah recalculate everything yeah so that means um so luminance probably luminance can can stay the same"
5297280,5305360," right so because it's kind of independent gradient has to be recomputed dp has to be recomputed um"
5305360,5314720," and so we probably don't want to reallocate the memory or anything like that so we need to keep track of this stride"
5314720,5324320," um i guess each iteration starts a new like a brand new image yeah but i mean that's a lot of memory"
5324320,5330240," reallocation deallocation and stuff like that so which might be very expensive and very slow and we're"
5330240,5341680," already kind of slow in here though i feel like uh the slowness right now comes from dump uh dump mat so we"
5341680,5360000," can kind of uh do something like this uh and if um dump let me define dump mat like so uh and let's just try to do it like that so hopefully it will be faster if we don't dump in the images"
5360000,5372640," all right so what if i don't dump this thing as well how quickly is it going to go if i just don't do that"
5372640,5388240," um so yeah that's pretty fast that's pretty fast but anyway anyway anyway anyway anyway um so maybe it makes sense to"
5389440,5400880," introduce to introduce to introduce a notion of the matrix notion of the matrix where"
5400880,5407600," essentially you also have a stride i think that's a good idea by the way since those things are used"
5407600,5417120," only in sobel operator sober operator we can put them inside of it right so i think i think that makes sense"
5419120,5426880," uh yeah that compiled perfectly so that's cool uh so the thing i want to do i want to introduce the matrix"
5426880,5433680," right so which is going to be sort of like a view on the matrix so again matrix uh it's kind of similar"
5433680,5439920," to what we had in an end of the age right so it's kind of similar to that so items uh it's going to be a pointer to"
5439920,5446080," that uh we're going to have uh rose maybe columns like width and height let's call it width and height"
5446080,5450640," because we already kind of depend on the notions of width and height and we also have a stride"
5451360,5464800," uh stride okay so yeah um and afterwards that will enable us quite easily remove"
5464800,5473440," um you know certain things remove the the columns right because that's one of the things we want to be"
5473440,5478320," able to do we want to be able to remove the columns"
5478320,5484960," so and we're also keeping track of the strides so one of the things we probably want to do we want"
5484960,5493280," to be able to unlock the matrix matrix unlock uh so it's going to be a size width and height"
5494880,5499680," honestly we're already using integer everywhere so maybe i'm going to continue using integers"
5499680,5508960," like so i think that makes sense uh mat mat uh maybe even something like this mat items"
5508960,5517280," it's going to malloc uh size of float multiplayer by width and height"
5520000,5535920," mat width width width height and stride something like this and then we return that so just allocating this"
5535920,5548080," kind of thing um so that helps to to to do all that stuff um so then what i'm thinking is that"
5550480,5556320," when we're computing the luminance maybe what we have to do is just pre-allocate all of these"
5556320,5565520," matters luminance gradients and dp right so we're just pre-allocating all of them um so let me even"
5565520,5572880," maybe do it like that so it's going to matrix matrix uh mat a look a look"
5576240,5584880," done like this and then like this cool and these functions luminance they're not going to be returning"
5584880,5593280," anything so they're going to be accepting this stuff um we you can even do it like that so this is going"
5593280,5601600," to be just loom uh and that is pretty straightforward honestly that is pretty straightforward um so it doesn't"
5601600,5610720," even by point right so because it's sort of like a slice uh right so we can just do it like that um this"
5610720,5619760," one hmm we can do something like um just a metric so this is the input and output is going to be grad"
5619760,5627440," yeah and we don't have to even allocate this kind of thing anymore so this is just"
5627440,5634720," that so the reason why i'm doing it like that is because now i can just do luminance and when we're"
5634720,5644720," analyzing this kind of thing again we don't really need that stuff anymore yeah so let's put it this way"
5644720,5650800," and this is a sort of like a major factoring but this is something that really was really needed"
5652720,5663520," yeah so now we are doing that in terms of this sort of things so this is going to be sobel"
5663520,5677680," yeah luminance uh grad okay i think that's basically enough right so that's basically enough uh we just need"
5677680,5685520," to go to the compilation errors now right so i think we've collected enough of the things so yeah when"
5685520,5694160," i'm passing matt uh min and max all right when i'm passing in max what i need in here is effectively"
5694160,5699920," just the matrix right so right now i just need to grind the compilation errors nothing particularly special"
5700880,5708160," uh right but this one is rather interesting because now we have stride now we have stride so because of"
5708160,5716080," that uh because of that so no assert yeah i think i need to put an insert in here assert that this thing"
5716080,5723440," is critical to know so i need to have a macro that allows me to easily access all of that stuff so define"
5724080,5734000," mat at uh so it's gonna be mat row column all right and essentially in here mat items"
5734000,5745360," uh then we do a row multiplied by mat stride not width right so because width can be smaller than stride"
5745360,5752000," plus uh the column and all of that has to be actually uh wrapped in this kind of thing"
5753280,5760080," um all right so let's go back uh so in here what i need to do i need to actually iterate"
5760080,5769600," y um like so less than that plus plus y same goes for x"
5769600,5774720," with x and in here now"
5776720,5783200," i can move that stuff so it's gonna be met at yx"
5783200,5796480," and to be fair we can just do value so this is the value this is the value the rest of that stuff"
5796480,5803040," are values all right so we just like read it once maybe into a register uh right so this is how the"
5803040,5808880," compiler is probably going to optimize it and then we're just like figuring all that stuff out hopefully"
5808880,5815440," okay let's go through the rest of the things uh mean and max so we're passing only that stuff so we're"
5815440,5820720," passing the metrics and we're getting mean and max and we're just like printing all that stuff uh what"
5820720,5831120," else that we have in here so mean and max it again uh what else uh huh so pixels when we dump in an image"
5831120,5835760," yeah so we have to do mat width mat height"
5835760,5843600," yeah so and effectively what we're doing in here here we'll also have to"
5843600,5846880," do this kind of thing yeah yeah"
5846880,5854880," so that's a sort of refactoring that i didn't really anticipate but it's really needed otherwise"
5854880,5860800," like i can't properly do the thing that i want to do uh all right so yeah"
5860800,5868640," sometimes like you have to pay off the technical debt right so i was just taking the technical debt as"
5868640,5874080," much as i could but i mean it hit me like a truck it literally hit me like a truck and there's nothing i"
5874080,5884720," can do about that sad truly sad so here is i y multiplied by mat width right and yeah this is how it's gonna go"
5884720,5890720," about that and it's just plus x so this is just i but in here it's gonna be mat at mat"
5892720,5901200," y and y and x so do we always do that correctly yes and so this is this is fine um so might as well even"
5901200,5904640," yeah so it's already taken so let's start to define"
5904640,5913280," uh so pixels like a mat but i mean they do they are different types i can't make them that"
5915360,5921520," i can't make them that i'm gonna close the chat all right so what do we have in here"
5921520,5925040," so what we got"
5925040,5935440," so okay so this is a matrix so and i can't easily do that right so it was so easy to take this technical"
5935440,5940160," depth with just like iterating as this thing as a fly i think and it's just like me up"
5941600,5946080," fuck me a big time now i have to get rid of all of that um so"
5946080,5954160," freaking so that's what happens in software development you think you can just quickly"
5954160,5958240," do that and then just like no fuck you refactor everything fuck you"
5958240,5964960," uh okay so luminance and uh yes it's gonna be met at"
5967680,5978000," y and this is pixels and that specific pie has to be y multiplied by luminance was that like a height"
5978000,5983680," and what's interesting is that they potentially can be"
5983680,5990720," desynchronized like width and height of this thing so you you kind of have to assume that"
5991920,5999040," width is equal to loom width and height is also the same thing in here otherwise it's just gonna"
5999040,6006240," have a bad time otherwise you're gonna have a bad time so yeah something like this so we just"
6006240,6014240," compute the luminance and stuff like that okay we'll go what else do we have in here uh so we don't have to"
6014240,6020880," return anything we don't have to return anything so here's sober filter another interesting thing in here"
6020880,6025520," also right so their shapes have to be synchronized otherwise again you're gonna have a bad time"
6026240,6038080," uh grad width uh and also height width and also height uh what else do we have in here so we are iterating"
6038080,6053600," what uh i suppose mat mat uh and gd blah blah blah blah blah blah blah blah mat at and here we have y and x"
6054880,6074720," uh huh and then we don't even have to return anything because it's an output that's good that's gucci that"
6074720,6082960," is in fact my gucci and in here we can just do that can you see scheisse i think you can't really see scheisse"
6082960,6092080," but maybe now you can uh all right so analyze blah blah so that's very easy i think we're almost"
6092080,6097840," done with the refactoring so sobel filter yeah so we don't have to provide these things anymore"
6097840,6105840," uh right so we don't have to provide these things anymore uh what else you have to do that"
6105840,6111680," uh this one is good right so because now we don't have to do this cryptic thing"
6112560,6120080," uh so can here we can just do something like that so that makes more sense because i saw people in the"
6120080,6126000," chat asking zero multiplied by weight so so weird why do you write it like that so then later i can"
6126000,6134320," refactor it like that this is like whoever asked in the chat why did you write zero multiplied by width"
6134320,6140400," like that like that that doesn't make any sense so i did it so now i can do something like this right"
6140400,6146000," so i explicitly write it out the intent"
6146000,6154960," so almost 20 years of software development that's what it does to you you start to notice these kind"
6154960,6160320," of things you start to write a code that doesn't make sense for other people but i mean it encodes the"
6160320,6169760," intent so then later i can refactor it like that so now hopefully that answers the question right so"
6169760,6176960," that was the reason that literally the reason uh because i can kind of plan ahead right so i'm"
6176960,6180080," planning ahead how i'm going to be refactoring the code um"
6180080,6190960," okay so this is going to be like this and just like that"
6197760,6208960," so now we're gonna have this kind of thing all right so that gets really really cool"
6208960,6216240," uh so analyze we don't have to pass that stuff anymore hopefully i didn't break anything hopefully"
6216240,6223200," i didn't break that i could actually break something it feels like i might break something at some point but"
6223200,6231360," we'll see we'll see we'll see probably we'll have to debug some of this stuff uh right because this is c"
6231360,6236880," like i could never expect anything working in here"
6244160,6250720," didn't even sick fall by the way didn't even sick fall all right let's take a look at the luminance uh"
6250720,6251520," does it look correct"
6251520,6257840," oh gradients uh yep"
6257840,6265840," very cool so i suppose they all kind of up in the same like similar way"
6266720,6277520," uh let's see what exactly is wrong in here uh so matte width um yeah"
6277520,6287280," that is kind of bizarre honestly that is kind of bizarre so we can just start by scaling down to"
6287280,6295440," luminance right so we located the luminance and then um we just did that"
6296720,6306000," uh right which is did that and then dumped this entire thing so i don't think there is a problem"
6306000,6312240," anywhere in here i don't really think so so let me take a look at the mat uh row multiply by stride"
6312240,6316000," when we allocate stride is equal to width so everything is correct in here everything is correct"
6316000,6325920," so there must be something in dump mat but what is it what is it actually"
6325920,6333920," um all right so we pre-allocated mat width and mat height"
6333920,6336880," uh-huh"
6340240,6345120," but i mean it doesn't really matter it shouldn't really break in that specific case"
6345120,6348000," honestly"
6348000,6352000," i don't see an error"
6352000,6358480," grand max was much bigger than before refactoring so long is probably wrong"
6358480,6364720," uh okay let me first check it myself okay so people are starting backseat really hard"
6365360,6369360," uh all right so let me see let me see"
6369360,6381680," do i see any errors in here do i see any errors in here i don't think so it's just like everything so"
6381680,6386880," except maybe this particular part but i mean it doesn't really matter so it definitely has to be"
6386880,6394640," width and height that's for sure so definitely has to be width and height uh so illuminance um"
6394640,6403760," oh all right so that's that's fine"
6406880,6414720," dang okay so let's take a look at the illuminance"
6414720,6428640," okay gradient gradient gradient is fine uh dp dp is fine and the seam the seam is fine okay okay so we"
6428640,6436720," refactored all of that without breaking anything hopefully at least in a visible manner um all right"
6436720,6445040," so what that means what that means what that means honestly like do they even specify how exactly"
6445040,6453680," they're like what's the strategy of removing the seams do they just randomly pick the seam or do they um"
6453680,6459920," maybe they're just randomly picking it so maybe that's the that's the thing here"
6460880,6468400," maybe they're just randomly doing that um and honestly also um luminance"
6468400,6475600," we need to keep stride uh for the"
6475600,6486560," for the pixels as well that's the problem so i suppose one of the things we need to do is to also"
6486560,6494400," introduce a thing called an image right so i didn't want to do that uh but looks like we have to do"
6494400,6498880," that honestly looks like we have to do that otherwise it's going to be kind of difficult to"
6498880,6507280," to achieve all of that so this is the pixels and uh here we're going to be having width and height and"
6507280,6511600," stride might as well i think it makes sense to actually put it like this"
6511600,6521760," uh there we go and similarly uh to be fair we can just use the same thing in here right so we can just"
6521760,6531280," use the same thing in here um so when yeah luminance we have to accept the image i suppose let's"
6532720,6538000," uh they're called pixels honestly right so they have different name in here so because of that i think"
6538000,6547040," let's call it image g right because it's also going to be three letter word so here we have image g"
6547840,6550400," and this is pixels yeah boy"
6550400,6561520," so luminance image right"
6561520,6565360," so this is going to be imaging"
6568000,6574320," and so since we're iterating this entire thing uh i'm doing image g at"
6574320,6578320," image g y x"
6578320,6582480," something like that and we don't need that stuff anymore"
6582480,6591840," let me go let me see where we directly refer to pixels when we dump in this thing"
6592640,6600160," well it's not that different right but we could pre-allocate an image uh just to make it easier"
6600160,6608160," for us to do this kind of thing but we don't really have to yeah luminance uh and this is the original"
6608160,6618800," image all right and in here we can just say pixels is pixels uh width is width uh height is height"
6619840,6625520," and width is stride so and then we can just do imagery"
6625520,6636560," image to loom learn to grad grad to dp and maybe yeah so"
6636560,6648320," um maybe we literally could implement a function grad um you know to dp or something like accept the grad and"
6648320,6656400," and just does dp and we can move this entire thing there uh right so grad to dp"
6656400,6663520," like so so this is going to do that and it accepts the matrix grad"
6663520,6672000," grad and matches dp it also asserts that they have the same dimensions"
6673600,6683600," width dp width width and also height right so grad to dp so that simplifies the code a little bit"
6683600,6686800," honestly we can put this stuff in here"
6686800,6696800," um yeah yeah so we uh loaded the image we constructed it then we pre-allocated some stuff"
6697600,6704080," um right so the commuted luminance analyzed everything dumped it so we'll filter analyzed"
6704080,6710560," dumped it gradient to be analyzed dumped um all right and this is where we start doing all of these"
6710560,6724640," things so um yeah so essentially we can now put that into a step into some sort of a loop right so as"
6724640,6734880," soon as you somehow somehow removed one column from the image somehow you removed one column from the image"
6734880,6746880," you effectively uh can reduce the width keeping the same stride keeping the same stride and you can"
6746880,6753120," repeat the entire process and that does not reallocate the memory except uh you know for the situation when"
6753120,6763280," you do dump mat but i suppose all of that can be you know disabled um right so analyze mean and max i can"
6763280,6772000," move the analyze mean and max in here so then there you can do analyze mean and max like so so all of that"
6772000,6778800," stuff is easily disableable all right so dumping this entire thing and analyzing and stuff like that"
6778800,6780960," so that's pretty cool"
6780960,6789840," um i don't know so the real question is like how do we pick a regional column"
6789840,6793920," how exactly do we pick it i think it's a very good question"
6794960,6804240," um so maybe we could we could pick it randomly that's a very interesting idea like rand um image"
6804240,6811760," width all right so we do rand image width and that picks a random column and the first thing we want"
6811760,6818000," to do with this random column we want to kind of i guess remove it right away we want to remove it"
6818000,6825760," here it's going to be output by the way um so the question is how do you remove a particular column"
6825760,6833280," right um you probably want to use mem move to do that you probably want to use mem move"
6833280,6840160," so you just like move one part of the memory to another one over another one"
6840720,6847600," and like effectively removing one pixel and then you repeat that for each individual row"
6847600,6854880," right you repeat that for each individual row as you climb upwards and afterwards by the way afterwards"
6854880,6863440," you do width -1 but furthermore furthermore you have to do that stuff for the rest of the matrices as well"
6865120,6875920," yeah so that's kind of important luminance then gradient then dp so and then since you're repeating"
6875920,6881040," this process you're going to be recomputing the luminance sobel filter and grad to dp for each"
6881040,6890960," individual of them i think random is mistake maybe it is i don't freaking know honestly so yeah"
6893840,6902640," let's see let's see let's see um the reason why you say that and the reason why you're being so sad"
6902640,6907360," about it is because you are afraid of making mistakes and that's your first mistake by the way"
6907360,6916160," you're being afraid of making mistakes uh right so let me see how we're gonna be uh doing this kind"
6916160,6929200," of shit like imagine uh a b c d e f just do it like honestly who cares if this is wrong right so if this is"
6929200,6936400," wrong we're gonna instantly see that so if we're gonna be constantly afraid of being wrong and making mistakes"
6936400,6944000," and like how we will do anything right so let's just do something and if it fails it fails we're gonna fix that"
6944000,6952080," so it will give us information about what's wrong so i don't know just tell me so like don't be afraid"
6952080,6960640," of making mistakes um school brain damage ironically by the way and this is not to insult like seriously"
6960640,6968720," this is a school brain damage and this is not an insult i completely fucking understand you i have the same problem"
6968720,6975120," right i have the same problem i think our educational system like really damages our brain to the point"
6975120,6982880," that we're afraid to experiment right and i this is something that i also struggle myself like on a daily"
6982880,6990800," basis basically this motherfuckers really like killed my desire to like explore and i sometimes have to force"
6990800,6996560," force myself to just like explore things to not be afraid of making mistakes afraid of being judged"
6996560,7001120," exactly that that's a huge problem because it's a freaking huge problem"
7001120,7011440," so yeah i think like modern education literally damages our brain um so anyways"
7013920,7020240," so what do we have in here so what do we have in here so the destination uh right so if i want to remove the"
7020240,7033120," third element uh so obviously for me so this is going to be the columns element um so the destination is"
7033120,7044320," obviously going to be the um um a row right so we have some sort of a notion of a row um plus the column"
7044320,7050000," if if i just do this plus the column i'm going to be pointing at this thing and that's the destination"
7050000,7057440," so the source by the way is going to be basically the same thing it's basically the same thing but plus one"
7058160,7065520," right and here you have to be really careful because this api was developed by nsa like unironically so"
7065520,7073360," you have two pointers in here uh you have two pointers in here and all the pointer arithmetics is"
7073360,7081360," done in elements of the array right because here i have like i add column amount of elements i add one"
7081360,7091200," element but this motherfucker this motherfucker is not elements it's freaking bytes nsa"
7091200,7098320," what the fuckers intentionally did it like that so you make a mistake and you introduce a fucking buffer"
7098320,7106640," overflow it like mem move like whoever designed this i don't want to say that like i mean"
7108720,7115840," it's so fucking bad it legit feels like something introduced by nsa i swear to god like it's so"
7115840,7123920," easy to make a mistake and confuse elements with bytes in a single function call this is a freaking"
7123920,7129680," crime against humanity i swear to god like i cannot imagine how many vulnerabilities this kind of"
7129680,7137760," should introduce what the fuck what the fuck anyways so"
7137760,7145280," i'm being too dramatic today i'm sorry uh it's not that big of a deal right it's not a big deal just"
7145280,7152080," programming rust just programming us so uh like how many elements we need to to move in here essentially"
7152080,7164240," right so we have six elements in here uh and uh if i just subtract three in here right so subtract three"
7164240,7173040," in here um so which is the column right so which is the column and i will have three and it is not correct"
7173200,7179280," uh right uh right so it is definitely not correct so it means i have to do minus one additional minus one"
7179280,7187280," so i suppose the the amount of elements is more like um image width image width"
7187280,7193040," um minus column minus one something like that"
7195040,7207280," minus column minus one okay so and that specific row actually that specific row is more like image pixels"
7207280,7217360," uh right and um it's height minus one"
7219840,7225120," all right so it's that specific row multiplied by so it's an image right"
7225120,7238800," um multiplied by i'm pretty sure it would be easier to just do image at then say okay take the last thing"
7238800,7246960," but the column is going to be zero right and they just take a pointer to this thing right just take a"
7246960,7254800," point to this thing so that's the role we're talking about and because of that maybe i can just do"
7254800,7263200," something like this all right so it's going to be easier so this entire thing will expand to like um"
7263200,7272000," left hand side expression which i can take a point of um all right so it's more like a pixel row honestly"
7272000,7275200," because there's a little bit of confusion between the role and column"
7275200,7279760," uh right pixel row"
7279760,7289920," so that's how we essentially remove all that so i think maybe this thing should not be called column"
7289920,7295280," maybe it should be called sim i think that would make a little bit more sense because that's what it"
7295280,7302960," is it's basically sim column sim right so that's the same and it's sort of like a moving uh like like"
7302960,7317840," upwards or what not it's moving upwards okay um interestingly what if i introduce y which is originally"
7319920,7323600," something like this but then later becomes something like this"
7323600,7337040," and then i can say why and then i can even repeat this thing several times right first of all i'm"
7337040,7344640," figuring out the sim and then i'm taking the next thing and i just repeat this entire thing like so"
7345120,7350800," all right so we picked a random sim we're starting with this thing"
7350800,7355920," um maybe it is a mistake but we're not afraid of making that mistake"
7355920,7363200," uh we'll see if it is actually bad or not then we keep iterating until it's like negative or something"
7363200,7368800," like that we're figuring out the next scene we're removing that one from the current role which is the"
7368800,7373280," current and then we're reducing this entire thing and the question is like how many times we want to do this"
7373280,7379760," and test it right how many times we want to do this entire stuff so i suppose we can say that we want"
7379760,7388240," to do this entire thing maybe let's say 100 times like we're going to remove 100 of them"
7388240,7396640," so and afterwards when we're printing all of that we're going to say i want to print width height"
7396640,7407360," pixels and this time this is going to be image stride right but in our case stride is in pixels but here"
7407360,7414000," we're going to convert it into the elements um so might as well just use you insert it to see"
7416560,7425440," oh boy so let me go to noob.c noob noob and i just want to rebuild this entire thing and see if it"
7425440,7432320," builds it doesn't freaking build because what are we doing here um yeah so we factored this stuff out"
7432320,7440320," um so we do grad so there they have the same shape so it doesn't really matter so we can just do something"
7440320,7455680," like that um so those we have stride aha so it has to be stride width can you even do that i don't think so"
7457520,7463840," all right seems to be compound"
7463840,7474560," what was that i don't know i freaking know man i don't freaking know so um it would be nice to maybe"
7474560,7484640," print uh some stuff in here um so we disabled all of these things so we're not going to be printing"
7484640,7502560," so we're going to be printing the same d cmd and um um so and we're picking the random one but maybe"
7502560,7513120," that's a bad thing so we have to always pick the smallest one overall we kind of nailed it down uh maybe"
7513120,7521280," we're going to start with just one single scene let's start with one single scene and start very very"
7521280,7523680," slowly let's go"
7523680,7539440," so we suppose okay so we've got the output can't really notice much honestly can't really notice much"
7540160,7545920," but at least it didn't break which is nice which i can appreciate honestly"
7545920,7551440," all right how about 10 how about 10 let's see let's see so 10 seems"
7551440,7562720," all right it's taking some time to to save this entire stuff and let's take a look at the output"
7564960,7575680," it's not super bad uh let's take a look at the file size it's uh 100 um 1418 what's the input what's the input"
7579680,7585920," 28 28 28 28"
7585920,7600480," 18 it literally removed 10 columns now this is dabbing so i wonder if we actually build with all the"
7600480,7606720," optimizations it's going to be faster because i think that's one of the moment when it's worth it"
7606720,7614160," right to optimize everything in here um so i think it is in fact worth it"
7614160,7623360," so it's going to be 20 seconds actually right so while i'm streaming on my old laptop this kind of"
7623360,7631120," compilation is 20 seconds and majority of the time is basically optimizing the stb libraries that's better"
7631120,7638160," so we definitely want to do that for the um uh for the 100 right so if we're going to be carving out"
7638160,7644400," 100 of those things we definitely want to have optimization for this entire stuff so to be fair"
7644400,7650640," yeah whatever this is like a compiler for one parameter is kind of a it's kind of an ass right"
7651680,7656560," uh so yeah maybe we can pre-compile stb libraries that's that's true that's true that's true so let's"
7656560,7663840," actually quickly do that um in all fairness we don't even have to compile them with all of the"
7663840,7671200," optimizations right i don't think it is necessary um all right so what we need to optimize is the process"
7671200,7678960," of you know seam carving right the seam carving itself is more important i think um so let's do the following"
7678960,7686640," thing i'm going to say x c so you have to kind of explicitly uh you know state that this is going to be"
7686640,7698960," c language right so it's going to be c uh stb um what is uh stb image uh image dot h to be fair maybe i can"
7698960,7712080," do that manually once yeah let's just do that manually once just that c o x c c o stb o stb image h and i"
7712080,7728320," also want to do stb image implementation implementation so do you produce oh you know it let's uh also"
7728320,7736000," optimize everything because why not uh because why not why not"
7739040,7746640," so i'm gonna do that that's literally the reason as you can see that's literally the reason and uh"
7746640,7754160," so stb image uh right uh right image right"
7754160,7768720," okay so we've got this stuff nailed down uh right and now what i can do"
7769920,7782160," is to be image is to be image right is to be image right and in main dot c in main dot c we do not"
7782160,7791520," include implementation right because we're linking implementation in here all right so that's much"
7791520,7798640," better so that was instantaneous actually implicit declaration is qtf which is kind of weird but"
7799600,7806160," uh wait a second all right uh cool uh but i want to get rid of the warning i want to get rid of the"
7806160,7814560," warning and the reason why we get a warning is because we need to include uh math quick math"
7814560,7824560," let's go so yeah that was pasta thank you so much for for this solution so yeah it's kind of unoptimized"
7824560,7831520," uh but it's just like a i did whatever uh okay so let's open it"
7831520,7838960," that is you can already see artifacts that's for sure"
7838960,7846800," specifically here which is weird yeah that is weird"
7849440,7852800," we can continue even further all right so"
7852800,7856720," let's do"
7856720,7862240," so if the thousand is going to be too much let's actually do three hundreds"
7862240,7868400," all right castle got chopped yeah so that's what happened"
7872000,7877840," so we're probably gonna do the minimum version one right so i think it makes sense to do the"
7877840,7882400," minimum version one instead of the random random is definitely not what we want"
7885600,7890320," okay so let's see yeah"
7890320,7902640," so that's cool and it is a mistake and it's fine it is totally fine it is fine to make mistakes"
7903920,7907200," so we have width and height and blah blah blah blah so"
7907200,7912960," i hope i didn't do any fucky wacky specifically in here right i really"
7912960,7918960," fucking"
7918960,7927920," i even ranted about it and then forgot about it holy that's how"
7927920,7936320," fucking bad this api is you will make a mistake even if you're like hyper aware with you will still"
7936320,7944400," make the fucking mistake oh my god i swear to god anyways i'm so sorry"
7946320,7949760," i ranted about it so much i freaking forgot about it"
7949760,7955200," so"
7955200,7958320," maybe our tulipsy yeah for sure"
7958320,7963040," one more time okay"
7966960,7976560," god damn bro"
7976560,7984640," all right all right all right all right all right all right"
7996960,8012080," let's make it even smaller so there is a little bit of a distortion i can i can see that i can"
8012080,8016480," actually feel that so we need to compare them side by side so we're going to compare them side"
8016480,8023440," by side actually uh right so 500 is basically like third i think i think it's basically in the"
8023440,8028800," third so it's going to be like very much visible um so yeah"
8028800,8037440," the tower is a bit wobbly yeah it is i'm very sure why so this is because we are picking them"
8037440,8042960," randomly but i don't know like the animation that i showed in the discord it felt like they were"
8042960,8049280," picking randomly but i mean who freaking knows maybe maybe the strategy was actually"
8051440,8058400," dang it's kind of funny honestly what the fuck is this at the bottom"
8058400,8074560," well it's already something yeah so it kind of lost this these parts uh in the wikipedia"
8076400,8080880," when they now in the wikipedia is actually fine actually fine"
8080880,8091680," it was actually preserved it really well okay so let's let's try the minimal energy strategy"
8091680,8099200," uh right instead of random one so we're going to start with this zero uh and here we're going to do"
8100880,8107040," int x all right so it's going to be from one x to width plus plus x"
8107040,8114560," this is a mistake"
8114560,8118320," this is a huge mistake actually"
8118320,8128160," you know what you know what i think um i'm gonna put like underscores in here you're not supposed to use"
8128160,8134800," them directly honestly so let's go through the confessioners uh yep yep"
8134800,8147200," yep that's good so these are legit cases"
8152080,8161040," uh those are also legit cases but to be fair let's use them through imagery uh right so let's tie them"
8161040,8169360," to imagery for now um but maybe not actually because they're not the they will stay kind of the same"
8169360,8179760," so i would say these are also legit cases using this thing um let's do the random picking the random"
8179760,8185120," image width all right so let's see image width right so it's that one um yeah"
8185120,8193600," uh that's that's a huge mistake though height is not modified so that's kind of fine"
8193600,8201360," but still and this is a huge mistake because it's decreasing so we have to take that into account"
8201360,8209600," okay so random strategy with a fixed bug with a fixed bug um because i think it's a significant bug"
8209600,8215040," because the width uh is the the full width right so you're not supposed to use those temporary values"
8215040,8222800," that we used to during the loading maybe i should maybe i should just like load them directly into into"
8222800,8228000," image gene right and just like get rid of them and just like use width and height directly like"
8228000,8237680," point is to here and stuff that sounds like a good idea so all right so let me see"
8237680,8246880," nah it still warps them it kind of still warps them um can this part be parallel i don't think so"
8246880,8257040," because each image depends on the previous one so um okay so let's try the you know the lowest energy idea"
8258560,8264480," and then the x starting from one x less than image width the current image width plus plus x"
8264480,8276880," and what do we have in here if um so how do we do that if dpx"
8278960,8288960," is less than sim sim is the new thing now that's it basically all right so picking the"
8288960,8300960," the one with the lowest energy all the time do we i think we do yeah i think we do all right very cool"
8303360,8309280," uh what else do we what the what the do we have in here so this is okay so this is a good opportunity"
8309280,8318000," to actually do something like this honestly all right but i think it became a little bit slower"
8319680,8324640," um yeah it's like extra iteration for for a row"
8324640,8339280," yeah i think it makes sense to actually always try to uh pick the lowest energy and overall it will distort"
8339280,8349600," it less so in the video there is even justification of like how the energy is sort of like reduces over"
8349600,8357520," time or increases over time all right so we got rid of the person which is kind of funny but i mean it"
8359040,8363680," it preserved the it preserved the yeah this is actually really funny"
8363680,8368400," yeah"
8368400,8379600," okay so it depends also like what kind of function you're using right so depending on the function you"
8379600,8388080," also get different results so let's try the 300 in here was a low energy person yeah it was the person"
8388080,8396400," was really tired so the low energy this person was just part of the statistics yeah just to fluke"
8396400,8404400," the khb algorithm by the way this algorithm can be used to actually remove pretty complex objects out"
8404400,8410720," of this scene without ai again without data-driven approaches let's put it this way right because"
8410720,8416080," yeah it doesn't really mean anything without data-driven approaches uh right completely unsupervised"
8416080,8420320," it's kind of bizarre like where is the person"
8420320,8426240," so yeah we get rid of the person"
8431680,8439120," um so the most energy artifacts um so the most energy artifacts um but i mean i can start with the"
8439120,8440160," most energy"
8440160,8451600," theme right but the dp is actually competed to minimize the energy so right but that means i will have to"
8451600,8463440," change the dp um the person is behind"
8463440,8470400," the person did not deserve this algorithm"
8476400,8477440," it's so funny"
8477440,8482400," it's so funny"
8482400,8484880," but i mean it kind of works"
8484880,8488720," it kind of but why did it get rid of the person that's so bizarre"
8488720,8490640," honestly"
8490640,8502160," it's so bizarre um so paper dolin yeah so what's the strategy honestly for the"
8502160,8508400," the algorithm so okay we computed all of these things and then"
8508400,8515440," uh right fine finding the sim so maybe we can listen to what they say all right"
8515440,8517760," um"
8520640,8534720," and we're taking out seams from the images and um i'm going to talk a little bit about the seams and"
8534720,8541200," i'm going to go back to the energy function a little bit later in my talk um of course we're"
8541200,8547520," not the first one to use seams either uh seams of course how do we find their seam inside the image"
8548240,8553200," so the big question is of course how do we find those seams how do we know which seam to remove"
8553200,8555120," in order to change the size of the image"
8555120,8564000," well um the idea is as i said to find some energy function that will guide us to find the best seam"
8564000,8570880," inside the image so the optimal seam would be the seam that will incorporate the least amount of"
8570880,8577440," of energy inside the image this example the energy is just the magnitude of the gradients"
8577440,8586320," so what we are looking for in fact is a seam that will contain the least amount of uh energy in terms of"
8586320,8594240," sum of average or average um it's the same thing in this example um and we are removing exactly that seam"
8594800,8600480," well how do we actually find that seam it seems like this would be um an exponential problem because"
8600480,8605440," there's exponential yeah it's explaining basic things um but in fact this can be solved easily um"
8605440,8612800," by dynamic programming what we do yeah i already know that an accumulative cost matrix where each pixel"
8612800,8623040," looks at the top three neighbors and tries to create the column seams um uh cost matrixes then we can"
8623040,8629280," find the least uh the smallest seam by just following through using dynamic programming so this is the"
8629280,8637200," vertical seam and here's the horizontal seam so very simple algorithm can find us and can help us find"
8637200,8645440," those uh vertical or horizontal seams okay but what's the strategy of picking the seams so as you've seen"
8645440,8652800," we've used this type of method to create aspect ratio correction so this is the original image this is the"
8653040,8666320," same thing i just realized that they never really got into the strategy i just realized that energy"
8666320,8672960," preservation so they're talking about the energy preservation but i think they don't really go into"
8672960,8680560," the strategy of picking the seams i don't think so right it's just like whatever whatever works uh their"
8680560,8685440," energy function is different maybe yeah that's that's my hypothesis so they use a different energy"
8685440,8694640," function uh so in our energy function is actually kind of dumb honestly um so when doing dp when index"
8694640,8702720," out of bounds use zero in minimum use instead of you think that's the problem let's take a look at the dp"
8703360,8715440," grad to dp so let me see um so when doing dp when index out of bounds use you use zero and minimum"
8715440,8720320," use in like you your sentence doesn't make sense to me"
8721760,8740960," uh um right so this is the um so maybe so if we out of bounds so when we're picking the thing we just"
8740960,8750240," like ignore that and i feel like like grad to dp like we already use zero in here right so if we out of bounds"
8751280,8756640," uh we literally use zero uh we literally use zero so that's that's literally what we're doing here"
8756640,8767920," that's literally um that's a bizarre problem i don't really know how to troubleshoot that so but"
8767920,8771040," it is what it is and it isn't what it isn't um"
8774960,8782320," so i'm gonna assume that they just have a different energy function right so but i mean they say so they"
8782320,8790960," use this we use the sobel operator but sobel operator is not necessarily like what is the gradient"
8794800,8799200," he wants you to use the sobel operator but he wants you to use the float max instead of zero um"
8799200,8802240," what"
8802240,8812000," ah oh my god i see you use zero in minimum use"
8815200,8837200," um is that what why what i do"
8844720,8851840," isn't that what i do in here so if we"
8851840,8854800," so float"
8854800,8862320," float max in here that's what you mean jesus is that's what you mean"
8862320,8865440," why do we do that let me let me think"
8865440,8873040," um oh i see what you yeah yeah okay that makes sense that makes sense thank you thank you so because i'm as"
8873040,8880400," already said i'm really sleepy right now right so it's um my brain doesn't really work that well"
8880400,8886320," it's actually a miracle that i managed to code something at all honestly"
8886320,8894320," right i see i see okay man i'm really happy that i recently discovered the technique to put"
8895120,8900640," chat into the chat into the video so now my struggling doesn't look awkward for youtube people"
8900640,8906720," right youtube people can literally just uh enable the captions and see the conversation right at the"
8906720,8911920," same time i don't have to include the chat into the video and make the video super annoying"
8912560,8920320," uh right uh right so uh that's actually super cool uh okay it made it worse"
8920320,8926880," so yeah but i mean like didn't i fuck up something in some other places"
8927680,8930960," um so didn't think so"
8930960,8935520," uh wow it just works yeah"
8935520,8947360," uh so essentially let me just think about it for a moment let me just think about it so when we are"
8947360,8955520," picking the minimum energy it it has to be a flt max that's for sure it has to be a flt max"
8956960,8959520," uh originally a flt max so"
8959520,8970960," so yeah that makes a lot of sense that makes a lot of sense but why it didn't work"
8970960,8975760," um so i also remember that i made some changes in here"
8975760,8983440," uh so what if we try a random shit again um"
8986240,8991680," um so maybe i can do something like this zero um"
8991680,8997120," sim random uh image width"
8997120,9003040," uh it's kind of bizarre why it didn't work"
9003040,9013840," i really like how it's faster"
9015520,9022640," uh you you guys are not telling me so change the comparison to mean energy like"
9022640,9028560," where is in the code what's the line like it's cool that you found something but tell me the line"
9028560,9032400," all right so i don't remember right so"
9034960,9039360," like it's like it's just like trying to search the needle in the haystack"
9039360,9048160," um so that didn't help i suppose oh by the way i should have actually done that you're using greater"
9048160,9050080," instead of less when searching for sim"
9051360,9066000," uh yeah yeah oh yeah that's sure that's true so that's what i did okay so thank you"
9070880,9078000," so we know that the stuff somewhere in dp"
9078000,9084000," okay hopefully this one is gonna be"
9084000,9091920," the winner this time hopefully it's just like holy shit we got it"
9094560,9095440," okay thank you everyone"
9095440,9100400," holy fuck thank you thank you thank you thank you"
9100400,9105200," uh it still worked a little bit but i mean it's just like much better than it was before"
9106720,9115440," uh okay first try by the way first try first try first try first try um okay so let's maybe"
9115440,9127440," try to like do 800 like really really make it small and i'm gonna try something super super cool"
9128160,9132880," so do you remember the content aware memes with faces and shit like that"
9132880,9138800," so the problem the limitation of this algorithm is that it works really bad with faces you know why"
9138800,9148800," because it considers the features of the faces like eyes nose and mouth um the separate objects"
9148800,9152960," right different parts of the face have higher energies than the rest of the face"
9154320,9158800," and because of that it distorts the faces in a really funny way"
9158800,9165040," uh so the thing i want to do now i want to try to apply it on faces"
9165040,9167440," uh right and see how how it goes"
9167440,9171840," damn that's sexy holy"
9171840,9179840," the person is in the frame the building is in the frame what the"
9179840,9189040," fuck again this is not data driven there is no neural network that was trained on"
9189040,9192160," millions of images it's just a dumb algorithm"
9192160,9198960," that's what's cool about it it's just like oh it has limitations but there is no"
9198960,9205040," ai in a modern sense of yeah it's not data driven it's completely unsupervised it's just like yeah it just"
9205040,9216880," does the thing um so cool okay so let's actually find some faces um so ethically uh uh where's the ethically sourced lena"
9216880,9220640," ethically sourced lena"
9220640,9227680," it's amazing it's it's so cool uh all right so let's grab this thing"
9231600,9234880," right so let's grab this lena uh"
9234880,9244640," what do you don't forget um let's just download that uh-huh lena"
9244640,9247920," so"
9247920,9254320," uh that's what i was looking for"
9256080,9262160," uh the culmination of today's stream uh so"
9262160,9269440," let's actually don't remove uh like this many 250. let's let's remove this amount of things"
9269440,9272800," um okay let's go"
9275120,9284720," okay"
9284720,9292880," uh so yeah this algorithm doesn't really work on faces but i mean yeah"
9292880,9296240," it's much better now"
9297840,9305680," oh okay okay so what if i remove even even further um how about like 350. let's go"
9305680,9311600," all right"
9318320,9327760," this is so beautiful new profile pic new profile pic so yeah so as you can see it was just like eyes"
9327760,9334000," and the mouth like you can clearly see that the mouth has higher energy than the space between the"
9334000,9339360," eyes so it was encouraged to reduce the space between the eyes but not the mouth right because"
9339360,9344160," there's a lot of like details in there right so there's a lot of energy uh so it doesn't really"
9344160,9350400," work on faces um but yeah it's pretty cool algorithm it's pretty cool guys all right i guess"
9350400,9354880," that's it for today thanks everyone who's watching me right now i really appreciate that"
9354880,9363680," have a good one and i see you all on the next recreation programming session with mr i love you"

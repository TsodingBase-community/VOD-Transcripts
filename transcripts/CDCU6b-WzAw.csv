start,end,text
0,12480," all right looks like we're live hello everyone and welcome to yet another as within session"
12480,16320," how about that let's make a little bit of an announcement and officially start the stream"
16320,25760," right so we are live on twitch and what are we doing today on twitch.television today we"
25760,32240," are trying to port the game the breakout game that implemented in zig in jai uh i don't really"
32240,38160," know why but uh i just decided to to port it to jai and continue to open jay i don't know"
38160,45920," uh so i personally don't really want to continue developing in uh this thing in zig uh because i"
45920,52880," feel like it's not my language that's what i feel like the language itself is fine right so the language"
52880,58960," is itself it's fine i just feel like i'm not the target audience of that language so um i developed"
58960,65920," in it because my audience asked me very very nicely to try this language out i tried it out it's a good"
65920,72240," language it's really promising uh but it's not my language for sure it is definitely not my language"
72240,77200," so uh hello hello everyone how are you guys doing welcome welcome welcome so i'm gonna keep this"
77200,83360," source code as it is and i'm gonna try to port it to jai and see how easy it is to port to jai"
83360,88240," so if i take a look at the like the structure of the source code there is nothing particularly you know"
88240,94800," special about this structure i think i can easily translate that just to jai and uh continue developing"
94800,101120," the jai so i i think i'm gonna try an approach where i would like literally copy paste the piece of code"
102160,108800," into a gi program and will modify that piece of code until it compiles and that way i will translate the"
108800,115600," entire program into jai and hopefully it will work similarly how it works in zig so there's only like"
115600,123120," 200 lines of code so it shouldn't be very long um so and after i'm done i'm gonna just like add more"
123120,129280," features to this game right so yeah what do you guys think is that a good plan for today's stream"
129280,138240," right so and also it give me it will give me an opportunity to program more in jai right so um thank"
138240,144320," you so much i would duke for for this up thank you thank you thank you for with 34 months tier two thank"
144320,149760," you thank you really appreciate that and lucasig11 uh thank you for five months of twitch problem"
151920,160400," all righty all righty all righty all righty all righty all righty okay so i think i did a little"
160400,166960," bit of a cleanup uh off screen uh yeah i think i did a little bit of cleanup so i think i need to fetch"
166960,175680," this entire thing origin so element 0216 thank you so much for four months of tier one subscription thank"
175680,181600," you thank you thank you merge origin and master okay so we can take a look at how it looks like right now"
181920,190240," all right all right so was it i think it was somewhere in third party uh huh i can't see"
190240,199920," you right on this mist so i have to do build uh and run there we go so it will take some time uh and then"
199920,204480," uh we'll be able to play this game so we'll take a look at how it looks like right now so it has the"
205200,212720," uh so it's analyzing semantics or something a little room okay uh cool and now we have the game so this"
212720,223360," is how it looks like uh right and yeah so i think i i also want to link this stream where we were developing"
223360,232400," all of that so i think it's kind of important uh so let me also open the description um yeah there we go so the"
232400,240880," source code uh zig out for zig out is available in here so you can find it in here and um zig out"
240880,252000," development development stream should be available somewhere here so we'll have to find uh sodium"
252000,259200," let's find sodium daily uh here it is so it's it's called paid zig stream if you didn't watch it i really"
259200,264240," recommend to check it out because this is where we develop this entire thing right so let's actually"
264240,276000," call it uh paid zig stream right there we go and let me go somewhere right so i probably want to go into"
276000,282960," zig out and i'm going to open the source code right so this is one thing and i'm going to create another"
282960,290560," folder right so we need to come up with the name for the jay version right so let's call it jay break"
290560,299840," right let's go jay break and let's create the main dot jay file uh right so we'll first have to import the"
299840,306080," basics right so this is sort of like a standard library and uh let's create an entry point right so this is the"
306080,313440," entry point and here we'll say hello i'm sorry i'm sorry sailor right so it's supposed to say sailor"
313440,325120," all right and let's try to build this entire thing so jay and there we go uh-huh hopefully it will build"
325920,334000," successfully right it seems to be building which is nice um leapfake root it's a very interesting"
334000,340960," library never heard about this before it probably creates a fake root for you something like ch root"
340960,351920," but fake root there we go we have hello sailor um okay so i suppose the first thing we want to do"
351920,357520," we want to start copy pasting the code right so here we have a section for the constants right for"
357520,364560," different kind of constants and uh i'm gonna just right away copy paste this section and try to compile"
364560,370560," it and see how the jay compiler will complain about this thing so as you can see we don't have a const so"
370560,374800," this is probably the first thing that we probably want to remove right so no const please thank you very"
374800,381040," much so unable to parse expression okay so there is no such thing in here so we're supposed to do"
381040,388800," something like this right i presume uh i don't remember does jake carriers integers to floats"
388800,394160," automatically i think it does it's pretty strict on different number types but i think it can quite"
394160,398240," easily take an integer and convert it to float because it kind of makes sense to do that but"
398240,404240," maybe not maybe not i don't know so uh okay it was data assignment uh this is because this is not a"
404240,410000," declaration of a variable this is assignment of a variable to declare a variable and assign it we have to do"
410000,416960," that but this is in specifically variable uh what we have in here is in fact um a constant so we have"
416960,424080," to initialize it like this right this is how you initialize the constant right so this index for"
424080,431520," variable assignments is actually pretty cool so you have a name then always colon right you always have"
431520,438800," a colon uh after the name of declared variable then you have a type which is optional you may actually not"
438800,446400," provide the type but you then you have a type and then uh you have either equals or another colon"
446400,456000," right so if you have equals you are defining a mutable variable if you have a colon you defining constant"
456000,462320," right so this is a variable and this is a const right so basically the difference between variable and"
462320,470800," constant is this uh small token and since the type is optional you can actually declare them like this"
470800,478640," so this is a very clever syntactical pun this is like a really clever syntactical pun because"
478640,483360," uh you may think that this is a single token in this language no in fact it's two tokens"
484720,493040," this is genius holy it's just like it's it's it's like it's like a joke it's a comedy joke uh making"
493040,498720," fun of all these languages like so this one makes fun of like go and this one of husky and it combines"
498720,505360," them all together into coherent sort of syntactical logic if you if you know what i mean it's just it's so"
505360,512240," clever like i don't know uh i feel bad for talking about the syntax but at the same time it's so"
512240,520400," fucking genius it's it's it's it's like a pun you see what i mean this is it's a funny pun um i really"
520400,527440," like that anyway i don't know why i'm like i focus on this kind of stuff they don't really matter but"
527440,537520," anyway uh so let me now do another thing um yeah so let's try to recompile this into a thing"
537520,548160," so here let me let me see so this one is supposed to be just something like this"
548800,559280," um for f32 i think i want to query replace f32 um equal right i want to replace it with just float"
559280,568080," 32 and just do something like this right so after that i'm going to query replace just equals with"
568080,576000," just that and i think that will work uh unless for the first one right because here we'll have to have"
576000,581920," like a single thing in here all right so what else do we have in here f32 it's a float 32 because i"
581920,590640," didn't replace it uh okay so it compiled right so we ported a section with the constants right so these"
590640,596720," are the constants that um control different aspects of the game uh ford hello thank you thank you so much"
596720,604080," for 14 months of um twitch crime subscription thank you thank you when you like the color of the bike"
604080,611360," shed yeah so this is literally well sometimes it's just you just have to acknowledge like a very good"
611360,620960," choice for the color of the bike shed so uh anyway so let's define um the target structure right so target"
621600,629200," is a structure uh what's interesting is that if i try to do something like this it will compile"
629200,634080," so it's kind of similar to how zeke does it or maybe zeke is kind of similar to how jai does it"
634080,640240," so here you will see that we're declaring actually mutable variable right and what's the type of this"
640240,646720," variable so we specifically omitted the type and i suppose the type of this variable is the type because"
646720,654320," structure itself is the type right so if i try to yeah it is true right it's kind of interesting but"
654320,659200," since like it's inferred you don't really have to do that it's kind of similar how zeke does that so it's"
659200,666080," not like a novel idea but it sort of like fits into into the whole syntax in some sense um all right"
666080,671200," because if you take a look at zeke right so it's also you just define a constant and just assign this"
671200,679840," structure right uh what do we need to have here is flow 32 and y and we also need to uh to have an"
679840,686720," indication that the target is dead uh by target we mean the uh you know the bar that you are hitting"
686720,694320," right so this is the target the green one uh right so that's what we have in here so this is the target"
694960,700160," so and the dead indicates that like it's not available anymore it's not going to be rendered"
700160,706720," if it's dead uh right and it's not uh going to be checked for collisions if it's dead right so it does"
706720,712720," not exist so in all of the loops we just like you know ignore it so that boolean there we go"
712720,715680," so i suppose you have to put some accounts"
717680,724720," uh what's up function hello hello hello hello welcome okay so let me see we have a"
724720,732000," function that initializes all the target basically the target grid right so what it does it just returns"
732000,738640," the array of targets of a particular size right and then we just assign it to the targets pool uh nothing"
738640,746240," particularly special so i'm just going to copy paste this code and see if i can port it to jive so how"
746240,752480," difficult would it be to port that thing to jive okay so we don't have a fan so then we have to do"
752480,761120," that and then the return type is indicated with an arrow and i think the arrays have the same structure"
761120,767520," right so they they look the same pretty much okay so we have an internal variable into which we're"
767520,773120," collecting everything so i'm gonna assign like i'm gonna define it as the array of that type and as far"
773120,781840," as i know undefined is just like triple dash uh right okay so here we have like a four loops i"
781840,788640," still don't quite understand how loops work in zig so i just picked whatever was the closest to what i"
788640,795680," wanted to do so maybe there was a better way to do that but it is what it is so uh i would rather do"
795680,802800," something like this for row target rows minus one and there you go so i don't need to have that stuff"
802800,814480," anymore right so then uh i have to do a similar thing for column uh target calls target calls and i don't need that stuff"
815680,823760," so what do we have in here so here i just have to initialize x and y uh of these specific targets"
823760,833280," right so that's what i have to do x and y and so here we're gonna have y and then i'm gonna just put"
833280,840160," this thing in here and i'm going to try to compile that okay so i think that is basically it do we need to"
840160,846800," have anything else i don't think so all right so unable to parse what is it ah okay so i can probably"
846800,849760," do something like this now uh-huh"
849760,863920," okay so mismatch type uh when it float 32 but got s64 okay so the type of this thing oh okay i see so all"
863920,872160," these things are uh-huh they are s64 they're integers okay maybe for now i'm just gonna kiss"
872160,877760," them all right so because it's gonna be the easiest thing to do right now right basically just you know"
877760,885120," convert it to that specific type and there we go okay so we ported that specific uh that specific thing"
885120,892960," so the next thing would be to define a target pool right so i should try to define the target pool and"
892960,901760," i think it will not work like that because uh i'll i'm trying to run it in compile time context okay"
901760,909760," attempt to perform a procedural outside the body of another procedure uh calls can may occur ah okay"
909760,914960," that's very interesting so can i just do something like run just run this procedure oh okay i can do that"
915120,923280," okay so yeah i just run this procedure at compile time and return it like to here i think it's similar"
923280,929040," to zeek right so whatever you put in here in zeek will be also called at compile time rather than run"
929040,935440," time so it's kind of similar in that sense uh okay so another thing i want you to do i want you to just"
935440,942720," check how it looks like all right i want to print the targets right uh for uh target pool targets pool"
942720,952640," i'm going to just print uh eat right maybe i can even do this like that uh just print it just bring it"
952640,961360," just bring it just bring it okay so with almost exactly what i wanted i just forgot to put a new"
961360,967120," line in here right so if i put it like that and then i just run it there we go so here are all the targets"
967120,980560," initialized at compile time all right to do"
980560,989920," how you guys doing"
995280,1001520," so all right let's continue i suppose right so we initialized all the targets and these are the"
1001520,1007760," coordinates of uh you know these green uh rectangles that we have in here right so these are just the"
1007760,1013200," coordinates and we ported the calculation of them to a different language so that's what we did"
1013200,1022400," uh so i'm just commenting everything i do so people can follow uh also maybe i'm gonna uh copy paste to do's"
1022400,1027840," as well because maybe i'm gonna uh actually resolve those to do's in giant because why not"
1027840,1034720," so war let's remove the war uh var i think it's called bar"
1034720,1038080," so"
1038080,1042960," float 32 so that's what we got"
1042960,1050960," uh and in here since these are variables we're gonna put it like that so it's quite important to use equals in"
1050960,1057600," here because they are they must be mutable this is the state of the game right so this is the config"
1057600,1063840," of the game right so let's put it like this configuration right this is a configuration and"
1063840,1069440," this is the state that's why all of these things are mutable and all of these things are immutable it's"
1069440,1077600," just like no configuration um okay so let me try to compile this thing and see how it compiles it compiles"
1078960,1085680," all right so the next thing we are constructing the sdl rectangle what's interesting is that"
1085680,1092720," we are not going to be using sdl right so i think i'm going to be using simp instead and simp"
1092720,1101520," right is sort of like a sdl like library that is part of the standard library of jade although as far as"
1101520,1105760," you know john doesn't like the the word standard library so it's just basically the library that"
1105760,1113280," comes with the distribution of jay right so it's um library that comes with jay uh with the language"
1113280,1121040," um that feels the same niche as sdl it has a different api but it feels the same niche"
1121040,1127360," right it basically allows you to open a window and put some simple primitives in it and that interface is"
1127360,1132800," implemented on all the supported operating system right so if you wrote a program uh for specifically"
1132800,1137280," that this program will work on all of the platforms the language can work right"
1139040,1148000," uh so"
1148000,1156160," that you can manipulate ast nj have you tried that no i haven't tried that because i didn't really need it"
1156160,1159440," yet uh so i'll learn features as i need them"
1159440,1166640," though there is a lot of tutorials uh in the language"
1166640,1179200," so how to right so basic metaprogramming so basic metaprogram so there is explanation how to use all of"
1179200,1189440," that uh with all of comments and examples and stuff like that so yeah but i'll get to that when i"
1189440,1195200," actually need this kind of stuff right so for now i'm just like getting comfortable with the the basic"
1195200,1204080," features of the language right um okay so there we go i wanted to use simp and as far as i know simp"
1204080,1210240," doesn't really have the notion of rectangles right so i'll probably have to define my own rectangle"
1210240,1217440," structure so let's quickly go ahead and do that so this is going to be in struct and this is a abb"
1217440,1227840," and this is simple like x floats to two then y w and h and i keep forgetting that i have to use"
1227840,1233680," the semicolons in here this is not what i wanted i just wanted to replace this thing with semicolons"
1233680,1239920," okay so and because of that i didn't think i need this construction anymore right so the only reason i"
1239920,1245360," needed this construction is because i wanted like a easy conversion between like floats and integers"
1245360,1253680," um i don't think i need it right so i don't think i need it so what do we have here here we set"
1253680,1262320," the color for sdlr renderer so the only purpose of this function is to unpack the color so i store the"
1262320,1270320," core as 32-bit integer right you can see it in here and i just have a special function that parses that"
1270320,1276000," integer into like a sequence of colors and i think we will need to have something similar for simp because"
1276000,1284640," simp actually uses a race as the colors right so for for simp it's something like four um i think it's"
1284640,1293280," float 32 right so basically four floats is the uh is the color for this thing uh so maybe we're gonna"
1293280,1298800," first implement the function something like unpack uh caller right so here we're gonna accept the"
1298800,1303760," color which is u32 and by the way since i know that the color is u32 maybe for all of the"
1303760,1310880," colors i'm gonna specifically say say that they are 32 so this is another color uh this is another color"
1310880,1322800," uh this is another color right so these are the colors u32 right and in here in here when i accept the"
1322800,1330160," color i will just return something like four uh float 32 right so this is the actual color that i want to have in"
1330160,1340320," here uh so what we want to do i'm going to just copy paste this thing and we're going to define four"
1340320,1349840," variables right uh those variables are going to have type of float i presume so the only thing we need to"
1349840,1359200," do is just extract the components right so here are the components and after that i think we need to"
1360160,1367840," to divide this stuff uh divide this stuff uh by 255 uh that didn't work because emacs is kind of a"
1367840,1377760," poopoo 255 like this right so that's what we want and that will give us the um the colors normalized"
1378320,1387120," uh which we then can quite easily return uh like so rgba there we go something like this"
1387120,1397520," though interestingly enough so as far as i know in the language i can return several values this is not"
1397520,1405760," tuples but it's actually you're returning several values right so maybe this is something that i can"
1405760,1412640," then later use yeah we'll see it's actually super easy to change later right so here um"
1412640,1420960," i'm going to put something like this so the idea here is essentially i can do unpack color and i can"
1420960,1432640," provide color uh a a b b c c d d right and then say uh r g b a like so and then i can just bring those values"
1432640,1447120," right r g b a so something like this right i think i think that's how it works but at the same time this is not"
1448240,1457600," um this is not tuples right so um is it not tuples rgba"
1457600,1460160," yeah"
1460160,1468720," i think it's not going to compile i think the language does not support unicode and it actually explicitly"
1468720,1476800," sets so say so uh oh okay expected an expression after and this is not an expression okay sure"
1478240,1489440," i just use compose key to create these kind of things right so i just hold compose key and i press"
1489440,1499280," a and colon uh a and colon or maybe colon a but it doesn't work anymore so it it broke it's broken but"
1499280,1507920," that's how i did um so all right uh what's going to be the next thing that i want to port uh target"
1507920,1517920," rectangle i see so essentially this function given a target constructs the heat box of the target right"
1517920,1524480," so it constructs the heat box of the target maybe i should have called it heat box but i mean it is what it"
1524480,1532400," is so here we accept the value of the target and we get a rectangle right so this is a rect and what"
1532400,1541040," we have to return in here is essentially x y target width target height and i think that is it and i know"
1541040,1546800," that there is a way like to say in line i'll touch actually highlight it on this interesting but i don't"
1546800,1553840," really know how it is used in value directive in procedure so i probably have to learn all values"
1553840,1562960," provided instruct literal must be constant but our one argument is not oh you cannot do it like that okay"
1562960,1573360," so we can do something like i don't know result right so you have a result and it has a tight target"
1573360,1586560," actually rect and this is something like this right and then you can do result x target x y y w target width"
1586560,1602640," and h target height and then we can return that thing quite easily cool so that's very cool we can even test that"
1602640,1610640," so for each target uh target's pool right so this is a target's pool uh i can print the target itself"
1610640,1612560," right so i can print the target itself"
1612560,1624160," so this is the target cool but then if i transform that target into its uh heat box into its rectangle"
1624160,1631600," uh is it gonna work yeah it works so you can see these are the boundary box of these uh of these things right so"
1632320,1640320," this is how we slowly step by step uh migrating that code to jay and at some point hopefully it will just"
1640320,1649520," work right because it compiles and as you know if it compiles it works okay so the next thing is projectile"
1649520,1657200," right so we need to port projectile so it should be kind of similar um so let me copy paste this thing in here"
1657920,1665360," so it has to be x and um so this is going to be approach sites approach size"
1665360,1676720," approach size and then i just return the result at the fan uh like this and then the result is basically"
1676720,1685520," this there we go uh graphics yes but the graphics right now are from zig so this is not a program written in"
1685520,1693520," in enjoy right so it's written in zig and importing that to j right so we're gonna have a similar result"
1693520,1701520," but in enjoy it's kind of interesting there's no death mechanics so if you hit the floor it's it's totally"
1701520,1709680," fine no friction yeah literally no friction uh the energy is completely preserved right so it's completely"
1709680,1717280," preserved it's it's beautiful actually why did it run that route but okay some sort of a bug"
1717280,1727200," cool that's pretty cool so proj rectangle i'm not gonna test that i'm gonna just check if it compiles"
1727200,1733680," and it does not compile because this is not f32 it's a flow type school physics"
1733680,1739920," uh bar rectangle bar rectangle"
1739920,1749360," so as far as i know bar rectangle doesn't really require any input parameters right so that means i can"
1749360,1757440," just do something like this this is a bar rectangle and this one is bar x then"
1757440,1765520," i want to copy paste this thing here so it's a little bit easier for me to work with"
1765760,1783760," so this one is bar length this one is bar thickness okay is it gonna work it worked okay uh update okay"
1783760,1791360," this one is the most interesting one right so because it updates the state of the game given the delta time"
1791360,1796560," in seconds right and it's pretty you know complicated it's not really that complicated but"
1796560,1803440," uh just a little bit of a logic in here uh and we'll have to port it so the main problem here is going to"
1803440,1811680," be that uh has intersection we're using function has intersection from the sdl uh but we don't have that"
1811680,1817680," in sim i think maybe there is a function that checks the intersection of a abb somewhere in jai but"
1817680,1825600," i'm too lazy to search for it so i will have to implement my own intersection so um let's go ahead"
1825600,1831920," and do that so i'm going to copy paste this huge function and i'm going to see how much the compiler"
1831920,1837280," is going to complain about this function how did you fix that issue with the ball getting stuck in"
1837280,1847120," platform i explained that in a second part of this previous stream right so check out this stream right"
1847120,1853760," so in fact like yesterday actually not yesterday but the last time i actually did two streams right so i"
1853760,1860800," did the zig stream where i then got tired at the end but then later after i took a break i did another"
1860800,1867520," small stream right i did another small stream where i actually fixed it and explain it how i fixed that"
1867520,1874160," so there's like a second part and then i concatenated two streams together into a single stream and uploaded"
1874160,1877600," that to youtube right so the second part is there"
1882720,1887920," so probably maybe i need to put the timestamp to indicate where is the second part and we'll see"
1887920,1898240," um okay so let me see of course this is not like this uh float 32 and there we go so we have overlaps"
1898240,1904880," right so this is the function that we'll need to implement overlaps uh we're going to accept uh rectangle a"
1904880,1910960," and the rectangle b and this thing is supposed to return a boolean indicating whether this thing is"
1910960,1919600," implemented or not um so can i assert this thing saying that it's not implemented or anything but i might"
1919600,1929600," return false uh so i'm going to implement it a little bit later um also here you don't need parentheses"
1931360,1935600," okay so yeah sure"
1935600,1947120," cool uh it didn't complain about math clamp surprisingly um let me complain about that"
1947120,1956320," so this one is or right so this is what we have and interestingly so here i didn't have to put not equals"
1956320,1963440," because this thing returns a boolean so it's totally fine i wonder if i can do stuff like this"
1963440,1970320," right so it's yeah there we go so it actually looks pretty cool it actually looks pretty cute"
1970320,1972080," doesn't it i think it is"
1972080,1977040," the next compilation error"
1978800,1988720," uh pointer okay so overlaps takes the rectangles by value so we can actually remove this kind of stuff"
1988720,1998160," uh the next one okay for loops so that means here i can do something like for target pool"
1999680,2010080," uh huh target pool and if condition x is break all right if target is not dead interesting i think i can"
2010080,2015840," update this thing to be something like if target uh that continue"
2015840,2019600," right i think i can do something like that"
2021760,2028320," uh-huh and furthermore yeah instead of doing that i can finally do something like this because i don't"
2028320,2032960," remember zeke having this kind of operator i think jai must have something like that"
2032960,2040480," uh and here i have something like that target that equal true so that's basically the loop that we have in"
2040480,2046320," here right"
2046320,2054960," okay so let's go uh to the next compilation thingy and here we don't have any stuff"
2054960,2060960," and here we have a dereference i didn't i'm not sure if i care about this dereference"
2060960,2064400," uh there we go so everything worked out perfectly"
2066240,2073280," okay so why chat is dead by the way do you guys have any questions so far maybe"
2073280,2081440," does anyone have any questions about what we're doing right now is everything clear what we're doing"
2092480,2100240," but in jay john said it's utf-8 i don't really know what he said regarding utf-8 and unicode names and stuff like that but"
2100240,2106480," how are you liking jai so far i think it's really promising i think it is really promising"
2106480,2117440," so but target is not defined is it in the loop yeah it is not defined uh it's supposed to be it"
2118160,2123760," but you don't have to worry about that because we're using statically typed compile language which"
2123760,2131760," means that the program is not going to run until i fix all the errors so that means if i made any"
2131760,2136560," mistakes in here it doesn't really matter because the program is not going to run anyway it's not going"
2136560,2142960," to launch nukes or anything right so we're just like not going to run until i fix it so that's the point of"
2142960,2146960," statically typed compiled languages you don't have to worry about the mistakes because the compiler"
2146960,2153360," will tell you them anyway and won't run the program until you fix them that's the beauty of the statically"
2153360,2164720," compiled languages can you use get rect module for the rectangles uh i guess i can but it's uh it says"
2164720,2171840," literally four conditions it's literally four conditions are we doing the left pad yet again"
2171840,2177600," chat are you suggesting me to do the left pad again what is wrong with your chats"
2177600,2186960," uh okay so let me demonstrate you how you check the whether two rectangles overlap or not so"
2187520,2191840," probably how to show that it's actually very straightforward i still don't understand that"
2191840,2198880," fully but you can sort of like prove that this is the correct formula uh mathematically you can prove"
2198880,2205360," that so imagine that you have two rectangles all right so this is the first rectangle this is the second"
2205360,2214240," rectangle so this is a and this is b and let's take a look at their sides right so let's say that the"
2214240,2221440," length of the length of the left side of a is going to be l a uh right is going to be r a then the top"
2221440,2238800," right and the bottom right so and correspondingly we have lb uh r excuse me r b t b and b b okay so"
2239520,2249600," let's take a look at four conditions when these two rectangles 100 percent don't uh overlap so for"
2249600,2260800," instance uh if r a and l b right so if r a is strictly less than l b like it is right now it doesn't matter"
2260800,2266560," where are the rest of the rectangles it does not intersect like it just does not intersect like if this one"
2266560,2272480," single condition is true there you go you never intersect so this is the first condition so the"
2272480,2277120," second one when they are 100 percent don't intersect is when the it's the other way around if you swap"
2277120,2288080," these uh rectangles it's when r r b is less than l a right so these are two conditions horizontally"
2288960,2295440," determining where when they are not going to overlap so we have a similar situation uh vertically right"
2295440,2304240," when b a this this one this b a is less than t b that means it's hundred percent does not overlap and"
2304240,2316240," corresponding b b uh less than t a four conditions so basically if you combine them with or all of the four"
2316240,2323440," with or you get a single condition that just checks that these two rectangles do not overlap right so"
2323440,2329200," that single condition checks that these two rectangles don't overlap how to check that they do overlap well"
2329200,2339600," you're just inverted there you go do i need another framework to come up with that i don't"
2343920,2348160," so"
2348160,2355440," oh my god so i've got so many messages uh i can't keep up with them uh so"
2355440,2368320," thanks searching for making assembly my language number two which assembly"
2370640,2376080," you do realize the assembly is not a language assembly is not a language i'm literally tell"
2376080,2384640," you i'm really sorry to tell you that it's a family of languages right so and depending on the cpu"
2384640,2389920," architecture and specific dialect they could be actually dramatically different so"
2392000,2397680," it's like saying that my favorite language is lisp but lisp is not a language there is no such language"
2397680,2404320," as lisp it's a family of languages there are things like common lisp scheme emacs lisp uh closure but"
2404320,2409760," there is no such thing as this it's a family of languages like what exactly you're talking about which one"
2411440,2418160," uh okay i forgot this uh wasn't a vod oh okay people just zoned out listening to me"
2418160,2422640," uh all right the chat has been revived"
2423600,2431520," are you using qwerty layout no i'm using tukin keyboard have you heard about tukin keyboard"
2431520,2434880," this one"
2434880,2438160," this is the keyboard i use"
2438160,2446960," this is how it's spelled by the way and also pronounced you can google it up just type this into"
2446960,2452400," google and you will know what it is it's actually very easy uh all right"
2452400,2461200," with the break uh with break you establish cond x is false so no need for it"
2461200,2472400," uh the break you establish cond x is false no it for it i'm sure what you mean i'm sorry"
2473680,2489680," uh what does this mean so essentially a equal b is the same as a equal a or b so it's it's the same"
2489680,2499680," it's it's similar to how uh a plus b is the same as a equal a plus b it's literally the same hopefully i i i"
2499680,2505200," don't know if jay has this operator yet because i haven't tried to compile this code i just assume"
2505200,2510160," that it probably has this operator because the language is based on c c plus plus and c c plus"
2510160,2514400," plus does have this operator so i'm making a lot of assumptions in here it might be wrong"
2514400,2519760," so maybe it doesn't exist there so that means i'll have to explicitly write it like that"
2519760,2522480," but it's not that big of a deal"
2524080,2525600," so um"
2525600,2534080," okay left pad in 2022"
2534080,2542320," time to install box 2d"
2542320,2548320," i hope it's phasm and not stinking awesome yeah phasm is actually pretty cool"
2549040,2557920," the cool thing about phasm is that it's very small and self-hosted simultaneously phasm is self-hosted"
2557920,2566480," it is written in itself and it's like a full-featured featured x86 64 assembly assembler"
2566480,2571120," uh it's it's freaking amazing i really recommend it and it's also cross-platform"
2571680,2580000," holy can you imagine that x86 64 assembler self-hosted written in itself in assembly"
2580000,2587920," x86 64 assembly ported to dos windows linux mac os freebsd like there's a lot of things so what"
2587920,2594480," platforms do we support um and maybe not freebsd well i mean you can run it on freebsd why the linux"
2595600,2602400," emulation layer but anyway let's suppose dos linux uh win32 maybe even mac os probably mac os"
2602400,2606960," not gonna lie okay so it supports at least three operating system so you can find it in here"
2606960,2611360," uh so"
2616800,2630800," um"
2630800,2632720," okay"
2632720,2640000," does russian work exist i have no idea and i don't care"
2644320,2645760," um"
2645760,2658000," it works on dos pog yes it was originally written for dos when i think windows was not a thing"
2658000,2661840," uh i'm pretty sure uh freeful so"
2661840,2669040," so for the exit is 64 yes it's amazing i really recommend this assembly"
2670480,2674000," uh all righty okay"
2674000,2681840," so let's try to compile this thing and see what it supports and what it doesn't okay so i actually tried"
2681840,2690720," to compile so we yeah everything seems to be fine uh okay so here we have that and here we have uh that"
2690720,2699120," so we have to do this we have to do this so we have to do this we have to do this and we have to do this"
2699120,2700800," so this is order uh no music i probably i don't know music is gone i can refresh the pretzel rocks"
2700800,2706320," oh okay that is very cool so yeah"
2708320,2715360," no music i'm sorry um modern software development has happened so that's why we can't have any music"
2715360,2718320," so sorry"
2718320,2723520," uh let's continue maybe i can probably"
2725840,2733760," oh maybe it got banned in russia you know what it probably got banned in russia i'm pretty sure about"
2733760,2741920," that because the the pretzel rocks was spreading fake fakes about this special operation that's why"
2741920,2752400," it has to be banned so i'm pretty sure about that so all of that censorship is actually like screwing up"
2752400,2756400," with the entire infrastructure of the internet like at least within the russia"
2758960,2768000," so they're like they're trying to ban something and it breaks something um at the same time beatbox"
2768000,2782000," all right so let's continue"
2784400,2805840," okay uh so that is fine probably have to do that like so cat jam cat jam indeed"
2814400,2826160," it's actually night so i'm not gonna do that uh sorry"
2826160,2838320," so enjoy the keyboard there some more instead until we finished uh now"
2841280,2843360," uh-huh we don't have to do that what the"
2843360,2851200," um porting code no removing parentheses"
2851200,2855200," yeah exactly so clamp"
2855200,2861200," for some reason i want to use clamp from the standard library though even though it's super"
2861200,2865920," easy to implement on your own but i want to use it uh from the standard library because this is"
2865920,2869760," something that has to be in the standard library all the time that's like for sure"
2870560,2877920," uh modules there should be something like math and let me try to grab without like with ignoring the"
2877920,2887120," casing uh let's search for clamp so we found some clamp cool uh-huh and for some reason it is"
2887120,2897120," it accepts the point because it it modifies it i see do we have just clamp uh okay so there is a clamp and"
2897120,2908320," basic right and let me try to find the clamp uh here it is it's part of the basic all right uh cool"
2908320,2913760," let's modify return is"
2913760,2914640," oh"
2914640,2918080," jai has contracts"
2920000,2930160," just like in c plus plus right so what is a modify right so because this looks like a condition"
2930160,2934800," that has to be met right and this is something that has to be checked i really i'm really interesting"
2934800,2940560," in this thing so what what the hell is modify so there should be something in how to uh on how to use"
2940560,2952000," this thing right modify and looks like uh-huh all right so there is a whole section dedicated to modify"
2952000,2959120," and modify the modify directive can be used to insert some code between the header and the body of a"
2959120,2967280," procedure or struct to change the value of the polymorph variables or to inject the polymorph for some"
2967280,2975360," combination of variables okay that's pretty cool so you have a procedure and you injecting some code"
2975360,2979920," at compile time uh right to check something"
2979920,2989280," or maybe to even modify right when you just call the proc it will force s64 there um as you can see the"
2989280,2993520," modifier goes between the procedure and body when the call proc the usual poorly polymorph"
2993520,3000400," frames um mechanism happens and value of t is found and the body of modify is run uh and there the value"
3000400,3005920," is not constant can be changed to whatever you want here we always set it to x and then return true"
3005920,3012400," indicate that we accept the poem polymorph so these things are called polymorphs or something it's really"
3012400,3020000," fucking interesting i really like that uh and then you can like check that a and b are the same type"
3020000,3026800," otherwise if they're not the same type it's not gonna work or something like that or if okay"
3026800,3035600," it's a very interesting mechanism i'm not sure how i personally will use it but yeah it makes sense"
3035600,3041760," and it definitely makes sense for clamp right because it probably doesn't make any sense if it's not a"
3041760,3046320," scalar right so yeah i really like that that's actually pretty cool"
3046320,3056240," it's like templates but simple if you know what i mean okay so i can probably just use clamp"
3056240,3065280," right so and that should just work uh let me try to recompile this into anything okay so uh so it has to be"
3065280,3076960," it dead uh that makes sense so it dead and this one has to be it dead another uh you're telling me that"
3076960,3084720," it is not dead i can't assign to a large value iterator perhaps you want it by a pointer"
3087520,3098800," this is what i was talking about this is what i was talking about when i uh you know used uh zig right"
3098800,3106000," so let me show you so this was one of my problems right so if i don't do that right if i don't do that"
3106000,3114080," and i try to compile this entire thing um it tells me that attempt to dereference non-pointer type and that's it"
3115760,3119440," it doesn't even try to understand what i'm trying to do"
3119440,3124320," uh but by the way no no no it's it's not something like this right um"
3124320,3133280," right it doesn't even suggest you right so it says that okay you cannot assign to const right and"
3133280,3138240," it doesn't really say anything else right so it just states okay this is cons i cannot assign to"
3138240,3145120," const right it could have guessed that i'm trying to like um iterate over like"
3145120,3152400," references right and because of that i need to put uh a star in here right it's actually very"
3152400,3159680," easy to guess but it didn't do that jay did that jay freaking do that and because of that i respect jay"
3159680,3165760," right so as you can see the compiler teaches you how to use it right the compiler teaches you"
3165760,3173280," it's like playing the game right it's like playing the game imagine that if to play the game you had to"
3173280,3179680," learn like read like a huge manual it was a thing in 80s and 90s by the way right so because people"
3179680,3186960," didn't know how to make games right so and how to make tutorials so usually they would ship like a huge"
3186960,3193040," manual with the game you're supposed to read that manual first right and then play the game so then"
3193040,3200640," later people realize that um you know it's not really reflects well on sales right so if the game just teaches"
3200640,3209200," you how to play it like in a hidden way people like such game more uh interestingly like the game"
3209200,3213760," development industry is sort of like forced to do that because there's like a huge competition and if"
3213760,3218560," you don't make a good experience you're just out of the competition in the language development"
3218560,3227520," industry we don't have such competition at all in reality i think in the language industry in language"
3227520,3234880," creation industry there's literally no competition i think there's no competition right because as soon"
3234880,3241520," as you sort of vendor locked um a certain company to use a certain language other languages just can't"
3241520,3245760," compete with you right so can you compete with kobol"
3245760,3254320," so kobol can be as shitty as it wants right it could be like a completely shitty language but since so many"
3254320,3259280," companies are vendor locked on that language it doesn't matter there's no competition in language"
3259280,3267840," space like it just doesn't matter uh and i wonder if that's like intrinsic to programming languages right"
3267840,3273760," can you establish like a similar competition as in game development probably not because games and"
3273760,3279840," languages are kind of like fundamentally different probably it's kind of interesting thought anyway"
3279840,3282000," uh so"
3282000,3290080," maybe there is a little bit of competition in new emerging languages right that didn't have an"
3290080,3297520," opportunity to vendor lock it like a user base uh but apart from that is there a competition between"
3297520,3303440," cobalt and java probably not so there is a competition between companies maybe maybe there is a competition"
3303440,3307600," between companies that use those languages but between the languages themselves all right"
3313360,3316640," actually human languages don't have competition either it's actually a good point"
3316640,3324640," there's a lot of interesting parallels between uh programming languages and um nature languages"
3324640,3337600," so and the more popular programming becomes the more those parallels become obvious so there is"
3339360,3346240," um sort of like three main uh purposes of the natural language the first purpose is to transmit"
3346240,3352240," the information uh at least like encyclopedia britannica sort of like"
3354480,3361440," um defines three goals for the language let's actually google the purpose of language"
3361440,3370640," uh so to facilitate communication yeah britannica i remember reading about that in britannica so"
3370640,3378000," specifically this paragraph is actually very interesting so it's like denotes three purposes in most"
3378000,3382320," accounts the primary person of the language is to facilitate communication in the sense of transmission"
3382320,3388880," of information from one person to another however social logistics and psychology uh social linguistic"
3388880,3394480," and psycholinguistic studies have drawn attention to a range of other functions for languages among"
3394480,3400640," these is the use of language to express a national or local identity uh a common source of clinical"
3400640,3406880," institution in multi-ethnicity around the world such as belgium india quebec and another conflict that is"
3406880,3413840," going on right now as well also related to that also important uh are the ludic playful uh function of"
3413840,3421520," language encountered in such phenomena as puns riddles crosswords puzzles and range of functions seen in"
3421520,3426800," imaginative or symbolic context such as poetry drama and religious expression so this is actually very"
3426800,3437280," important so three purposes of the language transmitted information um group identity right and um recreational"
3437280,3443600," right so some sort of like entertainment or whatnot and what's interesting is that right now as the"
3443600,3448880," programming become more and more popular you can see all of the three things in programming languages as"
3448880,3454720," well programming languages actually serve as a tool to transmit information from a human to a computer to"
3454720,3461760," explain computer what needs to be done and also to transmit information between humans right to uh"
3461760,3467680," transmit information about what the computer should do to another human right so we explain to other"
3467680,3475120," human being what computers should do through the programming language as well so uh group identity"
3475120,3482320," i can i can show you only one language and you can clearly see what i mean right this is a really good"
3482320,3489840," example of using programming language as a group identity so and the more this industry sort of grows"
3489840,3495600," the more we're starting to talk about how nice the community of the language is so it's almost like"
3495600,3503520," every time a new language appears the creators of this language they making a focus on look how big and nice"
3503520,3510000," of a community we have so the focus in is on the identity right so we can clearly see the language is"
3510000,3518560," being used as the group identity so and the third one right ludic playful or some sort of entertainment"
3518560,3528480," or some sort of like recreational this is something that i personally do i'm using languages in a ludic playful way"
3528480,3536000," and they also even show puns they also show puns and my favorite pun that i've ever done in my entire life"
3536000,3540000," using programming language can be found in my gist"
3541280,3550000," um so and that pun is essentially the most uh memory safe buffer overflow in rust so essentially"
3550000,3560320," this is completely safe uh rust but at the same time it behaves as a program with buffer overflow"
3561120,3572320," so this is an example of a ludic usage of a programming language this is something that i"
3572320,3577120," personally like to do so this is what i call recreation programming and you can clearly see that"
3577120,3583920," all of the three uh purposes of the language uh explained in britannica they actually fit programming"
3583920,3591840," languages as well transmitting information uh group identity and the ludic entertainment recreational stuff"
3591840,3599440," so yeah and i'm gonna give the link to this thing in the description as well right so if anyone is"
3599440,3605600," interesting because i personally i'm super proud of this pun i'm actually super proud of this pun right"
3605600,3611360," it's absolutely safe rust but at the same time it's a program that behaves like a program with buffer overflow"
3611360,3618960," it's just so so beautiful i love it i absolutely love it uh so most memory save buffer"
3618960,3631600," okay uh code golfing is one of the one such thing as well so and there is a lot of aspects to ludic uh"
3631600,3635520," how do i pronounce this work correctly i'm sorry if i mispronounce it i think there is a lot of aspects"
3635520,3639600," to ludic programming or recreation programming right you can do a lot of different things"
3641360,3655200," good programming prank uh so all right um so what we were talking about"
3655200,3660880," yeah i guess all right so let's continue"
3663280,3672240," hmm and by the way again speaking of syntactic and programming puns right i think the stuff with double"
3672240,3681840," colon and colon equal right them not being like a single token but being actually two tokens smashed"
3681840,3688000," together it's it's also pretty good pun but it's more of a syntactic article syntactical pun but still"
3688000,3696400," yeah so i still still like it oh yeah so the language competition that's what we're talking about the"
3696400,3702640," competition actually exists by the hand of the implementers as occurs with c plus plus but it's not"
3702640,3710960," happening in that many languages right so the competition between the in you know vendors of the standard"
3712960,3722320," uh it has nothing to do with the language itself right so maybe the vendors of the c plus plus standard"
3722320,3727520," implementations they compete with each other but the c plus plus as a language does not really compete with"
3727520,3735440," other languages that much or at least the competition is not that strong to actually improve the quality"
3735440,3745200," of the languages it's competing with right so i mean if c plus plus competed with somebody as a language"
3745200,3750400," not as implementation but as a language it would improve over time does it improve over time"
3750400,3755200," well some people may say yes but i strongly disagree with them um so"
3757920,3773840," okay what do we have uh oh yeah so yeah the language actually teaches you how to use it so we have to"
3773840,3781200," put like a this in here all right and it will iterate by a pointer um and declared so it has to be it"
3782320,3787840," uh what else do we have in here uh target to react so this one is also it"
3787840,3796960," it and this one also has to do something like this"
3796960,3803200," interesting so i have to do reference oh yeah"
3804720,3814080," so the time has well it it kind of worked didn't it i'm surprised how did it how did it work because"
3814080,3819120," this thing is a pointer but at the same time i didn't have to dereference it to pass it there"
3819120,3824000," there's something really sudden here but um i'm gonna leave it at this one now"
3830480,3836640," i think i want to make a small bag to refill my water but yeah uh let's continue removing parentheses"
3836640,3842400," so we don't need any parentheses in here so i think we ported the update function so update function seems"
3842400,3856080," to be working fine um okay so let's continue uh we need to do the render so and the render is rather"
3856080,3859440," interesting right the render is rather interesting"
3859440,3872800," oh by the way i remember the simp actually accepts the um the course as vector four right it accepts the"
3872800,3874000," course of the vector four"
3881040,3885440," somebody in the chat is heard by the color of my bike shed i'm really apologizing for that"
3885440,3892640," uh so do we need to have a render in here so i think we're not gonna have a render in here"
3892640,3898640," okay so let me let me see uh project angle"
3898640,3907600," so if i take a look at the simp itself um we're gonna change the color of the bike shed a little bit"
3907600,3913760," later as uh once i'm done with you know with moving the bike shed to a different place"
3913760,3922560," so let me see so it's supposed to be simple and i think there was a module immediate right so immediate"
3922560,3930480," quad right so we have immediate quad and here we have basically x and y x and y and as you can see here"
3930480,3936480," color is vector four right so that's what we need to call in here uh that's what we need to call in here"
3936480,3943920," but the coordinate system so here's the problem in sdl core the coordinate system um has y going down"
3943920,3953120," but sim has simp has the y going up right and that creates uh some problems so maybe i'm going to"
3953120,3959600," create my own function called fill rect which accepts the rectangle that you want to render so this is going"
3959600,3966080," be erect and also the color that you want to render it's a vector four right so and here we're just"
3966080,3977040," going to call this thing uh so feel erect i'm going to take the approach rect and the approach color right"
3977040,3982960," i'm going to remove this nico red edge thank you so much for eight months at which prime um thank you"
3982960,3991840," thank you thank you chat do you feel wrecked oh oh so can i how can i indicate that something is not"
3991840,3999360," implemented can i say false uh to do not implement it because i remember there was some sort of assert"
4000080,4002880," and this is another thing that i would like to have in here uh"
4002880,4015360," okay what else do we have in here so this one has to be like this"
4015360,4020400," uh-huh so this is bar and here we're gonna feel erect"
4022320,4028320," bar correct and bar color there we go"
4028320,4035840," and in here we have to iterate through all the targets and render them as well right so it's going"
4035840,4045040," to be four targets pool um if if it not dead"
4046800,4056400," uh just uh just uh can you do something on this field correct uh target target correct"
4056400,4060400," look how concise this language is"
4060400,4069840," look how concise it is isn't that beautiful i think it's freaking beautiful right so you're rendering the"
4069840,4075680," projectile you're rendering the bar and you're rendering all of the targets if they're not dead"
4076400,4081760," right so you can put everything in a single line so you can write a lot of one liners in this language"
4081760,4088720," beautiful beautiful beautiful beautiful beautiful i truly like it truly like it okay so back to four"
4088720,4094800," and does it does it mean that i have to import the math i think that's what i have to do i have to"
4094800,4101440," input the map and the approach color oh yeah this one is interesting so approach color um"
4103040,4112080," has to be i can probably unpack the color right so i can do unpack the color uh right so and this is"
4112080,4121280," unpack the color so that's cool and unpack the color right now returns these four floats so it should"
4121280,4128240," return vector four right so let's quickly do that vector four and we're gonna just put it in here"
4129600,4134160," cool cool is it gonna work is it gonna work now although it's probably the struct literal must be"
4134160,4141520," constant they're not freaking constant okay so that's kind of sad not gonna lie so i think i can do"
4141520,4146560," and make a vector four i think that's one of the things we want to do"
4150240,4157360," beauty and conciseness it's not particularly finished yet but i'm pretty sure syntactically"
4157360,4163360," it's gonna become even more beautiful when john actually focus on the syntax right now he doesn't"
4163360,4171120," really focus on the syntax that much so that's why it's kind of all right uh but once he starts focusing"
4171120,4180080," it i think it may become even even cooler than that so right now the the syntax is not a priority"
4180080,4191680," okay i think i ported all of the necessary logic in here right so the only thing i need to do now is to"
4191680,4198000," organize the event loop right open the window um you know read the keyboard and stuff like that so that's"
4198000,4203920," one of the things we'll have to do so since i'm not using sdl right i'll have to write this part of the"
4203920,4213200," game myself from scratch uh okay so let me go to i already have like a tetris right so maybe i'm gonna"
4213200,4224560," steal some code from tetris so tetris giant so what we'll need to do is to uh create a window and also have a"
4224560,4229440," simp so we'll need a window creation module input module that handles the input and also"
4229440,4234640," simp which makes everything simple i don't really know like why it is separate modules but it is what it"
4234640,4245600," is um jailbreak is a great name thank you uh i really appreciate that okay so we need to create a window"
4246720,4255280," right and this one is going to have j break and we have width and height we already have window width"
4255280,4262320," and window height so i have to put them here window width and window height there we go"
4262320,4271120," after that so we already have shoot quid so we're not gonna assign it anywhere so we set the render target"
4272240,4279680," so then we are organizing while not quit we keep doing other things right so we are computing the"
4279680,4287840," delta time right so this is a delta time related computation uh then we update"
4287840,4297120," the window events i suppose right so that's what we do uh maybe it could could have been organized a"
4297120,4302480," little bit better but it's fine then i'm iterating through all of the events that we have right i'm"
4302480,4309680," iterating through all of the events and if i encounter quit i'm actually setting quit to true"
4309680,4318960," right so that's the only thing i'm gonna care about right now right and then here we're supposed to update"
4318960,4328560," the stuff uh and i think the last thing we need to do we need to swap the buffers so let me see so here we"
4328560,4332720," set the background uh but i'm going to do that a little bit later so for now i just want to organize"
4332720,4340720," the event loop like a very simple event loop that does the things okay um so this is the delta time"
4340720,4349600," computation and this is fine okay uh clear target"
4355120,4363360," all right so undeclared dt max right and dt max what do we say the dt max dt max is something like"
4363360,4370720," this i can probably steal it as well uh-huh we have anything else okay so we've got the window right"
4370720,4378080," so we've got the window it doesn't render anything because we didn't hook up the uh logic updating and"
4378080,4382240," rendering into here right so this is something that we'll have to do as well"
4382960,4390080," so when we render actually we don't clear anything in the render which is fine i guess but yeah so"
4390080,4397600," let me get the code that cleans up the background all right so what we're doing here is that we do it"
4397600,4406960," like this uh-huh this one is interesting so i have a background color and i just do the using for"
4406960,4412080," that background color and it's sort of imports the values in here i wonder if i can do something like"
4412080,4420560," background color then i can unpack this entire stuff and use using on an expression that is very interesting"
4420560,4431360," and to the two yeah i wonder if it works if it works it will be actually very cool"
4431360,4441520," i think it does work holy you can actually do using on an expression the that's actually pretty cool"
4442160,4444640," it's like you unpack okay that's that's pretty cool"
4444640,4454880," because this thing returns a structure and then it just imports the fields of that structure but you"
4454880,4463040," you cannot refer to the structure itself um just compiled phasm and phasm 0.1 second yeah it's amazing right so"
4463040,4470240," it's surprising how fast you can get software if you just remove all of the right"
4470240,4480720," i think like i strongly believe that in the forthcoming years the way we speed up software is going to be not by"
4480720,4487120," buying better hardware but by removing all of the crap that we put on software in the first place to make"
4487120,4494160," it slow and i think there will be actual business of stripping of uh abstractions from the software to make"
4494160,4501440," it faster i think like people will actually make money from that so because for like many decades people were"
4501440,4508400," making money for uh from like piling obstructions on top of software because they needed to develop things"
4508400,4514640," quickly as soon as we get to the point where like we don't get the faster hardware and the hardware gets"
4514640,4519760," expensive right shortage of silicon and stuff like that we'll get to the point where the business that"
4519760,4525280," strips off all of that crap is going to actually grow and at that point people who know how to"
4525920,4530880," go deep into the abstractions and write the code as simple as possible they're going to be the"
4530880,4537120," valuable programmers in the forthcoming years i'm pretty sure at least i have a feeling right so"
4537120,4543440," afroditmu afroditus muse thank you so much for twitch prime thank you thank you thank you"
4543440,4552960," um all righty but i don't know when it's gonna happen maybe like in in 10 years i think i have a"
4552960,4563520," feeling it's just like a level of feeling but when the the day comes i'll be there okay hopefully i don't"
4563520,4575840," know who knows um to do two so what's going to be the next thing um we have an event loop and in that event"
4575840,4585440," loop we check for the keyboard i wonder if there is any way to just check for the whether a specific"
4585440,4591360," key is pressed or not or do i really have to handle the key down and key up that's a good question"
4601920,4608320," fintech will always find a way to pile more bloats yeah probably uh let's have a company that ships"
4608320,4613840," lightweight but still future complete product will destroy macrosoft apple yeah yeah they will just just"
4613840,4624480," like that uh because users want fast responsive software they do want that they just can't say that"
4625440,4633680," um because they don't they cannot express right so uh they don't have enough like language or"
4633680,4639680," vocabulary to express what they want right so when they use software they just like does it feel nice"
4639680,4644560," if it feels nice they keep using it it doesn't feel nice it knows you they don't use it they don't have"
4644560,4650720," time and they shouldn't have time to analyze why they don't like a specific software it's not their job"
4650720,4656480," it's the job of the developers right and if the developers are failing to realize what the user"
4656480,4664480," need well maybe they should be fired right so because like you're you don't you don't do your like job"
4664480,4667920," um i don't know"
4672240,4680080," it's just like it's it's it's borderline scam seriously right so the the users can't articulate"
4680080,4686080," what they want and the developers are taking advantage of that right so and on top of that"
4686080,4692800," the users don't have any choice right do you have any choice like if you're like a daily windows users"
4692800,4697520," user do you have a choice to just switch an operating system switch an operating system is a huge pain in"
4697520,4704080," ass because you have to not only learn a completely new operating system but you also have to modify your"
4704080,4710080," entire workflow that you developed for years for that specific environment like you just can't do"
4710080,4717600," that it's too expensive right so and yeah because the users don't have a choice users can't articulate"
4717600,4722720," what exactly they want from the computers developers and by developers i mean the the software development"
4722720,4730640," companies like abuse that and it's it is like it's it's fucking sad state of the of the industry"
4730640,4740080," and also a lot of the developers don't know how fast software can be yeah it's just like it's so"
4740080,4749600," fucking sad um anyway i'm sorry um all right yo"
4749600,4762800," hmm i think i understand why it was tokenized differently remember how i complained about this"
4762800,4768080," thing being tokenized like and using this as a part of the world i think i know why it was used as part of"
4768080,4774560," the world because that enables this kind of highlighting um"
4774560,4786560," gc oop gc and op are kind of like the orthogonal thing i don't know why did you smash them together"
4786560,4799440," so my favorite example is that the game boy advance"
4799440,4808240," a device with uh 16 minutes instantly boots why is it different on devices with five gigahertz cpu with"
4808240,4816080," multiple cores ask microsoft developers they're they're masters of excuses they can come up with like a huge"
4816080,4823520," phd thesesis of excuses they can explain you why it is slow uh they know all about it"
4823520,4829360," anyway so um true true true true true let's continue"
4829360,4836320," um i need to"
4841680,4847840," so we need to do an update but most importantly we need to do uh this thing"
4847840,4852320," so update delta time"
4852320,4868320," so current dt okay so we have a current dt then we clean the background i don't know why i did like that but"
4868320,4875360," that's fine because it's part of the rendering that's why yeah okay so we have sort of like this logical"
4875360,4883040," sections of um updating the input right so this is where we handle input then we update the state and"
4883040,4889600," this is where we render right and then i can say render that place and that should be fine"
4891200,4897200," and i guess that's it so now this thing should render something and it doesn't render because"
4897200,4901120," we have something that is not implemented yet okay so we need to fill the red direct"
4901120,4906720," right let's feel direct uh what i have to do maybe i have to do using"
4910160,4920080," simp uh immediate quad all right immediate quad and we have to provide x y and x y so this one is going"
4920080,4932000," to be x y and then uh this is going to be x plus w and y plus h and then we're going to use the color"
4932000,4938480," right but here is an interesting thing as i already said there is a problem of discrepancy between the"
4938480,4945600," coordinates so i'll have to kind of invert the coordinates all right so but the question is how"
4945600,4958720," is how am i going to do that right"
4958720,4973600," so x is gonna stay the same but y y has to be slightly different so i can probably probably"
4975600,4985920," do y minus window height actually window height minus y right so something like this so that's going"
4985920,4986480," to be y"
4986480,4995280," window height minus y so this is y so that means it's just sort of like reflects and now it's that"
4996320,5007680," uh but then i'll have to do the same thing right i'll have to take the same y but now subtract h i"
5007680,5013200," think this is how it's going to work i think but it just like completely intuitively and it didn't work"
5013200,5021360," because why uh immediate flash try to uh try to immediate flash when oh okay so we also have to set"
5021360,5027840," the shader for the color okay thank you so set shader for color i wonder if i can just do that once"
5027840,5033040," uh here because i'm never gonna just like to use it for anything else"
5034560,5036160," okay it kind of worked"
5036160,5045040," but not completely some of them are missing and the question is why the heck are they missing"
5045040,5054880," i think i know why because uh when this entire thing is not initialized it's probably filled with garbage"
5054880,5055600," so from the stack"
5055600,5070320," uh while porting uh and or ah okay thank you well for condition in the body and why"
5070320,5072960," uh"
5072960,5077120," where did i do that"
5077120,5080400," so zynga"
5084880,5096400," hmm okay i see thank you all right so speaking of the garbage thank you thank you thank you really"
5096400,5104560," appreciate it right so i wonder if i can say okay always initialize this thing with false is that"
5104560,5111920," something i can do i can do that but it didn't work that is very cool okay can i now"
5112880,5115440," say well yeah so that's fine"
5115440,5119920," uh can i say dead"
5119920,5129680," okay apparently this didn't work or maybe i don't understand how this default value works"
5129680,5137120," right because i would expect that it would just like do that for me when i do that but it didn't do that"
5137120,5142000," for me so apparently i have to do that so i'll have to like see what exactly that is"
5142720,5146800," uh but run for that so there you go so this is how it looks like and we can try to run it"
5146800,5153840," from zik right so this is yeah you can clearly see so this is a gi version and this is a zik version"
5153840,5159680," right you can please so this is a jail break and this is a zig outbreak i just like took the"
5159680,5165520," same code and ported it so this one it works right so you can play it but you can't play this one yet"
5165520,5175440," because i didn't hook up um didn't hook up the controls right so i didn't hook up the controls"
5175440,5179760," yet but apart from that it like it looks identical right so it's it's the same code and it looks"
5179760,5185600," identical which is pretty cool so what we need to do we need to hook up the controls uh so let's quickly do"
5185600,5194000," that um so if i go to tetris um so probably have to handle these things right so let's quickly do that"
5194000,5206080," uh so let me put it this way so keyboard if pressed or if not pressed interestingly"
5207360,5218480," interestingly i think i want to have two variables in here right something like left uh and right"
5218480,5226000," left and right so and in here we're gonna do something like this if key code"
5229200,5243920," if key code case arrow left we're gonna take left and aside event key pressed if right we're gonna do"
5243920,5253520," that thing with right there we go right so we have left and right uh that way it would be easier to port"
5253520,5258880," this code right that uh resets the step timeout"
5258880,5265600," oh this is this is a completely different i'm sorry"
5265600,5271120," so it will be easy to port this code all right"
5271120,5280400," where we set the bar dx to zero then if left"
5281920,5284400," we do that one will start it of course"
5284400,5288320," if right"
5288320,5297600," let's start it and that should be it i think so but i'm not sure i'm still not sure how to handle the a"
5297600,5304160," and d and stuff like that so we'll have to i'll have to think about that uh okay so this does not compile"
5304880,5309120," uh because it's equals anything else um"
5309120,5316480," so we said okay so it's true when it's not equal to zero"
5316480,5320400," okay you can probably also assign like that"
5320400,5326480," uh yep okay and it crashed because i never implemented overlaps"
5328640,5333200," let's go ahead and implement that uh so we already have everything that we need to implement in here"
5333200,5333760," right so"
5333760,5340800," you know what i want i want to have a function that accepts a rectangle"
5344960,5346720," and it actually returns the sides"
5346720,5355840," uh float float float float float i think it has to be 32"
5355840,5363600," and here we're going to simply return uh so left is going to be x but right is going to be x plus w"
5364160,5373680," y y plus w plus h and there we go so that way i can say um left a right a"
5373680,5379040," maybe i'm going to actually do this left a right a"
5382080,5384080," top a bottom a"
5384080,5388000," sides"
5388000,5395360," right and i can easily just port this condition"
5395360,5400560," so i'm going to just put it in here there we go"
5406960,5422160," r a less than lb or rb less than l a or b a less than t b or b b less than t a all right and then"
5422160,5429600," we invert this entire thing and return we could apply the morgan law but i just don't"
5429600,5432480," want to be a smart ass today so i'm going to just leave it as this"
5435760,5439040," lorataba start of the lady gaga song"
5439040,5447600," very fun so this is how we're going to check that something overlaps hopefully i didn't make any"
5447600,5458480," mistakes in here we'll see okay so all right and it it just works i ported this code and it just"
5458480,5462320," worked isn't that amazing how it just worked i think it's amazing"
5465280,5472080," so it's pretty cool so there you go this worked"
5472080,5476560," and it's identical to the zig version"
5476560,5485600," it's a little bit smoother because we actually have a variable uh fps right so that's why it"
5485600,5488400," feels a little bit smoother so this version is a little bit better"
5490240,5498640," i don't have a pause i didn't yeah okay how can i handle the characters and stuff like that i remember"
5498640,5500640," people were suggesting to use the character"
5501760,5512960," um um can i do case character a right so this is a and d and it didn't work and"
5512960,5518160," yeah it still doesn't work but if i try capitalizing this stuff"
5518160,5525600," if i try to capital it still doesn't work so we'll have to learn how to work with that stuff"
5527840,5535600," uh so we can take a look at the some of the examples in here right so we have to go to the module um maybe"
5535600,5544640," let's go to the examples right and i want to just grab this thing and see how it is used"
5546000,5553200," key code the mouse button left mouse button right get key code"
5553200,5561360," boom input vk translation table all right so this is module"
5561360,5563840," uh again"
5567040,5573440," let's find it so it must be somewhere in the module okay all right i think i think that's that's"
5573440,5578320," it i think that's what we need so when there is like for different operating so there's only macOS though"
5578320,5583040," uh why is it only macOS that's weird"
5583040,5588240," oh yeah because we are inside of macOS"
5588240,5596640," okay i wonder if do we have other versions do we have other versions that's a good question"
5597040,5599680," uh-huh so no"
5599680,5609360," good key code yeah okay for for this one we take a key symbol and"
5609360,5618400," okay cool so that's probably what i have to do uh so main j"
5620800,5625840," so it accepts key sim so that means i have to"
5625840,5632080," is it even available but uh we can give it a try okay"
5632080,5637200," so what if i try to do something like this uh get key code"
5637200,5641200," a d i'm gonna make them like this"
5644720,5646400," ah this is not what i want it what the hell"
5646400,5651680," okay character"
5651680,5659680," can be constant condition listed by case must be constant"
5659680,5668560," you need through after char do i condition and save case must be constant i don't think so"
5668560,5674080," what i think is that first of all i have to make this stuff constant right at least"
5674080,5681200," and then maybe fall through"
5691760,5694400," but i'm not sure if that's how i use that"
5694400,5697440," yeah i'll need to take a look at the examples as well"
5697440,5699760," maybe even how to"
5699760,5702080," through"
5702080,5710720," fold through"
5714720,5725040," okay it is a thing and it has to be semi-colon okay i see that's cool"
5725040,5741120," okay it works that's beautiful so this stuff works"
5742880,5746560," uh it's kind of surprising that i really have to run it do i really have to run it"
5746560,5752240," condition the case must be constant"
5752240,5761840," okay"
5761840,5769760," i'm not sure if this is a good idea to do it like that so i'm gonna go to the examples one more time"
5769760,5775040," and i'm gonna just like try to find how people use this kind of stuff right because i'm pretty sure"
5775040,5779680," there's a better way to do that uh well"
5784560,5790320," people don't use it in examples very often okay maybe in modules"
5790320,5797920," yeah there's not that many examples on how you're supposed to use this thing"
5797920,5800400," that's what makes it interesting right"
5800400,5808640," uh i guess it's fine right so you i can always pre-compute this kind of stuff at compile time and put"
5808640,5815360," it into the constant and just use the constant in here uh so that would be fine without the char"
5815360,5823920," do are you just guessing again without backing up that with the knowledge right i can guess myself"
5823920,5834480," all right um doesn't really matter uh i guess that's basically it that's the whole thing"
5835040,5847920," that's why i put in question mark oh okay"
5847920,5852240," i see i see all right"
5858000,5865760," wait wait did it just something something sus has happened doesn't it handle on the side thingy"
5865760,5873520," i feel like it failed to handle okay let me try to increase i think i put somewhere a bug"
5873520,5881600," a nasty nasty bug what i need to do now is to set 100 to the thickness of the bar"
5883920,5887520," well unfortunately i want to change the"
5887520,5893120," yeah so bar thickness unfortunately is used"
5893120,5897600," everywhere in here so maybe i have to do something like this broach size"
5897600,5900560," bar thickness"
5900560,5912960," oh which is fine in here i suppose all right so no it's fine it actually handles that stuff from the"
5912960,5919040," side side it's fine that's a pretty girthy bar on from the right it didn't work properly from the right"
5919040,5921520," yeah so there was something"
5921520,5926560," oh i think i know what was that"
5926560,5933920," it usually happens when i'm moving with this thing in the same direction"
5936160,5939200," uh right but when it's in an opposite direction"
5939200,5944800," yeah i see what's going on"
5944800,5956080," so i wonder if this it's the same bug as in zig right"
5959120,5960640," uh as in zig we'll have to see"
5960640,5973120," so i'm gonna make the girthy bar as well in here"
5973120,5982160," and where can i do that bar thickness so i'm gonna put 100 in here right and"
5984720,5992960," approach size okay here i'll try to build zinc as dick i'm sure"
5992960,5998320," where was it third party zig"
5998320,6009600," and being zig build run okay so it's gonna work okay so this is the z version yeah it's the same"
6009600,6016160," bug as in z version because it's moving in the same direction okay so but it's more if it's moving in a"
6016160,6021280," different direction it's going to work so it's the same bug"
6027920,6035200," it's inside chat it's inside i hit it okay"
6035200,6045360," you can catch it yeah you can"
6050400,6055520," all right all right that's an interesting book um we'll have to do something about it we'll see"
6055520,6061200," but i really like the girthy bar the girthy bar"
6061200,6073040," okay so no this is not a zig out it has to be a jibrake let's do the jibrake yeah jibrake is way"
6073040,6076640," smoother right because it has a variable uh thank you"
6076640,6083040," girthy feature so for how long i'm streaming already i'm streaming for almost two hours what"
6083040,6087200," the so i think i'm gonna make a small break and i'm gonna try to fix this thing"
6087200,6092480," i really like this bug should i even fix it i mean it's fine"
6092480,6100880," it's pretty funny though you can just make the thing less girthy right so you can make it like very"
6100880,6106320," thin and it's not going to be a bug anymore right so you can you can do something like this so you can"
6106320,6110160," see it's not about like at all so"
6110160,6119200," maybe it would be nice to to actually fix that all right so let's try to understand what the hell is going"
6119200,6129840," on right so let's take a look at update so here we update the bar right we update the bar and we're"
6129840,6134960," checking for the horizontal collision right so horizontal collision happens"
6134960,6139840," primarily with the bar so the bug is specifically with the bar"
6139840,6150160," right and when that usually happen i think i'm pretty sure why this kind of stuff happens"
6157200,6167280," it's when the bar and the projectile move in the same directions horizontally in the same direction"
6167280,6175600," right so it's when the this is the bar right so because it's very girthy we made it so so that's"
6175600,6181360," the velocity of the of the bar we're moving there and the projectile um"
6181360,6191520," is something like this and it's moving horizontally also in the same direction vertically it's a different"
6191520,6196400," direction vertically but horizontally it's the same direction so as you can see the component is just"
6196400,6201200," pointing in the same direction anyway so you can you can do something like this to indicate the component"
6201200,6209360," right so that's the uh that's the thing so and here's the thing the speed of the bar the speed of the bar"
6209360,6219360," is bigger is higher longer stronger bigger than the horizontal speed of the projectile"
6220080,6226160," and this is so you can always catch up the uh the projectile to you know reflect it so"
6226160,6235440," and that's why when this kind of situation occurs the bar can always catch up and hit this thing so"
6235440,6242960," what happens when the bar hits the projectile horizontally so this is the horizontal collision"
6244000,6257040," we always reflect dx right so that means as soon as they hit the velocity will become this you see so"
6257040,6264800," that's the problem uh that's the problem and that only happens when they move in the same direction"
6268960,6272800," that only happens when they move in the same direction so what i'm thinking is"
6272800,6276800," what i'm thinking is"
6276800,6285680," so we're not doing like a proper physics or anything so that's why we have a lot of hot code um"
6285680,6290160," we need to"
6296800,6302880," essentially check are we overlapping in here right if we"
6302880,6310960," collide it with the bar and we over light it vertically and they have the same direction of the"
6310960,6321040," of the velocity right we should not reflect that thing right so we should not reflect the x but we should"
6322240,6328800," reflect the y right so that's what should happen so i want to try"
6328800,6334240," so it's super easy to write the code like that if this code"
6334240,6340480," was located in a separate isolated procedure"
6340480,6345120," um so let's call it horizontal collision"
6345680,6352960," hurry's uh collision right so something like this and i'm gonna move everything related to horizontal"
6352960,6353920," collision there"
6353920,6359200," uh huh so there we go"
6359200,6367200," something like this so this is a horizontal collision we're gonna work with horizontal collisions specifically"
6367760,6368400," right right"
6368400,6373200," horizontal collision"
6373200,6379840," and to make things a little bit more clear i might as well introduce vertical collisions so it's going"
6379840,6382160," to be vert collision"
6382160,6387360," something like this so this is a vertical"
6387840,6393120," vertical collision"
6393120,6396880," so i don't like"
6396880,6404080," that hori's is longer than vert let's call it horse horse and vert"
6405520,6407200," horse and the vert"
6407200,6420960," so let me let me see so vert collision and uh let me double check"
6420960,6433280," uh it doesn't have a dt so let's uh uh let's actually give a duty uh float 32"
6435520,6452720," so it didn't break anything okay well that was the same okay cool"
6452720,6460400," so i want to rewrite this stuff a little bit just a little bit"
6464320,6473520," so first of all we have a new projection right if project and x is less than that or"
6473520,6478480," actually yeah we can do something like that"
6478480,6491760," so we have this long uh collision condition and if this is true right if we collide it"
6493280,6504400," we kind of want to do this thing right so we reflect it and we assign this thing to a different place"
6504400,6510000," and afterwards we straight up short circuit this entire stuff"
6510000,6519680," we straight up short circuit so that way we don't care about this thing like at all"
6521600,6525440," because then as soon as something overlaps"
6525440,6530800," right as soon as something overlaps we can do it again"
6530800,6533440," right"
6533440,6537040," and furthermore"
6537040,6540400," i can do it like that"
6540400,6548240," so short circuiting so the reason why this logic is what was so complicated is because i needed an easy way"
6548240,6554720," to short circuit this entire logic like i didn't have a way to do that because this thing was not in a separate procedure"
6554720,6556320," um right"
6559200,6562960," so this is so this is the target if it's uh dead continue"
6562960,6572800," let's do it continue if it overlaps it becomes dead uh maybe i can even collapse these things together"
6572800,6583440," not dead and overlaps becomes dead then we do that and then we short circuit uh because of that because of that"
6583440,6588800," we don't need this condition anymore so the logic kind of became a little bit easier you know what i"
6588800,6593600," you know what i mean even though there is a little bit of duplicating here right a little bit of a duplicate"
6593600,6597680," it's a little bit easier to read because now it is clear what the hell is going on"
6597680,6605760," right so this basically we um reflect when we hit anything right we just reflect this entire thing"
6606480,6612320," we can even probably put that into like a separate uh separate macro and whatnot"
6612320,6619200," there's a comparably new programmer who only studied some six years ago"
6619200,6621440," is there a real reason to use short names like"
6621440,6625840," instead of projectile or is it just a habit"
6629280,6642480," okay so uh let me see does that work it seems to be working more or less okay so it even happens"
6642480,6654400," when some other stuff okay uh all right so now now i hope the music is not too loud sometimes it is just"
6654400,6665200," like too loud sometimes it is not let me just readjust things around um so why was it important why was it"
6665200,6675600," important because now i can do something like if we overlap horizontally right we can short circuit but we can"
6675600,6677760," short circuit only if um"
6677760,6682240," the stuff is"
6682240,6695840," they move in the same direction so basically"
6695840,6702960," so this overlaps"
6705600,6706160," and"
6706160,6708320," and bar"
6708320,6711920," x is equal to"
6711920,6714880," proj x"
6714880,6718800," actually bar dx"
6718800,6721840," proj dx right"
6721840,6729040," so and maybe we can even move this logic sort of into the same thing"
6729040,6734960," right so that's all we have in here so this is or"
6735600,6739600," or"
6739600,6746560," yeah there we go so when one of these conditions are true"
6746560,6750000," only then we reflect so if they overlap with this thing we"
6750000,6755920," only reflect when they are not in the same direction"
6755920,6763680," because if they are you're basically moving towards it so but that also gives an opportunity to"
6764160,6769840," uh for the vertical collision to kick in right so if the vertical collision kicks in"
6770640,6778400," it might actually solve that problem yeah okay it fixed it's actually i think it's actually fixed"
6778400,6780080," well i mean no it's not fixed"
6780080,6784240," uh i need to catch the moment"
6784240,6790160," yeah it doesn't fix anything because it is always faster"
6792480,6798640," yeah so you cannot really fix that because it is always faster there's like nothing you can do about that"
6801200,6801360," um"
6801360,6808880," um there is really nothing though maybe there is something we can do"
6808880,6817040," uh we can just snap the bar to the top"
6820720,6826400," just snap the bar to the top pro thank you thank you for the for the rate uh thank you thank you thank you"
6826400,6833680," thank you so yeah because the bar is just like moves uh faster you can't really do anything"
6835040,6839280," okay so 100 if i try to move it like this"
6839280,6848400," yeah so uh people already suggested what i said you can always push it to the to the surface essentially"
6848400,6851360," it's one of the things you can do um"
6851360,6856560," i guess i guess i'm gonna go that route just essentially push it to the to the surface"
6858320,6864800," uh it's only happens like horizontally because the bar moves horizontally right because the bar moves"
6864800,6870080," it's kind of fun"
6870080,6876400," okay"
6876400,6879280," so"
6879280,6885440," so horizontal collision"
6888320,6892320," i'm thinking i'm thinking i'm thinking if"
6892320,6897120," we've got that if we are overlapping"
6897120,6904640," if we are overlapping we're doing this thing right we're doing this thing"
6904640,6914080," but on top of that if we are moving in the same direction we need to take the bar uh approach"
6914080,6921440," approach y right approach y and push it to the surface and the question is where is the surface"
6921440,6929840," so the surface well we already compute the surface when we compute the initial y"
6929840,6940880," all right it's um it's actually very specific value we can we can pre-compute that value i think"
6941440,6943200," it's good it could be a pre-computable value"
6943200,6948400," so project x actually approach y"
6948400,6951040," bar"
6951040,6958160," i hope let's keep it like that because i can't really come up with a good name for this thing"
6958160,6965600," so i'm gonna keep uh looking at this uh all right so let me see let me see"
6966160,6974640," so i still doesn't work even though i said it like snap it to the surface"
6974640,6982480," snap it to the surface let's actually do that all the time how about we do that all the time if we"
6982480,6984960," just do that"
6987200,6995120," okay that is too aggressive i think uh let's make it girthier"
6995120,6999200," 100 there we go"
6999200,7006480," all right that that's that sucks"
7009920,7012560," but i mean it's not supposed to be like that anyway so"
7012560,7027120," uh-huh well it's not it's not that bad right so it's it only sucks this much because it's so girthy"
7027120,7029600," right you know what i mean um"
7029600,7036800," it's because it's so girthy um"
7036800,7039680," and"
7039680,7051280," so i probably need to think about that uh if i make it like half of the approach size it's not a problem"
7051280,7060800," not so"
7060800,7071280," all right anyway so i'm gonna keep uh leave it as this and then i'm gonna think how i want to improve"
7071280,7079200," that so i'm training for two hours already anyway so that's my limit right because streaming is a really"
7079200,7081520," intensive process so"
7081520,7093520," i guess i'm going to go does anyone have any questions before i go"
7098080,7110880," um"
7110880,7117920," all right"
7117920,7124320," when will you come back to port in the future"
7127280,7127920," um"
7127920,7132000," will we fix it for the zig version no"
7132000,7134560," only for 300 bucks"
7134560,7142000," all right that's it for today uh thanks everyone who's watching me right now i really appreciate it"
7142000,7154480," have a good one and i see you on the next stream love you"
7157280,7163200," um"
7163200,7163200," you"

start,end,text
0,6080," looks like we're live hello everyone and welcome to yet another recreational programming session"
6080,13200," with a mr azuzin let's make a little bit of an announcement and officially start the stream as"
13200,21040," usual as usual red circle live on twitch and what are we doing today on twitch.a television website"
21760,32880," today we are improving improving build configuration for mutualizer i'm gonna give"
32880,41680," the link where we do know that twitch.tv/todding and i'm gonna ping everyone who's interested in being"
41680,48560," pinged so uh mutualizer is music visualizer that we're developing for quite some time already right"
48560,53200," so you can find the source code in here uh i'm gonna copy paste it in the chat and for people"
53200,58960," who are watching potentially watching all of that on youtube it is going to be in the description uh so"
58960,63840," it's a pretty straightforward application but today we're not going to talk about the application itself"
63840,71040," but rather its build system it has a pretty unique build system uh and uh that build system is written"
71040,81600," entirely in c in fact uh to build mutualizer to build mutualizer you uh don't need to uh have anything but"
81600,88480," a c compiler um right so and that's kind of the point of the entire build system so essentially you"
88480,95600," may notice that there is no make files c make or anything like that the only thing uh there is is knob.c"
96320,103600," so and that is the build system the entirety of the build system is contained within the source code of"
103600,114320," the project right so imagine if uh cmake the source code of cmake was part of the project so uh you to"
114320,120880," build your project you first have to build cmake and then use cmake to build your project you may say that"
120880,126640," it's kind of overkill but this is because the source code of cmake is over complicated and over bloated"
126640,132800," uh right so the source code of knob is so simple you can build it like this you build the entire build"
132800,139920," system that's it the entire build system is already there you you have an executable you can just run it"
139920,145680," and if you run the the executable it builds the rest of your project so and uh what's interesting is"
145680,152800," that you don't have to rebuild it right so uh the build system itself serves as the script uh as the actual"
152800,161520," instructions that uh that build your project so if you make any changes in here right so uh knob log knob"
161520,171360," info uh hello right it will automatically rebuild itself right so uh it basically renames its own"
171360,176720," executeable to knob old then recompiles and then runs the new executable and the new executable actually"
176720,182480," prints hello that hello that we uh put in here right so we can remove it and it will rebuild itself"
182480,191200," automatically right so the the whole point is that you bootstrap the build system once with a very simple"
191200,201040," command which is just cc dash o uh knob knob knob dot c and that is it you don't do anything else and any"
201040,208480," special actions should be performed by the build system itself right so and what's interesting is that"
208480,216320," there is a very common problem with cmake and auto tools and stuff like that is that uh you may have a"
216320,222720," build system um you know the script itself of the build system that is not compatible with the current"
222720,230160," version of cmake or auto tools it's not uncommon when you have to install a very specific version of cmake"
230160,237120," or very specific version of auto tools just to build a very specific project since the entirety of the source"
237120,245440," code of the of the build system is contained within the project you never have this problem you actually"
245440,252160," never have this problem so this is kind of cool uh right so that's basically the the unique build system"
252160,258480," of mutualizer and uh so today i would like to address a very interesting problem that we have with this"
258480,264160," entire thing uh the build system the specific implementation in this project has a configuration"
264720,269440," right and configuration has a few parameters right now it has three but i actually plan to have many"
269440,274320," of them as the project grows uh we're going to have more and more different parameters to customize"
274320,279680," for the project so as right now we have a target right so basically you can build for linux you can"
279680,285280," build for windows you can build for mac os a hot reloading is a special feature for developers of the"
285280,291760," project all right so basically an ability to make changes within the project and hot reload uh without"
291760,297440," restarting the project it is very convenient i use it all the time for developing ui uh right it's kind"
297440,303440," of like it's very difficult to develop ui without this feature and uh here we have a feature flag so we"
303440,309840," have unfinished feature uh which uh i don't want to enable yet so i put it behind the feature flag so"
309840,314720," unless you enable it the entire feature is disabled and as we develop more and more different features"
314720,319440," we're going to have more feature flags so this entire thing is going to be more and more complicated"
319440,325920," right so the way it works the way it works uh when you start nope for the first time we can actually"
325920,332640," try to maybe start it for the first time but it's going to rebuild the array leap right so it may take"
332640,337120," a little bit of time but maybe it's worth it actually when you start it for the first time it generates"
337120,345840," you a config file right so build build config right so and if you uh look in here uh you will find it in"
345840,351280," here and you can actually manually change these parameters uh there is also config subcommand"
351280,355280," that allows you to change these parameters via the flags and stuff like that it doesn't really matter"
355280,361520," uh right and then uh it just uses that specific configuration to perform the build"
361520,371600," to perform the build the inconvenience of this approach is that we have an extra code that uh generates the"
371600,377680," the configuration parses the configuration serializes and deserializes the configuration right and all of"
377680,384640," that code is located within knob.c right all of that code is located within knob.c so we have a special"
384640,389600," structure called config and here are all of these parameters in here again there's not that many"
389600,396560," parameters but i do plan uh to have more of them so this entire thing has to be i'm gonna say that word i"
396560,402400," like get ready i get ready i'm gonna say that word the whole thing has to be scalable"
402400,412960," i just said that word anyway so the whole thing has to be scaled right you know what i mean uh so"
412960,422720," and uh yeah so we have quite a few code to compute the default configuration to parse the configuration from"
422720,429360," the arguments right so part the configuration from the arguments then log configuration dump configuration"
429360,438640," like look how much code we have just dedicated for handling configuration just for handling configuration"
438640,446400," it's freaking insane and if i want to add another parameter to my configuration it's a major pain in the ass"
447280,457280," it's a major pain in the ass it's not scalable right so uh we can try to to do that right so let's actually"
457280,465440," add a parameter um like a boolean parameter uh which is going to maybe enable uh like a nightly mode i don't"
465440,471440," know uh what that means right but maybe some sort of like a nightly mode for using application at night if"
471440,477840," you just add this parameter to this structure nothing is going to happen like literally nothing"
477840,483440," is going to happen it's not going to pick it up or anything like that it's it's like useless you have"
483440,489600," to perform additional things uh to actually you know make that work right so we have a special function"
489600,496800," that initializes the default config okay so default config is mem set to zero and that means that the nightly is"
496800,501840," going to be by default false that is fine so maybe we don't have to attach this specific function we can"
501840,507600," just skip it parsing the configuration from the arguments now we have to think about like what kind of"
507600,514400," uh flag we're going to assign for the nightly mode right so we can say that it's going to be"
514400,523440," uh minus n right if the flag is minus n what we have to do uh what we have to do we have to just enable"
523440,530640," the the nightly mode right so and you would think okay so that is enough no this is not enough right"
530640,536880," so this is only to handle the arguments of the config subcommand right of the config subcommand"
536880,543200," so now we're also logging the configuration when we are building you probably noticed then when i build"
543200,548640," this entire thing i also print the configuration so i always know what exactly i'm building with what"
548640,553920," configuration and stuff like that this is very important this is a very important ux uh so you"
553920,560720," should not forget to add nightly in here right so and nightly as we know is a boolean right so it can"
560720,566960," be enabled or disabled so that's basically what we're doing here that is not enough as well we need to be"
566960,573120," able to serialize the config when we're saving that configuration right so here is the dump config to file"
573120,579600," so and essentially what we have to do we have to add a new nightly thing in here uh like so uh luckily"
579600,586560," you can easily copy paste all of that right so but now we should be able to uh i think parse the"
586560,592400," configuration is that it i think that's basically it so uh not really okay loading the configuration"
592400,599840," right so essentially uh when you encounter a new flag like nightly uh you should essentially uh"
599840,607760," parse the boolean right you should essentially parse the boolean and i think that is it i think that's all"
607760,613440," of the actions you have to perform just to add a new boolean field but this is just a boolean adding"
613440,618480," boolean fields is easy because we have already developed code for it like a parse boolean and stuff"
618480,624400," like that if i want to add a flag of a different type good luck you need to add support for that you"
624400,629280," need to implement special parsing and stuff like that well i mean granted over time it's going to"
629280,634080," become easier as you develop more and more different parses for different times but you get the point i"
634080,640160," just want you to add a single parameter and that's a major pain in the ads i absolutely hate it"
643680,649600," and that's what i would like to address today that's the topic for today's stream i want to get rid of"
649600,657920," all of that bush i want to get rid of all of that bush it kind of reminds me of uh stats from memcached"
657920,663600," do you guys remember the memcached stream do you guys remember memcached stream so uh for those who"
663600,668880," don't remember i think i'm going to leave the link to to that stream in the description uh and stuff like"
668880,673600," that so i think the stream was called like a best interview question or something like that so let's"
673600,680720," actually see a certain best interview question so we were hacking the memcached yeah so the"
680720,687520," best coding interview question ever uh we were hacking the source code of memcached and to add a new"
687520,696000," statistics to the memcached we had to modify i believe six or seven different places i think so is"
696000,701040," just like six or seven different places so it was freaking insane and this feels like it it feels"
701040,711040," like memcached and that is not somebody's else code this is my code i wrote this i wrote this garbage and"
711040,718640," i'm responsible for that so i need to fucking fix that i need to fucking fix that so when i was actually"
718640,725600," writing that i thought uh like i'm gonna just implement something to gather information right and i suppose i did"
726000,734080," i understood that this approach is so i mean to be fair how else would i knew"
734080,736480," that this approach is if i didn't try it"
736480,745520," so yeah you around and you find out so that's exactly what happened so i do not even regret"
745520,751360," implementing this entire thing by the way uh i do not regret implementing all that because that actually"
751360,757920," gave me a lot of interesting insights and in fact i now understood how um i can improve this entire"
757920,764400," thing and simplify it uh i was thinking how i can approach the center i think and i think i finally"
764400,771680," found a pretty cool way to do that uh which is also in a spirit of knob right because this entire thing"
771680,777520," is too complex it's not in the spirit of knob it feels kind of alien but i found a way to do that in a"
777520,783040," spirit of knob and i think you're gonna like it because it's freaking cool it's freaking cool and"
783040,792720," it illuminates all of that bullshiser from here all that bullshiser immediately okay gone so uh the most"
792720,802640," obvious uh approach that even uh chat suggested um when i was developing this entire thing is to basically"
802640,811040," keep configuration in a c header file and that is very appealing uh that is very appealing solution"
811040,816400," so let's actually try to explore that solution uh i'm going to maybe create a separate folder"
816400,823360," right so maybe somewhere in prob let's create knob config uh config and this is where we're going to be"
823360,828160," exploring this entire stuff right this is where we're going to be exploring so i think i want to just"
828160,834480," copy uh you know knob dot h right so the basically the library the framework that we use for for"
834480,839360," building and stuff like that i'm going to copy it in here so here it is it's uh relatively big it's"
839360,843840," it's not even that big it's only one thousand lines of code one thousand lines of code by the way is not"
843840,852080," that big just saying one thousand lines of code is nothing trust me it's freaking nothing especially in"
852560,860560," uh you know java enterprise edition development it's literally nothing uh okay so let's actually include"
860560,866320," include knob.h all right so we want to define knob implementation because without this entire thing"
866320,872560," knob.h acts like a header meaning that it doesn't contain any implementation so to indicate that you also"
872560,879360," want to want to include implementations you have to define implementations uh right so and let's do the"
879360,887520," following thing let's do the following thing so maybe uh i'm gonna do usual thing with go rebuild"
887520,893680," yourself technology go rebuild yourself technology is extremely important it allows you to automatically"
893680,901920," rebuild knob right so essentially now if i just build this entire thing knob knob.c right and i just run it"
901920,911600," it's not going to do anything but then uh i'm can add knob log knob info uh hello right and if i run this"
911600,917200," and i think it will automatically rebuild itself and say hello and that's basically what it is that's what"
917200,923360," knob uh like go rebuild yourself technology stands for it allows you to automatically rebuild your c code and"
923360,932080," that is very convenient okay so um basically people were suggesting to have a configuration in a separate"
932080,939120," file so let's actually create something like config dot h and you are supposed to you are supposed to"
939120,945520," modify that configuration right so uh basically let's create um like a config parameter called message right"
945520,952000," and we're going to put hello world in here and what you're supposed to do in your thingy majingi you're"
952000,960320," supposed to do config dot h uh you're supposed to do config dot h and just use that message right so we can"
960320,965280," just try to run this entire thing and that seems to be working that that seems to be like a pretty good"
965280,978160," approach um except i don't like this approach i don't like this approach because config dot h is something"
978160,989360," that is custom per machine of the developer each individual developer wants to have their own config dot h"
989360,996560," with their own combination of parameters and because of that you don't want to commit that config dot h"
996560,1006880," you don't want to commit that right because of that like how can you basically work that around"
1006880,1015040," how can you basically work that around you can have uh something like in so essentially you can have a"
1015040,1022800," template uh file and you can require people right so you can require people okay so you have to bootstrap"
1022800,1034240," your build system like so uh knob.c and um you can't bootstrap it unless you have config dot h so now to"
1034240,1042720," just bootstrap your um you know build system you have to do a copy uh like this and only then you can bootstrap"
1042720,1050240," use build system only then you can run it that adds an additional step that adds an additional step to"
1050240,1060800," bootstrap in the build system and that is a huge no no that is a huge no no the whole philosophy of knob"
1060800,1067920," is bait is based upon the premise that you can bootstrap the whole build system with just a single command"
1067920,1074480," and nothing else you should not be doing anything else if you want to do something else additional"
1074480,1082320," actions additional flags or anything like that you are doing it wrong you are doing it wrong and you"
1082320,1087680," might as well just use cmake at this point because this is a very much a slippery slope"
1087680,1095360," and it is a slippery slope because you add another additional step to bootstrapping and another additional"
1095360,1102320," step and another additional step and then like you are building manually at this point you're not"
1102320,1108960," automating anything you know what i'm talking about you are not automating anything at all"
1108960,1117920," so some people uh suggesting to use in environment variables i think some i yeah i can see somebody"
1117920,1124400," actually suggesting that so using environment variables you can do that but um one of the cool"
1124400,1133600," things about like a fixed configuration is that uh you don't have to provide uh the flags all the time"
1133600,1136960," with the environment variables you have to provide environment variables in here"
1136960,1143520," or you have to have them in the environment right you have to have them in the environment and that means"
1143520,1149040," you need to have a separate file with the environment variables and that is not particularly cross-platform"
1149040,1156080," right so on linux you are going to have a file that uses bash syntax on windows it's going to be bad"
1156080,1162000," syntax so this is completely not cross-platform the point of this entire thing to be as cross-platform as"
1162000,1168720," possible even though like you could use environment variables but i think this is a two platform specific"
1168720,1175200," mechanism i really don't like that i really don't like that so but that's a good idea that's a good"
1175200,1186960," idea that's a good idea generally so uh yeah so we can't just um ask the user to do this copy uh manually"
1186960,1194160," because that's again the whole philosophy that that's against a whole philosophy of knob so what can we do"
1194800,1200400," what can we do i was actually thinking about it very very hard for many days maybe even weeks"
1200400,1207280," because that's been bothering me for quite some time it's just like how can i make it so it fits the"
1207280,1214960," whole philosophy ideology of knob very convenient and doesn't require like a ton of code for parsing"
1214960,1221920," serializing and deserializing like how can i find this golden solution for this problem"
1222640,1231120," and you think i found it so you need to do an extra step you need to do an extra copy why not just let knob"
1231120,1242560," do that why like i mean so the problem here is that you can't build this program unless you have config.h"
1244000,1245760," but what if you have two programs"
1245760,1256800," i mean you you can chain this entire thing so you have a high level program that checks"
1256800,1262640," that config file exists and then generates that config file if it doesn't"
1262640,1268160," then builds the other program that actually builds the rest of the thing and then runs it"
1270800,1278560," so yeah so essentially you have two knobs the unconfigured one that that doesn't know anything"
1278560,1285840," about config.h doesn't include it and the configured one which is linked with already generated config.h"
1285840,1293520," so that is very interesting actually that's a very interesting idea so let's actually start uh the"
1293520,1299680," following right we don't include config.h we don't include anything uh and here let's assume that the job of"
1299680,1307600," this specific knob.c the job of this specific knob.c is to check whether config.h exists and if it doesn't"
1307600,1315120," exist generate it so that's the job of this specific knob.c right so we're splitting this job into two"
1315120,1323440," separate parts into two separate parts how can we check if uh you know knob.c even exists right so"
1323440,1333280," essentially uh config.h config.h if i remember correctly we have a function file exists right so it's a very"
1333280,1342960," simple function right so um so config.h so it returns integer uh right and the reason why it returns into"
1342960,1351360," integer is because it may fail in case of a failure in case of a failure it returns a negative number so"
1351360,1357520," essentially in here we just want to do return one and in case of an error it also logs what exactly"
1357520,1363120," happens so we don't really have to do anything we just have to exit right so and it's very convenient"
1363120,1371680," if config does not exist right so it's equal to zero we may want to go ahead and generate it so the way i"
1371680,1378800," generate it is i basically uh usually collect some data into the string buffer the string builder rather"
1378800,1384480," so let's actually create string builder uh and it's basically a stretch buffer for bytes for characters"
1384480,1393520," right so uh this is a content like so and we should be able to do sb append sister right we're going to be"
1393520,1402080," working with sisters so this is a content and let's literally generate c code let's literally generate a c"
1402080,1412720," code so i'm gonna do define message right hello world uh hello world and a new line right and as we add"
1412720,1418880," more different parameters in here we're going to have more lines that append to this content and stuff like"
1418880,1425840," that uh okay so and the next thing we want to do we want to dump this entire content into config.h file"
1425840,1432720," right so we have a special function for that uh so write entire file there we go so this is what we will"
1432720,1441280," need uh and so this is going to be config.h and we're going to take the content uh can you see okay"
1441280,1448560," so you can probably see what i'm doing uh content items and uh content count right and of course this"
1448560,1454560," entire operation may fail in that case we should exit with non-zero exit code uh like so and there we go"
1454560,1459840," right so if the config doesn't exist it is going to generate it if it exists it's not going to attach it"
1459840,1466720," whatsoever right so and that is basically it right so that is basically it maybe we can even say something"
1466720,1479040," like knob log uh generating um so s i suppose it would be nice to maybe have something like config path"
1479040,1488480," where we're going to hold all of these things so this is going to be config path like so and we can now say"
1489280,1499760," generating config path uh config path and this is going to be knob info and if the config exists"
1499760,1508400," we can say that this entire thing already exists uh already exists so there's nothing to generate in"
1508400,1515840," here so that's basically the responsibility of this uh single program right of this single program we can"
1515840,1522720," reboot strap it then we can do the following thing and as you can see it's generating generated config.h we"
1522720,1529360," can take a look at that config.h it does in fact looks like config.h uh i can't complain i can run it"
1529360,1536160," one more time and it says that config.h already exists it didn't regenerate it so we can uh remove it"
1536160,1541280," right so this is not needed anymore we can remove uh the generated config run it one more time it detects"
1541280,1550960," that there is no config and it generated it for us it generated it for us so then we can have knob2.c"
1554000,1565600," that already includes config.h that already includes config.h"
1565600,1576480," uh right and what this is going to do it's going to do log knob info log knob info and uh basically it is"
1576480,1583680," going to just use the message that you provided in here and that is basically it so the next thing uh"
1583680,1591280," we have to do in here after we generated the config we just have to build knob2 we just have to build"
1591280,1598960," knob2 it's it's it's that freaking simple isn't it right it is that freaking simple uh so but but here's"
1598960,1606480," the thing like we can be building this entire stuff on different platform we can be building this entire"
1606480,1612800," stuff on different platform so i can just go ahead and do knob cmd so this is the command that is going"
1612800,1624800," to build uh knob cmd append and i'm going to say okay build uh knob2 electric boogaloo"
1624800,1636160," knob2.c and knob cmd run synchronous right so we're going to be running this entire thing synchronously"
1636160,1642560," and of course it may fail so if it failed we're going to return one uh okay cool and now we just have to run"
1642560,1647600," it now we just have to run it so we're going to do cmd count it basically cleans up the list right so"
1647600,1653200," cmd is basically a list you can clean up the list by setting count to zero and so you can"
1653200,1658000," like append more things into it so we can basically reuse the same command object which is rather"
1658000,1665040," convenient so and i just do that and i run it one more time and that is basically it so you're doing the"
1665040,1672320," build in two phases you're doing the build in two phases and that actually kind of solves everything"
1672320,1679920," right so let's actually try to run it and something doesn't compile specifically in knob 2 okay so"
1679920,1688560," what we essentially have to do in here we have to include knob.h right so yeah that's the whole point"
1688560,1694960," that's the whole point so the only thing the user of the build system has to do is just to bootstrap"
1695840,1701520," the little thing and the little thing can have as many stages as possible it's like loading up the"
1701520,1710800," operating system right in good old times uh back in the day so we had mbr load section right do you guys"
1710800,1722080," remember what it is like uh mbr load section so it is literally 512 bytes right that just loads up a bigger"
1722080,1728160," loader that loads up a bigger loader and then eventually loads up the whole operating system"
1729920,1737280," right so and that's kind of a similar thing you're just bootstrapping system with a single shell command"
1737280,1747520," that is simply cco knob knob.c and then it by running this knob it does everything to do as much for you"
1747520,1753920," as possible right so it may have several bootstrap stages right so it may just configure something and"
1753920,1758400," build up another program that also configures something and builds up another program and"
1758400,1763600," then eventually like it does a very complicated thing you don't have to do any of that shit manually"
1763600,1767680," the only thing you have to do is just bootstrap it and the rest of the thing should be done for you"
1767680,1774960," so that's kind of the philosophy of knob i think it kind of demonstrates it really well what i'm going"
1774960,1781200," for right so this is what i'm going for it's just like bootstrap it once and you have everything to"
1781200,1789680," do the rest for the user right we have everything to do the rest for the user um all right so let's"
1789680,1797680," enable the implementation right so and uh see how it is going to work see how it is going to work so i'm"
1797680,1802320," running this thing and as you can see uh it is running the second stage it's actually rebuilding the"
1802320,1808000," second stage always regardless of whether it's modified or not but the cool thing here is that it"
1808000,1814080," doesn't really matter right so because it's so quick to rebuild the whole thing right and now if"
1814080,1820960," i modify config.h and i replace it this with foobar right i want to replace it with foobar it is"
1820960,1827360," automatically replaced with foobar so as you can see we can have two stage compilation um right"
1829600,1836960," but so there's some problem in here there's some problem in here this is not cross-platform this is"
1836960,1845120," not cross-platform so if you are building on windows um for example with msvc you have to use a different"
1845120,1851440," command or if you're using mingw you have to use a different command so it is not particularly cross-platform"
1851440,1858320," you know what is cross-platform more or less to some degree go rebuild yourself technology"
1858320,1862080," so the cool thing about go rebuild yourself technology is that"
1862080,1871280," it actually detects on what platforms and what compiler it was compiled with and uses the correct"
1871280,1878080," compiler correspondingly so it does that by using a special macro called knob rebuild yourself right so"
1878080,1885040," and this macro just checks the operating system and the compiler if you're on windows and msvc it uses"
1885040,1892800," this basically uh compilation target and stuff like that so that's basically what is going on in here"
1892800,1900080," and what i'm thinking is that uh we probably want to use that instead of instead of whatever we have in"
1900080,1907920," here like actually in here so what i'm thinking is that we can just go ahead and just replace this"
1907920,1916080," entire thing with this uh right and the binary path binary path is nop2 and the source is actually"
1916080,1923840," nop2.c right nop2.c and that should be theoretically more cross-platform right so on windows it's going to"
1923840,1930960," use the the correct thing uh it's kind of cool right so it says that config.h already exists and if i"
1930960,1936960," modify something in here it also rebuild itself right so it just does everything correctly and that's so cool"
1936960,1944320," actually uh that is so cool um so and that is basically the solution that we can employ right"
1944320,1950400," so and that doesn't require any special parsers or serializers because we're using the c compiler for"
1950400,1960720," parsing our parser is c compiler right and here is another cool thing chat the config is a valid c code"
1961920,1970720," the config is a valid c code that means theoretically i may include that config in the main application as well"
1974480,1982480," in main application may use the same source code as the build system and that source code is generated by"
1982480,1989600," another stage of the build system and now you finally understand why the stream"
1991040,2004560," is called is this too much c vood so i'm passing that question to you chat is this too much c but i mean"
2004560,2012960," it kind of works and it will allow us to get rid of all of that parsing generation code and actually"
2012960,2019360," eventually simplify this entire stuff right so eventually simplify this entire stuff so i think"
2019360,2027360," it's it's kind of worth it it is c voodoo but it's not too much it's precisely the right amount of voodoo"
2027360,2034560," in my opinion in my humble opinion so somebody says that anything to to do with building c is voodoo why"
2035520,2041520," you want to see how easy it is to build c uh right so look single command"
2041520,2051680," i just built sql what the i thought it's so hard i thought you need to make to do that okay it's just"
2051680,2053840," single command like how is that even possible"
2053840,2062800," maybe all of the uh all of the propaganda on uh programming humor was actually wrong and you don't"
2062800,2065360," need all these over complicated tools to build c code"
2065360,2076480," god damn reddit propaganda anyway so um but here's the thing this is ugly"
2076480,2088240," this is ugly i mean it works it does exactly what we want but it's it's ugly so can we just have a single"
2089040,2100960," executable can we just merge knob.c and knob2.c is that something we can do or is that gonna be too much voodoo"
2100960,2116320," i think we can do that so we can treat knob.c as unconfigured build and knob2.c as the configured build and"
2116320,2122160," that makes sense like the the first stage doesn't include config.h because it's unconfigured we don't"
2122160,2129760," even know if config.h even exists or doesn't exist we literally have no idea and knob2 is the configured"
2129760,2135520," one we at this point we already know that config.h exists we are actually linking everything together"
2135520,2142160," and it is the configured build so there's a unconfigured build and configured build we can actually merge this"
2142160,2152480," concept together into a single file right what if we literally had a special macro that tells the current"
2152480,2160160," program whether it is the configured one or unconfigured one so if defined configured"
2165440,2172640," what essentially what essentially we're doing we're doing we're doing this entire thing otherwise if we are"
2172640,2179040," unconfigured we're doing this program so we're combining these two programs together"
2179040,2186880," and depending whether you know a flag configured or macro configured enabled or not enabled it's going to be"
2186880,2189600," behave as configured or unconfigured build"
2189600,2199840," so and essentially how we are building the second stage right obviously if you just do"
2199840,2209360," if you just do cco knob.c you created an unconfigured build because you didn't provide the configured flag"
2209360,2214400," and you should not supposed to do that by the way you're not supposed to do that to bootstrap the whole build"
2214400,2220720," system this is what you're supposed to do right so if you have to do more that's it so you're going"
2220720,2227200," out of the ideology of knob right you go use cmake or whatever right so this is the only thing you have to"
2227200,2235840," do so this is very very important uh so then when we build in the second stage we are using the same source"
2235840,2242160," code uh but we can call this executable something like maybe configured"
2242160,2247520," right so this thing is configured um maybe config'd"
2247520,2254400," conf'd maybe just i don't know configured right so it's called configure doesn't really matter"
2255440,2263040," but you also provide you also provide uh this thing uh configured"
2263040,2270720," so you also provide this thing and then we're going to be just running the configured"
2270720,2280320," so and let's try to reboot strap this entire thing so something didn't work out at"
2281040,2288640," god okay god damn javascript i programmed in javascript for a couple of days and it already"
2288640,2295440," damaged my brain holy so it's it's a dangerous language don't program in javascript kids"
2295440,2305840," don't program in javascript so there we go so uh let's see what is going to happen if we try to build this"
2305840,2314960," syntax okay all right so that seems to be working that seems to be twerking so maybe it would make"
2314960,2320480," sense to actually get rid of all of the generated stuff and start basically over we don't need nob2"
2320480,2326880," anymore by the way we actually merged everything together uh right so initially we're starting with"
2326880,2334160," just that initially we're starting with just that then we bootstrapping nob nob.c right and there we go"
2334160,2342800," we have an executable we're running the knob and what is going on it generated config.h then it created"
2342800,2350000," the configured builds right which includes config.h and also we enabled configured and uh we're building"
2350000,2356000," it from the same source code we're building it from the same source code and then we run this executable"
2356000,2362960," again and that executable says hello world we run it again uh right and it it works as expected so and"
2362960,2370160," now we can go to config.h we can replace it with full bar right and uh the entire build is going to say"
2370160,2377360," full bar and what's interesting is that now we don't even have to commit config.h into the repo we can just"
2377360,2384640," git ignore config.h and each developer is going to have their own config.h uh that they they can configure"
2384640,2391840," however they want right so and uh yeah so we have a single file and it works in two stages and"
2391840,2399440," in fact these several stages build is an extremely powerful idea and i kind of want to explore it in"
2399440,2405440," the future right so what if like when do you need for example three stages build"
2408320,2415520," but here is an interesting thing this configuration step in this specific configuration step you have a"
2415520,2422000," turing complete language at your disposal a system one that can perform sys calls and look at the file"
2422000,2429040," systems and stuff like that so what if figuring out the default value for a certain parameter will require"
2429040,2435040," to check whether a particular executable is available in path you can do that"
2435040,2442320," you can actually do that right so that's how powerful it is you can do extra steps in here to"
2442320,2448240," figure out the config and pre-populate the config for you it's basically like uh you know the configure"
2448240,2455040," script from auto tools so and speaking of using environment variables for this kind of stuff can"
2455040,2460160," you do something like that with environment variables with environment variables can you"
2460160,2465360," have this perfect pre-configuration step that is that has turing complete language that has an access"
2465360,2470880," to the entire system and can do whatever the the you want i think you don't well you you can kind of"
2470880,2477920," fit the environment variable idea on that but it kind of over stretch i think like if you're going to be"
2477920,2481840," having configuration step that generates a file with environment variables you might as well just"
2481840,2486880," start doing this whatever we did in here um so yeah"
2486880,2495680," so i think that's a very interesting approach and i would like to really explore that i would like to"
2495680,2503600," really explore that um so people comparing this kind of stuff with cmake but uh here is an interesting"
2503600,2512240," thing i already said that uh this thing thing has a huge advantage over cmake it has a very huge advantage"
2512240,2520000," over cmake so there is a very common problem that um basically there is incompatibility between cmake"
2520000,2529840," list.txt version and your cmake executable version so quite often and that problem proceeds not only with cmake it"
2529840,2535840," also presents with other tools quite often to build a very specific project you will need to install a"
2535840,2542880," very specific version of cmake and that's a huge pain in ass right so especially for me who's using debian"
2542880,2547760," right so i always have to install a custom version of cmake for latest project just to build the latest"
2547760,2555360," project on my on my debian here the entirety of the source code of the build system is located within"
2555360,2564880," the source code of the project it never gets outdated it never gets outdated so you have the"
2564880,2572240," source code of the build system with you all the time so and if the build system is old you're just gonna"
2572240,2578640," clone the old one and you you just use the old one it will just work it will work for decades for as long"
2578640,2584480," as the posix standard exists right so because it's using only posix api and also win api for as long as"
2584480,2590720," posix and win api exist so and that's a huge advantage over cmake so i don't think it is comparable"
2592560,2602160," um it's good but modifying c programs to build a project is mere sounds like a skill issue anyway so"
2602160,2608880," uh i think we need to start integrating this entire stuff into maybe the main visualizer"
2608880,2615680," right so i think we need to start integrating this interested uh but before we do that before we start"
2615680,2621600," integrating this idea and uh integrating this in the idea will require dismantling a lot of stuff"
2621600,2626480," within the visualizer right so it's i don't think it's going to be super trivial uh because the"
2626480,2634480," whole build system is like sort of build upon uh this configuration stuff and uh it's going to be"
2634480,2639840," interesting to actually migrate all all that stuff so yeah but before we do that i would like to make a"
2639840,2645120," small break i'd like to brew a cup of tea uh right so because i don't think i will be able to do that"
2645120,2653600," without any capacity and yeah so let's go all right so let's go ahead and try to migrate our mutualizer"
2653600,2661040," uh build to the build that we just you know came up with i think it is going to be really really"
2661040,2665200," interesting so what kind of parameters do we have uh what kind of parameters do we have"
2666000,2676080," i suppose we can just start we can just start with um the configuration part with just the configuration"
2676080,2683520," part okay we can say that if we are configured right if we are configured we're going to just have our"
2683520,2689920," usual building here which is uh 698 lines of code you didn't see that because emacs is a dummy dumb dumb"
2690720,2696320," right so this is basically the size of the build and the reason why it is so big is because we also"
2696320,2702160," have like configuration serialization deserialization i think overall this thing may become smaller after"
2702160,2708560," we employ our technique of two-stage building right so i think it may become smaller uh right so and"
2708560,2717040," somewhere down there somewhere down there we're going to have unconfigured build uh so why is it so weird"
2717040,2724800," okay anyway so we'll already include we'll already include the knob and stuff like that so that's totally"
2724800,2733600," fine and maybe i'm going to just go ahead and copy the config generator the config generator from here"
2733600,2742160," right so i think that's going to be very much useful so the config path is config.h and here's the"
2742160,2749520," interesting thing about this specific build this specific build system uh we employ the build folder"
2749520,2756960," we usually keep all of the artifacts in the build folder so the unconfigured build the unconfigured build"
2756960,2763920," might as well do the step of creating that build folder in the first place i think that's an interesting"
2763920,2769840," idea what do you guys think i think that's an interesting idea so uh this is how we do that right so"
2769840,2775520," essentially we do make dear if not exist and we just create uh that specific folder right so we just"
2775520,2784320," create that specific folder and we can keep build.h in there right so we can keep build.h in there and"
2784320,2789840," that is rather convenient because config.h is an artifact that you don't want to commit because"
2789840,2797120," it's personal per developer each developer has their own config.h and what we're doing here we actually get"
2797120,2803120," to ignore uh build folder because it's one of the build artifacts right and that is very convenient we"
2803120,2809520," can keep all the build artifacts in there in fact we can build the second compilation stage executable there"
2809520,2818960," as well so to not pollute the the the root right we already have uh you know one executable at the root"
2818960,2823840," which is the bootstrap which is the bootstrap the first stage uh right so i we don't need to keep"
2823840,2829680," more in there right so let's actually keep as many artifacts in the build folder as possible right as"
2829680,2836400," many of these things in the build folder as possible so we also have knob.alt which is basically the old"
2836400,2844560," executable uh when the knob tries to rebuild itself maybe at some point i'm gonna move uh knob.alt to build"
2844560,2849520," artifacts as well we'll see we'll see because it's it's not particularly pretty in my opinion right"
2849520,2855600," it's not particularly pretty but it's not that critical or important as of right now um okay so"
2855600,2864480," this is where we have config config exists or doesn't exist and uh here we are essentially uh generating uh"
2864480,2870160," this entire thing so what kind of parameters do we want to generate so if you take a look at the config we"
2870160,2878160," have targets we have target a hot reloading and microphone right so and that's this is the thing"
2878160,2885760," that we can do in here so how should i call should i call it visualizer target we can call it visualizer"
2885760,2893760," target right and target very much depends on what operating system we're currently in and what compiler"
2893760,2902960," do we use and this is rather interesting right so because if we are on windows um and we're using msvc"
2902960,2909920," compiler building with msvc is kind of a separate target it is kind of a separate target might as well"
2909920,2917520," just take this entire sort of like a thing uh you know if else thingy and just use it in the generation"
2917520,2926320," of the first parameter in here because why not uh because why not so the way we generate is essentially"
2926320,2935760," like this um right can you see okay so this is the target msvc right i'm gonna just use this entire"
2935760,2942640," thing directly um all right so and in here this is a target to me in gw uh can you see that there we go"
2943280,2951120," so here uh this is another target this is a target uh mac os right so this is obviously target mac os and"
2951120,2963520," this is the target linux gnus plus linux gnu plus linux okay so when we do rebuild ourselves uh we oh by the"
2963520,2972560," way this thing is not particularly cross-platform because on msvc on msvc you're supposed to do it with"
2972560,2980960," slash d freaking microsoft like okay we can always have a special macro special macro"
2980960,2990160," um something like define right so which depending on the compiler just expands to a different thing"
2990160,2996000," if you know what i'm talking about if you know what i'm talking about right so but i don't want"
2996000,3004320," to do it right now so i'm going to put it to do uh which says configured is not cross-platform uh right"
3004320,3013120," so make a special uh case for msvc right so i just don't really want to think about it too much right now"
3013120,3022720," um right so okay uh and this is knob configured and we can keep knob configured in the build folder right we're"
3022720,3030240," building the same knob dot c right but we're building this entire thing in there um so i might as well have"
3030240,3037520," something like configured binary and i'm gonna just put this thing in here configured binary"
3042320,3056960," uh so that should be the case that should be the case we're also running this entire thing right away"
3056960,3063440," i think for now i don't want to run it i just don't want to run it so i'm gonna reboot strap this entire"
3063440,3070160," thing not not dot c uh right there we go and that doesn't seem to be compiling because if i got semicolon"
3070160,3078720," so if i try to run this entire thing what is going to happen it generated config dot h uh let's actually"
3078720,3085440," go into that file and there we go we have mutualize the target which is the target linux which is target"
3085440,3091760," linux isn't it poggers i think it's pretty freaking poggers so and if you want to change that you may change that"
3092320,3096480," directly in the config dot h itself if you want to maybe we're going to add also some"
3096480,3103920," flags in there to influence what is picked but i don't think it's that necessary i don't think it's"
3103920,3111280," that necessary so the second parameter that we're going to have in here is going to be the hot reloading"
3111280,3117920," right so this one is rather interesting i think it's pretty straightforward right so the hot reloading by default"
3119040,3129280," is disabled uh usualize them uh hot reload for to reload and it's going to be basically false"
3129280,3136400," and another parameter that we have is basically microphone right microphone is also disabled by"
3136400,3142640," default to be fair we don't really have to say that they're false there could be just a macro that should"
3142640,3149120," if def if you want to check for something yeah so let's actually say they are like that let's actually"
3149120,3159920," say they are like that okay so let me get rid of config dot h and rerun knob dot h so that should have"
3159920,3167200," uh generated new config let's take a look at it and here is our uh freshly generated config"
3167200,3176080," too much tea too much tea"
3176080,3180960," all right"
3180960,3183840," tea spill"
3183840,3196000," minusd configured is cross-platform just confirmed on my windows machine with msvc i don't trust you actually"
3197200,3207280," uh cl dot exe um all right so minusd configured this cross-platform just confirmed on my windows"
3207280,3218080," machine with msvc so we can try to google it up msvc uh define macro so that is very unexpected for from microsoft"
3219120,3227920," right define macro flag uh cl right d preprocessor"
3227920,3242480," so the only way i see it working is cl just allows you to replace slashes with dashes"
3244160,3254240," uh okay so yeah msvc supports dash instead of the slash for options okay so msvc uh cl dash instead"
3254240,3261200," of slash i want to see confirmation from the the source code and we see msvc compiler options uh we"
3261200,3265440," might as well take a look at the the google because i think google is a little bit more reliable shows"
3265440,3270960," warning compile options uh okay okay so the official documentation actually says that directly"
3271600,3278160," slash slash okay all compiler options are case sensitive you may use either a forward slash"
3278160,3282400," or a dash to specify a compiler option okay thank you so much that's actually very cool"
3282400,3290080," uh i didn't know that i guess we learned something today so uh that is not necessary apparently so"
3290080,3297120," pretty much any compiler you know expects like i literally wouldn't expect something like that from"
3297120,3304320," microsoft because all microsoft tries to do is to create as much inconvenience for everyone as possible"
3304320,3312240," so basically you depend on this little thing and you can't get like easily get rid of it like backslashes"
3312240,3321920," for path separators new special new lines and stuff like that so the list goes on and on so i would expect"
3322480,3327360," microsoft not to support this kind of thing because it makes it too easy to migrate to a different"
3327360,3332960," compiler it just like doesn't make sense from the microsoft point of view something is really efficient"
3332960,3339840," here understand the matrix glad to be shown right yeah i mean i i automatically do not believe anything"
3339840,3345840," people say in the chat because chat has been bamboozled way too many times right so but yeah it's actually"
3345840,3351280," kind of good that it's it actually true so thank you thank you for uh for for the heads up"
3351280,3363680," um okay guys so um everything seems to be working as expected right and we may try to"
3363680,3371200," run the configured binary so the thing about the configured version of the binary we don't really need"
3371200,3379680," to rebuild it in my opinion we don't really need to rebuild it uh i think uh and another interesting part"
3379680,3387760," so we have a system of sub commands we have build we have configure which is not needed anymore by the way"
3387760,3396240," configure is not needed anymore so we may might as well just straight up remove it uh right so we have a"
3396240,3403600," dist which builds the distro right so it builds the final distro uh that you can like basically upload to"
3403600,3409920," releases and stuff like that we have svg that compiles the you know svg icons and stuff like that"
3409920,3414320," that's very important command like you don't want to run it all the time but it's something just like"
3414320,3421680," a handy to have uh this is something handy to have so when i suppose when we're running the configured"
3421680,3431920," binary one of the things we want to do we want to pass the arguments that you provided uh in the first"
3431920,3437760," stage to the second stage right because we still want to be able to to have these sub commands right"
3437760,3442960," but now if you provide the sub command you're providing the sub command for the first stage so the"
3442960,3448480," first stage has to pass those sub commands to the second stage right so that's kind of important"
3449280,3460160," uh so but here this thing contains extra program right argv contains extra program so we could one"
3460160,3464800," of the things we could have done after we appended configured library we could have done something like"
3464800,3476000," da append many all right we can just like append argv argc but that appends an extra program name so one of the"
3476000,3485920," the things we'll probably want to do is to maybe start with one and subtract one from here or we may just"
3485920,3495280," basically pop out the program so the usual thing that we quite often do so program knob shift args right so"
3495280,3502880," we provide argc argv and that pops out the program uh and maybe we could we could use that program in the future for"
3502880,3508880," some reporting like i don't see it being used right now but we may right so and but that way it makes"
3508880,3514640," it easier to just append the rest of the arguments for for the second stage and stuff like that so then"
3514640,3521280," we can continue use using the the sub command system right we can continue using the sub command system"
3521280,3529680," okay but the entirety of this thing still depends on old configuration style it all still depends on old"
3529680,3536960," configuration style so i suppose one of the things we want to do we probably want to uh basically start"
3536960,3542240," the compiler assisted refactoring i'm going to straight up remove the config structure right and"
3542240,3548080," that is going to break all of the places that use that configuration structure and we'll be forced to go"
3548080,3553680," through all of the places and fix them and eventually by the end of that process we're going to have a system that"
3553680,3562160," uh uses new way of configuring things right namely the config uh the config age thingy and speaking of"
3562160,3568240," config h thingy we need to include it we need to include it by the way we have already version 5 we"
3568240,3576640," might as well move that thing to the config file as well because why not right so and adding new parameters"
3576640,3582400," to the configuration is now super easy we can actually check how easy it is because theoretically"
3582400,3590000," instead of like five places we have to now make modifications in two places maximum i think so let's"
3590000,3596640," actually go to prob knob config right so basically the playground right the sandbox and let's imagine that"
3596640,3602560," we want to add a new parameter in here right so we're going to say okay uh now we have a parameter one"
3603120,3610000," literally parameter one uh and it can run this entire thing and obviously it is not going to compile"
3610000,3616880," right so it is not going to compile because we don't have that param one okay so we might as well"
3616880,3624880," just add that param one to the existing configuration param one uh param one and uh yeah there we go so"
3624880,3630480," and as you can see it is working and the second stage actually prints uh this entire thing one of the"
3630480,3638560," cool things we can do by the way with this entire stuff we can log the stages we can log the stages we"
3638560,3648640," can just do knob uh log um so knob info uh something like stage one so this is the first stage and then uh"
3648640,3652560," this is a stage two just to see where the stage one starts"
3654800,3662720," that is actually very cool way of denoting all that look at that right so stage one and if you make"
3662720,3671680," modifications to the first stage look how it's gonna go yeah that's actually pretty cool right so first it"
3671680,3679520," rebuild itself then it was stage one and then stage two that's so cool i think i should keep that i think"
3679520,3685520," this should be like a standard way of denoting okay so this is a stage one uh stage two um"
3685520,3697840," it's very convenient very cool and you can clearly see all that uh yes so yes so and okay but we made"
3697840,3702720," the modification in like one place or actually two right in the place we we use the parameter and then we"
3702720,3708720," added the parameter to config but what about the default parameter if i just remove the configuration and run it"
3709520,3716000," as you can see we generated the config.h we generated the config.h but the generated one doesn't contain"
3716000,3725200," the new parameter so uh one of the things we have to do now uh in the default config we have to add the"
3725200,3732640," parameter in here so it has to be param1 uh this becomes param1 so we need to remove config one more time"
3732640,3738240," and we have to run it and the new configuration actually contains everything we want to build so"
3738240,3745600," adding a new parameter still requires modification in like three places right um but i mean effectively"
3745600,3752160," two places right so effectively two places you just need to start using the parameter and"
3752160,3759040," um you know add it to the default configuration right all of the cases when something breaks"
3759040,3765120," are easy to catch generally i think it's like generally easier to to extend the config with this kind of"
3765120,3773760," system i think i think it is uh so yes yes yes yes yes uh so here we have to include"
3773760,3782320," the config and we know that the config is located within config.h maybe by the way we could have done"
3782320,3788640," config and just added add build to the includes but we don't really have to so it's actually it's actually"
3788640,3795760," like that so we're including config in here so uh knob log so i'm already back to mutualizer right so i'm"
3795760,3804000," continue working on mutualizing so i want to add the stage one so this is a stage one uh right and this is"
3804000,3813040," the stage two this is the stage two so what we did we removed the config um structure so now if we try to run"
3813040,3819920," nob uh it is not going to compile because look at all the code that depends on the configuration"
3819920,3825120," so here is the first function that computes the default config we don't need it anymore right so our"
3825120,3831440," config system is a completely different uh beast so we removed a whole chunk of code and this is what i'm"
3831440,3837760," going for right hopefully by the end of this refactor and we're going to like dismantle the entire system that"
3837760,3843440," parses uh configs serializes and stuff like that we don't really need all of that stuff in here"
3843440,3850000," right we don't really need all that stuff in here so let's continue recompiling uh so parse config we"
3850000,3855280," don't need to parse anything uh in fact we don't need to log anything i can remove all of these things"
3855280,3863440," right away so they are not needed config oh my god of course target uh load config from file we don't"
3863440,3869840," need all that okay so uh load available targets available targets maybe is useful for some stuff"
3869840,3875440," but we'll see we'll see okay so what else do we have in here build visual uh mutualizer okay so when"
3875440,3882720," we are building mutualizer when we're building mutualizer uh yeah we have a switch case in here"
3882720,3890320," but if we just remove the config from here if we just remove the config from here this one is going"
3890320,3899280," to be rather interesting i think this one is going to be rather interesting so what i'm thinking actually"
3899280,3908560," is so all of the build targets are located within a single function right they all are located within a"
3908560,3915440," single function what if instead of a single function we had several function like build mutualizer per"
3916160,3926560," target right so essentially if uh def mutualizer targets actually not def but if mutualizer target equal"
3926560,3932640," to um so let's say um target"
3932640,3941280," linux you're gonna have one thing but it's not going to work i think because target linux is enumeration"
3942000,3951920," uh all right it is enumeration uh and that means it would be better for this entire stuff to be"
3951920,3960400," macros right so yeah we'll probably have to transform all of these things into macros unfortunately"
3960400,3966480," all right we have to transform all that into macros uh i'm not sure if we need count targets do we need"
3966480,3973360," count targets we do use targets for logging but we don't really need to log that stuff anymore so let's"
3973360,3980640," actually get rid of all of that stuff so let's dismantle all of that all of those things right so"
3980640,3987440," for now there are macros now and there are specific numbers so it makes it a little bit easier to do things"
3987440,3993840," like that okay so and in here we're gonna have just a boolean visualizer so maybe i'm gonna copy this"
3993840,4005600," entire thing uh so this is the usual stuff and we also have a defer section that basically cleans up"
4005600,4014400," everything so i want to keep it in here so speaking of linux right so for linux this is how we build the"
4014400,4023520," entire thing right so that's how we build linux uh and there is a separation specifically for linux"
4023520,4034480," on hot reloading and not hot reloading right so we build hot reloading one way uh and without"
4034480,4043040," hot reloading the other way uh and i remember seeing yeah so there was extra indentation and i accidentally"
4043040,4050080," ruined it so let's not ruin it so i'm gonna be a little bit careful right so there's extra indentation"
4050080,4054720," so the code is rather complex so but i want to preserve the indentation because it kind of shows"
4054720,4065120," the intent it kind of shows the intent so uh this is just the linux right so do we have else if or else"
4065120,4073440," if i don't quite remember i don't quite remember so i think it's else if uh c pre-processor uh else if"
4073440,4081520," or is that l if i don't quite remember uh i think it's a leaf right for some reason i don't i don't know"
4081520,4088800," know why i forgot about that maybe i'm just like tired already so the next target that we have"
4090080,4093920," in here is mac os right so this is mac os essentially"
4093920,4105520," and we still need the same so sort of pre-ambler and post-ambler is that even a word do you even say"
4105520,4116880," like post-ambler maybe you do right so this is the same stuff and let's just copy the mac os thing oh and"
4116880,4124640," because all of that is macros checking that on linux might not work really well"
4124640,4131520," right so some of the code we can see if it's compilable or not when we actually use that on"
4131520,4137840," some of the platforms so that's kind of a problem but it's not that big of a problem right so we don't"
4137840,4144160," think it's that big of a problem so this is the mac os target all right so the next one is going to be"
4144160,4155600," l if mutualizer target so what's what's the next one so the next one is a min 64 min gw right so"
4156960,4165360," this one's going to be nice so let's go to place this thing in here and the post-ambler let's put it"
4165360,4181520," in here all right so and boom let's move it right here right here so when are they going to invent an ai that is going to do all of that stuff for me"
4181520,4188640," right so it would be nice if i could tell the ai just do it like that and it will just do that for"
4188640,4188800," now"
4188800,4199280," is the code that i'm operating on even fits into their context window i don't really know maybe it does"
4199280,4209440," maybe don't um so the last thing that we need to have in here is msvc right so build for msvc"
4209440,4214640," and i suppose one of the things i'll have to do it like after this stream is just like"
4214640,4219120," going to the windows right and just checking if it still works on windows"
4223680,4230880," and we're almost done right we're almost done so you see it's not really that scary to do"
4230880,4238800," very like you know serious refactoring in just a text editor it's not that hard chat it is not that hard"
4238800,4247200," so in here we're going to end if mutualizer mutualizer target right so essentially as you can see in here"
4247200,4254080," we're like basically have one version of build mutualizer for each individual platform right"
4254080,4259120," depending on the platform you just have like different versions in here and uh so the version"
4259120,4265760," themselves are not correct yet because they as you can see they depend on config and hot reload"
4265760,4273840," uh and hot reload is now a compilation sort of like a flag uh right so but this is another thing that we'll"
4273840,4278720," have to refactor within those things and the only thing we'll be able to check right now is only the"
4278720,4286320," linux build right so maybe also min gw build uh but i won't be able to check msvc and macos on this stream"
4286320,4291840," right so they're probably not going to be compilable and we won't even notice that uh we won't even notice"
4291840,4298960," that because like it's going to be stripped away um from the actual source code maybe that's fine maybe"
4298960,4306960," that's fine so anyway we didn't even have to do l if honestly uh right because if one of the ifs is"
4306960,4313040," true the rest of them are going to be false anyway so but maybe using a leaf is fine i don't know okay"
4313040,4318240," let's try to compile and see how miserably it is going to fail there we go it failed actually precisely"
4318240,4324320," as i expected it to fail which is kind of funny right so it cannot find config hot reload because now what you"
4324320,4334160," have to do is if def mutualize a hot reload right if def mutualize a hot reload you do that uh right"
4334160,4342240," otherwise so this is basically else you do that and this is basically and if and this is the mutualizer"
4342240,4350800," hot reload right so and that basically fixes everything um right and we have an additional thing"
4351520,4359440," okay here is an interesting thing we used to check whether the microphone feature is enabled or not"
4359440,4365040," so then we can pass the feature flag to the actual application"
4365040,4380560," right but look now the feature flag is within the config.h which is a sql that we can simply include"
4380560,4388080," in the main application as well we don't have to pass it anymore we can just include config.h in the main"
4388080,4400000," application as well so the first stage of the build generates config.h which is used by both second stage of"
4400000,4409840," the build and the application that is built think about that i can even draw that this is this is actually super"
4409840,4413600," cool just think about that this is insane all right"
4413600,4422160," and all of that without any third-party dependencies like cmake or anything this is just like a pure c"
4422160,4428880," this is just like a pure and it's all cross-platform that's the cool thing you don't have to install"
4428880,4435760," anything or like it's so cool the fact that you can do that in pure c is insane i'm telling you"
4436400,4440160," right so you have stage one uh stage one"
4440160,4450640," so let me actually maybe switch to a different pen uh right so this is stage one one of the things the"
4450640,4457600," stage one stage one generates two things right stage one generates two things generate stage two and config.h"
4458320,4472720," uh config config config config config is used by the stage two right so it links uh with this thing"
4472720,4481440," so one of the things stage two uh produces it produces the app itself right it produces the app itself"
4482240,4490800," like so which also links with the config.h so information about what features are enabled"
4490800,4498640," are also available to app without any extra work it can just include config.h that is generated by the stage one"
4500880,4506080," isn't that cool like again i mean like the build system been doing something like that for ages but"
4506080,4511840," it's a pure c without any set party dependencies it's never gonna get outdated it's all part of your"
4511840,4516800," code base and it's cross-platform it's just like"
4516800,4523280," like the the fact that you can achieve all of that in pure c is so cool"
4526880,4529200," i think it's pretty cool i think it is"
4529200,4542800," c is great no this is not what i'm saying by the way i'm not saying that oh c is such a cool language"
4542800,4547040," everyone should program and see because you can do that and that no no no no no no this is not what i'm"
4547040,4557040," saying c is but even with such shady language as c look how much you can achieve that's what's amazing"
4557040,4562720," it's not c that is amazing c is not amazing like i wish we could finally replace that"
4562720,4571680," language but the fact that using this over simplistic old language like c is like half of a century old"
4571680,4578400," it is half of a century old language we should finally if i can retire it but yet look how much you still"
4578400,4585840," can achieve with it that's what i'm saying it's not about c it's not about c okay"
4590560,4601680," it's about simplicity it's about simplicity if you just keep this thing simple uh right so uh let me"
4601680,4612080," let me see what we can do in here can i just now do knob cmd append um what we can do we can append"
4612080,4619520," maybe yeah we can say use build as the search folder right use build as the search folder and we're going"
4619520,4626480," to include uh we're going to include config.h in the mutualizer right and then we're going to use that to"
4626480,4631760," check certain things and stuff like that uh okay so let's actually try to compile let's continue compiling"
4631760,4642800," the things uh okay so what do we have in here config.target uh aha and we use the name so this is what"
4642800,4651040," we use the names for this is what we use names for because when we're building a raylib when we're building"
4651040,4657200," raylib yeah depending on the target we just have like separate folders for different targets and stuff like"
4657200,4664880," that right we just have separate targets um so maybe we should bring back the target names that i"
4664880,4674160," so foolishly removed uh so let me let me do it like that but it's not particularly convenient in my"
4674160,4683600," opinion so let me revert the entire changes just to uh yeah so here they are here are the targets so since we"
4684160,4692800," moved the targets to macros instead of enumerations pulling off something like that is not"
4692800,4695520," that easy anymore in my opinion"
4695520,4709040," it is not that easy anymore so we have to think how to approach all of that uh but for now i suppose"
4709040,4713440," i'm gonna just keep it like this all right so i'll think about that"
4713440,4721840," all right so what else do we have in here so this is the target we might as well just"
4721840,4729680," use a mutualizer target right so this is a user mutualizer target uh to be fair when we specify the"
4729680,4737920," targets we could have like can we use like string literals can we do comparison on the level of string"
4737920,4742240," literals in the preprocessor is that something you can do"
4742240,4754080," can you do like hello equal world in the preprocessor does anybody know i never i never done anything like"
4754080,4759040," that i've never done anything like that that's kind of interesting actually so let me see"
4759680,4765120," uh full c uh right so let's include stdio"
4765120,4782000," so if hello world uh we're gonna say print f yes"
4783680,4794000," else"
4794000,4802480," so uh talking hello is not a valid preprocessor expression so yeah you can't do that you can't do"
4802480,4811600," that though you can use numbers if i'm not mistaken numbers are fine for this kind of stuff and if you have"
4811600,4817280," a different number right there are no people so you can only compare numbers you can't probably compare"
4817280,4824480," floats right so yeah so floating constants in preprocessor expressions so you can only do integers"
4824480,4832320," can you do characters uh can you do characters you can do characters look at that that's very cool so"
4832320,4838560," you can do integers you can do integers you can't do strings uh so yeah yeah yeah"
4838560,4846240," we'll have to remember that but it's really not that important to be fair it's really not that important"
4846240,4852640," let's continue compiling and fixing the compilation errors so what else do we have in here"
4852640,4862240," okay so this is another thing all right so let's simply add build into the search path right and we"
4862240,4866160," don't have to do that anymore uh okay so"
4869280,4873040," uh this is the target mutualizer target there we go"
4873040,4882960," so and i suppose we just have to go through all of these things uh and do something like this what"
4882960,4892880," else do we have uh-huh actually a lot of one of the things we can do we could maybe introduce like a"
4892880,4904160," mutualizer target name right so essentially if mutualizer target equal target linux right target linux"
4904160,4916960," what we do we define mutualizer target name equal to linux and if you want to have a target name you just"
4916960,4922480," use this macro and we can get rid of this thing but i don't really want to do it right now i don't think"
4922480,4930400," it's that important right now so uh right so i'm gonna just put it to do get rid of uh this array"
4930400,4938640," replace it with macros right so replace it with macros so let's try to recompile this entire thing"
4938640,4944560," okay build raylib oh and this one okay oof this is"
4948400,4954640," right so because we have different builds for different platforms and yeah yada yada yada"
4954640,4963360," oof oof oof oof okay so and this is going to be very much similar right so this is going to be very"
4963360,4978320," much similar uh and i wonder if we can maybe even huh just put that under the same thing you know"
4978400,4987280," what kind of idea does it give me right because we have build mutualizer build raylib and sort of for"
4987280,4997360," each platform it is kind of different what if we put what if we've put each individual platform specific"
4997360,4999680," functions into separate files"
4999680,5009520," right so you have a file that contains everything for building for linux you have a file for that"
5009520,5013760," contains everything for building for windows and so on and so forth and those are separate files and"
5013760,5021200," you don't have to think about if else is too much in there and right and so it depending on the"
5022240,5029360," on the current target you would just include a different file it's kind of interesting how like"
5029360,5036320," changing the approach to the configuration actually starts to affect the architecture and it makes it"
5036320,5042480," actually easier to add new platforms actually if you think about it it makes it easy to add new platforms"
5042480,5045200," that's so cool that is actually super cool"
5045200,5058240," all right all right all right all right all right um so maybe we should actually start doing that"
5058240,5065440," but how are we going to be approaching this thing and by the way if we're including a different file"
5065440,5072400," yeah so essentially what we can do uh how can i do that knob linux.c right so this is a"
5072400,5079120," knob linux.c and i can just move this entire thing in here right i can just move this entire thing in"
5079120,5089360," here so this is a building mutualizer uh and as you can see here uh i'm doing this thing i can go ahead"
5089360,5102320," and query replace this stuff with just um mutualizer target name right mutualize the target name and for"
5102320,5106880," this specific file for this specific file for this specific file i can define mutualize the target"
5106880,5114000," name to be linux right because it's dedicated to linux right so i i know what it is i know what it is"
5114000,5122560," all right so that's kind of cool so and that kind of gets rid of this thing we don't really need it"
5122560,5130400," anymore and in here uh instead of like including this file we can just include knob linux.c"
5130400,5139600," so yeah right and basically it implements the interface for for the build right so it implements"
5139600,5146000," build mutualizer it also going to implement build the ray leap for that specific platform and so on and so forth"
5148240,5156080," okay that is pretty cool uh all right so and of course for mac os we're going to have a separate"
5156080,5163760," thing we might as well even just do uh knob mac os dot c we can even put all these files into"
5163760,5170560," separate folder like you know how for cmake there is a cmake modules folder for additional things we can"
5170560,5178960," also put it there uh right so who said we can't do that we can't do that uh right so this is this becomes"
5178960,5185440," mac os uh and it will allow us to manage complexity a little bit easier i think i think it will allow us"
5185440,5195920," to do that uh so nob win 64 min gw dot c right so we can move that stuff in here uh it's not compilable"
5195920,5204000," but it doesn't matter right so i'll fix all of the all of the code after the stream so what's important is"
5204000,5216160," like a general idea uh win 64 ms vc uh c and removing that stuff in here uh and it's so nice to finally"
5216160,5227280," move all of that crap like somewhere else right um it's actually msvc sorry msvc uh so we also have"
5227280,5234800," ready modules and they're going to be common among all of these sort of like builds so i think it would"
5234800,5246400," make sense to actually put this stuff in here uh okay so build raylib build raylib um what i'm thinking"
5246400,5254720," i'm going to move this thing to the linux version right so the linux version is going to provide"
5254720,5261680," build raylib uh but on top of that i don't want to remove this version because it contains parts of"
5261680,5267840," the code that are useful for other things in here so for now i'm going to just comment it out but i'm"
5267840,5276320," going to comment it out with macros like so right so something like this okay so let's try to build this"
5276320,5281920," entire thing and let's see where it is failing so it is failing in knob linux.c right as you can see"
5281920,5288320," that's that's exactly what's going on uh and uh yeah we're referring to the target uh to visualize"
5288320,5294320," the target name but we already have this thing defined in here so we might as well just start"
5294320,5302160," using that instead start using that uh okay so what else do we have on here so depending on the target yeah"
5302160,5308880," there we go now here we don't even have to you know think about the target too much right we don't have"
5308880,5315440," to think about the target too much because we know for sure that this is the linux so yeah separation"
5315440,5322320," like it just simplifies everything i really like how it simplifies everything so freaking cool uh okay"
5322320,5327600," and even in here as you can see we have separation what's linux what's not it doesn't doesn't matter"
5327600,5334080," we know we're at linux everything that is not linux can be removed easily it just like makes everything"
5334080,5343200," simpler it simply makes everything simpler uh okay so and for for this entire stuff it also"
5344400,5352800," not important it is also not important so msvc some other does not matter does not matter so do we have"
5352800,5361200," in here uh it also is not needed i hope i didn't remove too much in here i think i didn't yeah so this is"
5361200,5367760," the final build of the thing uh so and there's a little bit of a difference between like hot reloading"
5367760,5375040," and not hot reloading right so if we enabled hot reloading if we enabled hot reloading um"
5376000,5384880," we're building dll um right this one is not linux it doesn't really matter so it's yeah so we can remove"
5384880,5393040," that okay we're removing code we are removing code so not hot reloading so that means we need to replace"
5393040,5406240," this entire stuff with macros if not defined mutualizer hot reloading we do that then this is uh else else"
5406240,5419200," and then the final thing in here and if and if mutualizer code reload okay so there's a little bit too much"
5421120,5424960," yeah a little bit too much indentation that i would like to get rid of but maybe"
5424960,5430160," no no no so it's actually let's actually get rid of this indentation"
5430160,5440400," overall code becomes simpler and i really really enjoy that i really really enjoy that okay so the"
5440400,5448160," entire thing actually compiles in here so now it complains about build dist and again build dist is also"
5448160,5453840," dependent on the current target so that means it's going to be part of the interface so i'm going to"
5453840,5460160," move it to the build linux in here uh and i'm going to also comment it out like so"
5460160,5468480," all right because uh we're going to use this code to populate the rest of the build things right so we're"
5468480,5473680," going to use that to populate the rest of the build things uh so and what do we have in here right so"
5473680,5481040," we don't have a config anymore uh and this kind of stuff is only supported for uh like without hot"
5481040,5485520," reloading all right so we don't ship with hot reloading and stuff like that and by the way one of the things"
5485520,5499200," we can do in here if defined in user well this one is yeah so i suppose we can do if defined mutualizer"
5499200,5505360," hot reload we're going to replace the whole implementation with just that right which errors"
5505360,5511920," out which is fine right so you're building the final distro that you're supposed to upload and ship to the"
5511920,5517440," user we do not ship to the user hot reloading so that's why we want to error out in here and we don't"
5517440,5523200," really need to check for the platform because we know we're on linux right so we can just straight"
5523200,5529680," up remove all of that stuff in here um right it's greatly simplifies each individual platform"
5530320,5541680," is going to have their own like file um okay so that is cool and this is else so that means uh we want to"
5541680,5552560," put end if in here in usualizer visualizer hot reload so uh let's see if now it compiles all right so okay"
5552560,5559920," so that code compiles and now we need to fix the build thingy in the build thingy by the way in the build"
5559920,5565360," thingy we're loading configuration and stuff like that none of this stuff is needed anymore right so"
5565360,5572320," when we start building uh we don't need any of that stuff right but we also like log the configuration"
5572320,5580240," we print what is the current configuration how can we easily do that we can just print the contents of"
5580240,5586480," the config right we can just print the contents of the config but maybe for now i don't know i'm going"
5586480,5596880," to put it to do in here uh right so print the current config somehow because it's useful information"
5596880,5602880," right because when i'm building something i want to have a context of like what exactly are we building"
5602880,5608240," right so i think it's kind of important so here we're building already but we don't accept config anymore"
5608240,5615440," so we don't need any of that stuff so then we're checking for the uh for the configuration this one"
5615440,5625440," is rather interesting so i think this kind of stuff should be uh moved to min gw it should be part of"
5625440,5638400," building mutualizer for min gw and msvc right so i'm gonna put it to do in here uh so move uh the copying of"
5638400,5650000," to knob win64 let's actually denote them as star because there's two of them like yeah so move them to the"
5650000,5655680," corresponding builders right so there's no place for this thing in here and then we're copying the"
5655680,5660480," resources and stuff like that so this is the building the distribution so we don't need to load the"
5660480,5670240," config anymore uh and this is how we simplify this entire thing all right uh if i try to build this entire thing"
5670240,5670960," and it works"
5670960,5675360," that's it"
5675360,5684080," that is basically it's believe it or not that is basically it"
5684080,5690320," uh right but what's funny is that it actually built for hot reloading"
5690320,5695040," but by default i don't want to enable hot reloading and this is because i'm a dummy dumdum"
5696000,5703840," right so it defined all of these things it defined all of these things so what i probably want to do"
5703840,5710960," what i probably want to do when i'm generating the default configuration i want to actually put these"
5710960,5718240," things commented out indicating that they kind of exist but they disable by default and if you want to"
5718240,5725600," enable them you just uncomment this specific thing so if i go ahead now and remove the config.h right like so"
5726560,5730480," and then try to build this one more time so what does it say"
5730480,5739920," aha right so you see we actually hit some code that was never compiled before and it doesn't compile as"
5739920,5745360," you can see it doesn't compile so we're checking for microphone stuff we don't have to do that anymore"
5745360,5752320," right so that was actually a good idea that was actually a good idea uh so instead of forwarding this"
5752320,5758000," stuff to the microphone we just add this thing to the builds uh what else do we have in here"
5758000,5767280," uh-huh so we need to replace this thing with mutualizer target name right what else do we need"
5767280,5775040," and that's it okay so that that's cool that is very very cool that is very very cool uh so and if you"
5775040,5781600," you want to enable hot reloading right if you want to enable hot reloading you go to here uh you enable"
5781600,5787600," hot reloading that you enable hot reloading and there you go you've got hot reloading do we pass yeah"
5787600,5795760," we still pass hot reloading we still pass hot reloading but let's actually take a look at where we check"
5795760,5808160," for this macro in src so uh rn if def hot reloading okay so there's only one place we check for this macro"
5809920,5819520," what is what if we actually checked for mutualizer hot reloading and included config.h"
5819520,5826640," precisely what i was talking about right the main application"
5826640,5830320," includes the same config as the second stage of the building"
5832400,5837440," second stage of the building so and uh in here so if i go to"
5837440,5845360," knob linux and try to find hot reload right so there's one place we don't have to pass that"
5845360,5851520," thing anymore right we don't have to pass that thing you know hopefully right so i'm going to try to"
5851520,5862000," do the build uh and it seems to be working it seems to be working does it enable hot reloading though"
5862400,5869360," we can try to check it out i'm going to start them utilizing all right so and we can already check"
5869360,5879840," it right so i can go ahead and go to plug.c and find drag and drop and we can simply rename this entire"
5879840,5887200," thing to your mom as usual right so i'm gonna go ahead and recompile this entire thing and hot reload"
5887200,5895840," and there you go so hot reloading is working hot reloading is twerking in fact so we can try to"
5895840,5904960," rebuild that one more time all right so don't drag and drop here um so we can now try to disable hot"
5904960,5912640," reloading what if i don't want hot reloading anymore uh so it doesn't build a solve folder right it doesn't"
5912640,5922480," build this so folder and now if i try to run this entire thing um and go to the plug uh and just go"
5922480,5928240," ahead and replace all of that thing with your mom right"
5928240,5941920," so and yeah nothing happens uh nothing happens so that's pretty cool uh there is no hot reloading"
5942640,5949280," there's no hot reloading which is precisely what i wanted so we can also test for the microphone okay"
5949280,5956320," so we test uh whether a microphone feature is enabled by looking at the feature microphone let's take a look"
5956320,5963040," at in how many places we check for that thing right i'm pretty sure uh okay there's quite a few places"
5963040,5969280," in mingw in here we're still checking for that okay so i suppose i'm only interested in these things"
5969840,5975440," let's just go ahead and query replace uh so you probably can't see this thing"
5975440,5985200," right i want i want you to be able to feel to see like everything so feature microphone mutualizer"
5985200,5995120," microphone right let's replace this stuff everywhere so that we can use it everywhere so we already include"
5995120,6002480," configuration in plug.h right do we do we i don't think where do we include the the config um"
6002480,6004240," so"
6004240,6017200," is it hot reloading yeah we include it in here uh and hot reloading okay so i suppose we will need to"
6017200,6027040," include config here as well okay so let's go ahead and try to rebuild the entire thing and see if it works"
6027040,6035280," okay i'm gonna do this thing and i'm gonna press c c doesn't work that means the microphone is not"
6035280,6042720," enabled the microphone is not enabled we go to the build config.h i enable microphone enable microphone i"
6042720,6050640," rebuild the whole thing uh i run mutualizer see microphone is working so feature flags are working"
6050640,6060480," as intended holy that is so cool so that's pretty cool so i can control all of that stuff i can actually"
6060480,6070160," control all this stuff so okay that is a very cool approach that's a very cool approach it's way better"
6070160,6078400," right so because it's so it's so natural and it's like it's basically like with the same philosophy as knob"
6078400,6085440," right so whatever i used before that felt kind of out of place but now right so you just have a"
6085440,6092880," configuration and you do not compromise on anything you do not compromise on anything you don't introduce"
6092880,6099840," an additional step into bootstrapping you still bootstrap with a single command which is very simple"
6099840,6108480," and yeah that's perfect that's perfect so and when you're generating the default config you may also generate"
6108480,6115680," like additional comments maybe that explain you how to modify this entire thing and everything"
6115680,6124880," so why not pass the config via cmd arguments imagine that you have 10"
6124880,6132640," parameters i mean imagine that you have 20 100 parameters so you're gonna you're gonna pass 100 parameters"
6136320,6143840," so you you may say oh i can save that to the shell script but wait a second shell script is not cross-platform"
6143840,6151520," and so that means you need to start having uh separate shell scripts for each individual platform for linux for windows"
6151520,6155280," maybe for mac os because it uses slightly different shell and stuff like that but"
6155280,6161840," i can just run this thing from c instead of shell and that's basically what it is"
6163680,6170800," so yeah um and here's an interesting thing you you probably noticed if you ever build"
6170800,6178960," uh linux software with outer tools you notice that you have a separate step for configuring build and then"
6178960,6184960," building right you do configure you provide shed ton of arguments to the configure script"
6184960,6191040," it saves them all to a separate file configures everything figures out the rest of the stuff and you never"
6191040,6196960," provide them ever again and make that you do make and make install and so on and forth it just uses"
6196960,6203040," whatever the config script generated because the amount of parameters may be so big that it's not"
6203040,6208560," worth providing them all the time you just want to configure it once and just rebuild it constantly"
6208560,6216240," all right i guess that's it for today thanks everyone who's watching right now i really appreciate that"
6216240,6225200," have a good one and i see you all on the next recreation programming session with a mr azosen i love you"

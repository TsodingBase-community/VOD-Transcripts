start,end,text
0,9880," Hello and welcome to another Zozi session. How about that? How about that? I bet you didn't"
9880,16820," expect that shit to happen. So on the previous stream we explored a simple video format"
16820,25280," and we came to the conclusion that it's not really suitable for my needs, but I still didn't"
25280,30460," have enough time to actually explore everything that I wanted to explore with this format."
30460,37000," So, and I really didn't want to make the second session on this topic because usually the second"
37000,42600," episode of any series nobody gives a shit about them, right? So everyone just only watches the first"
42600,47160," episode and the rest of the series are just like, you know, nobody gives a shit about that. But still"
47160,53420," I wanted to do that at least for myself, right? At least for myself I wanted to explore the, you know,"
53420,58020," the other things we can do in here. Specifically, I wanted to generate more than just like a solid"
58020,66120," color. So, and yeah, let's just go ahead and do that. So let me switch to a different scene,"
66120,72700," right? Switch to a different scene. And so we have a bit of stuff, right? So we have a bit of stuff that"
72700,79760," can generate a particular video. So first thing I probably would like to do is maybe write some sort"
79760,86300," of like indication of the progress because it takes some time to generate a video, right? So, and yeah,"
86300,92420," so if you take a look at the video itself, so here is just a solid color. Like I would like to have"
92420,98180," something more than a solid color, maybe animation of a rectangle that is moving around in the video or"
98180,104780," something like that. And furthermore, I would like to try to even generate a sound for the video,"
104780,109940," right? Even though I think this format does not really support the sound, right? It doesn't really"
109940,116780," support the sound. I still want to do that like in a separate file, right? I'm going to be using the PCM"
116780,123220," format, the one that I used in my, you know, music with Haskell video. So you can find that thing in"
123220,129140," the description. So just a second, I need to load up all of my applications. So then I'm going to go to"
129140,135780," the description. So, and also in the description, I'm going to give the link to the previous episode,"
135780,141420," right? Previous episode. So the previous episode is not out yet. So it's going to be available after"
141420,148500," the stream. So I'm going to put TBD in here, just a reminder for myself and touring music in Haskell,"
148500,156400," music in Haskell. So I think that's the thing that I wanted to give you, right? So that's the link,"
156400,165600," music in Haskell video. There we go. So you can find it in here. So for those people who's in the chat,"
166500,173820," you can, you can find this thing in here. All right. So yeah. And let's go ahead and just try"
173820,179100," to do something, right? I'm going to just restart Emacs from within my development environment and"
179100,185320," let's see, let's see. So things I want to do right now, just let's actually start the to-do."
185320,193640," Upload the code to GitHub, right? So because I never uploaded this code to GitHub, so it's not"
193640,203020," available to anyone. Right. So another thing I want to be able to do, indicate, indicate the progress of"
203020,209500," the rendering, right? Because it's not really convenient when the program just stalls for a"
209500,215380," couple of seconds and maybe potentially even minutes, right? Without any indication that something is"
215380,222440," happening, right? So it would be nice to have some sort of this thing like that. So indicate the progress"
222440,228760," of the rendering and another thing would be to like animate something, right? Animate something,"
228760,236880," something like a rectangle or square or something like that. Uh, and, um, generate, uh, generate sound,"
236880,250760," um, in PCM format in a, in a separate file, in a separate file. Maybe even try to merge it with the video file"
250760,258680," using FFm pack, something like that, right? So, uh, let's see if we can even do that. So after that,"
258680,265360," do I want to have anything else? Um, I think that's basically the whole agenda for today's stream,"
265360,270360," right? So upload all of that to GitHub, uh, indicate the progress of the rendering and you made something,"
270360,283000," like a square bouncing off of the, which one bouncing off of the, uh, walls of the screen or something like"
283000,289080," that, right? So, and generate sound in PCM format. So maybe, uh, the sound is going to be like generated,"
290680,296200," when, uh, the square like bounces off of the wall, right? So it's just, we'll make some sort of like"
296200,301960," a quick sine wave beep or something like that. Um, and we'll, we'll see how it goes. We'll see how it"
301960,306520," goes. So that's going to be basically the idea. So I want to do all of these exercises. It's more of a,"
306520,314600," like exercises to get the gist of the format. Um, and just like, you know, see this format in more use cases,"
314600,320200," cases, right? So, uh, this is something that I wanted to do yesterday, but I just didn't have"
320200,328280," enough time, uh, for various reasons. Uh, so, okay. So what do we have in here? So this is the formula."
328280,335080," I already coded that formula into the, um, into the source code itself. It's a formula that converts,"
335080,342920," uh, I think RGB to YCRCB. So it's already coded in here. So I probably don't need this image anyway,"
342920,347720," right? So fuck this image. So here's the main executable in here. So I think we can straight"
347720,353960," up get to ignore that executable. So this executable is not going to be committed whatsoever. So here's"
353960,359000," the main source code. We're going to be using a single file, a single rust file. And since we're"
359000,365400," not using any dependencies, I don't see any need for cargo. So I think you need complicated build system"
365400,371240," and package management. Uh, if you, if your project is basically a duck, a bunch of duct tape"
371240,374840," dependencies, right. But if you're developing something from scratch that is self-contained,"
374840,381560," there is not much need for any complicated process or any complicated package management or anything"
381560,387080," like that, right? If you're just making it, just writing the code that does a thing, uh,"
387080,391480," you don't really need anything. You just need a compiler that translates that code to the machine"
391480,395640," instructions. So you can run this thing on the CPU, right? So it just makes sense."
396520,400200," Uh, so pure programming, as I like to call it a pure programming."
400200,407320," Okay. So another thing we have in here is a PDF file, which is like a weird documentation from where"
407320,414040," I stole the, uh, the formula. So I'm going to just straight up remove that. So we have a bunch of"
414040,422680," samples in here, and these are the samples, uh, from, um, the website where we found the description,"
422680,427560," uh, of the, um, of the format, right from the app site where we found the description of this format."
427560,431160," And I don't know, do I want to include the samples in the original repo?"
431160,438120," Uh, do I want to include them? I'm not, I'm not quite sure because I'm not sure if they're that useful,"
438120,441480," right? I'm not sure that they're useful. So maybe I'm not going to include them,"
441480,446360," but at the same time, I don't want to remove them either because they're kind of useful. To be fair,"
446360,450680," they're not really that useful. Right. So let's actually go ahead and remove that because we"
450680,454600," explored everything we wanted to explore with the samples. So we don't really need any samples because"
454600,459720," we're generating everything ourselves. Right. So there is a couple of garbage in here. So this is"
459720,466280," just a, uh, you know, leftovers from PPM generation. And, uh, here is the video file that we generated."
466280,471640," And I think we're going to just basically get to ignore this file, uh, Y4M and there we go. So,"
471640,478040," so far we have only two files that we really want to commit in here. It's, uh, a main dot RS and dot"
478040,481640," key to ignore. I don't want, I don't want to commit to do because it's just like a local file that I'm"
481640,485960," going to keep around and I'm going to remove, uh, at the end of the stream. So, uh, I'm going to create"
485960,491400," a read me, uh, first of all, we need to release this entire thing, uh, under a particular license. I"
491400,498200," like to prefer, uh, to use MIT license. So then we're going to do read me and here we're going to, uh,"
498200,504120," put the name of the project, right? So it's going to be to impact for you, right? So that's basically"
504120,515240," the name of the project, the project. Uh, so simple playground project to explore, uh, explore the, um,"
517080,525320," you for MPEG two, um, what was the name of the project? Like simple, um, simple, simple,"
525320,536280," simple video format, simple video format, uh, simple video format. And so you for impact to,"
536280,543320," okay. So, uh, you before into impact. So I'm going to give the link to this format here in the description,"
543320,551720," right? So we're going to have a quick start, uh, quick start, uh, install the rust compiler,"
551720,558840," right? So we're going to give the link to the rust. So you can find it in here. And, uh,"
558840,564920," so I'm going to just copy paste this thing in here. And here is the console. We're going to do rust"
564920,575080," C main dot RS. Then you just run, uh, main, and then you open the output file in, uh, using, um,"
575080,582280," you know, M player, right? So yeah, it's actually maybe any player that supports this kind of format."
582280,586680," Oh, I wonder how many players support this kind of thing. So does VLC support this stuff?"
586680,592360," I wonder. So let's try to open it with VLC. VLC support that, but it's actually different color."
592360,597800," And if I open that stuff in M player."
611080,625400," Um, is it possible to upload this file to, for instance, discord?"
625400,636760," It's probably too big. Yeah. It's probably not going to be recognized as, as a file,"
638600,642200," as a video file. So it's processing it."
642200,650040," Nah, it didn't recognize it properly. Okay. So maybe you, you, you know how there is like"
650040,655000," all of these memes about, Oh, this video file crashes discord. I thought maybe you can, you can"
655000,659800," do something similar in here, but it's actually really funny. So we discovered something new. So"
659800,668120," depending on the, uh, video player, you can actually, yeah, the video player will display differently."
668600,672920," This is so, this is so funny. Okay. So what if I open it in the chromium?"
672920,678840," That's a very sad Russian noises, I suppose. Uh, okay."
681000,687320," So do you have something like some other things like MPV? I think I do have it. So let's actually open it in MPV."
687320,699960," Uh, all right. So at least two out of three video players displayed as red and only M player displayed as blue."
701560,707800," Uh, which is kind of sus. Not going to lie, but interesting nonetheless. It is in fact interesting."
707800,713160," Nonetheless, maybe we, maybe this is something that we can explore at some point. Uh, all right."
713160,720120," So let me, uh, create a repo, get in it. Right. And let's do a committee committee and maybe even push a push."
720120,735160," And maybe even push a push. Maybe even push a push. Ready, set, go. And where this, this shit. Okay. So, um."
735160,752680," Um, oh, you, you already managed to download this file. Okay. It's kind of interesting. So I'm going to be uploading the, uh, the repo soon. So anyone could generate it."
753800,766200," Uh, two MPEG for you. Uh, all right. It's two MPEG for you. Uh, and I'm going to just do public."
766200,774680," Uh, okay. And, uh, I'm going to just do, um,"
776840,782360," and add origin and just do this kind of thing and push."
782360,792840," Okay. So it's taking some time. I hope it's going to be working. I hope it's going to be twerking."
792840,806120," So, uh, okay. So yeah, the source code, uh, from the yesterday stream is available in here. So go grab it"
806120,811640," if you want to. So here is the source code. And, uh, I'm going to also add this entire thing in the"
811640,823880," description, right? So, uh, the source code, uh, of two MPEG for you. There we go. Two MPEG for you. Uh,"
823880,830840," so main.rs. Yeah, there we go. So here's the source code. So as you can see, it's a pretty readable source"
830840,837640," code. Anyone, uh, can modify it. Uh, it's really, really approachable. Um, very cool. Really"
837640,844680," recommended. So I'm not even sure if we need anything related, related to PPM, as you can see, right? So"
844680,848760," it's kind of, it's kind of strange, but anyway,"
850760,858200," so, uh, to do, I'm going to go ahead, uh, and just mark this entire thing as done upload the code to"
858200,869080," GitHub is done. Uh, so, um, now, um, we need to indicate the progress, right? So we need to indicate"
869080,874120," the progress somehow. The indication of the progress should be relatively straightforward. It's basically"
874120,880920," like we're rendering the frames. We know how many frames, uh, we know how many frames, uh, we have,"
880920,886600," and we know what current frame we are rendering. So essentially what we can do, we can take a frame"
886600,895880," converted to F32 and divide it by frames count, uh, frames count, uh, as F32, and we get a percentage."
895880,903160," So we get something like progress, uh, progress, right? Uh, we get something like progress and then"
903160,908680," we can just simply print this entire thing, uh, progress, something like this. And this is the"
908680,916600," percentage. So in this progress, if multiplied by 100 is going to give you the percentage. Uh,"
916600,923880," so let's see if it's going to work, if it's going to work now, yo, uh, so I'm going to recompile"
923880,934040," rust C main dot R S. So let's take some time. I wish the computer itself would indicate the progress"
934040,941560," of the compilation. Uh, but it doesn't. So we have, uh, this thing. Okay. So this is, this is unused."
941560,947640," So pixels are unused right now. So maybe, maybe we can remove this thing then. Uh, so what else do we"
947640,952920," have in here, different kind of pattern? Uh, so different kind of pattern probably is not needed"
952920,960760," anymore. So I'm going to be removing this stuff. So, uh, uh, function is never used, uh, which is,"
960760,967880," there's a lot of shit that is not used in here. So let's actually not, uh, fixate on that. Right."
967880,973960," So let's just not fixate on that for now, because, uh, right now we're doing the progress, right? So, uh,"
973960,977800," I'm going to do a rust main dot R S because we never know what's going to be needed and what's"
977800,983240," not going to be needed. So it's kind of, oh, there we go. So we're generating the thing."
985880,992360," It would be also nice to maybe round it, uh, to some sort of a value. I don't know, floor it. Uh,"
992360,996280," or maybe straight up round it. Who knows, rust, uh, std lip."
996280,1001720," Std lip, std lip."
1001720,1011720," Uh, so do you have round in your standard library in 2020? Well, you do have round. Would you look at"
1011720,1018360," that? That's amazing. Right. Round in 2021. And maybe that's precisely what I want to use in here."
1018360,1026840," Okay. So, uh, after that, we're going to be just multiplying this by 100. And, uh, then I want to,"
1026840,1034520," uh, round this entire thing, and maybe I want to translate this stuff to just, um, I don't know,"
1035080,1042440," use size. Right. And then you can say the progress. So this is just a percentage, a simple percentage."
1042440,1045800," Uh, there we go. And that didn't work because I didn't recompile."
1045800,1051800," I'm not going to succeed in the game development industry if I don't recompile."
1051800,1062280," So it's cool and all, uh, but it would be also cooler if every time we're about to bust,"
1062280,1068200," to, to print the progress, uh, we would do like a carrot return or something. If you know what I'm"
1068200,1075800," talking about. Right. So it would be kind of bug, uh, but I'm not sure how to do that. Uh, how are we"
1075800,1083480," going to be doing like the return? Um, so maybe we're going to like not print the new line, right?"
1083480,1091640," not print the new line and always print slash R if you know what I'm talking about. Right. So will that"
1091640,1100120," do anything for us? Um, I think Emacs isn't capable of actually generating all of this."
1101480,1107320," Yeah, that was weird actually. So it does not even display that. You know why?"
1107320,1114600," Because the output in the rust is probably buffered, right? It is probably buffered and we probably need"
1114600,1121480," to flush every time we like print the progress and whatnot. So how can it flush STD out? Uh, so maybe"
1121480,1126520," there is something in the standard library. So something like flush, if you know what I'm talking"
1126520,1135320," about. So, uh, but the question is how can I flush STD IO? Right. So we need to be able to just do STD IO as"
1135320,1142520," STD, STD, STD out specifically. So there's some function to get STD out, but this is just a function"
1142520,1148440," that gives you this like weird struct. Uh, it's a handle to global thingy. And does this handle"
1148440,1155000," implement right? Right. Because I know that right is the one that can flush things. Okay. So that means"
1155000,1164760," you can, you can probably do something like, uh, IO, um, STD out, uh, and then flush and does flush fail?"
1164760,1169560," Uh, yeah, it does fail. So that means I can put things like that. Can I, uh, maybe not,"
1169560,1173960," maybe it doesn't matter. Okay. So let's actually see if it's going to work. If it's going to work now,"
1173960,1179000," yo, I'm going to recompile this entire thing. And, uh, I'm going to run this entire, and there we go."
1179000,1188520," So we have a progress. How about that? So I was right. 15 years of software development were not for"
1188520,1198200," nothing. Right. So I basically know this problem by heart. Right. And I just went and found the solution."
1199560,1207800," Hmm. Isn't that cool. Probably not because otherwise it would be, it would have been employed."
1207800,1216600," Uh, anyway, so here's the progress, which is kind of cool. Uh, maybe we can even increase the duration,"
1216600,1222680," right? Maybe we can increase the duration. Let's actually see how it looks like in, uh, in Emacs."
1222680,1228440," Emacs can actually also, you know, display that, which is kind of cool. Progress."
1235000,1247720," Okay, cool."
1247720,1259640," So, uh, I think we, uh, finished this entire thing, and we are ready to do a committee committee."
1261640,1270200," Uh, so, um, implement indication of the progress, right? Implement the indication of the progress."
1270200,1279000," I'm going to push that right into the repo, right? Pushing that right into the repo. So, uh, let me,"
1279000,1285480," let me see what's going to be the next thing. So animate something, right? So the time has come to"
1285480,1289880," finally animate something. What we're going to be animating, right? As I already said, I want to"
1289880,1297240," animate like some sort of a rectangle, uh, right? So I'm going to move all of these things to a global"
1297240,1302280," thing. So width and height is going to be the size of the canvas for which we're rendering things,"
1302280,1307640," right? So an FPS also going to be part of the, part of the stuff. Duration. I'm not even sure if"
1307640,1312920," duration is going to be in seconds, but maybe it will be in seconds. Why not? Yeah. I think this, uh,"
1312920,1323160," sort of constant constant is nice to have anyway, so it should be fine, I guess. Okay. So, uh, I need"
1323160,1332040," to be able to, yeah, I want to render things in RGB, right? I want to render things in RGB. And I also"
1332040,1338360," want to render things in a, like a tightly packed, uh, manner, right? Not in the planner order. We already"
1338360,1348920," learned what is the planner order in the previous stream. Uh, and, uh, so, uh, yeah, I want to be"
1348920,1354360," able to render things, uh, in a more natural way for me, at least, right? For, for me, the most natural"
1354360,1364840," way is, uh, you know, just the canvas of tightly packed, uh, pixels and the, um, the RGB, right? So,"
1364840,1369320," and I think I need to be able to distinguish this kind of things, right? I need to be able to"
1369320,1376680," distinguish this stuff, but I'm not sure. Oh man. Um, so what's going to be the easiest way to"
1376680,1382680," distinguish all of that? So, because one of the things you can probably do is"
1386520,1395480," is maybe have a type, uh, for something like RGB, uh, 32, right? And this one is going to be U32. Uh,"
1395480,1403560," and then every time you mean, every time you mean the, like some sort of a canvas that is RGB 32,"
1403560,1412360," you would say that it's a slice of RGB 32, right? It's a slice of RGB 32. So, but the YCBR"
1412360,1418760," are not that they're like, you know, separate planes and whatnot. So it's not going to really work well."
1418760,1426600," It's not going to really work well. Um, so I don't know, maybe I should not fixate on that"
1426600,1433480," because every time I try to fixate on these kinds of like things, I get nothing done. So let's just like"
1433480,1441480," code, uh, let's just write code. And, uh, then the pattern will emerge. Hopefully, uh, the pattern"
1441480,1446360," will emerge hopefully, and we'll be able to extract things out. Right? So the thing I want to be able"
1446360,1452520," to do right now is, uh, given the canvas, right? Given some sort of a canvas, uh, which is mutable"
1452520,1459160," because we're going to be writing into that canvas. Uh, so, and the, probably the stride of the canvas,"
1459160,1467640," right? So canvas stride, uh, is going to be your size, given the canvas, um, and maybe the position"
1467640,1476520," of the, uh, position within the canvas, right? And the size, uh, draw a rectangle of a particular color,"
1476520,1483000," right? So, um, maybe we can have something like a rect position, uh, and the rect position should be what?"
1483720,1491240," Um, yeah, let's actually pack that into like a pair, right? So this is the position and the rect size,"
1491240,1497640," uh, which is going to be like this sort of thing, right? There we go. So rect position and rect size."
1497640,1504680," Uh, so, and also we need to specify the color, right? So we need to specify the color that we're filling in"
1504680,1511640," here. So that's basically going to be the signature of this entire thing. I don't know. So it's, yeah,"
1511640,1517480," something like this, uh, to be fair, maybe we can compress the rectangle and actually make it like a,"
1517480,1525400," you know, something like this, right? And just get rid of direct size, get rid of direct size."
1525400,1529880," So you have a canvas, you have a canvas stride, you have a rectangle that you want to fill in."
1529880,1538040," To be fair, maybe we can allow, uh, the rectangle, uh, positions to be, uh, negative, right? But I don't"
1538040,1543080," think it makes sense to allow the, uh, rectangle size to be negative. I don't think I want to deal"
1543080,1548600," with that. So this is going to be our rectangle, right? So that makes sense to me. And then the"
1548600,1555320," color is just like a, like a pixel. Uh, all right. So let's call this something like feel erect, but we"
1555320,1561320," need to indicate that we're talking about RGB, right? We're specifically talking about RGB,"
1561320,1570760," but maybe, yeah, maybe we don't even have to worry about that because we're only going to be converting"
1570760,1578920," to YCRCB, uh, when we saving things into a particular file. So maybe because of that,"
1578920,1583720," I don't have to really worry about that, but I'm going to put RGB, uh, anyway, right? So, uh,"
1583720,1591880," just to feel wrecked RGB. There we go. That should be fine. That should be fine. That should be fine."
1591880,1600360," Does anyone have any questions about what's going on on the screen right now? Uh, so."
1600360,1629160," Uh, so, uh, let's go ahead and compute the size of the canvas. Uh, so the size of the canvas, uh,"
1629160,1634360," so the size of the canvas stride is basically the width of the canvas, right? So it's going to be"
1634360,1644120," something like canvas stride, right? Okay. And, uh, height is going to be canvas, uh, canvas length"
1644120,1650760," divided by, by the width, right? So this is going to be like width and height. Uh, so this one is going"
1650760,1657720," to be very useful in the future. So for the rectangle, um, I need to think how we're going to be approaching all"
1657720,1663800," that. So I suppose I'm going to be just iterating, uh, the rectangle row by row. So this is going to be"
1663800,1670520," in zero up to, I want to actually destructurize this entire thing somehow, because it's not going to be"
1670520,1678920," particularly useful. So, uh, I'm going to take this stuff and this one is going to be in rx, ry, uh,"
1678920,1689400," r width, r height, and then let's just do rect. There we go. So, and then we do rh, uh, zero r width,"
1689400,1695640," there we go. But this is more of a, like a delta. It's not an absolute value, right? So it's not really"
1695640,1702120," absolute value in, by any stretch of the imagination. So, and then we need to take the position, uh, at which we"
1702120,1715560," want to do that, rx and add, um, dx. So our x, uh, is i32 and dx is in fact is u32. So I need to convert"
1715560,1722360," it to i32. So x is going to be i32 as well. Right. And then this is the same thing is going to be for the"
1722360,1729720," y. We need to check that x and y actually lie within the canvas, right? We need to do the boundary"
1729720,1736120," check stuff. So, and to do the boundary check stuff, uh, on i32, I suppose I will have to"
1736120,1743640," actually convert this entire thing to i32 and this entire thing to i32 as well. So we're going to be"
1743640,1752200," doing all of the computations within the i32. Right. Okay. So if, uh, let's say, um, from the range from"
1752200,1762520," zero to width contains the x and the range within this stuff contains the y, we know that the current"
1762520,1769480," pixel that we're currently handling, uh, lies within the canvas. So we can go ahead and fill it in."
1769480,1777160," So I'm going to do canvas. Um, so we'll have to convert x and y finally to u size, but I think"
1777160,1782040," I'm going to do that in place. So it's going to be as u size, right? So this is going to be as u size,"
1782040,1790680," multiplied by canvas stride, uh, plus x, uh, as u size. There we go. And we're filling in the,"
1790680,1794360," the color like this. There we go. So we managed to write a function that"
1794360,1802440," given the, uh, canvas and a rectangle fills that rectangle within the canvas with the specific color,"
1802440,1811800," right? So, uh, yes. So we have that and we can use that finally to generate the things. So now I probably"
1811880,1818120," need to generate the canvas like memory for the canvas and constantly, constantly update it and"
1818120,1825880," stuff like that. Uh, but as I constantly update the canvas, I think, uh, I need a way to clean"
1825880,1830520," the canvas, but maybe I don't have to clean it. So the only reason why I need to clean the canvas is that"
1830520,1836120," when I put the rectangle, uh, on it, right, when I put the rectangle on it, I need to clean everything"
1836120,1840520," and put it in a different place. But since I only have the rectangle, I can actually call the"
1840520,1846840," fill rect twice. Basically fill it with a contrasting color with the foreground color,"
1846840,1851400," save the frame and fill it again with the background color and then place it in a different place. So"
1851400,1859160," it's actually a very old trick that used in old computing to save on, uh, on the CPU, uh, counts or"
1859160,1864040," whatever the fuck it is. So you don't have to like traverse the entire thing, right? Because the"
1864040,1868600," video memory is slow or something. But the reason why I'm using it here is because I'm too lazy to"
1868600,1873880," implement yet another function. Uh, though I could have just used the same function and setting direct"
1873880,1878360," to the size of the whole canvas. Well, I mean, so probably one single function is enough for everyone."
1880280,1890280," All right. Anyways, anyways, anyways, anyways, anyways. So, so we have frame counts, pixels is probably the"
1890280,1896840," canvas. So maybe I'm going to go ahead and rename this thing to just canvas. So output file path. I'm"
1896840,1903160," not sure if output file path has to be this sort of thing. Maybe I'm going to actually put, uh, this thing"
1903160,1908440," into the constant, right? So this is going to be the constants output, uh, file path, which is going"
1908440,1915400," to be str, right? So this is basically what we're going to have in here. Uh, right. And then I'm going"
1915400,1922600," to be doing it like this, right? So, uh, we're opening the sink into which we're like dumping everything."
1922600,1929240," We're dumping the metadata. Uh, and, uh, we sort of like start simulation, I suppose, right? We're"
1929240,1939240," starting the simulation. So to do this simulation, you always need, uh, something like delta time,"
1939240,1945880," I suppose, right? You need something like delta time. All right. So, and we can easily compute delta"
1945880,1951480," time by knowing the FPS, right? So, uh, we're going to do something like delta time, which is probably"
1951480,1957000," going to be float, right? Because it's easier to do animations with a, uh, floating point delta time, which"
1957000,1961960," represents the seconds, right? So we're going to take the floating point one, we're going to divide it by"
1961960,1971960," FPS and convert it to F32, right? There we go. So here's the delta time. Uh, cool. Uh, now, uh, so what"
1971960,1978760," we're going to be doing in here. So I suppose I need to remove all of this shit, right? So this shit is not"
1978760,1986280," really needed. So here we're indicating the progress and whatnot, and here is the first frame. So we need"
1986280,1993080," to keep track of the position of the rectangle, right? The current position. So let's actually call it"
1993080,2000440," something like, uh, a rect X, right? Which is going to be, I suppose, I 32 and initially it's going to be"
2000440,2007400," zero. So it's going to start at, uh, you know, zero, zero. So X, Y. So, um, the width and height, I'm not"
2007400,2011640," even sure what's going to be the width and height. Maybe we're going to put width and height somewhere"
2011640,2019960," here. So this is going to be rect width. And, um, I don't know, let's make it like 50, right? Maybe 50"
2019960,2028200," and, uh, 60, right? 50 and 60. I'm going to make it 50 and, uh, 60."
2036840,2042360," Sorry. I'm really new to rust. I wonder why does main need to return our result? It doesn't need to"
2042360,2048920," return. Uh, you can remove that info work fine. So it just like, it doesn't need that. It's more of a"
2048920,2058040," preference thing, right? So yeah, the whole language is basically preference anyway. So don't, don't really"
2058040,2072200," stress about it too much. Um, okay. Uh, so what I was doing, uh, I forgot what I was doing."
2072200,2079720," Um, so I was trying to draw a rectangle, right? I was trying to draw a rectangle."
2082600,2105320," Uh, okay. So, uh, but I still need to fill the canvas with some sort of a background color, right?"
2105320,2111320," So maybe, uh, as the first thing, what we're going to do in here is essentially, uh, before rendering"
2111320,2116840," anything, right? So I'm going to take the canvas, right? So this is the mutable canvas. The stride"
2116840,2124200," is going to be width. And, uh, then I'm going to start at 0, 0. And, uh, width and height is going"
2124200,2128760," to be literally width and height. And the color is going to be, I suppose, background, right? So we're"
2128760,2133560," going to have a separate color for the background. The question is what's going to be the background."
2137080,2149880," What's going to be the background? Uh, so I, for, for a background, I kind of like this color,"
2149880,2157800," which is 80, 80, 80. That's basically the background of my old, uh, color theme in Emacs. And I kind of like"
2157800,2165240," to do that. So const, uh, foreground, what's going to be the foreground is going to be U32. And let's"
2165240,2169640," put it like, I don't know, let's make it to red, some sort of like a reddish color. So it's going to"
2169640,2176440," be background and foreground, right? So we feel the initial thing like that, right? So this is the"
2176440,2183160," initial thing. And, uh, now what we want to do, uh, for the first frame or something like that, we want to"
2183160,2190360," fill, uh, that rectangle, uh, yet again. So canvas, uh, this is the stride and we're going to be using"
2190360,2198120," the rect X and rect Y, and then we're going to have a rect width and the rect, uh, height, right? There we"
2198120,2204280," go. And the color we're filling all of that with is the, uh, foreground, right? There we go. So we filled"
2204280,2214440," that rectangle. The next thing we need to do, we need to save the canvas as the YCRCB, um, frame,"
2214440,2222360," right? That's what we need to do in here. YCRCB frame. Uh, but this is going to be rather, rather"
2222360,2230280," interesting. So it would be nice to have a function, uh, right that accepts the canvas, right? Accepts"
2230280,2237000," actually canvas as an immutable thing. So you 32, uh, and the canvas stride, right? So here's the"
2237000,2241880," canvas stride. So, and of course it's going to accept this thing into which you are saving this entire"
2241880,2246520," stuff. So we're going to take a mutable implementation of write, right? Because we're writing into this"
2246520,2253560," entire thing and, uh, it's going to save it as YCRCB, uh, frame, right? So, and here we're going to return"
2253560,2260120," IO, uh, uh, result, uh, results like this. There we go. So how are we going to call this function? I"
2260120,2268040," think I want to call it like a save canvas canvas as frame, right? And I think that in fact makes sense."
2269240,2285640," Um, save canvas as frame, uh, so to save a thing as a frame, we need to write, uh, first an indication,"
2285640,2291320," right? Indication that we're rendering the frame, right? There we go. We're rendering the frame. And next,"
2291320,2303880," we need to save YCRCB, uh, YCRCB planes, right? But we need to convert this entire thing into YCRCB planes."
2303880,2309720," So we need some sort of a function, right? That accepts the canvas, um, like this"
2309720,2317480," 132. And of course the stride, because without the stride, we cannot even, uh, you know, determine"
2317480,2322360," the size of the canvas, the dimensions of the canvas, right? And it should return us, I don't"
2322360,2332040," know, maybe like three, uh, three vectors. So like, uh, like this VEC U32 VEC U32. And each of them is"
2332040,2339640," going to be like YCRCB planes that you can save to, to the file. Actually, it's not U32, uh, it's actually"
2339640,2352280," U8, right? Something, something like this. So, and, uh, yeah, um, it's basically that. It's basically that."
2352280,2357960," So, but maybe it would be better to have like a structure that stores these planes, right? If you"
2357960,2366600," know what I'm talking about. So maybe we can just call it something like, um, uh, struct, uh, YCRCB,"
2366600,2371400," and we can indicate the format of this thing, right? So we can indicate that it's a 444,"
2371400,2380200," uh, right? And then, uh, this thing is going to be like a Y plane, uh, VEC U8, right? Then you're"
2380200,2389720," going to have CR plane and CB plane, right? And here, uh, this entire thing is going to just return YCRCB 444,"
2389720,2395480," right? So it's just basically a bunch of planes, right? Uh, and then we can say something like"
2395480,2405880," canvas as, uh, YCR, uh, YCRCB 444. There we go. So yeah, basically something like this,"
2405880,2414280," basically something like this. And then once we've got those planes, we'll be able to just simply save"
2414280,2423800," them, right? So I can do something like YCRCB 444 and then canvas as, as YCRCB 444. I'm going to provide"
2423800,2431880," the canvas, uh, canvas stride, and then I will just save all of these things as continuous bytes. So I"
2431880,2442280," should be able to just do write, uh, maybe even sync, write YCRCB 444, Y plane, right? So this is going"
2442280,2450600," to be Y plane. Uh, then, um, maybe I have to even reference this entire stuff. So then, uh, CR plane and"
2450600,2456200," then CB plane. There we go. So that's basically what we can have in here. And this thing is not implemented"
2456200,2460280," yet, of course. So it's going to be just something to like to do. So this particular organization of the"
2460280,2468280," code is not the best way to do this kind of stuff, I think, um, because it constantly maybe"
2468280,2474680," recreates the object. So it creates a new one and then destroys it, creates it, and destroys it."
2474680,2481160," It would be better if this kind of thing didn't really return YCRCB, right? Didn't really return it,"
2481160,2488120," but rather so you had an output that is passed as immutable, right? And then"
2489800,2495240," you would basically allocate only three vectors in here, right? You're allocating only three vectors"
2495240,2500440," and you constantly reuse these vectors, right? Because they're pre-allocate, they stretch up until"
2500440,2505640," a particular point. And if you clean the vector and start pushing into the vector again, it doesn't"
2505640,2512280," really reallocate the memory until the capacity is sort of like, uh, exceeded. So maybe it would be nice"
2512280,2518840," to just pre-allocate these three vectors and constantly use them. Um, I think, I think that"
2518840,2524280," sounds like a good idea maybe. So yeah, maybe that's what we're going to do."
2527560,2535800," Maybe you can add struct for canvas plus canvas stride. Uh, so you're trying to group elements."
2535800,2544440," Um, you, you're trying to sort of force a particular structure on the data before this structure is really"
2544440,2553000," visible. You know, you know what I mean? So here's the thing. What if you want to write a function,"
2554200,2560520," that fills the whole canvas with a particular color, regardless of the, uh, dimensions without,"
2560520,2564200," regardless of the stride, you just want to fill the whole canvas like this. What's interesting"
2564200,2571880," is that you only need to do something like, uh, like this. You never really need a stride."
2572840,2578280," You never really need a stride to actually go ahead and fill the whole canvas with a particular color,"
2578280,2585080," right? Because such function doesn't care about the dimension of the canvas. So you're not always"
2585080,2590200," need a stride, right? You need to try it only in the situations when you do care about the dimensions."
2590200,2595480," And there are situations when you don't care about the dimensions. So you see, it sort of creates more"
2595480,2601800," flexible structure for the entities. So some entities may want to group sometimes, but in other"
2601800,2607560," situations, they don't want to group. So, but if you create a structure upfront, you're forcing a"
2607560,2613480," particular structure on the data and creating a friction in the places where the friction is not"
2613480,2621560," needed yet. I prefer to pass like this soup of data, soup of variables, uh, as like, uh, as long as it"
2621560,2626440," doesn't create the problems. And as soon as it creates the problems, the patterns start to emerge. And only"
2626440,2631720," then I factor out those patterns into separate structures. So in my opinion, in these particular"
2631720,2636760," situations, we don't really have enough information whether we want to group canvas and stride into a"
2636760,2644360," separate entity. We just don't have enough code that relies on this kind of stuff. You're rushing the"
2644360,2650680," process of designing of API, right? I think the API must emerge from the code. You just have to write"
2650680,2656280," something that, uh, solves the problem, pass the soup of variables, and then you will see the patterns."
2656280,2668040," We don't have enough information. Right. So you see what I mean, melg1? So you see what I mean? I actually"
2668040,2674520," do that intentionally. I know that you can group some variables in some particular fashion. I know that."
2674520,2680600," Like, uh, uh, I can say maybe you can even group like, uh, sink in this thing. I don't know. You can"
2680600,2686120," group anything actually, but the question is like, why would you do that? Right. I think we don't have"
2686120,2691240," enough information to do that yet. And we probably never will have enough information to do that yet"
2691240,2699240," because the code, this code is a throwaway code that I'm probably going to stop maintaining today."
2701720,2707240," So it's, it's all dependent on the context. So you can write a whole about grouping the data, uh, all day"
2707240,2714040," long and get nothing done. You can write a whole about it. It's, it's the same thing as with OP people"
2714040,2720680," trying to come up with the perfect hierarchy of abstraction or like hierarchy of the, uh, inheritance,"
2720680,2724840," because you can actually build that hierarchy of inheritance however you want. It just depends on"
2724840,2731000," the situation. And rattling on the hierarchy of the inheritance is just like gets you nowhere at all,"
2731000,2735960," right. So you get nothing done. Right. So, and this is the same situation. You can write a whole about"
2735960,2741480," grouping these entities like all day long and get nothing done. So yeah."
2741480,2751720," Does it make sense? Uh, or I'm not sure if it makes sense or maybe it requires a clarification"
2752520,2763000," or something. So what are your thoughts? But again, I'm not saying that this is how you have to write"
2763000,2768120," things, right? So I'm saying that why, why I don't like to write a whole about these things because"
2768120,2773800," they make me feel completely unproductive. If that's something that you want to do, if that's something"
2773800,2778840," that you value, all power to you. Feel free to do that. It's just like, I personally don't like to do that"
2778840,2783400," because it makes me feel unproductive."
2783400,2795880," Do programmers use recursive functions in real world? Yes. Uh, they use them quite often,"
2795880,2800920," especially if you need to traverse the hierarchy of files. For instance, if you have a folder and you"
2800920,2806360," need to visit each individual, uh, file in that folder, you would probably use a recursive algorithm"
2806360,2811000," to do that. And this is the most practical usage of recursive algorithm that you can find out there."
2816520,2825320," So, and also in different formats that store things in a hierarchical fashion, right? Like trees or"
2825320,2829160," something like that, you will probably see recursive algorithms as well."
2833800,2855880," Okay. Um, so yeah, um, yeah, we have like a bunch of these things. We have like three planes in whatnot."
2856920,2867400," And because of that, uh, we probably want to do the following thing."
2867400,2878040," Yeah. I want to now pass not the canvas, but rather YCRCB planes, right? So this is going to be YC,"
2879800,2885400," YCRCB444. And this is going to be just the reference to these things."
2885400,2897480," Just a reference to these things. So, and you can just say that we're saving YCRCB444 as frame."
2897480,2902440," And now we don't really have to call this function anymore, right? So what effect that we were doing,"
2902440,2908280," right? We are just saying it's a frame, right? And then we're just saving these, uh, three things."
2908280,2911960," Though this function is so simple that I'm not even sure that we need it. Uh, but I mean,"
2911960,2917560," maybe it's fine. Maybe it's fine. It just sort of indicates the, the flow, right? It just indicates"
2917560,2928760," the flow. Uh, so YCRCB444. Okay. So we generated the first frame. We filled the rectangle and stuff like"
2928760,2934680," that. And then I probably want to, uh, generate something. So let's actually create like a,"
2934680,2944760," derive the default thing in here. Right. So we're going to have that, um, uh, to, to, to, to, so, uh,"
2944760,2954440," let, uh, and, uh, we're going to have something like YCRCB444. Um, I'm not really sure if I want to,"
2954440,2959320," so this is a, such a long name. I don't really like that. And it's,"
2960040,2968840," I have an idea for a better name that's called frame canvas as frame. So, and that's going to be"
2968840,2975880," the frame. Yeah. Let's just call it frame. Yeah. And then you can say something like save frame."
2976760,2983240," Okay. That is way more readable. Okay. So, and then we're just saving this entire thing, right?"
2983240,2987720," We're just saving this entire thing."
2987720,3000840," Okay. So here's the frame. Uh, so this is the count, uh, frame counts. And this thing is,"
3000840,3004600," has to be frame index. And the reason why I want to rename this thing is because we will need"
3005320,3012280," the word frame, right? So this is going to let mutable frame, uh, frame default. We're going to"
3012280,3019560," create a default empty frame. Uh, and so we generated the frame, but then what I'm going to be doing,"
3019560,3025720," I'm going to be a, uh, canvas as frame. So this is going to be the canvas, uh,"
3025720,3032040," canvas as frame. And I suppose canvas, yeah, it doesn't need a modification. So this is going to be the"
3032040,3038600," width. Uh, and I'm going to provide the mutable reference to the frame. I go canvas as frame,"
3038600,3047000," and then I can save the frame, right? So save the frame. I provide the sink, right? And I basically save"
3047000,3053320," that frame in there. There we go. So interestingly that I think canvas frame, first thing it should do,"
3053320,3060440," it actually go through all of the planes and clean them, right? So that will enable the re-usage of that frame,"
3061000,3065400," uh, on all of these, uh, iterations. So let's actually see if this entire thing compiles."
3065400,3072920," Uh, right. It does not compile because this thing is that, uh, what else do we have in here? Uh, so"
3073560,3085160," we also need to, um, uh, indicate, uh, that this thing is successful, right? So this thing is successful"
3085160,3090840," and width and height. So yeah, I, I renamed, oh my God, I renamed all these things. So I'll have to do it"
3090840,3099640," like that. Canvas width, canvas height. So canvas width, canvas width, and this one is going to be"
3099640,3105240," canvas width. All right. Do we have anything else? Um, did I call it not canvas width?"
3105240,3112200," Am I crazy? I think I'm crazy. Why did I think I called it canvas width? And what is it worth complaining"
3112200,3119000," about? Um, ah, it's, uh, okay. I see. As you said, that's what this was complaining about because I"
3119000,3124760," rarely read the error messages and because I don't really find them useful most of the time. So, uh,"
3125400,3132200," so I just look at the code it complains about and try to figure out this thing myself. So, uh, right."
3132200,3138840," So frame, this is a frame index. Uh, and what else do we have in here? So canvas is not used here"
3138840,3146680," because it's not finished and okay. So we are kind of ready to actually implement that function. So we'll"
3146680,3158280," need, uh, RGB to YCRCB. All right. RGB to YCRCB. So maybe instead of accepting like these three components,"
3158280,3162920," what in reality I'm going to accept, I'm going to accept the pixel, right? So you said it too. That"
3162920,3168280," will make it a little bit easier for me because then, uh, I will get the triple that I can just split"
3168280,3173080," into three planes simultaneously and just store them in separate vectors and stuff like that."
3174040,3181400," Right. So, uh, I suppose in here, I'm going to just do a pixel. I'm going to shift it to eight"
3181400,3188200," multiply by two, right? And then, or FF, right? So, because yeah, that's, that's basically where R is"
3188200,3197080," located. So this one is going to be something like this and zero X, uh, FF. Uh, I'm not sure if the"
3197080,3202840," precedence here is important, right? So I'm going to just put this stuff like that just in case, uh,"
3202840,3216040," and the blue is effectively pixel, uh, like this, uh, and let's put that like that zero X, FF."
3216040,3224040," So that's a little bit better, hopefully. Uh, okay. So now what are we doing in here is basically"
3226120,3233960," believe it or not, here comes the place where I don't need the canvas stride. I don't need a canvas"
3233960,3241400," stride in here straight up. Yeah. So canvas as frame, I just need a sequence of RGB things"
3241400,3246280," and I'm going to be splitting each RGB thing into three planes. There we go. I don't need, uh, I don't"
3246280,3254600," need this stride in here. Right. And which makes this function more reusable. It makes this function"
3254600,3259240," more reusable. Look, look, look, it's, it's very important, right? If I introduce something like canvas"
3259240,3267560," and then I had something like, uh, you know, pixels, I would be forced to have this thing as a vector."
3268920,3273560," I would be straight up forced, first of all, to have this thing as a vector, which makes all these"
3273560,3281400," functions not usable on plane arrays. Right. Already, if I want to pass a thing, uh, this thing to this"
3281400,3289000," function, I would have to pack my pixels to a vector and I would have zero choice, literally zero choice"
3289000,3296200," to actually use anything else, slice sub slice array out of the window instantly. Right. Uh, this is"
3296200,3301080," first thing. Uh, and second thing, uh, I would also have to provide this stride, but what's interesting"
3301080,3309880," is that what if I have a bunch of RGB, uh, pixels, bunch of, uh, RGB, uh, pixels, like right here,"
3309880,3316120," where I just put some things in here and I want to quickly, uh, separate them by planes. I can just call"
3316120,3321080," this function and don't have to pack it in the canvas, like, like quickly. Uh, maybe I can even"
3321080,3329080," do it, uh, something like that. Um, so canvas as frame, right. And then I can do it like that."
3329080,3335240," And then, uh, I can save it as frame granted like frame itself kind of suffers from the same problem."
3335240,3340600," It kind of already suffers from the same problem, but they have a very specific use case for the frame,"
3341160,3347960," uh, which probably, yeah, which probably will fix this kind of thing to, to a structure. You see,"
3347960,3355080," the problem here is that you have to sort of develop an intuition over time on how to, uh, separate and"
3355080,3360600," group the things. It's not like there's some dogmatic rule that you can just memorize and become a master"
3360600,3366920," of API design. There's no such thing. Right. So you constantly need to know like a trade-offs and stuff"
3366920,3373080," like that. Right. So in this particular case, this function becomes like a reusable by just passing"
3373080,3381720," this thing like that and not having a stride. Right. So, um, you see, that person probably left already."
3381720,3391800," Yeah, I don't know who I'm talking to. Anyways, so, uh, yeah, um,"
3391800,3407800," so let's continue. Uh, let me, let me see."
3411720,3416600," Um, so in here, we're going to be iterating through the pixels."
3416600,3422120," Right. So, which makes it rather convenient, but nobody gives a shit, of course."
3422120,3428360," Uh, okay. So, and, uh, here we can just put this thing like that. It's going to YCRCB."
3428360,3433240," Right. And then I can easily split these things into the separate planes."
3434920,3436440," So I'm going to just push on it like that."
3436440,3450280," Okay. So, yep. That's actually pretty straightforward. I really like how neat and small this function is."
3450280,3455080," Uh, so, yeah."
3460840,3466600," So this is a reference. So that means we'll have to do like that, though we can pass it by the reference."
3466600,3469960," And yeah, by the way, here, I don't even have to pass this entire thing. Right."
3469960,3475800," So, yeah. Okay, cool. So everything seems to be working out quite nicely. So,"
3475800,3487080," then we generating canvas as a frame, then we saving the frame. And now what we can do, we can call this"
3487080,3492760," function yet again for the second time. Right. So this is the second time and what we're calling"
3492760,3498040," it with the background. So basically we're over riding the rectangle with the background color without"
3498040,3503880," need to clean everything. Right. So, and after that, I'm going to be updating the rectangle, uh, plus one."
3503880,3511880," Right. So it can be plus X, uh, X plus one and Y plus one. Right. So, and let's, uh, recompile into that stuff."
3511880,3518440," Uh, okay. Different kinds of patterns. Um, so it seems like it's already fine. All right."
3518440,3523880," So let's try to generate the entire thing. Uh, let's see how it goes. So it's generating things,"
3523880,3529320," uh, generating frames and stuff like that. So it should generate like a two seconds of this stuff."
3529320,3534520," Uh, yep. And, uh, let's take a look at the final product."
3535720,3543400," There we go. So that's very interesting. So generated something, uh, but I think, um, player is not really"
3543400,3550600," correct on this stuff. So let's actually use the VLC. Yeah. Okay. That's, that's really strange. The"
3550600,3559480," background is completely incorrect, which is weird. The background is completely incorrect. Uh, so foreground"
3559480,3568120," is correct though, but the background is not, uh, and I'm not really sure why, uh, right. So background,"
3568120,3578920," huh. All right. So I suppose one of the things I can try to do is just maybe the ratio is also,"
3578920,3585960," oh, well ratio is, I made it specifically incorrect just in case, uh, okay."
3585960,3595720," Okay. Maybe I should actually just run it with the VLC right away,"
3595720,3598040," but we'll see actually takes too much time to start up."
3598040,3601400," Unfortunately."
3607800,3612280," Why is it using red? Why is it red?"
3612280,3619800," So maybe there's something wrong with the fill rect."
3619800,3629240," With the fill rect, with the fill rect, because we're iterating through that and stuff stuff. So this"
3629240,3637560," is the rectangle DX, DY. Uh, then if it contains the canvas, we use, um, Y and X for the canvas stride,"
3637560,3646040," and then we set the color. So that should be fine. Um, I don't see any problems with any of this stuff,"
3646040,3655560," if you know what I'm talking about. So what if I set X, I don't know, green, if I fill everything with green, will that work?"
3655560,3661160," Um, I don't know. So maybe, yeah, let's actually use background because it's kind of weird."
3661960,3665480," Uh, you know, you know what I'm talking about? It's really, really weird."
3665480,3671560," Why it is like that. So this is the CBCR, and when I come in it, so..."
3672200,3681560," Oh, it's actually CBCR. All right. All right. CBCR, and, uh, when we're calling to..."
3681560,3684680," Yeah, it's just like..."
3686600,3692120," All right. So who knows what the fuck is going on in there? So it's probably about the order of the"
3692120,3696280," components of the color or something like that. Yeah. Uh, come on."
3697960,3702200," But you can kind of see something going on in here, it's just the colors are fucked."
3702200,3706040," The colors are straight up fucked, and I wonder why."
3706040,3716200," So this is how we're converting the entire thing."
3717080,3738120," Uh, writing by CRC, should be fine, should be, should be fine, should be, should be fine."
3743960,3749240," So I kind of want to make a small break and make a cup of tea, uh, before I go and should just try"
3749240,3754360," to debug what's going on in here. But maybe I want to remove some of the dead code in here,"
3754360,3760120," which is not used because it's kind of like obscures the entire thing, right? So it's kind of obscures."
3760120,3766120," So let's actually go ahead and, uh, you know, quickly go ahead and remove all the dead code."
3766120,3770360," Wait, I'm not even recompiling anything."
3772440,3779800," Okay. Classic. Okay. So, uh, Rust-C main.rs."
3779800,3784600," Uh, this one is..."
3784600,3794840," Come on, tell me how that's the sole reason why you have to use Cargo."
3794840,3800760," Come on, tell me. Be that person in the chat and just tell me. That's why you have to use Cargo."
3800760,3806360," You know, ignoring all of the complexity that Cargo introduces to the project, all of the problems"
3806360,3811320," and stuff like that. Ignoring all of that. Just go ahead and tell me. That's the sole reason. That's"
3811320,3816760," the only and sole reason why you have to use Cargo. Ignoring the fact that without the Cargo,"
3816760,3823320," it's actually super easy to solve that problem by creating a script around sh, right? Which constantly"
3823320,3829960," reveals this entire thing and just runs it all the time and just using that script instead to run your"
3829960,3834920," program. Go ahead and tell me that that's the sole reason why you have to use Cargo. Ignoring"
3834920,3841160," everything else that is going on. Go ahead. Come on. Be that person. I want to see that person in the chat."
3841160,3847240," Thank you. Thank you so much. Okay. That's the highly intelligent discussion that I want to see every"
3847240,3859320," day. So, uh, that is in fact a very highly intelligent discussion. All right. So, uh, let's go and boom."
3861320,3869240," Hmm. Okay. So delta time. Delta time is not really used right now. So, um, maybe because of that,"
3869240,3875240," I'm going to actually remove it. So, uh, save frame and use the results and, uh, let's actually"
3875240,3885400," unlock it. So why exactly you don't like Cargo? Your question has, uh, incorrect premise. And by"
3885400,3890680," answering your question, you're forcing me to agree with your incorrect premise. Please reward your question."
3891320,3901000," Hmm. The premise of your question is that I don't like Cargo. And you're literally forcing that"
3901000,3908200," premise on me, which is extremely rude, by the way. You don't ask questions that force particular promises"
3908200,3917720," on people. Um, all right. And I explained the reason why I don't use Cargo in this project. You see,"
3917720,3925400," I'm not saying that I don't like Cargo. I say, I don't use Cargo in this specific, uh, project. You"
3925400,3930600," see, I'm actually not agreeing with your premise of the, uh, of your question, right? I'm not agreeing"
3930600,3935880," with the premise of your question. Um, the reason I explained that reason at the beginning of the stream,"
3935880,3942200," literally there was like, if you go back and vote, there was like a couple of sentences that I said,"
3942200,3948840," why I don't want to use Cargo in this specific project. Again, not saying that I don't like Cargo."
3948840,3956920," So let's make a small break because I really want to make a cup of tea."
3960360,3967160," All right. Let's continue. So, uh, I think the problem was that, um, yeah, I didn't recompile the"
3967160,3972840," into, I think let's actually see. Uh, so let's just run the into, I think maybe I'm going to just"
3972840,3976440," be doing it like that. Uh, all right."
3984520,3991480," All right. So, uh, if I take a look at this thing, it's going to be VLC. Uh, all right. So that makes"
3991480,3997000," more sense. Now that definitely makes more sense. I, I suppose I just didn't recompile something."
3997000,4002760," So the problem is that I don't quite understand why the background of like 18, 18, 18, 18 didn't work"
4002760,4008920," properly. Uh, maybe again, because I didn't recompile at some point. So that could be true,"
4008920,4016280," but I'm not 100% sure. That's kind of weird. Um,"
4016280,4026440," it sets it to blue. Why does it set it to blue when, uh, so it must be the formula is,"
4026440,4032040," is incorrect or something. It could be the case actually. It could be the case that the formula,"
4032040,4038040," uh, of converting. Yeah. So the more I like play with this format, the more I realize that it's just"
4038040,4044520," not suitable for what I'm trying to achieve with it. Like, because it just adds this whole level"
4044520,4052440," of complexity that is really, really not needed for what I'm trying to achieve. All right. So yeah,"
4052440,4059000," it's just so sad, but I want to get it to a working state where it can like generate some images. Right."
4059000,4067160," So, um, I don't know. So first of all, I need to double check that the formula that I have in here is"
4067160,4073400," correct. Right. So let me actually put like to do somewhere. Where is the formula? Yeah, here it is."
4073400,4085000," Uh, to do, uh, is this correct, right? Is this thing correct? So, uh, this one is just RGB. It doesn't"
4085000,4099800," really matter. Um, in here, um, is, uh, is this correct? Uh, are we, uh, placing the components"
4099800,4108200," in the right buckets, so to speak, in the right bucket, so to speak, right? So, because we have"
4108200,4113080," like a three buckets for different planes, right? So maybe we are not using the correct order for"
4113080,4119720," some things in here. So I don't know, it could be anything. And, uh, so is this correct? Right."
4119720,4129480," Is this correct? Uh, are we saving the planes, the planes in the correct order? Right. So that's the"
4129480,4137560," sources of the, uh, of the problems that can, I can potentially see. Right. So, um, yeah, let's just go"
4137560,4144600," ahead and, uh, check all of that. So is this correct? Uh, before maybe I go and, uh, you know, check all of"
4144600,4150920," that I'm going to commit everything I have right now. All right. So let's actually go ahead and do that."
4150920,4162680," So it was going to be something like, uh, so implement, uh, the, um, I will say generate the animated"
4162680,4173800," rectangle, uh, uh, the colors, the colors are incorrect, but at least it is moving."
4174280,4181880," So it is an animation, which is kind of cool. So if we're getting closer to, to having something"
4181880,4187800," interesting, right, we're getting closer to having something actually interesting. All right. So, um,"
4187800,4194440," the next thing, the next thing we need to do, so how can we correct the, uh, the formula?"
4194440,4198120," I just realized that I removed all of the,"
4200200,4207880," all of the description links, all of the description links and oh boy, I'll didn't,"
4207880,4212120," didn't save them for the next video. I'll have to recover them from the previous world."
4216760,4223800," shit. And, uh, apparently I need back, uh, that, that, uh, the commentation that I actually removed."
4223800,4229480," I should have not released that, but it is what it is. I suppose it is. Well, here's the formula,"
4229480,4236280," by the way. Yeah. So maybe I'm gonna, yeah, I still have some, some stuff left. Okay. So, uh,"
4238200,4245800," I wanted to copy this thing. So this, this is the formula, right? So this is the formula and let's"
4245800,4254360," take a look if it's, if it's correct or not. So R, uh, is the zero one two. So this is like the two,"
4254360,4264360," the second, uh, the second byte G so on and so forth. Okay. So Y is effectively 16, uh, 65,"
4264360,4275720," 7, 3, 8 for the R and then 128, 0, 5, 7 G plus 25, 64. And all of that is divided by, uh, 256. So maybe"
4275720,4283000," like I did some modification, uh, where I just grouped things in parentheses. So maybe I shouldn't do that."
4283000,4288120," Maybe I'm just gonna do it like this. So it's a little bit closer to the original formula."
4288120,4292360," You know what I'm talking about? Just a little bit closer. So there's less room for a mistake."
4292360,4301640," All right. So, uh, and in here, uh, if I remove the parentheses, right? So this is what we're getting"
4301640,4309960," here. So this is minus that, uh, then, uh, divided by that and then divided by that. There we go. So, uh,"
4310600,4321080," cool. Everything is sort of a line 128 minus 37 and four, four, uh, 256, uh, seven, four, four G plus, uh,"
4321080,4329720," 256. Okay. So everything seems to be all right in here. See R, uh, it's just that three R, but without"
4329720,4339080," that stuff. So, and in here, uh, we can just simply get rid of that and only that one has to be so, so far,"
4339080,4343720," I don't really see that many mistakes. If you know what I'm talking about, like, it's just,"
4343720,4352680," yeah. So the only thing in here is that we don't divide R by 256. I've no idea why though. Um, it's kind of"
4352680,4359400," strange, but R is not divided probably have something to do with the perception of, uh, you know, of the"
4359400,4366120," colors for the humans, but so far I didn't see any significant mistakes in here, right? Maybe I can even"
4366120,4381320," do things like that. Um, there we go. So, so it's essentially basically, um, yeah, taking the"
4381320,4387400," vector of the colors and multiplying it by a matrix, right? And that gives you the thing that you want to"
4387400,4398440," have. So Y, C, B, C, R, right? So here's Y, C, B, C, R. Um, it will be kind of cool to have named tuples,"
4398440,4407240," so I would never, um, you know, screw up the orders of the C, B and C, R and whatnot. So, uh, maybe this is"
4407240,4417080," something that would be nice to have as a structure, uh, Y, C, B, C, R, uh, right? And here you would have"
4417080,4429000," Y, uh, which is U8, uh, Y, C, um, C, B, and C, R. And then instead of the tuple, you would return"
4429000,4434760," this structure, right? Because I want it to be named, right? So it's a little bit easier for me to"
4434760,4440680," work with. And then I can do Y, C, B, C. I don't have to do a return by the way. It doesn't really matter"
4440680,4449560," though. Uh, Y, C, B, C, R. There we go. So now the order in which I destructure those things just"
4449560,4457480," doesn't matter, right? So I can always refer to this thing by name, right? So far so good. I didn't see any"
4457480,4463880," mistakes in here, right? So let's actually refactor everything. Um, so yeah, yeah, this thing has to be,"
4464600,4470760," uh, so there's one thing that we probably have to do in here. We have to convert all of that to, uh,"
4470760,4476920," U8 to the byte, right? So that, uh, a little bit later, it's easier to work with."
4476920,4491480," Okay. So here I can do something like, can I do Y, C, R, uh, uh, C, B, C, B, C, R. Did I call it C, B, C, R?"
4491480,4497880," Uh, can I destructurize like this? I wonder. I wonder if I can destructurize like this. Let's"
4497880,4503560," actually see, uh, turn that in. So that's pretty nice. Isn't that nice? I think that's pretty,"
4503560,4510520," pretty nice. It's pretty, pretty cool. Um, okay. So I'm sorry. It actually, it actually displayed"
4510520,4516600," it in a different place. So let me quickly just do VLC. Uh, and there we go. As you can see,"
4516600,4520680," it's playing animation, but again, the colors are completely incorrect. I have no idea why. So this"
4520680,4525240," is precisely what we're trying to investigate in here. Right. So the colors are incorrect,"
4525240,4531560," but I think there is no problem in this formula. I went over this formula, uh, several times. So, uh,"
4531560,4536840," I'm going to just remove this to do. So everything seems to be okay. Uh, right. So let's take a look"
4536840,4543080," at this code. Uh, so this is the modification that we've done just in case. So what I'm going to do,"
4543080,4552280," I'm going to say, uh, revise RGB to YCRCB. So this is basically what we did. We revised this entire thing."
4552280,4557080," And if, uh, you want to get the source code of this thing that we're developing in here,"
4557080,4561080," you can find this thing in here. Right. And for people who's watching on YouTube,"
4561080,4565240," you can find this thing in the description, right? So did I put the source code in the description?"
4565240,4571720," I think in fact, I did. Here's the source code in the description. Beautiful. All right. So the next"
4571720,4577000," function that we need to revise just in case, is this thing correct? Right. Is this thing correct?"
4578600,4585640," So the problem, uh, yeah. So introducing this structure kind of got rid of the problem,"
4585640,4592440," right? Because now we're referring these things, not by order, but by, uh, by name, right? So it just"
4592440,4598440," doesn't matter why CBCR, uh, right. CBCR, CBCR, it just doesn't matter because as you can see,"
4598440,4604440," we're just referring everything by name and the names match. So, uh, I don't think there are any problems"
4604440,4613640," in here per se. So that should be fine. That should be fine. So yeah, that's pretty cool. Okay. So, uh,"
4613640,4624920," let's go ahead and remove that. So I might as well just to run this thing one more time."
4624920,4642280," Yep. It seems good. Uh, and canvas as frame, uh, revise, uh, and let's just push that right."
4643640,4653080," Let's just push that right into the repo. Okay. The last thing that we need to revise. Are we"
4653080,4659800," saving this thing in a correct order? So, uh, the order that everyone's talking about usually about"
4659800,4667560," this for, uh, these things is that why CBCR, right? So when we were saving in, uh, in this kind of order,"
4667560,4676920," which is kind of weird. So yeah. So if we take a look at the PNG in here, it's Y, uh, CBCR,"
4676920,4683800," it's Y CBCR. Uh, so I, I would presume that you always have to save these planes in that specific"
4683800,4689160," order as well, but we can always take a look at the description of the format. So the description of"
4689160,4696600," the format can be found in the read me. So it's HTTPS, right? So it's HTTPS. And we're going to put"
4696600,4704680," this thing in here. So, uh, the description is somewhere here for those who's watching on Twitch,"
4704680,4710440," you can find it in here. And, um, I mean, for people who use watching YouTube, you can find this link"
4710440,4717000," in the read me itself, but they can put it in description just in case. Right. So, um, description,"
4717000,4726440," description of, uh, UV for impact to format. Right. So it's actually very simple format. That's kind of the"
4726440,4732120," reason why I'm looking into this format is that it's extremely simple. Right. So, um, yeah,"
4732120,4742360," so why CBCR play in order? Okay. So that's the basically what they expect in here. Uh, so yeah,"
4742360,4749240," I don't see any mistakes in here specifically. So everything looks all right. Let's try to, uh,"
4749240,4755240," generate the thing. Now we're doing that in a different order. Um, why CBCR? Why CBCR?"
4755240,4763560," And now it's just red for whatever reason. Um, okay. So I don't really know maybe where."
4763560,4767640," So the last thing that I see is that maybe we're using incorrect formula."
4769320,4777560," right. Maybe that's the, the problem. Maybe we're using incorrect formula."
4777560,4786040," In plane or each frame begins with five frame followed by zero or more parameters each preceded"
4786040,4793720," by, uh, ending with zero. This is then followed by robots for each from each plane. So we're using"
4793720,4800520," specifically 4, 4, 4, 4. So that means the, uh, amount of bytes per pixel is three. So I would presume"
4801640,4812040," that. Do they overlap somehow?"
4812040,4819640," Maybe I still got the format wrong. That could be the case."
4823240,4837800," What if they do overlap still somehow. What if they do still overlap?"
4837800,4845160," Um, yeah, I feel like maybe I'm packing them incorrectly."
4845160,4851560," Do the sample play correctly in VLC? So that's a good question actually."
4853000,4858280," Um, so I removed the sample, I think."
4858280,4867160," Uh, samples, um, because they do play correctly in, uh,"
4867160,4879160," in M player, but M player plays some of ours, uh, things incorrectly. So that actually raises a"
4879160,4881880," pretty interesting question. What the fuck is going on? Right."
4882760,4888120," So, uh, let's unpack those things and this one as well."
4888120,4894760," All right. And, uh, if I do M player, right. So here's the M player and here's the ominous,"
4894760,4900840," uh, cup, right. If I open, um, this stuff in VLC, right. Let's take a look at VLC."
4900840,4906760," Yeah. They surprisingly, they play correctly. So that means maybe we are doing something"
4907880,4912680," horribly wrong, uh, horribly wrong. So there was like a couple of weird frames, uh, for the, for the cup."
4912680,4921000," Yeah. So it's just place, uh, yeah. So we're probably maybe packing those things incorrectly."
4921000,4923320," That could be the case actually."
4925720,4930600," Uh, that could be the case. Maybe we can fight to pack them slightly differently."
4930600,4936920," Uh, is a pack twice before in which a pair of consecutive pixels are presented by one"
4936920,4944360," sample each, but share. Oh, I see. Oh, so yeah. Okay."
4946360,4950120," This type of data may be packed in a container format. The first pixel for"
4958680,4968360," might format. This pixel is a function of. Oh."
4968360,4978920," So it's unclear how many bites or beats this entire stuff take."
4980840,4987160," Uh, so why CBCR444 plane order? So how will it look like?"
4987160,4999960," If you look, we're back at the square one yet again."
4999960,5004440," Back at the square one."
5006280,5012280," Which further drives the nail down the fact that this format is just not usable for what I'm trying to use."
5012280,5015880," It's just like not. Um, yeah."
5015880,5017800," It's just not."
5017800,5021160," Uh, CBCR"
5021160,5024440," UV444. Like it's just"
5024440,5030920," frame rate. Uh, well, I mean, that means, oh man."
5033800,5038200," That means you allocate like a one byte per each of these components. Is that..."
5038200,5045080," It's just like so little information about that. It's just, uh, makes me so sad."
5045080,5050280," Okay. So what if we just try different orders of these things? I don't know. What if I put"
5050280,5057560," luminous somewhere here? I can't fucking know this point anymore. Like, yeah, according to my understanding,"
5057560,5063800," it just have to take three bytes. So you have a one byte per component. Right. That's what you have."
5063800,5070520," You have a one byte per component. And that makes sense. Do I have to pack them somehow further?"
5070520,5075960," There's so little information about how I supposed to pack them. It's insane. There's all this weird"
5075960,5082120," shed that it has nothing to do with how you pack them. And it's just like, yeah, it's just like not helpful at all."
5082840,5091160," Um, I don't know. So, and again, the case could be that, uh, they may not be..."
5091160,5098280," The problem may not be in order. Maybe the, the bytes, maybe like lumina takes four bits and you're"
5098280,5100120," supposed to do something, something else."
5102280,5109320," No, 444 has nothing to do with bytes or something. I think it has something to do with, uh, frame rate"
5109320,5116280," or something like, so you have four luminous per four red shift and blue shift or something like that."
5116280,5122680," It's just like an insanely obscure, like intentionally. Um, and it's just like drives me nuts."
5125560,5130440," There's no like a simple, you know, explanation. Okay. So this is how you lay it out in the memory."
5130440,5136760," So this is how we can read that. No, it has to be like this. Uh, anyway, so, um,"
5136760,5148840," 444 ycbcr. So we can try to read the other ones and okay. Indicates that a planar close space where"
5148840,5154840," two by two block of pixels in the image is represented by four, uh, one for each pixel,"
5154840,5161400," but all four pixels share the same. Uh, okay. So can be transported within the general purpose"
5161400,5168600," container format, uh, for trivia. It's not fucking helpful. Like, it's just like, show me the picture."
5168600,5176280," How do you want it to be placed in memory? It's just, uh, it drives me nuts. Um, and the one that I"
5176280,5184200," want to use doesn't even have explanation. It's just like, I want to make a small break. Look at"
5184200,5191880," this. This makes me so upset, right? Because I know it is simple. There's the, the, the difficulty of this"
5191880,5198200," problem is completely artificial. That's why I'm so upset. It's just like, yeah, you just want this"
5198200,5203720," thing in a particular beat, bite, whatever the fuck order, but you won't tell me in a normal human"
5203720,5210680," language because fuck me apparently. Right. So, uh, so, and that's what makes me upset. It's just like,"
5210680,5215960," it looks like a gatekeeping problem, right? If you just showed me like, how do you want this layout in"
5215960,5220760," the memory? Like, what do you want? I would be able to do that, but you won't tell me because"
5220760,5227400," whatever reason, I didn't know. Uh, so yeah, let's make a small break. This shit just makes me upset,"
5227400,5236520," like down to, to the core. Uh, this. All right. So I have a weird suspicion, uh, which I want to kind of"
5236520,5247640," test, but I'm not sure how to test that properly. So basically I have a feeling that some of these"
5247640,5255800," components may not fit into a single byte and some of them may be smaller than byte and because of that,"
5255800,5262680," the sum of the sizes of this thing may be three bytes, but not necessarily this thing"
5262680,5267720," take three bytes. You know what I'm talking about? Uh, but they do divide by 256, which is,"
5267720,5273960," which makes me believe that maybe that's what you want, but it's really weird. So I want to basically"
5273960,5279880," iterate through all of the possible, like through the whole RGB space and compute the maximum and"
5279880,5288120," minimum for Y, CB and CR, uh, in floats though. So it has to be in floats, right? So I needed like a"
5288120,5293720," different function and different structure, which actually works, uh, with floats instead. I just want"
5293720,5298040," to see what's, what's going to happen in this particular case. And maybe some of them could be negative,"
5298040,5304120," by the way. So I have to be aware of that too. Um, so, because there's like subtraction in here"
5304120,5308440," or something like that, it's, it's kind of difficult to derive what's, what's happening in the formula,"
5308440,5314280," right? So I'm going, I'm going to go and just like, uh, conduct an experiment, right? So we're"
5314280,5318360," going to conduct an experiment and see what's going to happen in here. So this is going to be F,"
5318360,5324280," this is going to be F. So, and, uh, because of that, I'm going to be copy pasting this entire"
5324280,5331000," thing in here. So this is going to be F, uh, but this time we're not converting it to, uh, U8,"
5331000,5336600," right? So we're going to be using the floats. Uh, we're going to be using the floats. There we go."
5337400,5343640," So where's the main is going to be two. And, uh, here I'm going to be iterating through the entire"
5343640,5353080," RGB space, right? So it's going to be four R in, uh, 256, right? So, and we can repeat that for, uh,"
5353080,5361880," G and we can repeat that for, uh, B. There we go. So R, G and B, and I need to construct this entire,"
5361880,5370680," to be fair. I don't need to do that because what I can do is I can just do pixel, uh, in zero, uh,"
5370680,5379960," then X, uh, one zero, zero, zero, zero, zero, zero. So that will iterate through everything zero to X,"
5379960,5385160," F, F, F, F, F, F, F, right? So it will iterate each individual pixel. Okay. That's cool. So they need"
5385160,5390680," to do this kind of, which makes it relatively convenient to iterate the whole RGB space."
5391640,5401320," Okay. Uh, so can I actually make a Y, C, R, C, F comparable, uh, something like derive, uh,"
5401320,5410440," right derive, uh, partial or R D, right? So this is what I want to be able to do. So I want this thing"
5410440,5421080," to be comparable. And, uh, after that, oh, that's pretty cool. So can I effectively take this entire range"
5421400,5431080," and map it with, uh, RGB to Y, C, R, C, B, F, and then find the maximum, uh, between these entire things,"
5431080,5437800," right? And, uh, yeah, just print this entire maximum like that. So I should be able to just do that."
5437800,5443000," Right. So, uh, well, maybe, maybe there's some details which, uh, will prevent me from doing that,"
5443000,5447080," but that would be actually kind of cool if I could just do that. If the Y, C, R, C, B is comparable."
5447080,5455000," Well, no. Um, so it compares this thing as separate components, right? It compares these things as"
5455000,5463400," separate components. So, which will not allow me to compare things properly. So I'll probably have to,"
5464440,5469160," uh, write some sort of a fold if you know what I'm talking about. So it's more of a,"
5469160,5476360," it's more of a fold, uh, right? Fold left even, right? Where I would have an accumulator,"
5476360,5484520," right? And some sort of accumulator. Uh, so here's a map, uh, here's the fold, uh, the accumulator and the"
5484520,5492200," current X. And within that accumulator, I will have to basically do Y, C, B, C, R, F, right? Where,"
5492200,5502680," uh, essentially Y is going to be equal to the, um, maximum, uh, CMP max between accumulator Y and, uh,"
5502680,5512440," X, Y, then Y is going to be replaced, uh, with CB. And this one is going to be replaced with, uh, CR."
5513080,5519160," Right. CR. There we go. So that's how we're going to, uh, be doing all of that. And as far as I know,"
5519160,5523720," fold, we'll also accept the default value. So the minimum, the absolute minimum,"
5523720,5528200," which I'm not really sure how to do that. Maybe there is a version of fold that actually uses first"
5528200,5532280," element as the minimum or something like that. So that's roughly the idea that I want to have."
5532280,5537960," Uh, let's see if I can compile that. So what the compiler will tell me. So CMP, so we probably need to"
5537960,5546840," import, uh, STD CMP first, right? So let's actually see, uh, partial ORD. Um, so, uh,"
5546840,5554360," cannot compare, uh, CRSV, uh, no implementation for equality. So I need a partial equality in here as"
5554360,5559880," well. Okay. So that's, that's fine. That's what you want. Okay. So method not found. There is no fold left."
5559880,5565400," Okay. So that's fine. We can try to find that, uh, STD lib, STD lib."
5565400,5575640," So fold, uh, two, two, two, two. So we can just have fold, but which fold is that it's a fold left"
5575640,5582360," or a fold right? Folds every element into accumulator by applying the, uh, operation blah, blah, blah,"
5582360,5587080," takes two arguments. Uh, I don't care. Is that a left fold or right fold? Uh, reduce can be used"
5587080,5591800," to use the first element. Okay. So there is a reduce, which is probably what I want in this"
5591800,5598440," particular case. Okay. So this is a reduce. Cool. So, uh, what else do we have in here? Uh, CMP,"
5598440,5606040," the trade effort is not satisfied. The trade ORD is not satisfied for F32. You cannot compare"
5606040,5613960," through ORD F32 because programmers should be scared of comparing floating point numbers because it's so"
5613960,5620840," fragile and programmers have no time and ability to learn IEEE 754. So that's probably the reason,"
5620840,5627640," but maybe there's other reasons. Let's actually see, um, um, F32. So comparing floating points,"
5627640,5633320," uh, pointers, floating point numbers is as scary as working with pointers. I do understand that"
5633320,5639880," it is very, very scary. So does it, uh, where's the primitive type? Uh, I wanna, I wanna see the print."
5639880,5645720," Oh my God, the website is slow. Holy fucking shit. Uh, primitive type. Okay. Um, so,"
5647080,5651160," So what does it implement? What does it implement?"
5651160,5657160," Uh, so"
5657160,5671000," So partial ORD. So it does have a partial ORD, partial CMP, which returns your ordering."
5673320,5683080," So, and for some reason, max does not give you, uh, the CMP thing, uh, compares them to as maximum of two"
5683080,5696200," values, uh, returns them."
5696200,5719880," So, uh, Y, C, B, C, R, Y, uh, it's gonna be F. Uh, C, B, C, R, F. Okay. So, uh, Y, C, B, C, R, Y, uh, it's gonna be F."
5721880,5726440," Uh, C, B, C, B, C, B, C, R, F."
5726440,5731000," Um, so maybe I'll have to do some other stuff."
5731000,5739000," So, uh, yeah, so I think this thing has to be clonable and copyable just in case."
5739000,5740440," Right."
5740440,5743640," Um, clonable and copyable."
5745320,5750040," Uh, if X, uh, um, let's actually call it A and B."
5750040,5757560," A, Y is, um, what is it called?"
5757560,5762680," Less than B, Y."
5762680,5763080," Right."
5763080,5767720," Uh, so what I wanna do in this particular case is set, um,"
5769480,5771080," uh, B, Y."
5771080,5771320," Right."
5771320,5773480," So I wanna have a maximum between these two things."
5773480,5781560," Uh, uh, um, it's gonna be C, B, uh, C, R."
5781560,5784600," So I'm gonna just return A."
5784600,5788840," Uh, so probably I have to make it mutable because why not?"
5788840,5789160," Right."
5789160,5793800," So why wouldn't you, uh, like make your life miserable on a throwaway code?"
5793800,5794280," Of course."
5794280,5795880," Uh, okay."
5795880,5796600," So what do you want?"
5796600,5801560," Uh, so you can make it this thing, but I do want to make it mutable."
5801560,5802520," Okay."
5802520,5803160," So perfect."
5803160,5807720," Uh, I have something like this and the only thing I want in my entire life is freaking"
5807720,5809160," just do that."
5809160,5813320," It's just like, give me the way to do that."
5813320,5814120," Holy shit."
5814120,5814440," Okay."
5814440,5817240," Can I just have that already?"
5817240,5818600," So this is unused."
5818600,5821880," Uh, and, uh, all right."
5821880,5825320," So, uh, option does not implement display."
5825320,5825640," Okay."
5825640,5826040," Whatever."
5826040,5826520," I don't care."
5826520,5830360," Uh, so what do you, what do you have in here?"
5830360,5832760," Cannot be formatted."
5832760,5834280," Uh, okay."
5834280,5836520," So that means I need to do something like debug."
5836520,5837960," Right."
5837960,5842680," So, uh, is not declared as mutable."
5842680,5843000," Right."
5843000,5845320," So, uh, where do I put mutable?"
5845320,5847400," So I have to put mutable A in here."
5847400,5848520," So it's, oh, it's not a type."
5848520,5851800," It's for a variable like in any other language."
5851800,5855080," Which I would be already done by, by this time."
5855080,5857800," Holy fucking shit."
5857800,5858440," Okay."
5858440,5861480," So, uh, one more time."
5861480,5864040," Can you show me the results?"
5864040,5865000," Okay."
5865000,5865560," Finally."
5866120,5866840," All right."
5866840,5868120," So now we're freaking talking."
5868120,5878120," Now we are freaking talking."
5878120,5879720," So here is the thing."
5881000,5884680," Why the fuck CR is so big?"
5884680,5887320," That's what I'm talking about."
5887320,5891320," Uh, why the fuck CR is so big?"
5893560,5895000," This is not right."
5895000,5896840," Right."
5896840,5901880," And CR is the one which we didn't divide by."
5901880,5903960," Is the, is the formula incorrect?"
5903960,5906440," Is this a bug in this formula?"
5906440,5910200," I think we just found a bug in this formula."
5910200,5911240," Holy freaking shit."
5911240,5912440," Okay."
5912440,5918120," So if I try to do that, if I put this thing in here, uh, now it makes sense."
5918120,5921960," Now all of them fit into the bite and that makes sense."
5921960,5924040," That effect makes sense."
5924040,5928200," And, uh, if I, uh, just do something like this."
5928200,5928680," Right."
5928680,5931320," So, uh, right."
5931320,5935240," So we will try to find the minimum and the minimum should be like around zero."
5935240,5935960," Right."
5936680,5939000," So it's actually closer to 16, 16."
5939000,5939640," Okay."
5939640,5947640," And I remember in the previous stream, somebody, uh, even, uh, tell, told me like,"
5947640,5948200," yeah, right."
5948200,5949320," You don't have to divide it."
5949320,5950600," You, you have a bug in here."
5950600,5952520," So apparently there's a bug in documentation."
5952520,5955720," The formula is freaking incorrect."
5955720,5957160," The formula is freaking incorrect."
5957160,5957800," Okay."
5957800,5961800," So, uh, you know how I found this RGB to YCBCR."
5961800,5965960," So, um, there was a PDF."
5965960,5968440," I don't remember where we found a PDF."
5968440,5971800," So convert, convert."
5971800,5981960," Uh, so was it something like RGB to YCBCR4?"
5981960,5988360," I can't find this PDF anymore, but this PDF is incorrect."
5989880,5991160," It is freaking incorrect."
5991160,5993640," And now it's gone."
5993640,5993960," Right."
5993960,5995000," Now it's freaking gone."
5995000,5997080," So, yeah."
5997080,6001480," Uh, does anyone remember?"
6001480,6003640," So something like a micro code."
6003640,6005480," So something."
6005480,6008920," Uh, I don't remember."
6008920,6016440," Maybe YCBCR442 RGB."
6016440,6017560," Am I imagining that?"
6017560,6019240," I cannot find that shit anymore."
6020760,6021960," Now it's gone."
6021960,6023400," Like, it's not appearing anywhere."
6023400,6028280," This is so bad."
6028280,6032040," That caused me like a two days of fucking misery."
6032040,6033240," Holy freaking shit."
6033240,6037320," I swear to god, people."
6046840,6048680," Okay, we found the bug apparently."
6048680,6049560," We found the bug."
6049560,6050840," Okay, so at least we know."
6050840,6052600," Should have actually done that."
6052600,6054760," Like, I kind of low-key wanted to do that."
6054760,6056760," Uh, right."
6056760,6058920," But then I decided not to for whatever reason."
6058920,6062040," So, and actually that makes it relative."
6062040,6064200," Well, I mean, I'm going to keep it as divided by two hands."
6065880,6067960," So now I can remove all of this trash."
6067960,6069080," I don't really care."
6069080,6070920," So that is a throwaway code."
6070920,6078280," Imagine in a language where you want to quickly write a throwaway code and it just keep annoying you with this useless shit that you don't care about."
6078280,6079960," Right, you just want to test something."
6079960,6082200," Right, you just want to check something."
6082200,6084520," But no, you have to do that."
6084520,6088440," Ord, implement ord, no, no, you have to implement it."
6088440,6091000," Uh, holy shit."
6092040,6102360," Anyway, so, uh, there's like, in this language, it's impossible to write throwaway code in a comfortable way without rage quitting, of course."
6102360,6106040," Uh, okay, so we're doing something at least."
6106040,6109800," Okay, so it's kind of close to what I want to have in here."
6109800,6113560," So, but, okay."
6113560,6115960," All right, that makes sense."
6115960,6119800," So, um, we feel everything with the background, right?"
6119800,6127240," So, this is the background, this is the foreground, uh, and yeah, that's, that's strange."
6127240,6132200," That is strange."
6132200,6133160," That is strange."
6133160,6136680," So, the background is supposed to be like grayish."
6136680,6139800," Oh, I also was messing with the orders."
6139800,6140200," Yeah, yeah, yeah."
6140200,6142680," So, I was also with, was messing with the order."
6142680,6144120," So, it's a YCBCR."
6144120,6145880," Uh, yeah."
6145880,6147960," So, here this YCBCR."
6149800,6152280," Uh, nice intuition, by the way."
6152280,6153240," Which intuition?"
6153240,6154520," I don't understand what you're talking about."
6154520,6157560," Provide more context when you say something like that, please."
6157560,6159480," Otherwise, I won't be able to understand you."
6160040,6173640," So, um, yeah, music is kind of sussed."
6173640,6174280," I don't like this music."
6174280,6175880," Fuck that music."
6175880,6182120," So, background, foreground."
6183160,6184440," So, the same in the frame."
6184440,6192840," And now, how am I supposed to trust this?"
6192840,6196760," How do we know that there's something else in this formula that is incorrect?"
6196760,6199320," How do we fucking know?"
6199320,6200680," Okay, let's actually use Wikipedia."
6200680,6201560," Fuck that source."
6202280,6203400," I'm gonna go to Wikipedia."
6203400,6204360," Because, like, I don't know."
6204360,6206040," Like, how am I supposed to trust this thing now?"
6206040,6208200," Uh, Wikipedia."
6208200,6210440," Like, see, uh, YCBCR."
6210440,6213800," Uh, all right."
6213800,6219640," So, where is the conversion thing?"
6219640,6225880," Uh, so, this is for, like, different stuff, I suppose."
6227960,6232200," Um, okay."
6232200,6234040," So, this is the one that we probably want."
6234040,6236680," Because the, the numbers look similar."
6236680,6240680," So, alternative digital can derive, uh, uh-huh."
6240680,6243720," And they divide by 250."
6243720,6245160," Well, I mean, depends."
6245160,6247800," The formula is scaling factor multiplied by 250."
6247800,6252680," This allows for value in the denominator, which can be calculated by the bit shift."
6252680,6256040," Ah, ah, I see."
6256040,6257960," So, it's for the bit shift or something like that."
6257960,6259400," But, ah, we really care."
6259400,6263640," So, okay."
6263640,6266280," Let's actually try to, uh, to apply this formula then."
6266280,6270040," Uh, so."
6270040,6272600," Oh, my God."
6272600,6278600," Like, and now I lost the place where it was the formula, of course."
6278600,6280760," Okay."
6283720,6285160," 65, 256."
6285160,6285400," Okay."
6285400,6286440," That's, that's the place."
6286440,6291000," 16, 65, 7, 3, 8."
6291000,6291560," Our app."
6291560,6295880," Uh, we'll have 28, 75, 264."
6295880,6299480," So, this is CB, uh, minus."
6299480,6301720," Uh, we need to check the signs correctly."
6301720,6302120," Right, right."
6302120,6303240," So, the signs are important."
6303240,6305960," Uh, 74."
6305960,6307800," That's the one."
6308600,6309160," It's the one."
6309160,6310680," So, this is a minus, minus."
6310680,6312200," Then, plus."
6312200,6314840," Then, minus."
6314840,6317480," Minus."
6317480,6318840," Okay."
6318840,6320200," I didn't see any mistakes in here."
6320200,6322120," So, it just seems, seems all right to me."
6322120,6324120," Seems kind of all right to me."
6327720,6328520," Uh, all right."
6328520,6331880," So, um, yeah."
6331880,6335320," So, then we're converting everything."
6335320,6336520," Uh, so, this is RGB."
6336520,6337240," Doesn't matter."
6337240,6340280," Uh, so, canvas as frame."
6340280,6342200," We clean all the planes."
6342200,6346040," Then, uh, we push everything to the corresponding place."
6346040,6349400," And, when we're saving everything, this is YCBCR."
6349400,6353240," Um, so, I don't see any problems in here."
6353240,6355480," So, but maybe there are still problems."
6355480,6356280," Okay."
6356280,6359960," Let's give it a try."
6359960,6368600," I think this was correct."
6368600,6369880," I think."
6369880,6370440," Oh, maybe."
6370440,6370680," Wait."
6370680,6372440," Maybe this is the problem with my monitor."
6372440,6373640," I can't do it."
6375080,6375960," Uh, I think."
6375960,6376280," Yeah."
6376280,6378600," I looked at the monitor in a really weird angle."
6378600,6380600," And the, the colors were screwed up."
6380600,6380840," Yeah."
6380840,6381480," This is correct."
6381480,6382760," This is straight up correct."
6382760,6384360," Let's actually try with M player."
6384360,6385240," Right."
6385240,6386360," So, this is going to be M player."
6386360,6389080," Uh, and, uh, yes."
6389080,6391800," That should be fine."
6391800,6398360," I think M player, yet again, confusing."
6398360,6402600," Uh, red and blue or something like that."
6403240,6406920," Uh, on top of that, I think I want to make this thing like this."
6406920,6408760," Right."
6408760,6410920," So, I want it like that."
6410920,6414200," Uh, so, I want the red to be a little bit brighter."
6414200,6415640," You know what I'm talking about?"
6415640,6417080," Okay."
6417080,6419000," So, it's M player that is incorrect."
6419000,6419800," It's M player."
6419800,6421720," M player actually screwed up completely."
6421720,6422840," VLC is correct."
6422840,6425720," Because I, I meant red in this particular case."
6425720,6427000," Yeah."
6427000,6427800," I meant red."
6427800,6429160," Uh, there we go."
6429160,6431640," So, that's precisely what I wanted to render."
6431640,6432840," God damn it."
6432840,6436360," That's precisely what I wanted."
6436360,6437240," Finally."
6437240,6438920," It took me so much time."
6438920,6440920," So much misery."
6440920,6441880," Holy fucking shit."
6441880,6443480," Uh, okay."
6443480,6445960," So, yep."
6445960,6447720," Uh, we did it."
6447720,6448520," I suppose."
6448520,6450600," Um, yep."
6452040,6454520," Uh, fix the colors."
6454520,6456360," Fix the colors."
6456360,6456760," Okay."
6456760,6457080," Now."
6457080,6458200," Maybe."
6458200,6460040," Maybe now."
6460040,6462200," We can try to do the thing."
6462200,6463560," Where we, uh."
6463560,6465000," You know."
6465000,6467320," Sync the, uh, animation with the time."
6467320,6467560," Right."
6468120,6472040," So, uh, essentially make the thing move faster."
6472040,6475160," And also bounce off of the edges and stuff like that."
6475160,6476600," And, uh, there we go."
6476600,6479160," So, actually, Biniar, you're right."
6479160,6480280," What if we make it."
6480280,6485320," What if we animate this entire thing to have, like, HSL, uh."
6485320,6487320," HSL animation."
6487320,6490520," That sounds like a pretty cool idea."
6490520,6492120," Uh."
6492120,6494680," Though."
6496360,6497240," Yeah, we can try."
6497240,6497880," We can try."
6497880,6499640," Sounds like a pretty interesting thing to do."
6499640,6501480," But it will probably take too much time."
6501480,6501880," Right."
6501880,6502120," So."
6502120,6504280," Uh."
6504280,6509400," So, we need, uh, a similar signature in here."
6509400,6509640," Right."
6509640,6510920," Pretty much similar signature."
6510920,6512360," Uh."
6512360,6514120," But we don't have to provide the color."
6514120,6516120," But we may provide the offset."
6516120,6518920," For the HSLA."
6518920,6519160," Right."
6519160,6521400," We may provide the offset for HSLA."
6521400,6523240," So, okay."
6523240,6523880," Uh."
6524920,6527560," So, this one is going to be the color."
6527560,6527800," Right."
6527800,6528280," Because it is."
6528280,6530040," At least it's going to be interesting, I suppose."
6530040,6530440," Right."
6530440,6531560," This is going to be interesting."
6531560,6533000," Um."
6533000,6536360," So, this stuff is going to be pretty much the same."
6536360,6537320," As far as you can tell."
6537320,6538600," This stuff is pretty much the same."
6538600,6542920," And we are iterating that stuff in pretty much the same fashion."
6542920,6544200," Uh."
6544200,6544520," Right."
6544520,6545000," Except."
6545000,6547560," After we've got X and Y."
6547560,6547800," Right."
6547800,6548760," Uh."
6548760,6550840," I think we need to interpolate X and Y."
6550840,6551480," Uh."
6551480,6552840," So, this is going to be U."
6552840,6555880," And I'm going to take X and divide it by W."
6555880,6556200," All of."
6556200,6557800," Both of these things has to be, uh."
6557800,6558040," You know."
6558040,6558680," Uh."
6558680,6559160," I put it."
6559160,6560120," So, this is going to be V."
6560120,6562040," Y and H."
6562040,6562440," There we go."
6562440,6564280," So, um."
6564280,6567240," So, we have UV coordinates."
6567240,6568040," And, uh."
6568040,6569000," I want to use."
6569000,6574520," UV coordinates for HSLA."
6575960,6576520," Uh."
6576520,6580040," So, I already used HSLA conversion in one of my projects."
6580040,6580920," Emote Jam."
6580920,6584840," You can find the source code of this project in here."
6584840,6586200," If you're interested."
6586200,6588920," And I'm going to put this thing in the description as well."
6588920,6589240," Right."
6589240,6590760," So, Emote Jam."
6590760,6594520," So, it's a very simple website that just makes animated emotes."
6594520,6595000," Uh."
6595000,6595480," Right."
6595480,6598360," So, essentially you upload a static emote in here."
6598360,6598680," Right."
6598680,6600600," And it can make it animated."
6600600,6601320," Right."
6601320,6602360," So, uh."
6602360,6603480," You can bounce around."
6603480,6605480," And then you can just render it into a GIF."
6605480,6608760," Which you then can download and upload to BDTV."
6608760,6610760," This was actually done before, uh."
6610760,6613320," Twitch released its animated emote thingy."
6613320,6615240," So, but we have a lot of different filters in here."
6615240,6617880," So, one of the filters we have is a pride filter."
6617880,6620200," Which basically animates HSLA cores."
6620200,6624120," HSL is a representation of the color and stuff like that."
6624120,6627400," So, and I want to try to do a similar thing right now."
6627400,6628520," But for the video."
6628520,6629640," So, it's done on a shader."
6629640,6631800," So, I think I'm going to uink the shader."
6631800,6633160," Uh."
6633160,6634040," From somewhere."
6634040,6636440," So, where is the filters in here?"
6636440,6638040," I think the filters are somewhere here."
6638040,6639880," So, here's the filters."
6639880,6641560," And we're going to find the pride filter."
6641560,6644040," And here is the formula, hopefully."
6644040,6647800," Here's the formula that basically converts HSLA to RGB."
6647800,6649720," So, we need to port that to Rust now."
6649720,6650120," Somehow."
6650120,6653560," So, let's go ahead and do that."
6653560,6655960," Let's go ahead and do that."
6657240,6658760," So, here we, um."
6658760,6659880," Yeah."
6659880,6662200," So, I probably need to rename this function to something else."
6662200,6664680," But first I'm going to be actually converting this stuff in here."
6664680,6666360," Oh boy."
6666360,6668360," That's a lot of sh*t to actually port."
6668360,6669720," I can't f*cking damn it."
6669720,6671400," Ah."
6671400,6672200," I don't want to do that."
6672200,6673640," All right."
6673640,6677880," So, HSLA will give me RGB."
6677880,6678200," Right."
6678200,6679400," So, it will give me RGB."
6679400,6681880," And then we'll be able to set that RGB to something."
6681880,6683640," Uh."
6683640,6684520," Okay."
6684520,6685560," So, fill."
6685560,6687000," I don't know."
6687000,6690600," Let's call it gay wrapped."
6690600,6692200," Uh."
6692200,6693240," So, now."
6693240,6697400," Let's try to have a function that is called HSL to RGB."
6697400,6697720," Right."
6697720,6699160," So, here we're going to have H."
6699160,6703880," And I think we're going to accept those things in floats."
6703880,6705320," I think."
6705320,6707240," I think that's the easiest thing to do in here."
6707240,6708200," Because roughly."
6708200,6709160," Yeah."
6709160,6711000," So, all of that is basically in floats."
6711000,6714680," So, this hue is going to be H32."
6714680,6719160," And the S is going to be F32."
6719160,6720600," And L is going to be F32."
6720600,6722520," And this entire thing will give us RGB."
6722520,6726840," But it will give us RGB in normalized order."
6726840,6729400," So, it's going to be F32, F32, F32."
6729400,6733320," So, because I'm basically, you know, converting this entire thing."
6733320,6734520," So, okay."
6734520,6737160," So, let's try to convert first this stuff."
6737160,6737400," Right."
6737400,6738840," How can we convert this stuff?"
6738840,6741080," This stuff is going to be very interesting."
6741080,6741880," Right."
6741880,6744920," C."
6744920,6747240," CX."
6747240,6748040," Right."
6748040,6750920," So, CX is effectively H."
6750920,6751800," Right."
6751800,6758440," And then we have these three components."
6758440,6758680," Right."
6758680,6760520," So, these are the three components."
6760520,6763480," So, what I'm thinking is that maybe we can have something like R."
6763480,6766280," Which is initially going to be 0."
6766280,6767240," 0, 0."
6767240,6769240," So, we're porting this kind of part."
6769240,6771000," R is 0."
6771000,6773240," G is 4."
6773240,6775640," And B is 2."
6775640,6776840," There we go."
6777720,6779560," So, we have that."
6779560,6785240," And after that, we need to add to each individual component in here H."
6785240,6790120," H multiplied by 6."
6790120,6790440," Right."
6790440,6792520," So, that's basically what we're doing in here."
6792520,6792680," Right."
6792680,6794920," So, that's basically what this entire thing means."
6794920,6798280," And then we need to do something like F mod."
6798280,6799800," The question is, do we have a mod?"
6799800,6804120," STD lib or RAS STD lib?"
6804120,6804440," Something like this."
6804440,6808280," Mod."
6808280,6814760," Does F32 have a method for mod or something?"
6819800,6826520," Do you have mod or don't you have mod?"
6826520,6827560," No, it doesn't have mod."
6827560,6829240," But Zoe is in Knightly."
6829240,6830360," Oh, Knightly."
6833160,6835400," So, okay."
6835400,6839160," Really?"
6863160,6875960," Maybe you can use a mod operator for F32."
6875960,6881000," Maybe you can use a mod operator for F32."
6889000,6891160," It's really hard for me to take this language seriously."
6891160,6896440," Okay."
6896440,6909800," So, if I do something like..."
6909800,6915320," So, it's probably not going to work, right?"
6920840,6925640," I don't care."
6925640,6927960," Could you please just compile?"
6927960,6928360," Thank you."
6928360,6930120," Okay."
6930120,6935080," So, mod at least didn't crash or anything."
6935080,6936120," Right."
6936120,6938680," But it's not a correct mod either."
6938680,6939160," Right."
6939160,6940920," In a mathematical sense."
6940920,6942120," Right."
6942120,6943560," So, okay."
6943560,6944760," So, you can use mod."
6944760,6947560," But what if I have a fractional parts in here?"
6947560,6948840," Will you work with fractional?"
6948840,6949160," Okay."
6949160,6950600," So, it works with fractional."
6950600,6951720," Which is already cool."
6951720,6952200," Okay."
6952200,6953240," I can appreciate that."
6953240,6956920," So, there's probably a trait for the mod."
6956920,6960440," I remember there was a rem, a rem trait."
6960440,6960680," Right."
6960680,6961880," So, there was a rem trait."
6961880,6965560," And F32 basically implements that thing."
6965560,6965800," Okay."
6965800,6971720," So, there's also like a Euclidean or something."
6971720,6972920," Euclidean."
6972920,6974840," But I remember seeing it."
6974840,6979880," Come on."
6979880,6980360," So, yeah."
6980360,6982120," You can use a rem Euclidean."
6982120,6985880," Because, of course, it has to be, you know, smart-ass like that."
6985880,6988120," Okay."
6988120,6991400," So, that means I can do something like this."
6991400,6992360," Right."
6994360,6995960," And then minus like this."
6995960,6999320," What do we have?"
6999320,7002600," It's not available because I have to import something."
7002600,7002840," No?"
7009480,7010360," Another one for me."
7010360,7013720," Euclidean."
7013720,7016440," Is it called something differently?"
7016440,7018600," We have to..."
7018600,7019960," 138."
7019960,7020920," Wait."
7020920,7023240," 138."
7023240,7025320," Do I have an old compiler?"
7027800,7029560," So, if I take a look at the advanced."
7029560,7033640," Well, you know."
7033640,7034760," It's definitely not."
7034760,7037800," I'm not up to date with the latest Comparance potions."
7037800,7038280," I'm sorry."
7038280,7041480," So, maybe a rem is..."
7041480,7041960," I don't know."
7041960,7044440," My brain is actually shutting down."
7044440,7046280," So, I probably need to make a small break."
7046280,7051240," I'm just like super tired."
7057800,7058520," I don't know."
7058520,7067000," Should be just available on F32."
7067000,7068600," Did I make a typo?"
7068600,7070760," No, I didn't make a typo."
7070760,7075560," I didn't make a typo."
7075560,7079880," Is that because it's not a flow or something?"
7087800,7089000," I don't know."
7117800,7122920," It's freaking Haskell all over the place."
7122920,7123560," All over again."
7123560,7123800," I mean."
7123800,7127160," It's like literally Haskell all over again."
7127160,7129720," Because it even has the same problem as Haskell."
7129720,7130760," Right."
7130760,7137080," Okay."
7137080,7139080," So."
7139080,7142840," We have that."
7142840,7145080," So, I forgot what I needed it for."
7145080,7146200," What I needed."
7146200,7147640," I was porting HSL."
7147640,7147880," Right."
7147880,7149000," So, I was porting HSL."
7149000,7149240," Cool."
7149240,7150280," Uh."
7150280,7152120," HSL to RGB."
7152120,7152360," Okay."
7152360,7153400," Let's go back here."
7153400,7154600," So, that's what I was doing."
7154600,7158520," Okay."
7158520,7159880," So, here's the mod."
7159880,7161160," And what I need to do in here."
7161160,7162680," Right."
7162680,7163640," Is."
7163640,7168680," Rem Euclid."
7168680,7170040," Right."
7170040,7170840," So, this is the mod."
7170840,7172280," Rem Euclid 6."
7172280,7173480," Okay."
7173480,7175000," So, we managed to port."
7175640,7175960," Uh."
7175960,7177880," This part."
7177880,7178680," This whole part."
7178680,7179400," Right."
7179400,7180120," So, here's the."
7180120,7182600," This whole part is ported."
7182600,7183320," So, now."
7183320,7183640," Uh."
7183640,7184120," We need to."
7184120,7184680," Uh."
7184680,7185640," Subtract 3."
7185640,7187240," So, here is the 3."
7187240,7189080," It's been successfully subtracted."
7189080,7190280," Uh."
7190280,7190840," ABS."
7190840,7192680," So, ABS."
7192680,7194840," Is it available as the method of."
7194840,7195080," Yeah."
7195080,7195320," Either."
7195320,7196360," It is available."
7196360,7196600," Okay."
7197560,7198600," So, uh."
7198600,7199560," Uh."
7199560,7200040," All right."
7200040,7201560," So, this is going to be something like this."
7201560,7202920," Uh."
7202920,7203800," And then."
7203800,7205080," We can just do something like."
7205080,7206120," Uh."
7206120,7206920," ABS."
7206920,7207880," All right."
7207880,7209720," So, here's the ABS."
7209720,7210440," Uh."
7210440,7212120," And then we have to subtract 1."
7212120,7213320," Uh."
7213320,7214200," Boom."
7214200,7215800," Uh."
7215800,7216600," We subtract in 1."
7216600,7221160," And then we need to clamp all of these things between 0 and 1."
7221160,7222040," Do we have clamp?"
7223720,7224040," Uh."
7224040,7224760," We do have clamp."
7224760,7225000," Okay."
7225000,7225480," That's cool."
7225480,7227880," So."
7227880,7236680," Clamp between 0 and 1."
7236680,7236920," Cool."
7236920,7240760," So, we ported this entire line."
7240760,7242280," Nice."
7242280,7244760," So, now what we have to return."
7244760,7246920," We have to return these things."
7246920,7249880," So, we need to do additional transformations on these things."
7249880,7251000," Uh."
7251000,7252280," To be able to do all of that."
7252280,7254200," So, here we return vector 3."
7254200,7256760," So, C, Z."
7256760,7260520," So, if I understand correctly."
7260520,7263160," Uh."
7263160,7266920," It's a H."
7266920,7268600," And Z."
7268600,7271000," Is L."
7271000,7272120," Right."
7272120,7273640," So, this is a luminosity."
7273640,7276920," And C, Y is saturation."
7276920,7278440," Okay."
7278440,7279560," That's pretty cool."
7282200,7284120," So, after all of that."
7284120,7284600," All right."
7284600,7285720," After all of that."
7285720,7290040," We have to subtract half from all of these things."
7290040,7290280," Right."
7290280,7291000," So, it has to be."
7291000,7293320," Half."
7293320,7294840," But for all of them."
7294840,7296360," All right."
7296360,7297160," So, it's going to be G."
7297160,7299880," And this is going to be B."
7299880,7302280," So, we subtract in half."
7302280,7304040," That's cool."
7305640,7309640," And then we're multiplying all of that by saturation."
7309640,7310520," Right."
7310520,7312920," Oh no."
7312920,7313800," Oh, our nation."
7313800,7317880," And then we need to multiply it by this value."
7317880,7318440," Right."
7318440,7322680," So, L and this value are scalars."
7322680,7325480," So, I don't have to really worry about that too much."
7327080,7328200," So, we'll see."
7328200,7329080," We'll see."
7329080,7330360," So, that means here."
7330360,7331320," Might as well actually."
7331320,7332920," Yeah."
7332920,7333800," I want to try this."
7333800,7338040," Emacs."
7338040,7339800," Freaking emacs."
7339800,7340360," Okay."
7340360,7341320," Multiply that."
7341320,7343000," Then we're going to be doing."
7343000,7344920," Like that."
7344920,7349320," And we need to multiply this stuff by this value."
7349320,7351800," So, I don't know how I'm going to call this value."
7351800,7355080," It's going to be something like T or whatever."
7355080,7355560," I don't care."
7355560,7358920," So, here's that."
7358920,7360040," And what I need to do in here."
7360040,7361560," I just need to call abs."
7361560,7363160," Like this."
7363160,7364120," And then multiply this."
7364120,7367400," Why did you jump in there?"
7367400,7367640," Okay."
7367640,7369080," All right."
7369080,7369480," Cool."
7369480,7370040," Finally."
7370040,7370520," Holy shit."
7370520,7371720," Can I just return it now?"
7371720,7372200," RGB."
7372200,7374520," There we go."
7374520,7376280," Did I port it?"
7376280,7377160," Hopefully I port it."
7379320,7380760," So, HSL to RGB."
7380760,7382920," And all of that is normalized."
7382920,7384840," It's quite important to remember."
7384840,7386440," So, we're doing floating point shifting."
7386440,7389640," So, well."
7389640,7390120," Yeah."
7390120,7391640," That's such a necessary thing."
7391640,7393240," You have to put it at the top in here."
7393240,7393640," Of course."
7393640,7398200," Such an important fucking thing."
7398200,7400200," So, what do you want from me?"
7400200,7401320," Main function not found."
7401320,7401720," Okay."
7401720,7403560," So, we're going to put it like this."
7403560,7405800," What else do you want from me?"
7405800,7409000," Show me errors."
7409000,7410920," I don't give a shit about these stupid warnings."
7410920,7412120," Okay."
7412120,7413560," So, this thing has to be mutable."
7413560,7417400," Okay."
7417400,7418680," So, finally."
7418680,7420760," So, do we have any other errors?"
7420760,7421880," Okay."
7421880,7422920," So, it's rendering shit."
7422920,7423720," So, we need that."
7423720,7425720," Okay."
7425720,7426600," So, we have UV."
7426600,7427640," Right."
7427640,7429000," So, and let's do it like this."
7429000,7434360," UV is going to affect the hue."
7434360,7434680," Right."
7434680,7436680," So, that's basically what we're using in here."
7436680,7437560," So, this is the hue."
7438120,7445560," The saturation is going to be like 80% and the value, I think we can steal that from here."
7445560,7446840," Yeah."
7446840,7451720," Saturation has to be probably full and the value is around like this."
7451720,7455320," And that gives us RGB, but in floating point."
7455320,7455560," Right."
7455560,7459960," So, it's going to be RF, GF and BF."
7459960,7460840," Right."
7460840,7462360," RF, GF and BF."
7462360,7463240," There we go."
7463240,7470360," And we'll need to convert that to the pixels and whatnot."
7470360,7470600," Right."
7470600,7472120," So, we'll need to have something like R."
7472120,7476760," RF multiplied by, I'm going to tell there's something like this."
7476760,7479240," RF multiplied by 255."
7479240,7481400," Right."
7481400,7489240," and convert it to as U and shift it by this amount of things."
7489240,7489640," Right."
7489640,7495080," And we need to do that for G, which is located somewhere here."
7495080,7498200," And B, which is located at the zero's byte."
7498200,7498440," Right."
7498440,7501080," And we want to combine all of these things with OR."
7501880,7504600," And then we're going to place this thing into the canvas."
7504600,7504840," Right."
7504840,7507160," So, we're placing this entire thing into the canvas."
7507160,7510520," Can you just give me this kind of stuff?"
7510520,7511960," Will that compile?"
7511960,7512360," Let's see."
7512360,7514280," Of course, it won't."
7514280,7516760," Because, fuck me."
7516760,7518360," Okay."
7518360,7520440," So, maybe this has to be actually such a term."
7520440,7520840," Sure."
7520840,7521880," Why not?"
7521880,7524120," Interpret it."
7524120,7526040," It wants more parentheses."
7526040,7530360," So, I always thought that Rust wants to be Haskell."
7530360,7531800," In reality, it wants to be this."
7531800,7533720," Okay."
7533720,7534680," So, we're rendering shit."
7534680,7542200," Okay."
7542200,7544040," So, let's open the video."
7544040,7544760," Right."
7544760,7546520," So, here's the video."
7546520,7547640," And what do we have here?"
7547640,7551560," And it didn't work because we never called this function."
7551560,7552520," Right."
7552520,7553400," Because we never called it."
7553400,7557000," So, we have a feel erect."
7557000,7559080," And now, let's feel gay erect."
7559800,7560200," There we go."
7560200,7562360," So, oh, fuck."
7562360,7563640," It's a wrong thing."
7563640,7565960," Okay."
7565960,7567240," Let's regenerate this entire thing."
7567240,7571880," It doesn't work because you don't need to have..."
7571880,7572520," Oh, yeah."
7572520,7572920," Okay."
7572920,7573720," So, I see."
7573720,7575400," It has to be something like this."
7575400,7577320," And then, we fill it with the background."
7577320,7577720," Okay."
7577720,7579640," But you don't need a foreground, though."
7579640,7580040," Right."
7580040,7580680," To do that."
7580680,7583160," You don't need a foreground."
7584520,7585240," So, yeah."
7585240,7586440," Let's see how it's going to be doing that."
7586440,7591960," All right."
7591960,7594600," And, well, that's very interesting."
7594600,7597800," So, it's kind of rainbowish."
7598360,7600360," But not really."
7600360,7609880," So, I think we need to now shift, like offset the entire thing somehow."
7609880,7622440," Well, right now, to make it more tight, to make it more tight, we can actually multiply the, you know, U plus V with some sort of a scaler, if you know what I'm talking about."
7622920,7623240," Right."
7623240,7624200," Some sort of a scaler."
7624200,7628360," And, why do you redirect me to a wrong buffer?"
7628360,7629320," Emacs!"
7629320,7629880," Emacs!"
7629880,7631800," What the fuck is wrong with you, Emacs?"
7631800,7632040," Okay."
7632040,7634920," Let me actually also include VLC on this."
7634920,7635960," Okay."
7635960,7647800," Hmm."
7647800,7649000," Look at that."
7649000,7651160," It was kind of animating already."
7652200,7654600," It was, in fact, kind of animating."
7654600,7657560," So, if we actually make it, like, 10 times faster."
7657560,7658840," Right."
7658840,7659880," So, look at that."
7659880,7662840," Look at that."
7662840,7666920," I'm gonna be making it 10 times faster."
7666920,7670040," It's already animating."
7670040,7671640," I wonder why is it animating."
7671640,7674120," I think I know why."
7676760,7682440," Because I'm using the X and Y on the surface itself."
7682440,7683480," Oh, yeah."
7683480,7686440," So, because it's changing the position and that's why it is animating."
7686440,7687560," Right."
7687560,7688360," That's actually pretty cool."
7688360,7689080," Look at that shit."
7689080,7691320," Does anyone give a shit?"
7691320,7692520," I think nobody gives a shit."
7692520,7692760," Okay."
7693560,7694520," Uh, all right."
7694520,7696120," So, yeah."
7696120,7699320," So, we have a rainbowish triangle."
7699320,7702840," I suppose I'm gonna go make a break because, yeah, nobody gives a shit."
7703960,7704280," All right."
7704280,7707000," All right."
7707000,7708200," We're back."
7708200,7709160," Too back."
7709160,7715160," So, let me, let me see."
7715160,7717720," So, we managed to generate this video."
7717720,7717960," Right."
7717960,7720680," Managed to generate this video."
7720680,7722680," And we have this rainbowish triangle."
7722680,7725160," Maybe we could make this rainbowish triangle a little bit bigger."
7725160,7729240," But maybe it will affect the, uh, generation times."
7729240,7731480," Uh, let's actually multiply this thing by two."
7731480,7731800," Right."
7731800,7732840," To make it a little bit bigger."
7732840,7734600," Right."
7734600,7737160," So, we don't even need foreground core anymore."
7737160,7739640," But maybe we'll need it in the future at some point."
7739640,7741480," It does slow down things quite a bit."
7741480,7745320," This is look nice."
7745320,7751080," So, let's take a look at the size of the, uh, of the file."
7751080,7751400," Right."
7751400,7753080," So, it's 83 megabytes."
7753080,7757720," What if I try to convert this file to now, uh, something more reasonable?"
7757720,7757960," Right."
7757960,7760760," So, it's actually converted to output mp4."
7760760,7762280," Uh, all right."
7762280,7763320," So, that didn't really..."
7763320,7765320," Oh, it doesn't need all in here."
7765320,7767320," Uh, okay."
7767320,7769000," So, and yeah."
7769000,7772200," It compressed 83 megabytes to 15 kilobytes."
7772200,7773560," Right."
7773560,7776920," So, uh, and now if I take a look at this, I think in VLC."
7776920,7778920," Uh, yep, yep."
7780120,7781480," It does look reasonable."
7781480,7782680," It does look reasonable."
7782680,7784440," We can try to increase FPS."
7784440,7784760," All right."
7784760,7786200," So, right now we have 30 FPS."
7786200,7787320," What about 60 FPS?"
7787320,7792760," Um, what about 60 FPS?"
7792760,7794440," It will take some, like, a longer time."
7794440,7795720," Twice as long to generate."
7795720,7798280," But, uh, maybe it's going to be smoother."
7798280,7800200," Uh, also it's going to be faster."
7800200,7802920," Because right now we have a, uh, FPS, um,"
7804520,7805160," locked physics."
7805160,7806040," How is that called?"
7806040,7807320," FPS dependent physics."
7807320,7807560," Right."
7807560,7809960," So, the physics depends on the FPS."
7809960,7810200," Right."
7810200,7810760," So, yeah."
7810760,7811800," It moves way faster."
7811800,7812840," But it's actually smoother."
7812840,7813800," It's actually smoother."
7813800,7815160," Uh, right."
7815160,7817480," So, if I try to convert this entire thing."
7817480,7818200," Um, yeah."
7818200,7819160," Override, of course."
7819160,7822360," Uh, it does not know."
7822360,7824680," So, let's actually put some sort of a Y flag."
7824680,7828200," Oh, where is my compilation thingy?"
7829480,7829960," All right."
7829960,7830600," So, yeah."
7830600,7831800," It says 16 kilobytes."
7831800,7834360," And, uh, yep, yep, yep."
7834360,7837720," And, uh, what I'm going to do right now."
7837720,7840920," I'm going to go to my, uh, Discord server."
7840920,7844360," And, uh, I'm going to upload this video in here for everyone."
7844360,7845080," I don't know why."
7845080,7847560," Uh, they kind of want to upload that."
7847560,7849320," So, Metaballs."
7849320,7852360," Uh, 2mpeg for you."
7852360,7856280," And, so, I'm going to just upload this thing."
7856280,7857560," I wonder how it's going to look like."
7860200,7860840," Looks all right."
7860840,7863320," So, yeah."
7863320,7868040," Even, so, now we can generate videos that can be displayed in Discord."
7868040,7872120," But then, granted, we'll have to use FFmpeg to convert everything."
7872120,7873320," But, yeah."
7873320,7874440," So, that's pretty cool."
7874440,7877480," Uh, but that's not really what I wanted to do in here."
7877480,7877720," Right."
7877720,7880040," I wanted to actually animate this entire thing."
7880040,7883240," I wanted to make it, like, bounce off of the edges and stuff like that."
7883240,7888280," Uh, but to do all of that, I need, like, FPS independent physics."
7888280,7888600," Right."
7888600,7889400," So, that's what I need."
7889400,7890680," FPS independent physics."
7890680,7893320," So, let's actually do something like that at the time."
7893320,7894200," Right."
7894200,7895320," It's going to be F32."
7895320,7899560," And, I'm going to take this thing and divide by FPS as F32."
7899560,7900040," There we go."
7900040,7901800," So, that's what we have in here."
7901800,7907560," And, now, we should be able to do a little bit of a physics."
7907560,7907720," Right."
7907720,7909560," So, rect."
7909560,7912680," Let's say that rect is going to be F32 as well."
7912680,7915400," Because, we're going to be doing all the physics in floating point."
7915400,7922440," We need to maybe decide what's going to be the velocity of the rectangle."
7922440,7922760," Right."
7922760,7927800," So, let's go and say that the rect velocity, right."
7927800,7931640," So, rect velocity is going to be 100 pixels per second."
7931640,7932040," Right."
7932040,7934600," So, and as you can see, this value can be fractional."
7934600,7934840," Right."
7934840,7937240," So, this value can be fractional."
7937240,7944040," Also, we need to have something like rect direction dx."
7944040,7945400," Right."
7945400,7947800," So, it's going to be 1 now and dy."
7947800,7949240," Right."
7949240,7954760," And, this is something that we can use to modify the direction in which the entire thing is moving."
7954760,7955000," Right."
7955000,7957000," So, that's what we can do in here."
7957000,7958760," So, here, we have rect x."
7958760,7966360," And, I'm going to add rect dx and dy multiplied by rect velocity."
7966360,7967640," Actually, I need to multiply it like this."
7967640,7969320," Rect velocity."
7969320,7972760," And, also, multiplied by delta time."
7972760,7973000," Right."
7973000,7974520," So, because it's related to delta time."
7974520,7976440," And, delta time is locked to FPS."
7976440,7977880," So, that's basically what we're doing here."
7977880,7980200," Right."
7980200,7982280," So, and let's see how it's going to look like."
7982280,7984360," This is not what I wanted to do."
7984360,7985160," Excuse me."
7985160,7986840," I wanted to just do that."
7986840,7988520," And, it doesn't compile."
7988520,7989240," Okay."
7989240,7992600," So, this is because we have to, yeah."
7992600,7996360," We have to convert floats to i32."
7996360,7997400," Right."
7997400,7999400," As i32."
7999400,8000680," As i32."
8002520,8003960," As i32."
8003960,8004440," As i32."
8004440,8004920," As i32."
8004920,8005320," As i32."
8005320,8005880," Okay."
8005880,8007320," So, is it going to work?"
8007320,8008520," Is it going to work now?"
8008520,8008840," Yo!"
8008840,8013560," Yeah."
8013560,8015240," Maybe I need to reduce FPS."
8015240,8017720," Because at 60 FPS, it just takes too much time, man."
8018440,8018680," Uh."
8018680,8023320," All right."
8023320,8024280," So, yeah."
8024280,8027240," That looks pretty POG, isn't it?"
8027240,8028200," Let's reduce FPS."
8028200,8030840," So, let's go to FPS."
8030840,8036120," So, and regardless of FPS, it should actually move with the same velocity."
8036120,8036360," Right."
8036360,8038760," Because the physics is FPS independent now."
8038760,8042360," The physics is FPS independent."
8042360,8044120," A boom."
8044120,8044920," And, yeah."
8044920,8047960," Let's actually take a look at how it looks like in mPlayer."
8047960,8048760," I wonder."
8048760,8049000," Right."
8049000,8053720," So, mPlayer, we know that it has a bug where it incorrectly displays the things."
8053720,8055720," So, yeah."
8055720,8056200," I just want to see."
8056200,8058360," But I like how quickly mPlayer's..."
8058360,8058600," No."
8058600,8059080," It's actually..."
8059080,8061160," It's actually fine."
8061160,8063400," Which is rather strange."
8063400,8063640," Right."
8063640,8065640," I'll put white for m."
8065640,8066520," Yeah."
8066520,8067960," Maybe I'm going to use mPlayer."
8067960,8069880," Because it's just like a little bit nicer."
8069880,8072600," It starts up a little bit faster."
8072600,8074280," So, I'm going to use that."
8074280,8075560," Anyway."
8075560,8078840," So, we can modify the velocity."
8078840,8080200," Rect velocity."
8080200,8082360," And let's actually make it twice as faster."
8082360,8087640," So, it has enough time to actually reach the edge of the screen."
8087640,8087880," Right."
8087880,8097240," So, maybe it also would make sense to enable like crank up optimization level of the compiler."
8097240,8099480," So, maybe that will make the compilation a bit faster."
8099480,8102200," Copt level."
8102200,8102920," Is that what it is?"
8102920,8104200," Copt level 3."
8104200,8105480," Can I do the shit like that?"
8105480,8107080," Okay."
8107080,8108120," That's actually nice."
8108120,8108520," Okay."
8108520,8110840," So, I actually speed up the entire thing."
8110840,8111720," Yeah."
8111720,8116280," Let's actually do all of that with a, you know, with a higher optimization level."
8116280,8116520," Right."
8116520,8119800," So, maybe now 60 FPS is more feasible."
8119800,8120120," Right."
8120120,8121880," So, 60 FPS should be more feasible now."
8121880,8124280," Yeah."
8124280,8124520," Nice."
8124520,8125960," So, we're going to do that at 60 FPS."
8130760,8133320," So, in 60 FPS."
8133320,8135000," Okay."
8135000,8138600," So, and maybe because of that we can actually increase the duration."
8138600,8141160," Let's say that we're going to have three seconds."
8141160,8144200," So, what's going to be the most like reasonable thing to have?"
8144200,8146760," Three seconds probably too much already."
8146760,8151960," But I want to give it enough time to actually bounce off of these things."
8154600,8154920," Yeah."
8154920,8155160," Yeah."
8155160,8155240," Yeah."
8155240,8155560," Okay."
8155560,8160440," So, now let's check for bouncing off of the edges."
8160440,8161080," Right."
8161080,8166360," If rect is greater or equal."
8166360,8166680," Right."
8166680,8171320," If it's greater or equal to the width."
8171320,8172760," Right."
8172760,8173320," To the width."
8174360,8178440," I'm going to be taking a rect dx and multiply it by minus one."
8178440,8178680," Right."
8178680,8184920," So, the same will happen for y essentially."
8184920,8185160," Right."
8185160,8186760," The same will happen for y."
8186760,8189160," So, let's see how it's going to go."
8190040,8192680," Well, it didn't like that because it was an integer."
8192680,8193320," Of course."
8193320,8195560," It was an integer."
8195560,8201400," Okay."
8201400,8207240," And it didn't work."
8207240,8207480," Nice."
8207480,8210280," So, because I'm supposed to be using height."
8210280,8211080," Right."
8211080,8217160," And I think we have to actually add the rect width."
8217720,8220360," And rect height."
8220360,8221320," Right."
8221320,8223000," To the mix."
8223000,8227320," And all of these things have to be used like F32 as well."
8227320,8230200," As F32."
8230200,8231080," Okay."
8231080,8236040," So, maybe."
8236040,8237960," I think I need to increase the speed of this thing."
8237960,8242280," Yeah."
8242280,8243160," It should be faster."
8243160,8244760," And it actually bounces off."
8244760,8245240," All right."
8245240,8247400," So, let's go to the velocity."
8247400,8249800," And let's make the velocity like 500."
8249800,8253800," So, it will just go a bit faster, hopefully."
8253800,8258760," It also takes a bit of time for mplayer to parse everything."
8258760,8260440," Okay."
8260440,8261160," So, that's cool."
8261160,8263880," So, it bounced off of the two edges already."
8263880,8265480," Which is cool."
8265480,8267240," Right."
8267240,8273480," And now we need to fix this situation when rect becomes negative."
8273480,8273800," Right."
8273800,8280600," So, when it's that or rect x less or equal than zero."
8280600,8281480," Right."
8281480,8286040," Or rect y less or equal than zero."
8288760,8289080," Okay."
8289080,8290440," It has to be this thing."
8290440,8305960," Almost hit the corner."
8305960,8306760," Almost hit the corner."
8306760,8307800," Okay."
8307800,8308920," So, we're getting somewhere."
8308920,8311320," So, what if I speed it up even more?"
8312920,8314200," So, how is it gonna go?"
8314200,8323880," The triangle goes."
8323880,8326360," The triangle goes."
8326360,8328440," All right."
8328440,8332200," So, mplayer output y for m."
8332200,8334200," And yesu, yesu, yesu."
8334200,8335560," Kawaii freaking desu."
8335560,8338520," So, and the duration in this case is basically three seconds."
8338520,8341480," So, in three seconds it's capable of just doing this kind of stuff."
8341480,8341960," Which is cool."
8341960,8343960," All right."
8343960,8345560," So, foreground."
8345560,8346680," We don't use foreground."
8346680,8348440," But I'm not sure if we will need it at some point."
8348440,8350120," I think we will need it at some point."
8350120,8351400," So, I'm just gonna keep it like this."
8351400,8354600," Okay."
8354600,8361720," So, what if I now try to convert the entire thing via ffmpeg?"
8361720,8362920," All right."
8362920,8365240," So, yesu, yesu, yesu."
8365240,8366200," So, it takes some time."
8367400,8368600," So, 40 kilobytes."
8368600,8371480," And then if I play this with mplayer."
8371480,8372200," Yeah, there we go."
8372200,8374360," Cool."
8374360,8377880," Now, let's see how it looks like in Discord."
8377880,8378360," All right."
8378360,8379880," And we're gonna be testing it with the Discord."
8379880,8384120," Should be fine, I suppose."
8384120,8396280," And the cool thing is that this video is generated from scratch in the Rust program"
8396280,8399800," that doesn't use any cargo and any third-party dependencies."
8399800,8401240," Think about it."
8401240,8404280," You may think about ffmpeg as a third-party dependency."
8404280,8408440," But it's not a third-party dependency of a Rust program."
8408440,8415560," Right, you can still keep your Rust program dependency less, right, without using cargo or anything like that."
8415560,8419320," And basically, this approach makes it feasible for any language."
8419320,8423800," I could rewrite this into, I think, in any language and it will be pretty much the same."
8423800,8424840," So, yeah."
8424840,8427880," That's basically what it's actually."
8427880,8430920," Think about smaller than GIF."
8430920,8432360," I mean, that's a video format."
8432360,8435960," So, that's pretty cool."
8435960,8439000," That is, in fact, pretty cool."
8439000,8440040," And 60 fps."
8440040,8442200," This is really, really neat."
8442200,8443800," Okay."
8443800,8446280," So, let's take a look at to-do."
8446280,8446520," All right."
8446520,8447480," So, we have a to-do list."
8447480,8450280," And you made something like a square bounces of the walls of the screen."
8450280,8451880," We kind of did that."
8451880,8454120," But I want to make something more interesting."
8456120,8466120," What if we render the rectangle as a regular rectangle with a foreground and whatnot?"
8466120,8467160," Right, with a foreground."
8467160,8470600," So, let me try to do that."
8470600,8476600," And make it rainbowish only when it hits the walls."
8476600,8479320," So, what is it?"
8479320,8480200," What it doesn't like?"
8480200,8480680," I'm not sure."
8483320,8487240," What do you want from me?"
8487240,8488840," Three arguments."
8488840,8489080," What?"
8489080,8490280," Caller."
8490280,8491000," I provided the caller."
8491000,8491480," Foreground."
8491480,8492120," There we go."
8492120,8492760," Here's your caller."
8492760,8494520," Oh, my God."
8494520,8496440," I just, like, forgot to save something or whatever."
8496440,8499000," Okay."
8499000,8499960," Whatever."
8499960,8501560," All right."
8501560,8503080," So, here's that."
8503080,8507640," So, we have this kind of thing, you know, flying around and whatnot."
8508680,8513560," Maybe we can even make it so it's like 28, 28, 28, 28."
8513560,8513800," Right."
8513800,8517240," It's going to be sort of like a boring rectangle flying around."
8517240,8517960," Right."
8517960,8519400," So, that's going to be the idea."
8519400,8521160," A boring rectangle flying around."
8521160,8525720," Maybe it could be even brighter than this."
8525720,8525960," Right."
8525960,8528120," So, let's say that it's going to be even brighter."
8528120,8528360," Right."
8528360,8529560," So, let's say 38."
8529560,8530520," Maybe 48."
8530520,8531880," Okay."
8531880,8535400," So, and every time it hits the wall."
8535400,8536200," Right."
8536200,8542680," Every time it detects the hit the wall, it will become rainbowish for some amount of seconds."
8542680,8542920," Right."
8542920,8544040," Or something like that."
8544040,8546520," And then go back to greenish or whatever."
8546520,8548600," Grayish."
8548600,8551000," Grayish."
8551000,8553720," So, and let's put maybe six."
8553720,8555800," I want it to be a little bit more bright now."
8555800,8564680," So, the question is, how are we going to be implementing that?"
8565880,8567480," So, how are we going to be implementing that?"
8567480,8578200," So, we can introduce some sort of a value."
8578200,8579160," Right."
8579160,8580120," Some sort of a value."
8580120,8580360," A."
8580360,8585320," Which holds the seconds."
8585320,8586440," Right."
8586440,8587720," Which holds the seconds."
8587720,8589960," And here is an interesting thing."
8590840,8593880," If a is greater than zero."
8593880,8599160," We are rendering this thing in a rainbowish manner."
8599160,8600760," Without the foreground."
8600760,8602600," Like this."
8602600,8605720," Otherwise, we are rendering it as a gray one."
8605720,8606920," Right."
8606920,8609320," And each frame."
8609320,8610280," Each frame."
8610280,8611720," We are subtracting."
8611720,8614600," Subtracting the delta time."
8615240,8616760," From a."
8616760,8619880," And every time you hit something."
8619880,8622760," We set a to a particular value."
8622760,8625320," So, for the duration of the rainbow."
8625320,8625640," Right."
8625640,8626200," A rainbow."
8626200,8628200," Duration."
8628200,8629640," So, this is going to be a rainbow duration."
8629640,8630600," A rainbow duration."
8630600,8631480," Right."
8631480,8633560," So, and this could be a constant."
8633560,8634040," Right."
8634040,8636040," That we can put somewhere here."
8637640,8640520," So, let's call it a video duration."
8640520,8642280," And this one is going to be a rainbow duration."
8642280,8643240," That's the term."
8643240,8645640," So, since the video duration is three seconds."
8645640,8647320," The rainbow duration has to be maybe."
8647320,8648120," Like."
8648120,8650760," You know, milliseconds."
8650760,8653240," Maybe it's going to be like 100 milliseconds or so."
8653240,8653480," Right."
8653480,8658840," So, compilation."
8658840,8660760," Video duration."
8660760,8661800," All right."
8661800,8663160," So, let's see if it's going to work."
8665960,8675960," That's not bad."
8675960,8680520," So, that means it could be a little bit, you know, longer."
8680520,8682120," Like twice as long, for instance."
8682120,8686520," Twice as long, for instance."
8694920,8708360," from grayish to game nice one uh so yeah there we go it's interesting that it generated everything"
8708360,8714280," all right but then it waits is that because employer tries to parse it or something could be"
8714920,8728520," could be that i just got a pretty cool idea"
8734680,8745000," what if to be fair it doesn't really look that spectacular i don't like that uh it looks way"
8745000,8750120," better if it's always rainbowish so i think i'm gonna leave it as it is so it's always gonna be"
8750120,8757960," rainbowish um i was hoping that it's gonna be it's gonna look interesting but nah uh let's just make it"
8757960,8774920," all this like that so i have the idea what uh if every time it hits the wall it actually splits in two"
8774920,8783400," in two smaller rectangles if you know what i'm talking about right so and they basically move"
8783400,8791720," in different directions right how about that is that is that a cool idea uh yeah we can try to"
8791720,8801320," split them so uh so but for that we'll need to introduce like a rectangle entity right rectangle"
8801320,8808040," entity that will hold the position of the rectangle the current direction of the rectangle the current"
8808040,8814760," size of the rectangle and so on and so forth right so let's actually go ahead and introduce that so"
8814760,8823480," it's going to be structure rect right it has a position x uh which is f32 uh and then y which is f32"
8823480,8828440," the width and height i wonder what's going to be the width and height uh is it going to be like in"
8828440,8831880," integer pixels or not in integer pixels that's a good question"
8836280,8841720," so i think yeah i think it's going to be in integer pixels uh for now at least later we can do something"
8841720,8847240," about that so we also need to have a direction the velocity of those things is going to be uh you know"
8847240,8851960," the constant but maybe we can change the velocity of those things at some point who knows um"
8854680,8861000," so that's the things that we want to have right so that's the things we want to have um"
8861000,8879400," so what's funny is that uh-huh so i have an idea all right let's replace this thing with that single"
8879400,8886120," rect right we can have a mutable rect uh which is effectively this so the initial position is going"
8886120,8895320," to be zero uh and zero right and the initial velocity um i can put it like this it's going to be dx"
8895320,8900440," one uh one"
8902760,8910920," do we need anything else uh probably i think width has to be uh erect erect width and height is going"
8910920,8916920," to be erect uh height there we go so that's the thing we need uh and i'm going to be just removing"
8916920,8924760," this entire stuff right so uh and after that we once we integrate this entire thing into the rendering"
8924760,8930200," process we'll be able to have array of such rectangles you know what i'm talking about like like an array of"
8930200,8939880," them um now so uh i think i have to use like a colon oh shit yeah"
8939880,8949320," so okay so in here if i want to render something i have to have this sort of like a boundary box thingy"
8949960,8955880," uh which i probably want to extract from the rect itself so i have an idea if i implement in uh rect"
8955880,8963320," i want to implement a method called heat box and the heat box effectively will return me i32 i32 u32"
8963320,8969800," u32 which is compatible with fill rect rgba right so you'll be able to put this thing in here so this is"
8969800,8974840," the heat box uh so and the way we're going to generate the heat box of course this entire thing should"
8974840,8984760," take uh self self self x as i32 self y as i32 self w self h there we go so that's basically what we want to"
8984760,8991640," have in here and in here i'm going to just grab this entire thing and say rect uh did i do it correctly"
8991640,9000680," yeah rect heat box there we go so we compressed the code a little bit rect heat box and now it became a little"
9000680,9005560," bit more readable right so we're starting to compress things around we're starting to compress thing"
9005560,9014120," around uh okay so uh what else do we have in here so rect x okay so what are we effectively doing in"
9014120,9018760," here we're updating a single rectangle but since we're going to have several rectangles their update"
9018760,9024840," functions going to be different and independent so i think we just need to introduce a method called update"
9025640,9033160," right uh which takes a mutable self uh and doesn't really do anything all right so and i would be"
9033160,9037800," uh doesn't return anything that's what i wanted to say i'm going to replace this i think with direct"
9037800,9044760," update there we go so we have a rect update then i'm going to put this thing in here uh right and here"
9044760,9050600," what i want to do probably i want to query replace rect underscore with self dot and that's roughly what i need"
9050600,9061000," to do in here uh so i guess that is it except self width and height is kind of sus okay so this one has"
9061000,9069720," to be self width and width is the canvas right so this one is going to be self uh height right there we go"
9069720,9077480," so uh self velocity well this one is not really self velocity it's like the velocity is going to be the same"
9077480,9083640," for everyone so i'm going to do rect velocity uh all right so that should be it can we now compile into anything"
9083640,9096040," correct width uh as u32 as u32 there we go and i think yeah i think we did it so uh"
9096040,9105240," we introduced a rect uh entity we've sort of like factored out that rect entity and now we should be able to even have"
9105880,9114200," uh an array of such rects right so i can now introduce mute rects which is going to be a vector"
9114200,9121160," uh vector of rects like so uh i'm not sure i think this is how i have to do that so this is new there we"
9121160,9127000," go so and this entire thing is going to be simply taking the rects and pushing a new rect into that"
9127000,9134360," there we go and then when i'm rendering the rectangles when i'm rendering the rectangles uh i just need to do it"
9134360,9145720," like this um so for each rect in rects i just need to do erect hitbox then i need to take the canvas and"
9145720,9151880," turn it into a frame then i need to save the frame and then i'm going to do rect in rects and i'm going"
9151880,9156200," to just clean everything up and after we cleaned everything up we're going to be updating the rects"
9156760,9169080," in rects like so uh there we go all righty so this one has to be something like this there we go uh so"
9169080,9176360," rects move occurs or something so i probably have to do eater instead right so let's have to be"
9176360,9185880," peter uh uh there we go so what do we have in here uh so it's either mute this one probably has to be"
9185880,9195080," mutable of course okay so now uh we maintain an array of such rectangles right so an array of such"
9195080,9199720," rectangles and there we go so here is the single rectangle but what's interesting is that now i can"
9199720,9207880," push more than one in here right so let's actually push another one that moves in an opposite direction"
9207880,9214280," but it moves from somewhere from the right side right and this one is going to be basically width"
9214920,9222920," minus erect width right minus right width and all of that has to be probably as uh so now we have two"
9222920,9227080," rectangles and that should facilitate two rectangles hopefully we'll see how it goes"
9227080,9235720," there we go as one of them actually stuck which is kind of funny i think"
9237400,9246040," uh we can sort of make it uh kind of unstuck uh maybe if we just uh yeah let's actually put an"
9246040,9251800," additional pixel in here just in case just to see what's gonna happen right and hopefully it will do"
9251800,9262840," something yeah there we go so now you can have two of them so that's how we evolve our code base right so"
9262840,9269880," you see what you saw right now is the development bottom up i wasn't developing top down where i was"
9269880,9276040," sitting and thinking oh i will have several rectangles and stuff like that so i need to have rectangle entity"
9276040,9281320," and how they're going to be uh you know interacting with each other and have all these interfaces no no"
9281320,9289240," no i just wrote the the shittiest code possible the simplest shittiest code that does the job and then i"
9289240,9295400," factored out the right obstructions out of that mess and now i can have several rectangles so that's"
9295400,9301800," basically you know the the best design in my opinion not really the best there are different ways you can"
9301800,9314280," actually design your code uh so now uh what do we have so because sometimes top down makes sense uh sometimes"
9314280,9320280," top down makes sense top down makes sense when you explain in concepts to people uh in that case top"
9320280,9325400," down is uh actually a little bit better so i don't really want to be dogmatic about that so because i"
9325400,9331400," think there is a place for bottom up and top down development so bottom up development is great when"
9331400,9339320," you don't know what you're doing right so it's absolutely great which is 99 99 of the time in programming"
9339320,9344360," actually so we as programmers quite rarely know what the fuck we're doing so in that case bottom"
9344360,9350280," up development is quite useful right because it allows you to first gather the information writing"
9350280,9355880," the message code is basically the phase of gathering information of what's needed and once you have"
9355880,9362600," something that is working you know what's needed and then you can uh group the obstructions out of that"
9362600,9367480," right you can group the obstructions out of that where in case of a top down uh you already know what"
9367480,9371880," you're doing you already went through the phase of gathering information and you're just laying down"
9371880,9381480," the the infrastructure just showing how this infrastructure works uh so yeah essentially so"
9381480,9385720," bottom up is when you don't know what you're doing and top down is when you do know what you're doing"
9385720,9391640," right but these are kind of like a different situations so right here right now here i don't know what"
9391640,9395960," what i'm doing i'm just experimenting like i don't know in which direction the development will go and"
9395960,9400280," that's why i'm doing i'm doing bottom up right i'm doing the mess and then i'm cleaning up the mess i'm"
9400280,9407000," just factoring out the the mess into obstructions so here i think i factored out too much right"
9407000,9418360," because uh i need to add a new rectangle when um the rectangles sort of uh collide with the wall"
9418360,9422760," right so the rectangle collides with the wall i need to sort of factor it out"
9422760,9433800," so the question is um so we if we have a rectangle right and it hits the wall uh it hits the wall we"
9433800,9441400," want to split it in half uh so that means we need to remove it from the list right we need to remove it"
9441400,9447160," from the list we cannot remove it from the list while updating everything what we can do by the"
9447160,9453880," way as we update we can return a boolean indicating that there was a collision right so we can do that"
9453880,9465960," at least so uh essentially uh uh collided collided it's gonna be false and in here you can do collided"
9465960,9469800," true and this one is also collided true and then we just return collided"
9469800,9479240," so uh and then while you update everything you can check if collided you need to remove that rectangle from"
9479240,9487960," the list and add two new rectangles to the list right so that's what we need to do in here in fact in fact"
9487960,9493400," that's precisely what we need to do interestingly yeah i think i'm starting to see in the future a little"
9493400,9502040," bit how we're going to be organizing all that so um we need to maintain the list of uh rectangles to remove"
9503000,9511160," right so that's what we need uh mutable to remove and this is going to be basically um you know a list"
9511160,9518840," of maybe use sizes basically indices within the rects to remove right index within uh like this thing to"
9518840,9527400," remove uh and let's actually put it like that uh maybe we're going to call it to split right to split"
9528360,9533400," uh and essentially every time so we probably also need to enumerate this thing"
9533400,9543080," yeah we need to enumerate this thing uh is there any way for me to use some sort of iterators"
9543080,9548120," or something like that or when i want to remove something from the vector if i want to remove something"
9548120,9551960," from the vector do i have to provide the uh index"
9554120,9560760," so it has to be something like delete or something like remove uh okay back"
9560760,9567560," remove do you have remove it is called in fact remove oh there was a remove there"
9567560,9575720," it's it's an index okay so we have to operate on the level of uh indices that's fine that's totally fine"
9575720,9579320," so that means i also need to enumerate this entire thing right can i enumerate"
9579880,9587560," uh enumerate so in here we're probably gonna have an index so if you do rect update uh what you want"
9587560,9594760," to do you want to do to split uh push index there we go so we're sort of gathering the information of"
9594760,9602120," who needs to be split right uh and what's interesting is that i think updating of the velocity has to happen"
9602120,9608040," during the process of splitting which means that we can just remove this entire thing we just remove this"
9608040,9613320," entire thing and just leave it like that what's interesting is that as soon as you collide it"
9613320,9618120," you know for a fact that you need to split so maybe we're gonna even replace it like with true"
9618120,9624360," as soon as you collide it with something there's no point in uh you know continuing"
9624360,9628360," you know checking anything you already split it so whatever"
9629480,9638360," um so though to split everything accordingly to split everything accordingly we need to know uh what"
9638360,9648680," how we collide it horizontally or vertically right so maybe so now these two values is not enough true"
9648680,9653720," and false true means that collided false means uh not collided but this is not enough information we"
9653720,9659320," also need to know how we collided did we collide it horizontally or vertically so maybe we can introduce"
9659320,9666360," some sort of enumeration um called collision uh right and it's going to be basically vertical or"
9666360,9677000," horizontal right horizontal uh and then we can return option uh that returns collision right so this is going to be"
9677000,9685640," be collision here we can return some uh collision um so this is horizontal one right so this is the horizontal"
9685640,9695320," collision and this one is uh collision vertical one and uh this one is no collision whatsoever"
9695880,9705240," right so now the code that calls update knows what kind of collision has happened right so now it knows"
9705240,9714680," and when we push this thing to split we also want to know what kind of collision has happened"
9714680,9719640," so that means here we also need to have uh something like uh collision right what kind of collision has"
9719640,9729400," happened in here so we're going to push index um oh this one is a rather interesting so now we can use"
9729400,9737880," if let some uh collision right and then if it happens we're going to be pushing this thing into the into"
9737880,9747320," the list itself uh okay there we go so that's pretty cool okay uh so i suppose i have to do something"
9747320,9752120," with this for it to work right so we're iterating through all of the rectangles we're updating"
9752120,9759000," everything and then collecting what needs to be split right after that uh we'll be iterating through"
9759000,9763880," the list of things that we're trying to split so here we're going to have the index and type of the"
9763880,9769640," collision right uh double the collision in uh to split and we're going to be iterating it like this"
9769640,9774440," and here we're going to be actually performing the actual split right we're going to be performing"
9774440,9779800," actual split when i delete a thing i can actually get that thing from here which is extremely"
9779800,9787960," convenient so that means i can do something like correct um rect delete the index from here that"
9787960,9796840," deletes the index and gives us this sort of index and maybe now we can go ahead and introduce a function"
9796840,9806520," split that accepts self right accept self the collision basically the uh the orientation by which you want to"
9806520,9815480," split right so something like collision uh collision and returns a pair of new rectangles right so i'm"
9815480,9823480," going to actually uh market this to do right so to split uh to split okay so you get that you delete this entire"
9823480,9831880," thing and then uh as you know since you know the collision right you can do rect split um so you provide the"
9831880,9839720," collision and you have the left one and the right one uh and what you do with the left one and right one you push them"
9839720,9848680," back into the list of the rectangles left one and the right one there we go you see so we iterate through"
9848680,9854040," all the rectangles we uh determine whether they collide it or not like how they collide it horizontally or"
9854040,9859640," vertically and we collect the list of things to split then we iterate to this list of uh of things and we"
9859640,9865720," deleting everything and generating new things again right so um let's actually see if this entire thing"
9865720,9872360," compiles without generating any uh so it does not compile so let's let's see so this one has to be"
9872360,9882600," equals and uh this is delete um so no method delete for back erect it's called remove i keep confusing them"
9882600,9891160," all right so uh there we go uh index uh so it is that uh what else collision"
9893320,9899880," and do we have anything else here is the collision it's unused uh huh so"
9899880,9906440," move occurs there's nothing wrong with the moving this thing inside of it i think"
9906440,9912600," uh cannot move out which is behind the show out because it's a shared reference okay so"
9912600,9921720," less let's actually call it uh like this let's actually do uh derive uh copy and clone right so let's"
9921720,9926520," actually make it copyable and clonable and everything seems to be compiled okay cool so the only thing"
9926520,9933320," we need to implement in here we need to actually implement the split right so since we're starting"
9933320,9940760," to use collision not only as the orientation of the collision but as orientation in general maybe"
9940760,9951080," this thing has to be called orientation right something like orientation um so but orientation is such a long uh"
9951880,9956520," long word so i want to call it orient i think it's going to be a little bit better so now we have"
9956520,9963160," a thing that is orientation how you uh collide it vertically or horizontally uh right so let's actually"
9963160,9968360," try to recompile the entire thing and go through this entire stuff so it's going to be collision uh"
9968360,9976920," orient boom boom boom and it makes more sense right so orientation horizontal or vertical uh orient and this one is"
9976920,9992200," orient uh okay so orient okay cool so now we need to split things accordingly uh so let's do match on the"
9992200,10000120," orientation uh so here we're gonna have uh i'm actually to use orient and just like use everything out of it"
10000120,10010120," uh vertical all right and horizontal it's gonna be force so in case of a vertical uh orientation right in"
10010120,10019400," case of a vertical or retain orientation so that means we actually collided like top or bottom right we"
10019400,10029960," collected top or bottom uh so we can say that the rectangle's position right rectangle's position is"
10029960,10037960," going to be pretty much the same so we're going to have left and right right and in here rectangle"
10037960,10041880," in terms of position is going to be the same as the original one so it's going to be x"
10042680,10055960," self x and y is going to be self y uh y self y but their velocities are going to be slightly different"
10055960,10063400," right their velocities are going to be slightly different so uh for the left one um y"
10065880,10072200," i think dx is going to be the same as dx of the original one by y is going to be the negative one"
10072200,10079960," so that's the difference in here so but for the right one for the right one uh dx is going to be"
10079960,10087080," negative uh and y is going to be negative as well so if you hit the uh the the wall it's going to"
10087080,10092600," actually go in the other in the opposite directions okay that makes sense that actually makes sense so now"
10092600,10098280," you have left and right and you can essentially remove uh return left and right uh there we go"
10098280,10103720," so that's how you would do that i think so and the same for the horizontal one right the same for the"
10103720,10113480," horizontal one uh but oh yeah i forgot the size so the size should be a little bit smaller i think i"
10113480,10120520," think size should be a little bit smaller so maybe we could introduce some sort of a factor uh like twice as"
10120520,10127800," smaller uh but to make it twice as small we have to do we have to use floating point which is kind of"
10127800,10134040," annoying but i think we can we can do that it shouldn't be you know that bad so maybe 75 and it could be"
10134040,10142280," split uh reduce factor that's what it's going to be so it's going to be a global function and it's applied"
10142280,10150680," to uh width and height both width and height uh okay so and for the horizontal one it's going to be"
10150680,10155800," pretty much the same uh the direction is going to be the opposite but here we're going to be using like"
10155800,10161240," minus this thing right so let's go through the compilation errors uh we're going to have quite a few of them"
10163800,10171480," so let's go split reduce factor i'm going to put it in here and it's going to be around 75"
10171480,10180120," right around 75 and uh this one has to be explicitly casted to this step uh anything else we have in here"
10180760,10191160," oh and that one has to be in fact at 32 uh uh and this one has to be f32 uh yes so you used to cover"
10191160,10197240," freaking this up so since we implemented everything so that's basically splitting so every time this thing"
10197240,10202520," hits the wall it's going to be split in two and it's going to become smaller so it hits the wall it"
10202520,10208520," will be two smaller things and so on and so forth so since we are actually generating a lot of rectangles"
10208520,10213800," in here i'm going to remove uh you know the second one and i think we forgot a very important thing in"
10213800,10221320," here after we split everything uh we have to remove it uh we have to basically clean uh the vector right"
10221320,10227000," so we collected everything we split everything and we clean the entire thing so that should be fine"
10227800,10235960," um all right so look at me so we have a simple engine we have a simple entity system believe it or not"
10235960,10240840," this is a simple entity system uh and let's generate the video let's generate the final video"
10240840,10244840," oh i think it blow up"
10244840,10257480," okay so the amount of confidence actually blew up uh yeah so maybe i don't know man uh so"
10257480,10268120," maybe we can reduce the amount of uh things that we can do in here uh we definitely need to reduce"
10268120,10272520," the amount of rectangle because it grows exponentially right two to the power of n"
10272520,10280920," right and where n is the amount of hits of the wall right so it grows exponentially and just like blow up"
10280920,10287080," uh intensely so it's not really it's not really great um one of the things we can do like the easiest"
10287080,10294360," thing is probably maybe reduce the two down one second uh maybe that will do the trick and it it actually"
10294360,10302280," generated uh well but it wasn't as spectacular as i want it to be so let's generate two seconds um"
10302280,10310120," yeah and it just like goes to shed completely and it probably won't ever finish because yeah it's"
10310120,10316680," it will basically like kill my machine if i continue doing that so we need a better solution right because this"
10316680,10324040," shed grows exponentially so one of the things we can do one of the things we can do we can only"
10324040,10334200," always only split we can only split we can only split when the um we don't exceed the particular capacity"
10334200,10347560," right so uh if uh erects uh len right is smaller than rect's capacity only then uh we're trying to"
10347560,10353960," split things right uh if we still have this capacity and the question is what's going to be the capacity"
10353960,10361880," how many of them do we want to have uh so the rex capacity could be something like um i don't know let's say"
10361880,10380440," maybe 100 100 it should be all right uh all right so this is the records and you cannot okay"
10384440,10390440," but i'm not modifying the length of the vector it doesn't like that i'm trying to take the length"
10390440,10397000," of the vector while uh iterating this thing uh with mutable borrowing but i'm never modifying the"
10397000,10402600," length of the vector so it's a completely valid code that is rejected by borrow checker because it's"
10402600,10409400," dumb uh linda braga thank you thank you so much thank you so much for nine months of uh twitch prime"
10409400,10413080," subscription thank you thank you thank you i really appreciate that so yeah um"
10413080,10423480," all right it looks good so let's see what's going to happen"
10423480,10436600," oh that's actually well um that was interesting so uh it definitely blow up it definitely blow up but"
10436600,10442120," something went wrong because they started to tunnel through through the thing uh they started to tunnel"
10442120,10452200," through the thing right so what i'm thinking is that uh we need like more"
10452200,10460600," robust way of um updating this stuff if you know what i'm talking about"
10462600,10472760," uh more robust way of updating this stuff so i think we could have something like tx which is that what"
10472760,10479960," it's going to be right and then i'm going to replace x with y all right and interestingly enough"
10479960,10485960," i think what we need to do in here is just basically plus tx right if plus tx"
10486440,10494600," uh uh res um you know results in splitting uh we're not going to even update this entire thing"
10494600,10502040," all right then plus tx y that there we go and only when we uh went through all of these checks only then"
10502040,10510600," we're going to go ahead and uh update x and y right okay so what do we have in here let's let's see if it's"
10510600,10519800," gonna actually produce anything um so maybe it's gonna be oh and it's stuck okay so that makes sense"
10519800,10527880," so maybe we should actually start from around like 10 so it has an opportunity to at least do something"
10527880,10533800," uh otherwise they're just not going anywhere right so otherwise they're just not"
10536680,10543000," and it's stuck why do they stop though that's very interesting uh it's kind of kind of works but they"
10543000,10544200," but they basically stuck"
10553320,10557560," and it could be because the tunnel"
10557560,10567000," uh so okay so here's how we want to move this entire thing oh i know why okay i forgot the the"
10567000,10574600," another thing so it's going to be plus tx so which probably means that i have to do something something"
10574600,10581800," else in here i think i'm going to call it n right and this one is going to basically self x"
10581800,10592680," like this right and in here we're going to be checking new x and new y uh this has to be y"
10592680,10601080," it has to be y and then if everything okay we're going to be basically reassigning the new value"
10601080,10608600," back to the syntax stuff there we go so this is the new value all right so uh hopefully that will"
10608600,10613400," produce something so whenever you're using foreground maybe it's time to actually remove foreground and"
10613400,10624920," you think it's useful"
10624920,10632920," um"
10640040,10647400," yeah i think i know what's going on this thing tries to split i see so this is really done because"
10647400,10649000," this thing tries to split"
10649000,10659480," yeah and since we're not allowing this thing to split it never updates itself okay that makes sense so this"
10659480,10666840," is a flaw in the logic of this entire stuff yeah so i think what we have to do in here all right what"
10666840,10670120," we have to do in here is always update this kind of stuff"
10670120,10679480," and when we are splitting okay so we need to completely change the logic of how we're splitting"
10679480,10683800," yeah we need to completely change the logic of how we're splitting"
10686600,10691160," uh and so i think split because"
10691160,10695800," man"
10695800,10703640," yeah my brain uh actually will be tired but i i'm really really close to this i'm really close to"
10703640,10714920," to making uh it look like i wanted to look"
10714920,10716920," um"
10733640,10763000," what if you do something like this so we have two lists uh with just split uh and if you do split"
10763000,10767240," when you run out of capacity we're going to be deleting this entire thing"
10767240,10773480," i think this can be actually kind of cool i really like this idea so let's introduce to to delete"
10773480,10777160," to delete and this to delete is going to be just use size"
10777160,10787080," right so uh yep pushing it here and then for index in two can you delete several of them simultaneously"
10787640,10796840," uh maybe to delete uh iterating this entire thing and essentially it's going to be uh rect remove uh"
10796840,10803960," index right so it's not going to even try to do anything uh to delete clear so because of that uh"
10803960,10811080," reduction i think reduction factor has to be a little bit bigger so they don't disappear very very fast"
10811960,10817560," so um i think that's going to be a better way okay so something removal index should be oh"
10817560,10820440," because this thing invalidates the indices"
10820440,10837880," because this thing invalidates the indices of this one"
10837880,10852200," so maybe the logic of deleting things should be not here uh it shouldn't be here uh i have an idea"
10853960,10865080," uh so essentially uh if you try to remove right if you try to remove um this entire thing it's going"
10865080,10870520," to be something like so we're always going to try to split things right we're always going to try to"
10870520,10876440," split things so we remove the entire thing we remove the entire thing and um"
10878520,10880120," interesting enough how does it work"
10880120,10891000," so we go through the indices and we actually have to handle them in the in the opposite order"
10891000,10902920," we have to yeah why don't i do that in opposite order so i guess that's what i need to do first"
10902920,10910840," so can i just do like a reverse out of that right so we take things to split right because they're in"
10910840,10915480," in this order because it can invalidate everything okay so we inverse that and we handle that in"
10915480,10926360," opposite order but here is the interesting thing uh we only gonna push that if rect's uh len is less than"
10926360,10934200," rect's uh capacity only then we're pushing this entire thing and uh then uh the same goes to here okay"
10934200,10941320," i think that could be the feasible solution uh i think that could be a feasible solution let's give it a"
10941320,10952520," try so uh yeah so that thing is not useful anymore and hopefully that thing is going to be uh working yo"
10956360,10963560," uh that's precisely what i wanted that is precisely what i wanted that is so cool"
10963560,10968760," so what do you guys think"
10978600,10988520," so you know um i think it would be even better to i don't know have uh free uni subscribed at tier one"
10988520,10991800," thank you thank you so much for two months of tier one subscription thank you thank you thank you"
10991800,11001480," uh okay so can we just try to do something like this uh right so and i need to regenerate that um so and"
11001480,11008680," for some reason it's stuck right and it generated like a lot of different weird um so let's see how it's"
11008680,11009080," gonna go"
11009080,11021960," yeah yeah it keeps generating some stuff so uh because it hits the um"
11021960,11030760," the corner and in the corner it just generates a lot of stuff so maybe we could upset the entire thing"
11030760,11035320," like that i'm just trying to make it like as soon as it hits the corner it actually"
11035320,11041080," um creates the situation when it creates like a generator of these things which is not ideal in my"
11041080,11049880," opinion uh yeah you see it's just like it's kind of it's kind of weird uh also when the rectangles"
11049880,11055880," hit a particular size right maybe we should never create them because they're too small right"
11058520,11067240," right let's let's see so it's gonna be something like 13. rectangle factor yeah that's basically what's"
11067240,11073960," going on here so maybe two small rectangles should never be created right so they should be illuminated"
11073960,11083800," from the uh from the entire existence why does it do that uh i don't know man like i don't want it to"
11083800,11090680," hit the corner because it's like creates that i probably can prevent the corner situation somehow"
11090680,11098040," maybe oh i even know how it creates okay that's oh that's way better that looks way better actually"
11098040,11104360," because it never hits the corner right so when you when we split when we split"
11105080,11112280," uh we actually create uh we actually create things in opposite directions uh right this is such a cool"
11112280,11121880," thing to to play with i really like that uh okay so maybe we should have uh a situation when the"
11121880,11128360," orientation is sort of like both if you know what i'm talking about it's just like both of them"
11129720,11139080," uh in that case what we have to do we probably shouldn't split um but i'm not sure i'm not"
11139080,11142680," really sure as soon as you hit the corner it's just like yeah it creates this generator"
11142680,11149240," i would never thought about it actually i really want to code this simulation"
11149240,11155160," outside of video rendering just on its own in real time because i think it's a very interesting"
11155160,11161880," simulation to observe never never thought about it uh okay so fps is 16 here what if i actually have"
11161880,11176440," like a four seconds so it's a very interesting simulation and so on yeah that's for sure"
11182680,11187960," what do you like that uh okay the video that i generate is 330 megabytes"
11187960,11198600," 330 megabytes okay so uh i'm gonna do uh ffm pack so the input is gonna be output yfm and output mp4"
11198600,11201320," of course"
11201320,11207240," i should not close that"
11212200,11217800," um so and if i play that with m player"
11217800,11230440," okay so let's actually see how discord will react to that uh okay"
11241560,11245960," it's actually so cool i really like that this is such a cool such a cool concept i really want to"
11245960,11251720," it it's so it feels like some sort of um i don't know something similar to game of life"
11251720,11256040," with generators and stuff like that so there's something mathematical about this system and it's"
11256040,11263320," like generates this shit and it's so cool uh what if they were perfectly squared right so one of the"
11263320,11269320," things that kind of bothers me is that they are not perfectly squared so uh maybe we could make them"
11269320,11275640," perfectly squared if you know what i'm talking about um so this could be one of the things we could do"
11275640,11284280," what i'm doing is completely outside of the scope of you like simple video format"
11285800,11292920," um so it's more of like a mathematical thing to play with"
11292920,11298520," all right do i want to do anything with the uh with the corner situation"
11298520,11301880," i'm not sure if i want to do anything with the corner situation"
11301880,11309720," maybe it's like a part of the system right it could be just part of the system one thing i want to do is um"
11311560,11319320," i guess being like not including uh too small rectangles so to have some sort of a threshold"
11319320,11328840," right and to have some sort of a threshold we can have something like area right so area of uh self and"
11328840,11338280," it's gonna return f32 right and essentially what it will do it will do just uh self w self h right and"
11338280,11350760," if uh a particular thing so rect is less than uh that and um left area is less than rect area threshold"
11350760,11356600," threshold threshold only then we're adding this entire thing in there right only then we're adding"
11356600,11362200," this thing entire thing in there right and we will have to define what is the uh rect area thresholds"
11362200,11367880," all right so what's going to be that so we have a lot of constants related to the uh rectangles f32"
11367880,11372840," so uh the area let's say is going to be like around 10 maybe we can adjust that stuff"
11372840,11384360," okay so what do we have in here so this one is not needed i do agree with that uh so left is actually"
11384360,11392040," right uh oh this is actually pretty cool so it actually caught a bug i'll give it that"
11392200,11409480," okay so apparently uh yeah i think it has to be reversed i think it has to be reversed"
11414040,11420200," okay so at some point they're going to start disappearing over time they're going to start"
11420200,11421000," disappearing"
11421000,11433000," but we didn't actually simulate long enough to see how they disappear so let's actually try to simulate"
11433000,11438360," uh 10 seconds of this entire thing we know that it's not going to exponentially blow up"
11438360,11440120," let's just generate 10 seconds of this stuff"
11440120,11448760," it generates pretty with a pretty decent speed i would say uh at some point yeah so at some point"
11448760,11454600," it's going to actually speed up because they're they're dying yeah there we go so at some point"
11454600,11459480," it just speeds up because they're dying so there was like a curve so at some point the amount of"
11459480,11464760," ventages like grew to the 100s and it had a hard time rendering them and then they started to die out"
11465400,11472520," so and we can see how it looks now yeah so that's basically what's going on here so it's 10 seconds of"
11472520,11480200," the simulations uh okay so it looks like yeah what about 20 seconds of the simulation so i want to"
11480200,11483880," like wait until they completely die out um"
11487320,11491800," okay okay it's having a hard time and then it's going to speed up"
11491800,11504440," no graphical libraries not no nothing no dependencies by the way it's just like a pure code nothing nothing"
11504440,11510440," special it's just a pure code that's what i like about this shits uh it's so cool like this is like"
11510440,11516040," truly recreational programming in my opinion right so you don't bother yourself with fighting with build"
11516040,11522120," systems with dependencies and stuff like that you just code it's just like a pure imagination"
11522120,11533160," pure imagination that's what it is"
11536360,11549720," at which moment it actually completely died out uh so let's actually take a look i want to do dlc"
11564200,11581960," 16 uh yeah 16 around 16 seconds um yeah 16 around 16 seconds um"
11594200,11607200," I wanted to generate sound as well, I'm just realizing."
11624200,11649500," Roughly, more or less, okay, so ffmpeg, let's regenerate the thing, hmm, that's a lot of frames."
11649500,11674800," It's actually rendering at 30fps, but regenerated at 60fps."
11674800,11686800," Alright, and so the final thing in here is this one, oh my god, you'll see, yeah I don't know."
11686800,11689800," That's cool, that's very very cool."
11689800,11698800," So, and if I put that into the final thing, so this one is a bit longer, 2MB."
11698800,11710800," Maybe it's FPS per second, maybe."
11710800,11711800," God, this is so cool."
11711800,11712800," This is like Twitter worthy."
11712800,11716800," I wonder if I can post that on Twitter."
11716800,11718800," I don't know."
11718800,11723800," So, Twitter actually always been pretty bitchy about the format of the videos."
11723800,11725800," I'm not even sure if it will support that."
11725800,11729800," Every time I try to tweet a video, it's just like a pain in the ass, but I don't know."
11729800,11738800," Okay, so I'm going to commit whatever we have already."
11738800,11741800," So, let me see."
11741800,11743800," So, this is Polish Fixed Chorus."
11743800,11746800," Generate cool rect animation."
11746800,11748800," Cool rect animation."
11748800,11751800," I'm going to push that right into the repo."
11751800,11764800," So, I suppose I'm done with animate something, and I would like to generate some sounds, but I already wasted 4 hours on generating the imagery."
11764800,11773800," Right, so this thing took quite a bit some time, because we had bugs in the implementations and stuff like that, in the formula especially."
11773800,11775800," Right, so, yeah."
11775800,11777800," That's the correct, this is the correct formula."
11777800,11779800," This is the correct formula."
11779800,11791800," So, the original idea, the original idea of this series was to explore a simple video format that you can use for debugging purposes."
11791800,11802800," Essentially, without any special third-party dependencies, can you generate a video file that is playable in common video players."
11802800,11814800," So, the simple format that I found is this one, which is like MPEG, what is it, UV4 MPEG2, which is rather simple for a video format."
11814800,11821800," For a video format, it is extremely simple, but it requires you to remember this formula, right?"
11821800,11825800," So, you somehow have to remember that."
11825800,11829800," And, apart from that, that is it actually."
11829800,11832800," So, the rest of the generation is rather simple."
11832800,11836800," Right, I wish you just didn't have to remember this, and that would be a perfect format."
11836800,11839800," But, unfortunately, I couldn't find a simpler format than this."
11839800,11846800," So, I wish there was like specifically video format for debugging and stuff like that, but it is what it is."
11846800,11848800," And it isn't what it isn't."
11848800,11851800," But, at least, we generated pretty cool animations."
11851800,11852800," So, that was fun."
11852800,11865800," Maybe at some point, I am going to just generate that with OpenGL and just play more with this kind of stuff, because it is kind of lame to wait, you know, while it renders everything."
11865800,11868800," So, I want to update this kind of animation like in real time."
11868800,11871800," So, yeah, maybe at some point, we are going to do that as well."
11871800,11874800," We are going to just cool this thing without any of this bullshit."
11874800,11882800," So, in terms of the source code, you can find this thing in GitHub if you are interested."
11882800,11889800," So, it's available in here, and for people who are watching on YouTube, you can find this thing in the description as well."
11889800,11897800," So, yeah, I wish I had time to generate the sounds, but I didn't generate the sound, because I didn't really have time for that."
11897800,11901800," So, it is what it is, and it isn't what it isn't."
11901800,11903800," So, that's it for today, boys and girls."
11903800,11904800," That's it for today."
11904800,11906800," Thanks, everyone, who is watching right now."
11906800,11907800," I really appreciate it."
11907800,11910800," Have a good one, and I see you all next time."
11910800,11913800," I don't know when, I don't know where."
11913800,11916800," So, yeah, see you all next time."
11916800,11919800," Maybe I'll come up with something more interesting next time."
11919800,11920800," We'll see, we'll see."
11920800,11924800," I'm constantly searching for interesting topics to explore in the stream."
11924800,11925800," Love you."
11940800,11941800," Thank you."

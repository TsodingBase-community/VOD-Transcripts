start,end,text
0,8820," it looks like we're live hello everyone and welcome to yet another recreational programming"
8820,14580," session how about that uh let's make a little announcement and officially start the stream"
14580,24440," so i hope my microphone is working right so um a red circle live on uh twitch and what are we"
24440,33720," doing today on twitch let me see today we're doing 3d in c without opengl um only cpu in fact we're not"
33720,39780," using any gpu apis like vulcan metal or anything we're doing everything on cpu today and it's going"
39780,44800," to be rather interesting so let me give the link to the twitch channel where we're doing all that"
44800,50660," twitch.tv and i'm going to ping everyone who's interested in being pinged uh there we go the"
50660,58680," stream has been officially started so uh today we continue series on developing the olivets which"
58680,66220," is the graphics library um which renders everything into the memory right so it doesn't have any"
66220,71680," dependencies you just give it a chunk of memory and you tell it what to render and it will render"
71680,77100," all of that pixel by pixel into that memory so you can do whatever you want with that memory you can"
77100,84000," save it as an image you can render it using opengl or anything right but the construction of the pixel"
84000,91800," itself is not on um on gpu it's on cpu anyway right so it's it's a very simple library that uh"
91800,97280," basically just fills up the memory you can find the source code of this library in here if you're"
97280,104140," interested and for um and for uh people who are watching on youtube you can find that in the"
104140,112040," description um all right so let's take a look at the uh at the source code of this thing right so let"
112040,117240," me rebuild everything just in case uh the rook sega thank you so much for three months of tier 1"
117240,121980," subscription thank you thank you thank you hello everyone really glad to see you all hello hello hello"
121980,129100," alrighty so we have a bunch of demos right we have a bunch of demos that demonstrate what you can do"
129100,135980," with this specific library in fact uh this library is so simple and doesn't have any dependencies you can"
135980,143260," compile it to web assembly and run it in a browser so yeah that's what simplicity gives you people do not"
143260,150660," understand right so they're trying to build like like very complex abstract systems but if you strip"
150660,155700," off stuff from the system they become more cross-platform right because the more dependencies"
155700,161000," you have the more probability that some of the dependencies is just not available for that specific"
161000,164900," platform the less dependencies you have the more cross-platform your application is"
164900,169220," if you can achieve the same thing with less dependencies you make the application"
169220,175260," not only more simple but also more cross-platform people just don't understand that for some reason"
175260,179460," i don't know what they think that to make thing cross-platform you have to make the thing more"
179460,186820," complex it's actually the opposite anyway right so let me actually show you http server 69 69 right"
186820,195060," so and uh these are the things that the library can do right so it can do uh barycentric coordinates"
195060,200800," interpolation right so that allows you to do the rainbow triangle this is not open jl by the way"
200800,209780," this is like on cpu pixel by pixel transparency gradients stuff like that no open jl only cpu so we"
209780,217600," have a simple 3d but 3d projection on the screen is not done by the library we'll just do that uh manually"
217600,224260," in the demo itself right the library only provides a way to render a dot uh on the projected place right"
224260,229220," so but this is just like a demo to to look impressive right but today i want to go into"
229220,236360," something more interesting right as you can see this is a projection of just a single dots a single points"
236360,245360," in 3d space i want to actually render like a solid objects in 3d right like a like a solid cube"
245360,252360," and stuff like that using that library and we can already try to do that right we already have an ability"
252360,259320," to render triangles right as already demonstrated in here so essentially you can already render 3d triangles"
259320,266040," right so if you have vertices in 3d space you just do this kind of projection and you just render"
266040,275960," projected triangle like this right but uh there are some problems with um um you know properly rendering the"
275960,281960," intersecting triangles right but we'll get to that a little bit later uh so and this is precisely what i want to"
281960,288920," to try to do today i want to try to just take a triangle and make it a 3d triangle i want to try to"
288920,295240," render a triangle in 3d and see how it will work right so and recently we implemented bary sanding"
295240,300600," coordinates for triangle interpolation uh for more information on that i recommend to watch your previous"
300600,306760," stream and that is going to be very useful when we're going to start uh rendering intersect and stuff"
306760,312280," right so right so i'm going to show you later okay so we also have like you know resizing of the of the"
312280,317160," textures and stuff like that and all these demos by the way they are available online uh you can find"
317160,326280," them in here if you're interested so olivets so this should work on your own machine so let me go to the"
326280,335240," description and i'm gonna actually put it in here so uh demos this is a source code and these are demos"
335240,337160," um"
337160,339880," um"
339880,354120," now okay so to start doing 3d i think i want to recall the math of projecting 3d point onto the 2d screen right so to do"
354120,361800," any 3d without any libraries or any dependencies or opengl we need to understand the math right so i"
361800,368440," want to understand the math for 2d projection a little bit better right so we already like on the"
368440,375640," previous stream we did a little bit of latex right where we explored uh bary sending coordinates and uh we"
375640,382520," ended up with this pdf uh white paper that is available for everyone uh right and i want to do a"
382520,388840," similar paper but for the 3d projection right just just explore how you do 3d projection and come up"
388840,394920," with the formulas and then we're going to use that formulas to project the triangle in the 3d space"
394920,401240," right so uh let's go ahead and try to do that i'm going to create 3d projection um"
402840,410440," well it's called 3d projection i'm going to call it tech it's not text it's tech uh 3d projection tech"
410440,418520," all right so document class and we're going to do article uh article and we're going to start the"
418520,425560," document environment and let's just do hello world uh maybe even a section right because section is big"
425560,431800," so it's going to be very much visible it's kind of funny how this later mode is just like trying to"
431800,439000," like trying so much to be what you see is what you get editor but kind of fails miserably like it's it's"
439000,445080," it's what you see is what you get but not all the way through you know what i mean right it's just like"
445080,452440," so weird um not sure i'm not sure i'm not sure if it's even helpful um but anyway whatever uh it is"
452440,459800," what it is uh okay so pdf later and uh 3d pdf tech"
459800,470600," all right uh but uh but later is all about what you get is what you want yeah exactly like i don't"
470600,477400," know why people are trying to turn later in into what you see is what you get if you want what you"
477400,484200," see is what you get just use microsoft office or whatever right so it's not about that uh right it's"
484200,491960," a completely different philosophy if you know what i mean what you see is kind of what you get but not"
491960,498840," not really yeah exactly uh okay let me see if we manage to compile that properly uh okay so there"
498840,504360," we go here is hello world all right so i also probably want to put some sort of a"
504360,515400," uh thing behind my camera so i know what you guys see or do not see right um there we go so i know if"
515400,526600," like yeah so i cannot see the same thing you cannot see uh all right so 3d projection uh 3d projection"
527080,532360," right and i can quickly recompile the entire thing and i can change it and as you can see 3d projection"
532360,538760," okay so uh i really liked how in a very center coordinate very centric"
538760,544280," very centric coordinates i need to learn how to pronounce that word it's a really difficult"
544280,556200," word for me to pronounce right uh right so what i wanted to show you is uh the pdf in here mu pdf"
557080,563880," yeah yeah open it already jesus right so as you can see we have an image here and the thing about this"
563880,570840," image is that it's vector right so you draw with the command with the later command right so i want to draw"
570840,577000," the like how projection works um using like a similar thing right so let's actually draw first"
578200,588440," the the axis the the coordinates of some sort uh so we draw that with a package called uh use package i"
588440,597080," think i forget how it's called ticks right uh it's called ticks and you have to do ticks picture right"
597080,602760," so this is the environment in which you're drawing everything uh right so let's actually try to compile"
602760,609080," we can't see anything because we didn't issue any commands to draw right so we have to do draw and the"
609080,615880," line is done usually by providing two points right so let's provide the point let's draw a point from"
615880,624360," minus five zero to uh five zero right so and this is going to be horizontal line right so this is going to"
624360,636520," be x axis right there we go and there we go we have a line which is pretty cool um so latex fits this time"
636520,643560," i'm sorry you can google it yourself if you want to come up um all right so let's actually draw the y axis"
643560,651720," uh so this one is going to be zero minus five and uh let me see how it is going to go there you go so i think"
651720,659800," it's a bit too big at least on y i don't want y to be this big let's actually make it from minus three"
659800,668440," to three all right around like that and uh what i essentially want to do i want to place uh an eye"
668440,675560," the viewer's eye at uh at zero zero then i want to draw a screen right onto which we are projecting"
675560,681800," everything and then i want to draw a sort of like a 3d object in this case is 2d because we're looking"
681800,688360," from the side i want to put an object behind the screen and i just draw the line how it projects"
688360,694840," onto that virtual screen and from there we'll be able to derive the formula that you need to use to"
694840,700440," actually do that in a program right so that's basically going to be the idea um right so maybe i'm"
700440,706360," going to actually move uh this thing to the left right because we're looking into the positive"
706360,712360," direction right so it probably makes sense to actually like to minus three in here uh right there"
712360,721480," we go so maybe even two but this one is going to be something like seven there we go right cool so let's"
721480,729240," try to draw um a circle at zero zero right so this is going to be zero zero and this is the circle and"
729240,735480," as far as i know you have to provide the size and it's in some sort of like a really weird measuring"
735480,741080," it's called ex i don't really know what what they mean but i know that 0.5 is the size that i want for"
741080,747640," a marker right so and it actually drew a circle in here but it's actually empty circle this is not"
747640,752200," particularly what i want if i remember correctly i can provide the style in here i can say fill"
752200,761320," and it will put like fill fill it up there we go so then we can put a node with the text above that"
761320,769560," object that says that this is an eye right so this is where we have an eye in fact i think i can even put"
769560,779480," the axis in here so this one uh is a y axis right so this is a y axis uh i can actually make it a little"
779480,784200," big i can even make it bigger that's actually pretty cool so this is the maximum so this is a y axis"
784200,792600," and this one this must be a z axis right so because we're looking into the z um right there it goes so let"
792600,802520," me i let me actually find right so this one is going to be z axis yeah there we go so we're looking into"
802520,811960," the z and above us is y so x is actually goes like that straight into through this thing we would be able"
811960,821480," to see x instead of y only if we look like above like above the the player above the viewer so to speak"
821480,827160," but let's actually use y in here because i think i want to look at this thing from the side if that"
827160,834600," makes any sense uh it will be also kind of cool to draw the arrows here for z and y so let me actually"
834600,843800," google that uh ticks um latex arrows because i don't remember how to do that so ticks arrows ticks blocks"
843800,848520," stealth arrows"
848520,856840," that's a really weird way of doing that but okay i mean if it works i don't i don't know if it's gonna"
856840,864520," work or not uh stealth okay so it actually drew the rhythm so it didn't draw them on the"
864520,870200," other ends okay that's perfect actually that's pretty cool i really like that uh so"
870200,881320," okay um let me try to now draw the screen right so to speak uh you know what i would like to actually"
881320,889320," like take all of these magical values and turn them into like um later command so i can refer to them"
889320,895400," in other drawings right because for instance i want to draw the uh screen right so and the screen is going"
895400,904440," to be vertical line uh it is going to be located somewhere at let's say two right and in terms of um"
904440,913640," y it's going to go from the minimum y that we have in here right minus three and then uh two"
914760,920600," to maximum y and uh let's actually draw it like that if something went uh"
920600,927080," giving up on this path i forgot the semicolon so that's basically what happened okay so as you can"
927080,933000," see this is the screen it would be nice to actually denote that this is a screen above"
933000,940120," screen there you go so it will say this is a screen so we have an eye and we have a screen we can"
940120,946360," clearly see everything it would be nice if it had a different style for instance dotted right so yeah"
946360,950520," so now it is dotted but it's actually kind of difficult to see so let's actually make it back"
950520,957960," right it's dotted and thick okay so but but the problem here is that what if i want to change the"
957960,964360," height of the whole thing right so for instance i'm going to do from minus two to two uh right and that"
964360,971080," means i should not forget to update the screen it would be nice if like uh you know minimum y and"
971080,976440," maximum y were some sort of a variable that i could refer to in both of these places so every time i"
976440,982040," change it like it changes automatically you know stuff like that and in fact and later you can do that you"
982040,989720," can define a certain command let's define minimum y and say that it's going to be minus three right and then"
989720,995160," we can define maximum y which is going to be three and we can just like literally use those things in"
995160,1002440," here minimum y it has a different weird syntax i do admit that but later by itself is kind of a weird"
1002440,1009880," language uh this is probably because it's so old by the way have you noticed how old languages are weird"
1009880,1017560," probably because like back then there was nothing standardized in terms of syntaxes right so these"
1017560,1024040," days all of these syntaxes for all of the languages sort of converge into like c like uh right so the"
1024040,1029320," format is c like which is called json all of the new languages like c like languages and stuff like that"
1029320,1036520," it's kind of interesting the older a certain language is the more weird it is in terms of like a syntax"
1036520,1044360," right so but the more modern languages are the more we start to converge them to the same syntax anyway"
1047160,1051000," um thick screen is just like oh good old days yeah"
1051000,1059320," um it's like old human languages sound weird i don't know i never heard old languages"
1059320,1063560," anyway"
1063560,1068840," uh so and now i can do something like this"
1068840,1076760," um right so let me try to recompile the internet thing and there you go so now it should be quite easy"
1076760,1083000," for me to update the minimum uh y and minimum x and it updates both of these lines simultaneously"
1083000,1089400," because they uh refer um to the same variables in here so which is kind of convenient which probably"
1089400,1095240," makes sense to maybe introduce like minimum z and maximum z you know what i mean"
1095240,1102920," like so for all of these variables it for all these values it makes sense to introduce like a special uh"
1102920,1110680," special commands i think i think it does make sense so minus two and seven so i can also group them into"
1110680,1117480," pairs right so this is a minimum y and maximum y and this is minimum z and maximum z uh this one is a"
1117480,1124440," minimum z and this is a maximum z there we go right seems to be working seems to be twerking"
1125240,1134600," and now i can specify the screen z right and the screen is located at two so and i can use the same"
1134600,1146440," command in here once screen z which means that now i can quite easily move the screen around i can put it"
1146440,1152360," in here or i can put it in here i can put it anywhere it doesn't matter it automatically updates"
1152360,1159400," right and uh it still works even if i change the you know the axis like everything works"
1160680,1169240," can your css do that i don't think so i mean css recently introduced variables of some sort so it"
1169240,1173720," should be possible uh robo dot thank you so much for which prime thank you thank you thank you"
1173720,1182680," uh all right all right all right all right so old english for example uh i don't know like in that sense"
1183400,1191320," it's just like old english sounds as weird as a foreign language right so if the language is so"
1191320,1196440," old that you a modern person do not recognize it it's basically a different language and for you it"
1196440,1205560," sounds as sounds as weird as a different language right so i don't know i hate how every package have"
1205560,1211160," absolutely different syntax for example ticks have a semicolon but other packages don't oh that's"
1211160,1217320," interesting i never tried anything except ticks so i'm not aware of that so i'm not a later person"
1217320,1223640," i don't use later daily so i use it occasionally from time to time but i think i'm starting to use"
1223640,1231080," it more and more because i just realized at some point that it is way more convenient to do math"
1231080,1238520," not on the paper but on a computer and with a later i can actually make it look like i did it on paper"
1238520,1243400," you know what i mean right and it's convenient to do it on on a computer because i can copy paste chunks"
1243400,1249640," around and just uh search and substitute i can like literally transform expressions the way i cannot do"
1249640,1255560," on a pen and paper without making a mistake uh right it's way easier for me to just copy paste things"
1255560,1260920," around and transform them and be sure that i didn't make any mistakes and on top of that i can just"
1260920,1268840," display it nicely so it's just like the best of both worlds for me um the layer has later has a really"
1268840,1273240," weird syntax but i mean i think you can get used to it i i've tried a lot of different languages with"
1273240,1279480," different syntaxes so i would say it's not the worst language i programmed in but i'm i'm not programming"
1279480,1288680," this language anyway whatever so uh let's now uh put some sort of um point behind the screen right so"
1288680,1295080," let's put a point behind the screen so i'm gonna call this point p so it's going to have x right so"
1295080,1302920," actually it we have z and y right so in terms of z is going to be at three basically behind the screen"
1302920,1310440," uh i could have put it like this screen z like plus three but i don't really want to do that right"
1310440,1315160," uh i want to have a little bit of a control right so i want them to be independent like i don't want"
1315160,1322280," them to i don't want to make them dependent yet right we'll see if it will be needed uh p y in terms"
1322280,1330840," of y it's gonna be maybe like one or two like above the uh z axis somewhere here uh right and"
1330840,1337960," you know what i just realized z and y in here they don't look mathematic at all they are mathematical"
1337960,1346280," value so let's actually wrap them in dollars which will use the special font for math right so as far"
1346280,1351320," as i know in nodes in here you can literally put anything later you can even put like mathematical"
1351320,1357320," expressions and they will be displayed properly so which is a kind of nice uh right so yeah look"
1357320,1363960," at this z now look at that look at z look at this y it looks so beautiful so mathematically just like"
1363960,1370200," you just drew it with your hand farcon hello uh so hello hello"
1374120,1380680," um i can't paint pretty greek letters my later uh expression equations look uh therefore much better"
1380680,1386680," than paper ones yeah exactly it's it's the same for me uh raffalo 38 thank you so much for three months of"
1386680,1398360," your uh of twitch prompts okay cheers all right so maybe i actually want to make this a little bit shorter"
1398360,1408680," uh maybe like six uh yep that's pretty cool okay so let's draw that point right so i know that we can put it"
1408680,1417240," in here this is gonna be p z and p y um and we're gonna call it p and since it's a mathematical value i'm"
1417240,1424120," gonna call it like that uh all right so it's located somewhere here so it's actually it'll be too high"
1424120,1431800," uh for my liking so let me make it like one uh yeah that's perfect so what we want to do in here we want to"
1431800,1439800," actually draw a line from i to p and see where on the screen it intersects right so let's go ahead and"
1439800,1448760," do that um i'm gonna do draw it's gonna be dotted line and we're gonna be rendering from the i so i just"
1448760,1453240," realized that for the i i don't really have a special coordinates i didn't define them so let's actually"
1453240,1462840," quickly define them i uh i z so zero both of them is going to be zero but i mean we should have an"
1462840,1474760," ability to change them if we want to right so we're going to define a i y and let me do i z i y"
1476760,1487080," and then we're going to take the i and we're going to draw this thing into point p so i'm not sure if"
1487080,1495880," i need uh any any stuff any label uh there we go so and essentially what we need to do we need to find"
1495880,1504360," this specific point of intersection uh of this line from i to a point so some sort of object p onto the"
1504360,1511640," screen right so and uh we should have the following things right so let's actually denote that i where"
1511640,1519160," is the i uh has a specific letter right so i want to call it e but unfortunately e is already like a"
1519160,1528760," constant right so maybe it's going to be like a capital e right so and the thing about p is that"
1529480,1537080," it's a vector right it has three coordinates px uh py and p p z"
1537080,1546360," uh something like this and e is basically the same but i'm going to replace this stuff like that"
1546360,1555240," uh so something went wrong oh we don't have a line environment because we need to use another another"
1555240,1563880," package right so later was actually first who suffered from the npm disease right so you usually"
1563880,1569400," have like a shit ton of packages to here to just like do basic things but there is a huge difference"
1569400,1576360," between later and npm and like any other package manager out there for programming languages there's a"
1576360,1583320," huge difference so in later it is totally fine to have shit ton of dependencies for your document you know"
1583320,1590920," why because as soon as the document compiled you don't need any of these packages for that document to work"
1590920,1598920," you know what i mean in case of for example rust you have shit ton of dependencies that link with"
1598920,1604920," shit ton of other libraries of dynamic libraries and stuff like that and you end up with executable that"
1604920,1611880," you need them at runtime so you have to bring them in you need to bring them in there's like no other way"
1611880,1617480," around and with later it's it's not you just compile it and you forget about all of your dependencies no"
1617480,1620920," matter how many of them you use because the final thing is just like whatever you display"
1620920,1627560," you see what i mean like there's a huge difference between this npm disease in later in and in any other"
1627560,1632360," language because in later the end document just does not depend on any of that so it doesn't matter"
1632360,1640600," and it makes sense because the pdf document is not the same as an executable program right so they are"
1640600,1644280," completely different entities they serve completely different things so that's why it's not the same"
1646680,1652040," um all right uh prince goof thank you so much for twitch prime thank you thank you thank you"
1652040,1666760," uh ams math i think uh all right so let me let me try to recompile this into i think and there you go"
1666760,1673880," here is the stuff uh but it would be nice to also align them right uh by the beginning of the of the line"
1673880,1683160," like so uh right there we go so they or they look alike okay so given these coordinates can we find"
1683160,1693240," that projection somehow right so let's actually find out um so we're gonna call that point uh that"
1693240,1703720," projection point as p prime so uh let me just draw that i'm gonna draw a few um so"
1703880,1710840," i don't really know where in terms of why it is located but i know for sure that in terms of z"
1710840,1719240," it is located at the screen z which means i can do screen z and i'm gonna put zero for y for now"
1719240,1723240," i'm gonna render the circle uh right i'm gonna render the circle uh right i'm gonna render the circle"
1723240,1733560," and then above that circle uh to print uh to print p prime there we go okay so here's the point but this"
1733560,1741480," is not the point of the projection so we know the z of that point we need to find the y of that point"
1741480,1750520," right we need to find the y and here we have a line so that means to find that y on this line we need to"
1750520,1756440," know the uh the line equation right so we need to know the line equation of this uh specific thing"
1756440,1763480," so the line equation if i'm not mistaken is y multiplied by slope uh equal to slope multiplied"
1763480,1771160," by x plus c right so that's basically what we have so slope is effectively y divided by x"
1772280,1781080," right so y divided by x and in terms of c uh c is equal to so if you basically move this thing back in"
1781080,1792040," here it's y minus k x right and usually it's any point right so but we can pick the first one um so and"
1792040,1806280," in here um it's probably gonna be 2 minus y1 and this is gonna be uh 1 minus maybe y2 minus x1 right so"
1806280,1817960," this is difference between them so y2 basically point to the second point in here is p but the first one the"
1817960,1829320," first one is i so we can actually put all of this stuff in here right so effectively uh we take screen"
1829320,1835320," z the x and we need to multiply it by the slope right so we need to multiply it by the slope and slope"
1835960,1852920," is p uh p uh y minus i y divided by uh p z minus i z right there we go so it's not particularly visible"
1852920,1860440," in here because the formula is rather long but here is the slope we multiply it by the x in here in this"
1860440,1870600," this case it's z and then we have to add uh we have to add c and c is going to be i y minus the slope"
1870600,1879560," yet again minus the slope yet again so it's going to be actually kind of big it's going to be actually"
1879560,1887560," kind of big so let's actually try to simplify it first so if i put uh if i put c in here"
1887560,1897400," here i end up with two um members in here with the same coefficient which is k right so i can bring"
1897400,1906760," them in here and i can basically uh put them like that there we go so that means i need i don't need"
1906760,1917160," the second uh the second slope in here so here is the slope and i multiply it by z minus uh i z right so"
1917160,1926920," minus i z plus i y and that formula should compute me the y based on z right so knowing the formula for"
1926920,1933400," the uh for the line that should actually work so let's actually see and uh how i think i think i know"
1933400,1941640," what's up with that right so if you want to have like i remember that um so parentheses in ticks have a"
1941640,1946520," special meaning so you cannot use them for mathematical expressions and stuff like that so if you want to do"
1946520,1951160," mathematical expression you have to rub them in curly braces or something like that i remember having"
1951160,1958920," a problem uh like this uh let me let me give it a try and there we go so we found the point of"
1958920,1965720," intersection with the screen perfectly and you know what's cool since it's procedurally generated that"
1965720,1971640," means i can change the screen i can make the screen a little bit far away and that point in here is"
1971640,1976680," automatically recomputed so it was actually kind of a dumb idea i should have not changed the screen i"
1976680,1985320," should have changed the uh the position of p right there we go so as you can see i can change it however"
1985320,1993320," i want and the projection changes accordingly right so i can make it like three and it in fact changes so"
1993320,2001960," it recomputes everything right so if i want to adjust some things um you can just do that and everything"
2001960,2009240," automatically is recomputed um so that's pretty cool um but it's not particularly it doesn't really"
2009240,2016040," demonstrate how 3d projection works right for a 3d projection it would be nice to actually have like"
2016040,2021240," at least two points in here right so this is one point how about the second one let's actually put the"
2021240,2029160," second one onto the onto the axis so this is going to be p1 and this is going to be p1 prime right so"
2029160,2038040," let's actually make p1 p2 the same as p1 but with the negative y right so basically they will form some"
2038040,2044760," sort of a line if you know what i mean uh right so this is going to be the same but py is going to be just"
2044760,2052520," minus and this is going to be called p2 uh right so as you can see it is now located in here uh right"
2052520,2061880," so and that means um we also need to draw a line of course but this is going to be minus py uh there we"
2061880,2067240," go so here is that and in terms of projection in terms of projection we're also going to copy paste"
2067240,2073800," this thing but p2 prime is going to have a negative y right so that's the whole difference"
2074440,2081960," and so you can imagine that you have some sort of like a 3d object uh 3d object and this is how"
2081960,2089080," it looks projected onto the screen with your eye located in here so i'm going to show you something"
2089080,2098200," interesting right so look how the projected image changes as i change this 3d object uh behind the screen"
2098200,2103640," right so if i make it like a little bit far away this is how it changes"
2104120,2110120," and now i'm going to make it a little bit closer"
2110120,2123800," so it creates a very interesting effect the claw the more far away the object is the closer it is to the"
2123800,2130120," center and you you know you've noticed that when you look at the world the more far away the object"
2130120,2138840," like uh actually appears the more to the center it is right so they all sort of vanish at the center so and"
2138840,2146040," now if i like increase the z from the screen yet again you can see how these two dots approach the"
2146040,2152840," center they all send like vanish at the center and this is precisely what creates this 3d effect"
2153960,2158200," you can clearly you can clearly see that and it's actually kind of cool that you can almost interact"
2158200,2166680," and we'll just play with that thing uh right so what's funny is that what's funny is that"
2167800,2177480," while we were drawing this diagram we basically reinvented that formula we already using that formula to draw the"
2177480,2186680," diagram so we can just go ahead and copy paste that formula essentially uh right so"
2188200,2200680," um the formula to find uh let's say p prime uh specifically y right so this is going to be aligned"
2200680,2210760," so here it is um essentially um you have py right so let's actually quickly replace uh py with p underscore y"
2210760,2222600," so this is the first one uh then we replace y with e y this is that one p z p underscore z"
2226520,2234120," i z e z so i'm not sure about the screen z how are we going to denote that uh maybe it makes sense to"
2234120,2243720," actually call it s z uh right there we go and by doing that you effectively get uh p prime y or maybe you"
2243720,2255320," have to do it like this like p prime y there we go so um so here it is here is the formula but of course"
2255320,2261720," it probably makes sense to actually get rid uh of this dot uh we can actually bring this dot in here"
2261720,2268120," right and then we can use a fraction right we can do frack uh like so"
2268120,2280760," and get rid of this star so that's basically the formula right so where p is basically the point behind"
2280760,2289320," the screen uh everything e is the position of your eye and um s is the position of the screen in in z"
2289320,2296360," right because it's like it has only z right because it's a plane effectively so that that's the formula"
2296360,2304440," essentially what's interesting is that this formula really doesn't care um what's how you look at it"
2304440,2310520," right so we look from the side but uh now we want to do the same for x how do we compute the x well"
2310520,2318520," we look from a ball uh right like so so now this is x and we're looking from a ball uh and the formula is the same"
2318520,2325880," you just replace y with x right um so we're gonna just do it like that and i'm gonna clear replace"
2325880,2332200," y with x and this is precisely why i prefer doing math on a computer these days because i can just do"
2332200,2337800," that i have a similar formula it's just like you have to replace one letter with another one with the pen"
2337800,2344440," and paper i have to you know rewrite that formula and not forget to replace y's with x in on the"
2344440,2351080," computer and i have to think about that i just copy pasted it and just replaced it easy uh never have to"
2351080,2359320," make a mistake ever again all right and it's not even specialized software that's what's interesting"
2359320,2366520," so you can already do math way more effectively just by using computer without any specialized software"
2367480,2374600," without imagine what if i start using specialized software i'm gonna be unstoppable literally unstoppable"
2374600,2381640," i don't know what i'm talking about i'm sorry anyway so um this is the second thing so let's"
2381640,2390920," actually say formula to find um p prime right okay let's take a look so here here it is so maybe"
2390920,2397000," it makes sense to actually pull it uh you know into the um how is that called the system of equations i"
2397000,2402760," i don't know uh something like this and it's going to be cases i think that's how it's called uh right"
2402760,2408760," so it looks a bit compressed uh i'm not sure if introducing cases was actually very useful because"
2408760,2415400," it looks kind of small now uh so this looks a little bit bigger um that's fine"
2420680,2426200," okay so that's pretty cool so that's basically the formula uh you know what's interesting is that um"
2426200,2436440," we can assume your eye being always at the same place right which sounds kind of weird right so"
2436440,2442520," like you're supposed to move around if you're gonna assume that your eye is located in the same place all"
2442520,2449400," the time how you move around and stuff like that this is the trick in computer graphics uh you never move"
2449400,2455560," the viewer the player whatever you want to call them the player always stays in the same point"
2455560,2466600," you move the whole world right that's how you usually do that so uh if uh a player or a viewer have"
2466600,2472680," a particular position in space in a particular rotation within that space you rotate and move"
2472680,2480600," the whole world and then assuming the uh the player being at zero zero zero you just project on on their"
2480600,2486680," screen uh like spaceship in futurama yeah exactly so that's how you usually do graphics right you don't"
2486680,2493560," move the player you move the whole world because it's just easier right in in computer world right in"
2493560,2497480," the computer specifically in real world things work a little bit differently but who knows"
2497480,2506680," who knows like i heard i'm not a physicist but i heard that physicists say that the universe expands"
2506680,2516360," uh equally everywhere right so which basically so when you hear that the universe expands"
2516360,2523880," like what is the center with expansion it expands relative to what and apparently from what i could"
2523880,2533160," understand it expands everywhere equally right so at any point in the space you can see that point"
2533160,2537960," it expands relative to that point you move to a different point it expands relative to that like"
2537960,2546040," it expands everywhere simultaneously it's like you're blowing a balloon right you inflate in the balloon and"
2546040,2553640," each point on each point on that balloon they are getting apart from each other equally right this"
2553640,2561640," is what i understood i'm not a physicist i might be wrong but again right so to sort of like demonstrate"
2561640,2566760," these similarities between like computer graphics right uh where you move the whole world right"
2566760,2573080," uh yep you're right oh you you mean you're a physicist you know that okay that's cool we have actual"
2573080,2577720," physicists in here"
2577720,2588600," it's semantics only because it does not really matter if you have world matrix or user i don't really like"
2588600,2599720," to think in terms of matrices uh when i do graphics i think mattresses only obscure things right because"
2599720,2607320," mattresses what do mattresses what do mattresses do the mattresses are a way to encode operations on vectors"
2607320,2614040," like in computer graphics at least right so they are a bunch of operations already compressed"
2614040,2619320," and encoding encoded for you into this little small black box that you don't have to understand"
2619320,2627880," right and in fact you can do everything the mattresses do manually without the mattresses you can basically"
2627880,2633000," decode all of these separations that are compressed and encoded into metric and just do it yourself"
2633000,2640600," the only thing mattresses do is that they make it concise but at the same time they make it obscure"
2641240,2647960," so when you're learning things they kind of stay in your way right so and that's why i don't really like"
2647960,2655480," them when i like studying things because i don't like this abstraction you know what i mean right so"
2655480,2662760," it's like i i want to learn how do i project a thing on the screen i start google that and like everywhere"
2662760,2668120," i go they tell me oh just take this little black box and just put it into your program and don't think"
2668120,2674600," about it i don't understand how the black box works like can we talk about that no no no this is a black"
2674600,2679400," box a smarter people than you already came up with that don't question it just put that black box into"
2679400,2686040," the like i want to learn things that's why i don't like mattresses like when i learn things they are useful"
2686040,2691160," when you're actually like doing production stuff and stuff like that but when you're learning they're just like"
2691160,2698600," obscure so much stuff from you it's just insane it's like you want to learn how to do things and like everyone"
2698600,2704440," tells you oh just use this library don't understand how it works just just use it don't question things"
2704440,2713080," am i the only one like that i feel like i'm weird because everyone just chooses the path of just memorizing"
2713080,2718920," all of these mattresses without understanding how they work and just like call it a day um maybe i'm"
2718920,2729800," just weird um oh the same for you yeah it's actually pretty cool um because like i do not undermine the"
2729800,2737160," usefulness of mattresses i do think that they're a good way to compress and encode um you know operations"
2737160,2744360," on vectors but that is useful when you actually want to compress and encode operations and vectors"
2744360,2749160," when you're learning those operations that's like the opposite of what you want completely opposite of"
2749160,2751160," what you want um"
2751160,2763720," anyways i'm sorry i'm renting again keep renting and renting and renting okay i feel like i feel really old"
2763720,2776280," i think i'm getting older anyway um q all right so as you can see in here i is located at zero zero zero"
2776280,2784760," right so we can even uh you know do know that like so so uh i is located at zero zero zero so now look"
2784760,2793400," here's the i um here's another i i'm not sure if i can like you know uh maybe like this so here's the i"
2793400,2799800," another i another i another i another i another i another i if you replace all of them with zeros"
2799800,2807880," what you're gonna end up with so uh let's quickly try to do that so maybe i'm gonna actually do it like this"
2811480,2818600," if we assume that uh e is equal to zero zero zero zero and then i'm gonna put a line"
2818600,2828520," and then i'm gonna query replace e underscore i actually want to query replace with a regular"
2828520,2836680," expression e underscore and just a single layer in here and i want to replace all of that with zero there we"
2836680,2845720," go so a boom cool so this is what we have which means that we can quite easily get rid of all of"
2845720,2850280," the minus zero like so and all of the plus zero"
2850280,2858760," like though i mean okay so it didn't work for some reason so i can just put it like that uh there we go"
2858760,2863560," so this is what we ended up with and of course it probably makes sense to get rid of all of the"
2863560,2872520," parentheses can i just like get rid of them like so and boom boom there we go so the only thing that"
2872520,2879320," matters in here is the uh basically position of the screen but we can assume that uh position of the screen"
2879320,2890920," is one right uh let's say and s z is equal to one uh we can query replace s underscore z with one"
2890920,2898920," and this is what we end up with all right so this is one and as you know if you multiply by one you end up"
2898920,2906680," with the same value so this is basically the formula for projecting the point onto the screen"
2906680,2923640," okay uh so essentially if you assume that your eye is located at 000 and the screen is in front of you"
2923640,2931720," with the distance one and all the objects are behind that specific screen you can project them onto the"
2931720,2937640," onto the screen with just this with different parameters the formula may be a little bit different"
2937640,2945160," but in that case just use this formula right just use this one uh and um opengl uses normalized"
2945160,2953480," coordinates meaning that the objects are expected to be located in minus one one uh in x minus one"
2953480,2959480," one one and y and i think in terms of z they're expected to be located at zero one right we can"
2959480,2965800," do the same right so essentially we can just locate objects in that specific space uh we can shift that"
2965800,2972440," space behind the screen project whatever head onto the screen and we can take the projected points and just"
2972440,2983320," render them on the screen um and some people say that rendering is hard is just division yeah so actual"
2983320,2990600," rendering is rather easy it's understanding how to come up with this formula is hard right so first"
2990600,2997720," you need to just draw this entire diagram and put some objects behind the screen and see how you can"
2997720,3003720," project and you need to notice that this is a line and projecting is effectively finding a point on the"
3003720,3011480," line knowing x so in this case we know the x we just need to find the y of that of that thing and to do that"
3011480,3020600," you just use the usual uh line formula and eventually you just end up with this thing uh so yeah that's"
3020600,3027320," basically what we have so maybe i would like to uh clean up this thing a little bit because so for"
3027320,3035000," instance here i have p1 and p2 but here i refer to just p and p prime so i would like to say something like"
3035000,3057880," um when uh when uh when we refer to p uh p we mean either p p1 or p2 and the same goes for this one when we"
3057880,3070040," refer to p right so essentially when i say p i mean either of these points right it doesn't"
3070040,3075960," matter which one so either of them uh so i think that's quite important and another thing i need to"
3075960,3093720," say is that um let's say that p prime should be equal to p uh prime x and p uh prime y this is the"
3093720,3103800," things that we're trying to find and the um z for that point is equal to the z of the screen so we can just"
3103800,3115960," say uh s z right there we go okay so that's basically all we have uh so this is the p prime"
3115960,3121960," so uh the follower is zero seven thank you so much for which prime thank you thank you thank you for p"
3121960,3133960," the formula the formula to find p prime is this one uh if we assume that that and that we end up with this"
3133960,3141800," entire thing so that is pretty freaking cool uh you know what i want to do i want to go ahead and actually"
3141800,3148040," commit this pdf for anyone to like study and play with um all right"
3148040,3157880," so introduce 3d projection white paper oh my god this sounds so fancy"
3157880,3165800," like i feel like i'm a some sort of like a scientist who writes white papers and publishes them to the"
3165800,3170760," internet this is so freaking cool it's not cool i think it's very cool right"
3170760,3179080," so it gives me this sense of validation right so it feels like i'm doing something useful for the"
3179080,3188760," humanity uh in fact i'm i'm not but i mean anyway so if you wanna read this pdf right you can find it in"
3188760,3194120," here so uh here with this and of course there's a tech file right so you can also play with that so i'm"
3194120,3201800," gonna put it in here uh there you go there you go there you go so this is how you project onto the screen"
3201800,3209640," and in fact as far as i know like opengl does basically that right so yeah so in open gel you have"
3209640,3214520," to project yourself yeah yeah so in modern open gel you have to project yourself like i remember that in"
3214520,3224440," open gel 1.0 you could say okay use the special projection projection matrix that that is built"
3224440,3231080," in into open gl and it will just do all of that stuff for you automatically i remember that in open"
3231080,3237480," gel like starting from two or three you just have to do all of that in the vertex shader yourself so yeah"
3242360,3252680," and i remember when i discovered that i was so freaking upset in fact open gel 2.0 is the"
3252680,3259640," most disappointing thing compared to open gel 1.0 because for the sake of control"
3259640,3268680," they basically got rid of everything good from open gel 1.0 right i really liked how the first version of"
3268680,3274760," open gel just does everything for you automatically you could just like initialize this library and"
3274760,3281800," there you go you can do 3d it's just like you do 3d open gel 2 you have to do so freaking match to just"
3281800,3288040," render a cube it's insane it's just like shaders compile shaders projects things around like why do"
3288040,3293960," i have to do that it was so nice i could just initialize it and have a cube it was so cool but"
3293960,3299640," they get rid of that because you need control you need to find control you need to be able to control"
3299640,3307480," each individual pixel if you don't want this kind of control just use the engines that smarter people"
3307480,3312520," than you created and shut the up so that's basically what the industry constantly tells me"
3312520,3314440," i'm sorry"
3314440,3321000," it's it's it's it's fine i'm just i'm just half joking"
3321000,3323640," anyway"
3326360,3333400," so let's actually try to play with that idea right so let's create a simple program that just"
3333400,3340360," creates a bunch of points in 3d space and projects them onto the screen and maybe animate that and see"
3340360,3347080," how we can turn that into like a solid triangle uh right so let's create maybe separate folder i'm"
3347080,3352440," going to call this uh 3d approach all right so i'm going to do that in a separate folder in here because"
3352440,3360840," i'm going to be experimenting with things and uh let's create main.c right so let's do include stdio"
3360840,3372440," and i'm going to do main and i'm gonna just do uh printf hello world right i'm going to claim"
3373160,3378280," enable all of the possible warnings and i'm going to just try to compile this entire thing"
3378280,3382760," and if i run this entire stuff as you can see it says hello world i forgot a new line"
3382760,3390440," uh okay so we have a pretty cool thing uh right so as i already said we have demos"
3390440,3398200," all right uh so i can do triangle sdl and this is how demos look like right so all of this stuff is"
3398200,3404520," rendered using the the graphics library but on top of the grass of graphics library we uh i developed"
3404520,3411880," a special thing that makes it easier to compile and like create demos which is called vc or virtual"
3411880,3418760," console essentially what you have to do you have to include the vc which also include elevates um you"
3418760,3426760," create uh the the canvas and you create the method to render you just render everything into the pixels and"
3426760,3435960," you return um the canvas from the render and everything else is done by this uh thing automatically"
3435960,3441000," everything absolutely everything and this is actually kind of cool let me let me let me show you"
3441000,3449240," so uh it's it's so freaking cool that i'm thinking i should make this a separate library as well or maybe"
3449240,3457800," included into the main library it's kind of funny how like the auxiliary library just for the demos"
3457800,3463880," looks more cool than the library itself that i'm developing which is kind of kind of weird"
3463880,3471080," uh but i'm going to show you anyway so in this case you don't even have to have um um any entry point"
3471080,3477640," right right so what you have to do you have to include uh vc dot c right but it's located somewhere"
3477640,3488280," here right it's located at demos uh right so then uh we're going to create olivet um canvas render and we"
3488280,3497000," accept delta t so it does animation right it creates animation and it actually uh provides you delta time"
3497000,3502680," basically the period of time uh between the frames in seconds and it's flow that means you have a"
3502680,3509320," fractional part of the seconds uh so let's actually define the size of the canvas for ourselves"
3509320,3514360," all right so this is going to be height and let's allocate this entire thing so it's going to be"
3514360,3523400," pixels uh width multiplied by height so width multiplied by height so let's create a canvas super quick uh"
3523400,3534520," oc olivet's uh canvas so i provide the pixels then width and height then stride right and then i return"
3534520,3541960," this entire thing so let's actually uh fill it up with something uh fill oc and let's fill it with a"
3541960,3550120," gray color like so cool so i don't have to do anything else i literally don't have to do anything"
3550120,3557320," else what i have to do i have to compile this entire thing right so but it cannot find the olivets uh anywhere"
3557320,3565000," so what i have to do is maybe put uh like improve the include path right so i'm going to put include"
3565000,3572600," path in here uh okay so you also have to define the platform macro like for which platform you want to"
3572600,3579800," compile this demo right and there are three platforms like watson sdl or terminal uh right so what i'm going"
3579800,3588280," to do i'm going to provide the platform uh platform um sdl i want to do sdl platform but if i'm if i'm"
3588280,3595320," going to be doing the sdl platform i also need to link with sdl so let's quickly do that as well uh link"
3595320,3604120," sdl2 there we go and as you can see it created a window uh but now all right so i don't use uh the t so"
3604120,3612440," i can actually put uh the team here uh i can for instance uh render a circle right at the center"
3612440,3618360," the center is located at here um and the radius is going to be let's say 100 and the color is going"
3618360,3625240," to be something reddish right so let's actually quickly do that uh and there you go so as you can see"
3625240,3631960," it works um so and it automatically will adapt it for different platforms uh let's actually create"
3631960,3641720," build sh right so a script that will build everything for us being sh and in uh uh in here we're gonna"
3641720,3649000," copy paste this thing right so i'm compiling this thing for sdl but now i can try to compile it for"
3649000,3654520," the terminal platform right so this is gonna be the terminal but in that case i don't need sdl so let's"
3654520,3661240," actually try to uh build this entire thing so i need to make this stuff executable uh build this edge"
3661960,3668920," there we go so if i'm gonna be compiling for terminal platform i need to say how much is gonna be"
3668920,3676920," scaled down right because for the terminal we need to scale the image down a little bit because otherwise"
3676920,3681560," it's it's not gonna fit for the terminal because the resolution is too high uh do you have a terminal with"
3681560,3689560," like 800 uh characters white that's a huge freaking terminal right you need to scale it down uh how"
3689560,3695480," much we're gonna be scaling it down uh let's actually scale it down by maybe 20. so it has to be the number"
3695480,3702120," that is divisible by both width and height right so that's has to be a thing uh right so it seems to be"
3702120,3714760," working and now uh this thing should work in the terminal as well so uh so if i go to 3d approach um"
3714760,3720840," oh i just realized that for the terminal i forgot to give it a special name"
3722280,3731400," right so it's called both sdl right main term so there we go so this is this is the thing right"
3731400,3738840," so this is literally the same code this is literally the same code it's just like it allows you to render"
3738840,3746760," in terminal or in sdl uh right and in fact right so the demos that you have in here like for instance this"
3746760,3755080," one uh build squish squish right so this is the demo that i have in here uh there is a version for the"
3755080,3762840," terminal and it's done automatically so this this kind of stuff is done automatically right so and i'm"
3762840,3769480," saying this library for demo is cooler than the graphics library itself to the point that i'm actually"
3769480,3776440," thinking maybe i have to merge them somehow uh right so because it's kind of cool it's it's kind of like"
3777480,3787800," love 2d but as a single file and for c you know what i mean so there is this love 2d game engine"
3787800,3797640," which is basically like a distro of lua sdl bindings some box 2d bindings and you know some like common"
3797640,3804040," libraries for game developments like all of that glued together duct tape together and called an engine"
3804840,3810680," that's basically what love 2d is right and to create a game you basically specify three methods"
3810680,3817240," like render update and some stuff for handing the uh the input and it just does everything for you"
3817240,3826440," automatically it kind of i did kind of like this but for c and as a single file which is kind of cool"
3826440,3831560," right and it's way simpler than love to do of course so it's way simple"
3831560,3836680," uh and on top of that these things you can compile to web assembly can you compile love to do to web"
3836680,3842200," assembly and is that the thing that is supported for love today so the game distribution"
3842200,3849480," uh because i was as already said you can compile all of these uh all of this stuff for"
3849480,3854840," web assembly it will work in the browser like this for instance as you can see all of that stuff works in"
3854840,3866200," browser uh so web assembly distribution for the web oh i remember how does that yeah essentially there"
3866200,3873800," is like a single bundle for love to d that is interpreted by the runtime and what they did they"
3873800,3880520," just implemented like the interpreter for browser right so we can take the same love file and just put it"
3880520,3887960," okay i see i see what they did and kind of man anyway i mean it works so who cares"
3887960,3893000," anyway i'm not saying that it's it's a bad thing or anything it's just like not my thing"
3893000,3902680," uh all right so let's introduce a bunch of vectors right so since we're going to be projecting 3d to 2d"
3902680,3907720," it would be nice to maybe have a definition for these vectors right so let's have a vector 2"
3907720,3914280," float x and y right so this is a 2d vector and let's have a 3d vector"
3914280,3922680," so um i don't know i i kind of like following the terminology of jai and in jai there is types"
3922680,3930840," vector 2 and vector 3 and on top of that you also have methods make vector 2 which accepts float x float y"
3932200,3944200," all right and essentially what it does is vector 2 v2 v2 x x y y and just returns v2 and maybe"
3944200,3955880," we can copy paste that stuff can your pen and paper do that can your pen and paper do that i don't think"
3955880,3968360," so you can't copy paste on the paper uh imagine being a pen and paper friend in 2022 cringe bro truly cringe"
3968360,3972760," uh you can't even create a place on paper"
3974520,3980680," okay so this is gonna see there we go uh so"
3980680,3989240," you know what i think i want to make a small break before i continue developing this thing and just make"
3989240,3996040," a cup of tea right so let's make a small break and make a cup of tea um all right so let's go ahead and"
3996040,4003640," implement this thing right so we have uh 2d vector and 3d vector so the thing we need to do we need to be able to"
4003640,4014840," project a 3d vector to 2d space right so let's call it project uh 2d 3d i guess i guess it's a good name"
4014840,4021560," so we're gonna accept uh vector 3d uh and then uh it's going to return vector 2. and as we already"
4021560,4031000," determined uh where's my paper where's my scientific paper that i've wrote where is it uh here it is i need to open it"
4031000,4032200," um"
4032200,4041080," right according to that paper that i wrote in front of you we just have to take the x and y"
4041080,4044520," coordinates right and just divide them by z right that's what we need to do"
4044520,4054200," um okay so but we have to be careful uh when um z becomes zero this is actually rather"
4054200,4065240," interesting look look this formula is not defined when p z is equal to zero so p z is equal to zero"
4067400,4077080," is when it is at the same place as i it's kind of interesting right if we are sort of modeling the"
4077080,4082440," physical process here where you have an eye you have a screen and you have an object behind the screen"
4083080,4089720," and we have this simple mathematical model that describes that process if you take an object and"
4089720,4096280," stick it to the eye that specific case is not defined and leads to division by zero"
4097160,4102840," right if you have an object and it just goes into your eye that's division by zero which is kind of"
4102840,4110360," funny if you think about it uh right so it like division by zero not being defined has some sort of"
4110360,4120680," sort of interesting meaning uh right it cannot be seen anyway yeah what's interesting is is that if"
4120680,4128840," it's negative uh i guess it just gets reverted yeah it kind of gets reverted uh wearing contacts"
4128840,4133560," is dividing by zero but it doesn't go inside of the eye inside of the eyeball"
4140360,4145320," the other in my hero thanks for adding compiler regex to jammer they're kind of broken actually"
4145320,4152040," so it can only parse the first error message but if there's two of them the second one is"
4152040,4160280," up all right so feel free to fix it i'm not really i didn't look into how to fix that but yeah"
4160280,4165240," so you can only parse the the the first one they kind of up that regular expression anyway"
4166040,4176040," so excuse me we need to take v3 x and effectively divide it by uh z uh right and the same thing we"
4176040,4186200," need to do with y right and we're going to have this thing there we go you know what's funny after"
4186200,4193080," we projected this entire stuff right after we projected this entire stuff on the screen"
4193720,4202680," we're cannot just put that on the like usual screen right so because the points the values of the points"
4202680,4208600," are going to be from minus one to one from minus one to one right so because we're going to be using"
4208600,4210680," normalized coordinates like in open gl"
4210680,4219640," so another thing we need to do we need to be able to project"
4220440,4228040," that 2d point onto the actual screen device right and the screen device has a completely different"
4228040,4236040," coordinate system right at the left top corner it has zero zero and the y coordinate goes down"
4236040,4241800," which is like completely different from how we mathematically modeled all of that so what we need"
4241800,4249000," to do we need to take this normalized d coordinate and map it to the screen right otherwise we won't be able to"
4249000,4256600," properly render it uh right so this is going to be v2 and this thing should be in in screen coordinates and"
4256600,4266920," yeah that's that should be fine so um here's the thing so we have vx which is uh within the range of"
4266920,4274680," minus one two to one what we need to do we need to turn it into the range of uh from zero to width"
4274680,4281800," of the screen um okay so how are we going to be doing all of that well we can basically add"
4281800,4290040," okay so i'm going to put equals in here equals in here and here i'm going to say this is what we want to"
4290040,4299080," achieve but what this is what it's equal to if i add one to x its range is going to be from zero to two"
4299080,4307960," right it's from zero to two then what i can do i can divide this thing by two and i'll map it to the range"
4307960,4316680," from zero to one and after that i can multiply it by width and i'll get a range from zero to width there"
4316680,4325560," we go so this is what we've got uh so this is the first uh thing that we need to do in here okay uh the"
4325560,4336440," next thing is uh y y is from again minus one to one but what we want to have is uh from zero to height"
4336440,4342840," but it's kind of interesting it's kind of tricky because uh y points at a different direction so at"
4342840,4348920," some point we'll have to invert it if you know what i mean right so we can do the same thing plus one uh"
4348920,4355560," divided by term which will effectively turn it into a range from zero to one right after that we can"
4355560,4365240," invert it right minus one which kind of turns it into a range from one to zero and maybe that's"
4365240,4371400," precisely what we want actually achieving here we want to do from minus one to one to from that to that"
4371400,4376040," but it's kind of looks looks weird and not mathematical right because we have a bigger value at"
4376040,4381400," the left which is kind of anyway but that's the way we indicate that we're inverting this into anything"
4381400,4388920," and then if we multiply it by height this is precisely what we'll get in here okay so here are"
4388920,4397400," two points two two coordinates right so we map that to the screen so and this is the stuff that can be used"
4397400,4403160," as a center for the circle to indicate uh the the point right that we projected onto the screen"
4404680,4414120," okay so let's try to draw a triangle at some at some place right um so the triangle where the triangle"
4414120,4423640," is going to be located so uh at screen at one we have a screen and um we're gonna say that all of the"
4423640,4432600," objects have to fit from one to two right they all have to fit somewhere here from one to two so let's uh"
4433240,4441160," put a triangle in the middle of that so it's gonna be 1.5 this is where it's gonna be located 1.5 so i'm"
4441160,4450600," gonna even put some sort of like a z uh 1.5 this is where it's like so now let's create three points"
4450600,4462040," so vector three so a make vector three um so let's actually define two legs right so two bottom legs"
4462040,4471000," minus five minus half and minus half at the same z so this is the left leg the right leg is positive x"
4471800,4479560," and then at the center we have the sort of like head it's located at zero uh but here we're gonna have uh"
4479560,4489400," you know half so these are three points right these are three points what we can do with these three points"
4489400,4502520," is essentially project them to 2d project to uh 3d 2d right we just projected that just projected it"
4502520,4508600," then after we projected this entire thing we need to project 2d onto the screen"
4510280,4517960," there we go so and in here we have like you know this kind of stuff cool so we projected this entire"
4517960,4525480," stuff so now we may want to draw uh three points let's actually go ahead and draw three points uh in"
4525480,4536600," olive c olive c what is it called circle right so this is going to be circle uh-huh so this is oc the"
4536600,4543480," center is going to be ax a y so vector is actually flows but here we accept integers but that's fine"
4543480,4549240," because it's going to be converted uh to integers anyway uh here i'm going to put like 10 and the color"
4549240,4554680," is going to be something like uh let's put red because why not this one is going to be"
4555800,4564680," b and this one is going to be c there we go so if i try to compile this entire thing it does not compile"
4564680,4569400," why because i forgot to return this entire thing but that's fine because i'm using"
4569400,4575320," statically typed language which just tells me the thing that i have to do so uh 3d"
4575320,4584440," okay why did i call this 2d 3d i want to do 3d 2 2d there we go so it's the other way around"
4585000,4592200," q so now after that i probably also want to actually indicate what exactly am i building"
4592200,4597000," right so i need to trace this entire stuff cool as you can see we build sdl and we build term"
4597000,4603960," so uh now i want to start this into i think and as you can see we have three points"
4603960,4614520," it's kind of difficult to see that they're in 3d space but trust me they are in a 3d space projected onto"
4614520,4626120," this screen trust me source trust me bro uh so we can try to do some interesting things right we can"
4626120,4633400," try to do some interesting things for instance we can uh animate um z axis right so as you can see z we"
4633400,4642920," put it like somewhere in the middle um between between the screen and the far uh far surface for"
4642920,4649480," cutting surface so we'll put it somewhere here we can try to basically make it closer or more far away"
4649480,4658600," right so we can animate it like that um so let's do the following thing so we can animate it according to the"
4658600,4662360," time but to animate it according to the time we need to keep track of the global time"
4662360,4669400," uh global time equal to zero and it's actually rather easy so every time"
4670360,4675240," we render the next frame we just increment the global time uh variable and we have the current time"
4675240,4680840," so"
4684120,4691960," after that um after that um we can take that global time and we can use it as an angle for the sign"
4691960,4703880," and that gives us a value that fluctuates from minus one to one right which is kind of kind of important"
4704600,4716120," um so if we try to literally add this thing to here uh if sign f becomes minus one it will go below one"
4716120,4724920," it will go below one below one uh and uh it go you know in front of us it basically will pop out of the"
4724920,4730840," screen um so thank you so much anonymous for gifting tier one substitute sodding loves rust thank you thank you"
4730840,4739080," thank you um so essentially what we want to do we want to maybe multiply that by half and when you"
4739080,4747080," multiply it by half the range is going to be minus zero five zero five so that means the uh one of the"
4747080,4752760," the closest it will go it will go right at the screen uh which is not ideal we probably want to actually"
4752760,4758840," multiply it by 25 right in that case it's going to fluctuate like you know in a quarter from minus"
4758840,4769000," 0 25 to 0 to 0 25 so i think that's a rather good way to do that so let's do build dot sh and let's"
4769000,4775160," just run this into i think so okay we're starting to use math which means that we probably want to link"
4775160,4788600," it with math library as well uh okay as you can see it is fluctuating which is okay i suppose maybe"
4788840,4796440," it should actually go from zero five so maybe it's it's actually not enough maybe it's not enough"
4796440,4800120," uh predator aim yeah"
4800120,4809640," so here is an interesting uh like the effect that i was talking about we're moving this thing in z axis"
4810280,4817320," further away further away closer away like right so basically just like moving it in front of you"
4817320,4823000," and the farther away it is the more closer to the center these points become"
4823000,4832040," right and which is precisely the effect i was talking about uh when i was writing the paper right uh so let's"
4832040,4842760," take a look so if i go to to here right and let's let's do it like that um where is p"
4845240,4856040," and for instance i can change it to five right and then pdf uh 3d projection attack right so"
4856040,4863560," as you can see it went a little bit further but this thing uh went closer to the center right so we"
4863560,4872600," change them to three uh they actually go from the center right so the more far away the more it vanishes"
4872600,4879880," at the center and this is precisely the effect we can see when we're actually trying to render 3d"
4879880,4889880," so that's precisely that effect you see so like in the paper i demonstrated that in like one dimension"
4889880,4895000," here we have this effect in two dimensions and by two dimensions i mean the dimensions of the screen"
4895720,4901800," right it's it's literally the same effect here we have it animated right which is rather cool i think"
4901800,4911080," i just personally find it cool uh right i know such a simple math um but it's kind of cool anyways"
4911080,4919080," anyways anyways anyways anyways but it's not really that interesting it doesn't really look like 3d or"
4919080,4927160," anything like that right it would be interesting if it was actually rotating in front of us right if i"
4927160,4934520," had it like a pivot of rotation pointing up like a y axis and it was rotating around that pivot you know"
4934520,4942040," what i mean so it'll be kind of interesting like that right so let's actually try to do that uh let's try to"
4942040,4953720," do that so let's maybe keep uh z as it is or maybe not actually maybe maybe we can rotate it and also"
4953720,4959800," change the it's so complicated we can edit later right so this is going to be z and uh let's introduce"
4959800,4966360," the angle of rotation for that triangle and it's going to be it's going to be literally global time so that"
4966360,4982840," means it doesn't really matter okay so let me think so since i'm uh animating the first two legs okay so"
4982840,4995000," here we have uh two legs uh in terms of y those legs are located in here at the same place right they're"
4995000,5001560," located at the same place but then what we're going to do we're going to use x as x we're going to do"
5001560,5012120," cosine global time right so this is a single time we're going to do z as uh y uh sine f global time"
5013400,5023640," right and it's going to basically rotate around zero zero but we want it to rotate uh around this thing"
5023640,5034200," okay um all right that's pretty cool uh so i'm gonna actually no no i'm gonna actually keep this in here"
5035080,5045640," uh so the second leg uh the second leg is going to be the same except it's going to be 180 degrees"
5045640,5054760," lagging meaning that i need to add pi uh all right so i need to add pi uh let me define quickly pi"
5057640,5062840," there we go uh can i just copy paste that stuff thank you thank you so much"
5062840,5068920," all right so that should be fine actually so let me try to run this"
5070520,5078360," okay that is that is rotating in a really strange way right uh"
5078360,5088120," but it is rotating it is rotating nonetheless um so effectively that's so weird"
5089640,5098360," because it's around x oh this is because they're yeah i see because they're too big uh one of the"
5098360,5105880," things we want to do in here we probably want to multiply it by like zero five uh zero five"
5109320,5115000," and you think that should make it a bit better uh yeah there we go"
5115000,5123080," so the triangle is kind of rotating around this like single axis we can clearly see that"
5123080,5131720," uh all right that's pretty cool and now since we have these three points right since we have the three"
5131720,5138040," points instead of drawing the circles we can literally just go ahead and do the triangle because"
5138040,5146680," we have a thing that allows you to render a triangle uh where is that over that triangle triangle"
5146680,5151320," yeah there we go so let's actually use this stuff"
5151320,5164200," so this is oc i wonder if i can do the following thing so i'm using numbers in here which means"
5164840,5171960," that it probably makes sense to rename this stuff to p1 p2 p3 so it's a little bit easy to"
5171960,5182360," use emacs magic for me like so and let's do the following stuff 18 18 ff"
5187080,5192440," and as you can see we have a triangle which is rotating so there's some warnings in here which i"
5192440,5199160," probably want to fix uh so the warnings come from the sine and cosine not being defined uh let's actually"
5199160,5204520," quickly define them i should probably include math uh header but i don't want to include it because i"
5204520,5209720," want to try to compile it in the um in the wasm environment in the wasm environment which usually don't"
5209720,5216200," use standard library um right so let's quickly do that i don't remember if i have to provide"
5216200,5222680," something in here i don't know let me see seems fine okay so it doesn't complain about anything"
5222680,5229160," that's pretty cool and as already mentioned our sort of like library allows you to also run it in"
5229160,5235640," the terminal if you want to right without like any any problem or any additional coding you can just"
5235640,5241320," take the same thing and you have a 3d rotating triangle in terminal it's it it's the same code"
5241320,5250680," isn't it cool i think it's pretty cool just like you have a rotating in 3d triangle uh in your terminal"
5250680,5256040," oh anyway so"
5258040,5272760," okay okay um but here is another thing recently we implemented uh triangle 3 which actually accepts"
5272760,5283240," three colors what if we use triangle 3 and just try to render a rainbowish triangle how about a little bit"
5283240,5290920," the way a rainbowish triangle right you know the opengl style rainbow triangle"
5290920,5304040," let me see how is it going to look like this is not opengl this is not opengl this is not opengl this is"
5304040,5312920," not opengl this is entirely on cpu anonymous thank you so much for gifting this up to sell cellophane"
5312920,5320120," one one one five seven eight and it looks like 3d it's like rotating as you can see it's like if you"
5320120,5328840," track the color of this angle it stays red it's like a raid actually feels like it's rotating uh that's so cool"
5328840,5342440," that's so freaking cool and again it's not opengl we render this triangle pixel by pixel on cpu on the freaking cpu"
5342440,5349880," that's so cool that's so cool and we basically reinvented and understood we didn't just use the"
5349880,5357480," map as a black object we implemented and understood the whole map that goes into doing this precise thing"
5357480,5363960," and since we're doing that pixel by pixel yet again we can run it in the terminal in a terminal we don't"
5363960,5364920," really have colors"
5364920,5372280," or do we which is actually a good point we can actually introduce like a course with the antsy"
5372280,5378360," let me actually put it to do about that what the why didn't i try why didn't i do that okay demo vc"
5380920,5396200," turn platform uh char color to char um use antsy terminal colors uh for color to char like why the"
5396200,5400920," fuck don't we use cores in here like i mean terminals do support course we could have just like mapped that"
5401480,5405880," appropriately and make it even cooler um so yeah"
5405880,5414520," it's pretty cool uh thank you so much for for the gifting subs valiany thank you so much for gifting"
5414520,5422920," sub to mr bodka and real vassala thank you so much for twitch prime um this is a perspective projection"
5422920,5429800," right at the beginning of the stream we basically reinvented it by just doing this math right you"
5429800,5435880," know so we imagine that we have an eye we have a screen and we have some points behind the screen"
5435880,5440920," we just connected the dots and we figured out that yeah this is the formula that we have to use and we"
5440920,5446360," just use this formula to project things behind the screen onto the screen and that's basically how we"
5446360,5454680," did that right we didn't use any you know matrices or any like magic that we don't understand every all"
5454680,5467000," the math was actually super straightforward um can you please scale final image by character aspect"
5467000,5472040," it's actually kind of difficult because i have no idea what font you're using"
5477320,5482040," i mean i can spend some time like figuring out what's the current font in the terminal"
5482040,5489480," or maybe there is a way to do that like i don't know is there any way uh in a terminal being a term"
5489480,5497160," like a console program to know the aspect ratio of the of the character is there any way i'm not sure actually"
5497160,5503160," so maybe there is if there is please let me know i'm gonna use that and i'm gonna implement that"
5504040,5510760," uh but all of that like the actual representation of the terminal seems kind of obstructed away from"
5510760,5516440," the terminal programs know what i mean it's just like the only thing the terminal programs can do is"
5516440,5521800," just like throw some some characters and hope that they look good but they don't really know how exactly"
5521800,5529880," they're gonna look so uh let me continue what i want you to do um what i want you to do"
5529880,5534280," yeah i want you to actually compile that to web assembly"
5534280,5540280," how can we compile it to web assembly uh let me see so this is a 3d approach"
5543080,5550600," so the way we compile to web assembly is just by saying the platform is going to be wasm and we're"
5550600,5554840," going to call it wasm we're not going to link it with math or anything like that because it's not"
5554840,5561000," particularly linkable and uh we're going to say that the target is going to be wasm 32 right if"
5561000,5568200," we try to compile this entire stuff how is it going to work okay so what does it say it's cannot link"
5568200,5575400," it with this ellipse library right because it's it's wasm but that's fine we don't plan to link with"
5575400,5581960," the lipsy so let's actually say no standard uh libraries right no standard libraries so what else"
5581960,5587240," do we have in here so it also complains that there is no entry point that's totally fine let's tell the"
5587240,5594200," linker that we don't want any entry point no entry okay what else do we have in here and that's totally"
5594200,5605160," fine right but the final wasm executable is actually 102 bytes 102 bytes so if we convert it to what"
5605160,5614360," right if we decompile it uh we'll notice that it actually contains nothing right so it only exports"
5614360,5620360," memory and a stack pointer and that is it everything else was illuminated because we haven't exported"
5620360,5629720," anything uh right so what we need to do is now tell the linker please export a render"
5629720,5640040," export render so we're going to try to recompile this in desktop i mean recompile this in desktop"
5640040,5647240," okay so and when we try to recompile that function that got eliminated is trying to use"
5647240,5653800," sine and cosine which are located in the math library but they're undefined in that case we can say okay"
5653800,5661480," linker allow undefined because those undefined functions are going to be provided by the javascript"
5661480,5668840," runtime anyway there we go and as you can see we compile it and now the final executable is 9.3 kilobytes"
5668840,5672760," which is kind of big we can make it a little bit smaller by optimizing for size"
5673400,5680120," right uh right and it's actually two kilobytes we can try to decompile it and see what it turned into"
5680120,5686120," all right and what we have in here and as you can see we have the render method we have the memory and"
5686120,5692360," stuff like that and everything seems to be fine everything seems to be fine right so essentially"
5692360,5698920," like how do you even run this thing in web assembly because it requires setting up an environment and stuff"
5698920,5706600," like that well there is for this sort of like a demo library there is a javascript runtime"
5706600,5715480," right so vc.js right you provide this javascript runtime and it just makes that demo work in browser"
5715480,5720440," as well right it just implements whatever is required for for that specific thing and it's actually"
5720440,5725960," good reminding me that i'll need heap base as well right so i need to export heap base and heap base is"
5725960,5735480," basically a name uh that tells the web assembly where you can start using memory because how c program"
5735480,5741560," compile to web assembly works like how it lays out its data so at the beginning of the memory it puts the"
5741560,5751480," data read only data then after that comes the stack that grows towards the zero towards the data and after"
5751480,5758120," that goes the heap and everything after the heap you can use that to implement for instance malloc if you"
5758120,5764920," do like dynamic allocations you can basically put that after the heap base and that's why this heap base"
5764920,5771960," that symbol is so important it tells the javascript runtime like from where it can start using memory of"
5771960,5777960," the of the web assembly right and it's quite important because uh what it needs to do sometimes it needs to"
5777960,5783960," allocate a little bit of memory and give a pointer to that allocated memory back to c so c can put"
5783960,5789880," something there so the javascript can actually extract it from there you see what i mean right so and to be"
5789880,5795720," able to do that it needs to know where it is safe to actually use the memory from from which point"
5795720,5802360," right and that that point is determined by a symbol called heap base it's basically global variable that"
5802360,5810680," locates like a pointer but from here you can use whatever you want um so i think you can even google"
5810680,5821080," more information about that if you do clang web assembly uh heap base so there is a pretty cool um article on"
5821080,5832520," that uh where you can find why is it in russian god damn it uh seems to be missing web assembly clang web"
5832520,5833080," assembly"
5833080,5837320," compelling c and run it"
5837320,5845960," if you can find that article it actually has a colorful background and stuff like that it's actually like"
5845960,5851000," that's the article everyone suggests to read when it comes to clang and web assembly but i can't find it right now"
5851080,5863480," because google doesn't want to show me that anyway uh so yeah so we need to export uh heap base"
5863480,5865720," right let's try to compile this into it yeah"
5865720,5874520," thank you so much for twitch prime thank you thank you thank you i probably don't see me correctly"
5874520,5878680," so and now if i take a look do we have heap base there we go we have a heap base and it's a global"
5878680,5883720," variable okay good uh now what i want to do"
5883720,5891880," so we compiled this thing properly into like was a module now we need to create html file because i"
5891880,5898680," mean if we run this stuff in in the browser uh so let's do the usual stuff right so this is html"
5898680,5905960," where is my html actually excuse me and there we go can i do stuff like this"
5907320,5914360," right right so this is going to be hat and then uh we're going to have a title and"
5914360,5926680," 3d triangle there we go then we need to have a body there we go so this is the body and everything is"
5926680,5935960," rendered into the canvas uh canvas and let's give it id app right so we created the canvas"
5936760,5944440," after that we need to include the javascript runtime for the virtual console and after we"
5944440,5952120," included the javascript runtime for the virtual console we say okay start demo at canvas app"
5952120,5959480," and use the was a module main dot wasm there you go so here's the canvas into which is going to be"
5959480,5966280," rendered and here is the module was a module that you have to use for the demo and it should start the demo for"
5966280,5971320," you uh okay so uh let me copy paste the javascript runtime"
5971320,5984920," and then i'm gonna start the browser uh http server 69 69 uh okay so the server is already running apparently"
5984920,5988920," uh let me find all of them yeah here it is"
5990680,5998040," uh so let's actually restart this into stf and if i open it in here uh something went wrong let's see"
5998040,6008680," what went wrong uh can it read property buffer all right that's very interesting uh at 66 so it doesn't"
6008680,6016520," have oh i accidentally typed something in there it's not a g memory it's not the gman uh all right there we go"
6016520,6023400," so as you can see it works in browsers so yeah uh so that's what's cool about this like a library for"
6023400,6033240," compiling demos it's yeah you have a single program and it just works in all these environments in sdl and"
6033240,6038040," anywhere so if you want to make it work in the browser you just supply the javascript runtime and it"
6038600,6043720," adapt everything for you as well i think it's even cooler than the original idea of the library what do you"
6043720,6043960," think"
6045960,6050520," uh i think i think i should merge these two ideas somehow i think it's kind of cool"
6050520,6059240," wonder what's the size difference with o2 i don't know why is that important okay"
6059240,6061320," uh"
6061320,6066760," specifically what we're compiling it to three different executables"
6067640,6072280," right so we do a lot of things in here um"
6072280,6078680," 2.5 anyway"
6078680,6083000," so what i wanted to do"
6083000,6092440," yeah so here it's cool and all everything here is cool and all but the problem starts to arrive"
6093640,6100040," when we have two triangles that intersect with each other right so let's actually try to create that"
6100040,6106760," it should be relatively easy to create such triangle uh right essentially"
6106760,6117800," let's create a second rotating triangle but lagging um 90 degrees right so let's actually do it like this"
6117800,6124440," i'm gonna actually put it uh here uh i can probably create a separate scopes"
6124440,6132840," right so we do not um you know pollute or shadow anything"
6132840,6144360," there we go so and how can we make it lag 90 degrees so 90 degrees is in fact pi or how much is it"
6146760,6153880," uh it's it's half of a pie yeah it's it's half of a pie so we can do pi and half so we can effectively"
6153880,6164920," add half of a pie to all of this stuff to make it lag 90 degrees right so and if we try to recompile"
6164920,6171640," all of this if we try to recompile all of this um okay so there's a floating point"
6172760,6182760," so it that means there is a division by zero somewhere let me find where um so let me put ggdb"
6182760,6191160," this is not what i wanted i wanted to recompile this thing thank you very much"
6192120,6201400," okay gdb main sdl and uh let's run it okay it's somewhere in mix call oh okay that's that's rather"
6201400,6204280," easy uh so all of it"
6204280,6217480," mix colors three so we got a situation where then is actually zero that's basically what we got well i mean"
6217480,6225640," we can do something like if then not equal to zero only then do this entire stuff otherwise uh return"
6225640,6231960," zero right so we can do something like that all right uh because if it's equal to zero there is"
6231960,6236680," something wrong in here and i'm not sure what exactly to even render there so what's what's the point"
6237480,6243240," uh okay so this is a wrong folder uh uh come on"
6243240,6246040," all right"
6246040,6255320," main sdl and as you can see it looks kind of weird doesn't it"
6255320,6264680," so they are not intersecting with each other why are they not intersecting with each other"
6265400,6268760," right they're supposed to be like yeah like a cross"
6268760,6273080," but they're not because one is rendered on top of another"
6273080,6282520," yeah so and how do you even solve that stuff so usually um when you have several triangles and"
6282520,6288840," you want to render them and you want them appear in the correct order you want to maybe sort them by z"
6290600,6294040," but here sorting them by z is not going to help you"
6294040,6300040," it's not going to help you it's just like one is always going to be rendered on top of another but you"
6300040,6306280," need to partially draw uh one triangle and partially draw another one how do you do that"
6306280,6314280," so this is very interesting because remember how in the previous streams we implemented triangle interpolation"
6315240,6321000," right so essentially on the triangle you can associate values with each individual vertex"
6321000,6325400," and as you render pixel by pixel you know how close you are to one"
6325400,6333720," vertex or another and based on that we compute the core of that pixel creating this beautiful gradient"
6335240,6343400," you can use this technique to associate any value with the vertex any value one of the values you can"
6343400,6352280," associate is z value right so for each vertex you know the z value of that thing and by using the in"
6352280,6360520," triangle interpolation you can compute the z value for each pixel and knowing the z values for each pixel"
6360520,6367240," you can actually compare how one pixel how pixel of one triangle is closer to you than the pixel of another"
6367240,6375720," triangle so this is called z buffering right and we're going to implement that but already on the next"
6375720,6381160," stream because i already streamed for two hours but this is basically like a uh you know sneak peek into"
6381160,6389080," what we're going to do on the next stream right so having triangle interpolation allows you to know"
6389080,6397240," a z value of a single pixel of a triangle not just a single vertex but like a single pixel i can pick a"
6397240,6403160," pixel on the triangle and tell what's the z value of that inside of the pixel using the triangle interpolation"
6403160,6409720," i can do that so that's the point of the barycentric coordinates that we were like reinventing on the"
6409720,6418360," previous stream um all right so yeah that's basically going to be on the next stream does anyone have any"
6418360,6425320," questions was today a cool stream by the way i think today was actually pretty cool stream i really enjoyed it"
6425320,6433160," defeating nvidia on cpu rendering pixel at the time yeah"
6435000,6440280," next stream when i don't know when i feel like it's uh yeah the schedule don't don't follow the"
6440280,6442120," schedule schedule is broken so"
6442120,6449880," for a moment i couldn't tell if it was rotating right or left it's like one of those"
6449880,6458280," you know puzzles is the picture rotating left or right it depends on your brain or something like that"
6459640,6468680," um it's very custom thank you where can you find my emacs config there is a command called dot files"
6468680,6475080," right so yeah dot files command and you can find it in here"
6479160,6482920," i don't know why everyone is so obsessed about my emacs config"
6482920,6492760," thank you thank you guys for watching can we use different cpu scores for programming"
6492760,6497320," maybe so what's interesting is that we can"
6497320,6505800," yeah maybe we can parallel parallelize this entire process like over rendering things and stuff like that"
6505800,6513560," basically split the screen into like four quads and do computations for each quadrant different core"
6513560,6519400," why not so but one of the things uh i want you to do i want you to do"
6519400,6524520," vectorization i want you to use like cmd instructions but in in the future"
6524520,6530040," do you tell beforehand on twitter about your streams of course not twitter is gonna shadow bandit"
6532760,6542040," the thing about twitter is that uh this kind of stuff is really discouraged discouraged by twitter"
6542040,6549240," algorithm if you start posting like a similar stuff like a stream announcement especially stream"
6549240,6555560," announcements that contain this uh the links to a different server that goes outside of the twitter"
6555560,6560840," it's gonna rank that specific tweet on their algorithm so freaking low it's gonna be basically"
6560840,6567640," shadow banned it's it's pointless what twitter wants you to do is to chat post that gets a lot of clicks"
6567640,6572920," and shares and likes and stuff like that right so that's why i don't do that on twitter"
6572920,6579880," because i i used to do that but at some point the uh the stream announcement just get zero interaction"
6579880,6586520," it's just like nobody saw them because twitter thinks it's spam so just like you know puts it down"
6588200,6595160," in fact it's kind of pointless to advertise one social network using another social network"
6595160,6602520," because uh social networks tend to have algorithms that that suppress that because they're competing"
6602520,6607960," with each other right so they're competing with each other twitter might be competing with twitch"
6607960,6614120," in some sense twitter has like these rooms where you can talk and stuff like that so in that sense it's"
6614120,6620120," competing with twitch so it doesn't want people to leave twitter to go to twitch so it's gonna suppress"
6620120,6622920," that as much as possible"
6622920,6638280," all right so i guess that's it for today thanks everyone who is watching me right now i really"
6638280,6645000," appreciate it have a good one and i see you on the next recreational programming session so yeah love you"
6645000,6653240," it's gonna be a good one and i see you on the next panel and i see you on the next panel and i see you on the next panel"

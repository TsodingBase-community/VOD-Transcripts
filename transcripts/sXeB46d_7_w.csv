start,end,text
720,6960," Hello everyone and welcome to yet another recreation programming session with Amista Zozin."
6960,10560," So today we're going to do a little bit of an interesting thing. Today we're going to try to"
10560,16720," use WebAssembly on the back end. How about that? So we have this interesting game, right, so which"
16720,24720," is basically like a web multiplayer game with a server, right, so which enables you to have several"
24720,31360," players, right, so you open a game in one tab and then you can essentially open this game in another"
31360,37840," tab and that creates another player and players can actually see each other, right, so here is the"
37840,41760," second player, I can stand in front of the other players, as you can see we can actually see each"
41760,49680," other. So it uses this like an old-school raycasting graphics intentionally and originally it is written"
49680,57200," in JavaScript, specifically it is written in TypeScript, but we recently started to incrementally"
57200,64080," rewrite this entire thing in WebAssembly, specifically in a language called C3. If you never heard about"
64080,69280," this language, this is because it's not really that well known, right, so it is kind of normal for you"
69280,75280," to not know about this language, but it's a SQL to C, right, so I'm trying this language out,"
76800,82000," it's kind of an okay language, it's an interesting language and but it's not particularly finished yet,"
82000,90160," it's rough around the edges, but the development is rather open, so I'm using it because it is the"
90160,98160," developer of this language makes it easy to report bugs and contributes fixes, right, so essentially if I"
98160,104640," see any problems with the language as I use it, I know that I can easily report some bugs or contribute"
104640,110400," fixes, right, so the code base of the language is also easy to read. So recently what we did,"
110400,118480," we actually rewrote a little bit of a rendering code in C3, right, so here is the rendering as you can see,"
118480,126960," so the rendering of the floor is actually implemented in C3, so the floor is implemented in WebAssembly,"
126960,135840," right, so C3 compiled to WebAssembly, but the walls, the walls themselves are not implemented in C3 and"
135840,144720," they're still happening in JavaScript. The way it works is that we basically render into a shared WebAssembly"
144720,151600," memory, that's how we do that, so we render into a shared WebAssembly memory and every time I need to render,"
152320,158320," for example, floor, I call to WebAssembly function and every time I need to render the walls, I call to a"
158320,164320," JavaScript function, and that's how it works, so this allows us to actually slowly incrementally,"
164320,171760," you know, rewrite JavaScript code in C3, right, so that's basically the strategy that we have in here."
171760,178400," So the other day I was actually thinking how I'm going to rewrite rendering of the walls in C3,"
178400,182960," and I encountered a rather bizarre problem, not really bizarre problem, but kind of an annoying"
182960,188560," problem. We can take a look at the client which is responsible for rendering the walls, so there's a"
188560,198880," literal function called render_walls, right, so, and what it accepts, it accepts a scene, right, and a scene"
198880,206480," is basically an array of booleans, so it's a grid, it's an array of booleans and it's a grid, so where"
206480,212480," there is a true, there is a wall, right, so let's actually take a look at how we call this function"
212480,220720," and where we call this function. So here we have a level scene and stuff like that, so we pass the scene"
220720,230960," from here, and the interesting thing about this scene is that it is supposed to be shared between the client"
230960,238400," and the server, it is supposed to be shared between the client and the server, so let me actually bring"
238400,244800," up the architecture of the whole application, so it's a little bit easier to understand, so what exactly is"
244800,253120," the problem, right, so let me actually start up my laptop, not really laptop, how is it called, like a tablet,"
254960,258960," so we have sort of like three things in here, so there is a common part"
258960,267120," which is implemented in TypeScript, so it's a code that is reusable both on the client and the server,"
267120,270800," right, so because we're using TypeScript, right, so we have a universal common code,"
271920,279280," right, so we have a client also written in TypeScript, and we have a server written in TypeScript,"
279280,287520," so server ts, let me sort of denote them as sort of like circles and stuff like that, and the client"
287520,294560," uses common part and the server is using common part, and the interesting part is that we have a little bit"
295120,303760," over rendering code on a client which is implemented in the Wasm, right, so it's implemented in Wasm,"
303760,315680," so and now rendering code is trying to use the state of the scene, but server also uses the scene"
315680,321520," to check for collisions, right, because when you're walking around, it's actually processed by the server,"
321520,327280," and servers actually determines whether you can go through a wall or not, so it checks for collisions,"
327280,336560," so the scene array is shared between the client and the server, so now the renderer code is trying"
336560,343440," to access something, is trying to access something that is supposed to be in common in here, right,"
343440,351360," but if I try to rewrite something in Wasm in common in here, that means server must be able to work with"
351360,359200," that as well, but I was planning to rewrite server in actual native code, my idea was that I rewrite"
359200,366320," everything in C3, and this common module for the client is going to be compiled to WebAssembly,"
366320,372560," and for the server it's going to be compiled to a native code, and now like I need to take this state"
372560,377760," of the scene, right, and I need to rewrite it to WebAssembly, but I can't do that, right, so I can't"
377760,388000," call a native code from the server TS, but it just occurred to me that I can actually use WebAssembly from"
388000,394080," Node.js on the server. It is a thing you can do in Node.js, can't you? I'm pretty sure you can, right,"
394080,401040," if I do this thing, I can do, yeah, WebAssembly instantiate, instantiate, yeah, there we go,"
401040,409120," so I can actually load WebAssembly module and just like use it on the server side, so that means I can"
409120,417440," take some code that needs to be shared between the client and the server, basically a small part of the"
417440,424720," common, right, small part of the common in here, and renderer is going to be using this part, and the"
424720,430560," server also going to be using this part, right, and essentially, yeah, so this is how the architecture is"
430560,436480," going to look like, so everything green is JavaScript, everything blue is WebAssembly, and as you can see"
437440,443760," within each of the modules, there is a little bit of WebAssembly, and we're going to be slowly growing"
443760,450960," these bubbles until we sort of rewrite everything in WebAssembly, right, the fact that I can use WebAssembly"
450960,456320," modules from Node.js makes it makes it actually rather easier, but for some reason in the previous"
456320,461840," stream, I didn't think about that, right, but now it kind of makes sense, right, and I think it will make it"
461840,466880," easier, so as soon as this bubble grows to the entirety of the server, we'll be able to just like,"
466880,473120," you know, recompile it to a native code, and now the server is going to become a native executable."
473120,478960," There will still a little bit of problems with WebAssembly implementation because Node.js comes with"
478960,484880," its own WebAssembly implementation, it's actually not true. You need to install WebAssembly third-party"
484880,491360," package, right, so to be able to do that, but I mean, I had a plan to implement WebAssembly for"
491360,498960," C3, no, not WebAssembly, WebSockets, I'm sorry, okay, freaking them, these web devs, freaking prefixing"
498960,505680," everything with web, so all of the names look, like, sound the same: WebGL, WebGPU, WebAssembly,"
505680,510720," Web Your Mom, it's just like, it's just like everything, it's almost like an old Apple that was"
510720,520400," prefixing everything with ""i"", iPhone, iPad, and whatever, it's just like, uh, yeah, it's so annoying."
520880,532480," Mm-hmm, um, web your mom, yeah, exactly. Uh, so yeah, that's going to be basically the plan for"
532480,541360," today, I'm going to be, I'm going to basically rewrite a small part, uh, that is responsible for"
541360,546640," storing the state of the scene in WebAssembly, right, so essentially my idea is going to be,"
547280,554240," uh, take the scene, uh, in common, right, so there's an interface, interface scene, and just basically"
554240,560080," store this entire thing in a WebAssembly memory, just, just store it in the WebAssembly memory,"
560080,567520," uh, right, so, and then let the client read that for rendering and stuff like that, and let the server"
567520,572400," read that for checking collision and everything, that's basically going to be the idea, right,"
572400,578560," at least for, for, for today's stream. Uh, so the, the goal is going to be to establish this architecture"
578560,584640," where there's a little bit of a WebAssembly in each module, right, a little bit of WebAssembly"
584640,587760," on the client, we already have a little bit of a WebAssembly in the client, there is nothing"
587760,592240," particularly special in here, uh, right, so we need to bring a little bit of WebAssembly into the common"
592240,598400," module, uh, which in turn will bring a little bit of WebAssembly into the server module, right, so we're"
598400,605040," growing the bubbles of WebAssembly, WebAssembly is consuming the entire of our application until it's"
605040,611360," fully, uh, native, right, it's not going to be fully native, client is still going to be in WebAssembly,"
611360,617840," but still, right, okay, sounds good, sounds Gucci, sounds what, at Amaguchi, let's go, let's actually"
617840,622240," acknowledge some subs, uh, so Laurie Master, thank you so much for, uh, Twitch Prime with a message,"
622240,627360," four years of good quality content, thank you, I'm really glad that people think that my content is high"
627360,635120," quality, uh, Niklaus, Niklaus D3O, I have a problem, thank you so much for tier one subscription, thank"
635120,644480," you, thank you, thank you, all right, so next milestone, C3 WebAssembly running on GPU, can you"
644480,649920," run, uh, WebAssembly on GPU, uh, I don't really know, maybe there are some extensions that actually allow"
649920,655760," you to do that, but who knows, who knows, who knows, who knows, I'm not really sure how I'm going to be doing"
655760,663520," all of that, um, I feel like I need to maybe introduce like a common C3 module, right, so let's actually go"
663520,670560," ahead and introduce a separate common C3 module, and I suppose I'm going to be compiling that for,"
670560,678000," right, so I'm going to be linking that with the renderer, and I'm going to be compiling separately for"
678000,683920," the server, that's going to be basically the idea, that's going to be basically the idea, okay, so I'm"
683920,690240," going to say this is a module common, right, so this is how you sort of declare the module, uh, and in here,"
690240,697200," I suppose we need to allocate a two-dimensional array, right, or at least one-dimensional array,"
697200,702400," right, so, uh, which can be treated as a two-dimensional one, right, so you can always take a two-dimensional"
702400,707600," array and just straighten it up, uh, right, allocate as one-dimensional one, and then do all of the index"
707600,714240," computations yourself. Uh, let's introduce a function that will allocate like an array of scene, right, so"
714880,719120," it is going to, I don't really know, like, what is it going to return, it's going to return boolean,"
719120,725280," but I don't really know what's the size of the boolean in, uh, C3, does anybody know, by the way,"
725280,731520," uh, okay, can we quickly check that, so can I do main, uh, right, so let's actually do it like that,"
731520,742000," and I'm going to import std, and I'm going to just quickly print, um, you know, boolean, I think this is"
742000,747280," how we do that, right, so size of, so you can take a type, and you can take a size of of that type,"
747280,755680," this is how we do that, then we do C3, compile, run, common, uh, C3, uh, right, let's go, and is it going"
755680,762720," to do the thing, so it's going to take some time, so we're warming up some cases, one, it is one byte,"
762720,770880," interesting, it is one byte, so if you, if I do something like, uh, uh, int, the size of int,"
772000,777440," is four, right, and size of, how do you do 64, by the way, is there something like, uh,"
777440,784400," u64, or maybe int64, uint64, I don't know if you can know, honestly, but this is just a boolean,"
784400,793920," right, so maybe, okay, so basically we're going to treat each cell as one byte, u long, okay, uh, u long max,"
796720,803120," u long max, because, you guys know, like, I suppose, I feel like, I think YouTube audience"
803120,810480," doesn't really know everything that I do on Twitter, but on Twitter, uh, I did, like, a very stupid joke,"
810480,818000," uh, about u long max, let me actually show you, uh, right, so if I can find it, um,"
820160,827280," so, uh, somewhere down there, uh, it was actually a long time, yeah, yeah, there we go,"
827280,834560," so this is basically the joke, uh, so yeah, yes, I know him, he's the current owner of x social,"
834560,838080," uh, social platform, formerly known as Twitter, u long max,"
838080,842960," this is so fucking stupid, but I mean, yeah,"
845120,850800," that's what it is, I'm gonna, uh, I'm gonna post it to, uh, to chat, uh, without any cancel,"
850800,856320," but I mean, uh, if you don't have a Twitter account, you can just put cancel in front of x,"
856320,863360," by the way, uh, like, a trick for anyone for whom x is currently banned, people in Russia or Brazil,"
863360,868560," right, or who doesn't have any account, right, or don't like Twitter, you can just put a cancel in"
868560,873600," front of it, and you will get an access to that tweet, so there is a, like, a neater instance in here,"
873600,879040," don't tell anyone, don't, don't fucking tell anyone, uh, right, so I'm gonna put that in"
879040,884880," description, right, so for anyone who's interested, so, uh, for anyone who wants to laugh at my, uh,"
884880,895280," u long max, a joke, haha, very fucking funny, very funny, oh, oh, chat, laugh, love,"
897200,904560," anyways, uh, so, uh, let's go, so this is a boolean, so essentially, uh, yeah, okay, thank you,"
904560,911680," thank you, thank you, chat, uh, what I want to do, I want to allocate, uh, right, so this scene, right,"
911680,918160," so we're going to do something like allocate scene, and we're going to accept width and height,"
918800,925600," right, so this is the function that is going to be available from, um, available to JavaScript,"
925600,930080," right, so we're going to be calling this function from JavaScript to allocate a little bit of a memory"
930080,934960," from within the WebAssembly module, that's going to be basically the idea, so the module itself is"
934960,940480," called common, right, so that's the module we have, so it's an external function, right, so we need to"
940480,944960," specify what's going to be the external name, uh, it's going to be the same name as it is, and I'm also going to"
944960,951040," specify that this is a wasm function, so in here, we're going to be basically doing the same thing we do"
951040,959360," in a renderer, c3, so when we are allocating pixels, right, so we're just allocating a new array, so I say"
959360,968720," mem new array, right, and I'm just allocating a boolean, uh, width by height, uh, right, and that gives me"
968720,974720," basically an array of scene, a one-dimensional one, but I mean, it's just like, uh, it's a straight enough"
974720,979760," two-dimensional, and what I'm doing, I'm just returning the pointer to the beginning of that"
979760,987040," array, right, so that's basically the idea, and I think that's the entirety of the thing I want to"
987040,996160," do in here, so the JavaScript code is going to simply allocate the scene and just populate the scene in"
996160,1002240," there, um, so we also need to make sure that it's populated with the same stuff on both clients and the"
1002240,1012640," server, right, so maybe we can populate it somewhere in here, uh, I'm not quite sure, I'm not quite sure,"
1012640,1022160," we'll see, we'll see, anyways, so we need to compile this entire thing, um, right, but we also need to use it"
1022880,1032640," in the client, so right now the client's web assembly module is called a renderer because it is only"
1032640,1043120," concerned with the rendering, so maybe I should rename this entire thing to something like client, right,"
1043120,1051120," because now it is not only concerned with the rendering, but also with maintaining the state,"
1051120,1056720," so because of that it kind of makes sense to actually call it a client, so an idea is going to be"
1057360,1065520," is that, uh, we're also going to link the common module, common c3, into the client, right, and we're"
1065520,1073120," probably going to have a server c3, which will also link with the common, right, and it's just like two"
1073120,1079360," web assembly modules that are used both by client and the server, right, so this is actually, this is actually"
1079360,1088000," kind of cool idea, right, so renderer client wasm, actually the other way around, I think it's going"
1088000,1092800," to be client render wasm, but I mean, it's just like, it doesn't really matter how exactly we'll organize"
1092800,1101200," the objects and stuff, none of that matters, uh, thank you so much develop land for, uh, wasm to what,"
1101200,1108560," wasm to what indeed, uh, right, so we can take a look at what, um, so of this client, uh, right,"
1108560,1116800," so wasm to what, client, I think you have to do it like that, wasm to what, client wasm,"
1116800,1124480," redirect client what, and what we'll get, we'll get this thing, right, so this is how web assembly looks"
1124480,1131600," like, uh, textual representation of web assembly, not particularly human readable, but you can read it,"
1131600,1137200," right, so it's not really that hard to read, uh, some of the things that are very obvious is when you"
1137920,1144000," export some things, right, so here are all of the objects that we export in here, right, so we export"
1144000,1149120," memory, allocating pixels, some of the functions responsible for rendering, for example, render"
1149120,1154720," floor and ceiling, as already said, we're rendering floor and ceiling in web assembly, and look at that,"
1154720,1162800," we have a function that does exactly that. Can your clean code do that? Can your clean code do that?"
1162800,1167360," you're supposed to have like a shit ton of hierarchies and virtual functions and shot like that here,"
1167360,1173440," uh, I say that web assembly module is responsible for rendering floor and ceiling, and look at that,"
1173440,1178640," it has a function that says render floor and ceiling. How more clear can you be than that?"
1179840,1181760," How fucking more clear can you be than that?"
1181760,1191200," Fucking no! I don't fucking know! Just write a goddamn fucking code that solves the problem, bruv!"
1196960,1206240," too much concern mixed, yeah, rendering floor and ceiling in a single function? What the fuck is that?"
1206240,1213360," Where is my single responsibility? Each function must have a single responsibility, which means that each"
1213360,1222000," function has to consist of a single CPU instruction. And even that, on x86-64, some of the CPU instructions do"
1222000,1230320," too much. You need to use micro-op codes or something. What the f- can anybody like for real explain to me"
1230320,1236320," what the f- is a single responsibility principle? Who, who f-ing came up with that? Like what kind of"
1236320,1243200," mushrooms they smoked? Like what the f- is that? How do you measure that? It's just like what is a single, like how..."
1247600,1248160," Anyways."
1248160,1255200," Anyways, let's continue."
1255200,1261760," Let's remove this Scheisse."
1261760,1272960," Let's remove this Scheisse, my friend. So, I need to update the building, actually. BuildJS, right, because I"
1272960,1280160," rename to render to clients. So, I must do that stuff in here as well, right. So, this is a client now."
1280160,1288160," Right. So, if I run npm run build. So, let's see if it still works or not."
1288160,1299520," Yesu, yesu, yesu. So, now if I try to serve this, it's already serving. If I try to refresh, it is not going to"
1299520,1304800," work because it couldn't find the WebAssembly module because we renamed it. Which is understandable,"
1304800,1308160," right. So, execute compile HTTP status code is not okay."
1308160,1315280," Thank you so much. HTTP status code is not okay."
1315280,1320080," Are you okay? No, it's not okay."
1322000,1332560," All right. So, let me go into the client mts and find renderer wasm. So, now it is client."
1332560,1343040," So, on top of that, it is loading a thing into a wasm renderer, right. So, we have a thing called wasm renderer,"
1343040,1349360," and here we instantiated wasm renderer and the entire thing is called wasm renderer. So,"
1349360,1356160," which is not what I think it should be called, right. So, it should be called wasm client because"
1356160,1361520," we renamed the whole thing into client, right. So, maybe I'm going to go ahead and say query"
1361520,1368960," replace wasm renderer wasm client, right. So, hopefully, emacs is going to update the casing."
1368960,1372720," It almost did update the case."
1372720,1380640," It almost managed to do that. I don't fucking know, man. All right. So, this is client. I'm going to"
1380640,1388560," query place wasm renderer, right, to wasm client. Is it going to work? I think it's it works almost"
1388560,1396400," correctly. All right. So, we are renaming all of that stuff. Yeah, instantiate wasm. And I'm going to"
1396400,1404080," query place wasm renderer with wasm client. All right. So, hopefully, that is going to work as well."
1404080,1410480," Look at that. Who needs IDE to refactor the code? If you can just query replace in a shitty"
1410480,1418640," editor from 70s, you can do that in any shitty editor from 70s. You don't need any Visual Studio"
1418640,1423200," code. You don't need any LLMs. You can just like search and replace. Did you guys fucking know that?"
1423200,1428960," Did you guys know that? And this is like a thousand lines of code refactored easily,"
1428960,1436480," easily in a shitty text editor from 70s. Can your LLM do that? I bet this entire"
1436480,1446240," shit doesn't even fit into its small little context. Disgusting. Anyways. So, let's actually try to"
1446240,1453200," recompile this entire thing. Let's try to recompile this entire thing. Is it working? Is it twerking?"
1453200,1458560," I hope it is working. It is twerking. Okay. So, and let's refresh this entire thing. And look at that,"
1458560,1461120," it works. So, we successfully renamed some variables."
1462960,1468480," I'm a professional software developer, right? So, I rename variables and I color buttons. That's what I"
1468480,1479280," do. Okay. So, now we have a client C3. We have a common C3. And okay. So, it compiled to executable."
1479280,1485600," Let's remove the executable. I wonder how we're going to be linking with all of that. Can we just like"
1485600,1494400," import common in here and try to compile it? So, I'm in a client and I'm trying to import common."
1494400,1498960," So, if I understand correctly, this is not going to work, right? So, let's actually go ahead and try"
1498960,1506960," to compile this. Yeah. So, there's no module named common, right? And this is because when we're building"
1506960,1516400," this entire Shysung, we have to add common C3 in here, right? We have to add it in here. Okay. So,"
1516400,1522560," now, if I try to build this entire thing, hopefully, it is going to work, right? Hopefully, it is going to work."
1522560,1529760," Okay. So, it compiled successfully. It compiled successfully. Honestly,"
1530560,1540560," So, if I take a look at the wasm to what? Can I do wasm to what of this thing? Does it have allocate"
1540560,1547040," scene? It does, in fact, have a function that allocates the scene. As you can see, it does a lot"
1547040,1552960," of stuff in here. It probably inlines some code from the memory allocator and stuff like that. So,"
1552960,1559760," but the question is, is this function exported? It is, in fact, exported. It is, in fact, exported. So,"
1559760,1565520," this is actually kind of cool. So, what I want to do now, I want to have a server."
1565520,1574640," So, as of right now, server, I didn't think it is going to have any useful code, right? So, let me go"
1574640,1582400," ahead, just create a server, C3, and it's going to import common, but it's not going to do anything else,"
1582400,1587360," right? So, but I still want to have this file because we're going to have some coding here in the future."
1587360,1594400," And let me add the compilation of the second wasm module in here. I'm going to literally just copy-paste"
1594400,1601440," this entire thing, like so, and I'm going to replace server, the client, with the server."
1606240,1607360," Do you hear that shit?"
1607360,1613920," It's just neighbors are drilling something."
1613920,1619520," They're drilling your mom. That was not appropriate."
1619520,1624000," So, I don't fucking know what they're doing, right? So,"
1627520,1633200," anyways, so we're going to have two executables in here. So, I'm going to try to compile both of them."
1633200,1640720," So, since they're using like two things, is that a good idea that we're just actually compile them"
1640720,1648080," in parallel? Actually, it didn't break anything that much, right? So, now we have a server wasm. Look at"
1648080,1653360," that. We have a server wasm. It's actually very small. It's eight kilobytes. I mean, it could be"
1653360,1660080," smaller, but I mean, it's smaller than the client wasm, which is 15 kilobytes, right? So, let me take a"
1660080,1668960," look at its what. So, let me take a look at its what. Let me take a look at its what."
1668960,1676400," All right. So, what do we have in here? Yeah. So, it only exports, as far as we can see,"
1676400,1684480," memory and allocate scene and also initialize and stuff like that. So, and this is the module that we'll"
1684480,1691680," have to load on a server side. And there's probably debug symbols. I don't think so, honestly,"
1691680,1700240," because if we take a look at this thing. So, we put -g0, which I assume no debug symbols, right? So,"
1700240,1708080," but we can try to confirm that. So, let me see. C3, g, yeah, emit no debug info. We explicitly say"
1708080,1714400," don't emit any debug info. But the thing here is that we're compiling with the standard library."
1715200,1720080," So, I'm kind of intentionally compiled with the standard library because it has like convenient"
1720080,1725600," memory allocators and stuff like that. And I expect that this is probably the standard library. That's"
1725600,1733840," probably what it is. So, but I mean, so 8 kilobytes is not that much. I think it's all right. I think it's all"
1733840,1741760," right. So, okay. Let's go ahead and try to load this entire thing from Wasm."
1743520,1747920," I need to kind of read the file."
1747920,1755760," I kind of need to read the file. I don't fucking remember how to read the file in node."
1756320,1764640," Do we do some shit like fs require? This is not lisp, require fs. Boom."
1764640,1773280," Oh boy. Read the file. Oh, you can actually read file synchronously. Okay."
1773280,1778720," fs read file synchronously. Can I just say, okay, server Wasm."
1780960,1787520," Okay. So, we've got some buffer. All right. So, what if I just do this thing? Does it return promise?"
1787520,1792640," This motherfucker doesn't even return the promise. So, yeah. So, this is what we have to do. Wasm."
1793280,1807680," Assembly instant sheet. Oh, shit. Can I, can I await this entire thing? Oh, shit. What the fuck? Okay. Wait a"
1807680,1818560," second. All right. So, and you can take a look at the instance. Experts. All right. I can go ahead and,"
1819680,1825200," I can just like load the Wasm module from Ripple without writing any actual code in the file or"
1825200,1830480," anything. It's actually that easy. I didn't expect that. So, the first thing we have to do, we have"
1830480,1835680," to initialize all of the WebAssembly stuff, right? It's kind of important. So, after which we should be"
1835680,1841440," able to allocate the scene, right? So, we're allocating the scene and we're saying, okay, so allocate me a"
1841440,1848400," scene like a 10 by 10 or something, right? So, and it gave me a pointer. So, it just gave me a pointer and"
1848400,1854960," like it's not particularly useful for me, right? So, what that means is that by that pointer in the"
1854960,1861840," memory in here, I'll have to just like initialize everything somehow. We'll see how it goes. Okay."
1861840,1870480," So, let me go to maybe client MTS. Oh, and I'm using TypeScript. God, fucking damn it, mate. Can"
1870480,1880560," you just like import a read file sync from, we'll get a rate from Kebabskull with 84 radius. Thank you."
1880560,1886000," Thank you so much for the rate. Hello, hello, radius. How are you guys doing? How are you guys doing?"
1886000,1892000," So, we're going to do FS. So, is it going to work? So, it is complaining about some stuff is declared,"
1892000,1897280," but it's never. Okay. So, that's totally fine. That is totally fine. Okay, good."
1897280,1908480," Oh, this is client. It's wrong one. Okay. Let me go to the server. Server MTS and I'm going to put"
1908480,1914960," this thing in here. So, is it working? It seems to be working. It seems to be twerking. So, in here,"
1914960,1923120," we're just, yeah. So, the actual sort of main where the whole application, that's a huge s function,"
1923120,1931120," honestly. Right. So, this is own and this is a seek and it's a 250 lines of code. Look at that."
1931120,1936480," That's a pretty good function. It's a pretty chunky function. I'm not going to lie. So, this is probably"
1936480,1942960," where we want to do this entire thing with the loading. Right. So, I'm going to do read file sync."
1944240,1949840," Right. So, what if I go into that function? Is it going to... Okay. So, I'm in FSD."
1949840,1956480," Oh. So, basically, I already have types node and stuff like that. Did I actually add them to the"
1956480,1962560," package JSON? I don't quite remember. Node? No, I don't have them. I don't think I have them."
1962560,1969440," Where did I get them, though? So, somebody depends on them, probably. Somebody depends on them. Maybe"
1970160,1978880," It's the... It's this thing. So, maybe it's this thing. Chad, what happened to C3? I missed intro."
1978880,1987280," Well, I mean, we're using C3. We're in the middle of rewriting some toy script, you know, code in C3."
1987840,1996400," So, that's what we're doing right now. Right. So, let me see. So, now I should be able to do server"
1997520,2006160," and wasm. Right. So, and then I'm going to do web assembly instantiate and I probably have to await"
2006160,2015200," and I'm going to do just wasm. Interestingly, so, just in case, I want to do that in async lambda"
2016640,2022960," just in case. Right. It also introduces an async lambda like this, kind of introduces like an entry"
2022960,2031280," point for the application, which is always good for the readability. Yes, I said this word. I said the"
2031280,2037360," word readability. I know. But I mean, it's kind of nice to have like an exact place where the application"
2037360,2048960," starts okay. It's kind of easy to read. Fuckin' no. Anyway. Well, we can all agree on that. Can we not?"
2048960,2058320," Can we agree on something? Please. Anyways. Okay. So, what we have in here. So, allocate the scene"
2058320,2066800," and stuff like that. So, after that, we also have to do something like wasm instance experts"
2067680,2078720," initialize. Honestly, you know what I did in client? Right. So, you know what I did in client?"
2078720,2088720," I introduced the thing that we were renaming, which is a wasm client. Here it is. So, wasm client. And"
2088720,2095120," the thing about this wasm client is that it introduces like a type save methods with signatures and stuff"
2095120,2104560," like that. The problem with just accessing, you know, instance experts initialize is that WebAssembly"
2104560,2108560," knows nothing about them. And as you can see, it actually highlights that it knows nothing about"
2108560,2115520," this and that thing. So, you kind of want to explicitly, you know, declare those methods."
2115520,2121120," Right. So, you want to explicitly declare them. So, TypeScript can shut the fuck up already."
2121840,2127440," All right. So, I'm thinking maybe I need to introduce like an interface wasm server where"
2127440,2132160," I'm going to obviously have kind of the similar things that they have in wasm client. Right. This"
2132160,2137040," kind of stuff. The WebAssembly module if I need something special. Obviously, the shortcut to the"
2137040,2143280," memory because accessing the wasm memory is kind of a common thing. And a bunch of things like initialize"
2143280,2150880," like this. And we're also going to have probably allocate scene, which is a function that accepts width,"
2150880,2157680," height, and returns you a number which is a pointer to the memory. Right. So, when using that pointer,"
2157680,2164880," you have to look into the memory in here. So, doing all of that is a little bit of a chore. Right. So,"
2164880,2170720," I think I'm going to factor out all of that into a separate function. We're going to have instantiate"
2170720,2179200," wasm server. We're going to accept the URL. Or maybe in this case, it's not your URL. It's a path. Right. So,"
2179200,2187200," because we're not executing in the browser, we have file paths, not URLs. Right. So, I mean, you can do"
2187200,2192800," something like that. But I don't think wasm will shut the fuck up. Right. So, I actually don't think"
2192800,2199280," that wasm will shut the fuck up because it will not recognize this as a function that it can call."
2199280,2206560," Right. Expression is not callable. So, it doesn't really solve anything in particular, unfortunately."
2206560,2212240," So, in here, I'm going to do promise. Right. So, because it's asynchronous and stuff like that. So,"
2212240,2218320," it's going to be promise that returns you a wasm server. Let's actually make it a sync just in case."
2218320,2224160," And this is where we're going to be doing all that stuff. Right. This is where we're going to be doing"
2224160,2234560," all of that stuff. So, we do wasm. And yeah. So, let's just return wasm. Then memory is going to be wasm"
2235200,2243360," instance.experts.memory.initialize. And this is where it gets very interesting. So, you're supposed"
2243360,2251280," to do the following thing. Initialize and allocate scene. Allocate scene."
2251280,2258880," So, it complains about something that I'm not really sure what the fuck is here. So, export value is not"
2258880,2265040," assignable to memory. Yeah. So, essentially, we have to expose it, say, as web assembly memory to make a"
2265040,2270640," it shut the fuck up specifically in here. And in here, we literally have to do all of that stupid"
2270640,2280080," kind of stuff. All right. So, basically, we're explicitly casting all of these functions to these"
2280080,2287040," types. Right. It's a little bit cucumbersome, but I personally don't really care. I personally don't"
2287040,2291920," really care that it's a little bit cucumbersome because majority of the logic is going to be moved"
2291920,2299360," into WebAssembly eventually. And my hope that the actual interaction between JavaScript and WebAssembly"
2299360,2304640," is going to be through a very, very narrow sort of like a hole where all of that doesn't really"
2304640,2309280," matter. So, all of that is going to get collapsed into WebAssembly anyway. And on the server, the"
2309280,2315200," entirety of the server is going to be rewritten in C3. It's not going to be even compiled to WebAssembly."
2315200,2322000," It's going to be compiled to native code. So, having this stuff a little bit cucumbersome like that"
2322000,2327120," it's not really important because it's a throwaway code. It's an intermediate code that is going to just"
2327120,2331760," like, you know, get removed later. Famous last words. Right."
2335360,2342800," I swear, Chad, I swear this is a temporary code. Like, for real this time. Like, seriously. It's not going to"
2342800,2350400," stay for too long. Like, I promise. Like, it's a temporary code. It's a temporary code. Seriously."
2350400,2358080," It's a temporary. Like, I'm going to remove it. I can remove it. I promise."
2361200,2371200," I'm going to remove it. Anyway. So, all right. So, we've got this stuff and I'm going to do a WASM server."
2371200,2384480," Instantiate WASM server. So, I have to actually extract this entire thing to path. Like so. Boom."
2385680,2395280," And I probably have to await in here. Look at that. So, why are you complaining? Because I accidentally made"
2395280,2404640," it number, not a string. So, what I have to do here, I have to do initialize. Initialize. Let's go."
2408480,2417840," Okay. So, the question is, how are we going to be creating this scene? How are we going to be creating"
2417840,2425040," this scene? It's a very good question. It's a very good question. Because the scene kind of right now"
2425040,2432560," is a headcoded. It is in fact headcoded. So, before I'm going to just try to do anything. Let's actually"
2432560,2436720," recompile this entire thing and try to run it and see if it still works. Right. Because I don't really"
2436720,2443120," know if it works or not. So, one of the things… Yeah. So, everything seems to be compiling."
2443120,2447120," Right. So, let's close this entire stuff and let's restart the server."
2447120,2454080," The server seems to be working. Right. So, it constantly logs some stuff. Maybe it makes sense,"
2454080,2463120," at least for now, to remove the logging. Right. So, let's remove the logging. Let's recompile the"
2463120,2482960," entirety of the thing. Okay. So, I don't see any exceptions. I don't see any errors. So, it's actually"
2482960,2490320," kind of cool. It's actually kind of cool. All right. So, if I take a look at the common part."
2490320,2500160," Common MTS. And how do I create a scene? So, as of right now, when I'm creating a scene. Right. I'm just"
2500160,2509600," providing the array of walls. And this is basically what creates a scene. Very freaking interesting. Very"
2509600,2513440," freaking interesting. So, this is what creates a scene."
2513440,2523360," So, and when I'm calling this function, I'm calling it at create level."
2528080,2536240," You know what I'm thinking. You know what I'm thinking. I think create scene should actually"
2536240,2544000," accept the wasm server. It should accept the wasm server because it needs to call to this"
2544000,2553120," server. See, actually common. Common C3 function. It needs to allocate the scene. So, because right now,"
2553120,2561920," look at that, it creates array in javascript, we need to move this array from javascript to web assembly"
2561920,2574960," more memory. We need to do that somehow. So, that means we need to have an access to wasm server,"
2574960,2583360," to wasm server in here. But this is a common code. This thing can be created on a client as well."
2583360,2588800," That's kind of the problem. It can be created on a client as well."
2590800,2600640," So, let me take a look. So, here's the wasm server. Right. And on the client mts, we have wasm client."
2600640,2613920," What if we introduce an interface wasm common that has wasm, memory, initialize, and also allocate scene."
2614720,2622960," And we can make wasm server and wasm client extend those interfaces. So, in a common code, we're actually"
2622960,2632080," not accepting the wasm server or wasm client, but rather wasm common, wasm common. And this is where"
2632080,2649040," this is a genius fucking idea, my friend. So, interface wasm common. Right. So, let's actually"
2649040,2655760," move this entire shit in here. So, this is the common stuff. This is the common stuff. We can now say that"
2655760,2663840," wasm server actually extends wasm common. So, to do that, we probably want to expert this entire thing."
2663840,2670400," Right. So, we expert in this entire thing. And maybe I should say something like a common wasm common."
2670400,2679920," Yeah, there we go. So, maybe on the client side, we also want to say that this thing extends wasm common,"
2679920,2688160," which is also part of the common thing, like so. All right. So, because of that, we don't really have to"
2688160,2694560," maybe say this kind of thing. Right. So, because all of that is kind of implied. Yeah. So, all of that"
2694560,2699440," is kind of implied. And on the server, we also don't have to say any of these things. And we don't really"
2699440,2706720," have anything server specific yet. Right. We don't really have anything server specific yet. All right."
2706720,2716960," So, that's pretty cool. So, now this entire thing accepts create. Where is that scene? Where is the scene?"
2716960,2723840," We are not in the common. Create scene. Right. So, this entire thing accepts walls. And it's supposed"
2723840,2730160," to allocate that within the WebAssembly module. All right. So, let's try to compile this entire thing and"
2730160,2735440," see how miserably all of that fails. Because, right, I modified a bunch of, you know, signatures and stuff like"
2735440,2742640," that. So, I expect it to fuck up miserably. I'm going to go to the compilation errors. Okay. So,"
2742640,2749520," it fucks up on the client, which is understandable. All right. So, let's go to the client MTS."
2749520,2758240," And I'm going to go to the next error. Come on. Go to the next error. Yeah, boy. So, what do we have in here?"
2758240,2765520," Here. Ah, I see. I see. I see. I see. I see. I see. Since now wasm.common has allocate scene,"
2765520,2773280," we have to kind of do the same thing in here. So, here is the scene. Yeah. So, are you okay now?"
2773280,2781520," You seem to be okay. All right. So, now if I take a look at the common. Next error. Next error. Next error."
2781520,2790080," Okay. So, when we're creating this scene, we need wasm. Right. So, wasm.common. So, that means"
2790080,2798400," we need to accept that wasm.common from here. Wasm.common. Let's go. All right. So, that's very"
2798400,2805680," interesting. So, that fucks up a little bit of the client code. Yeah. So, there is one error in here. So,"
2805680,2811200," as you can see here, we're creating the level. But that means we need to pass a wasm module. Do we"
2811200,2815840," have a wasm module in there? Yeah. We do have a wasm module. So, this is actually kind of perfect."
2815840,2822000," Wasm client. So, here is the wasm client. So, are you working? Yeah. It is working. Okay. So,"
2822000,2829760," also, we have a fucked up server when we're creating things. And this one is rather interesting."
2832960,2841760," Because I believe when we create a level, when we create a level at this specific point,"
2841760,2851600," we do not have wasm yet. We don't have it because we have it down there."
2851600,2861360," Can I? Okay. Can I just move the creation of wasm up there somewhere?"
2863120,2870240," Can I just do that, please? So, yeah. Maybe I didn't do a very good job"
2870240,2878160," at, you know, properly organizing my code. But the TypeScript seems to be compiling. So,"
2878160,2884960," there's a bunch of like errors here and there. I can't really see them. So, it says there is no error,"
2884960,2893200," but yeah. Yes, yes. Okay. So, I think I actually refactor everything. So, let's take a look at the"
2893200,2897120," compilation error, right? So, is it going to work? Is it going to work? Let's see. Let's see."
2897120,2904720," We need the dependency inversion. Yeah, probably. I probably need to factor out this step. Okay. This"
2904720,2914400," motherfucker compiles, by the way. So, in the node, you can actually like at the top level,"
2914400,2918640," right? So, at the top level, you can do a wait, right? So, it's a thing that you can do."
2918640,2924480," Well, I mean, we don't know. It's just like TypeScript thinks you can do that, but it doesn't mean the"
2925120,2930320," node.js is going to allow that. No, look at that. Web.js actually allowed that. Okay. Apparently,"
2930320,2934880," you can do some shit like that in JavaScript. I didn't fucking know that. I'm not a JavaScript"
2934880,2939200," developer. I'm sorry. I wrote like a thousand lines of JavaScript, but I still don't consider myself"
2939200,2947680," JavaScript developer. I don't know shit about this language. Right. Anyways, we probably don't even"
2947680,2954640," need a thing in here. So, maybe we don't need this function. Fuck that. Fuck readability."
2955120,2961680," Fuck readability. We don't need this function. Anyways. So, what I want to do in here, now,"
2961680,2970640," when I create a scene, right? When I create a scene, what we want to do, we want to get rid of these walls."
2970640,2976560," In fact, you know what I want to do? I want to turn it into walls pointer. And this is going to be"
2976560,2980800," literally number. So, and it's going to be a pointer within the WebAssembly memory. And if you want to"
2980800,2989200," access this scene, you must go to the WebAssembly module, WebAssembly memory. So, now, all the"
2989200,2997200," information about the walls is stored in a WebAssembly memory. Sorry. It's just stored in a WebAssembly memory."
2998240,3003920," So, it would be maybe kind of nice to initialize the entirety of this WebAssembly memory with"
3003920,3010880," nothing? Right. I don't know. We'll see. We'll see. Okay. So, let's go through the compilation errors."
3010880,3017040," Right. So, what's the next error? GetTile. Oh, this one is interesting, actually."
3018160,3029760," So, now, this thing, scene getTile, it must accept WebAssembly memory, believe it or not. Actually."
3029760,3038560," So, how are we going to do it? Maybe like wasm.common. Wasm.common. Yeah. So, we accept that."
3039600,3054320," Then, what do we do? We do uint8 array, maybe even clamped array. Clamped array. So, and if we take a"
3054320,3060000," look at the constructors of this entire thing. So, it accepts the buffer in which it's doing things and"
3060000,3068800," offset and a length. Okay. So, the buffer is wasm.common. Memory. Memory. The buffer of the memory. The memory buffer."
3068800,3080480," Then, we take a scene walls pointer and the size of this entire thing is actually scene width multiplied by scene"
3080480,3088000," height. Like this. And now, this is basically walls and"
3090320,3097920," So, it returns true. So, not equals zero. Maybe even something like this."
3097920,3105280," So, because now, this array is stored not in JavaScript, but in WebAssembly memory."
3105280,3111680," So, because of that, right. So, we're taking the pointer by that pointer. We just take this entire thing"
3111680,3115200," and this is how we access this entire thing. Does that make sense?"
3115200,3126560," So, yeah. Okay. Next error. So, this one is rather interesting. So, scene can rectangle fit here. So,"
3126560,3132160," now through, like every time I need to access the scene, I have to have an access to wasm.common,"
3132160,3139920," somehow wasm.common, right. So, and get title, right. So, I just pass wasm.common, like this in here."
3139920,3147920," So, I have to pass it through, through everything in here. Interestingly, right. Maybe creating like a whole"
3149200,3158480," walls thingy, walls thingy is kind of too much on each individual column here. Maybe instead of accepting"
3158480,3163360," wasm.common, it would be nice to accept walls, which are"
3165920,3180960," which are just a uint8 clamped array. And then, uh, scene get title. We just create it once in here"
3180960,3186160," and we're passing it like that, right. Because like we're doing that in the loop and creating this object,"
3186160,3190800," like even though it's a very lightweight object, I think it's too much, right. So, it's better to like"
3190800,3197600," create it right away. Furthermore, like I'm not sure why this is a separate function by itself."
3197600,3202640," I'm not really sure why exactly it is a separate function by itself, but it is what it is. It isn't"
3202640,3209600," what it isn't. All right. So, yeah. So, there is a little bit of a thing. Yeah. We are creating a scene"
3209600,3217440," and we need to get rid of these walls. What we have to do, we have to allocate this scene. So, wasm.common"
3218640,3227440," allocate scene. So, we have to... So, this is going to be walls pointer, right. So, we don't really know it."
3227440,3237360," And the reason we don't really know it is because we haven't figured it out. So, first we need to compute"
3237360,3245280," width and height. So, we already know height. We are competing width. So, after we computed width, what I need"
3245280,3255200," to do? I need to do scene, walls pointer, and I'm just passing scene width, scene height. There we go."
3255200,3263360," So, I got a walls pointer, after which I need to create walls, new uint8 clamped array."
3265440,3274960," Wasm.common.common memory buffer. I'm taking this pointer and I'm saying that this is going to be the"
3274960,3284320," entirety of this thing. Right. So, this is the walls. Why are you complaining about this shit, bruv?"
3285360,3290240," Ah, fuck. How do I call this thing? Walls..."
3290240,3302800," Okay. So, let's call it walls data. So, and this one is walls data."
3304560,3308560," Uh-huh. So, here we can... Why are we concatenating exactly?"
3308560,3316080," Um... So, ah, we're just concatenating this entire thing, essentially."
3316080,3323680," Well, we need to actually allocate that stuff. We need to iterate them differently,"
3323680,3328320," completely fucking differently now. We need to iterate them differently."
3329760,3336000," So, ah, I suppose... How I'm going to be iterating all that. So, this is a dat code. We don't give a"
3336000,3346960," shit about it. Uh... We need to do let y 0. Um... And we're just iterating walls length. Right. So, we're just"
3346960,3359440," iterating by y. And then we're iterating by x, which is x is less walls y length plus plus x. Right. So, and"
3359760,3369360," in here, what we essentially do is walls data y multiplied by sin width plus x equal true."
3369360,3381920," If this entire thing is actually true. So, but what we have to do is walls"
3385360,3396720," y x. Is that a good idea? Because it's a uint. And I kind of want to convert it to a true or false."
3396720,3407760," Yeah. How can I easily convert a boolean to a number? Does anybody know in JavaScript? Like if I have true"
3407760,3415280," plus zero. Okay. So, we have false. Is that a valid, you know, strategy? I think it's a valid strategy."
3415280,3421760," Plus plus zero. Uh... And it doesn't like that. Maybe ""plus"" cannot be applied to boolean. Are you fucking serious?"
3421760,3428880," Uh... So, true plus true. False."
3428880,3432880," Uh... Plus false."
3442480,3448880," Okay. Okay. Can I just say as number? Um..."
3448880,3461520," Numberval. Okay. So, can I number true? Uh... Number false. Okay. So, that seems to be working. But now..."
3462800,3469600," it's just like... Okay. So... Oh, that box is like fine though. Holy shit."
3469600,3473520," Oh... Anyways."
3473520,3485280," Uh... In the common empty... Actually, common C3. I kind of want to set all of that to false. How can I do that?"
3485280,3491200," Uh... So, there's probably a way to do that, but I... I don't know. Uh... So, what I'm going to do is C..."
3491200,3498720," C... C false. Right. So, there's probably some sort of like a mem set in C3, but I just don't care."
3498720,3505360," Um... All right. So, this is what we want to do in here. Right. So, this is how we want to approach this entire thing."
3506560,3512000," Uh... Created the scene. So, this is not initialized. We figure out width. Uh... We allocate everything"
3512000,3520160," that is necessary in here. And we just like, you know, do the thing. Uh... So, we're doing the thing."
3520160,3527760," So, the next error in here. Ah... So, we are updating the bombs. The bombs."
3530080,3540960," So, this is probably why we are doing it like that. So, we need walls in here."
3540960,3550160," We can pass walls in here. But that just means that we need to have wasm.common in here."
3550160,3557920," Wasm.common in here. So, wasm.common like that. So, the next error."
3558800,3563840," Uh... Okay. Scene can rectangle fit in there. So, we pass the wasm.common in here."
3563840,3574640," And the wasm.common in here. But... When... That just means that this thing also should accept wasm.common."
3574640,3579760," So, as you can see, we have to pass that wasm.common everywhere now. Uh-huh."
3579760,3587520," All right. So, is there any errors in here? I don't think so. Okay. So, everything compiling."
3588480,3594400," Uh... So, we'll go into the client code. Client MTS. Uh... Do we have any errors in here?"
3594400,3598000," Uh... Okay. So, we have seven errors in here. Let's take a look at them."
3598000,3604080," So, when I do scene get tile. Uh... Scene get tile. This is rather annoying."
3604080,3607040," So, right. So, cast."
3608640,3620560," Um... So, I need to have walls. But I mean, that's fine. New int 8. So, that's what I want to do in here."
3620560,3626640," So, I want to have walls. And I'm passing walls in here."
3629040,3635280," Uh-huh. But here, I'm in a client, by the way. I don't have wasm.common. I have wasm.client."
3635280,3638320," Right. I do have wasm.client."
3638320,3644960," Um... Though, I don't really need wasm.client in here. I only need wasm.common, right?"
3644960,3646800," So, more abstract interface."
3647680,3654400," So, let's do it like that. Uh-huh. So, and it's actually part of the common thing in here."
3654400,3663200," So, uh-huh. This is another thing when I'm rendering the minimap. This is very interesting."
3663200,3672320," Uh-huh, uh-huh. So, that just means now I have to"
3675120,3679200," have wasm.common in here as well. wasm.common, wasm."
3679200,3688960," So, now I have to pass this entire thing everywhere. But, I mean, that's something we have to do to make"
3688960,3699120," the codes, you know, extendable. So, and when I'm rendering the walls, I do have wasm.client already."
3699120,3704800," So, that means I can already pass that wasm.client in there, because it's also a wasm.common."
3705120,3713760," Huh. Look at that. OOP in inheritance. I have wasm.client, which is a child of wasm.common,"
3713760,3720240," and because of that, I can actually pass it in here. Anyways."
3720240,3732080," So, and walls new, we have to do this shit. All right, I hope it's not going to bite me in the ass."
3732080,3740240," I really fucking hope so. All right, but I feel like at some point I'll probably have to"
3741760,3751360," get rid of this walls idea, because it's kind of stupid. Yeah. Yeah, I'm not sure. But yeah. Okay, the next error."
3753840,3760400," scene get time. So, when I'm updating the particles, we need to..."
3760400,3770400," Aha. So, we need to know... Because the particles can actually reflect off of the walls. That's why"
3770400,3775040," we need to have a scene in there. That actually kind of explains it. Okay."
3776480,3782080," So, let's actually accept wasm.common in here. So, wasm.common, like so."
3782080,3789360," So, and it's obviously common, right? So, walls..."
3791600,3800320," And let's put it in here. So, I have to put walls in here. I didn't expect that I'm gonna end up"
3800320,3806480," doing this much refactoring, honestly. I didn't really expect that."
3806480,3815280," So, update bombs. We have to provide the wasm.common, but I don't pass wasm.common to here."
3817760,3826160," Write wasm.common. Can you just store uint inside scene struct? No, I can't. Because the thing about the"
3826160,3834960," uint arrays is that they have internal buffers. Let me show you something."
3834960,3844480," Yeah. So, basically, they have inner buffer. I already got burned by that in the past,"
3844480,3855120," but if this buffer gets transferred or resized or anything, your entire uint array gets invalidated"
3855120,3862160," and becomes empty. You can't really easily store this entire thing for a long time."
3862160,3868160," And the underlying array buffer... It's fucking true, believe it or not."
3870160,3879840," Yes. And the underlying array buffer is a wasm memory. And wasm memory can get at any point resized,"
3879840,3884080," because it needs to get extended. And as soon as it resizes, all of your uint array instances,"
3884080,3891680," they get invalidated and they become empty. And it's so goddamn fucking difficult to debug. It's insane."
3891680,3895840," When I first encountered it for the first time, I thought I'm gonna go crazy. It's just like,"
3895840,3904480," what the fuck is going on. But that's what can happen. If you have wasm memory, don't store uint8 or any kind of"
3904480,3911280," typed array views on that memory for too long. Because the memory can get extended and get fucking validated."
3912320,3921600," So, yeah. Maybe move this entire single tile into wasm. What the fuck do you think I'm in the middle of doing?"
3921600,3927360," I'm in the middle of moving code from javascript into wasm."
3927360,3932480," What kind of suggestion is that?"
3935440,3940800," Like, I mean, I understand, like, I need to move that very carefully so I don't break anything."
3940800,3943040," So..."
3943040,3956800," Okay, like, I made the mistake of just looking at the chat and trying to read the chat. Anyways, whatever."
3963440,3965600," All right, we have in here. So it's a wasm.common."
3965600,3969440," So I probably need to..."
3969440,3975520," All right. I like how uint8 array doesn't even mention it in a comment."
3975520,3980160," Yeah, it's fucking stupid, honestly. It's actually fucking stupid."
3980160,3985520," We can probably... You know what? I'm already streaming for one and a half of an hour. So I"
3985520,3990720," think I need to make a small break. And after the break, we can try to conduct maybe an experiment"
3990720,3996560," to see how that may happen. But I don't really have that much time, honestly. I would like to finish"
3996560,4002320," this feature before, like, in an hour or so because I have other things to do today. But anyway, let's"
4002320,4007520," make a break. I'm gonna make a cup of tea and... all right, I'm back. So, and I wanted to"
4007520,4012960," conduct an experiment that I was talking about, about invalidating uint arrays and stuff like that."
4012960,4023920," So let's actually try that. Right. So wasm uint8 invalid. So let's go ahead."
4023920,4032320," All right. So let's go ahead and maybe create like a module, right? So I know module is too much because"
4032320,4040560," module is a keyword in C3. So let's call it main C3. And in here, I suppose we can have a function that is"
4040560,4047440," called allocate. Right. So we're going to call it allocate. And it will allow us to allocate some bytes,"
4047440,4055840," I suppose. So maybe size. All right. So this is going to be an integer. And it's supposed to just"
4055840,4063680," return a pointer to something. This is going to be external, like allocate some bytes. External"
4064400,4073440," allocate some bytes, like so. And it's going to be a wasm, a thingy. Ah, emacs. Shut the fuck up, emacs."
4073440,4082240," Okay. So in here, we're going to have memory, a new array. And we are allocating character and size."
4082240,4090240," And here are some bytes. It's actually an array. Right. Let's just return bytes. I'm literally doing the same"
4090240,4099760," thing that I do in, in the game. So not probably not ideal, but I mean, it's fine. It works at least."
4099760,4107840," At least it does in fact work. Right. So, and what do we have in here is basically"
4110960,4128960," build.js build.js. So, all right. So let's actually remove this stuff. So the thing I'm going to do is"
4128960,4136080," replace this stuff with that. And so this is the things we do."
4137600,4143840," Uh, server. So this is going to be main. Uh, and in here is going to main C3."
4143840,4152000," Right. That's the thing we have in here. Missing something. What the fuck am I missing? I don't"
4152000,4160960," understand. Uh-huh. Uh-huh. So it's, it's make files. You're supposed to have tab in here."
4160960,4167280," You're supposed to basically have tab in here. Okay. So if I, um, I probably also want to do something main,"
4167840,4177440," what main wasm and they're going to be wasm to what wasm to what main wasm and, uh, main what."
4177440,4185520," All right. So, because I want to have both of them, I want to have both of them, uh, export."
4188400,4190960," And yeah, so we have allocated some bytes in here."
4190960,4209600," So, um, now what do we need to do? We need to load this WebAssembly module, uh, in JavaScript. Right."
4209600,4217200," So we're loading it in JavaScript. Um, so what's going to be the easiest way to do that? Um,"
4217200,4227680," so let's do const fs require, uh, fs fs read file synchronous. All right. So, and I'm loading the main"
4228400,4238240," wasm. Right. So here is the wasm module, uh, console, console log, wasm. All right. So I'm going to do"
4238240,4248240," node index.js. So here's the buffer and, uh, web assembly, uh, assembly instantiate,"
4248240,4255520," web assembly instantiate. So let's await for this entire thing. Right. So, and it is complaining about"
4255520,4262400," something is only, ah, okay. So, but I mean, it worked at top level, but maybe this is because"
4262400,4269120," it was actually running it through, um, through NPM. So maybe NPM was actually set in some sort"
4269120,4275520," of a mode where I could do like a top level thing, but here I couldn't do that. Yeah. Anyways. So, uh,"
4275520,4281440," we need to do wasm instance experts and we need to do initialize. Right. So initialize."
4282640,4287600," Uh, all right. So let's go ahead and, uh, do instance"
4287600,4296000," exports and maybe allocate some bytes. Right. Let's allocate some bytes and I'm going to allocate like"
4296000,4303360," 100 bytes. Right. So I'm going to allocate 100 bytes and then, uh, it gives me a pointer so I can do new"
4303360,4312400," you int eight clamped array. So this is the pointer. I'll have to provide the memory buffer. All right."
4312400,4318480," So I'm going to provide the memory, uh, buffer. So here it is. So this is the pointer and this is just like"
4318480,4328320," 100 bytes. Um, and these are the bytes. Maybe it makes sense to actually factor this thing out into"
4328320,4334400," a separate function because yeah. Uh, because I, I provide this thing twice, which is not particularly"
4334400,4340960," convenient. So let me actually do that function, uh, allocate some bytes and this is going to be the size."
4340960,4347200," Uh, and in here, um, we also need to provide the wasm module like so."
4349600,4359280," So this is going to be a return, uh, allocate some bytes wasm 100. Right. And we can just maybe even"
4359280,4367840," print these bytes, right? So we can print these bytes. So here they are. Cool. So another interesting"
4367840,4377760," thing, if we allocate another 100 bytes, another 100 bytes and print the previous bytes."
4379120,4387600," So is it going to work? Okay. So this is the same bytes. I can even go to, uh, here and just basically,"
4387600,4395840," um, fill them with 69. Right. So we know that they are the same bytes. Right. So, uh, before some"
4395840,4404400," allocation and after some allocation. Now, what if we allocate 100 kilobytes instead of 100 bytes?"
4406720,4411360," Seems fine. Um, what about 200 kilobytes?"
4411360,4415200," Hmm."
4415200,4424880," What about one megabyte? So we want to make this entire thing sort of extend at some point."
4424880,4427840," Hmm."
4430640,4436880," Seems to be working. Seems to be working. Seems to be working fine. Um, so we can take a look at the..."
4436880,4439360," It's not changing. Yeah, I know."
4439360,4443200," Ah, I see."
4443200,4449680," Because it was not using size, obviously."
4452800,4460560," Excuse me. All right. So let's try it one more time. Uh, right. So it's totally fine. Now let's allocate 100 kilobytes."
4466720,4474320," Can you not perform constructor on the detached array buffer. It got detached. It's actually kind of cool. Um,"
4474320,4477600," Because"
4477600,4482000," the browser is not going to even tell you this shit."
4482000,4490480," Uh, right. So it's Node.js that is kind of telling you this kind of stuff. The browser is just gonna, nah, I'm"
4490480,4499760," gonna just silently invalidate this and that. Um, so let's actually try this in the browser. It's rather interesting. Uh, so this is, uh, this thing."
4499760,4505840," Um, so for the browser, we have to do that slightly differently, I think."
4505840,4508640," We'll have to do fetch."
4508640,4511600," Let's do the fetch."
4513280,4521200," Uh, and, uh, we're gonna just do index.html. Uh, can I just do script src"
4521200,4525200," index.js without all this html bush."
4525200,4534320," Uh, right. So python3, um, yeah, python3m.httpserver.69.69."
4534320,4537520," All right. Uh-huh."
4537520,4539680," Let's take a look."
4542480,4543040," Mm-hmm."
4543040,4548080," So argument zero must be buffer source."
4548080,4554320," Uh-huh. Okay. So it has to be instantiate streaming."
4554320,4560240," Because we're streamers in here, aren't we? We're streaming. All right."
4560240,4563680," Streaming."
4563680,4571920," Is not allocate. Some buffers is not defined. I don't know why I commented it out."
4572480,4575120," Uh, yeah."
4575120,4582800," Yeah, so it cannot perform construct on detached buffer."
4582800,4587680," Yeah, something like this."
4590960,4594800," What's interesting is that this time it actually tells me about this thing."
4594800,4602560," Uh, I had a situation in the past when it was instead of throwing an exception,"
4602560,4604880," it was just silently invalidating this entire thing."
4607360,4611840," Maybe now they kind of fixed it and now it actually, uh, like, warns you about this."
4611840,4613040," Maybe it was updated in the..."
4613040,4618880," Maybe. But I had a situation when it was silently just, like, making the previous clump array, like,"
4618880,4620080," empty."
4620720,4623040," So, because it got resized or something. Right."
4623040,4627840," So I had this kind of situation. And because I've got burned like that,"
4627840,4633760," I now really extremely cautious, cautious when I'm storing you and clump arrays and stuff."
4633760,4635360," Uh, right."
4635360,4639600," So because they can, uh, they can get invalidated."
4640880,4642640," Uh, they can actually get invalidated."
4642640,4643760," All right."
4643760,4646240," So, um, I ran out of time."
4646240,4649840," Uh, I was hoping that I'm going to finish this feature before."
4649840,4652480," Um, 19."
4652480,4656640," So, but I mean, yeah, I couldn't finish it."
4656640,4659440," So maybe I'm going to do that on the next session."
4659440,4661360," Maybe tomorrow."
4661360,4662400," Um, we'll see, we'll see."
4662400,4664240," And then I'm going to continue this entire stuff."
4664240,4666400," Uh, so yeah."
4666960,4667280," All right."
4667280,4668320," This is for the day."
4668320,4670400," Thanks everyone who's watching right now."
4670400,4671600," I really appreciate that."
4671600,4672320," Have a good one."
4672320,4674800," And I'll see you all on the next recreation program session."
4674800,4677600," Uh, I'll finish this entire thing somehow."
4677600,4677920," Right."
4677920,4678800," So, and we'll see."
4678800,4679920," All right."
4679920,4680320," Love you."
4680320,4683440," All right."
4683440,4684640," This is the next day."
4684640,4685520," Uh, right."
4685520,4689600," And I would like to actually finish what I started in the, in the previous stream."
4689600,4694480," So I was actually demonstrating this weird example, uh, where I was making the case that you're not"
4694480,4701360," supposed to save the U8 clamped array, uh, like anywhere because the underlying buffer can be"
4701360,4704880," invalidated and it didn't exactly work as I expected."
4704880,4705280," Right."
4705280,4707600," So essentially the idea is, is the following."
4707600,4711120," Um, you make you a U8 clamped array."
4711120,4712320," Right."
4712320,4718800," And then, uh, after allocating some memory within, uh, WebAssembly module, this array,"
4718800,4723760," this reference can be invalidated silently and, uh, become empty."
4723760,4730320," So whatever example we came up with actually didn't, uh, you know, get invalidated silently."
4730320,4731600," It was doing that loudly."
4731600,4733040," And I think I figured out why."
4733040,4736080," So let's actually go and, and see how it looks like."
4736080,4737680," So I'm going to do something like this."
4737680,4739200," Uh, yeah, there we go."
4739200,4743680," So essentially when I was trying to create the next buffer, it was actually, um, you know,"
4743680,4751120," failing loudly and I think I know why this is because the thing I need to do in here,"
4751120,4757440," the thing I need to do in here is, uh, uh, take this thing and save it to a separate variable."
4757440,4757600," Right."
4757600,4760800," So in here, we're just calling to a WebAssembly module, right?"
4760800,4764560," We're just calling to a WebAssembly module and we call allocate some bytes."
4764560,4768080," And if we take a look at the implementation of this specific function, what it does,"
4768080,4770960," it just takes the size, the amount of bytes you want to allocate."
4770960,4774320," And it just calls the allocator built in, into C3."
4774320,4776720," And it just returns you a pointer to the first byte."
4776720,4776960," Right."
4776960,4778320," So that's basically what it does."
4778320,4779680," Uh, right."
4779680,4783360," So after we allocated some bytes, we got the pointer, which is going to be a number."
4783360,4783600," Right."
4783600,4789600," And then we are creating a view on the WebAssembly memory at that specific pointer."
4789600,4791520," And we just return this entire array."
4791520,4793520," So that's basically what this thing does."
4793520,4797200," So then what we do, we just allocate hundreds of bytes"
4797760,4799440," we fill them with 69."
4799440,4804080," We fill them with just some numbers to actually distinguish from, from the rest of the stuff."
4804080,4805920," And we lock this buffer."
4805920,4809920," Then we allocate more 100 kilobytes."
4809920,4814160," And we lock the previous buffer filled with 69s again."
4814160,4820880," And what we expect, what we expect in reality, it is to receive the same output twice."
4820880,4823200," The same output twice."
4823200,4825840," So if I try to do that, this is not what's going to happen."
4826720,4830960," So here's the first output filled with 69s."
4830960,4835120," Then I did a little bit of manipulation with the WebAssembly module."
4835120,4835360," Right."
4835360,4837760," I called allocate one more time."
4837760,4843200," And the same UNU8 clamped array instance is now completely empty silently."
4847040,4847920," So yeah."
4847920,4854720," In the previous stream, somebody asked why you don't save this UNU8 clamped arrays that view on the WebAssembly memory."
4854720,4861840," Because they can get invalidated at any point absolutely fucking silently when the WebAssembly memory gets resized."
4861840,4864640," I have no idea who designed it like that."
4864640,4866080," And why does it work like that?"
4866080,4872000," It's so fucking bizarre and it's actually very easy to shoot yourself in the leg."
4872720,4873440," Right."
4873440,4874880," That is absolutely fucked up."
4874880,4876880," And after that, these kind of people are saying,"
4876880,4878880," ""Oh, I see C++ hard."
4878880,4880000," You can shoot your leg."""
4880000,4883120," What the fuck is this shit?"
4885440,4886240," Excuse me."
4886240,4888400," What the fuck is this shit?"
4888400,4893200," Like, don't ever fucking say anything about C and C++ after this kind of stuff."
4893200,4896080," Right."
4896080,4896720," What the fuck?"
4896720,4898160," Right."
4898160,4900560," And it's so fucking easy to..."
4900560,4903280," It's so fucking difficult to debug, actually."
4903280,4907280," It is insanely difficult to debug because all of a sudden all of your buffers became empty."
4907280,4908240," Why?"
4908240,4909840," I don't fucking..."
4909840,4910800," They're empty now."
4910800,4917840," So, invalidating point in JavaScript."
4917840,4918640," Yeah, exactly."
4918640,4919920," Freaking..."
4919920,4922800," And like, nobody warned me about that."
4922800,4924960," Nobody warned me that this kind of stuff can happen."
4925680,4930160," So, this is so funny."
4930160,4931600," I don't know if we can know."
4931600,4936160," We can even take a look at what's going on with the WebAssembly memory."
4936160,4940480," I can take the WebAssembly buffer and I can just log it."
4940480,4940880," Right."
4940880,4946080," So, then I can log it once again after I allocated 100 kilobytes."
4946080,4946560," Right."
4946560,4948560," So, and if I try to run this entire thing..."
4948560,4952800," As you can see, first you had this amount of memory."
4952800,4953040," Right."
4953040,4954560," So, this is the size of the buffer."
4954560,4957680," And after the allocation, the size of the buffer is increased."
4957680,4963520," So, when the buffer is resized, I suppose all of the references on that buffer just gets"
4963520,4965840," invalidated and all of these references become empty."
4965840,4967680," So..."
4970560,4979280," Because of that, precisely because of that, I try not to store these typed array views for too long."
4979280,4980240," Right."
4980240,4983920," Because, again, something may happen with WebAssembly and all of that is poof."
4983920,4986320," And all of that is poof."
4986320,4987280," It disappears."
4987280,4989200," Dis-a-pears."
4989200,4995520," Anyways."
4995520,4996800," So, let's actually continue."
4996800,4997040," Right."
4997040,5000240," So, let's actually continue refactoring our thingy"
5000240,5001200," Amajingi."
5001200,5001760," Right."
5001760,5004000," So, I don't really remember what I was doing."
5004000,5006960," I completely freaking forgot."
5006960,5008960," But the one thing I remember..."
5008960,5014240," One thing I remember is that I think I didn't fix all of the compilation errors yet."
5014240,5019040," So, I think I can get back on track by trying to just compile my current application."
5019040,5021680," And it will fail, obviously."
5021680,5022000," Right."
5022000,5025200," So, and then we're going to pick up from the place where it fails."
5025200,5028240," And as you can see, there is a shed ton of errors."
5028240,5030560," So, they are in the client."
5030560,5030800," Right."
5030800,5031680," So, they are in the client."
5031680,5032560," Let's go into the client."
5032560,5035040," Client empty as."
5035040,5036480," All right."
5036480,5040000," So, and we can take a look at the errors that we have in here."
5040000,5043360," So, fly check shows that there is eight errors."
5043360,5043600," Right."
5043600,5046080," Let's actually go to the next error."
5046080,5047840," Fly check next error."
5049120,5050160," What do we have in here?"
5050160,5051760," Right."
5051760,5053920," So, wasm.common."
5053920,5057520," So, I suppose I just want to use wasm.common in here."
5057520,5057760," Right."
5057760,5058480," So, there we go."
5058480,5064000," What's interesting is that we're passing this wasm.common instance everywhere."
5064000,5065600," And I think somebody asked in the chat."
5065600,5067760," Can't you just make it like a global thing?"
5067760,5071600," I think I could make it."
5071600,5075600," But that means it has to be a global thing in a shared module."
5075600,5081920," And all of the parts, the client and the server, have to not forget to initialize the global"
5081920,5084080," variable within the common module."
5084080,5085200," And it's kind of a mess."
5085200,5092240," And all of that code is going to disappear anyway as soon as we write everything in C3."
5092240,5096240," So, I don't think I want to mess with making this entire thing a global variable."
5096240,5101520," So, we just need to get through that phase of just passing all of that shit to all of these"
5101520,5102080," functions."
5102080,5102320," Right."
5102320,5104480," So, and eventually everything's going to be okay."
5105600,5109120," So, and eventually everything is going to be okay."
5109120,5113360," Is it a bad idea to put it inside the scene interface?"
5113360,5115200," It's used not only by a scene."
5115200,5118400," It's going to be used by all sorts of things."
5118400,5121360," Scene is only one thing that we store in the WebAssembly module."
5121360,5127120," But everything that we're going to be storing in WebAssembly module will need that wasm.common thing."
5127680,5132640," And we're going to store eventually everything into the WebAssembly module."
5132640,5132880," Right."
5132880,5141280," So, obsessing about where to put certain things is kind of pointless in a code that is going to disappear."
5141280,5142640," You know what I'm talking about?"
5142640,5142880," Right."
5142880,5147840," Because it's very easy as of right now to just look at all of that stuff and go."
5147840,5149680," Oh, this thing should be a global variable."
5149680,5151520," Oh, these things should have been in that interface."
5151520,5157600," Oh, and let's spend a lot of time doing the organization and putting different things."
5157600,5159120," But all of that is going to go away."
5159120,5160560," Right."
5160560,5164720," So, we are on the process of just moving everything into WebAssembly module."
5164720,5166640," And we need to put it somewhere."
5166640,5168800," It doesn't really matter where."
5168800,5169840," We just need to put it."
5169840,5176160," So, if something changes, the type system in the compiler will tell us appropriate places"
5176160,5177760," where we need to make modifications."
5177760,5179520," You know what I'm talking about?"
5179520,5184640," It's like, honestly, where you keep your variables and how you pass your variables"
5184640,5188240," is not really that important in a statically typed language."
5189280,5189920," Right."
5189920,5194240," Because if something changes and the types are not going to match,"
5194240,5198960," the compiler automatically tells you go there and change something there."
5198960,5203040," So, the organization and how you pass things don't really matter that much"
5203040,5206160," because the compiler is going to tell you where to change things anyway."
5206160,5208320," So, you see what I'm talking about?"
5208320,5216160," It's kind of like a false, sort of like a mental trap that people get easily caught into"
5216160,5218640," and start obsessing about how to organize things."
5218640,5222400," But in reality, they're not making any like a meaningful progress."
5222400,5224480," Right."
5224480,5228240," So, yeah, it's better not to obsess like where to put all of these things."
5228240,5231760," It's just like you need to make all of that stuff compile."
5231760,5234160," And as soon as it compiles, it's going to work."
5234160,5235920," You know, if it compiles, it works."
5236720,5237040," All right."
5237040,5238880," So, let's go to the next compilation error."
5238880,5245760," So, here we have a wasm_common and yeah, it has to be prefixed with common."
5245760,5246240," There we go."
5246240,5252160," And so, we have a function update_bam which wants to have a wasm_common."
5252160,5253520," Okay, so we'll just pass it in there."
5253520,5257600," So, we have five errors left."
5257600,5259200," Five errors left."
5259200,5260720," So, emacs is..."
5260720,5261360," Okay."
5261360,5262240," So, what do we have in here?"
5262240,5264480," So, we have to pass a wasm_common in here."
5265600,5266800," Do I even have..."
5266800,5269840," So, this is a render_game."
5269840,5272320," A render_game."
5272320,5274160," So, wasm_client."
5274160,5274560," Aha."
5274560,5277600," And wasm_client part of the game."
5277600,5282000," In fact, I could have just passed on the game to all of these things."
5282000,5282240," Right."
5282240,5284160," I could have passed on the game and all of these things."
5284160,5289600," But I mean, just refactoring the signatures of all of this function is going to take as much time"
5289600,5292720," as just fixing all of these errors that we're dealing with."
5292720,5299920," So, again, it's a mental trap that is very easy to get caught into."
5299920,5300880," Right."
5300880,5304160," Just go through all of the compilation errors and just fix them."
5304160,5310640," Don't try to fantasize about how you would refactor this code too much."
5310640,5312800," Right."
5312800,5317200," Again, it's fantasizing about refactoring that you will never do because you don't have time."
5317200,5318960," It's..."
5318960,5320560," Yeah, it's that again."
5320560,5323440," So, it's really interesting actually."
5323440,5323600," Right."
5323600,5327200," So, fantasizing about refactoring that is never going to happen."
5327200,5327760," Right."
5327760,5332320," So, we can always fantasize about that, but at the end of the day, just like go through all"
5332320,5333920," the compilation errors and just fix them."
5333920,5334560," So, that's it."
5334560,5334800," Right."
5334800,5336640," So, the code sucks, but that's fine."
5336640,5337680," It works."
5337680,5338880," And as you can see, look at that."
5338880,5340800," We fixed all the compilation errors in the client module."
5340800,5342960," In no time."
5342960,5344400," Right."
5344400,5348240," So, we could have actually spent some time refactoring and reorganizing, but we just went"
5348240,5351200," through five compilation errors and now everything is fine."
5351200,5358720," And we would have spent more time refactoring and reorganizing things."
5359440,5364640," What we did instead, we just, you know, sucked it up, got your hyper, and just fixed the errors."
5364640,5366320," It's that fucking simple."
5366320,5368240," So, yeah."
5371120,5372560," Is that a fucking simple?"
5372560,5376480," But refactoring helps fix it."
5376480,5376960," Yeah, yeah."
5376960,5380160," This is what people keep telling themselves and wasting time."
5380160,5381280," Yeah, yeah, yeah, yeah, yeah, yeah."
5381280,5382800," All right."
5382800,5384880," So, but this is not all the errors, by the way."
5384880,5387920," So, there's a little bit more errors in other modules."
5387920,5389840," So, let's actually go through them as well."
5389840,5394800," So, yeah."
5394800,5395600," In the server."
5395600,5397920," So, let's take a look at the server."
5399120,5402560," Web server and application server."
5402560,5405680," So, we'll go to the next error."
5405680,5406560," So, what do we have in here?"
5406560,5408080," So, this is a common player."
5408080,5409600," And this thing wants a WASM common."
5409600,5412080," So, we already have WASM server."
5412080,5414640," So, I can just put a WASM server in here."
5414640,5415840," All right."
5415840,5417600," So, this is the next error."
5417600,5419600," And this is the other error."
5419600,5421200," So, WASM server."
5421200,5422240," Right."
5422240,5427600," So, you can put in the place of WASM common anything."
5427600,5427840," Right."
5427840,5431760," So, either WASM client or WASM server."
5431760,5431920," Right."
5431920,5432640," So, it doesn't matter."
5432640,5434480," They all extend the same interface."
5434480,5436000," That's kind of the point."
5436000,5436880," WASM server."
5436880,5437760," Right."
5437760,5438880," Extends WASM common."
5438880,5440320," It's actually empty."
5440320,5440480," Right."
5440480,5442400," But in the future, it's going to have some stuff."
5442400,5442640," Right."
5442640,5444080," I promise."
5444080,5445280," I swear, chat."
5445280,5445840," I swear."
5445840,5447440," It is going to have some stuff."
5447440,5458160," Backend is WASM on node."
5458160,5459520," Not fully, actually."
5459520,5459920," I think."
5459920,5462880," Can you run WASM on node?"
5462880,5464960," Backend is WASM on node."
5464960,5465200," Right."
5465200,5467520," So, we have a little bit of a logic in the JavaScript."
5467520,5470640," But we are trying to move some logic into the WASM."
5470640,5475760," And here is the module that is running through node."
5475760,5478960," And in here, you can do WebAssembly."
5478960,5481040," I mean, it's actually very easy to prove."
5481040,5481360," Right."
5481360,5482960," So, you just start node."
5482960,5483200," Right."
5483200,5484480," So, here is the node."
5484480,5486320," And you can do WebAssembly."
5486320,5486640," Right."
5486640,5488720," So, there is a WebAssembly module."
5488720,5492480," And you can just instantiate some WebAssembly module."
5492480,5495280," So, as you can see, you can use WebAssembly from node."
5495280,5498240," So, this is the proof."
5498240,5501520," This is the hard proof that you can do that."
5501520,5502400," All right."
5502400,5503200," Everything compiles."
5503200,5505520," Like, I don't know if it's going to work."
5505520,5506640," Right."
5506640,5509600," So, let me actually just try to run this entire thing."
5509600,5510960," I think it's not going to work."
5510960,5516800," because we have not updated the scene, I believe."
5516800,5518080," Oh, no."
5518080,5518560," Look at that."
5518560,5521040," We have updated it, surprisingly."
5521040,5521520," Wait a second."
5521520,5523760," Did I just fully implement this entire thing?"
5523760,5529360," What exactly means non-PoSEC environment?"
5529360,5533040," I have no idea in the context of C3."
5533040,5537120," So, first of all, this is something that C3 compiler outputs."
5537120,5540000," It's not node or any build system."
5540000,5543760," It's just C3 compiler while trying to compile WebAssembly prints,"
5543760,5546400," assuming non-PoSEC environment."
5546400,5547760," Right."
5547760,5550560," So, what is a PoSEC environment?"
5550560,5551600," What is PoSEC?"
5551600,5555760," PoSEC is a standard for operating system."
5555760,5555920," Right."
5555920,5557120," So, we can actually Google it up."
5557120,5557760," So, PoSEC."
5557760,5560480," So, I'm going to do Wiki."
5560480,5561760," It's a quite famous thing."
5561760,5566240," So, portable operating system interfaces,"
5566240,5567840," a family standard specified, blah, blah, blah,"
5567840,5571280," for maintaining compatibility between operating systems."
5571280,5576480," So, usually, the operating systems that implement PoSECs are Linux,"
5576480,5580000," BSD operating systems, Mac OS."
5580000,5583520," Mac OS is a, you know, BSD operating system."
5583520,5584720," Usually, it's Unixes."
5584720,5586720," Usually, it's Unixes."
5586720,5590480," Windows is considered a non-PoSEC operating system."
5590480,5591200," Right."
5591200,5594880," But it does implement a small subset of POSEX anyway."
5594880,5600240," So, if you have a C program that is targeting Linux,"
5600240,5604080," it may use some Linux-specific calls."
5604080,5608640," And because of that, it's not particularly portable to BSD or any Unixes."
5608640,5613280," FreeBSD has a compatibility layer with Linux, but that's besides the point."
5613920,5621280," If you write a program and target specifically POSEX and don't use anything that goes outside of POSEX,"
5621280,5623360," your program is probably going to be more portable."
5623360,5627680," You will be able to compile it on Linux, on FreeBSD, on Dragon,"
5627680,5632560," FlyBSD, OpenBSD, whatever, like everyone who implements POSEX."
5632560,5634000," So, that's what POSEX is."
5634000,5635440," Right."
5635440,5643680," So, here, when we're compiling to WebAssembly, usually, we don't have a POSEX environment in WebAssembly."
5643680,5645120," Right."
5645120,5648560," Because it's not an operating system or anything like that."
5648560,5654720," So, because of that, I suppose, what C3 compiler does,"
5654720,5660480," it basically disables some of the POSEX features when you compile to WebAssembly,"
5660480,5663440," aka assumes a non-POSEX environment."
5664960,5666080," I guess that's it, right?"
5666080,5667680," So, that's basically the explanation."
5667680,5672640," So, in WebAssembly, there is a thing called WASI,"
5672640,5678240," which is sort of like a standard of different functions that you can have in a WebAssembly"
5678240,5685040," environment, and it roughly kind of corresponds to POSEX, but not entirely."
5685040,5689040," It's kind of like very close to POSEX, but not entirely."
5690000,5697600," Which makes me think that WASI is literally embrace-extend-extinguish kind of scheme."
5697600,5701280," And I already talked about it actually several years ago."
5702160,5707840," When I looked at WASI, my first, literal first impression was, oh, they are competing with POSEX."
5707840,5709840," They're trying to extinguish POSEX."
5709840,5710240," Right."
5710240,5711360," Like, they're literally doing that."
5712480,5716400," So, I don't know, like, what do you guys think?"
5716400,5718720," Like, at the time, people were kind of laughing at me."
5718720,5723440," But now, WebAssembly is used in things like Docker."
5724400,5724720," Right."
5724720,5727920," And also, generally, for containerizing things."
5727920,5736720," So, and it is like the place where you want to use POSEX, but they want you to use WASI instead."
5736720,5742160," And since it's kind of close, it's kind of fine, but then it has some other things that may be not"
5742160,5743280," compatible with POSEX."
5743280,5745600," And this is where EEE kicks in."
5745600,5748400," We already saw that many times, actually."
5748400,5750560," So, it's kind of sus, in my opinion."
5750560,5754000," This wasn't my first impression of WASM as well after dabbling into it."
5754000,5754560," Exactly."
5754560,5757040," Like, it feels like just, like, you know, triple E."
5757040,5758560," That's what it feels like."
5758560,5759920," So."
5759920,5763280," Size is standard."
5763280,5763520," Right."
5763520,5765520," Anyways."
5765520,5767920," But again, I'm not making any claims."
5767920,5772320," It's just, like, what I'm saying is that WASI is kind of sus in that regard."
5772320,5773360," Right."
5773360,5776640," It feels that they're trying to do something fishy."
5776640,5778400," Like, and I do not appreciate that."
5778400,5780080," I do not appreciate that."
5780960,5781360," Okay."
5781360,5781920," Again."
5781920,5783920," So, what are we doing in here?"
5783920,5786560," So, I want to go into coil."
5786560,5786960," Right."
5786960,5789520," So, let's do npm run."
5789520,5792080," And I said, like, I don't think."
5792080,5794880," I don't think I need to do anything else."
5794880,5795120," Right."
5795120,5797200," So, I fully kind of ported this thing."
5797200,5798560," So, I can try to do serve."
5798560,5800160," Right."
5800160,5801280," I'm serving this entire thing."
5801280,5801440," Okay."
5801440,5803280," So, it's listening to this stuff."
5803280,5805280," And I'm opening."
5805280,5806240," So, it's not working."
5806240,5806480," Okay."
5806480,5807280," So, this is good."
5808160,5809600," So, let's take a look at the errors."
5809600,5812880," And it's not really saying anything."
5812880,5814080," Oh, wait."
5814080,5814800," It is working."
5814800,5815920," Okay."
5815920,5818640," All right."
5818640,5819280," It is working."
5819280,5822080," Huh."
5824960,5825440," Okay."
5825440,5826560," That's pretty cool."
5826560,5831280," It actually exploded in a weird place."
5831280,5832560," Okay."
5832560,5835680," So, I think it was something weird between the client and the server."
5835680,5837840," But apart from that, it was fine."
5837840,5840800," I don't really know how to reproduce that problem."
5841360,5842240," But I feel like, yeah."
5842240,5842640," That's it."
5842640,5849440," We moved the state of the scene to WebAssembly."
5849440,5852320," And now, we have two WebAssembly modules."
5852320,5855040," One WebAssembly module running on the client."
5855040,5857280," And another WebAssembly module running on the server."
5857280,5858160," Right."
5858160,5861600," So, and both of them store the state of the scene."
5861600,5861840," Right."
5861840,5863760," So, specifically where the walls are located."
5864320,5870800," Now, I can probably use this information to move a rendering of the walls."
5870800,5874560," Move rendering of the walls into WebAssembly as well."
5874560,5876800," I think I can finally do that chat."
5876800,5880480," So, the frame rate looks Pog."
5880480,5881520," So, GOOG."
5881520,5886000," I suppose that means good."
5886000,5886240," Right."
5886240,5887040," So, it's GOOG."
5887040,5889760," Anyways."
5889760,5892480," So, we have some stuff in here."
5893680,5896480," So, I think the time has come to do a committee committee."
5896480,5902880," So, do I want to just straight up commit that to the main branch?"
5902880,5906080," Or do I want to create a separate branch like a coward?"
5906080,5911360," Or do I just, like, deploy this shit without testing to production like a Chad?"
5911360,5917680," Separate branch like a coward?"
5917680,5918560," Really?"
5918560,5921120," Okay."
5921120,5922000," I don't know."
5922000,5922400," We'll see."
5922400,5922720," We'll see."
5922720,5925200," So, we have a bunch of what's."
5925200,5926800," I think I'm going to git ignore what's."
5926800,5928240," Wasm to what?"
5928240,5930640," Git ignore."
5930640,5932880," So, it's going to be what?"
5932880,5934160," Wasm to what?"
5934160,5936880," I'm so sorry."
5936880,5942960," The tool that I use all the time to convert wasm to what is literally called wasm to what?"
5942960,5945600," It's like literally a command line tool."
5945600,5947920," It takes wasm files and converts them to text."
5947920,5950880," It's such a funny name, it's just like it's such a funny name."
5950880,5952000," It's just like it wasn't to what?"
5952000,5953760," It wasn't to what?"
5953760,5957440," I'm sorry."
5957440,5961680," So, what do we have in here?"
5961680,5963280," So, we have a little bit of a building."
5963920,5967360," Let me do like npm build one more time."
5967360,5983040," So, what we're going to say in the commit message."
5983600,5986960," So, this is a sus my new friend, right?"
5986960,5991440," So, it's actually uncommon this entire thing because we actually want to print these stats."
5991440,5993120," Right."
5993120,5994560," So, we're going to say in the commit message."
5995520,6002800," I suppose what we want to say is we moved scene state to wasm, right?"
6002800,6005520," So, that's basically the change that we did in here."
6005520,6007200," So, as you can see here is the scene."
6007200,6009200," It used to be array of booleans."
6009200,6012960," Now, it's a pointer within WebAssembly memory."
6012960,6019200," So, that's basically the essence of this entire refactoring."
6019200,6025600," Everything else, all of the other changes, they actually stem from this simple change of"
6025600,6033360," changing array of booleans into a number, which is an index in an array of bytes of WebAssembly memory."
6033360,6036960," And that's what pointer is actually."
6036960,6038880," Pointers are just numbers."
6038880,6041760," They're indices in a byte array of memory."
6041760,6046320," So, yesu, yesu, yesu."
6048640,6050240," So, some people say something interesting."
6050240,6052320," From webassembly.com, portability in a web environment,"
6052320,6056160," functionality is accessed through the web APIs defined by the web platform."
6056160,6059200," Non-web environments can choose to implement standards web APIs."
6059200,6062160," Non-web APIs, for example, Postex or invent their own."
6062160,6063440," Sure."
6063440,6066240," All right."
6066240,6067680," So, what do we have in here?"
6067680,6070560," So, what I'm going to say is that maybe we're going to say common."
6070560,6077360," Move scene state to web assembly memory."
6077360,6081120," And I'm going to push that right into the repo."
6081120,6082560," That's right."
6082560,6084080," I'm pushing that into the repo."
6084080,6086080," And there is nothing that can stop me."
6086080,6087680," It's already pushed into the repo."
6087680,6098560," So, what we need to do."
6099120,6101920," We need to start porting the rest of the renderer."
6101920,6104960," Specifically, I want to port render walls."
6104960,6109600," So, render walls is rather interesting."
6109600,6114080," So, it's basically it's array tracing, right?"
6114080,6115360," It is array tracing."
6115360,6120720," So, essentially what it's doing, it's iterating through columns and shooting array through each"
6120720,6121600," individual column."
6121600,6128080," So, what I'm thinking is that the first thing we need to do, we need to port the function that renders"
6128080,6131520," the column of the wall to web assembly."
6131520,6136800," And once we do that, we're going to port render walls into web assembly."
6136800,6142720," So, we're basically slowly going to be porting the JavaScript from the bottom up into web assembly."
6142720,6144320," See what I'm talking about?"
6144320,6145360," See what I'm talking about?"
6145360,6148080," I think you do in fact see what I'm talking about."
6148080,6150240," So, let's go into the render column wall."
6150240,6152080," And this is a chunky function."
6152080,6152640," Look at that."
6152640,6156320," It's a pretty fucking chunky function, Mitch."
6156320,6158960," It's a pretty fucking chunky function, but that's about it."
6158960,6164880," So, let's actually grab this function and go into the client C3."
6164880,6169120," And I'm going to literally copy-paste JavaScript code into C3."
6169120,6172320," Because I'm not afraid of doing that."
6172320,6173760," It's not even JavaScript code."
6173760,6176000," It's actually TypeScript code."
6176000,6179600," I'm taking TypeScript code, literally, and I'm copy-pasting it into a file"
6179600,6180480," with a different language."
6180480,6181760," I don't give a shit."
6181760,6184160," You're going to laugh at me saying that I'm stupid."
6184160,6186560," Look, I'm copy-pasting it, like, but that's what I do."
6186560,6188960," And like, but how are you going to compile it?"
6188960,6190080," Well, I'm going to come into doubt."
6190080,6194080," Who am I arguing with?"
6194080,6195760," Fucking nobody."
6195760,6197600," Anyway, so the idea is that we're going to be slowly"
6197600,6204240," translating the TypeScript code to C3."
6204240,6206880," So, that's what we're going to be doing in here, right?"
6206880,6209520," So, let's actually uncomment the signature, right?"
6209520,6211360," So, uncomment the signature."
6211360,6214160," And let's start with the syntax, right?"
6214160,6216640," So, render column of walls."
6216640,6221520," So, I suppose we need to actually, you know, use a camel case."
6221520,6222720," It's a snake case, right?"
6222720,6226640," So, the next thing we accept in here is a display."
6226640,6231200," So, in WebAssembly display is actually three variables in here."
6231200,6235680," It's a pointer to where the pixels start and width and height of the pixels, right?"
6235680,6238160," So, that's the first thing we'll have to accept in here."
6238160,6242640," On top of that, I think I need to specify the external name for the function,"
6242640,6247200," and the fact that it is compiled for WebAssembly."
6247200,6253360," So, let's say that the external name of this function is going to be WASM."
6253360,6254960," All right."
6254960,6261520," So, display is going to be a pointer to the caller, right?"
6261520,6266960," And we're also going to be accepting display width and display height."
6267920,6270080," So, we are in the WebAssembly code."
6270080,6273920," So, we don't really need to accept WebAssembly client, right?"
6273920,6276480," We are already in WebAssembly."
6276480,6281840," If we want to access WebAssembly memory, we can just do that from C3."
6281840,6283920," Just like you write normal C3 code."
6283920,6286240," We're not in some stinky JavaScript, right?"
6286240,6289360," So, if you want to access memory, we can just access memory."
6289360,6292240," So, the next thing we accept in here is cell."
6292240,6294240," I don't quite remember what is cell."
6294240,6299120," Cell is a tile, and I think it's basically an image, right?"
6299120,6300320," So, let me see."
6300320,6303600," It's either color or image."
6303600,6306960," To be fair, we don't really have colorful walls right now."
6306960,6309440," We have only walls that have an image."
6309440,6311680," So, maybe what we're going to be doing in here,"
6311680,6316560," we're going to be just accepting the image, right?"
6316560,6321920," But that means we don't really have images."
6322880,6325280," Do we have images as..."
6325280,6327440," Yeah, we need to store them in WebAssembly module."
6327440,6328320," Damn."
6328320,6336800," So, as of right now, we don't really store images in WebAssembly."
6336800,6337040," Right."
6337040,6338720," So, where are all these things?"
6338720,6339440," Load image."
6339440,6342400," I think there was a load image data."
6342400,6344000," Load image data."
6344000,6344640," Here it is."
6344640,6344880," Yeah."
6344880,6347280," So, when we're loading image data, it's just like image data,"
6347280,6350160," but it's not in the WebAssembly memory."
6352240,6354240," It's not a WebAssembly memory."
6354240,6360240," So, we need to refactor a little bit how we store images, assets, and stuff like that."
6360240,6363920," And we need to literally store them in WebAssembly memory."
6365680,6374080," So, we can't right away, we can't right away refactor this function to WebAssembly because"
6374080,6378560," it wants to have an access to images, but images are not stored in WebAssembly yet."
6378560,6380960," They're not stored in WebAssembly."
6380960,6383120," Okay."
6383120,6384960," So, yeah."
6384960,6385920," How are we going to be doing all that?"
6385920,6386560," So, when I..."
6386560,6386800," Okay."
6386800,6390000," So, I can allocate pixels and stuff like that."
6390000,6392080," So, let's actually do a little bit of refactoring."
6392080,6394000," So, load image data."
6394000,6399200," I think we need to introduce like a new kind of image,"
6399200,6401360," which is..."
6401360,6403360," I don't even know how to call that."
6403360,6410160," like a new kind of image, which is going to have like a pointer, which is a number."
6410160,6413760," And also, it's going to have width and height."
6413760,6417280," And we need to store..."
6417280,6418560," Let's call it WASM image."
6418560,6420960," That's a good idea, actually."
6420960,6421120," Right?"
6421120,6422080," So, it's a WASM image."
6422080,6424480," It's an image in WASM memory."
6424480,6426560," That's what it is, right?"
6426560,6428160," So, it's going to be image in WASM memory."
6428160,6429120," And instead of..."
6429120,6432480," Like when we're loading the image data, we're going to be actually returning WASM image."
6432480,6434800," Right?"
6434800,6440960," And interestingly, we probably need to accept the WASM client."
6440960,6441120," Right?"
6441120,6444960," So, WASM client, because we can be calling to allocate pixels and stuff like that."
6444960,6446800," All right."
6446800,6449520," So, here we're loading an image from the interwebs."
6449520,6451920," Then we create off-screen canvas."
6451920,6452320," Right?"
6452320,6455760," So, then we're slapping an image on the off-screen canvas."
6455760,6458080," And then we're returning image data."
6458080,6459360," Right?"
6459360,6463200," So, I think I want to save this image data like so."
6463200,6464720," Right?"
6464720,6465920," I'm saving image data."
6465920,6472480," And I need to allocate, you know, some pixels in a WebAssembly module."
6472480,6473760," So, I can do WASM client."
6473760,6476720," Allocate some pixels."
6476720,6479040," So, here we specify the width."
6479040,6479840," Image width."
6479840,6481840," Image height."
6481840,6482560," There we go."
6482560,6485360," So, this is basically PTR."
6485360,6487440," This is the pointer that points to the pixels."
6487440,6489360," One thing we want to do."
6489360,6493680," We want to move the entirety of this image into the WebAssembly module."
6493680,6495440," So, we need to construct something like."
6495440,6498000," So, I think image data."
6498000,6500000," Image data has."
6500000,6501360," Yeah."
6501360,6502160," It's a uint."
6502160,6502400," Okay."
6502400,6503360," So, this is actually perfect."
6503360,6505280," It's a uint clamped array."
6505280,6507760," So, that means I can do something like this."
6507760,6512080," New uint 8 clamped array."
6512080,6514720," So, and when I'm constructing this Metaflipper."
6514720,6516000," Where is the constructor?"
6516000,6516320," Okay."
6516320,6518480," I provide the buffer offset and length."
6518480,6520640," So, I have to provide the WASM memory."
6520640,6522880," WASM client memory."
6522880,6525120," Memory buffer."
6525920,6527840," So, the offset is a pointer."
6527840,6533920," And the size is width multiplied by height multiplied by 4."
6533920,6536160," Because a single pixel is 4 bytes."
6536160,6537920," So, we'll get this kind of thing."
6537920,6539200," So, we need to find a copy."
6539200,6541520," I think it's not really copy."
6541520,6542800," I think it's something like."
6542800,6543280," Yeah."
6543280,6544480," So, you can do set."
6544480,6547040," So, and we should be able to do something like."
6547040,6547440," Okay."
6547440,6552320," Set the entirety of the image data in here."
6552320,6558160," And that basically copies the bytes of the image into the WebAssembly module."
6558160,6558400," Right."
6558400,6561760," And now we should be able to just return this kind of thing like so."
6561760,6562000," Right."
6562000,6563200," So, it's going to be just a pointer."
6563200,6565680," Width is going to be image width."
6565680,6566480," Right."
6566480,6569040," So, and this is going to be image height."
6569040,6570480," Right."
6570480,6572080," So, this is basically what we're doing here."
6572080,6575600," We allocate the amount of bytes of the size of the image."
6575600,6578960," And we're just moving all the pixels of the image into that WebAssembly module."
6578960,6580480," Right."
6580480,6582720," So, that's what we're doing in here."
6582720,6583600," Okay."
6583600,6586320," And that obviously prompted a lot of compilation errors."
6586320,6591040," But again, let's not fantasize how we're going to be refactoring all that."
6591040,6594400," Let's just go to the compilation errors and fix all of them."
6594400,6596720," And once we fix all of them, it is going to work."
6596720,6598160," The code is going to be shed."
6598160,6600080," But all code is shed."
6600080,6604160," Have you ever seen a good useful code?"
6605600,6607920," I personally, like, I'm programming for 18 years."
6607920,6612400," I've never seen a useful code that is also pretty."
6612400,6614160," Like, I've never seen it."
6614160,6615920," Like, I've been looking for that for years."
6615920,6617120," Like, I've never fucking seen it."
6619440,6628240," So, the useful code that actually solves real-life problems is not pretty, because real life is not pretty."
6630160,6631200," It is what it is."
6631200,6634720," It is what it isn't."
6634720,6634960," Right."
6634960,6640160," Real life is messy."
6640160,6643840," I'm really sorry to tell you that, CS grads."
6643840,6646320," But real life is very fucking messy."
6646320,6648400," It is insanely messy."
6648400,6649680," Right."
6650640,6654400," So, because, and that's why the most, you know,"
6654400,6663120," I don't want to say reliable, but one of the easiest solutions for some of the real-life problems"
6663120,6667040," is actually literally a mess."
6667040,6672400," Like, literally a mess of neurons, which we call a neural network."
6673680,6674000," Right."
6674000,6679520," Have you guys thought that a neural network is basically a huge spaghetti code?"
6679520,6681200," Basically."
6681200,6682720," That is automatically written."
6682720,6689920," Like, it's an automatically generated spaghetti code."
6689920,6691200," That's what neural networks are."
6691200,6697520," So, and it turns out to be the best solution for a lot of problems."
6697520,6699200," Believe it or not."
6699200,6702640," It's spaghetti, it's almost better than exactly."
6704000,6704320," Right."
6704320,6707920," Because it models the real life, and real life is fucking messy."
6707920,6709280," It is messy."
6709280,6716720," It is what it is, and it isn't what it isn't, my dear friend."
6716720,6720160," Don't learn how to write good code."
6720160,6723200," Learn how to read bad code."
6723200,6726960," That is way more useful skill, honestly."
6726960,6731440," Because I guarantee you, in a real, like, job,"
6731440,6734720," you will almost have no opportunity to write good code."
6734720,6739280," But you're going to be reading your shadow code every single fucking day."
6739280,6744000," So, yeah, I'm sorry."
6744000,6749120," Solve the problem."
6749120,6750560," Don't write good code."
6750560,6751360," Write useful code."
6751360,6752880," Write fast code."
6752880,6754640," Write reliable code."
6754640,6758480," Write valuable code."
6758480,6760240," What the fuck is good code?"
6763360,6764480," Anyways."
6764480,6767200," Crying code."
6767200,6767760," Exactly."
6767760,6768400," Crying code."
6768400,6771760," So, let's go to the next compilation errors."
6771760,6772960," All right."
6772960,6774400," So, load image data."
6774400,6776720," Maybe I should rename this entire modaflippa?"
6776720,6779280," How about I rename this entire modaflippa?"
6779280,6782720," So, what if I say, load wasm image."
6782720,6782960," Okay."
6782960,6783920," So, I'm going to create a place."
6783920,6786400," Load wasm image."
6786400,6790240," So, it doesn't like something in here."
6790240,6791520," I wonder what exactly."
6791520,6792720," So, are we going to..."
6792720,6794240," Ah, this modaflippa wants..."
6794240,6797040," It wants wasm client."
6797040,6800800," But I actually load wasm client simultaneously with the images."
6800800,6804160," So, that means I actually need to first load the wasm client."
6804160,6804400," Right."
6804400,6806400," So, I probably want to put it in here."
6807040,6808880," So, this is going to be wasm client."
6808880,6810480," I need to await, obviously."
6810480,6812080," And in here."
6812080,6813760," Right."
6813760,6815120," And yeah."
6815120,6818800," So, after I loaded the wasm client, I need to put it in here."
6818800,6824960," And then wasm client."
6824960,6827200," Okay."
6827200,6827600," That's cool."
6827600,6829760," So, that seems to be working."
6829760,6832320," So, we reduce the amount of compilation errors to two."
6832320,6835200," So, let's go to the next error."
6835200,6836560," So, assets."
6836560,6838000," It doesn't like assets anymore."
6838000,6839680," Oh, I think..."
6839680,6840000," Yeah."
6840000,6843440," So, I think the time has come to go to the assets definition."
6843440,6848560," And replace all of the image data with wasm images."
6848560,6850640," So, this is a wasm image."
6850640,6852800," And honestly, I think I want to remove data."
6852800,6855760," So, now it's going to be just image."
6855760,6856800," That's what it's going to be."
6856800,6858800," So, now we have eight compilation errors."
6858800,6860240," Not that bad."
6860240,6860480," Right."
6860480,6861520," Could have been worse."
6861520,6862800," Definitely could have been worse."
6862800,6864160," Okay."
6864160,6867440," So, when I'm rendering this entire thing, I'm passing this entire stuff."
6867440,6871440," But, obviously, render column of wall wants to have..."
6871440,6873120," Yeah."
6873120,6873680," One of the things..."
6873680,6874960," It wants to have a tile."
6874960,6875920," Right."
6875920,6879200," In the definition of tile, we expect image data."
6879200,6881200," We need to expect wasm image."
6881200,6881680," There we go."
6881680,6884720," So, now we have seven compilation errors."
6884720,6885600," Next compilation error."
6885600,6886640," Okay."
6886640,6889520," So, when I do sprite of item kind."
6889520,6889760," Right."
6889760,6892720," So, I'm mapping item kind to a particular image."
6892720,6894960," And what I need to do, I need to return wasm image."
6894960,6897920," And in here, in all of these things."
6897920,6899920," I don't think I streamed this."
6899920,6902080," But I recently introduced a new image."
6902080,6904240," Right."
6904240,6909280," So, and that new image is basically this."
6909280,6909520," Right."
6909520,6912160," So, basically, the lack of texture."
6912160,6913600," Right."
6913600,6915920," So, it's like an in-source engine or something like that."
6915920,6917760," Anyways."
6917760,6921440," So, and in here, let's actually remove the data"
6923440,6924800," from the name."
6924800,6927520," So, now it is just an image."
6927520,6929280," No compilation errors."
6929280,6930400," Next compilation error."
6930400,6932320," Sprite of kind."
6932320,6933120," Right."
6933120,6934240," It expects..."
6934240,6935440," What is it talking about?"
6935440,6936960," What is it yapping about?"
6936960,6938400," Oh, it returns..."
6938400,6938640," Yeah."
6938640,6939040," I see."
6939040,6940000," So, push sprite."
6940000,6941120," When we push in sprite."
6941120,6943920," We push in either image data or..."
6943920,6944720," Yeah."
6944720,6946400," So, it wasm image."
6946400,6946720," Okay."
6946720,6948000," Wasma."
6948000,6950560," All right."
6950560,6951680," So, what else do we have in here?"
6951680,6952320," Next error."
6952960,6955200," So, image."
6955200,6956800," Aha."
6956800,6958880," So, sprite pool."
6958880,6964960," Sprite pool is an array of sprites where image is either image data."
6964960,6966320," So, wasm image."
6966320,6966800," There we go."
6966800,6968640," All right."
6968640,6970000," So, four errors now."
6970000,6972720," BOM image data."
6972720,6972960," Okay."
6972960,6974160," So, let's remove that."
6974160,6975840," So, yeah."
6975840,6976400," It doesn't compile."
6976400,6978240," So, only three compilation errors."
6978240,6980240," So, we put assets in here."
6980240,6981840," So, it still doesn't like assets."
6982480,6985280," So, this is because we have this data stuff."
6985280,6987440," We don't have this prefix anymore."
6987440,6988800," Six errors."
6988800,6990320," Oh."
6990320,6991200," This is because I..."
6991200,6992320," Huh."
6992320,6993840," That's kind of bizarre, honestly."
6993840,6994320," But, I mean..."
6994320,6995280," Yeah."
6995280,6995360," Yeah."
6995360,6997280," One error."
6997280,6998720," One error."
6998720,7000560," So, one compilation error is left."
7000560,7002000," So, are we good?"
7002000,7004880," I think we don't have any compilation errors."
7004880,7005360," Look at that."
7005360,7007520," Yo."
7007520,7009840," Why don't we have any compilation errors?"
7009840,7012000," Like, when I'm rendering wall..."
7012000,7013840," Right."
7013840,7015360," And I'm rendering colon."
7015360,7018400," How the fuck do I access an..."
7018400,7019200," Wait a second."
7019200,7020640," Oh."
7025360,7026480," That is terrible."
7026480,7030080," So, because now we're passing..."
7030080,7031840," Okay."
7031840,7033600," So, passing image data."
7033600,7034560," So, it will just say..."
7034560,7034880," Oh."
7034880,7036560," This is not an image data."
7036560,7038400," So, it's just not going to do anything."
7038400,7044080," I should have actually done something else in here."
7044080,7046400," And just throw an error that this is an unknown thing."
7046400,7046880," But, I mean..."
7046880,7047840," Damn."
7047840,7048960," This is dangerous."
7048960,7049200," Right."
7049200,7051840," So, it's just going to sound to not work, I suppose."
7051840,7053120," Yeah."
7053120,7054400," It's going to sound to not work."
7054400,7055520," So, let's actually see."
7055520,7057200," Right."
7057200,7058480," So, let's do the serve."
7058480,7060320," Just in case."
7060320,7061520," Let me do run build."
7061520,7062720," Yeah."
7062720,7063840," It's dangerous, man."
7063840,7065120," It's fucking dangerous."
7065120,7067840," TypeScript is supposed to prevent this kind of shit."
7067840,7068960," But, it doesn't."
7068960,7070080," Maybe because it's my fault."
7070080,7071120," But, I don't fucking know."
7071120,7072960," I'm not going to blame myself."
7072960,7074640," Right."
7074640,7076000," So, let's actually do run."
7076000,7076800," Where are..."
7076800,7077040," Yeah."
7077040,7078480," So, here are the stats."
7078480,7080560," And I suppose it's just basically..."
7080560,7080800," Yeah."
7080800,7083440," So, it just silently doesn't show any walls."
7083440,7083840," Right."
7083840,7084880," Because it skips them."
7084880,7087440," Because it literally skips them."
7087440,7090080," Blame others always."
7090080,7090240," Yeah."
7090240,7090560," Exactly."
7090560,7090960," Exactly."
7090960,7091360," You're right."
7091360,7091760," You're right."
7091760,7092720," Okay."
7092720,7095040," So, maybe one of the things we can do in here, chat."
7095040,7101520," We can just search for instance of image data."
7101520,7101760," Right."
7101760,7103680," Just search for all of these cases."
7108000,7108400," All right."
7108400,7111120," So, one, two, three."
7111120,7113120," There's only three cases like that."
7113120,7113440," Okay."
7113440,7115200," One of the things we can do."
7115200,7118880," We can just quickly replace the whole thing with was an image."
7118880,7119760," Like so."
7119760,7120960," Boom, boom, boom."
7120960,7122880," So, that should..."
7122880,7123120," Yeah."
7123120,7124720," That created 16 errors."
7124720,7125280," Exactly."
7125280,7128400," So, you know, refactoring was too easy."
7128400,7129680," So, now I can see why."
7129680,7132320," Because we basically skipped 16 compilation errors."
7133120,7133440," Right."
7133440,7136080," That's literally what happened."
7136080,7138000," We skipped 16 compilation errors."
7138000,7138960," So, that's why."
7138960,7139920," So, was an image."
7139920,7141680," So, what you don't like."
7141680,7144080," So, only refers to a type."
7144080,7146160," Ah."
7146160,7147920," Fuck."
7147920,7148400," Bravo."
7153120,7158240," I can't just do instance of wasm image."
7158240,7164480," Because interfaces is just a, you know, weird fantasy of TypeScript and they don't exist in real life."
7164480,7168560," Interfaces don't really exist in real life."
7168560,7171360," It's just a fantasy of Microsoft employees."
7172160,7175920," So, because of that, I can't do instance off of this entire shit."
7175920,7179200," This is annoying."
7179200,7180320," Because I need to do that."
7180320,7182080," I really need to do that."
7182080,7186240," So, that."
7186240,7187520," TS is a complete fantasy."
7187520,7188480," So, we'll get some subs."
7188480,7189920," Thank you so much for all the subs."
7189920,7192560," And also, I missed a lot of things."
7192560,7196320," So, let me actually see."
7196320,7198320," Yesterday."
7198320,7200240," So, all of that was yesterday."
7200240,7202160," Winnie.round."
7202160,7203440," Thank you so much for tier one."
7203440,7205360," Thank you, Mr. Zodin."
7205360,7206240," You're welcome."
7206240,7206800," Enumerate."
7206800,7208000," Thank you so much for making bits."
7208000,7209600," I'm working on my own programming language."
7209600,7212720," And I'm just going to tell myself that life is messy."
7212720,7218160," Once I debug the 1,000 switch case statements I put at 3am for some reason."
7218160,7226240," I mean, so, sometimes, like, switch statements with a lot of cases are fine."
7227120,7230720," Usually, that means that you're storing data in the code."
7230720,7235200," Quite often, when you have these kind of, like, huge switch cases,"
7235200,7240480," you can move all of that stuff to some sort of, like, a JSON file or XML file."
7240480,7245200," And that XML or JSON file can be as big as that switch case."
7245200,7251040," So, quite often, you're just, like, you're basically storing data in the code."
7251600,7253600," Which, in some cases, is fine."
7253600,7254880," Why not?"
7254880,7258560," Just, like, store them together using the same language, by the way."
7258560,7260160," Which is kind of cool."
7260160,7260960," So, I don't know."
7260960,7265200," Thank you so much, UnhappyEngineer2 for five community gifted subs."
7265200,7265600," Yeah."
7266560,7270880," So, I suppose, I think, like, Undertale, right?"
7270880,7275040," Toby Fox actually wrote, like, a huge switch cases, like, within the game."
7275040,7277280," And it's totally fine, right?"
7277280,7278000," It works."
7278000,7280480," And, you know, Undertale is a pretty cool game."
7280480,7282160," So, yeah."
7282160,7284000," I think all of that matters."
7284000,7285760," What matters is the end product."
7285760,7287040," Is the end product good?"
7287040,7288560," So, it doesn't matter."
7288560,7290560," Anyways."
7290560,7291520," Okay."
7291520,7294080," So, maybe what if we just make it a class?"
7294080,7295120," Let's just make it a class."
7295120,7296080," I think it's a good idea."
7296080,7301760," Because if I make it a class, that means I'll be able to instance all this thing."
7301760,7310480," So, constructor, constructor, ptr, number, width, number, height, number."
7310480,7313840," And maybe I'm gonna just copy paste this entire stuff."
7313840,7316000," And I'm going to..."
7316000,7317920," What the fuck is A?"
7317920,7322080," So, this is gonna be this."
7322080,7324480," And then I'm gonna just do this."
7324480,7336000," So, load wasm image."
7336000,7340320," So, in here, what we're gonna be doing essentially is just like a new wasm image."
7341280,7345600," ptr, image, width, and image, height."
7345600,7347920," Boom."
7347920,7348560," All right."
7348560,7352080," So, that's like only four compilation errors."
7352080,7354000," Only four compilation errors."
7354000,7355040," Okay, let's take a look at them."
7355040,7364560," So, we need to have an access to data."
7364560,7367760," We need to have an access to data."
7367760,7374320," So, I think what we have to do now, since cell is an wasm image, what we can do."
7374320,7374560," Okay."
7374560,7384960," Cell data, new uint8, clamped array, wasm client, memory buffer."
7384960,7387600," So, we need to take the pointer."
7387600,7388560," Cell ptr."
7388560,7389360," Can you see chat?"
7389360,7389600," Okay."
7389600,7390320," So, now we can."
7390880,7394880," Cell width multiplied by cell height multiplied by four."
7394880,7396560," So, we got a cell data."
7396560,7401520," So, that means in here, we should be able to do the following thing."
7401520,7404080," Almost, almost did it."
7404080,7406720," This is gonna be, boom."
7406720,7409920," That works."
7409920,7410400," Okay."
7410400,7411760," So, next arrow."
7411760,7413120," Okay."
7413120,7414320," So, this is the data."
7414320,7416160," We don't have a data in here."
7416160,7417120," So, this is image."
7417120,7417920," Yeah."
7417920,7419040," It's a wasm image."
7419040,7422640," I suppose here we can do a similar thing."
7422640,7427840," You int clamped wasm client memory buffer."
7428400,7439200," So, here we have a pointer and then we just grab this thing width multiplied by height multiplied by four."
7439200,7445120," So, now it's src and we directly access in src as but that's it."
7445120,7446640," There's no compilation errors anymore."
7446640,7448560," So, we fixed all of them."
7448560,7450800," So, okay."
7450800,7452480," Let me try to recompile this entire thing."
7452480,7456480," Didn't expect that, honestly."
7456480,7457360," That was too easy."
7458400,7459360," Too easy."
7459360,7460160," Piece of cake."
7460160,7462000," All right."
7462000,7463120," Seems to be compiling."
7463120,7464560," Let's restart this entire thing."
7464560,7470480," So, theoretically now, images should be stored."
7470480,7470640," Yeah."
7470640,7470880," Okay."
7470880,7471360," It works."
7471360,7473600," Damn."
7473600,7480400," So, all of the images, like walls and sprites and stuff like that, all of them are stored within"
7480400,7484320," WebAssembly memory and we're retrieving them from the WebAssembly memory."
7484320,7487680," That is kind of fucking cool."
7488400,7490800," That is kind of fucking cool."
7490800,7491040," Okay."
7491040,7495600," So, let's go into the client C3."
7495600,7503040," So, now, since we have an access to WebAssembly, like, since all of the images are within the WebAssembly,"
7503040,7511360," Now, what we have to do, we have to accept this cell as basically also a triple pointer width and height."
7511360,7511600," Right."
7511600,7512800," That's what we need to do in here."
7512800,7513920," Pointer width and height."
7515520,7517920," So, maybe I can do something like this."
7517920,7518720," All right."
7518720,7529920," So, this is going to be basically cell, which is a color pointer, then cell width and int cell height."
7529920,7532320," So, the rest of the stuff in here is number, right?"
7532320,7536720," So, I suppose I'm going to just accept it as a float."
7536720,7538000," Vectors."
7538000,7538640," Okay."
7538640,7541840," So, passing vectors through WebAssembly is kind of a pain in the ass."
7541840,7544320," So, I think I'm going to split them."
7544320,7547680," I'm going to split them into two things, right?"
7547680,7550960," So, we're going to have float px float py."
7550960,7553360," I don't remember what p and c stands for, right?"
7553360,7556160," So, but what I know is that I have to actually pass them somehow."
7556160,7558560," So, it's going to be cx float cy."
7558560,7561920," So, we're going to be, like, passing this amount of arguments in here."
7561920,7562800," That's what we're going to be doing."
7562800,7564320," Okay."
7564320,7568560," So, let me actually try to compile this entire thing and see how it is working."
7568560,7573600," Is your aim eliminate this from the project?"
7573600,7578560," In fact, the ts and JavaScript, as much of JavaScript as possible."
7578560,7580160," So, that's my goal."
7580160,7583280," Right."
7583280,7589280," So, we're going to have so little TypeScript that we probably won't need to use TypeScript."
7589280,7595200," So, the little glue code between the client and the browser is going to be"
7595200,7597120," JavaScript and it's going to be super small."
7597120,7598480," It's just, like, literally glue code."
7598480,7600880," So, it's not going to be TypeScript at all."
7600880,7602880," Hopefully."
7602880,7604080," Hopefully, hopefully, hopefully."
7604080,7606480," So, yeah."
7606480,7607360," I've got the function."
7607360,7609840," I want you to take a look at what."
7609840,7611680," Wasm to what?"
7611680,7616720," Client wasm redirect client what."
7616720,7618640," All right."
7618640,7619760," So, let's take a look at that."
7619760,7621680," And let's take a look at the Expert functions."
7621680,7625520," We have a render column of wall."
7625520,7627680," And that's exactly the function that we're porting in here."
7627680,7628720," And it's empty right now."
7628720,7631040," So, look how many arguments it accepts in here."
7631040,7631280," Right."
7631280,7631920," So, these are."
7631920,7634880," It accepts 11 arguments."
7634880,7636480," 11 integers, actually."
7636480,7641040," So, issue, issue, issue."
7644560,7650800," So, reading through the C3 compiler source has been super interesting."
7650800,7652160," It's a cool line for sure."
7652160,7652800," Yeah."
7652800,7657840," So, Lerner, thank you so much for, like, making the source code simple."
7657840,7659040," Right."
7659040,7664080," So, without introducing too much abstractions or anything like that."
7664080,7664320," Right."
7664320,7668720," So, I mean, the source code is not that simple."
7668720,7668960," Right."
7668960,7671360," So, because programming languages are complicated."
7671360,7671600," Right."
7671600,7675840," So, because they have a lot of, like, special cases and stuff like that."
7675840,7682640," But he didn't put anything that would obscure the, like, row complexity of the language."
7682640,7684320," And this is what I appreciate."
7684320,7684720," Right."
7684720,7685040," There is."
7685040,7689280," I didn't see any artificial complexity within the source code."
7689280,7691280," Only the necessary things."
7691280,7694160," So, and that's what makes the source code easy to work with."
7694160,7695040," Right."
7695040,7701840," So, and this is one of the reasons why I decided to start using this language in one of my projects."
7701840,7705040," Even though the language is rough around the edges."
7705040,7707600," It has some bugs and stuff like that."
7707600,7711120," The source code is easy to read and modify."
7711120,7715680," So, I know that if I encounter any problems, I can just fix them myself."
7715680,7717040," Actually."
7717040,7718400," Right."
7719040,7721680," Just put some sort of a hack in there or something."
7721680,7721920," Right."
7721920,7722160," So."
7722160,7724240," So, yeah."
7724240,7726720," Which is super cool."
7726720,7729680," Just, like, try to fix a bug in a Clang code base."
7729680,7732480," Good luck."
7732480,7740160," I've never heard of C3."
7740160,7740480," Good."
7740480,7742080," Good."
7742080,7745040," I'm really glad that you never heard about this language."
7745040,7747840," So, I can finally use this language in peace."
7747840,7750160," Right."
7750160,7750560," Anyways."
7750560,7756560," This language is only for lead hackers."
7756560,7756960," You know?"
7756960,7759120," That's why you never heard about it."
7759120,7759440," Okay."
7759440,7760880," So."
7760880,7763600," Get them."
7763600,7764960," Fucking get them."
7764960,7768480," What I was doing?"
7768480,7769040," I forgot."
7769040,7770240," I forgot what I was doing."
7770240,7772400," So, we need to now start."
7772400,7773760," Yeah."
7773760,7776720," I need to add this function to Wasm Client."
7776720,7780800," Where is the interface for a Wasm Client?"
7780800,7785360," So, let me go ahead and just copy-paste."
7785360,7788080," That's a goddamn chunky function."
7788080,7791040," This is a one-hour chunker."
7791040,7792160," Right."
7792160,7795200," So, this is going to be the display, which is going to be a number."
7795200,7797040," All of these things are going to be numbers, by the way."
7797040,7799040," All of these things are going to be numbers."
7799040,7801600," Damn."
7801600,7802400," All right."
7802400,7804960," But again."
7804960,7806160," Like, I think it's fine."
7806160,7807840," All that code is going to go away."
7807840,7809200," Hopefully."
7809200,7810640," Hopefully, it's going to go away."
7810640,7812320," All right."
7812320,7812800," Let's go."
7812800,7815200," So, this is a float."
7815200,7816880," This is a number."
7816880,7822160," There's no distinction between integers and floats in JavaScript."
7822720,7824960," All of them are numbers."
7824960,7826320," All of them are numbers."
7826320,7827920," All right."
7827920,7830400," So, and this thing does not return anything."
7830400,7831600," Look at this chunker."
7831600,7833840," Look at this chunker."
7833840,7835760," You can't even see the entirety of this chunker."
7835760,7837040," It doesn't fit into the screen."
7837040,7838400," That's how chunky it is."
7838400,7842320," So, all right."
7842320,7845040," So, let's take a look at the rest of the compilation errors."
7845040,7846160," What do we have in here?"
7846160,7846720," Oh, yeah."
7846720,7850720," So, what we have to do, we have to grab this thing."
7850720,7852000," All right."
7852800,7856080," And let's just copy-paste it in here."
7856080,7856400," All right."
7856400,7860880," So, basically, say ""exports has..."""
7860880,7869840," To be honest, this kind of code should be basically automatically generated, I think."
7869840,7872720," So, but it doesn't..."
7872720,7872960," Yeah."
7872960,7874080," So, this thing has to be..."
7874080,7876800," Yeah."
7876800,7881440," So, all of that, again, is going to go away as soon as we move everything inside of the WebAssembly module."
7881440,7881600," Right."
7881600,7885040," So, none of these functions are going to be really exposed to JavaScript."
7885040,7885280," Right."
7885280,7887920," So, all of them are going to become an internal function eventually."
7887920,7889920," So, that's totally fine."
7889920,7890880," Right."
7890880,7892720," So, we don't have any errors in here."
7892720,7893840," And yeah."
7894880,7897600," So, let me try to maybe compile this in there, I think."
7897600,7900480," Let me try to compile this in there."
7900480,7909280," By the way, we can probably try to call this function already."
7909280,7913680," So, render_walls, really not render_walls, but..."
7913680,7917360," Yeah."
7917360,7920800," So, we can try to call it in here, but it's not really finished yet."
7920800,7923840," It's not really finished yet, but we can try."
7923840,7926800," So, render_column..."
7927600,7928160," Where is it?"
7928160,7930800," So, we can put it in here."
7930800,7935200," And we can just do wasm_client."
7935200,7940160," So, here is the display, but display is a pointer."
7941520,7947200," So, within the display, we probably have back_image_pointer."
7947200,7947440," Yeah."
7947440,7950480," So, here it is like a back_image_pointer, back_image_width and height."
7950480,7952080," So, that's what display is."
7952080,7956560," So, in here, this is going to be back_image_ptr."
7956560,7962800," This is back_image_width, like so."
7962800,7969040," Then, right, display_back_image_height."
7970800,7971840," Height, I set."
7971840,7972800," Cell."
7972800,7974880," So, do we have a cell?"
7974880,7978080," So, we pass in cell, okay."
7978080,7980880," So, we pass in cell as a wall_image, right?"
7980880,7982320," So, explicitly."
7982320,7984080," So, we know that this is a ptr."
7984080,7989200," Then, we have to do wall_image_width, like so."
7989200,7993040," Then, we have wall_image_height."
7993040,7996960," So, then, we pass x and where do we..."
7996960,7998800," Okay, so, x is this thing."
7998800,8002640," Oh, x is a column that we're currently iterating."
8002640,8002960," Okay."
8002960,8005120," So, which is actually kind of important."
8005120,8011040," Since it's a column, it probably has to be an integer, but I actually marked it as float."
8011040,8013120," So, I think I need to explicitly say it's an integer."
8013680,8021840," By the way, using WASM and C3 and stuff like that will finally enable us to do integer math."
8021840,8026640," Which, in WebAssembly, I noticed much faster than floating-point math."
8027280,8029040," So, this is actually kind of cool."
8029040,8030880," Right."
8030880,8033280," So, we can finally slowly move towards integer math."
8033280,8039360," Like, I couldn't do any integer math in JavaScript because freaking JavaScript doesn't have any integers."
8039360,8043280," It's so goddamn stupid, but that's what it is."
8043280,8044160," Right."
8044960,8045600," So, anyway."
8045600,8050960," Yeah, let's put it in here and let's put it in here as well."
8050960,8055680," Okay."
8055680,8058960," So, we're calling this thing and there's no compilation errors or anything like that."
8058960,8059840," So, yeah."
8059840,8065120," We're calling to render column of wall that is implemented in WASM."
8065760,8066000," Right."
8066000,8070560," Let me try to compile this and see how it's going to work."
8070560,8072960," So, right now this function doesn't do anything."
8072960,8075920," So, that means we're not going to see any walls."
8075920,8077120," Right."
8077120,8078400," We're not going to see any walls."
8078400,8082000," Let's go to the local 69."
8082000,8083440," Yeah, there's no walls in here."
8083440,8083680," Right."
8083680,8090160," But, if we switch to the JavaScript implementation of render column of walls,"
8090160,8091760," I think it is going to work now."
8096080,8097280," Freaking neighbors."
8097280,8100480," All right."
8100480,8101040," So, let me see."
8101040,8102320," Yeah."
8102320,8103840," So, it does in fact work."
8103840,8109680," So, let's switch back to the web ascending and maybe we can try to test this entire thing."
8109680,8115360," Since we have x, one of the things we can do, we can just iterate y."
8115360,8115600," Right."
8115600,8122240," So, it's going to be y from 0 to display height like so."
8122880,8126560," And we can simply maybe fill that column."
8126560,8130400," We can fill that column with some sort of a color."
8130400,8130640," Right."
8130640,8132880," So, let me see."
8132880,8134560," So, we can do display."
8134560,8139120," Y multiplied by display width plus x."
8139120,8142240," And we can just put maybe red in there."
8142240,8142480," Right."
8142480,8144560," So, but let's not make it too bright."
8144560,8145680," Right."
8145680,8151040," So, maybe it's something like 50, 50 and then FF."
8151040,8151280," Right."
8151280,8155280," So, we are writing all of that in C3."
8155280,8158080," It's kind of important to remember that."
8158080,8160800," It's in C3 and compiled to WebAssembly."
8160800,8162640," So, it's actually trying to compile this entire thing."
8162640,8169120," So, now after that, the entire screen should be red if we did everything correctly."
8169120,8178080," Actually, this one is not in the entirety of the screen."
8178080,8181840," Only the columns where you have walls."
8181840,8183520," This is so cool."
8183520,8185200," I didn't expect that."
8185200,8185520," Yeah."
8185520,8186240," So, this is correct."
8186240,8188320," This is even more correct than I expected."
8188320,8188640," Right."
8188640,8195840," So, columns where you're supposed to have, you know, walls are now just like these strips."
8195840,8197360," So, everything is working correctly."
8197360,8198640," I'm so happy actually."
8198640,8198960," Damn."
8198960,8201280," Okay."
8201280,8201520," Okay."
8201520,8201840," Okay."
8201840,8204880," So, let's go ahead and just like continue porting this entire thing."
8204880,8212960," So, here we just get uint clamped array by a pointer."
8212960,8215840," But now we are programming in a real proper programming language."
8215840,8218880," We don't need to do that because here it is."
8218880,8220560," So, we have the pointer."
8220560,8222400," We have a language with pointers."
8222400,8226800," So, I think I'm not going to implement the color part."
8226800,8227120," All right."
8227120,8230800," So, basically, you could have like a solid color walls."
8230800,8232800," I don't think we need them."
8232800,8234160," Like, we don't use them at all."
8234160,8234320," Right."
8234320,8236400," So, this code is kind of like not used anywhere."
8236400,8238400," So, I think I'm going to remove this code."
8238400,8243200," I'm only going to leave the code that is basically just, you know, renders the images."
8243200,8243840," So, that's it."
8244480,8245600," So, the next thing we need to..."
8245600,8246160," Oh, damn."
8246160,8249200," We need to have zbuffer."
8249200,8251920," Bruh."
8251920,8257360," And so, zbuffer is an array of floats."
8257360,8260800," And it's basically the zbuffer for the columns."
8260800,8267360," So, it is needed to properly call the, you know, the sprites and stuff like that."
8270400,8274240," So, that means we need to allocate it."
8274240,8276320," So, right now, we can only allocate pixels."
8276320,8281040," We'll need to introduce like an allocator for the zbuffer or something."
8281040,8281280," Right."
8281280,8285840," So, let's actually say something like allocate zbuffer."
8285840,8287440," So, here we're going to..."
8287440,8289360," So, since it's a vertical one."
8289360,8291520," So, this one is going to be width, essentially."
8294160,8294800," I guess it's in..."
8294800,8295120," Yeah."
8295120,8295280," Yeah."
8295280,8296000," It's in JS."
8296000,8296160," Right."
8296160,8298080," So, we'll have to move this..."
8298080,8298480," Yeah."
8298480,8299840," That's very annoying."
8299840,8301520," But I think it's not that much code."
8301520,8302880," Right."
8302880,8306640," So, it's basically the same process as moving scene to WebAssembly."
8306640,8306960," Right."
8307840,8309360," And we already went through that."
8309360,8311680," So, I don't think it's that difficult."
8311680,8314720," So, zbuffer, new array."
8314720,8316080," So, allocate in float."
8316080,8317440," And it's just going to be width."
8317440,8321360," It would be better to just have like a general purpose allocator."
8321360,8326560," And just call that single general purpose allocator from JavaScript."
8326560,8327680," But I mean, it's fine."
8327680,8330960," zbuffer zero."
8330960,8331920," All right."
8332720,8336080," So, in here, I'm going to actually copy paste this."
8336080,8337360," And I think..."
8337360,8338720," Let me go into the client."
8338720,8345600," MTS interface wasm client."
8345600,8345840," Right."
8345840,8347680," So, here we're going to have allocate zbuffer."
8347680,8351280," It's a width number returns number."
8351280,8353120," And that's about it."
8353120,8355040," So, also display."
8355040,8357440," Here's the zbuffer."
8357440,8360320," It has to be zbuffer pointer."
8360320,8360560," Right."
8360560,8362160," So, it's going to be a number."
8362160,8366720," So, that prompts a lot of different calculation errors and changes and stuff like that."
8366720,8372000," So, every time you allocate a new array, you're going to do this."
8372000,8374160," A different kind of array."
8374160,8375120," Right."
8375120,8375920," So, but then..."
8375920,8376240," I mean..."
8376240,8381600," I don't think we allocate that much."
8381600,8386400," So, essentially, at some point, if I'll have to create a lot of different kinds of allocation functions,"
8386400,8389440," I'll just create a single one that is generic."
8389440,8389680," Right."
8389680,8393200," So, basically, it's going to be void allocate."
8393200,8393440," Right."
8393440,8395680," So, it's going to be size and bytes or whatever."
8395680,8396480," Right."
8396480,8399840," But I mean, we don't really have that many different kinds of things to allocate."
8399840,8402320," So, and again, eventually, it's going to go away."
8402320,8405360," Because all of that is going to be folded into the C3 code."
8405360,8407360," So, it's just like it doesn't matter."
8407360,8409280," It's an intermediate sort of state."
8409280,8410640," It's an intermediate sort of state."
8410640,8411920," All right."
8411920,8413200," So, let's go to the condition errors."
8413200,8414800," So, we have nine of them."
8414800,8415040," Right."
8415040,8419920," So, compilation errors are good because they help us to refactor the code."
8419920,8421760," Next error."
8421760,8422960," So, this code is not used."
8422960,8423680," That's fine."
8423680,8424960," It's not even a compilation error."
8425760,8426080," Okay."
8426080,8429040," Zbuffer is now a pointer."
8429040,8435040," So, what that means is that we have to do const Zbuffer."
8435760,8447680," And since it's a float, we probably have to do float32 array wasmclient memory buffer."
8447680,8452880," So, and in the display, we do Zbuffer pointer."
8452880,8455120," And right."
8455120,8460160," So, here what we do, we just say display width."
8460160,8462880," So, this is the Zbuffer."
8462880,8465120," So, in here, I can just do something like this."
8465120,8465920," Does it compile?"
8465920,8466480," It compiles."
8466480,8466960," Look at that."
8466960,8470160," So, it actually back image width."
8470160,8471360," Like this."
8471360,8472160," Yeah."
8472160,8474480," So, it's that."
8474480,8477120," And next error."
8477120,8479120," So, this is just a regular Zbuffer."
8479120,8481360," Next error."
8481360,8482480," Regular Zbuffer."
8482480,8483280," Anything else."
8483280,8484080," The next error."
8484080,8484880," Okay."
8484880,8487120," So, here we have to do the same thing."
8487120,8493280," I might as well actually just copy paste this entire thing."
8494480,8496160," So, it wasn't client buffer."
8496160,8499520," So, it wasn't client buffer, display Zbuffer, display back image."
8499520,8501280," So, yeah."
8501280,8502320," This is that."
8502320,8506160," So, now we're storing all of that Zbuffer stuff in a WebAssembly module."
8506160,8507360," Aha."
8507360,8508400," This one is interesting."
8508400,8511280," We already allocate the pixels in here."
8511280,8511920," Look at that."
8511920,8518480," So, it kind of ended up in the same place, Zbuffer pointer."
8518480,8519840," All right."
8519840,8520720," So, it's a number."
8520720,8528400," And we just do allocate Zbuffer width."
8529040,8532880," And I can just put Zbuffer pointer in here like so."
8532880,8534640," Okay."
8534640,8535360," Next error."
8535360,8536960," Aha."
8536960,8538160," That's another place."
8538160,8538800," Do we do."
8538800,8540320," Aha."
8540320,8542400," Zbuffer new."
8546080,8547120," So, wasn't client."
8547120,8547760," We have that."
8547760,8549520," Display Zbuffer pointer."
8549520,8550240," Back image."
8550240,8552800," All of that is in fact correct."
8552800,8556720," Next compilation error is that."
8556720,8559760," Next compilation error."
8559760,8562880," Next compilation error."
8562880,8564000," Aha."
8564000,8567040," So, here allocate scene."
8567040,8568720," Allocate."
8568720,8570880," It's actually not allocate scene."
8570880,8573760," It's more like allocate Zbuffer."
8573760,8575760," Zbuffer."
8575760,8578080," And only the width."
8578080,8579760," All right."
8579760,8582880," All the compilation errors are gone."
8582880,8584640," All of the compilation errors are gone."
8584640,8585120," Perfect."
8585120,8590720," So, let me go into the client C3."
8590720,8594560," So, now on top of accepting display."
8594560,8596960," We're going to be accepting the pointer to Zbuffer."
8596960,8601280," Interestingly, we don't have to pass the size of the Zbuffer."
8601280,8604000," Because the size of the Zbuffer is the width of the display."
8604000,8606400," So, none of that really matters."
8606400,8610320," Though, I need to update the signature of this thing within the"
8610320,8614080," JavaScript code."
8614080,8618400," So, now we also accept Zbuffer after the display height."
8618400,8620960," So, that prompts a few more compilation errors."
8620960,8622080," Which is fine."
8622080,8624880," I think we can live with them."
8624880,8631600," So, after the height, we accept display Zbuffer pointer."
8631600,8633920," So, is it in fact after the height?"
8633920,8635920," I think it is in fact after the height."
8635920,8637200," And that's it."
8637200,8641280," We don't really have any other compilation errors."
8641280,8642720," Which is kind of surprising to me."
8643840,8649440," So, let me take a look at the wasm client."
8649440,8651200," Where's the definition of wasm client?"
8651200,8653840," So, yeah."
8653840,8655680," Here we accept this thing."
8655680,8657040," And when we are..."
8657040,8660960," Yeah."
8660960,8663920," Why the fuck did it just compile?"
8665840,8667280," This is not supposed to work."
8667280,8671520," We are missing one argument in here."
8671520,8673600," And it just like silently compiles?"
8673600,8676080," That is not good."
8676080,8681680," So, if I try to like literally run npm run build."
8681680,8685280," Don't tell me it's going to compile."
8685280,8687520," Yeah, it compiled."
8687520,8687920," Like it's..."
8687920,8690720," That is so bizarre."
8692960,8693360," I think..."
8693360,8700560," I think TypeScript just borked because of this code."
8700560,8701440," Right."
8701440,8704560," So, because I'm casting this function to this."
8704560,8706560," Right."
8706560,8710960," But the expected type has one more argument."
8710960,8712960," Right."
8712960,8717040," Has one more argument in here."
8717040,8720960," Right."
8722480,8724240," So, yeah."
8724240,8728640," So, this is expected type."
8728640,8730480," And this is what we're casting it to."
8730480,8732880," And TypeScript is totally fine with that."
8732880,8734720," And you know why?"
8734720,8737840," Because JavaScript is shit, I suppose."
8737840,8738640," Because you can..."
8738640,8739840," I see."
8739840,8743280," This is fucking dangerous."
8743280,8746560," Because in JavaScript, you can miss arguments."
8746560,8749280," You can actually pass more arguments than you actually need."
8749280,8751280," I guess that's what it is."
8751280,8751600," Right."
8751600,8752800," So, it's kind of bizarre."
8752800,8754320," Like, I don't fully understand that."
8754320,8756720," Time to item generate."
8756720,8758880," Again, all of that code will go away."
8758880,8763040," Stop fantasizing about shit that is going to be removed."
8763040,8763440," Please."
8763440,8764880," I beg you."
8764880,8768560," Stop fantasizing of shit that you're never gonna fucking do."
8770560,8782000," So, there's more important things in here than just fuzzing about refactoring and reorganizing and generating and stuff like that."
8782000,8784080," Just solve the goddamn fucking problem."
8784080,8785920," That's what's more important."
8786720,8787040," Okay."
8787040,8793680," So, now it is fine, I suppose."
8793680,8793920," Right?"
8793920,8796400," So, we can even compare string by string."
8796400,8800880," So, as you can see, they literally match."
8800880,8801920," They literally match."
8801920,8803200," Emacs says so."
8810480,8812000," ""Ignoring arguments is a reverse overloading."""
8812000,8812560," Maybe."
8812560,8813760," What is it?"
8813760,8816480," It doesn't make sense to me, honestly."
8816480,8817600," Anyways."
8817600,8818720," Anyways."
8818720,8819200," Anyways."
8819200,8819840," Anyways."
8819840,8823200," So, let's go ahead and do this thing."
8823200,8823520," Okay."
8823520,8825840," So, we need to have a strip height."
8825840,8827600," So, this is a strip height."
8827600,8833520," Might as well, actually, maybe we replace strip height with just strip height like this."
8833520,8835760," Yep."
8835760,8838480," So, this is a strip height."
8838480,8842080," So, this is going to be float."
8842080,8843920," So, this is a display height."
8843920,8848720," It's an integer, but we're dividing it by z buffer, which is a float."
8848720,8848960," Okay."
8848960,8849440," Cool."
8849440,8851440," So, let me try to compile this entire thing."
8853200,8854080," All right."
8854080,8855680," Let me try to compile this entire thing."
8855680,8859280," Okay."
8859280,8859600," Come on."
8859600,8860080," You can do that."
8860080,8860320," Oh."
8860320,8861360," And it seems to be compiled."
8861360,8863280," Seems to be compiled."
8863280,8863520," Cool."
8863520,8866800," So, now the next thing is un."
8866800,8870320," I don't really know it's going to be integer or float."
8870320,8871920," I'm going to keep it as float now."
8871920,8878400," So, now I need to have t, which is p minus c."
8878400,8881600," And p and c are floats."
8881600,8883120," I mean, the vectors."
8883120,8884880," So, maybe this is something that I can do."
8884880,8886800," I can probably restore them back."
8886800,8891680," So, this is going to be c, cx, cy."
8891680,8895440," So, and in here I just do p minus c."
8895440,8896960," Yeah."
8896960,8897520," Okay."
8897520,8903840," So, this is one of the reasons to replace JavaScript with, you know, c3."
8903840,8907920," because now you can write this thing as p minus c."
8907920,8908320," That's it."
8908320,8910880," That's it."
8910880,8913440," So, what do we have in here?"
8913440,8914960," So, math abs."
8914960,8920000," As far as I know, I can just use abs from math."
8920000,8922400," Right."
8922400,8932560," So, client mts."
8932560,8933760," So, epsilon."
8933760,8937440," We're going to put that epsilon in here."
8937440,8938640," So, this is a float."
8941360,8944880," So, I guess let's just go into the compiled or anything."
8944880,8946320," I think it's compilable."
8946320,8947600," All right."
8947600,8949840," Is it compiling?"
8949840,8951280," I think it does not."
8951280,8952240," So, because..."
8952240,8952720," Yeah."
8952720,8956080," By the way, I think it doesn't have to be even const."
8957120,8959360," We can just say something like this."
8959360,8968080," So, is it compiling?"
8968080,8969040," Seems to be compiling."
8969040,8970560," All right."
8970560,8971200," So, it's compiling."
8971200,8978640," Now, we need to translate this code, this JavaScript code to c3."
8978640,8980720," So, we'll just uncomment the first line."
8980720,8983280," So, f."
8983280,8985200," So, this is a display."
8985200,8988640," Might as well actually take all of the instances of this thing"
8988640,8992480," and replace them with simply display height right away."
8992480,8993920," So, to not waste any time."
8993920,8996240," So, strip height is a float."
8996240,8997600," This one is integer."
8997600,8999120," So, I suppose this is going to be float."
8999120,9002080," And this is going to end up being a float."
9002080,9005280," So, I'm going to just keep it as it is."
9005280,9006560," All right."
9006560,9010240," So, afterwards, this is float."
9011120,9018000," Actually, we're using y1 and y2 as basically the rows."
9018720,9022880," So, I suppose this thing, I think, is meant to be an integer."
9022880,9023040," Right."
9023040,9024320," So, we're doing the seal."
9024320,9025360," Yeah."
9025360,9026720," So, this was float."
9026720,9030320," So, then later we can seal it and convert it into the integer."
9030320,9031520," All right."
9031520,9032480," So, that makes sense."
9032480,9036160," So, and because of that, this thing is also floored."
9036160,9036480," Right."
9036480,9039600," So, and we're flooring it because we want integer out of that."
9039600,9039840," Right."
9039840,9044160," So, in JavaScript, we couldn't have them as an integer because JavaScript is a toy language."
9044160,9045600," It doesn't have any integers."
9045600,9048960," But here we can have integers because it's a proper adult language."
9048960,9050720," All right."
9050720,9052000," So, this is going to be that."
9052000,9054960," So, here is going to be min and max."
9054960,9057120," All right."
9057120,9058720," So, we've got these things."
9058720,9060640," Let's actually see if it compiles."
9060640,9061680," I think it will compile."
9063840,9070000," So, just use ChatGPT to port it for you."
9070000,9075920," I actually tried to use ChatGPT some time ago to convert one language to another."
9075920,9077280," It was such a fucking shit."
9077280,9077920," Holy fuck."
9077920,9081040," Anyways."
9081040,9082000," So, TX."
9082000,9083280," Right."
9083280,9086720," And this is a language that ChatGPT probably doesn't know anything about."
9086720,9091040," So, this thing, I think it has to be an integer as well."
9091040,9091360," Right."
9091360,9093040," So, here we're going to do that."
9093840,9095920," All right."
9095920,9098800," So, here, what do we even have in here?"
9098800,9101200," So, we take this cellHeight."
9101200,9103120," QueerReplace."
9103120,9105040," So, cellHeight."
9105040,9105840," Okay."
9105840,9108560," So, and this is supposed to be a float."
9108560,9108800," Right."
9108800,9112720," So, StripHeight is already float."
9112720,9114880," So, it's going to automatically convert everything to float."
9114880,9116640," So, we're going to keep this thing as a float."
9116640,9117920," Right."
9117920,9118880," So, now Shadow."
9118880,9121280," I suppose it's going to be a float."
9122240,9124320," So, here, we take that."
9124320,9125680," So, this is a zbuffer."
9125680,9128400," Let's replace it with zbuffer."
9128400,9129920," There's only one instance of that."
9129920,9132320," This is going to be that."
9132320,9133200," This is that."
9133200,9134080," And this is that."
9134080,9135680," So, here is this stuff."
9137120,9137520," Alright."
9137520,9139920," So, let me see if it's still compiled."
9139920,9140800," Ah, fuck."
9140800,9142880," Yeah."
9142880,9147680," So, cell with cell with."
9147680,9148240," Boom, boom."
9148240,9149600," Alright."
9149600,9150320," Let's recompile."
9150320,9164800," So, let's import the loop."
9164800,9176080," So, let's import the loop."
9176080,9180000," This is going to be an integer."
9180000,9181360," That's it."
9181360,9183680," So, that's the entirety of the port of the loop."
9189600,9190880," So, this is float."
9190880,9192880," And actually, no."
9192880,9195440," It's going to be an integer because it's a coordinates within the texture."
9195440,9198000," Since it's a coordinate, it has to be an integer."
9198000,9200000," So, this one is going to be just an int."
9200000,9203120," So, sh is actually used only once."
9203120,9204720," Maybe we're going to."
9204720,9211280," I think I feel like I want to inline it, but let's not inline it yet."
9212160,9215280," Ah, so these are the indices, right?"
9215280,9217840," So, we use dspp as in."
9217840,9218480," Okay, okay."
9218480,9221360," So, because of that, it has to be an integer."
9221360,9227040," But, we actually index the pointers to the color."
9227040,9233680," So, that means we don't even have to multiply it by four because we have a proper pointer arithmetics."
9233680,9241120," JavaScript doesn't even have a proper pointer arithmetics and that's why we had to multiply by four."
9241120,9246800," But, now we use a proper language with a proper pointer arithmetics and now it is much better."
9246800,9250160," So, yeah."
9250160,9251200," It is what it is."
9251200,9252080," And it is what it is."
9252080,9255440," So, let's actually move in here."
9255440,9256080," Display."
9256080,9259840," It's a width, right?"
9259840,9261840," So, display width."
9261840,9262160," Boom."
9262160,9263360," All right."
9263360,9264480," So, we got these things."
9264480,9269520," So, back image data is actually display."
9270320,9270640," Right."
9270640,9272240," So, this is display."
9272240,9275680," And this is just cell."
9275680,9278240," But what's interesting is..."
9278240,9279280," What the fuck are you doing?"
9279280,9280560," I need to just remove that."
9280560,9289200," So, instead of doing this kind of stuff, what we have to do is r, g, and b."
9290320,9294800," And this is basically that."
9294800,9297200," Right."
9297200,9303280," I think we fully ported this function to c3."
9303280,9306000," It's pretty cool."
9308320,9308720," Okay."
9308720,9310160," So, let's try to compile this thing, I think."
9310160,9313280," It doesn't compile."
9313280,9314960," It doesn't compile."
9314960,9316240," What does it say?"
9316240,9317360," Float cannot be able to..."
9317360,9318240," Ah, fuck."
9318240,9319200," All right."
9320560,9321840," This is character."
9321840,9323040," All right."
9323040,9328640," So, I have to convert all of the characters to floats, I suppose."
9328640,9331840," Though, what if they..."
9331840,9336640," I think they should be automatically converted to floats when I multiply it by floats."
9336640,9342240," So, then later, I can just do char content."
9342240,9346320," Yeah, I think I can."
9346320,9350640," Yo, it even compiles, bro."
9350640,9353120," It even compiles, bro."
9353120,9354640," It even compiles, bro."
9354640,9356880," So, that's pretty progress."
9356880,9359520," Let me see what we can do in here."
9359520,9363200," A render floor and ceiling."
9363200,9363680," Not really."
9363680,9365200," A render column of wall."
9366880,9367840," Where do we call it?"
9367840,9369920," But we already even call it."
9369920,9370960," We already even call it."
9370960,9373520," So, that means it should already work."
9373520,9374240," And it does work."
9374240,9378800," How can we confirm that it fucking works?"
9378800,9383600," We could explicitly just, you know, in c3."
9383600,9388400," In c3, just mess with the colors and everything."
9388400,9392640," We could just mess with the colors."
9393120,9400640," I could say some shit like 255, zero, zero."
9400640,9403040," Just set them explicitly to red."
9403040,9407200," And that will confirm that we're doing all of that stuff in c3 from WebAssembly."
9407200,9409600," That will actually confirm that."
9409600,9414240," And confirm that."
9414240,9415040," Okay."
9415040,9416960," So, we're rendering walls in WebAssembly."
9416960,9418000," Well, not entirely."
9418000,9419040," Specifically columns."
9419040,9423760," We still do ray casting in JavaScript."
9423760,9425360," We still do the ray casting in JavaScript."
9425360,9428000," But when we ray cast it, we need to draw the column."
9428000,9431520," We do that in WebAssembly, actually."
9435120,9436880," So, we can recompile this, I think."
9436880,9441040," We do that in WebAssembly."
9441040,9444800," WebAssembly is the future, my friend."
9444800,9445600," There."
9445600,9446960," It is the future."
9460960,9463120," I wonder if I just remove some shadows in here."
9463120,9466400," Is it going to do something interesting?"
9466400,9477760," Oh, that's cool."
9477760,9481680," Damn, this is actually kind of cool."
9481680,9481920," Wait."
9483920,9484560," Do you see that?"
9484560,9490560," So, it's like the fog is reddish sort of."
9490560,9492720," That's kind of cool."
9492720,9494080," Do you see that?"
9494080,9495760," Look in the background."
9495760,9498000," It has a red tint."
9498000,9501120," I think this actually gives it a pretty cool look."
9501120,9503760," Damn."
9503760,9506640," Very nice fog."
9506640,9509760," Very nice fog."
9509760,9511200," Okay."
9511200,9516240," So, we actually successfully, I think, ported the render column of wall."
9516240,9520400," So, that means I can probably remove it straight up."
9520400,9522320," Right."
9522320,9524320," So, render column of wall."
9524320,9534080," So, this is how we're slowly taking JavaScript functions"
9534080,9536640," and just moving them into WebAssembly one by one."
9536640,9540960," This is why I was like fuzzing around with these WebAssembly clients"
9540960,9541600," and stuff like that."
9541600,9547040," So, then I can just grab a JavaScript function at the low level, right, of code grab."
9547040,9551680," And just move it into the WebAssembly, retaining the rest of the code."
9551680,9556000," And then slowly, one by one, moving them into WebAssembly."
9556000,9559680," So, that's why this weird setup."
9559680,9561520," So, it's easy to do this kind of stuff."
9561520,9563600," Improve the FPS."
9563600,9565360," Not really, but that's not the goal anyway."
9565360,9566880," The goal is to use the proper language."
9566880,9570160," Okay."
9570160,9572080," So, let me recompile everything."
9572080,9578080," I mean, I'm pretty sure it's going to be improved when we move everything to WebAssembly."
9578080,9578080," Right."
9578080,9584560," So, right now, maybe there's a little bit of a penalty for constantly jumping between JavaScript"
9584560,9585600," and WebAssembly, right?"
9585600,9590720," But when everything is in WebAssembly, it's going to be faster."
9590720,9599760," So, especially now, right, if the entirety of the renderer in C3, the optimizer will have more"
9599760,9603520," information on how to restructure things, how to eliminate things and stuff like that."
9603520,9607680," So, it will have more opportunities to optimize the code, if you know what I'm talking about."
9607680,9610320," Uh, right."
9610320,9613680," Why didn't he use a real language like Zig?"
9613680,9618960," Because there's no point in Zig if there is a C3."
9618960,9623040," C3 covers all of the cases of Zig."
9623040,9627760," There's literally zero reason for Zig to exist as a language if there is a C3."
9627760,9631760," So, just kind of some of the case."
9633120,9634480," So, I really don't understand."
9634480,9637920," Like, to me, Zig is just like C3 with ugly syntax."
9637920,9639280," You know?"
9639280,9642720," I don't understand the point of Zig."
9642720,9644800," Like, you know, we already have C3."
9644800,9645840," So, here it is."
9645840,9647200," Can I resolve the cases?"
9647200,9648320," Solve all the problems."
9648320,9650400," So."
9650400,9653760," Sorry."
9653760,9656000," I'm just saying facts."
9656000,9658480," I'm not like dissing Zig or anything."
9658480,9660640," Like, I'm just like stating facts."
9660640,9662320," I'm just like, this is the reality."
9663680,9665520," Some people can't really accept this reality."
9665520,9665920," But, I mean."
9665920,9667680," Is this what it is?"
9667680,9669680," Uh."
9669680,9674400," So."
9674400,9679760," What are we going to do so quiet?"
9682160,9685520," I'm going to do this."
9685520,9686000," Okay."
9686000,9686320," Move."
9686320,9687680," Uh."
9687680,9687920," Yeah."
9687920,9691360," Move RenderCover to C3."
9691360,9691600," Right."
9691600,9692800," So, I'm going to just push that."
9692800,9693040," Right."
9693040,9693520," Here we go."
9693520,9695200," Uh."
9695200,9697760," Why would anyone use Zig in 2024?"
9697760,9698720," I don't really know."
9698720,9701520," Maybe for some recreational purposes."
9701520,9702560," Like, I'm not against that."
9702560,9705440," But when you need to write like a real production code."
9705440,9716320," So."
9716320,9720240," What do we need in here?"
9720240,9725360," So, let's actually move a rendering of the walls to WebAssembly as well."
9726880,9727840," What do you guys think?"
9727840,9731600," I think the time has cut."
9731600,9735120," You forgot to put the shadow back."
9735120,9735360," Fuck."
9735360,9736320," But, I mean."
9736320,9737200," It's not that big of a deal."
9737200,9737520," Whatever."
9737520,9738480," Uh."
9738480,9739040," So, here."
9739040,9739520," Look at that."
9739520,9739920," Look at that."
9739920,9740160," Look at that."
9740160,9740480," Look at that."
9740480,9743840," We accepting display as."
9743840,9746640," Well."
9746640,9749200," We're only rendering."
9749200,9749520," Like."
9749520,9751600," So, when we're accessing the assets."
9751600,9752880," Yeah."
9752880,9754880," We're only using the wall image."
9754880,9755120," So."
9755120,9757440," It's not that big of a deal."
9757440,9758960," So, we can pass the."
9758960,9759280," You know."
9759280,9759760," The cell."
9759760,9761840," So, we're passing the camera."
9761840,9763440," Right now."
9763440,9764400," For some of the things."
9764400,9765280," For the floor."
9765280,9767520," For the floor."
9769120,9770240," Render floor."
9770240,9771440," We're passing camera."
9771440,9773840," As position X."
9773840,9774480," And direction."
9774480,9776640," So, we can do the same thing here as well."
9776640,9777520," And most importantly."
9777520,9778880," We're passing scene."
9778880,9781040," We're passing scene."
9781040,9782720," And scene."
9782720,9785200," Is a pointer."
9785200,9786080," And width and height."
9786080,9788240," So."
9788240,9790640," We have everything."
9790640,9791200," I think."
9791200,9794240," To convert this entire stuff."
9794240,9794480," To."
9794480,9797120," Yeah."
9797120,9798320," To WebAssembly."
9798320,9798480," To WebAssembly."
9798480,9799600," So, Zbuffer."
9799600,9801280," Uh-huh."
9801280,9802080," That is."
9802080,9802320," Yeah."
9802320,9803040," That is understandable."
9803040,9804240," Right."
9804240,9805440," Let's go ahead and do that."
9805440,9805680," Right."
9805680,9807040," So, this is going to be the last function."
9807040,9809760," We're going to convert to WebAssembly."
9809760,9811760," Right."
9811760,9812720," So, that's pretty cool."
9812720,9814160," And the cool thing about this function."
9814160,9814880," Is that."
9814880,9816960," It uses shared state."
9816960,9818400," From the server."
9818400,9819920," In a renderer."
9820960,9822720," That's the main difficulty in here."
9822720,9824960," It uses some stuff."
9824960,9826160," That the server."
9826160,9828160," Also wants to have an access to."
9828160,9829040," Also have."
9829040,9830160," Want to have an access to."
9830160,9832080," Um."
9832080,9832960," Right."
9832960,9834080," And that was the."
9834080,9836000," Reason why I started this entire session."
9836000,9837200," In the first place."
9837200,9837920," To."
9837920,9839840," Introduce a little bit of a WebAssembly."
9839840,9841040," On the server side."
9841040,9842480," Right."
9842480,9844880," So, now we're going into the territory."
9844880,9846880," Of actually using shared code."
9846880,9847680," In WebAssembly."
9847680,9849440," Um."
9849440,9849680," Right."
9849680,9851920," Stupid question."
9851920,9854080," You had zbuffer for."
9854080,9854800," Uh."
9854800,9855280," Something."
9855280,9855680," Something."
9855680,9856000," Something."
9856000,9856960," Uh."
9856960,9858960," Why did you need that for."
9858960,9860560," And not other ones."
9860560,9860880," Uh."
9860880,9861200," Let me."
9861200,9862160," Let me actually see."
9862160,9863280," Uh."
9863280,9864240," Let me see."
9864240,9864560," For."
9864560,9866160," Ah."
9866160,9867440," It's a computing shadow."
9867440,9868720," Right."
9868720,9870720," It's a purely artistic choice."
9873280,9873600," Right."
9873600,9874720," So, essentially."
9874720,9875120," Uh."
9875120,9875840," Shadow."
9875840,9877280," Is reversely proportional."
9877280,9878400," To zbuffer."
9878400,9879200," To the distance."
9879200,9881280," And I just multiplied it by four."
9881280,9883280," Because it gave it the best look."
9883280,9883760," So, it's."
9883760,9885600," It's literally an artistic constant."
9885600,9886800," So, don't worry about it."
9886800,9890720," I actually remember."
9890720,9890960," Like."
9890960,9892480," Just like tweaking it a little bit."
9892480,9892640," Like."
9892640,9893360," Just seeing like."
9893360,9895440," At which constant shadow looks better."
9895440,9896160," So, it's just like."
9896160,9897040," I settled at four."
9897040,9898080," Uh."
9898080,9898560," So, yeah."
9898560,9899600," It's just a magic number."
9899600,9900640," Uh."
9900640,9901760," Nothing particularly special."
9902320,9902800," Uh."
9902800,9905120," Maybe I should give it a name."
9905120,9905600," But I mean."
9905600,9905840," Yeah."
9905840,9907440," Uh."
9907440,9908320," Artistic constant."
9908320,9908560," Yeah."
9908560,9909840," The cosmetic constant."
9909840,9911120," Uh."
9911120,9912560," Just a cosmetic constant."
9912560,9912720," Okay."
9912720,9913200," So, let's actually."
9913200,9914320," Copy paste this entire."
9914320,9915680," Shice in here."
9915680,9916800," Uh."
9916800,9917040," Damn."
9917040,9917920," We're starting to have."
9917920,9919040," Quite a bit of code."
9919040,9919680," And web assembly."
9919680,9920640," Look at this."
9920640,9921200," Look at that."
9921200,9921680," Look at that."
9921680,9922560," Okay."
9922560,9923680," So, here's the display."
9923680,9924720," And apparently."
9924720,9926160," On top of having the display."
9926160,9927680," We also need zbuffer."
9927680,9928480," So, I might as well."
9928480,9929440," Just copy paste."
9929440,9931440," This entire line."
9931440,9932000," To here."
9932000,9932560," Right."
9932560,9934640," Because we're going to be passing it there as well."
9934640,9936000," Uh."
9936000,9936240," Right."
9936240,9937680," So, it's instead of the buffer."
9937680,9939200," Display."
9939200,9940720," Okay."
9940720,9943760," So, we don't pass wasmclient."
9943760,9944880," The assets."
9944880,9947120," We're only going to be passing assets for the wall."
9947120,9949440," So, it's basically."
9949440,9950400," Yeah."
9950400,9951760," It's just basically that."
9952640,9953200," Uh."
9953200,9954080," So, in the future."
9954080,9955920," We're going to have more different kinds of walls."
9955920,9956880," But."
9956880,9958400," Uh."
9958400,9960880," Not until we move everything to web assembly."
9960880,9961280," So, here."
9961280,9962880," Maybe I should rename it to wall."
9962880,9963600," Or something."
9963600,9963840," Right."
9963840,9965040," So, this is going to be wall."
9965680,9966640," So, camera."
9966640,9969360," Camera is just basically position x and y."
9969360,9970640," And the direction."
9970640,9971680," Uh."
9971680,9974240," Which we can steal from here."
9974240,9975840," Right."
9975840,9977040," That's the camera."
9977040,9978000," That's the camera."
9978880,9980240," And now."
9980240,9981360," We have a scene."
9981360,9982480," Right."
9982480,9983840," So, we have a scene."
9983840,9984400," And scene."
9984400,9985760," Is booleans."
9985760,9986000," Right."
9986000,9987040," So, how do we look at the scene?"
9987040,9988480," So, it's somewhere in a common."
9988480,9990320," Common C3."
9990320,9992160," And this is just a bunch of booleans."
9992160,9992480," Okay."
9992480,9994240," So, that means I can do boolean."
9994240,9995040," Scene."
9995040,9995600," And then."
9995600,9996640," Int scene."
9996640,9998480," Width."
9998480,9999360," Int scene."
9999360,10000800," Height."
10000800,10001440," There we go."
10001440,10004080," That's even more parameters in here."
10004080,10004480," Right."
10004480,10007360," Damn."
10007360,10008640," Uh."
10008640,10009200," But again."
10009200,10011040," All of that eventually will go away."
10011040,10012160," So, render walls."
10012160,10013360," Uh."
10013360,10014160," Render walls."
10014160,10016160," Uh."
10016160,10018000," So, this is going to be external."
10018000,10020000," Guys."
10020000,10020800," I swear."
10020800,10022720," All of that is going to go away."
10022720,10025120," I swear."
10025120,10029280," I'm a good programmer."
10029280,10030240," I'm a good programmer."
10030240,10033840," I swear all of that is going to be then collapsed eventually."
10033840,10034960," It is going to."
10034960,10036160," I'm telling you."
10036160,10037360," Um."
10038400,10039600," So, somebody believes."
10039600,10042480," So, believers in the chat."
10042480,10044640," Tell the non-believers."
10044640,10046800," Tell the non-believers."
10046800,10047200," Tell them."
10047200,10048880," Fucking tell them."
10048880,10049680," Right."
10049680,10052000," All of that eventually will be collapsed."
10052800,10054000," And it's going to be pretty."
10054000,10054880," All right."
10054880,10054960," All right."
10054960,10056560," Uh."
10056560,10059840," So, what we need to do in here."
10059840,10060880," So, let me actually."
10060880,10063200," So, I need to introduce the render walls."
10063200,10064800," By the way."
10064800,10073600," So, the only function that is going to be calling to render column of wall is going to be render walls."
10074480,10077280," Which means that this function will become private."
10077280,10081840," So, I will be able to remove all of that bullshise with external whatever."
10081840,10085280," And I will be able to pass float."
10085280,10089360," Pass these vectors as vectors and not floats."
10089360,10091920," And that's the collapse I'm talking about."
10091920,10098640," So, the only reason I'm passing so many arguments is because I'm interfacing with that stupid JavaScript."
10098640,10104400," As soon as I'm not interfacing with that stupid JavaScript, I don't have to do this stupid shit."
10105440,10105680," Right."
10105680,10109760," Interface with stupid languages have stupid interfaces."
10109760,10118000," So, if you reduce the surface area of interfacing with a stupid language, you reduce the amount of stupidity."
10118000,10120800," Make sense?"
10120800,10122080," Makes sense."
10122080,10123280," So, that's what I'm talking about."
10123280,10124400," So, it's a little bit stupid."
10124400,10126640," But now this function is internal one."
10126640,10128240," I don't have to do stupid shit anymore."
10128240,10131280," That's the beauty of this entire show."
10131280,10132080," I see my in the front."
10134080,10135120," That's the beauty of it."
10135120,10138080," So, I'm not insane."
10138080,10138960," I'm not insane."
10138960,10142640," Anyways."
10142640,10146800," So, let's actually go ahead and just grab this entire stuff."
10146800,10152560," So, client mts interface wasm client."
10152560,10154400," So, we have to bring this stuff."
10154400,10154880," Okay."
10154880,10156000," Fucking damn it, bro."
10164640,10164960," Okay."
10164960,10166560," It's fine."
10166560,10167040," It's fine."
10167040,10168880," Everything's fine, chat."
10168880,10169760," Everything's fine."
10169760,10170880," Everything's fine."
10170880,10171600," Everything's fine."
10171600,10174880," All of them are numbers, by the way."
10174880,10180960," Because they're either actual legit numbers or pointers."
10180960,10182400," And pointers are just numbers."
10182400,10186160," They're just indices within the array of bytes."
10188480,10203360," And bytes, and bytes, and bytes, and bytes, and bytes, and bytes, and bytes, and bytes."
10203360,10205280," All right."
10205280,10216080," We're almost done."
10216080,10220880," Yeah."
10220880,10226080," So, the signatures are getting longer, and longer, and longer, and longer."
10229280,10234720," And bytes, bytes, bytes, bytes, bytes, bytes, bytes, bytes, bytes, bytes."
10234720,10238400," So, next error, all right."
10238400,10240640," So, I'm going to copy paste this in here."
10240640,10246400," And this is a render walls."
10246400,10253920," So, that means I can grab this entire thing and just say render walls."
10255920,10259200," As, yeah, boy."
10259200,10263120," So, is it going to compile?"
10263120,10264000," Let's try to compile."
10285920,10292400," I need to focus."
10292400,10293520," Sorry."
10293520,10296080," Render walls."
10296080,10299200," So, maybe I'm going to just copy paste this stuff."
10299200,10303120," Render walls."
10303120,10304320," Where do we call this thing?"
10304320,10304560," Okay."
10304560,10305840," So, we call it somewhere here."
10305840,10309120," If I do render walls."
10309120,10313440," And it's a game wasm client."
10313440,10314400," Look at that."
10314400,10318480," So, we already have function from wasm render floor and ceiling."
10318480,10319360," Right."
10319360,10320880," Now, we do render walls."
10320880,10328160," What's interesting is that, yeah, at some point, since we call these two functions together,"
10328160,10333120," maybe it's going to be easier then to collapse them into a single call."
10333120,10337840," And again, these functions like render flow and ceiling and render walls will become internal functions."
10337840,10344640," And that will reduce the surface area of contacting with a stupid language even more."
10347520,10349600," That's part of the plan."
10349600,10352240," That's the whole part of the plan."
10352240,10352960," I'm telling you."
10352960,10356080," So, this is back image pointer."
10356080,10357600," Come on, Emacs."
10357600,10358480," You can do that."
10358480,10362000," So, display width is a back image width."
10362000,10364720," Why did you do it like that?"
10364720,10366800," Back image width."
10366800,10367280," Like so."
10367280,10372480," Back image height."
10372480,10374000," Like this."
10374000,10374720," All right."
10374720,10376640," Back image height."
10376640,10377760," All right."
10377760,10380000," So, this is a z-buffer."
10380000,10381840," Z-buffer ptr."
10381840,10386640," So, this is a wall which is basically the asset thing."
10386640,10386960," Right."
10386960,10388160," So, not acid."
10388160,10389680," Asset."
10389680,10392400," Acid."
10392400,10399600," So, this is going to be game assets wall image pointer."
10399600,10400720," All right."
10400720,10406400," So, and then we just say that this is wall image width."
10406400,10409040," And this is wall image height."
10409040,10412880," My nose is itching like crazy."
10415920,10427200," So, there's a thing in Russia that if your nose feels itchy, that means you're going to get drunk."
10427200,10432080," I think I already talked about it, but yeah."
10432080,10434160," It's some sort of like a..."
10434160,10436240," How do you call that in English?"
10436240,10437360," Superstition?"
10437360,10437680," Right."
10437680,10440080," So, or sort of like a sign."
10440080,10441120," Right."
10441120,10445680," So, if your nose is itchy, well, that means somebody is going to"
10445680,10447680," and why don't you get to get fucking wasted."
10447680,10458400," So, see you in a month."
10458400,10459120," See you in a month."
10459120,10463280," So, it's scene."
10463280,10463520," Okay."
10463520,10464480," This one is interesting."
10464480,10465920," So, where do we have scene?"
10468400,10469040," I don't remember."
10469040,10469360," I don't remember."
10469360,10469840," So, I think..."
10469840,10472960," I think it's somewhere in a level."
10472960,10480160," So, game, level, scene, and it's just PTR."
10480160,10481440," That will be done."
10481440,10481920," Right."
10481920,10484560," I think it's a walls PTR."
10484560,10486960," Yeah, boy."
10486960,10490560," So, it's a game, level, scene, width."
10491520,10492080," Like so."
10492080,10493360," Does it work?"
10493360,10494480," Yeah, it seems to be working."
10494480,10497280," And this one is just heights."
10497280,10500080," Look at that."
10500080,10500640," All right."
10500640,10502560," So, we passed all of the necessary information."
10502560,10506240," Passed all of the necessary information."
10506240,10509200," And we're just rendering the walls."
10509200,10512640," So, I think I should have not removed the call to the original walls."
10512640,10514720," Because I want to be able to compare them."
10514720,10516640," All right."
10516640,10518320," So, I want to be able to compare them."
10518320,10521760," So, let me command out this entire thing."
10521760,10523280," And I'm going to restart the whole thing."
10523280,10525200," Link to func."
10525200,10526000," Yeah, it is."
10526000,10528720," Because again, we're interfacing with WebAssembly."
10528720,10531680," WebAssembly is kind of limited in terms of how it..."
10531680,10533520," Like what kind of information it can accept."
10533520,10536880," So, it can only accept like integers."
10536880,10537360," All right."
10537360,10540000," So, if you want to pass complex stuff in here."
10540000,10544160," You have to split that complex stuff into series of integers."
10544160,10548160," Or you have to put that complex stuff into WebAssembly memory."
10548160,10551680," And then pass a pointer to that complex stuff."
10551680,10555280," So, then the WebAssembly module can parse it or something and stuff like that."
10555280,10560560," So, it turns out a bit lengthy when you want to pass complex things."
10560560,10566080," But again, as soon as all of these functions become internal, it becomes irrelevant."
10566080,10566880," Right."
10566880,10568320," So, it becomes irrelevant."
10568320,10576960," Ideally, how I see the interface is that JavaScript calls to a WebAssembly function, allocate and"
10576960,10579200," initialize the game structure."
10579200,10584000," So, and it just allocates a game structure, initializes and returns a pointer."
10584000,10590880," JavaScript just retains that pointer and just passes it around every time it calls to WASM."
10590880,10595360," So, it never has to pass this much complex information and stuff like that."
10595360,10597360," But all of that is not right away."
10597360,10600160," All of we're going to get to that eventually."
10600160,10604320," Because it's kind of difficult to just rewrite it to work properly."
10604320,10607280," We're slowly pushing the code base towards that."
10607280,10610560," So, it's a strategic incremental refactoring."
10610560,10611200," That's what it is."
10611200,10613680," Strategic incremental refactoring."
10613680,10615120," Makes sense?"
10615120,10615840," Makes sense?"
10615840,10616240," Hopefully."
10616240,10624000," So, that's why it's important to not get scared by these kind of things."
10624000,10624240," Right."
10624240,10630320," So, just like I keep in mind the end goal and just like slowly moving towards that end goal."
10630320,10636320," And the fact that I'm using, you know, static type languages on both ends on the, you know,"
10636320,10641440," in the browser, right, to TypeScript and in WebAssembly actually kind of helps me."
10641440,10641760," Right."
10641760,10646960," So, because I can use compilation errors as sort of like a guide towards that refactoring."
10646960,10647840," This will use what's up."
10647840,10648720," What's up, what's up, what's up."
10652720,10655440," How to remove my send message."
10655440,10658400," I can time you out."
10658400,10662800," I'm going to just time you out for one second."
10662800,10664880," All right."
10664880,10669440," So, now your message is removed."
10669440,10670480," I can still see it."
10670480,10675440," But anyway, you're welcome."
10675440,10679120," So, let me refresh the syntax."
10679120,10680560," I think it seems to be working."
10680560,10681600," It seems to be twerking."
10681600,10684400," Now, I'm going to switch to render walls."
10684400,10685760," Right."
10685760,10687120," I'm going to recompile this in there, I think."
10687120,10696240," You can't call DOM objects from WebAssembly."
10696240,10696800," We don't need to."
10696800,10698240," We don't have any DOM objects anyway."
10702800,10706960," So, yeah, because we only need one DOM object, which is a canvas."
10706960,10708960," And we're just like manipulating pixels."
10708960,10711200," So, DOM is not a concern."
10711200,10714880," All right."
10714880,10716000," So, what do we have in here?"
10716640,10719440," So, now having the camera direction."
10719440,10719760," Right."
10719760,10725520," So, when I'm accessing the camera direction, I'm just accessing direction."
10725520,10726400," Right."
10726400,10726640," Okay."
10726640,10728560," Do I have from..."
10728560,10730240," I already have from polar."
10730240,10730960," Look at that."
10730960,10733760," So, that means I can have the D."
10733760,10735600," All right."
10735600,10741920," So, from polar, but from polar also accepts the length."
10741920,10744480," So, that means I want to put one in here."
10744480,10747280," So, this is a vector to D."
10747280,10747920," All right."
10747920,10748960," So, we'll get that."
10751040,10751920," Does it compile?"
10751920,10753200," Does it even compile?"
10753200,10755680," All right."
10755680,10757440," Assuming non-postics environments."
10757440,10759440," As usual, as usual."
10759440,10760480," All right."
10760480,10762720," So, here we have a bunch of arrays."
10762720,10765840," We don't need them because we have like straight-up pointers."
10765840,10766080," Right."
10766080,10767840," So, we have walls."
10767840,10769280," And what are the walls?"
10769280,10771040," I think walls are the scene."
10771040,10772640," Yeah."
10772640,10773280," This is the scene."
10773280,10774400," They're coming from the scene."
10774400,10776800," So, we don't need any of that stuff in here."
10776800,10778480," All right."
10778480,10783600," So, next we are iterating the columns."
10783600,10783840," Right."
10783840,10785440," We're iterating the columns."
10785440,10788240," This is going to be integer."
10788240,10791040," And this one is a display."
10791040,10794080," Display width."
10794080,10797440," That's what it is."
10797440,10801360," Cast array."
10801360,10808400," And what was the size of the proposal for managed objects in one?"
10808400,10809040," Wasm."
10809040,10810080," I never heard about it."
10810080,10811120," Managed objects."
10811120,10816080," I didn't hear about it."
10816080,10817280," I know nothing about it."
10817280,10820000," But that sounds sus."
10820000,10827280," Wasm GC is available in every browser in around..."
10827280,10827600," Okay."
10827600,10829280," So, time to abandon Wasm, I suppose."
10829280,10832480," I'm joking, by the way."
10832480,10834400," So, I hope it is optional."
10834400,10835200," Right."
10835200,10836160," I hope it is optional."
10838160,10838720," Mm-hmm."
10838720,10841840," So, okay."
10841840,10848640," We need to migrate past array heating cell."
10848640,10851120," And that's about it."
10851120,10853200," I don't think we need to migrate anything else, honestly."
10853200,10855520," But we need to migrate this function."
10855520,10857280," And when we migrate in this function..."
10857280,10858320," Okay."
10858320,10860240," So, here is the heating cell."
10860240,10861280," Okay."
10861280,10864800," So, but we already kind of reused this function."
10864800,10865120," Okay."
10865120,10867200," Race step."
10867200,10868080," Ooh."
10868880,10870480," I think I opened a kind of worm."
10870480,10870480," I think I opened a kind of worm."
10870480,10871840," Fuck."
10871840,10876320," Okay."
10876320,10878560," So, and if I take a look at the array step."
10878560,10879120," Ooh."
10879120,10885200," But I mean, all of these functions are kind of easy to migrate, I think."
10885200,10886960," I think they're kind of easy to migrate."
10886960,10888880," So, I don't freaking know."
10888880,10890720," All right."
10890720,10893920," So, let's go ahead and just like copy-paste this function in here."
10893920,10900720," So, the cool thing here is that we don't have to expose it."
10900720,10902000," It doesn't have to be external."
10902000,10903120," All right."
10903120,10906640," So, that means it's rather easy to just like..."
10906640,10906880," Yeah."
10906880,10908160," Accept like vector."
10908160,10909520," Vector 1."
10909520,10910800," Vector 2."
10910800,10913600," Because we don't have to interface with any of this shit."
10913600,10915840," So, I can just straight up return vector 2."
10915840,10916160," Yeah."
10916160,10918240," So, this is actually easier to migrate."
10918240,10920640," So, this one is rather interesting."
10920640,10921440," So, scene."
10921440,10921760," Yeah."
10921760,10924400," Scene has to be a little bit annoying."
10924400,10925280," Right."
10925280,10926720," We'll have to pass it like that."
10926720,10928240," But that's totally fine."
10930160,10930720," All right."
10930720,10932160," So, this is going to be this."
10932160,10934320," So, this is the start."
10934320,10936320," And this is a vector 2."
10936320,10938720," So, here's the walls, which is just a scene."
10938720,10943360," So, somebody told me that there is a distance."
10943360,10945040," All right."
10945040,10949360," There's just distance in C3."
10949360,10953440," And since I'm not doing square distance, I don't have to do that part."
10953440,10955840," Do I have a far clipping plane?"
10955840,10957600," Yeah, I do have a far clipping plane."
10958240,10960320," So, and we need to have a heating cell."
10960320,10962000," So, for now, just a second."
10962000,10968800," I think I'm going to simply comment it out and try to compile what we have in here."
10968800,10968960," Right."
10968960,10970880," So, let me try to compile what we have in here."
10970880,10973600," Just to make sure that everything is compiled."
10973600,10974640," Everything seems to be compiled."
10974640,10975040," Look at that."
10975040,10976560," Look at that."
10976560,10977040," Look at that."
10977040,10977520," Look at that."
10977520,10980480," So, I would like to actually maybe call it raycast like so."
10980480,10984320," So, it does in fact have distance in here."
10984320,10985040," Okay."
10985040,10988960," So, the next thing we need to have in here is a heating cell."
10988960,10990080," All right."
10990080,10992720," So, let me take a look at the client MTS."
10992720,10996240," Because I feel like heating cell is part of the common."
10996240,10997520," No, it's not part of the common."
10997520,10998000," Look at that."
10998000,11000880," All right."
11000880,11004000," So, and again, since it's going to be an internal function,"
11005120,11009200," I don't have to do any bushise."
11009200,11011440," I can just do the usual thing."
11011440,11016480," So, here we take the difference between them."
11016480,11016640," All right."
11016640,11020480," So, I can probably replace all that with P2, P1."
11020480,11024240," Then afterwards, we take an S."
11024240,11025680," Oh, this one is very interesting."
11025680,11025920," Okay."
11025920,11029520," So, I'm not going to do any special weird stuff."
11029520,11031520," All right."
11031520,11033520," So, I'm just going to keep it simple."
11033520,11035760," I'm going to keep it close to the original code."
11035760,11039360," We can fold it and collapse it a little bit later."
11039360,11042000," So, in here, it's going to be just that."
11042000,11046960," And I wonder if I can come up with a pretty cool regular expression,"
11046960,11051040," which basically query rejects."
11051040,11053680," So, math dot."
11053680,11057760," And I just want to capture like literally everything"
11057760,11064000," within the parentheses, if you know what I mean."
11064000,11066720," Somewhere."
11066720,11069520," It's not, it doesn't even have parentheses."
11069520,11070880," So, I just want to capture that."
11070880,11074320," I think capturing is this Emacs, if I'm not mistaken."
11074320,11074800," Right."
11074800,11077120," So, and then I want to replace it with just that."
11077120,11079600," Almost."
11079600,11081600," So, let's try to do that one more time."
11081600,11083920," I think it has to be a little bit greedy."
11083920,11084960," Oh, yeah."
11084960,11087520," I think it's too greedy."
11087520,11090640," Oh."
11090640,11091600," All right."
11091600,11092160," That makes sense."
11092160,11092400," Okay."
11092400,11094640," So, that could have done it like that."
11094640,11096240," I don't know what's up with me."
11096240,11097440," All right."
11097440,11098960," So, here's the hitting cell."
11098960,11102480," And yeah, this one is another vector too."
11102480,11103840," All right."
11103840,11106480," So, this is where we, whether we're hitting cell or not."
11106480,11107680," So, let's try to recompile this."
11107680,11109760," So, it doesn't compile."
11109760,11110320," So, there's no."
11110320,11112720," There, no."
11112720,11120880," Where is, why there's no sign in math library of C3?"
11120880,11123360," Where is."
11128000,11128880," Sign."
11128880,11129280," Ah."
11129280,11131120," Wait."
11131120,11155120," Okay."
11155120,11156080," It's okay."
11158000,11164400," I understand why."
11164400,11164800," Okay."
11164800,11165680," So, it's kind of a."
11165680,11175520," Is there like a sign for floats or something?"
11175520,11177280," Or is this like."
11179920,11190640," Or is this like a sign bit?"
11190640,11193520," But it's like."
11193520,11194160," I just need to."
11194160,11199120," It's called signum."
11199120,11201120," If it even exists."
11204000,11205040," Copy sign."
11205040,11208640," Okay."
11208640,11209840," So, this one is interesting."
11209840,11213200," Float."
11213200,11216080," So, there is a sign."
11216080,11224560," Is that what I need?"
11224560,11226640," What does copy sign even mean?"
11228560,11230240," Copy sign one x."
11230240,11230240," Copy sign one x."
11230240,11231360," I don't even know what is."
11231360,11232480," What is that?"
11232480,11235520," What is a copy sign?"
11235520,11236240," And what is."
11236240,11237680," What is it supposed to do?"
11237680,11238880," Right."
11238880,11239760," So, copy sign."
11239760,11241760," Signals."
11241760,11242960," Okay."
11243520,11245200," Something in C++."
11245200,11248720," It copies the sign from one float to another."
11248720,11249920," Oh."
11249920,11251440," All right."
11251440,11251680," So."
11251680,11255040," Where is the description?"
11255040,11257120," Do we have like a dark theme in here?"
11257120,11259600," Floating point and integer return value."
11259600,11265520," Floating point value with the magnitude of mag and the sign."
11265520,11265760," Oh."
11265760,11265920," Okay."
11265920,11267200," So, that's literally what I need."
11267200,11269040," So, that's what we used was actually right."
11269040,11271520," So, it seems to be like a proper solution."
11271520,11271760," So."
11271760,11273600," Okay."
11273600,11274800," So, let's go ahead and do that."
11274800,11275920," Math."
11275920,11278080," Copy sign."
11278080,11279520," Yeah."
11279520,11281200," So, that's literally what we want."
11281200,11282320," So, okay."
11282320,11286560," Fair."
11286560,11287200," Actually, fair."
11287200,11288720," Sure."
11288720,11292320," Signamail."
11292320,11294640," Ligma mail."
11295520,11299280," Ball set."
11299280,11304720," I'm so fucking sorry."
11304720,11307040," Let me see."
11307040,11309440," So, in the scene get tile."
11309440,11317520," This is bizarre, my friend, honestly."
11317520,11323920," So, walls is scene."
11323920,11325840," And we're also passing scene."
11325840,11329440," This is the stupidest function I've ever seen in my entire time."
11329440,11329760," Yeah."
11329760,11334160," This is absolutely stupid function."
11334160,11334720," I love it."
11334720,11336320," Damn."
11336320,11336880," I love."
11336880,11339200," I like how stupid this function is."
11339200,11339440," And."
11339440,11340800," Right."
11340800,11341120," Because."
11341120,11341840," Yeah."
11344720,11349600," And this is normal because like code evolves like that over time."
11349600,11351200," It just evolves like that."
11351200,11352880," So, yeah."
11352880,11354320," It's kind of funny."
11354320,11357440," Oh, and it's also part of common."
11357440,11358960," So, that means."
11358960,11363440," That means we probably want to actually move it to common C3."
11363440,11365360," So, that's where we want to put all that stuff."
11365360,11368560," Yes, yes, yes."
11368560,11369120," So, by the way."
11369120,11371280," Do I have to export things in specific?"
11371280,11372720," No, I don't have to export things."
11372720,11374000," Right."
11374000,11375200," So, this is boolean."
11376080,11379040," So, this is going to be scene get tile."
11379040,11381280," And this is walls."
11381280,11384720," So, what we have to do in here is just a scene."
11384720,11388320," Which is boolean."
11388320,11388640," Right."
11388640,11391440," So, this is a scene width."
11391440,11394880," And scene height."
11394880,11396320," And this is P."
11397680,11398560," All right."
11398560,11398800," So."
11398800,11404400," Damn, bruv."
11404400,11406800," Damn, bruv."
11406800,11411840," So, this is going to be just that."
11411840,11412720," So, it's a floor."
11412720,11418400," And when we're doing the floor, I will also probably want to do something like integer."
11418400,11420160," Right."
11420160,11426640," And so, since it's a boolean, we just return it as a boolean."
11426640,11430560," So, which means that I can actually greatly simplify all of that stuff."
11430560,11434000," I can greatly simplify all of that stuff."
11434000,11436240," So, scene contains."
11436240,11440000," So, in the common mts."
11440000,11442720," Scene contains."
11442720,11443440," Where is it?"
11443440,11444160," Where is it?"
11444160,11445520," Where is it?"
11445520,11449200," Do we even need this function honestly?"
11449200,11451280," Because this is such a."
11451280,11455600," Do I need that?"
11455600,11456000," Well, I mean."
11456000,11457600," So, it's there."
11457600,11458480," Let's just keep it."
11458480,11459120," Keep it there."
11459120,11462000," Just in case."
11462000,11467760," Just for the sake of keeping it closer to the original code."
11467760,11471520," I don't think it's that bad of an idea honestly."
11471520,11473360," Just keep it closer to the original code."
11473360,11474960," And make it work."
11474960,11475760," All right."
11475760,11479760," As soon as it works, we can simplify it and make it better."
11481120,11482320," It doesn't even need scene."
11482320,11484160," True, actually."
11484160,11485520," It doesn't even need scene."
11485520,11487040," That is in fact true."
11487040,11491520," So, that's how the stupid code collapses eventually."
11491520,11492160," All right."
11492160,11493920," So, this is how stupid code collapses."
11493920,11495920," It's kind of interesting to see that."
11495920,11497200," All right."
11497200,11502640," So, how stupid code just simply eventually collapses."
11502640,11504160," Into."
11504160,11506800," Yeah."
11506800,11512000," Furthermore, we could have actually done some interesting stuff like."
11514240,11516640," int y."
11516640,11517680," So, this is y."
11517680,11519360," Okay."
11519360,11520000," Y."
11520000,11520880," And this is x."
11520880,11524240," Int x."
11524240,11525120," Like so."
11525120,11529040," So, then later it is easy to just do this kind of comparison."
11529040,11531520," Because scene width is integer anyway."
11537680,11542800," We could have maybe even used like integer vectors in here."
11542800,11545440," I wonder if we could."
11545440,11549680," But I mean, I think it's fine as it is."
11549680,11553600," Doesn't floor automatically."
11553600,11555280," It doesn't really floor."
11555280,11555520," Right."
11555520,11556960," So, because floor to."
11556960,11561920," Floor in case of a negative number."
11561920,11565840," Floor in case of a negative number actually goes towards zero."
11566400,11566880," Doesn't it?"
11566880,11569040," Oh, not towards zero."
11569040,11571040," But away from zero."
11571040,11573200," Yeah."
11573200,11574640," It goes away from zero."
11574640,11575440," Not towards zero."
11575440,11579840," So, floor and truncation is a different thing."
11579840,11584320," We can even actually confirm that."
11584320,11585840," It's kind of easy to confirm."
11585840,11590560," So, there's a difference between them."
11590560,11593920," But the question is, does that difference even matter in our case?"
11593920,11594560," I think it does."
11595280,11595520," Yeah."
11595520,11597200," I think it does matter in our case."
11597200,11598080," So, printf."
11598080,11601840," So, this is a float."
11601840,11604640," So, floor."
11604640,11607840," So, 69.6."
11607840,11609840," And d."
11609840,11614080," Integer."
11614080,11617600," So, let's put f in both of the keys."
11620800,11634480," I didn't save what I just typed because I never actually confirmed whatever I typed."
11634480,11636240," So, it's so that I don't need that."
11646240,11647440," I think I'm doing something stupid."
11647440,11659600," So, it is..."
11664160,11676080," So, there's a difference between truncation and floor."
11676080,11678400," It's two different operations."
11678400,11688800," What's interesting is that it's not that widely known."
11692000,11698480," Because I've met quite a few very experienced developers that also didn't know that."
11698480,11703840," Apparently, it is not immediately obvious."
11703840,11704720," Right."
11704720,11708160," So, it's not even that rookie of a mistake."
11708160,11710160," Because again, yeah, it's easy to forget."
11710160,11710480," Right."
11710480,11716880," So, I've met several already quite experienced developers that just like forgot about it or didn't think about it."
11716880,11717520," Didn't know it."
11717520,11718080," Right."
11718080,11719360," It's not immediately obvious."
11719360,11727120," One of those people, by the way, I think was Andreas Kling."
11727120,11728000," Right."
11728000,11734880," So, because I remember doing a stream where I tried out Serenity OS and the math library."
11734880,11743840," The math library of Serenity OS had a bug where it implemented floor as just truncation to integer or something."
11744320,11746960," So, and there was a bug because of that and we discovered that."
11746960,11749680," So, and then Andreas actually fixed the floor."
11749680,11757200," Then there is also some weirdness with fraction and/or negative flows models."
11757200,11757440," Yeah."
11757440,11761200," Anyways, so let's go back."
11761200,11763280," Let's go back."
11763280,11764400," What are we doing here?"
11764400,11769120," So, common, common C3."
11769120,11771520," So, we got that."
11771520,11775600," So, do we need anything else?"
11775600,11777840," I think that's basically it."
11777840,11780400," So, syn contains, we don't need that stuff."
11780400,11781360," All right."
11781360,11783360," Okay."
11783360,11785600," Let's go back to client C3."
11786960,11789760," So, we now have syn get tile."
11789760,11793040," So, I'm going to put it in here."
11793040,11796080," So, we put C."
11796080,11797040," Okay."
11797040,11797840," You see what I'm doing?"
11797840,11798080," Yeah."
11798080,11800880," That and just that."
11800880,11806720," So, then we're doing the raise step."
11808160,11808800," Okay."
11808800,11810560," And that's another interesting thing."
11810560,11816080," So, let's actually first compile to make sure that, well, not that, but yeah."
11816080,11818400," Damn."
11818400,11821120," Vector2."
11821120,11822560," Oof."
11822560,11823920," All right."
11823920,11824720," This is interesting."
11824720,11831440," So, that means that this vector2 must be in common."
11833200,11836320," So, that means the time has come for this thing to be part of the common."
11836320,11838400," Oof."
11838400,11844320," And that also means that we need to import std-math in here."
11844320,11846080," All right."
11846080,11847120," What's already getting there?"
11847120,11848560," Okay."
11848560,11849200," Another thing."
11849200,11850640," Walls."
11850640,11851840," Did you?"
11851840,11853040," Couldn't you?"
11853040,11855680," Walls."
11855680,11856800," Ah, yeah."
11856800,11857200," Syn."
11857200,11859360," Thank you so much, Kampala."
11859360,11859920," Very cool."
11859920,11862560," We're almost there."
11863200,11864560," So, function from other modules."
11864560,11864960," Yeah, yeah."
11864960,11866080," That's true."
11866080,11867920," I remember kind of that."
11867920,11871280," Where, where are we?"
11871280,11875120," Where is the compilation?"
11875120,11877120," And it's in a client."
11877120,11879280," One, four, four."
11879280,11880160," One, four, four."
11880160,11881280," Yeah."
11881280,11882960," This is, this has to be common."
11882960,11884400," All right."
11884400,11887040," So, we have to explicitly prefix this and typing."
11887040,11888080," And I think it compiles."
11888080,11891200," Yes, yes, yes, yes, yes."
11891200,11892080," We're almost there."
11892720,11894400," Chat, we're almost there."
11894400,11899920," So, I think the only, the last function that we need to import is a scene, a race step."
11899920,11900080," Right."
11900080,11903680," So, that's the, that's the last function that we need to import in here."
11903680,11904800," And we are Gucci."
11904800,11908320," We are Tamaguchi."
11908320,11910240," So, I'm going to copy paste."
11910240,11914400," Since it's internal, I can just pass vectors and stuff."
11915040,11916720," So, this one is going to be vector2."
11916720,11916720," So, this one is going to be vector2."
11916720,11922400," Let's go."
11922400,11925040," Oh boy."
11925040,11925440," All right."
11925440,11926560," So, this one is interesting."
11926560,11930880," Because, um, so we don't have to explicitly clone anything."
11930880,11933600," Because we are using the proper language anyway."
11935040,11938320," So, these ones are very easy."
11938320,11940560," So, this is that."
11940560,11947760," Yeah, this one is kind of weird."
11947760,11949120," But I think it's time."
11949120,11949440," Okay."
11949440,11950960," So, snap is rather interesting."
11950960,11951920," And, okay."
11951920,11954800," So, this is a can of worms."
11954800,11955440," Oh my god."
11955440,11956480," The time."
11956480,11957040," The alarm."
11957040,11958320," Fucking alarm."
11958320,11958560," Okay."
11958560,11963040," I'll have to stop soon."
11963040,11965200," But I really want to finish this thing."
11965200,11966560," I really want to finish this thing."
11966560,11967360," Yeah, wake up."
11967360,11970720," Wake up Zozin."
11970720,11971280," Wake up."
11971280,11973920," All right."
11973920,11976000," So, we're all, now we're almost there."
11976000,11979600," We're almost there, chat."
11979600,11980720," We're almost there."
11980720,11981360," I swear."
11981360,11983520," So, this one."
11983520,11985200," So, all of these are floats, right?"
11985200,11987200," So, all of these are floats."
11987200,11991360," So, this is another float."
11991360,11994640," All right."
11994640,11997120," So, we have MathSeal."
11997120,12000080," MathLore."
12000080,12003360," And so, we have to do copy sign in here, right?"
12003360,12004720," So, it has to be one."
12004720,12009520," Actually, copy sign is like more generic function."
12009520,12011680," So, which is, I guess, fine."
12012800,12014240," Copy sign F."
12014240,12019440," All right."
12019440,12019760," Good."
12019760,12024800," So, now we have Snap, which is a float."
12024800,12027040," Float."
12027040,12029040," Vector2."
12029040,12030960," All right."
12030960,12034560," So, we can implement all of that stuff like that."
12035760,12039600," So, the square distance, we can just use distance."
12039600,12042240," It doesn't have to be square distance."
12042240,12045040," Copying is just an assignment."
12045040,12048160," This one is float."
12048160,12049760," This one is float."
12049760,12051520," This is just an assignment."
12051520,12054800," Damn."
12054800,12058240," This is really one of the things that should have been done by AI, right?"
12060720,12065040," It's one of those things that, like, humans don't really want to do."
12065040,12067200," It's just like translating one thing to another."
12067200,12069120," All right."
12069120,12071520," So, I didn't make that many mistakes."
12071520,12075840," So, now I can just do something like vector2."
12075840,12077440," Array step."
12078880,12079760," All right."
12079760,12079760," All right."
12079760,12083200," And, okay."
12083200,12088880," So, it doesn't like something because I probably still used this spelling."
12088880,12097040," So, but the cool thing about translating, like, from one language to another one is that you don't"
12097040,12099440," really have to re-implement a thing again."
12099440,12106640," You're just, like, fixing up these syntactical discrepancies where it's possible, right?"
12106640,12112400," Usually, you don't have to, right, do too much."
12112400,12112640," Oh, yeah."
12112640,12116560," By the way, in copy sign, I could have just, like, put epsilon into the magnitude."
12116560,12123200," But, I mean, I'm just, like, I'm translating the code almost mechanically, right, without going too much into the details."
12124160,12128560," Um, cheers from people from Louisville."
12128560,12128880," Watch me."
12128880,12129760," That's actually super cool."
12129760,12130880," I hope you're safe, guys, there."
12130880,12136880," Because I hear a lot of, like, pretty, pretty bad news of what's going on in there."
12136880,12139680," In the western Ukraine."
12139680,12141280," So, I hope you are safe."
12141280,12142240," I hope you're safe."
12142240,12151440," So, let me, let me see."
12153440,12154960," I think everything's fine."
12154960,12156000," Right."
12156000,12160560," So, we can start to actually, like, yeah, just, just use these functions."
12160560,12163200," So, let me take a look at the ray cast."
12163200,12164320," So, cast ray."
12164320,12167040," Cast ray."
12167040,12174960," So, this is sin."
12174960,12178400," Sin height."
12179360,12182960," And, alright, this one is rather interesting."
12182960,12186880," So, we're, we're going from the camera position."
12186880,12187120," Right."
12187120,12191280," So, we go from the camera position to something else."
12191280,12193520," Let me, let me try."
12193520,12199360," So, this is more like a factor to camera position."
12200960,12201280," Right."
12201280,12203920," So, position X, position Y."
12203920,12204880," Right."
12204880,12208400," So, we're passing the camera position."
12208400,12211920," And now we need to have, like, a FOV thingy."
12211920,12215520," I think I already, yeah."
12215520,12217840," So, I already know how to do FOV."
12217840,12219360," So, I just have to do this thing."
12219360,12221120," Yeah."
12221120,12222160," So, this is a camera."
12222160,12224240," And that means I just have to do camera position."
12224240,12226080," Alright."
12226080,12230960," And I'm also lerping in a very interesting way."
12230960,12232960," Can I do lerp?"
12232960,12236720," I can, actually."
12236720,12238800," So, I do FOV camera clone."
12238800,12244160," Then I'm lerping into FOV this over X display width."
12244160,12246320," But both of these things are integers."
12246320,12252240," So, I have to convert one of them into float to actually, you know, make it float."
12252240,12254880," Alright."
12254880,12256320," So, and that."
12256320,12260320," Oh, goddammit."
12260320,12267440," I think I really need to go soon."
12267440,12270480," Better lerp than slurp."
12270480,12270720," Yeah."
12271920,12272400," Okay."
12272400,12274080," So, that is fine."
12274080,12276080," From camera position where..."
12276080,12276240," Yeah."
12276240,12279360," From camera position to one of these things."
12279360,12279680," All right."
12279680,12282320," Okay."
12282320,12284400," Let's try to see if it compiles or not."
12284400,12286320," Let's try to see."
12286320,12287520," I think it compiles."
12287520,12288080," Surprisingly."
12288080,12288320," Okay."
12288320,12288560," Okay."
12288560,12291040," So, heating cell."
12291040,12292800," So, this is a camera position P."
12292800,12298320," And this is the boy."
12301920,12304400," We almost translated this thing."
12304400,12306000," We almost translated this thing."
12306000,12307040," Which is super cool."
12307040,12314560," And along with this function, we moved a lot of code into WebAssembly."
12314560,12317600," Actually, quite a few functions."
12317600,12321200," So, now I can just do P minus camera position."
12321200,12322400," So, this is just V."
12322400,12324800," Zbuffer."
12324800,12326400," We do have Zbuffer."
12326400,12327760," We passed Zbuffer."
12327760,12329680," Dot."
12329680,12331920," Do we have dot in here?"
12331920,12335680," We do have dot product in here."
12335680,12338560," Which is very cool."
12338560,12340400," So, it's literally like that."
12340400,12340720," Right."
12340720,12341680," It's literally like that."
12341680,12343840," So, I can even confirm that it's compilable."
12344480,12345040," Almost."
12345040,12345360," Okay."
12345360,12345600," Okay."
12345600,12347680," Oh, yeah."
12347680,12349120," So, that's fine."
12349120,12351040," So, this has to be just a vector 2."
12351040,12353120," All right."
12353120,12356640," So, math library in C3 is actually quite good."
12356640,12360000," At least from the point of view of the interface."
12360000,12360240," Right."
12360240,12361760," Not saying anything about the implementation."
12361760,12363200," But from the point of view of the interface."
12363200,12364000," The interface is good."
12364000,12364880," Right."
12364880,12367200," So, there's like everything that you may want to have."
12367200,12369600," Syngatile."
12369600,12371360," So, the common."
12373440,12376240," Syngatile in here."
12376240,12379120," So, we have to just use C."
12379120,12386560," Okay."
12386560,12393440," And now here, in the JavaScript code, we're calling to a WASM function."
12393440,12396080," But we are already in WASM."
12396080,12398400," That's what's funny."
12398400,12398640," Right."
12398640,12401040," So, kind of like went a full circle."
12401920,12405840," So, we now translated the JavaScript code that was going to WASM function."
12405840,12407200," But we are in WASM."
12407200,12409440," So, we can now call this function directly."
12409440,12413600," So, this is like the point of collapse that I'm talking about."
12413600,12413840," Right."
12413840,12419040," So, all of these things, they just come in together and allows you to simplify these things eventually."
12419040,12419200," Right."
12419200,12421280," So, we're still going to call it in a very stupid way."
12421280,12423440," So, but."
12423440,12428320," It is still much better."
12428320,12429280," Okay."
12429280,12429840," Oh, yeah."
12429840,12432400," So, I probably did like a full replacement in here."
12434320,12435600," So, height."
12435600,12438320," So, z buffer."
12438320,12440560," So, this is just the buffer."
12440560,12441840," So, the wall."
12441840,12443920," This is just the wall."
12443920,12445840," Wall."
12445840,12447920," Width."
12447920,12451200," Wall height."
12454000,12455680," And here we pass an x."
12455680,12458800," And we are actually starting to pass the p and c."
12458800,12466400," But since nobody calls to this function anymore, we can refactor this function to just straight"
12466400,12468080," up accept p and c."
12468080,12471440," This is again the collapse I'm talking about."
12471440,12471600," Right."
12471600,12472640," But we're not there yet."
12472640,12473920," But we're eventually going to do that."
12475280,12476240," So, yeah."
12476240,12480880," Watch him hit 60 OPS."
12480880,12482480," I don't think it's going to be 60 OPS."
12482480,12483440," But maybe."
12483440,12484880," We'll see."
12484880,12489920," Any believers in the chat?"
12489920,12490240," Yeah."
12490240,12493200," Wazzle."
12493200,12494400," What the fuck is Wazzle?"
12494400,12499200," And."
12499200,12501920," Walls."
12501920,12504000," Oh, it's a wall."
12504880,12505200," Yeah."
12505200,12508000," It's just a single wall."
12508000,12509040," It's a single wall."
12509040,12512240," It's a single wall."
12512240,12512640," All right."
12512640,12515600," Okay."
12515600,12515920," Come on."
12515920,12517760," Seems to be working."
12517760,12522080," So, and in here, in the client mts."
12522080,12526800," Render walls."
12526800,12530880," So, we're calling this function."
12530880,12532960," All right."
12532960,12535280," So, I don't know if it's going to work first try."
12535280,12537920," So, but maybe."
12537920,12540240," So, let me open the dev tools just in case."
12540240,12542560," Let's see."
12542560,12544320," It works first try."
12544320,12544800," Fuck yeah."
12546080,12546640," Look at that."
12546640,12546640," Look at that."
12546640,12549600," We're hitting 60 FPS almost."
12549600,12555600," That is actually kind of impressive."
12555600,12556000," Yeah."
12556000,12559280," We are very close to 60 FPS while I'm streaming."
12559280,12561200," This is very unusual, honestly."
12561200,12567840," But pretty much everything you see right now on the screen is rendered in WebAssembly now."
12569440,12575520," Sprites are not rendered in WebAssembly, but the floor and walls are rendered with WebAssembly."
12575520,12581200," That is so fucking great."
12581200,12582800," So, yeah."
12582800,12586800," Another function to be written in WebAssembly."
12586800,12587600," So, yeah."
12587600,12592960," So, here is like you can instantly kind of see what is in WebAssembly and what is not."
12592960,12593120," Right."
12593120,12593920," Wasm client."
12593920,12595040," We're calling to WebAssembly."
12595040,12597520," This one or not WebAssembly yet."
12597520,12601360," So, we'll have to move sprites to WebAssembly, but I'm not sure if I'm going to stream that."
12601360,12601680," Right."
12601680,12602960," Because it's pretty much the same process."
12602960,12605040," You just continue doing that and doing that."
12605040,12608960," So, the only reason why I want you to do this session because I thought that the process of,"
12608960,12615120," you know, using WebAssembly on the server is kind of like a stream worthy."
12615120,12615280," Right."
12615280,12622000," So, it's a kind of cool idea, a kind of cool step in refactoring of this application to WebAssembly."
12622000,12626320," I'll see if I stumble upon any other interesting things to stream as well."
12626320,12631280," But so far, it's just like a very mechanical process of just like taking a function and just"
12631280,12632640," like moving it to WebAssembly."
12632640,12633680," So, yeah."
12633680,12637360," And eventually, as soon as everything moves into WebAssembly, like we can, you know,"
12637360,12642240," simplify the code and collapse some of these stupid interfaces that are not needed anymore"
12642240,12644000," to interface with stupid languages."
12644000,12645520," All right."
12645520,12647360," I really have to go."
12647360,12647600," Right."
12647600,12648960," So, I'm already kind of over time."
12648960,12650640," So, yeah."
12650640,12652560," Thanks everyone who's watching right now."
12652560,12654000," I really appreciate that."
12654000,12659760," Thank you everyone who, you know, subscribed for all of the nation's commitments,"
12659760,12660480," recommencements."
12660480,12661760," Have a good one."
12661760,12663520," And I see you all on the next equation."
12663520,12667200," programming session with Mr. Zozin, hopefully at the usual time."
12667200,12669360," So, see you all next time."
12669360,12672080," Love you all."

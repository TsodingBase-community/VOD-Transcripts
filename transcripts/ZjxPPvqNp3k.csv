start,end,text
880,7280," looks like we're live hello everyone and welcome to yet another recreational programming session"
7280,13680," how about it let's make a little bit of an announcement and officially start the stream"
13680,20880," hello hello everyone welcome welcome welcome so uh we're gonna do the usual red circle live on"
20880,29200," twitch and what are we doing today on twitch.tv website today we are compressing images"
29760,36480," with neural networks right so that's what we're doing today i'm going to give the link uh to twitch.tv"
36480,41200," slash sodding the place where we're doing all of that and i'm going to ping everyone uh who's"
41200,47520," interested in being pinged and there we go the stream has officially started so uh what are we"
47520,53760," doing today today we continue working on nm.h which is a simple header on the library for neural networks"
55120,60960," that we've been developing for the past several streams right so and uh yeah i'm gonna give the"
60960,65440," link to this library here in the chat and for people who watching that on youtube and i'm gonna"
65440,71520," give it in the in the description right so we were uh doing very simple things with this library right"
71520,78000," so the usual stuff like azor networks and maybe adder and stuff like that so on the previous stream we even"
78000,84160," implemented like sort of like a ui for uh for training these neural networks so it's called gym"
84160,89840," right so this is how well i mean you have to supply the uh the description of your neural network right so"
89840,96240," it's actually start with a simple adder uh right so here this description consists of a series of numbers"
96240,102960," it's the sizes of the layers right so the first layer is eight neurons the hidden layer is 16 neurons and"
102960,111840," the output layer is five neurons so this is essentially adder that adds uh four bit numbers right so and then"
111840,118400," it outputs the sum uh in four bits and then uh it has additional bit for indicating an overflow this is"
118400,124400," basically how it works so we're going to supply the architecture of this neural network to the gym to the"
124400,130960," ui uh application that we developed on the previous stream and uh we're going to supply the uh data for"
130960,137120," training right so it's basically a matrix uh of inputs and outputs uh stored in a binary format in"
137120,142000," the file right so and this is how it looks like and as you can see it start training and start updating"
142000,148400," and stuff like that so this is actually an old version of the gym so recently i updated it i'm pretty"
148400,152400," sure so do i have some changes so let's actually fetch the latest changes"
154000,159280," uh hello hello everyone welcome welcome welcome welcome uh right so merge origin"
159280,165520," master right so and let me rebuild literally everything so to rebuild everything i actually"
165520,171200," need to give the information about raylib raylib is the library that we're using for visualizing and"
171200,176880," stuff like that right so you can find this kind of thing in here uh right it's actually a pretty cool"
176880,183600," library i kind of like it better than uh sdl to be fair i think i'm gonna start using it instead of sdl"
183600,192880," right so it's actually way more simple and way more powerful right so uh the lib we use for"
192880,199840," visualization so that's basically what it is right so it's a raylib uh right so i'm gonna give the"
199840,207040," environment uh right because i uh built made a custom build of that specific library uh right so and i'm"
207040,208800," i'm gonna just rebuild this one more time"
208800,219440," and let me start the gym let me start the gym so there you go so now yeah i made a little bit of a"
219440,224320," changes like i made uh you know this entire thing a little bit smaller and stuff like that added like a"
224320,230240," bar in here and as you can see it doesn't really start training right uh from the start right so you have"
230240,236160," to press space to actually uh initiate the training and it will start training and stuff like that so i"
236160,240880," also made it so that you can pause the training at any moment right so you basically do the space"
240880,247120," uh right so and it keeps training and it's fully trained so now this is an adder uh there's no"
247120,253600," unfortunately like a way to verify that it works but trust me it works right so you can hear also restart"
253600,258800," at any point right so this is a very convenient ui that also shows you the state of the weights and"
258800,265520," biases of the neurons right uh so and it trains this entire thing which is actually kind of cool it's a"
265520,272880," pretty cool uh visualization right so um all that is toy examples and stuff like that so today i decided"
272880,281200," that the time has come to try to do something more serious right the time has come to uh do something more"
281200,288240," serious and i want you to try to do something that i think we discussed a little bit on our discord server"
288240,296160," right so uh we started the discussion with can you make a function and two variable function right so"
296160,303680," let's actually start uh with the following thing so maybe i need to stop my start up my pain so i can draw"
303680,310000," and stuff like that right so let's actually see so we have some sort of a function and it's a function of"
310000,318560," two arguments and x and y right and it gives you the uh like a value z of some sort can you craft a"
318560,325840," function that acts like a certain image right so essentially uh if you basically try to plot it"
325840,333680," right and you use z as sort of like a maybe uh like a height or like a brightness uh will that function"
333680,340080," result in some sort of image or can you like encode an arbitrary image and stuff like that and what's"
340080,346240," interesting is that this is what you can use neural networks for right you can basically craft a neural"
346240,352720," network right with two inputs right so you can say okay so this is the x input and this is the y input"
352720,358320," then here you can have some sort of like a hidden layers right something in here doesn't uh we don't know"
358320,363120," what it is so you you're supposed to put some sort of like a sparkles in here right so you're supposed"
363120,370160," to put sparkles so recently sparkles kind of like a sparkles emoji became an official symbol of ai"
372240,380720," uh ui designers uh ui designers every time they make a button that enables ai they put like a sparkles"
380720,389360," emoji in there so sparkles is basically an official symbol of ai right this is actually kind of funny"
392240,400320," so you put x and y in here right so you put x and y and as an output you can uh have the z right and"
400320,408320," essentially you can take any image right you can take in any image and use that image as a training data"
408320,414240," for that neural network right so essentially you can basically take a pixel right you can take x and y"
414240,420880," of uh that specific pixel right x and y of that specific pixel and set the brightness in here and you"
420880,426400," can use as a training set and train neural network to behave like that specific image"
426400,434080," so what will effectively happen theoretically is that uh it will take the image and it will store"
434080,442000," that image inside of that neural network somehow right it will store it somehow and what's interesting"
442000,450320," is that we can try to give it like way less neurons um than we have pixel in an image and so"
450320,458000," if that will work what will effectively happen is neural network compressing the image into itself"
458000,467440," this is actually very interesting right so if it's going to be like a you know less weights and biases"
467440,474400," than the pixels in the image what it will have no way but compress this entire thing into itself"
474960,483520," but what's interesting is that x and y are continuous they are continuous so that means uh you can even"
483520,490480," look for the values for the values of this brightness uh between the pixels and the neural network will"
490480,497520," probably approximate it so you can not only compress uh the image into the neural network right theoretically we"
497520,504320," don't know that yet uh but you can also upscale it right you can also upscale it you you can even uh"
504320,510240," basically take all of the coordinates like uh of this thing and normalize them uh from zero to one"
510240,516960," right you can normalize them from zero to one and train it on uh zero one uh right so this is going to be zero"
516960,524080," one and then that way you can basically reshape it however you want right with any size and it will just sort of"
524080,531600," approximate uh and stuff like that so uh you can even like probably do uh colorful images right so instead"
531600,540080," of like brightness you you may try to return rgb right like this uh but i don't want to go into colorful"
540080,545760," images yet right so because i'm afraid of maybe like too too many complications i really want to start with"
545760,552800," something simple so we're going to have like a gray scale images right so this makes sense um it actually"
552800,555920," sounds like a very interesting idea um let's go ahead and do that right so"
555920,563760," we're going to work with uh grayscale images right so and i not only want to do grayscale images i"
563760,568640," also want to start with very small images right so we're going to start with a very simple example"
568640,574560," a very small grayscale image right so where can we find an interesting grayscale"
574560,579840," small image right so we can just use mni's database right so mni's database"
581440,591040," uh and uh it has a lot of the uh these hand uh handwritten digits and they're basically 28 by 28"
591040,599920," right there you go uh 28 by 28 um grayscale images right so uh let's actually try to find it for some"
599920,604960," reason it's is that the official website i'm pretty sure yeah okay so let's actually go ahead and try to do"
604960,611760," that so there's some images in here right so let's download them so they split it into sets right the"
611760,617920," first was set for the training and the second set for validation we don't really need the whole set we"
617920,625200," just need one single image uh from that right so let's actually go to uh nm.h and let's just like try"
625200,632800," to download that and see uh like how is this going to go open game art but we can also try to use open"
632800,641760," game art at some point uh right so this doesn't look like a tarpol wait wait is that literally like a"
641760,650320," single file zipped or something like okay so can i just emacs recognize that yeah it's literally single 45."
652400,657440," okay so okay they probably took all the images and compressed them into a single file so we'll have"
657440,664560," to extract that stuff somehow uh yeah it's just like literally data um maybe there is a version"
664560,670080," uh with png and i wouldn't really see that is there something like minced png because i don't really want"
670080,677520," to spend time extracting all of that uh scheiße uh kegel actually has something okay so let's take a look at that"
679920,689120," so can we get something from here uh okay so there is a couple of folders in here so here is the training"
689120,697200," uh and oh they split it into like digits in here so which digits should we pick i kind of like eight"
697200,705040," right so because it has like these two loops uh this one is actually kind of cool yeah this one kind of cool"
705040,712640," can i can i can i get that so this is open png now i wanna you see how small it is it's literally 28 by 28"
712640,719440," right so we're gonna try to train a very small simple neural network that should behave like this eight"
719440,725200," right and we'll see if it's if it's gonna work or not i think it's kind of interesting uh right so can i um"
725200,730800," i can't press a right click because of that stupid bug of chromium or something where i have to open a"
730800,737920," separate application click right click so it shows the pop-up and uh then i can yeah finally do that"
737920,743520," like it still persists for some reason i don't know why this happened it's so weird uh okay so we're gonna"
743520,752640," copy image address uh right so i'm going to double get yeah can i just save it though uh save image as"
752640,760400," all right so let's save this thing and maybe i'm going to go to the download folder and find this"
760400,770640," entire thing in here uh so here is the image you can see how small it is uh all right so that's the simple"
770640,777280," image uh right so i think i didn't acknowledge the like subs and stuff like that and also we have some"
777280,782480," beats uh so let me quickly acknowledge that so there's a couple of things in here uh right so there"
782480,792400," are people subscribing off screen 21 looks a boring bike shatter yes xyz uh i always see uh thank you so"
792400,797680," much uh for all of the subs and conventional coding thank you so much for tier one subscription and thank you"
797680,803920," for 100 bits with the message i enjoy watching your videos while unironically coding php i mean there's"
803920,811200," nothing wrong with php like to be fair um i programmed in php recently right so i wrote like a jokingly"
811200,818720," a compiler for c in php and i didn't really hate that language that much i i do hate all the languages"
818720,824320," equally but i didn't hate php that much and i could see myself actually programming in that language for"
824320,831280," money so that wouldn't bother me so i see nothing wrong with programming in php honestly right to me"
831280,837200," it felt like yeah yet another scripting language i've seen dozens of them throughout my career or"
837200,841360," software developer i've seen dozens of scripting language and it's just like yeah it's yet another"
841360,849600," scripting language not not the worst one i've seen honestly the the conversions of like um strings to"
849600,854880," numbers is a little bit weird but you're not supposed to use double equals anyway right so"
854880,860400," you're supposed to use triple equals and on top of that the latest version of php has like a stronger"
860400,867840," typing and even type hints and stuff like that so i can see that as a like a usable language actually so"
867840,875760," i don't see anything wrong with that so yeah so anyway uh right"
875760,888400," let me let me see um so what we need to do we need to convert this image into the uh data file right"
888400,895120," so because the way our gym works right so it accepts the data file in here so one of the things we have to"
895120,900240," do we need to be able to like convert this entire image to this data file so we can give it to the gym"
900240,907440," because gym doesn't really support images at all uh right it doesn't support them so uh let's create"
907440,916160," uh a thing uh let's call it maybe png to to mat right so that sounds like a good name for this thing"
916160,921840," right uh right so we're gonna do we're gonna create std uh we're gonna include std.io"
923280,928320," and uh we're gonna simply accept the arguments right"
928320,937360," uh and so essentially we're gonna accept the uh path to the image uh to the arguments right"
937360,946480," uh so how can i do that i need my trusty shift argument function so i think i do have it in gym"
946480,952640," uh yeah here it is it's a very useful function right which essentially is sort of like a pops the"
952640,958800," arguments from the left right you can think of the arguments as an array of arguments that is"
958800,962880," provided through a command line and essentially what this function does is just like pops out"
962880,969200," like the first argument and increments the amount of arguments and increments basically goes to the"
969200,974000," next argument and it's very convenient right so essentially the first argument in here is always"
974000,982320," the program so which we can do we can do args uh shift right and we can do argc uh argv there we go"
982320,990320," so and it's uh like very useful for usage messages right so uh and uh then we can check okay do we have"
990320,998240," any arguments in here if we don't have any arguments we have to say something like uh std error error uh no"
998240,1006080," input file is provided right no input file is provided uh right and we're going to return one in here and"
1006080,1013440," on top of that we can also print the usage right so we can say something like usage s uh input png"
1013440,1019680," right so there we go and we have to provide the uh the program so let's actually go ahead and compile"
1019680,1029200," this entire stuff let's compile this entire stuff so this is going to be png uh to matt right png to matt"
1029200,1034720," so i don't really want to build everything i only want only want to build png to matt"
1034720,1042720," uh right so let's actually do it like that and it requires raylib to be fair raylib is only needed for"
1042720,1050480," gym but for some reason i made it so like every executable in here requires that so i think i need"
1050480,1058240," to change that so because in here i only need lm right so only this thing needs right so let's actually"
1058240,1065120," do it like that and uh oh yeah and it needs it because it cannot evaluate this line uh right if it"
1065120,1071440," doesn't have a raylib in here okay so maybe one of the things i have to do i have to move this entire"
1071440,1079920," stuff in here right so maybe uh i'm gonna only leave the mathematical library in the libs right so like"
1079920,1088640," so uh so here we would have everything related to raylib and then the common libs in here like so and for"
1088640,1096400," the c flags uh yeah i think i also need to move this entire thing only to the gym right so in c flags and"
1096400,1101600," leaps we're only going to keep things that are common for all of these executables right so only"
1101600,1107840," the things that are common uh okay so and it complains about something implicit declaration of assert"
1107840,1116000," uh which is understandable right so we can include a certain here sure uh and it worked right so if i"
1116000,1122080," try to run png to matt it complains that uh we didn't provide an input file if we do provide an input file"
1122080,1127360," right so we provide the image in here it doesn't complain about anything it doesn't complain about"
1127360,1134720," anything at all so what we need to do we need to read the goddamn image i suppose right we need to"
1134720,1140800," read the god damage so we're going to use stb image uh right so that's the usually what i use for reading"
1140800,1147200," images in c because it's so goddamn convenient right so let's do nothings uh stb"
1147200,1166720," so where is stb image dot h all right so recently github changed its ui i think uh"
1167440,1173760," or it didn't i don't know look because i started to see that it created this panel on the left"
1173760,1178480," but i saw that on my different account and i don't see that on this account"
1178480,1183520," they either change something right before the stream or this is a slash b testing"
1183520,1191360," do you guys know what is a slash b testing uh right so it's essentially when you implement a feature for an"
1191360,1200160," application you give you don't enable feature right away you essentially uh show that feature only to"
1200160,1205440," half of the users right and you measure their reaction and compare it to the reaction of people"
1205440,1210400," without that feature and make a decision whether actually to roll out to everyone so maybe that's"
1210400,1217760," basically what it is uh so i don't know so here it is closed but oh okay so the we have this thing"
1217760,1225680," oh that's the panel i was talking about interesting right weird i don't know why it's needed uh"
1225680,1232240," but it is what it is and it isn't what it isn't okay so let's actually download the uh the library in"
1232240,1249120," here so stb image um okay so um now let's include this entire stuff new ui is bs well any new ui is"
1249120,1257520," actually bs right so every time like any website comes up with a new ui everyone uh doesn't like that"
1257520,1262960," and the reason why everyone doesn't like that is because everyone is like already developed habits"
1262960,1270720," on how they use the website and uh changes in ui actually break those habits you will it's actually"
1270720,1277680," kind of interesting right because we are so obsessed about backward compatibility with programming"
1277680,1285120," interfaces but when it comes to user interfaces nobody gives a about backward compatibility and existing"
1285120,1292240," habits of the users like users seriously those people right so it's kind of interesting like"
1292240,1298560," why nobody like cares about backward compatibility of like existing habits of the users it's just like"
1298560,1304000," and what's interesting is that you do have information about the habits of the users you"
1304000,1311120," have telemetry and stuff like that you could have at least respect that i don't know uh so"
1314240,1320640," uh i guess we just respect computers more than we respect humans and the latest ai hype actually kind"
1320640,1328240," of confirms that anyway so uh what i was doing i wanted to just include uh or no stb image page"
1328240,1332640," uh right so"
1332640,1344160," and let us see let us see so we're gonna do stbi load and this is how we load the images this is how we load the"
1344160,1351200," images so i suppose the first thing i need to do i need to actually grab the path to the file right so we have"
1351200,1359840," to do something like uh cons char um so let's say image uh file path right so this is the image file path"
1359840,1366400," i don't really know why i say it's supposed to be png because stb image actually supports not only png"
1366960,1374000," uh right so it's kind of like misrepresenting what it actually is so let me actually rename"
1374000,1380480," this into i think i think it has to be called image to mat right so and let's do build.sh and i'm going to"
1380480,1396080," replace pin i'm dying excuse me so let's continue so this is the image uh to um mat uh right so that makes sense now"
1396080,1404720," because it's not only png and here we have uh args shift right so we're shifting and we're getting the"
1404720,1415200," file path right so argc argv um there we go so and then here what we need to have so x is actually image"
1415200,1424240," width right so it's an image width and here uh it's image height so what n usually means is the amount of"
1424240,1431280," of components in image right so essentially it's the amount of bytes per pixel right so that's what it is"
1431280,1437360," it's amount of bytes per pixel so if we take a look at the actual definition in here right so it's the"
1437360,1444560," comp right so the amount of components so by passing it by the pointer it actually gives us the actual"
1444560,1450480," amount of components right so and then here we provide like um the one that we expect and if i remember"
1450480,1456000," correctly stb image can sort of like adapt this entire thing for us right and if you provide zero"
1456000,1463600," it will just not convert to any of the uh desired components right so i think it's kind of important"
1463600,1471840," for us because what we care about what we care about is that the image is grayscale right uh is the uh"
1471840,1478800," thing actually grayscale so let's actually see uh right it's eight bit grayscale okay that's actually pretty cool"
1478800,1484240," so essentially we can condition on uh this specific thing right so we can check"
1484240,1490880," that uh this thing is supposed to be equal to one and if it's not equal to one we can say that we do"
1490880,1496000," not support that right so we only support grayscale images and stuff like that uh right"
1501600,1509600," uh so yeah so yeah so essentially essentially let's put image width uh right so and then image height"
1509600,1516320," and this is image components there we go so and in here we're gonna have image pixels right and since"
1516320,1524080," it's a grayscale 8-bit image we're gonna actually have a pointer to uh you int 8 right so we're gonna also"
1524080,1532080," cast this entire thing to uh you int 8 right and we can also check uh that this entire thing is not"
1532080,1537440," equal to zero if uh if it's equal to null right equal to zero we're gonna say that we need a"
1537440,1548480," fucky bucky oopsie doopsie error could not read image as uh image file path i'm gonna return one there we go"
1549200,1555600," so and another thing we can do in here we can say okay if image components is not equal to one"
1555600,1565040," right if it's not equal to one we're also gonna say something like uh right the image s um"
1568000,1575360," is uh has let's put it this way uh d beats um"
1575360,1579920," image s is"
1579920,1594000," let's put it this way this thing is this beats image only eight bit grayscale images are supported that's"
1594000,1600240," what i want to say okay so image file path uh and the amount of bits so as far as i know it"
1600240,1605600," returns the amount of components so it's amount of bytes we need to convert it to bits so it has to be"
1605600,1611440," eight right so this thing uh is this bit image on the 8-bit grayscale is supported and we're going to"
1611440,1619440," return one so after we checked all these things we can say okay uh so this is image uh size is going to be"
1619440,1631120," d by d um and then something like d bits uh right so i think that's that's reasonable so image"
1631120,1640640," file path then image width uh image height and image components do i see components here are the"
1640640,1646160," components i'm going to multiply it by eight and there you go so let's try to recompile this entire thing"
1646160,1652400," is it going to work okay so this is supposed to be image file path any other errors uh i think"
1652400,1658000," everything should be okey dokey a karaoke almost there i think i need to disable oh three because"
1658000,1663760," it just takes too much time to actually finish uh right because it's just like full optimizations"
1663760,1669920," and stuff like that and i'm also streaming on this machine right so let's actually put maybe two in here"
1669920,1676240," and especially makes it slow because of the stb image there's a lot of code in the stb image right"
1676240,1682720," there's a lot of code in here well 8 000 lines of code and it's just like trying to fully optimize all"
1682720,1689040," of them right this is a single file so because of that it kind of compiling is to be image with all three"
1689040,1694080," like significantly slows everything down and especially on my 10 years old laptop from which i'm also"
1694080,1701200," streaming right so from which i'm also streaming so that's why it's a bit slow but anyways so if"
1701200,1707360," i try to use less optimizations i think it's going to be a little bit faster no not really o2 is still"
1707360,1714400," kind of slow what if we don't do any optimization at all let me see uh it's actually way faster as you can"
1714400,1722880," see yeah there we go all right so let's see uh okay so let's provide the image in here and uh there"
1722880,1729920," you go so this image size 28 by 28 8 bits and that's precisely what we expected isn't that cool"
1729920,1736480," isn't that poggers i think it's cool and poggers simultaneously so i think we had some other images in"
1736480,1741600," here yeah we had the thumbnail right so i put that thumbnail in a readme so this is definitely not"
1741600,1748160," 8-bit uh image right this is definitely not 8-bit image so we can try to uh supply it in there so"
1748160,1755120," this is a thumbnail and it should crash saying uh it's a 24-bit image only 8-bit grayscale images are"
1755120,1763760," supported that's right so we're rejecting everything that is not uh 8-bit in um image okay so that's cool"
1763760,1769440," so we have the uh this entire thing right so the next thing we need to do we need to actually convert"
1769440,1774000," that to uh a training data right so we need to convert it to training data so let's actually"
1774000,1779920," include our trusty framework that we developed ourselves and then do the pitch and let's define"
1779920,1790960," and then uh implementation to make it act like a c file not like a header file uh right so and let's"
1790960,1797360," construct a matrix right so let's construct a matrix uh it's going to be met uh and it's going to be like a"
1797360,1804240," a training data i usually like to call it t uh and let's allocate so um what's going to be so the"
1804240,1809760," amount of rows is the amount of samples so we can say that each pixel of the image is going to be"
1809760,1815920," sample of the training data right so each pixel so that means uh the amount of rows is going to be image"
1815920,1824880," width multiplied by image height uh right so that's basically what it is uh and uh the amount of columns is"
1824880,1835040," essentially um the amount of inputs plus outputs right so essentially how we organize the training data"
1835040,1845680," within the matrix right uh so essentially you allocate rows and each row each row in the matrix is a training"
1845680,1853520," sample right this is a single training sample and then uh you have uh a couple like several columns"
1853520,1861440," which correspond to the input and several columns that correspond to the output so you store inputs and"
1861440,1868560," outputs within the single row and what is considered input and what is considered output greatly depends on"
1868560,1874720," the architecture of the of your neural network so essentially you supply an architecture of the neural"
1874720,1883760," network uh right like so uh adder put arch right so here the input we have eight inputs and five outputs"
1883760,1890640," right so that means together the uh amount of columns in the training data is going to be 13 uh 13 elements"
1890640,1897360," right so basically you just summed it up uh so in our case the amount of columns is going to be"
1897360,1904960," three right because uh first thing you have is x uh which is x coordinate then y and then the uh"
1904960,1908880," basically the brightness of the pixel right so essentially what we have to do we have to"
1908880,1914960," turn all of the pixels into these sort of triples and just store them right so that's what we have to do"
1914960,1926960," uh so uh yes yes yes so we've got some uh more uh beats from enumerate i thank you so much for my"
1926960,1932000," kind of beats with the message i really enjoyed your typescript videos by the way i had some nice"
1932000,1938640," ice cream today so here are some bits so you can enjoy my epic ice cream club okay thank you thank you"
1938640,1948160," so much uh i surprisingly i'm like when i say that people cannot believe me but i don't like ice cream"
1948160,1957680," i'm a really weird person i really don't like ice cream and it's not like something recent i never"
1957680,1966240," liked ice cream since my childhood imagine like people my peers were considered me weird and other like"
1966880,1971760," adults were considered me weird because like a child doesn't fucking like ice cream what the"
1971760,1978480," fuck is wrong with you you're are you are you even normal but here's the interesting thing uh if the"
1978480,1988320," food is cold i can't taste anything ice cream is literally tasteless for me because it's how cold it is"
1988320,1994480," like i i can't taste anything it's just like tastes like nothing this is the first thing second thing is"
1994480,2002000," that i have a very sensitive teeth so eating ice cream is literally painful for me it's like"
2002000,2008160," not really painful it's extremely uncomfortable imagine eating something extremely uncomfortable"
2008160,2016880," and tasteless that's what it feels uh for me eating ice cream so yeah but i'm really glad that you enjoy"
2016880,2022080," your ice cream i'm not saying that ice cream is bad it's just like i'm saying that i'm a weird person"
2022080,2027920," right so for me it's just like something that is very uncomfortable uncomfortable to eat and doesn't"
2027920,2034400," taste like anything so the only way i enjoyed ice cream is just actually by melting it down and drinking"
2034400,2042640," right because that way it wasn't that really cold and i could actually taste something right so yeah"
2042640,2052560," it tasted sweet and stuff like that yeah thick shake yeah um yeah i tried melting before yeah"
2052560,2062480," you live in a cold country you want something more i guess uh yeah i guess i live especially i live"
2062480,2071920," specifically in siberia which is like extra cold part of russia right so um so we well siberia is"
2071920,2077840," actually weird honestly because uh specifically in the place where i live the temperature range"
2077840,2088880," throughout the year is minus 30 celsius and plus 30 celsius right it's a really weird place um anyway"
2089920,2096720," so let's continue so here we're supposed to have uh three um three columns and this entire thing"
2096720,2105360," um okay so let's go ahead and iterate each individual pixel right so i'm going to start uh"
2105360,2114720," with y we're going to iterate the rows less than image uh height like so and uh we're going to iterate the"
2114720,2120880," columns right so it's going to be image width so here's the interesting thing as i already said i"
2120880,2128480," want to actually uh you know train on the normalized coordinates right on the normalized coordinates basically"
2128480,2137040," the coordinates from zero to one uh all right so the way you can convert uh any coordinate to a"
2137040,2142960," normalized coordinate right so for instance you have this sort of x and you have this width so"
2142960,2149440," essentially what you can do you can just take x and divide by w and that way you're gonna get a value"
2149440,2158080," from zero to one right so the closer the x to uh zero to here it will be closer to zero the closer the x to"
2158080,2164720," that h the closer is going to be to one right so that's what being normalized mean uh right so and"
2164720,2172800," you can do the same thing for y coordinates right and what's interesting is that by doing that you kind"
2172800,2180720," of lose aspect ratio but it also allows you to remap it to any sort of shape and size of the uh of the"
2180720,2186480," image so and the reason why i do that is because once i train this neural network hopefully i'll be able to"
2186480,2194960," upscale it right so it's 28 by 28 and what i want to be able to do i want to maybe upscale to 520 by 520"
2194960,2201600," uh yeah it's basically lerp right it's basically linear interpolation right so um it's kind of like"
2201600,2210000," a half uh halfway to linear interpolation right so linear interpolation is actually also includes a step of"
2210000,2216560," mapping that normalized value to a different range right basically i don't know it's just like depends"
2216560,2225600," anyways so uh we will need to work with normalized coordinates how can we do that uh let's actually do"
2225600,2231600," something like uh an x and this is where we're gonna just take an x and divide it by image width"
2231600,2239680," uh right but what's interesting is that uh this implies that x can be equal to image width but as you"
2239680,2245280," can see it can never be equal to it right so and essentially what we have to do we have to basically"
2245280,2254000," divide it by image width minus one because that's the maximum value x can be effectively right and all"
2254000,2260240," that makes sense uh if we convert that to floats right so all of that has to be floats so this is also"
2260240,2269360," y and this has to be height right so there we go uh all right and uh what we want to do is we want to"
2269360,2277520," probably get the actual pixel right so essentially we have to do image pixels uh let's do y multiplied"
2277520,2283520," by the size of the row and plus x let's actually print this pixel right so it's it's actually a very"
2283520,2290960," small image 28 by 28 so that means we should be able to actually do some ascii uh ascii stuff so that should"
2290960,2299040," work out i think so let's do print f uh so u maybe we can make it like the the width of the"
2299040,2303680," center i think three right so we're going to actually do a little bit of a left pad uh right"
2303680,2308720," and there we go so we can do something like this and just like print f uh n and we should be able"
2308720,2314880," to see that image right so not not that image though uh so let's actually also do build sh"
2314880,2322240," and let's do uh this thing is it going to work yeah does it look like eight it's kind of difficult to"
2322240,2329760," see because of these zeros uh maybe we can do some some other choice so maybe we can pad with spaces i"
2329760,2340160," think padding with spaces it can be yeah look at that yo this is eight what the so we've got"
2340160,2345200," some sub thank you so much on my uh on my rule for uh t1 subscription thank you thank you thank you"
2345200,2353760," so that's the image that we just read right that's pretty poggers that's pretty poggers not gonna lie"
2353760,2360240," okay so what i want to do i want to take this entire thing and as you can see these are the values from 0 to"
2360240,2368000," 255 right so which means that we can also normalize them right if we take this values in divided by 255 we're"
2368000,2374800," going to get the values from 0 to 1 right so uh normalized values in normalized value out makes"
2374800,2380400," sense and that way we can uh remap this thing to like anything right so i think that makes sense right"
2380400,2389280," so uh let's quickly do that so we're going to just divide it by 255 but it's going to be float"
2389280,2394240," so since this this is a float literal this entire thing is going to be converted to floats anyway so we"
2394240,2400400," don't have to worry about that so this is a normalized brightness uh and essentially what we have to do we"
2400400,2407200," have to just store that in the current row but what is the current row what is the index of the current"
2407200,2414720," row we can just basically take uh yeah we can do a similar thing we can say that this is a row yeah there"
2414720,2423600," we go so we can just say this is the index so this is going to be i uh so this is i we can put it in"
2423600,2434400," here and uh we can do a similar thing mat at t so the row is i uh and the column is actually uh zero is"
2434400,2442640," going to be corresponding to x one is going to be y and two is going to be uh b and in fact we can"
2442640,2449520," just right away just assign those values in here we don't really need intermediate values i think i"
2449520,2459600," didn't see any point in having this intermediate values yeah that makes sense yo there we go so uh let's"
2459600,2465360," actually print of these entire matrix and see if it looks like anything right so there should be like"
2465360,2474400," a 700 something uh right okay so here is the matrix yeah there we go so we we can see some like patches"
2474400,2476480," of like bright colors and stuff like that"
2476480,2488240," yeah so that's that's basically the image right so that's basically this image from mnist uh but encoded as a"
2488240,2494400," matrix uh for training right so we converted it into a training data so that makes sense so now we have"
2494400,2500480," to save it to to a file system right i think there was something like mad safe uh and it accepts the file"
2500480,2507760," right so the output file so let's actually go ahead and uh just try to do that so we need to open the"
2507760,2519760," uh f open uh so let's say out file path uh for writing in binary so const char out file path and it's going"
2519760,2527040," to be equal to image dot mat right so i think that's the reasonable name to call this entire thing and if"
2527040,2536800," this entire thing it turned out to be null uh we're going to do f print f uh std error error could not"
2536800,2544160," open file s for whatever reason right so i'm going to return one all right so and then we're going to try"
2544160,2551200," to save the uh the matrix in that specific place and once we successfully done that we can say something"
2551200,2558560," like generated as from s which effectively means generated out file path from image file path i"
2558560,2564560," want to actually print both of them so we can clearly see what was generated from what uh and there you go"
2564560,2570960," right so let's actually go ahead and do that okay so generated image mat from this thing do we have image"
2570960,2579760," image mat uh there we go so it's almost 10 kilobytes almost 10 kilobytes"
2579760,2591120," so okay so what's cool is that now we can put that into um into the gym right but before we can do that"
2591120,2596240," we need to define the architecture of the neural network right so we have two inputs and one output"
2596240,2600800," i'm pretty sure we won't be able to train anything with this kind of stuff but we can try"
2600960,2609840," right we can try to do that uh so let's go ahead and do that gym and let's provide um so image"
2609840,2617360," architecture image uh mat right so let's actually run that and there we go so this is the the neural"
2617360,2626080," network that we can try to train and it doesn't really go anywhere right so it went through 10 000"
2626080,2632400," of durations without achieving anything it's just like yeah so it it has no place to store all of"
2632400,2639200," that image so let's actually put some stuff in there so how big of the inner stuff going to be"
2639200,2648400," so it's 28 by 28 so let's actually put 28 hidden layer in here and see if it will be able to basically"
2648400,2657520," compress like all the rows into a single row somehow uh will that work uh so let me see okay so this is"
2657520,2665040," where we can try to store that image maybe uh and let's see if it's going to do something it doesn't"
2665040,2679360," really go that much right yeah it doesn't really what the it's doing a jeep and it's yo what the"
2679360,2690080," it it learned something but but we have no way to verify that and see we like yeah the the gym is kind"
2690080,2697920," of scuffed is that because it doesn't allow you to sort of like a store uh the trained neural network"
2697920,2704960," i can add that but here's an interesting thing i don't like this workflow i really don't like this"
2704960,2711200," workflow where you have to write a separate program that generates a data and import data into separate"
2711200,2716560," file then take that file into a different program train this entire thing and it will speed out"
2717120,2722720," a new file and now you have to write another program that takes that uh trained neural network and"
2722720,2730480," verifies it somehow it's just like i want this to be a single thing right i want this to be a single"
2730480,2741200," thing and maybe what i have to do instead of gym being like a separate program maybe gym has to be"
2741200,2747840," also part of the library you know what i mean so it would be kind of cool if from the sort of same"
2747840,2756720," program in here uh image to matt or something okay i generated the training data and then i would say"
2756720,2763200," okay gym and i just provide the training data and maybe also like i allocated the neural network"
2763920,2770800," uh right and then a log all right and then a log uh so and it would say something like architecture"
2770800,2778080," array len architecture and then size t and it will provide the architecture something like 2 28 1."
2778080,2784240," right and then i would say okay train that neural network on that data and it will start this thing"
2784240,2791440," and then i close the uh the window and then here i can verify uh this entire thing with the data and"
2791440,2796000," what not right so it would be kind of cool if it was just a separate uh component"
2796000,2810000," all right okay people are getting really inspired to program and see for some reason yeah i keep"
2810000,2817200," receiving messages that i somehow inspired people to program and see uh the reason why i program and see"
2817200,2825760," is not because i like this language i actually don't like this language i think um like it has a lot of flows"
2825760,2830320," and stuff like that but the the program the reason why i program in that language is because"
2830320,2839760," it's the only language of its kind uh right because it's the simplicity of this language like no other"
2839760,2847920," language actually provides this level of simplicity um everything else is over complicated over engineered"
2847920,2853520," slow and stuff like that uh and c is the only thing that is just like doesn't stay on my way"
2853520,2861360," but it has a lot of problems that makes you shoot your leg quite often and i wish like there"
2861360,2868720," was a language that kind of like c but actually addresses all the problems of c so far the only"
2868720,2874800," language that i've seen that is like that which is as simple as c but also addresses the problems"
2874800,2880000," of c is jai but it has a huge flow it doesn't exist"
2883120,2890320," well i mean i do have a compiler of j right but as i already said i can't just like really easily share"
2890320,2895200," the source code i wrote in that language because not everybody has the compiler though the compiler"
2895200,2900880," beta is expanding so the more and more people actually have an access to it so maybe at some"
2900880,2909680," point it's not going to be a problem uh isn't go kind of simple and no it's not as simple as you think"
2909680,2919520," it's like c but with very specific things put on top of c to uh solve very specific google problems right"
2919520,2924320," anyways so okay"
2924320,2936480," so i use c because the things i do are not about programming language"
2939040,2944720," the things i do are not about programming we should stop learning programming languages and start"
2944720,2948160," learning program programming already instead of programming languages"
2948160,2958720," so uh i want to be able to do something like that so but uh i'm kind of lazy to actually"
2958720,2964720," start working on a gym what if i just like do this entire stuff without the gym"
2965520,2969840," yeah there we go i can just train it myself right so i can just allocate the neural network"
2969840,2976560," uh like so right the neural network uh and then i can allocate the gradient right and it's just i can"
2976560,2986000," just train this entire thing so so i can just train it for like 10 000 epochs and then i can try to"
2986000,2993280," maybe i can try to print uh the output of the neural network in ascii right just just to see because"
2993280,2997440," i want to see how it's going to look like right so it would be kind of cool to see how it's going to"
2997440,3003040," look like all right so we're going to do backprop uh right so where is the backprop uh i want to see"
3003040,3011920," the signature right there we go oh yeah okay so we need to split our uh training matrix right so we need"
3011920,3020400," to split our training matrix into the input matrix and output matrix okay so let me quickly try to do that"
3020400,3025040," so we're going to have an input an input that basically has the same amount of rows as the"
3025040,3032080," original thing right so this is going to be rows the columns uh is going to be two because we have two"
3032080,3039280," inputs uh stride is going to be the same as the original thing a stride is basically uh how many columns"
3039280,3044720," you have to speak to get to the next row right and since we store inputs and outputs in the same"
3044720,3051280," sort of matrix right so you have to sort of like jump over the outputs to get to the next inputs right"
3051280,3060640," if that makes sense uh right and then here the actual data starts at matrix zero zero so this is where it"
3060640,3067040," starts at least for the input right so the outputs are going to be like this so the rows is the same"
3067040,3074080," as the original the columns is actually one right so it's basically a huge single column uh right stride"
3074080,3080160," is also the same right so this is how many you have to skip but we start at slightly different place"
3080160,3089200," right so in terms of row it's zero so zero one i think two right so maybe we can even do something like"
3089200,3096640," like this is where you have to start so it has to be maybe ti calls so that's actually kind of useful"
3096640,3102320," because if i modify the amount of columns right it's going to be three i never have to modify this"
3102320,3109200," specific part i think that's actually kind of cool uh all right so and we can try to uh print those"
3109200,3115200," matrices to see if it actually like sort of worked out the way we expected it to work out so i'm going to"
3115200,3121520," exit in here so it doesn't go down there and doesn't start like saving and so and let me"
3121520,3128320," rebuild this entire thing okay so it didn't compile because this has to be a pointer thank you compiler"
3128320,3136160," very cool all right so we've got this stuff so this is the inputs which are just coordinates and these"
3136160,3142400," are the corresponding values so there is a lot of zero but there's some patches of like uh you know bright"
3142400,3146320," things and this that actually corresponds to the image right that's actually because most of the each"
3146320,3154560," okay that's cool so let's not save this entire stuff to file system anymore because we're going"
3154560,3159680," to be training it like right here so what we have to do we have to provide the neural network the gradient"
3159680,3166480," the uh input and output right and that will give us the gradient like where we have to move and the next"
3166480,3172480," thing we have to do we have to learn from that gradient right so essentially we have to subtract"
3172480,3178720," that gradient from the neural network with a specific rate all right so we take the neural network we"
3178720,3184640," subtract the gradient and the rate let's set the rate to one for now right so this is going to be one"
3184640,3192720," for now and we'll see how it goes all right so let's train this entire thing for i don't know for maybe"
3192720,3204240," 10 000 epochs right epochs i forgot where you put stress you can uh max epochs plus epochs"
3205920,3212880," yeah that doesn't know the complete for some reason uh okay so how many we're going to have in here"
3212880,3219040," so let's say it's going to be 10 000 i think that makes sense so we can also print the cost function"
3219040,3226480," the actual value of the cost function uh right but we don't want to print it all the time because it's"
3226480,3233360," going to actually clutter the output and it will slow down the entire thing uh right so we want to"
3233360,3240480," print it maybe every like 100 iterations or maybe or every 1000 iterations i think that makes sense"
3240480,3246560," right so we cannot print the iteration in here and then the cost function uh in here so the iteration is"
3246560,3252720," epoch i don't want i don't know why i call it epochs because it's a single one it's more of a current"
3252720,3258960," one it should be just a single form now let's say that if this thing is divisible by"
3258960,3265040," thousand only then we're going to print it right so we don't even compute the cost function on each"
3265040,3269920," iteration only every thousand iterations what we found is that it's actually kind of fast it makes it go"
3269920,3280080," makes it go so is it gonna do the thing and uh it kind of well it's actually going kind of slow"
3280880,3288160," it's not going anywhere for some reason i'm oh yeah i know why because i didn't"
3288160,3293680," randomize the goddamn neural net right so because it's all zero so of course it doesn't learn anything"
3293680,3302960," right okay uh rand and then from minus one to one let's actually initialize it from one to one to one"
3302960,3310160," and i think thousand is too slow let's actually do one hundred instead uh there we go so it is learning"
3310160,3316800," it is doing things it's kind of interesting that it's stalling for a little bit right it is stalling"
3316800,3325440," for a little bit it actually feels a bit slower well i mean yeah that's that's fine so but towards like"
3325440,3333120," 10 000 it should actually start like dropping down significantly as we observed in gym as you can see"
3333120,3337200," it's going down i think by 10 000 it's going to actually get somewhere"
3337200,3346880," i guess it's fine all right so it started somewhere"
3346880,3357040," close to yeah it actually went up uh a little bit it went up a little bit and only then it started to yeah"
3357040,3364000," that was interesting anyway let's try to verify uh let's try to verify yeah we also probably need to"
3364000,3372160," enable compile optimizations yeah so uh let's try to verify this into i think we're gonna do y uh starting"
3372160,3382400," from yeah let's actually do the original size right so image uh height right and then we're gonna do size x"
3383440,3389760," so how are we gonna be actually rendering the neural network right so we need to render the neural network"
3389760,3400000," somehow uh right so essentially we need to take the input of the neural network right and it's a row"
3400000,3407920," right so it's a simple row and we need to take uh a column uh zero so the first one is going to be x"
3407920,3415600," so what we have to put in here is just float uh x divided by image width minus one right so that's the"
3415600,3422960," first input and then we have to put y in here and there we go we actually initialize the uh inputs of"
3422960,3430320," the neural network so the next thing we have to do we need to forward all these inputs and in the output"
3430320,3435680," we have the output of the neural network right but it's a it's a matrix but it's a one by one matrix"
3435680,3441120," right so what we have to do in here is probably get the value at zero zero right it's a one by one matrix"
3441120,3447920," and that value is going to be the brightness from zero to one so essentially what we have to do we can"
3447920,3457440," convert it to zero to a value from zero to 155 right so multiply it by 255 and just like uh save it to um"
3457440,3464320," you know pixel so this is our pixel and in here we're going to just like print it the way we printed it"
3464320,3470080," before right so this is a pixel and in here we're going to print a new line so we literally just put"
3470080,3476000," the coordinates into the neural network we forward it we get something back and we treat it as the"
3476000,3482560," brightness of the pixel right so uh let's see how it's going to work out so on top of that i think"
3482560,3487440," it makes sense to actually enable the optimizations as much as possible so it goes a little bit faster"
3487440,3492240," so there's something wrong in here i'm not really sure i like that this is because these things are"
3492240,3498320," integers so i think it makes sense to convert them to size t i don't really like warnings okay"
3499360,3505440," so uh we've got some subs why software thank you so much for twitch prime subscription with the message"
3505440,3511360," have a nice day have a nice day to you too thank you thank you so much all right so it is compiling"
3511360,3516560," right so it is slow because i have a slow laptop and it's going a little bit faster so yeah thank you so"
3516560,3523120," much for suggesting to to make it go a little bit faster"
3523120,3538000," that's actually funny i mean it does look like for so the cost function is actually still kind of high but"
3538000,3542080," it's a very interesting approximation of the original image"
3542080,3547680," so i think we need a comparison right so i think we need a little bit of a comparison"
3547680,3555680," so let's do a second thing in here right so where we uh basically do the same right"
3556480,3565440," but uh with an original pixels right image um so image pixels right so y multiply by image width"
3565440,3570000," plus x and then here we're gonna do print that"
3570000,3578320," so one of the things i probably don't want to do to be fair is printing this stuff"
3581920,3586560," it looks like a donut yes it is it is what it is it is a donut"
3586560,3596480," it would be cool if the gym showed image in real time as a neural network yeah it will be cool but"
3596480,3602640," that means like gym is supposed to be like a very generic thing and not all the neural networks are"
3602640,3609360," about generating images so i how do i feed that stuff in into the gym paradigm okay so here's our donut"
3609360,3615520," and here is our original eight and it's kind of close to the original shape if you know what i mean"
3615520,3623440," if we let it train for a little bit longer maybe it would become that eight you know what i mean"
3623440,3628160," that is kind of cool so another thing i want to do is probably maybe"
3630720,3639040," so uh filter out things that are zero that will be kind of interesting"
3639040,3643360," so if i put pixel in here like that if pixel"
3643360,3649360," and then if pixel"
3649360,3655600," um add more layers now i don't think the problem is with layers"
3655920,3664160," um i think we just need to let it train for a bit longer we need to do a little train for a bit longer"
3664160,3666480," um"
3666480,3673280," okay so it's doing things unimaginable things oh my god"
3675520,3683760," uh okay so let me let me see where is that god damn it"
3683760,3695120," that's very dumb right so essentially what i had to do instead is just like print um you know spaces"
3695120,3701360," one two three four all right so that's what i forgot to put in here um right"
3701360,3705360," uh yeah"
3705360,3711360," that should be a little bit better"
3715920,3720080," it could also show the result in certain intervals to see the progress yeah it would be kind of cool"
3720080,3727280," yeah it would be nice to see like how it actually learns right how it actually learns"
3727280,3738720," so that's what yeah that's what i wanted to see right it's actually spread out like a lot right so"
3738720,3744160," you have like a very low values in here right in here where you have to have zeros okay let's actually"
3744160,3749520," let it run for a little bit longer what if we have like 10 000 of iterations"
3749520,3753840," uh what if we have 10 000 of iterations"
3753840,3763280," so we've got some more subs scene twos thank you so much for twitch prime thank you thank you thank you"
3766240,3773040," all right all right all right all right all right so twice as more iterations man i need to yeah"
3773040,3776960," maybe i just need to copy paste the"
3776960,3782240," the gym into this application"
3782240,3785200," all right"
3785200,3788320," okay"
3793840,3798880," it figured out to put zeros in here so it's doing something uh that's pretty cool"
3798880,3810000," so you know what like i don't like this interface i really got used to gym and i think it's really"
3810000,3815040," super convenient right i really like the fact that i can just like restart and just pause and stuff like"
3815040,3819520," that it's just like yeah it's it's very convenient so you know what i'm gonna do i'm gonna actually"
3819520,3826560," literally copy paste jim into um into our application and at some point i think i'm gonna move towards"
3826560,3833920," uh making jim a library a separate library that uh you can just call to when you want to start that"
3833920,3840720," ui i think that makes more sense uh that makes way more sense in my opinion all right so what we need to"
3840720,3850240," have in here is an m.h well i mean i already have everything so let me start maybe from main right so"
3850240,3857280," here we do this kind of stuff we prepare the data so it's pretty much the same as like a original thing"
3857280,3865440," right so what we have to do in here is just this yeah and it's actually this is the entirety of the gym"
3865440,3871360," basically almost right so it's like at least this is the main loop uh right at least this is the main"
3871360,3877760," so and instead of this thing uh i'm gonna put this thing"
3877760,3887360," so i think what i'm gonna do what i'm gonna do i'm going to just go through the compilation errors okay so"
3887360,3892240," let's do uh compiler assisted refactoring so to speed up the compiler system refactoring i'm going to"
3892240,3895600," disable all the optimizations and i'm going to just like run this into i think"
3895600,3906000," all right so let me see so we need to include the uh raylib right raylib.h"
3907760,3915120," okay so it cannot find that because we're supposed to use this uh this stuff right so"
3915120,3921280," put it in here and all of the leaps in here as well so this is going to be leaps"
3921280,3929200," so it still can't find it oh this is because i have to do the environment right because it's in a"
3929200,3938160," separate environment uh so what do we have in here window width okay so we need to bring the window"
3938160,3947760," width and window height in here um though i think i'm not sure if i want this thing to be like a you"
3947760,3953840," know global constants i'm gonna actually make them like a local variables like this in here i think that"
3953840,3959280," makes a little bit more sense that makes a little bit more sense"
3959280,3977520," okay so uh let me see so cost plot uh cost plot and uh all right so let's actually copy paste it in"
3977520,3983760," here i'm pretty sure we'll need uh all of these things right so we'll need all of these things"
3983840,3991760," so we'll already have arc shifts we need a rendering of the of this thing all right we need"
3991760,3998000," the rendering of this thing so and that should actually work out i'm pretty sure flt max so that"
3998000,4007360," requires float if i remember correctly uh right we need anything else okay so rate uh do i not have a rate"
4007360,4016640," anywhere okay okay so let's put uh rate in here so this is gonna be one anything else okay so that's cool"
4016640,4017760," wait a freaking second"
4017760,4031840," yeah i remember that ray lib ray lib already has stb image linked with it so i'm trying to link with other"
4031840,4037680," yeah so there's a conflict conflict between stb image implementations and this thing it's actually"
4037680,4045360," not a problem if you think about it so you can just say okay this is a header now oh yeah we can just"
4045360,4049360," remove implementation and it will act like a header and it's not going to include implementation so it's"
4049360,4057840," going to use implementations from the array that's actually really cool right yo the idea always to be"
4058640,4065760," stb style hitters is just so genius because it accounts even for situations like that right so"
4065760,4070000," essentially if you have conflicting yeah you just disable implementation it's just like use one of"
4070000,4079520," the implementations that's already there that's so cool what the fuck yo okay so this thing works uh can"
4079520,4087120," we now do image and just specify this thing yeah there we go so and uh yeah as you can see it just like"
4087120,4094800," goes very slow because we probably need to optimize that stuff you know what i think we can oh yeah oh"
4094800,4100320," yeah this is kind of cool i can stop at any moment and just close the window and it will verify it"
4100320,4108320," this is actually convenient this is way better yo you know what's interesting what if we had these small"
4108320,4114720," components in the library okay so you have a gym and gym is a separate thing and then you have some sort of"
4114720,4120960," like for verification so you could organize a loop okay you start the gym you do something in the gym"
4120960,4126640," then you close the window then we take whatever we trained in the gym then put in the verifier and it"
4126640,4131760," opens the next window you check something in the verify you close it and loop goes back and starts the"
4131760,4138400," gym again so you you have this small little like sub applications but they're actually library that you call"
4138400,4145520," from the uh from c uh from c that's a very interesting workflow right so instead of like a lot of small"
4145520,4151520," applications separate applications you have a lot of small functions that sometimes start this windows"
4151520,4154960," and stuff like that that's actually very interesting um"
4154960,4163280," yeah i'll think about that specific workflow i think it's a very interesting workflow"
4163920,4169760," right so because it gives you a lot of flexibility in terms of like what you want to do and flexibility"
4169760,4175040," is actually very important like uh i don't want to make too rigid if you know what i mean right"
4175040,4182720," uh i don't want to make it too rigid right so we're gonna have like a lot of small composable things"
4182720,4187920," uh we'll see we'll see i haven't decided how exactly we're supposed to work with this library we're"
4187920,4196000," figuring things out as we as we go uh okay so what i wanted to do all right so i wanted to enable the"
4196000,4204240," optimizer to you optimizer to you like so uh all right so let's build this entire thing"
4206320,4220080," of course source like breakpoint for an end yeah so did it actually wait a second uh did it"
4220080,4222400," rebuild yeah it did rebuild actually it built too fast"
4222400,4231280," okay so i can restart some things but it's it's a bit slow"
4234720,4236320," it's going down going down"
4236320,4247600," and it stops and then we refine this entire thing you know what can we actually make it smaller i think"
4247600,4255520," one of the reasons why it could be so slow is because it's too big can we take like half of it"
4255520,4263040," all right so what if we had less neurons what if we just had less of them i think it's it's it's faster"
4263040,4265600," actually"
4265600,4267920," and it still goes down"
4267920,4271520," yo i think it goes down even better"
4271520,4277200," all right can i can i make it even smaller what about like four"
4277200,4284960," okay so is that is that a good one"
4287040,4287920," it still goes down"
4287920,4288320," it still goes down what the"
4288320,4304960," okay so uh what if i give it more epochs uh what about like 15 maybe 100 right so because we we can"
4304960,4310000," actually stop at any point maybe i need to make the amount of epochs unbound because i can stop at any"
4310000,4316480," point uh right so because i can just like do stop close it and it will just do it for me one more"
4316480,4321360," time so i think it doesn't matter like how many epochs we have but maybe having like a bound is still"
4321360,4326800," useful for like so it doesn't overflow with memory because it keeps consuming memory for at least for"
4326800,4333040," drawing the uh the plot for at least for plotting the center i think uh it didn't recompile what the"
4333040,4335920," fuck excuse me"
4336160,4338960," uh did it not"
4338960,4344000," so max was i modifying the wrong"
4344000,4348720," i think i was modifying the wrong application"
4348720,4352720," was it modifying the gym yeah i was modifying okay so i need to close the gym"
4352720,4355680," gym all right so goddamn classic"
4355680,4366320," all right so let me let me see so let's just wait a little bit and let's just like let it train for a"
4366320,4375440," little bit longer like let's let it train let it train what the fuck i'm i'm surprised that it's still"
4375440,4382320," improving so it's kind of funny it doesn't dip anymore but it's still declining so that means it's"
4382720,4391760," it's do it's going for another dip it's literally going for another dip what the fuck or is it i don't know"
4391760,4401840," that's actually super cool okay this is a uh like basically 50 000"
4401840,4408400," and still going down so you you it keep it keeps improving and improving"
4409760,4416560," right so it doesn't spike uh quite often this learning protest like to spike when it just like"
4416560,4421280," cannot kind of like fall into the local minimum but it goes down"
4421280,4426320," right maybe we should try to verify the syntax"
4432240,4437520," it's kind of getting closer"
4437520,4444160," yeah it's it kind of like takes a shape will we edit like more uh of these things so"
4444160,4451200," let me see uh so how many how many neurons we had uh so we had"
4451200,4459600," uh seven of them let's actually add maybe another layer uh all right so let's do"
4461280,4468080," seven and four right so let's make it a deep neural network right so if you have more than one hidden"
4468080,4476240," layer it's a deep neural network it's so look at how deep it is it's so fucking deep oh my god"
4476240,4484000," right it's the deepest that's actually a lot of play like space where it can store the image"
4484000,4488320," to be fair but we can give it a try anyway so let's let's see if it's gonna run anything"
4488320,4495600," okay it's going down maybe it's gonna go for a deep it's going for a deep for a deep yo what the"
4503680,4509360," yeah i'm using ray leap yes yes yes yes all right so it's like"
4509360,4516960," it's going for another deep is it going for another you what it keeps learning i really like"
4516960,4522160," the thing about neural networks at least for about training the neural networks is that they sometimes"
4522160,4528080," find this like next energy level and they make a deep and then they find another one another deep and"
4528080,4529760," they're just like it's so interesting"
4529760,4537440," or we're trained well i mean it's supposed to be over fits right so because we're trying to store an"
4537440,4542640," image inside of the neural network so we literally plan to over it's it's actually approaching zero"
4545040,4549760," it's actually very close to zero zero is here right so put a line in here and in terms of like"
4549760,4551840," this thing it's actually very close to zero"
4551840,4559440," is it going to actually act like an image what the and like i mean this is not"
4559440,4561840," that much of a complex neural network to be fair"
4561840,4572800," over 50 i want to wait until it becomes less than 100 i think it's i think it's doable okay so let's"
4572800,4586160," actually verify it i mean it it got a loop what the it actually got a loop"
4586160,4597280," i mean not bad like it's just like yeah it got like it it couldn't come up with the second hole"
4601760,4605840," actually really cool you know what i want to try to do i want to try to save"
4605840,4614320," this thing as an image uh what's a compression ratio that's an interesting question it's just like"
4614320,4626240," uh we can try to see so essentially we have uh yeah we can try to compute the compression ratio"
4628000,4634720," where is the scratch so we have several matrices in there so the weight matrix is two by seven"
4634720,4643040," right so that means we have the first matrix two by seven uh another one seven by four seven by four"
4643040,4650880," and uh four by one right so this is basically the uh the weight matrices that we have for each of the"
4650880,4660880," the layers in here right we have uh basically seven biases four biases and one bias right and this is how"
4660880,4667200," many floats we have right so this is how many floats we have and essentially how many flows do you need to"
4667200,4677040," store this image you need 58 floats each float is four um four bytes so this is how many bytes it takes"
4677040,4685920," to store that image right so the original image is actually 28 by 28 uh right so 28 by 28 so this is"
4685920,4691840," how many bytes you need to store this entire thing uh how do you do compression rate do you just take a ratio of"
4691840,4699520," this thing right i don't quite remember like i'm not a compression person uh right so uh let me see do"
4699520,4706240," i have to do something like this yeah there we go so 30 30 is that what it is or is that the other way"
4706240,4719600," way around that i don't know so um so yeah you wouldn't count the network weights why because"
4719600,4725360," weights is like one of the places where you start the information it weights are the thing that takes"
4725360,4731920," space on hard drives right so it's literally the thing that takes uh space on the hard drive so you count"
4731920,4737920," them by definition right so because we're trying to compress but here's an interesting thing um so"
4737920,4745360," we're using four beats but quite often i heard in machine learning uh there's a thing called float"
4745360,4753200," 16 right so there's a thing called float 16 and uh it's designed specifically for storing neural networks"
4753200,4757760," weights and biases and stuff like that right so uh you basically sacrifice a little bit of a"
4757760,4764960," precision to like to save up on space right and essentially you can compress even more so yeah"
4764960,4771040," so essentially you can have you can store this entire thing in 116 bytes uh which is rather interesting"
4771040,4783760," so how big is the thing in png okay 298 bytes compressed with png and this is how much you can"
4784560,4791840," it's actually yeah it's actually better than png compress all of that is hand waving and kind of"
4791840,4798320," bullshit but it's just like it's kind of interesting isn't it right so this is how much"
4798320,4805520," it takes like with png compression right uh and we managed to improve that but of course there's a huge"
4805520,4811040," loss of information right there's a huge loss of information but not really we didn't really train"
4811040,4816720," the neural network to like its full completion right because uh it doesn't matter like how much you"
4816720,4821360," train it it still takes the same amount of space right so maybe if we train it a little bit more we"
4821360,4826320," could have you know uh yeah had less losses if you know what i mean"
4826320,4834400," it's good but encoding a big image would take forever i guess yeah i don't know maybe we'll see"
4835440,4841200," uh so but we haven't finished yet right so uh what i want you to do i want you to save the uh you know"
4841200,4847840," the generative image right so the the trains the train thing uh so how can we do that uh we can"
4847840,4853200," basically just generate it right and that's actually let's actually also upscale that thing"
4853200,4860480," right uh so subscaled png stores other garbage in the day oh yeah that's true yeah so the png format also"
4860480,4867040," has like a lot of garbage in there though this png maybe doesn't really sell that much garbage because"
4867040,4878960," yeah i don't know anyways so let me see we can do out uh width and let's say it's going to be 512 right"
4878960,4884240," so it's going to be way bigger right so we're going to upscale this into i think"
4885920,4891680," uh so what we're going to do we're going to allocate some data for the out image so out pixels"
4891680,4898320," and we're going to malloc out width though i'm going to do the following thing i'm going to take the"
4898320,4907760," size of out pixels all right so out pixels multiplied by out width uh multiplied by out height there we go"
4907760,4915760," and let's also make sure that this thing is not equal to know i don't know why i put this stuff in here"
4915760,4923680," my language model is actually kind of tired today uh all right so let's iterate through"
4923680,4929040," this entire stuff right so we already kind of iterated it but here now let's iterate uh out"
4929600,4941200," right out height and out width like so uh i suppose what i want to do i want to do a similar thing"
4941200,4948800," but instead of uh image in here i want to do out right so we're forwarding the neural network"
4948800,4955360," and uh we getting the pixel right so we're getting the pixel and we're going to be storing that pixel in"
4955360,4963600," out pixels uh y multiplied by out width plus x and this is where we're going to be storing this entire"
4963600,4972400," thing there we go and uh we now need to save it somewhere so to do that we need uh the stb image"
4972400,4979040," right so i already have it open so maybe i can do this kind of trick boom boom uh that's pretty poggers"
4981360,4992480," that's pretty poggers okay so image right i wonder if uh ray leap also provides stb image uh itself"
4992480,4999040," let's actually try to do that like stb image right implementation like stb image right implementation"
4999040,5004960," let's try to compile uh this entire thing is it going to complain about stb image right as well"
5005840,5013840," um it will okay that's very interesting so yeah so we only downloaded the header i wonder if ray lib comes"
5013840,5019760," with uh with the with the headers okay so it seems to be compiled but i don't really want to do anything"
5019760,5029680," right now uh right so ray lib include i don't really see uh all right so can i do grab um stbi load or"
5029680,5036800," something no it doesn't really come with that so it can it's really interesting like it uh comes with"
5036800,5043440," stb like baked into the library itself but it doesn't really come with headers you have to have your own"
5043440,5053680," headers which is fine i guess right it's kind of does it even mention stb anywhere oh it does okay so that's"
5053680,5060080," that's very interesting so it's that optional dependencies included oh they even acknowledge"
5060080,5068080," so it's not a bug it's a feature uh the fact that you have stb image symbols in there is actually a"
5068080,5075600," feature our textures so it's like uh that's very interesting i mean it's it's kind of convenient as well"
5076880,5084480," it's kind of convenient as well so we get some subs yo money money many thank you so much for a t1"
5084480,5089440," subscription core runner i hope it runs your nickname correctly with the message is writing compiler"
5089440,5099840," high testosterone coding i don't know i've seen people making compilers with low testosterone in their"
5099840,5105600," blood so i don't think it has anything to do with your hormones uh but thank you but thank you for"
5105600,5121920," tier one subscription anyway um all right so what are we doing uh today i forgot what i was doing um"
5121920,5132960," yeah it's to be images right so this is right essentially uh a feature right this is essentially"
5132960,5142160," a feature uh and now let's actually try to save this entire thing right so stbi uh stbi uh write png"
5142160,5148880," right so we're going to write this entire thing and we're going to provide out file path right out file"
5148880,5156400," path so this is out width out height so the amount of components of course is going to be one right so"
5156400,5162880," because it's like a great scale thingy so here we have a pixels and strident bytes is basically out width"
5163600,5171840," multiplied by the size of uh multiplied by the size of uh out pixels right so now uh if this thing"
5171840,5182160," failed we're going to say something like print f actually f print f std error error could um could not save image"
5182160,5192320," as image as okay we can provide out file path and return one and if everything was successful we're"
5192320,5203360," going to say something like generated as from s uh so generated out file path from image maybe i should call"
5203360,5209440," image uh actually in but i mean i already like have this thing this prefix all over the source code so i"
5209440,5215600," don't really want to spend too much time you know changing things in there all right let's go so what"
5215600,5220960," what we have in here uh out file path is not even defined would you look at that okay so let's actually"
5220960,5228240," define it so let's say it's going to be upscaled png all right so it's called like this so let's try to"
5228240,5234000," upscale this and that thing uh oh yeah all right so let's actually let it train for a little bit longer"
5235120,5242640," right so because i i want to like see uh i want to see like an actual eight so the problem with that"
5242640,5249440," eight is that because it didn't have a second hole maybe it just simply doesn't have uh you know enough"
5249440,5255520," neurons to put a second hole in there if you know what i mean right maybe we just we just need to give"
5255520,5264160," it more neurons uh but maybe we just uh should let it like train for a little bit longer i really like how"
5264160,5273760," how it goes i think it's pretty cool uh justifies the second hole i don't really know how to justify"
5273760,5282640," it maybe you mean by justify like um think how new uh like neural network would actually put the hole in"
5282640,5289360," there i don't really know how to put the first hole in the first place to be fine through which mechanisms"
5294160,5300400," uh look at the numbers in the second hole i think i saw numbers being smaller than loop around them just"
5300400,5311040," not by much oh okay so that might be the case okay i'm gonna let it run until 100k right and just see"
5311040,5316960," if it's going to improve you can go for another dip though it's kind of difficult to see at this"
5316960,5322960," resolution maybe i should actually start throwing out some of the values in here uh right"
5322960,5329360," so it's actually going really small now"
5329360,5332880," i really like that like in terms of cost"
5332880,5342320," okay this bias is actually dead i mean this doesn't really mean that the neuron is dead it's just like"
5342320,5346320," the bias is zero that means it doesn't really need to move anything anywhere"
5346320,5356560," okay so that's a pretty good cost i think that's a pretty good cost i don't know what's up with these"
5356560,5362880," sort of like pixels in here maybe it's a really bug okay so let's actually try to close that and"
5362880,5371040," i mean it does look like eight and those things are definitely smaller than the nearby one like 54"
5371040,5377360," and stuff like that and that's really close to to eight okay let's take a look at the upscale image"
5377360,5379760," uh all right so i'm gonna defect be black"
5379760,5387520," that's actually kind of cool"
5387520,5396720," yo that okay so wait a second can we take a look at the original right so can we take a look at the"
5396720,5404240," original i it's so freaking cool wait a second okay so this is the original uh pixelated and"
5404240,5411200," shit right so this is the original uh and um it's yeah and this is basically"
5411200,5417440," it's oh yeah there we go this is what uh this is how our neural network behaves"
5417440,5422320," it looks like a phantom this is so freaking cool"
5422320,5429440," so that means it actually stored uh the image inside"
5431040,5434880," of the neural network in the weights and biases and shit like that this is so cool"
5434880,5438240," uh"
5438240,5445040," and second hole is actually visible yeah it's just like more gradientish and stuff like that and it's"
5445040,5451920," just like yeah that's so cool it would be okay so as the chat said uh somebody in the chat i don't"
5451920,5459280," remember who but it would be kind of cool to see how it like learns that like in real time because we saw"
5459280,5465600," that it starts like a blob and i suppose then over time that blob takes a shape of that image"
5465600,5472000," can we see that in real time i think i think we can we have the technology we have the technology we just"
5472000,5479680," need to like render this thing uh right uh on the on the window right and since we uh literally copy"
5479680,5486480," pasted the gym we can just hard code that right and at least see something in there all right so i think"
5486480,5493360," we got some subs we'll get some subs thank you so much uh gr camargo i hope i pronounced you and you"
5493360,5496720," can correctly thank you so much for tier one subscription thank you thank you thank you"
5496720,5506800," in 2023 we have the tag to see images exactly right but the question is how do you draw goddamn images in"
5506800,5521440," ready all right all right so uh let me go to ray lib and do ray lib uh do you have image okay so pixel data"
5521440,5533040," stored in cpu ram oh and then you have texture data stored in gpu oh okay so it's kind of like sdl in that"
5533040,5540240," regard right so you have the cpu thing and gpu thing and i suppose you compile one thing into"
5540240,5545920," another one right so can you draw an image right away you can't draw an image can you draw a texture"
5545920,5553360," texture you can draw a texture look at that so that means you need to be able to construct a texture"
5553360,5558480," right right right so let me actually find a thing that starts with the texture actually"
5558480,5566240," uh texture i don't see so the start of this thing"
5566240,5577120," huh then doesn't find failed wrap okay texture 2d let's find some functions that oh yeah yeah so because it"
5577120,5586000," starts with rl api texture okay so you can load the texture from a file this is not what we need"
5586000,5591200," right this is not what we need because we're going to be generating texture on the fly right we're"
5591200,5595760," generating texture on the fly if we don't start in the file uh you can load the texture from an image"
5595760,5601520," okay so that's already better uh that's already better uh can it just can we just supply the pixels"
5602400,5606480," you can update the picture a picture through the pixels but it's not really what i want"
5606480,5617440," um okay so a render texture there's also rendered low texture for rendering frame buffer so frame buffer is"
5617440,5625440," usually like a back uh thinking image draw there is no such thing as image right okay so and can you"
5625440,5632240," construct an image create image maybe there's something like load image okay so and you can"
5632240,5641520," load image from file and this is basically stb oh okay so instead of using stb we can use raylib"
5641520,5647600," actually because it wraps us to be basically like that uh you can load image from a memory maybe that's"
5647600,5656560," what we need not really oh it okay so you have to provide the file type because it you load like"
5656560,5662080," literally format so you can't really do it like that okay can i just give you the like the"
5662080,5668560," pixels and generate an image out of that okay i can generate an image like with a solid color"
5668560,5674640," okay maybe that's how you create it so i can just generate a pic image of that specific size"
5674640,5684960," uh can i then like set a pixel with this thing let's actually go ahead and try to generate an image like"
5684960,5693120," let's do it like this so right before the start of the loop right before the start of the loop we're"
5693120,5700400," gonna do um let me think i think i'm gonna be using the original width and height i don't really want"
5700400,5708320," to upscale it because it's like it's a lot of pixels to render if you think about it 12 by 12 it's just like"
5708880,5713360," uh yeah this is how many pixels we'll have to render on each frame and i don't think it's gonna be too"
5713360,5720080," fast right i don't think it's gonna be too fast so i think i'm gonna keep it like very small uh when"
5720080,5724640," we're rendering in real time if you know whatever so in terms of color i'm gonna put black in here"
5724640,5735280," right so so preview uh image right so this is a preview image so that's what we get so how can i"
5735280,5744160," is there something like put uh draw oh you can okay so you can draw a pixel you can draw a pixel so that means"
5745280,5758240," that on each uh on each of these things uh so here we are rendering this thing so we actually need to um"
5758240,5767280," allocate a little bit of a space a little bit of a space on the screen right so right now uh we divide"
5767280,5772560," the screen in two by two and on the left we have the plot and on the right we have the neural network"
5772560,5779200," so what if we actually uh divide it by three right so here i actually constructed it so it's super easy"
5779200,5785280," to just add more widgets right so the the width of the single image is a third of the screen so we'll"
5785280,5792720," put one in here then we shift uh our x by the size of the widgets and this is where we draw the third one"
5792720,5797840," uh the second one and then since i made the width smaller we're gonna have a little bit of a space for the"
5797840,5804640," third one so uh that should actually work so let's let's give it a try there we go yeah so this is"
5804640,5809360," where we're gonna have a third one so it's super easy to just like add more things in here so i did"
5809360,5815440," that intentionally just in the future if we want to add more things uh maybe we can also realign some"
5815440,5821920," stuff uh maybe it's gonna be vertical i don't know but so i really want this thing to be like a more"
5821920,5829040," general purpose framework where depending on your model you can just like make arbitrary configurations"
5829040,5833840," of different widgets right so because some of the models they require two-dimensional image some of"
5833840,5840000," them may require uh three-dimensional objects or something like that it's just like depends right and"
5840000,5846160," you just like in the program uh you uh basically define what kind of widgets you're gonna have for your"
5846160,5850640," model and where are they gonna be located and stuff like that so i think that makes sense maybe for your"
5850640,5856640," model you don't need to display the neural network itself right but it's to be fair the neural network"
5856640,5863120," itself like the the showing the weights and biases is kind of useful it just like looks cool right"
5863120,5869120," especially when it just finds the energy level and just like drops down like at this point and they"
5869120,5874560," start to like highlight and stuff like like this as you can see they start to like light up it's kind of"
5874560,5878880," cool but that's about it actually right so it doesn't really provide any useful information"
5878880,5883680," to be fair right by itself doesn't really provide any useful information"
5883680,5892320," how the image is upscaled uh the image is upscaled uh yeah this is actually cool this is"
5892320,5900000," by essentially training the neural network on the normalized coordinates so the coordinates that we"
5900000,5904160," feed into the neural network are not the real coordinates they are coordinates from zero to one"
5905200,5912880," so that way if we need to upscale it we just like uh multiply it by a bigger value so since they're"
5912880,5919040," normalized we can remap all all these coordinates to any arbitrary size and effectively what the neural"
5919040,5927120," network will do it will just interpolate between these pixels right that makes sense okay nice so"
5929840,5936000," since uh neural networks are like function interpolation interpolator uh what i would expect it will do"
5936000,5942080," between the pixels is essentially just like interpolate between them and like make them smooth and this is"
5942080,5947440," so this is exactly what we saw when we rendered that eight uh right i think it overrode it already right"
5947440,5952720," yeah there we go so this is how it looks like mid training look at that okay so i need to make the"
5953440,5964080," um the background black because it ruins yeah so this is how it looks like midway it's kind of interesting"
5964080,5965120," it's like this blob"
5965120,5966480," it's like this blob oh"
5966480,5969120," it's so cool"
5969120,5974800," and it kind of like looks like generally like the shape of that eight"
5974800,5983360," so anyway let's continue uh so what we want to do right on each iteration so we"
5983360,5991840," uh left a little bit of a space for this thing now we need to uh render this entire thing okay so here"
5991840,5997200," we're just like uh rendering from the neural network right so we're rendering from it"
5997200,6004240," we get the pixel and what i need to do i need to just put that pixel in there so where is the raylib"
6004240,6018080," image drop pixel okay okay so image dst preview image so the position is x and y and the color oh yeah the"
6018080,6029200," color is going to be but what we can do we can use collidero right uh and essentially we can take that pixel"
6029200,6036640," and repeat it three times and alpha we can set alpha 255 right so we we have a usage for collider"
6038400,6045760," i really like this macro"
6045760,6053920," uh anyways so uh all right so preview image i mean we're supposed to put it like that"
6053920,6063280," i think i should not run this stuff on here can i just comment it out yo yeah i just commented out like"
6063280,6070080," half of the comment that's actually very useful all right so raylib uh but now i need to basically"
6070080,6076480," construct um texture from image all right"
6079200,6081760," is there any update texture"
6081760,6094480," with new this is a really weird api right you can okay we can load the texture from image right we can"
6094480,6098640," load texture from image so let's actually try to do it like that uh"
6101920,6111040," so something weird is going uh oh this is okay so i was wondering what the hell is going on i just"
6111040,6120720," like had this comment that i couldn't see uh this is a preview texture this is a preview texture and uh"
6120720,6127120," we're making it from preview image but the question is how now i update the texture right so one of the"
6127120,6133680," the things i have to do is draw texture okay so that makes sense can i scale this entire thing because"
6133680,6140080," it's going to be 20 but when you eat it's kind of small uh does it have a arbitrary stop or scale okay"
6140080,6144560," so there is this thing uh we can scale it maybe"
6147200,6153760," so this is going to be a preview texture oh this one is interesting so"
6153760,6160640," this one is interesting how are we going to define the position position is"
6160640,6168080," at a is that rx ry right so this is this thing can i do collateral"
6168080,6175680," one more time and just rx ry so this is where it starts in terms of rotation i think it's going to"
6175680,6183520," be zero in terms of scale um i don't know we can multiply it by 10 uh and tint is going to be white"
6183520,6187200," right so literal"
6187200,6195520," okay so that seems to be compelling so but i don't think it's going to work because we literally need"
6195520,6204960," to update yeah okay so on top of that it's kind of small let me actually do 20 first of all and also"
6204960,6209200," after we render this thing i'm going to update rx is it going to work now"
6209200,6221600," it doesn't update it uh all right so let me see update texture"
6223760,6235120," texture texture what was there i forgot load texture yeah so it's update and pixels and where do you get"
6235120,6245040," the pixels from it's just like so weird okay array lib update texture example"
6249040,6251840," clitoral is too much to type clitoral is too much to type make a clit macro"
6251840,6260000," we should suggest that to race and five yes at some point"
6260000,6270880," okay texture processing okay update texture"
6274160,6284000," okay okay okay you load image colors what is load image colors uh load image data from"
6284000,6286960," image as color"
6286960,6293520," ah but why do i have to do that can i"
6294080,6304240," uh and it returns the pointer to the core which actually raises the question why update texture"
6304240,6310800," then doesn't accept the pointer to colors and it accepts void star"
6313680,6322000," that's a very weird question because or maybe because it does not necessarily has to be yes somebody"
6322000,6328800," said rgba array right it could be it not necessarily has to be a color uh right it's like anything that is"
6328800,6336080," four bytes right or maybe the format of the texture so that means i don't really need an image i can just"
6336080,6340960," pre-allocate the array of colors and just fill up the array of colors and then update the texture"
6340960,6349280," but then the question is how can i construct uh a texture from the size i can construct a render"
6349280,6356800," texture of a certain size but the only way i can construct just the texture is that is weird"
6361840,6365520," so you can gain texture again texture meat maps"
6365520,6370480," and then you unload image colors"
6370480,6379120," this this is the weirdest okay how can i just create an empty load texture"
6379120,6382480," an empty load texture"
6382480,6389520," but maybe i can just uh can i just like provide data"
6391520,6395040," i think i should be able like loading and unloading is kind of dumb"
6395040,6402160," all right i think i should be able to just uh just use the data of that image right so update texture"
6402160,6408480," so i don't really know why in that specific example they're like loading and loading probably"
6408480,6415280," copying some like why uh preview image that's a really weird api"
6416320,6424880," it's complicated probably because of the underlying opengl or some other gpu apis that make it complicated"
6424880,6433440," right so that's probably okay so this is more of a all right that's interesting i think it's too big"
6433440,6439680," so it's not black anymore that's what's interesting right it's not black anymore uh it's grayish so that"
6439680,6445840," means it's kind of working so uh let's make it like maybe 15 because i wanted to be able to fit on the"
6445840,6449840," screen so it doesn't really automatically resize unfortunately i think it should"
6449840,6452720," um i think it kind of should"
6452720,6457520," okay so it's actually perfect okay so let's try to train"
6459760,6463360," okay okay so it's it's moving okay can you see anything"
6463360,6476000," yo this is so cool what the it's like"
6476000,6483920," it's emerging it's literally emerging out of nowhere what the"
6485840,6489920," this is so cool i'm waiting for another dip for another dip it's going to probably"
6489920,6497200," look at that what this it's trying to figure out the hole it's trying to figure yo"
6497200,6507280," look at that it's moving the what did you see that like it figured out"
6507280,6513200," a hole and it wiggles the hole around trying to fit it so it minimizes the cost function"
6514240,6517440," this is so cool so it figured out that it can put"
6517440,6524640," like a positive blobs and then it figured out that it can put negative blobs and negative blobs"
6524640,6531360," is like a hole and it just tries to like position that hole this is so cool"
6531360,6538320," look it's kind of cool to see how they're actually learning like"
6540800,6544880," okay we can always restart this entire thing and just like try to see one more time"
6544880,6547680," it's kind of slow especially when i'm streaming and stuff"
6547680,6553120," but like the way it appears for the first time"
6553120,6560080," and you can see like when it like dips down right it's just something something starts to change"
6560080,6565920," right"
6565920,6584720," this looks pretty much exactly like when you use mid journey to generate picture out of text really i"
6584720,6590160," never actually used my journey i just realized that i never used any of these text to image models"
6590160,6596560," uh maybe that's like very much inherent to how they how they work"
6596560,6603200," man this is so awesome i wish it was a little bit faster but i mean"
6604240,6614080," yeah that's so cool what's the input i think we need to actually render the the input the input is eight"
6614080,6621200," right so we're trying to make it act like eight um i suppose it would be nice if we"
6621200,6631520," yeah if we just like uh tried to render it as well so here we have a scale right so this is the scale"
6632480,6642240," which is 15 obviously uh so draw a texture uh so we update the texture with the preview data uh and"
6642240,6645280," unfortunately"
6645280,6648000," yeah"
6648000,6658640," the original data is one byte format so that means we have to probably"
6660720,6665440," regenerate this thing one more time okay so this is going to be interesting so we're going to take"
6665440,6672480," the original thing uh image pixels right so this is going to be y multiplied by image width of course"
6672480,6678720," plus x uh and this is going to be that and we're going to simply repeat that thing second time"
6678720,6685440," but we're going to actually place it a little bit down right so essentially we're going to say plus"
6686880,6692720," and what's going to be the height the height is going to be image height but multiplied by the scale"
6692720,6698080," right so we're just like moving it down so we can see them both nearby"
6698080,6704160," though it would be probably nicer to swap them around"
6704160,6709520," right so i think it would be nicer to swap them around"
6711200,6721280," yeah so we can see both of them um can we see in this mist we can't this is bullshit"
6723120,6723920," um"
6723920,6732720," so all right so here we are"
6732720,6742480," ah yeah i see so you effectively you need to have two separate texture then"
6742480,6748960," um you need to have two separate texture but i mean i don't i don't want to spend too much time on"
6748960,6758640," that unfortunately all right so not really in the mood of going there right now so we can try to do"
6758640,6767360," other images maybe uh right so do we have oh yeah so it's still open so can i take a look at like six"
6769680,6777280," uh let's grab uh let's grab this one that's a very interesting one um save image as"
6777280,6782160," so it's learning as you can see"
6782160,6795360," uh all right uh and where do we have these things so this is six okay so that means we can do 32"
6797840,6804320," uh-huh so let's see how it is going to learn the six if it's going to learn it at all"
6804320,6810560," at least the cost function is going down so the thing about neural networks sometimes is that it"
6810560,6816480," feels like they're not learning anything until they're starting to dip down okay so this is all"
6816480,6823120," right so it's kind of like roughly figured out the shape of the syntax tab uh so let's see if it will"
6823120,6830320," figure out something more right so it's trying to do this six all right so we're going for another tip"
6830320,6835360," so it's it yeah it's figuring out the holes right so it figured out that you need to put the hole in"
6835360,6845040," that's not bad all right all right all right all right so it found something what the hell is"
6845040,6847120," is it trying to draw among it is okay"
6847120,6863520," well okay so it's kind of close it's just like needs to figure out to put the thing in here"
6865840,6868080," for it to work so let me"
6868080,6878160," all right so this is basically what we have in here right and it's trying to learn yeah it couldn't"
6878160,6884720," figure out to put like a breach in here right but it's really close in terms of like like trying to"
6884720,6885680," replicate this thing"
6890240,6894240," it's it's still going down the cost is still going down so i think it may figure out eventually that"
6894240,6897200," you have to put something in here um"
6897200,6907040," yeah it's it's actually getting closer to the limit of the epoch so i think it may not"
6907040,6913040," figure that out but it may try to figure it out from a difference uh from a different point"
6914880,6918240," um"
6918240,6927600," i really want to try this thing off screen when i'm not streaming because it's supposed to be faster"
6927600,6931360," actually um it's supposed to be faster"
6931360,6941120," okay so it found a different way of drawing this entire thing now it's filling up this thing but then"
6941120,6944640," it will need to figure out that you need to put like a hole in here"
6944640,6952880," so this is the image that is tried to replicate it's really struggling with that part it's it's really"
6952880,6961200," complicated part because it's like a hook yeah it's just like but it's trying it's trying"
6965200,6972080," uh i think i already do all three don't i yeah i already do all three yo it it kind of okay so it's"
6972080,6973600," starting to yeah"
6973600,6983200," it's stuck the cost function is actually kind of jumping around it's pulsating yeah it's it's having"
6983200,6988080," a hard time to replicate that yeah but this is like the claw this is the closest it could do"
6989280,6995680," and what i suppose what it's doing is just like replicating it with like curves right it's basically"
6995680,7003200," approximated it with curves smooth curves right and um they're smooth because we're using sigmoid we're"
7003200,7009280," not using relu maybe we should try relu but that's probably this uh the topic for another time"
7011040,7016240," uh right right right right so i need to try something"
7016240,7026560," it's actually really cool what if we okay so let's actually go back to the original eight"
7026560,7035360," right so what was the 57 the original eight what if we try to make the neural network even smaller so"
7035360,7044480," here we have seven uh and four uh can we just like cut this amount of neurons in half because the less"
7044480,7050080," neurons we have like the more information will basically compress effectively right uh so can we"
7050080,7059440," have two neurons in here right is that a thing we can do um all right so this is a much simpler neural"
7059440,7063920," network we will be able to to approximate the the eight"
7063920,7077920," well it's it's got the general shape right but we will be uh does it have enough like power to put a"
7077920,7086800," hole in there it may not actually figure out but it's it's getting there right overall we've got the shape"
7087360,7092560," okay so it has a capability of putting a hole right so i thought maybe with the less amount"
7092560,7096560," of neurons it won't be able to put holes anywhere but it's it figured out that you can put a hole in"
7096560,7104800," here so that's that's very interesting all right and what's cool is that this is the entirety of the"
7104800,7111680," neural network right this is the entirety like we can see it like like how much information it actually"
7111680,7118480," compress in here to get this image right so this image is compressed into this thing"
7118480,7123200," into this little device this is actually so cool if you think about it"
7123200,7132800," it kind of got it it's kind of good uh we can actually stop and then just close it and upscale it"
7132800,7138800," and if we take a look at the upscale version of this thing uh right so this is upscale this is how it looks"
7138800,7144320," like right so it's very like smoothed out everything so we can actually generate like"
7144320,7151520," any resolution right because the coordinates are normalized and stuff uh all right so what if i make"
7151520,7157920," it's uh four so it's a very small neural network what would be able to approximate like anything at all"
7157920,7161120," right so how how small can you get it"
7161120,7165200," uh okay so it's doing things"
7165200,7170320," you can draw at least line right that's already something"
7170320,7176880," okay it's actually learns well probably it learns faster because it's just like smaller right so it's"
7176880,7184800," computationally easy for for it to like figure that out uh but it's less capable right so it has like"
7184800,7188160," less neurons to work with and to modify things"
7188160,7199120," but the cost is still going down it's kind of crazy how it converts storage usage into computing power"
7200000,7212720," yeah i guess"
7212720,7220960," it was interesting if you take a copyrighted image and you train a neural network on that"
7220960,7227840," cooperated image and then you reproduce that image with the neural network does the copyright still applies"
7228960,7238240," or the neural network just created the image and got inspired by training data just like humans are"
7238240,7244960," they're like humans they they got inspired and reproduce that image you know what i mean"
7244960,7249520," in germany yes it's still well i mean i i'm pretty sure it should be copyright right"
7249520,7257600," so it's just basically storing the same image but in a different form right"
7258960,7265280," but no look there the neurons they're just like a human neuron so it didn't try it got inspired by the"
7265280,7272480," image and reproduce the image just like a human did"
7272480,7282240," finally we made the artist obsolete so uh let's actually make it maybe a little bit bigger can we"
7282240,7288800," just make it just make it so the bigger i make it the bigger i make it the more computation difficult"
7288800,7291360," becomes neurons have feelings too exactly"
7291360,7298560," yeah it's super slow but one of the things we can try to do we can try to"
7298560,7303680," uh do stochastic gradient descent right stochastic gradient descent"
7305200,7311040," uh but i didn't think like we don't really have that much data so the problem here is not really"
7311040,7313200," the data yeah"
7313200,7317520," it's doing something"
7317520,7323200," just slow but it has a lot of information to store this thing in here"
7324480,7334560," so people are asking about the source code for this entire thing uh it's available at uh an end of age"
7334560,7341440," right so this is what we're developing here yeah so it's yeah we already have that in the uh in the"
7341440,7348800," chat we already have that in the chat all right so that's pretty cool uh so"
7349920,7357040," this result so far is the best it will be kind of interesting to explore um you know"
7357040,7363760," several colors right so essentially if you give it more outputs right if you give it more outputs"
7363760,7370240," it will be able to uh also reproduce the court image as well right so it will be able to do that as well"
7370240,7378240," um it will be kind of interesting sometimes i feel like this is basically like converting uh"
7378880,7384320," raster image into a vector one yeah it's kind of like yeah it's turning raster image into a vector"
7384320,7389280," one because it's like a bunch of like curves we're approximating the image with a bunch of curves"
7389280,7391120," um"
7391120,7401840," it's crazy how we started from explaining math basics to this yeah because that's how it starts right so"
7403440,7407280," journey starts with the small step right with the first step"
7407280,7414000," trying to sound pretentious i don't know if i managed to do it but uh all right i'm definitely"
7414000,7419760," going to try like around this thing off screen a little bit more all right because the off screen"
7419760,7425040," is gonna uh run a bit faster so maybe i'm gonna actually commit whatever we have already right so we're"
7425040,7432160," gonna commit whatever we have already um so i'm gonna commit this so in terms of gym i don't want to"
7432160,7439600," modify the gym uh i'm gonna commit image to matt maybe i need to rename it to something else but i'm not"
7439600,7448560," 100 sure uh right so i'm probably gonna reorganize uh everything in here so uh but i'm gonna commit"
7448560,7454400," whatever i have uh as of right now so but after this term i'm gonna reorganize obviously all of these things"
7455520,7469600," uh right implement image um to neural network compress compressor um let's put this way implement image"
7469600,7475280," approximator right i think it's a better it's a better name for this entire thing so if you want"
7475280,7486800," to play with this kind of thing right now you'll be able to do that uh okay so uh forgotten built.sh changes"
7486800,7499040," all right so uh we've got some subs we've got some subs that i want to acknowledge super quick thank you so"
7499040,7505040," much meet yourself seven seven seven seven with the message i need to understand 69 and say nice uh was"
7505040,7511600," it only i thought maybe it's because you have 16 a month but yeah uh thank you thank you so much for"
7511600,7518800," uh tier one subscription and twisty thank you so much for twitch prime all right isn't that a poggers"
7518800,7525200," isn't that poggers my friends i think it's pretty freaking powers i'm registering for two hours and i"
7525200,7531440," didn't make any freaking break that's insane so i was so preoccupied with this that i forgot"
7531440,7539760," to make a cup of tea uh right but this is so cool there's there is also huge potential for this thing"
7539760,7548640," right imagine actually like compressing uh this thing into neural network and writing web uh"
7548800,7557440," like web assembly program right that accepts images in this format and renders them in a web page"
7557440,7564400," right so imagine using that to compress images on a web page right so you have a javascript that"
7564400,7570880," downloads a neural network instead of an image and gives it to wasm program that uncompresses the image"
7570880,7574720," by actually simulating the neural network uh right"
7574720,7578240," yeah"
7578240,7588480," so does anyone have any questions how do you deal with burnouts i just don't i'm burned out all the time"
7588480,7595920," even right now uh what are you building i'm just experimenting with neural networks i learn i'm just"
7595920,7601120," trying to learn how neural network works just to like you know have an idea of what they are"
7601120,7608000," and i kind of like that because they feel like a different paradigm of programming right the paradigm"
7608000,7614720," of programming where you're not writing the code directly of the thing you're sort of like solving but"
7614720,7621040," you're describing how a model has to behave and the learning process sort of like finds the model that"
7621040,7629760," 50 description and in our case the description is an image and we just told the learning process now make"
7629760,7636320," a model that acts like that image and it's actually a very good approximate look at that it's basically eight"
7636320,7644480," it figured it out look at that it figures it out literally what the i think this is the best"
7644480,7651200," result we've got so far uh only how many problems do you need to so ai trained to recognize digits out"
7651200,7657120," of normal image can also recognize digit in reconstructed images that's a good question i don't really know"
7657120,7668240," yeah after 100 000 of iterations it finally figured it out so and we can now close this entire thing"
7669280,7676640," and look at this verification so yeah and let's take a look at the upscaled version of this entire thing"
7676640,7683360," so we upscale the image that's a very good high quality upscale of the original image definitely better"
7683360,7688960," than bilinear interpolation who needs bilinear interpolation i'm going to show you how bilinear"
7688960,7693680," interpolation looks it looks horrendous right so just a second"
7696320,7702480," right so i think it uses bilinear interpolation here so this is how bilinear interpolation looks"
7702480,7710480," like it still looks pixelated but look at this beautiful neural network interpolation it's much"
7710480,7715600," smoother right so you see here is the bilinear interpolation and this is what our neural network"
7715600,7724000," managed to come up with it's way better way smoother high quality ai is the future ai is the future"
7727120,7732160," it looks like we turned on rtx in minecraft exactly well it's kind of yeah it's kind of cool"
7732160,7734320," right it's kind of smooth"
7734320,7744160," uh i really like how it like if you disable the interpolation in here right so this is the pixels"
7744160,7749680," and there is sort of like this sort of like a thing that comes out and it picked up on that"
7749680,7754480," look how it picked up on that thing and it also picked up on this thing it's just like so"
7754480,7764320," funny how it picked up on them that's so cool"
7764320,7773440," all right so that was a fun stream i guess that's it for today thanks everyone who is watching me right"
7773440,7780640," now i really appreciate that have a good one and i see you on the next uh recreational programming session"
7780640,7788480," with azuis all right so see you next time i love you"

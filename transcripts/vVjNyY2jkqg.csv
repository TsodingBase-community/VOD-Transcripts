start,end,text
0,29980," *music*"
30000,59980," *music*"
60000,62000," *music*"
62000,67000," *music*"
67000,69000," *music*"
69000,71000," *music*"
71000,73000," *music*"
73000,75000," *music*"
75000,77000," *music*"
77000,79000," *music*"
79000,81000," *music*"
81000,83000," *music*"
83000,85000," *music*"
85000,87000," *music*"
87000,89000," *music*"
89000,91000," *music*"
91000,93000," *music*"
93000,95000," *music*"
95000,95000," *music*"
95000,97000," *music*"
97000,97000," *music*"
97000,97000," *music*"
97000,99000," *music*"
99000,101000," *music*"
101000,101000," *music*"
101000,103000," *music*"
103000,103000," *music*"
103000,103000," *music*"
103000,107000," *music*"
107000,109000," *music*"
109000,109000," *music*"
109000,111000," *music*"
111000,113000," *music*"
113000,113000," *music*"
113000,113000," *music*"
113000,115000," *music*"
115000,117000," *music*"
117000,119000," *music*"
119000,119000," *music*"
119000,119000," *music*"
119000,119000," *music*"
119000,121000," *music*"
121000,123000," *music*"
123000,152980," Thank you."
153000,182980," Thank you."
183000,212980," Thank you."
213000,242980," Thank you."
243000,272980," Thank you."
273000,302980," Thank you."
303000,332980," Thank you."
333000,362980," Thank you."
363000,392980," Thank you."
393000,422980," Thank you."
423000,452980," Thank you."
453000,482980," Thank you."
483000,512980," Thank you."
513000,542980," Thank you."
543000,572980," Thank you."
573000,602980," Thank you."
603000,632980," Thank you."
632980,662960," Thank you."
662960,692940," Thank you."
692960,722940," Thank you."
722960,752940," Thank you."
752940,782920," So, yeah."
782940,787040," The language C++ and the language C because C is going to be a separate language that we"
787040,789320," can use for problems as well, right?"
789320,794700," So, I'm going to program in the modern C++ today and then later one of the problems is going"
794700,796940," to be solved in C, which looks like C."
796940,799720," Modern C++, yeah."
799960,813220," I'm not going to be a lot of things, but I'm going to be a little bit, but I'm going to be a little bit, but I'm going to be a little bit, but I'm going to be a little bit, but I'm going to be a little bit, but I'm going to be a little bit, but I'm going to be a little bit, but I'm going to be a little bit, but I'm going to be a little bit."
813220,826480," I'm going to be a little bit, but I'm going to be a little bit, but I'm going to be a little bit, but I'm going to be a little bit, but I'm going to be a little bit, but I'm going to be a little bit."
826480,836020," So, yeah, let's say go, maybe I need to go to my team, because modern C++ is beautiful."
836020,837440," Sure, sure."
837440,847320," And by the way, I publish all of my, I didn't want to click on you, but yeah, I publish all my solutions on GitHub so we can find my repo with solutions there."
847320,850660," I'm lagging a little bit behind on problems."
851180,856780," I do that intentionally, so people have time to solve the problems, so I don't spoil anything."
856780,866640," And not because I don't know how to solve these problems, no, this is, I do that intentionally just to give you guys like some time to solve them."
866640,868300," Yeah, that's exactly why I do that."
868300,873400," Anyway, so let me fetch all this stuff."
878280,884180," And, okay, so I didn't do anything off screen, so that's good."
884180,887020," So, we're going to try to solve the fifth problem."
887020,890760," So, let me go and create the fifth folder."
890760,895160," So, here is the fifth folder, and let's open the description and read it."
895160,897680," Binary boarding, how about that?"
897680,901340," Free tools is good, because it's free, yeah, exactly."
907340,913160," You're bored, you board your plane only to discover a new problem."
913160,914060," Get fucking damn it."
914060,917080," You dropped your boarding pass."
917080,926800," You aren't sure which seat is yours, and all of the flight attendants are busy with the flood of people that suddenly made it through passport control."
926800,934300," You write a quick program to use your phone's camera to scan all of the nearby boarding passes, your puzzle input."
934300,938060," Perhaps you can find your seat through a process of elimination."
938060,945180," Instead of zone or groups, this airplane uses binary space partitioning to seat people."
945180,947160," A seat might be specified like..."
947160,956760," Where F means front, B means back, L means left, and R means right."
956760,968900," The first seven characters will either be F or B."
968900,974900," These specify exactly one of the on-hand entity rows on the plane number."
974900,975840," I don't understand."
975840,976880," Like, what the fuck?"
976880,978360," Brain."
982360,982720," This is..."
982720,984860," Okay, maybe I need to actually read about zones and groups."
984860,987460," I did not really, like, fly it on..."
987460,989220," Wait the fuck, what is that?"
989220,991340," Is that a CGP Grape?"
991340,992880," Okay, it's a CGP Grape video."
992880,994300," I know this one, I think."
994300,997000," I think I watched this one at some point."
997000,999480," Yeah."
1003480,1010480," Okay, so instead of zones and groups, this airplane uses binary partitioning to seat people."
1010480,1014360," A seat might be specified like where a front, okay."
1015320,1018260," The first seven characters will either be F or B."
1018260,1026480," This specify exactly one of the 128 rows on the plane, numbered through 0 on 127."
1026480,1031640," Each letter tells you which half of a region the given seat is in."
1031640,1033860," I don't understand what is written here."
1033860,1035180," I need some sort of visualization."
1035180,1038600," Like, seriously, my brain is incapable of processing what they're trying to tell me."
1038600,1039580," That's how bad it is."
1039580,1041720," Each letter to..."
1041720,1044620," Okay, region seat starts with a whole list of rows."
1044740,1048900," The first letter indicates whether the seat is in the front, in the back."
1048900,1052860," The next letter indicates which half of that region is seat in, seat back, for example."
1052860,1057660," Consider just the first seven characters."
1057660,1058240," Okay."
1058240,1064580," Start by considering the whole range row 0, 7, F means to take the lower half, keep zeros."
1064580,1066540," I don't understand what they're talking about."
1066540,1068820," I don't understand the description."
1068820,1074120," Because I think visually, just describing things doesn't work for me."
1074160,1074920," I need pictures."
1074920,1075000," I don't understand."
1075000,1075000," I don't understand."
1075000,1075220," I don't understand the problem."
1075220,1075400," I don't understand."
1075400,1077400," I don't understand the problem."
1077400,1080100," So, the last three characters will be either L, R."
1080100,1084300," I don't understand."
1084300,1087240," I don't understand the problem."
1087240,1091100," For example, consider the first seven characters."
1091100,1092300," Okay."
1092300,1093480," So, seven characters."
1093480,1093960," All right."
1093960,1095900," That is really bad."
1095900,1104480," So, one, two, three, four, five."
1104480,1107300," One, two, three, four, five, six, seven."
1108300,1108660," Uh-huh."
1108660,1111200," So, so this is, they are."
1111200,1117160," Step, I can see the whole range rows 0, 227."
1117160,1120220," Uh-huh."
1120220,1122820," Okay."
1122820,1125540," One hundred, two, twenty-seven."
1125640,1134560," F means to take the lower half, keeping row 0 through 63 back."
1141280,1144120," The last three characters will be..."
1144120,1163840," I'm gonna make a cup of tea."
1163840,1164220," Seriously."
1164220,1167320," Like, I don't understand what the fuck are you talking about."
1167320,1169860," It's just, you know, very confusing description."
1192880,1197260," Mm-mm-mm-mm-mm-mm-mm."
1197260,1203560," Oh, okay."
1203560,1205820," Uh, so."
1205820,1208180," Let's start."
1208180,1209860," This is from where it starts to be."
1209860,1211680," Instead of zones and groups,"
1211680,1215300," this airplane uses binary space partitioning to seat people."
1215300,1218640," A seat might be specified, like..."
1218640,1220360," Is that a single seat?"
1220360,1221200," Is..."
1221200,1224660," Will be either F or B."
1224660,1229720," They'll specify exactly one of the 128 rows of the plane."
1229720,1231660," Um..."
1231660,1233720," They specify..."
1233720,1240460," Seven characters specify one of 128 rows."
1241760,1243480," So, that means they have..."
1243480,1243480," So, that means they have..."
1243480,1248480," numbered..."
1248480,1254460," Each letter tells you which half of the region the given seat is in."
1254460,1260340," Start with the whole list of the rows."
1260340,1262640," You start with the whole list of the rows."
1262640,1263460," 127."
1263460,1274580," The first letter indicates whether the seat is in the front."
1274580,1278020," Jesus fucking Christ!"
1278020,1279600," Oh, this is so bad!"
1279600,1283260," This is the worst problem I've ever seen in my entire life."
1283260,1285280," Oh my fucking goodness!"
1285280,1287400," Whoever came up with it, just fucking fire them."
1287480,1288440," This is bad!"
1288440,1290040," Who fucking writes like that?"
1290040,1291500," Like..."
1291500,1291880," Ugh!"
1291880,1294700," Um..."
1294700,1296260," So..."
1296260,1299980," Like, it's so difficult to understand what you want."
1299980,1301680," Like, it's not like the problem is difficult."
1301680,1303820," It's difficult to understand what the fuck do you want from me."
1303820,1305120," Ugh!"
1307320,1310640," This is the kind of way I hate..."
1310640,1313920," Like, there are several ways to make the problem more difficult."
1313920,1319080," And making the description more convoluted is the worst way to make the problem difficult."
1319080,1321400," You're not really making the problem difficult."
1321400,1322100," Right."
1322100,1325180," So, you're just wasting people's time, obviously."
1325180,1326660," Um..."
1326660,1326940," Okay."
1326940,1327740," So..."
1327740,1330900," Uh..."
1330900,1333460," The first seven characters will be either F and B."
1333460,1333840," Okay."
1333840,1334740," Which tells the region."
1334740,1336320," Start in the whole list."
1336480,1336800," Uh..."
1336800,1337340," Or the back."
1337340,1339860," Next idea indicates which half of that region."
1339860,1341380," Okay, okay, okay, okay, okay, okay."
1341380,1343880," Uh..."
1343880,1344600," So..."
1344600,1345400," All right, all right."
1345400,1346660," Um..."
1346660,1346900," Okay."
1346900,1350140," So, this is literally like a binary search that they were talking about."
1350140,1352180," Um..."
1352180,1353660," Okay."
1353660,1354820," Uh..."
1354820,1357660," And the last two characters was gonna be that."
1357660,1360260," So, this was a whole list of rows."
1360260,1360640," Okay."
1360640,1361260," Uh..."
1361260,1361880," The next..."
1361880,1363260," Which half of that region."
1363260,1364480," Uh-huh, uh-huh."
1364480,1366460," The last three characters will be..."
1366460,1367560," By the left or right."
1367560,1368060," Uh..."
1368060,1375300," These specify exactly one of the eight columns of the seat on the plane numbered from zero through"
1375300,1375720," seven."
1375720,1378840," The same process as above proceeds again."
1378840,1381800," This time with only three steps."
1381800,1384260," L means to keep the lower half."
1384260,1384660," Uh..."
1384660,1387000," While R means to keep the upper half."
1387000,1388400," Uh..."
1388400,1390000," For example, consider just..."
1390000,1391000," Okay."
1391000,1394060," So, they have rows and they have columns."
1394060,1396100," So, you first select the row."
1396100,1397880," And then you select the column."
1397880,1401420," Uh..."
1401420,1409260," So, decoding reveals that it is the seat at row 44, column 5."
1409260,1412160," Every seat also has a unique seat ID."
1412160,1412360," Uh..."
1412360,1416040," Multiply the row by eight."
1416040,1417620," Then add the column."
1417620,1420160," This example..."
1420160,1422120," In this example, the seat has ID."
1422120,1423280," Okay."
1423280,1425860," But the ID..."
1425860,1426440," All right."
1426440,1430100," Um..."
1430100,1431300," Numbers..."
1431300,1432500," Because you have a..."
1432500,1433100," Uh..."
1433100,1433640," Yeah, yeah."
1433640,1436500," So, essentially..."
1436500,1440480," So, that's the problem."
1440480,1441720," I do..."
1441720,1441960," Okay."
1441960,1446160," So, maybe I was a little bit overreacting on the problem."
1446160,1447640," Um..."
1447640,1450380," So, it's maybe not really convoluted."
1450380,1455100," It's just my brain is not accustomed to understand these kind of problems."
1455100,1456840," Um..."
1456840,1457300," Right."
1457300,1459100," So, um..."
1459100,1460560," Because I need pictures."
1460720,1465060," I'm so dumb that I need, like, this kind of picture."
1465060,1466060," So, there we go."
1466060,1468400," So, we have, like, seven of these things."
1468400,1469060," Right."
1469060,1470740," Six."
1470740,1471880," Seven."
1471880,1472740," Actually, eight."
1472740,1473600," Right."
1473600,1475200," And then you have this thing repeated."
1475200,1476480," Uh..."
1476480,1477640," 128 times."
1477640,1479260," 128 times."
1479260,1480840," Right."
1480840,1482680," So..."
1482680,1484300," And it just goes like that."
1484300,1484660," Right."
1484660,1485980," And the first thing you do,"
1485980,1486900," uh..."
1486900,1487900," You..."
1487900,1490040," Search the corresponding row."
1490140,1490620," Like that."
1490620,1494320," And then you search the corresponding column like that."
1494320,1497960," And what's interesting is that the ID is,"
1497960,1500320," like, according to this formula, at least."
1500320,1500660," Right."
1500660,1503480," It's gonna be essentially this numbering."
1503480,1503880," Zero."
1503880,1504360," One."
1504360,1504840," Two."
1504840,1505480," Three."
1505480,1506380," Four."
1506380,1506920," Five."
1506920,1507400," Six."
1507400,1507940," Seven."
1508480,1508960," Eight."
1508960,1508960," Nine."
1508960,1509840," Nine."
1509840,1510620," Ten."
1510620,1511360," Eleven."
1511360,1512420," And so on and so forth."
1512420,1513440," So, this is gonna be the ID."
1513440,1514920," So, because they are numbered through."
1514920,1519120," And I would understand if they just show me this picture."
1519120,1521400," But if they showed me this picture,"
1521400,1522580," I don't understand correctly."
1522580,1524080," That would be too much of a spoiler."
1524080,1526120," And then the problem will become too easy."
1526880,1535640," So, that's a hundred percent spoiler."
1535640,1538800," That's, by my criteria, this is a bad problem then."
1538800,1542140," If the only thing that keeps this problem difficult"
1542140,1545220," is the lack of this picture,"
1545220,1547600," well, it's a very bad problem in my opinion."
1547720,1548760," That's why I'm so mad."
1548760,1553340," Like, there's nothing interesting in that specific problem."
1553340,1575540," But again, it's just me."
1575540,1576280," It's just me."
1576360,1578200," Maybe people like this kind of stuff."
1578200,1580940," Like, I mean, reading through this kind of stuff."
1580940,1581500," Right?"
1581500,1585900," But I personally don't like read walls of text."
1585900,1586200," Right?"
1586200,1588220," Because this kind of problem forces me to read through"
1588220,1589840," a wall of text."
1589840,1592420," And that's kind of a..."
1592420,1593480," That's why I don't like that."
1593480,1594140," Okay."
1594140,1597060," So, reveals that it is a seed."
1597060,1597520," Whatever."
1597520,1600120," The seed also has a unique seed ID."
1600120,1601140," Multiply the row."
1601140,1604540," Where's some wording process?"
1606360,1609980," Oh, okay."
1609980,1611520," So, that's actually based on the forest."
1611520,1618820," Okay."
1618820,1622400," It's a very simple problem to be fair."
1623020,1626560," You're not even doing binary search."
1626560,1631260," You're just interpreting already made decisions of the binary search."
1631260,1634600," So, it's not particularly that interesting even."
1635980,1636760," All right."
1636760,1640040," So, essentially, our input is going to consist of these things."
1640040,1640520," Right?"
1640520,1641940," It's going to consist of these things."
1641940,1644060," And that's pretty much it."
1644060,1645140," So..."
1645140,1647940," Okay."
1648160,1650580," So, let's go ahead and code it up."
1650580,1652520," Let's go ahead and code it up."
1652520,1654620," That's it."
1654620,1657040," So, we're going to start with the C++."
1657040,1660020," Again, as I already mentioned, this is going to be a C++."
1660020,1662700," Oh, by the way, we need to debate people into the stream."
1662700,1667020," Advent of code in C++."
1676020,1676740," All right."
1676740,1678480," Okay."
1678480,1682220," So, I already opened this entire thing."
1682220,1684700," And, of course, we're going to do it like this."
1684700,1686760," So, it's going to be Iostream, right?"
1686760,1690120," Then, we're going to do it like that."
1690120,1692700," And maybe we don't need this kind of thing."
1692700,1693920," std."
1693920,1697720," Hello, world."
1697720,1703740," Okay."
1704880,1706380," So, this is going to be main."
1706380,1707520," Main CPP."
1707520,1709980," We're going to have a compiler CXS."
1709980,1714820," Then, we're going to have CXX flags."
1714820,1718520," So, the output is going to be main."
1718520,1724880," And we're not going to use any libs."
1724880,1725980," Maybe except math."
1725980,1729160," But I don't think we're going to have anything like that."
1729160,1730660," So, CXX flags."
1730660,1732660," It's going to be W-O."
1732660,1733340," W."
1733340,1734980," No, no W ever."
1734980,1736720," But W extra would be nice."
1736720,1739700," We're going to use the C++ 17 standard."
1739700,1742340," C++ 17."
1742340,1743500," Do we want to do pedantic?"
1743500,1743780," Yeah."
1743780,1746720," I think we want to do pedantic because we want to be a standard compliant."
1748200,1750400," So, and let's try to build this entire thing."
1750400,1751900," Maybe we're going to use Clang instead."
1751900,1752560," Who knows?"
1752560,1754280," And this entire thing compiles."
1754280,1755160," Would you look at that?"
1755160,1757380," This entire thing compiles."
1757380,1759020," And it says, hello world."
1759420,1767280," So, what's funny is that I think the way I'm going to parse the input is going to be by using,"
1767280,1770360," like by reading the whole file into the string view."
1770360,1773500," Where is the CPP reference?"
1773500,1778880," String view."
1784260,1784780," Yeah."
1784780,1790880," So, and then string view actually enables you with very quick slicing, substringing, and stuff like that."
1790880,1794560," And then I'm going to just, you know, go through the lines."
1794560,1797920," And because of that, I think,"
1797920,1802880," ID of, so how is it called?"
1802880,1805080," ID of boarding pass, right?"
1805080,1806860," ID of pass."
1807020,1810680," And we're going to pass it by doing something like std."
1810680,1817260," Maybe I'm going to do using namespace std, so I don't have to, I don't have to prefix std everywhere."
1817260,1820340," You know, it's not particularly convenient for such a small program."
1820340,1824020," For a bigger program, that would be very important, right?"
1824020,1826240," That would be very important."
1826240,1831000," But for a small program like that, it's just easier to do it like this."
1831000,1833140," Okay."
1833140,1834180," Size T."
1834880,1837740," So, string view, right?"
1837740,1841380," String view, and this is going to be the pass that we're passing."
1841380,1845980," As far as I know, copying string view should be very inexpensive, right?"
1845980,1847460," It should be definitely very inexpensive."
1847460,1855820," I wonder who owns the memory of the string view, by the way, in C++."
1855820,1859660," Is it like reference counting?"
1860800,1865740," String describes an object that can refer to a constant conjuring sequence charlag."
1865740,1869060," So, uh, uh-huh, uh-huh."
1869060,1871940," The iterator."
1871940,1877360," Does anybody know, by the way, who owns the string view memory?"
1877360,1882520," String view, by definition, doesn't own anything, but who owns it?"
1883200,1884700," Who is supposed to own it?"
1884700,1884700," Who is supposed to own it?"
1884700,1884700," Who is supposed to own it?"
1913200,1914440," Who is supposed to own it?"
1914440,1915300," Who is supposed to own it?"
1915300,1916240," Who is supposed to own it?"
1916240,1917240," Who is supposed to own it?"
1917240,1918240," Who is supposed to own it?"
1918240,1919240," Who is supposed to own it?"
1919240,1919740," Who is supposed to own it?"
1919740,1920740," Who is supposed to own it?"
1920740,1921740," Who is supposed to own it?"
1921740,1922740," Who is supposed to own it?"
1922740,1923740," Who is supposed to own it?"
1923740,1924740," Who is supposed to own it?"
1924740,1925740," Who is supposed to own it?"
1925740,1926740," Who is supposed to own it?"
1926740,1927740," Who is supposed to own it?"
1927740,1928740," Who is supposed to own it?"
1928740,1929740," Who is supposed to own it?"
1929740,1930740," Who is supposed to own it?"
1930740,1931740," Who is supposed to own it?"
1931740,1932740," Who is supposed to own it?"
1932740,1933740," Who is supposed to own it?"
1933740,1934740," Who is supposed to own it?"
1934740,1935740," Who is supposed to own it?"
1935740,1936740," And who is supposed to own it?"
1936740,1950220," Do I want to have size T or size T or do I want to have an integer?"
1950220,1966500," I think I'm going to go with the integer row of pass multiplied by at."
1966500,1970760," 8 plus call of pass like this."
1970760,1972260," And this is what we can return here."
1972260,1976700," So that means we're going to introduce two additional functions."
1976700,1977940," Two additional functions."
1977940,1980100," I'm going to size of T."
1980100,1982180," String view pass."
1982180,1984900," Yeah, return 0."
1984900,1992660," I want to actually do something like assert saying that this thing is not implemented."
1996500,1999540," So I don't forget to implement it."
1999540,2005220," So I still string view pass."
2005220,2011540," Okay, cool."
2011540,2021020," So, and I suppose one of the things we'll have to do here, right, is to read through the file."
2022960,2034620," I'm pretty sure there's no really a way to just to read the whole file into a string in C++."
2034620,2038760," You have to do that through their input strings and stuff like that."
2038760,2040440," So it's kind of lame."
2043220,2044140," It's kind of lame."
2044140,2048720," But maybe we're going to omit that."
2048720,2050340," Maybe we're going to omit that for now."
2050340,2062100," So, and if we're going to use the streams and everything, maybe it would make sense to just use strings then instead of string views."
2066480,2069480," So, and let's have like temporary input here."
2069480,2072300," So this is going to be a temporary input."
2072300,2075460," Something like this, right."
2075460,2079320," What kind of input we're going to have here?"
2079320,2083460," So I just want to copy paste whatever we have in Advent of Code, right."
2087180,2089080," So this is going to be the second one."
2089080,2091440," This is going to be the second one."
2091440,2092920," This is going to be the third one."
2092920,2094840," There we go."
2094840,2097500," And I'm going to iterate through all of them."
2097500,2100440," Is it possible in modern C++ to do something like this?"
2100440,2101540," I think it is possible."
2101540,2103420," Let's call them passes."
2103420,2104720," Right."
2104720,2105820," So these are the passes."
2105820,2106900," This is going to be the pass."
2106900,2107480," Passes."
2108420,2111720," And then we can do something like Cout."
2111720,2113780," Passes."
2113780,2119720," And then we're going to do ID of pass."
2119720,2120340," Right."
2120340,2121200," ID of pass."
2121200,2124020," And then it's going to be end line."
2124020,2125200," There we go."
2125200,2127420," So this is how we're going to approach all of that."
2127420,2129320," So let's try to compile."
2129320,2132740," And it will probably fail."
2132740,2133180," Okay."
2133180,2136060," Let's remove asserts because I want it to actually succeed."
2137060,2139960," And if I try to run this entire stuff."
2139960,2140420," Right."
2140420,2141360," If I try to run it."
2141360,2141780," Yeah."
2141780,2143040," Right now all of them are zero."
2143040,2143960," Which is totally fine."
2143960,2144240," Cool."
2144240,2144480," Cool."
2144480,2146500," So for the row."
2146500,2148420," We're going to do the following thing."
2148420,2150460," So the range is going to be low zero."
2150460,2153600," And high is going to be 127."
2153600,2155840," Right."
2155840,2157580," And what we need to do."
2157580,2164080," We need to iterate through zero up until seven."
2164080,2164480," Right."
2164480,2166960," Because we are considering first seven."
2167060,2167440," Characters."
2167440,2167900," Don't be."
2167900,2170200," We consider seven."
2170200,2171300," First seven characters."
2171300,2171620," Yeah."
2171620,2171840," Yeah."
2171840,2173840," So that means we're going to do that up until there."
2173840,2174860," Right."
2174860,2178920," And we're going to have the following switch I suppose."
2178920,2179300," Right."
2179300,2183200," So pass I."
2183200,2184300," Right."
2184300,2185300," I'm going to have a case."
2185300,2187040," It's front or back."
2187040,2189460," So this is front."
2189460,2193720," Then we're going to have back."
2193720,2198180," And we're not going to have any default."
2198180,2199680," Because I mean in case of a default."
2199680,2201420," It has to be like instantly crash."
2201420,2202420," But in that case."
2202420,2204600," I think it has to be asserted."
2206380,2208320," It has to be asserted."
2208320,2210520," And for the default."
2210520,2215480," To check my .files."
2215480,2216540," Check my .fiq."
2216540,2217540," Check everything."
2217540,2218260," Check everything."
2218260,2218900," Okay."
2218900,2220800," So here we're going to do something like this."
2220800,2221360," Assert."
2221360,2225720," Unreachable."
2225720,2227180," There we go."
2227300,2228460," So this is how we're going to push that."
2228460,2230140," Assert."
2230140,2231060," Unreachable."
2231060,2241820," So that means we're selecting the lower part."
2241820,2242380," Right."
2242380,2243780," We're selecting the lower part."
2243780,2246180," Zero through 63."
2246180,2253480," So that means the low is going to stay the same."
2253480,2256140," But high is going to be slightly different."
2256140,2256460," Right."
2256980,2258040," High is going to be slightly different."
2258040,2259840," It has to become 63."
2259840,2260960," But."
2260960,2267880," It's really difficult for me to understand that."
2267880,2268260," So."
2268260,2270020," Python."
2270020,2270960," I'm going to use Python."
2270960,2271520," And I'm sorry."
2271520,2273700," Because I'm using it as a calculator."
2273700,2274300," All right."
2274300,2275840," I'm using it as a calculator."
2275840,2276940," Not as a programming language."
2276940,2278300," So."
2278300,2280700," 127."
2280700,2282580," If I divide it by 2."
2282580,2284580," It's going to be 63."
2284580,2286280," Right."
2286660,2289020," So 27 minus 0."
2289020,2290140," Divide by 2."
2290140,2292060," And it's going to be exactly that."
2292060,2297180," But what's funny is that if it's lower part."
2299500,2309840," Well, I mean, we can definitely do something like high minus low divided by 2."
2309840,2312200," I'm just afraid that it's going to be off by 1."
2312200,2317080," So I'm always afraid of off by 1 when doing like binary stuff, binary search stuff."
2319620,2320120," So."
2320120,2322560," And I'm not 100% sure if it's going to work well."
2322560,2325980," So we can always like temporarily compute like middle."
2325980,2327400," All right."
2327400,2329060," So we can temporarily compute middle."
2330940,2332640," So high minus low."
2332640,2332660," So high minus low."
2332660,2335240," Just divide it by 2."
2335240,2338180," And in case of this thing, it's going to be high."
2338180,2339220," All right."
2339220,2340420," So this is going to be high."
2340420,2343440," And in case of back."
2343440,2345600," So front is a lower part."
2345600,2347300," Back is the upper part."
2347420,2351640," So that means low should become middle plus 1."
2351640,2353160," If I understand correctly."
2353160,2355440," Okay."
2355440,2358000," If I understand correctly."
2358000,2359120," And after that."
2359120,2366600," The final F keeps the lower of the 2 row 44."
2366600,2370400," So."
2370400,2374100," So in case of 44."
2374100,2376640," You are going to do what?"
2376740,2377320," You are going to do."
2377320,2380000," So essentially here."
2380000,2382120," You are going to have low 44."
2382120,2384840," And high 45."
2384840,2387340," And in case of this one."
2387340,2389760," You are going to do minus 45, 44."
2389760,2391440," Which is going to be that."
2391440,2392740," It's going to divide it by 2."
2392740,2396480," Yeah."
2396480,2397920," And I already made a fucky-wacky."
2397920,2399520," Because it's supposed to be like this."
2399520,2399860," Right."
2399860,2402960," You either have to like add low afterwards."
2402960,2403820," Right."
2403820,2405020," You have to add low afterwards."
2405020,2406340," Which is actually preferable."
2406340,2407200," If you think about it."
2407200,2409380," Or you can sum them up."
2409380,2410160," And divide by 2."
2410160,2410800," Right."
2410800,2413500," So there is always two ways of finding the middle."
2413500,2413900," Right."
2413900,2416040," So there's always two ways to find in the middle."
2416040,2417460," You can just sum them up."
2417460,2417960," Divide by 2."
2417960,2419300," Or you can subtract them."
2419300,2420480," And add low better."
2420960,2422240," This one."
2422240,2422880," This one is more safe."
2422880,2423600," Who knows why."
2423600,2425240," But not for this problem."
2425240,2427140," But generally this one is a little bit more safe."
2427140,2431720," Who knows why."
2437460,2437860," Okay."
2437860,2438420," Nobody knows."
2438420,2439280," Cool."
2439280,2442960," So let's continue."
2442960,2448160," What was that?"
2448160,2450880," It's going to be 45 minus 44."
2450880,2452820," Divide it by 2."
2452820,2454220," Plus 44."
2454220,2457880," And it's going to stay on 44."
2458160,2458400," Okay."
2458400,2459700," So that means it's going to work."
2459700,2463020," So I just wanted to double check this specific case."
2463020,2465580," I just wanted to double check this specific case."
2465580,2466740," Hello Will and Saba."
2466740,2467640," Welcome to the stream."
2467640,2468980," Welcome."
2468980,2469280," Welcome."
2469280,2469560," Welcome."
2470240,2470660," All right."
2470660,2476880," So this is a row of path."
2476880,2479120," Maybe we can already try to test that."
2479120,2480020," Yeah."
2480020,2482380," I think it's going to be actually pretty cool to test that."
2482380,2484660," We can already do something like a row of path."
2484660,2487640," And just do it like this."
2487640,2488720," Yeah."
2488720,2490180," I will have to do it like a minus B."
2490180,2493320," And it didn't work."
2493320,2493840," Nice."
2493840,2496120," I'm really happy that it didn't work."
2496120,2497780," Because we didn't return anything."
2500240,2501960," And we didn't return anything."
2501960,2508080," I suppose that after that, these values are going to be the same."
2508080,2509540," Let me actually confirm that."
2509540,2519820," So I'm going to do so it's going to be a low high handle."
2519820,2520280," Right."
2520280,2522020," So we're going to do something like that."
2522020,2526980," And yeah, they usually end up."
2529520,2532600," So let me put it like this."
2532600,2535180," Maybe I'm going to put it like that."
2535180,2537640," Like at the end so we can see the last one as well."
2537640,2539240," Uh-huh."
2539240,2552040," Something strange is going on."
2552040,2552620," Wait a second."
2556720,2557720," Oh, yeah, yeah, yeah, yeah."
2557720,2557960," So."
2557960,2562520," Middle."
2562520,2563540," Yeah, there we go."
2563540,2566080," So."
2566080,2570300," And they usually end up being the same number."
2570300,2572780," So the input is specifically crafted."
2572780,2577360," So after simulating this binary search, you're going to end up with the same."
2577360,2579700," Like low and high is going to end up as the same value."
2580120,2585140," So this is another assertion that I want to actually put here just to be 100% sure."
2585140,2585460," Right."
2585460,2586460," It's kind of important."
2586460,2589980," And after that, we can just return low."
2589980,2592220," So this is the assumptions that we make here."
2592220,2594640," And there we go."
2594640,2597980," So 70, 14, 14, 102."
2598400,2600840," So this match with this value."
2600840,2603280," So our result for the row matches with this values."
2603280,2604200," Okay, cool."
2604200,2606660," So column of the path."
2606660,2608680," It's kind of the same situation, right?"
2608680,2610160," But for the columns."
2610920,2614160," So maybe we can even copy-paste this entire stuff."
2614160,2615800," But do we really need to copy-paste it?"
2615800,2622960," Maybe we can turn it into like a more generic function that accepts initial low."
2622960,2626400," And now you will also have to change this range."
2626400,2628120," It's easier to copy-paste that."
2628120,2630020," It's easier to copy-paste that, unfortunately."
2630020,2639100," So another thing, by the way, we also assert a very important thing here is that the length,"
2639240,2642300," if I remember correctly, I think this is how we calculate the length of the string."
2642300,2642900," Maybe it's size."
2642900,2643640," I think it's size."
2643640,2646100," Has to be equal to what?"
2646100,2647980," 7 plus 3."
2647980,2650980," Was it like 9, 10?"
2650980,2651620," Okay, 10."
2651620,2658780," So 7 characters."
2658780,2663460," And the last 3."
2663460,2664780," So that means we have 10."
2664780,2667200," I don't know why I brain farted for so long here."
2667200,2668000," But yeah, there we go."
2669020,2670580," So it's going to be that."
2670580,2672360," Yeah."
2672360,2678140," So I just want to keep these assertions in case like something gets invalidated here."
2678140,2680100," All right."
2680100,2684580," So in that case, this one is going to be 0, 7."
2684580,2688900," And here we're going to go through 7 up until 10."
2688900,2690380," Up until 10."
2691000,2699720," And instead of F and B, we're going to have a left and right, which is left and right."
2699720,2701960," Left and right."
2701960,2704220," And then we assume that."
2704220,2705740," And now, okay."
2705840,2707240," So everything seems to be okay."
2707240,2711280," So this one is unreachable."
2711280,2712860," And this is going to be colon."
2712860,2718060," 7, 7, 4."
2718060,2719260," 7, 7, 4."
2719260,2720600," And there we go."
2720680,2721920," So we have a 7, 7, 4."
2721920,2730200," And now if we take the ID of the pass, we can clearly see that it's 567, 11, 8, 20."
2730840,2736680," And maybe we should actually, this one is interesting."
2736680,2743840," So it's 128 by, so what's going to be the maximum values of this stuff?"
2743840,2749940," Because you have 128, 128 multiplied by 8."
2751000,2753020," Yeah, it's not that big, but there we go."
2753020,2753920," This should be a solution."
2753920,2758420," So essentially, we have ID of pass that computes that more or less properly."
2758420,2759260," Right."
2759260,2764020," The next thing we'll have to do, we'll have to learn how to read stuff from the file."
2764020,2764440," Right."
2764440,2768060," How to read this stuff from a file."
2768060,2771360," Does anybody remember how to read from a file in C++?"
2771360,2772480," I vaguely remember."
2772480,2774180," I do vaguely remember."
2774180,2776100," So it's going to be fstream, I think."
2776100,2778180," I think it's in ifstream."
2778180,2780760," So it's an input stream."
2781000,2784180," Well, it's an input stream."
2784180,2789180," So I don't remember, I don't quite remember."
2789180,2790180," Can you get a line?"
2790180,2792220," Yeah, you can even read by line."
2792220,2794520," You can even read by line."
2794520,2800460," So fstream, and let's open that."
2800460,2802520," Okay."
2802520,2805580," So ifstream, so this is going to be like this."
2805580,2808040," And we're going to read from a sample txt."
2809240,2810740," So it's going to be sample txt."
2810740,2814900," And we're going to put this thing here."
2814900,2816600," There we go."
2816600,2822140," Unfortunately, the problem with this solution is that it doesn't look like a modern C++, to be fair."
2822380,2826800," But this is not that complicated of a problem to use anything more."
2826800,2830420," To be fair, modern C++ didn't really introduce anything useful anyway."
2830420,2833140," That's probably why they just don't use anything."
2833140,2839000," Apart from intellectual masturbation, of course."
2839000,2842060," Like, it's introduced a lot of toys for intellectual masturbation."
2842640,2843900," Like, STD visit, yes."
2843900,2846600," But something that solves actual problems."
2846600,2849200," Like, no, you can just use whatever it had already."
2849200,2850620," So you just don't really need that."
2850620,2855240," So..."
2855240,2858560," But STD visit, isn't STD visit was already in C++ for quite some time?"
2858560,2859860," I don't follow C++."
2859860,2860420," I'm sorry."
2860420,2861820," I don't give a shit about this language."
2861820,2864100," To actually, like, follow it."
2864360,2870760," Okay, it wasn't C++ 17, but in 20 they improved it, whatever the fuck they did, and changed it."
2870760,2872300," So, yeah."
2872300,2877040," It's just like a visitor pattern for variant types."
2877040,2879420," What something, something, Jesus Christ, people."
2879420,2881080," All right."
2881080,2888520," So, now, I think the cool thing about Fstream is that you can do something like this."
2888520,2895300," While this, you can do get line, right, out line."
2895300,2897060," You can call it a pass, though."
2897060,2900780," And then, we can just bring it like that."
2900780,2902940," So, that's an entire thing."
2902940,2907860," Visits is better matching without adding new keyword or syntax."
2907860,2910240," Okay."
2910240,2914240," It's like something that a lot of languages had, like, 30 years ago."
2914240,2914520," Cool."
2917620,2918620," Good job, C++."
2918620,2919280," What can I say?"
2919280,2922900," Good job, Z++."
2922900,2923940," Very cool."
2923940,2924880," Very, very cool."
2924880,2926060," Um, all right."
2926060,2927240," Mm-hmm."
2927240,2932240," So, um..."
2932240,2935560," Get line, not get line."
2935560,2938160," I mean..."
2938160,2939640," No."
2939640,2942720," Oh, look!"
2942720,2944060," Kampalio just told me!"
2944060,2945100," Who would have thought?"
2945100,2945720," Huh?"
2945720,2946020," Huh?"
2946340,2949640," It's almost like I can just rely on the compiler."
2949640,2952080," No matching function if stream get line."
2952080,2952380," Okay."
2952380,2953720," So, uh..."
2953720,2954820," Where is it available?"
2954820,2958140," So, apparently, we don't even have that."
2958140,2960540," So, um..."
2960540,2961760," Did they close CPP reference?"
2961760,2962200," Yeah."
2962200,2963480," CPP reference."
2963480,2966520," Um..."
2966520,2969800," Because all great games were written in it."
2970020,2972920," That's a really strange reason to learn a language."
2972920,2974880," Uh..."
2974880,2977400," At least to me."
2977400,2979880," I have..."
2979880,2981760," Like, clearly remember there was, like,"
2981760,2983180," the get line."
2983180,2985400," Uh..."
2985400,2985920," Method."
2994020,2997880," Input."
2997880,2998240," Um..."
2998240,2998840," Input."
2998840,2999480," So..."
2999480,3000540," Yeah."
3000540,3004820," Oh, they accept also something chart type?"
3004820,3006920," Huh."
3006920,3010060," That's a strange get line."
3010060,3012160," I remember that it had, like, a proper get line."
3012720,3015380," Oh, it just has, like, a top level, like, function get line."
3015380,3015700," Okay."
3015700,3017140," So, it accepts a stream."
3017140,3017380," Okay."
3017380,3018980," So, uh..."
3018980,3020260," And it even accepts a delimiter."
3020260,3021220," That's actually pretty cool."
3021220,3022820," Um..."
3022820,3023900," So, get line."
3023900,3026540," You can pass it like that."
3026540,3029100," And do I have to..."
3029100,3029440," Yeah."
3029440,3030800," I also have to, uh..."
3030800,3032060," Put a string, uh..."
3032060,3034400," Like, the output string, where it's gonna accept it."
3034400,3035160," Yeah."
3035160,3035460," Okay."
3035460,3038160," So, let's maybe do something like string str."
3038160,3040120," And it's gonna be str."
3040120,3041440," Oh, no, no."
3041440,3042520," Let's call it pass."
3042520,3045380," Cool."
3045380,3048340," Is it gonna compile?"
3048340,3048840," Yes."
3048840,3049580," It compiled."
3049580,3050900," Uh..."
3050900,3051140," Okay."
3051140,3052340," So, this one is interesting."
3052560,3054340," So, that means, uh..."
3054340,3057320," It also included the last line here."
3057320,3059580," I wonder if it's gonna work now."
3059580,3061240," No, it still includes the last line."
3061240,3063520," So, we have to be a little bit more careful."
3063520,3066620," So, um..."
3066620,3068520," I think we can do something like that."
3068520,3069520," If pass..."
3069520,3071160," Uh..."
3071160,3071520," Size..."
3071520,3074500," Equal to 10."
3074500,3075360," Right."
3075360,3077940," Then we can do something like this."
3077940,3079020," Uh..."
3079020,3079360," There we go."
3079360,3080220," So, uh..."
3080220,3081000," This is our input."
3082300,3085280," So, uh..."
3085280,3085540," Yep."
3085540,3087780," So, I think we're ready to take a look at the..."
3087780,3089400," Take a look at the puzzle input."
3089400,3091380," Uh..."
3091380,3098880," Do it have anything apart from that."
3098880,3100060," Everything looks okay."
3100060,3101240," And what..."
3101240,3102120," By the way, what are we doing?"
3102120,3103480," Uh..."
3103480,3106360," The highest seed ID on the boring pass."
3106360,3106640," Okay."
3106640,3108660," So, that means we'll have to..."
3108660,3109600," Uh..."
3109600,3110940," The highest."
3110940,3113740," So, the biggest, they mean."
3113740,3114420," Right."
3114420,3115460," Um..."
3115460,3116520," Um..."
3116520,3116860," Okay."
3116860,3117520," So..."
3117520,3119520," Uh..."
3119520,3121580," It's size T."
3121580,3122540," Uh..."
3122540,3126760," By the way, I do remember that we had limits in C++."
3126760,3129960," Limits."
3129960,3131400," Yeah, yeah."
3131400,3131860," This one."
3131860,3134120," So, we can easily actually use something like that."
3134120,3135100," Uh..."
3135100,3137280," And we'll probably have to import this entire stuff."
3137280,3138760," So, maybe limits."
3138760,3140820," Uh..."
3140820,3143820," So, std numeric limit."
3143820,3144120," Okay."
3144120,3148260," So, this is going to be the answer."
3148260,3154700," Numeric limit."
3154700,3158860," Size T."
3158860,3162240," And we want to pick the smallest one."
3162240,3163060," Like, minimum."
3163060,3165960," Which is kind of ironic."
3165960,3167440," Because for size T, it's going to be zero."
3167440,3168120," So..."
3168120,3172580," Because of that."
3172580,3173800," Because of that."
3173800,3176200," I think it makes sense to query replace."
3176200,3178040," Size T with integer."
3178540,3181640," Because in that case, integer is going to be like a very negative."
3181640,3183480," Uh..."
3183480,3184720," Like a negative thing."
3184720,3189920," And as soon as you get the first value, it's going to be guaranteed to replace that one."
3189920,3191120," Uh..."
3191120,3192920," It's probably much the same with zero."
3192920,3196180," But with zero, I don't like the fact that zero is a correct ID."
3196180,3197600," That's probably why."
3197600,3199200," That's probably why I want to use integer here."
3199200,3201080," Because zero is a correct ID."
3201080,3204980," And we initialize it with the correct ID without even seeing any passes."
3204980,3205800," Does it make any sense?"
3206940,3208240," I'm not sure if it makes sense."
3208240,3211200," But that's kind of the reason why we need to replace that."
3211200,3212520," Uh..."
3212520,3212860," All right."
3212860,3214320," So, um..."
3214320,3214560," Cool."
3214560,3217000," So, uh..."
3217000,3218140," Do I have input here?"
3218140,3218900," Uh..."
3218900,3220420," I do have an input here."
3220420,3222900," And let me quickly do input TXT."
3222900,3224880," Also, it complained about something."
3224880,3226440," Because I never printed that shit."
3226440,3229720," So, it's going to be Cout and Scandal."
3229720,3233500," And let's see."
3233500,3234680," And..."
3235680,3237080," That was very interesting."
3237080,3237780," Because..."
3237780,3239940," Uh..."
3239940,3240780," Uh..."
3240780,3244260," I forgot to do this thing."
3244260,3245260," Right?"
3245260,3247200," And then, uh..."
3247200,3249120," Answer equal, um..."
3249120,3251120," Maximum between the answer and ID."
3251120,3252500," So, this is how we're going to do that."
3252500,3254740," And also, I want to print that just to see what is going on there."
3254740,3255900," Uh..."
3255900,3256280," There we go."
3256360,3257300," So, this is my answer."
3257300,3260200," And let's see if it's the correct one."
3260200,3261680," Is it the correct one?"
3261680,3263600," It is the correct one."
3263600,3265040," First mother-flip and try."
3265040,3266820," I still don't like this problem, by the way."
3266820,3267780," I still don't like it."
3267780,3268960," I think it's a..."
3268960,3269760," Not a really good problem."
3269760,3273000," So, yeah."
3273000,3274580," But this is just my opinion."
3274580,3277100," I'm sorry that I'm forcing my opinion on my channel."
3277100,3279400," It's not what I'm supposed to do on my channel."
3279400,3279740," I know."
3279740,3281040," Ding!"
3281040,3282120," Pepega."
3282120,3286300," The fastest seatbelt signs have turned on."
3286480,3287760," Time to find your seat."
3287760,3289740," It's a completely full flight."
3289740,3293700," So, your seat should be the only missing boarding pass in your list."
3293700,3295120," However..."
3295120,3295900," There's a catch."
3295900,3301560," Some of the seats at the very front and the back of the plane don't exist on this aircraft."
3301560,3304620," So, they'll be missing from the list as well."
3304620,3307300," Your seat wasn't in the very front or back though."
3307300,3311920," The seat with the IDs plus one and minus one in your list will be in your list."
3311920,3314880," What the fuck do you want from me?"
3314880,3315980," Um..."
3316360,3316760," Mm-mm."
3316760,3318180," Okay."
3318180,3322280," All right."
3322280,3325240," So, it's a completely full flight."
3325240,3329060," So, your seat should be the only missing boarding pass in your list."
3329060,3330420," Okay."
3330420,3332060," However, there is a catch."
3332060,3338360," Some of the seats at the very front and the very back of the flight don't exist."
3339440,3342140," So, all right."
3342140,3344140," So, we have..."
3344140,3355320," So, if I understood this shite correctly."
3355320,3356700," If they understood..."
3356700,3363040," By the way, keep in mind that this is my row and filtered reaction to this problem."
3363180,3365320," Like, I didn't see that problem before."
3365320,3367840," And so, yeah."
3367840,3372120," That explains why I'm brain farting a lot and stuff like that."
3372120,3378520," Because I'm reading these problems for the first time on the stream."
3378880,3380380," So, yeah."
3380380,3381460," Give me some slack."
3381460,3383580," So, if..."
3383580,3387980," Our plane looks like this."
3387980,3390540," That means we don't have these things."
3390540,3392180," And we don't have these things."
3392180,3392740," Right?"
3394960,3395380," Cool."
3395380,3397640," So, the thing we need to do..."
3397640,3399620," We need to evaluate all of the passes."
3399620,3400120," Right?"
3400120,3401620," Evaluate all of the passes."
3401620,3404520," And find the only one that is missing there."
3404520,3404920," Right?"
3404920,3407040," Price the forward."
3407040,3407600," No, I'm going to lie."
3407600,3410660," So, one of the things we can do, by the way..."
3410660,3415260," I think I have a pretty cool idea to find out how the fuck it's going to work."
3422680,3425880," So, first of all, I want to wrap up the solution."
3425880,3428260," Somehow."
3428260,3431780," So, let's actually do something like part one."
3431780,3432940," Right?"
3432940,3436780," And let's put this entire stuff to here."
3436780,3440960," So, this is a part one."
3440960,3445180," And we're going to have something like part two."
3448360,3450080," I think it's going to be kind of similar."
3450080,3454680," But, instead of finding the maximum between all of these things,"
3454680,3459160," I think I'm going to accumulate all of the IDs into a set."
3459160,3460680," Right?"
3460680,3463540," So, there we go."
3463540,3465480," And also, we need to include the set."
3465480,3467980," Okay."
3467980,3469580," So, while we're reading all of that,"
3469580,3470840," we're reading the pass."
3471140,3472260," Then, we take the ID."
3472260,3473480," No, the pass."
3473480,3474300," And then,"
3474300,3476860," IDs nuts."
3476860,3479580," And,"
3479580,3483480," I'm just inserting that ID into IDs nuts."
3483480,3485800," Yes."
3485800,3487380," So, after that,"
3487380,3488300," right."
3488300,3489420," After that,"
3489420,3492280," I want to iterate through all of the..."
3492280,3494820," All of the rows."
3494820,3495260," Right?"
3495420,3496660," So, this is how we're going to do that."
3496660,3498760," So, it's from 0 to 128."
3498760,3499960," So, this is the rows."
3499960,3502100," Might as well actually call them a row."
3502100,3504060," There we go."
3504060,3505240," So, this is going to be a row."
3505240,3507480," And then, we're going to iterate through the columns."
3507480,3509280," It's going to be like that."
3509280,3511020," Columns up until 8."
3511020,3512380," Plus, plus column."
3512380,3514520," And I want to actually visualize them."
3514520,3515360," Really."
3515360,3516360," It's going to be interesting."
3516360,3517280," Trust me."
3517720,3520320," So, if ID is nuts."
3520320,3524340," I forgot how to check that this set contains something."
3524340,3527240," Let me find the set and we'll see."
3527240,3529740," I just want to see the visualization."
3529740,3531460," Because I think it's going to be interesting."
3531460,3534960," I think it's find."
3534960,3535660," Yeah."
3535660,3536040," There we go."
3536040,3537560," It should return an iterator."
3537560,3538320," And as far as I know,"
3538320,3541580," iterator can be used in the..."
3541580,3543260," Oh, you have to compare it with the ant."
3543260,3543820," Don't you?"
3543820,3545380," I think you have to compare it with the ant."
3545380,3546160," Hello, Mariangie."
3547560,3548000," All right."
3548000,3549040," So, find."
3549040,3551080," And what we're trying to find here,"
3551080,3556040," we're trying to find this multiplied by 7 plus column."
3556040,3557600," By 8 plus column."
3557600,3558980," Right."
3558980,3561060," And if it's not equal,"
3561060,3562640," ID is nuts."
3562640,3569980," And we're going to print just a star here."
3569980,3572740," Let me do it."
3572740,3573860," I'll do it like that."
3573860,3575060," Okay."
3575060,3576260," So, otherwise,"
3577400,3578520," otherwise."
3578520,3581720," Oh my God."
3581720,3582220," Emacs."
3582220,3584200," We're going to print a dot."
3584200,3585280," So, essentially,"
3585280,3587280," star will indicate that the set is taken."
3587280,3590080," And a dot is going to indicate that the set is not taken."
3590080,3591860," And after a single row,"
3591860,3593840," we're going to do set out handle."
3593840,3597940," So, that will visualize the whole thing."
3597940,3599620," That will visualize the whole thing."
3599620,3601220," Let's actually see if it's going to work or not."
3601740,3603580," So, it's going to be part two."
3603580,3605080," So, I'm going to just run the part two."
3605080,3607580," And, yep."
3607580,3608800," Let me see."
3608800,3610660," Okay."
3613540,3616820," That's very funny."
3616820,3617500," Look at that."
3617500,3619060," So, it is true."
3619060,3621420," So, some of them are missing."
3621420,3626260," There's only one here that is not missing."
3626920,3627740," And, yeah."
3627740,3628960," It's kind of fun."
3630580,3633260," But, it doesn't say how many of them, though."
3633260,3633600," Right?"
3633600,3636040," So, this is actually kind of cool visualization."
3636040,3637620," Yeah, you can clearly see that."
3638800,3642900," So, it's completely flat."
3642900,3647860," So, your seat should be the only missing boarding pass in your list."
3647860,3648740," However, there's a catch."
3648740,3654760," Some of the seats at the very front and back don't exist on this apper."
3654760,3656260," So, you'll be missing."
3656260,3660280," So, they'll be missing from your list as well."
3660280,3663680," Mm-hmm."
3664640,3665100," All right."
3665100,3666520," So, essentially, what you need to find."
3666520,3671340," You need to find this, like, hole."
3671340,3672320," Right."
3672320,3673860," So, we need to know the ID."
3673860,3678840," What's funny is that I can pretty easily calculate the ID of this thing."
3678840,3685160," So, this is how many lines I have here."
3685160,3687040," So, I have 69 lines."
3694160,3696820," Oh, cool."
3696820,3702700," So, it will be kind of cool to find it programmatically."
3702700,3703040," Right?"
3703040,3704660," It will be cool to find it programmatically."
3704660,3706700," But, I can do that manually."
3706700,3707480," So, 69."
3707480,3711440," So, that means they are rows from 0 to 68."
3711440,3716940," So, that means this seat is literally on the 69th row at the column 0."
3717240,3724580," So, the answer is going to be, it has to be 69 by 8."
3724580,3732260," And the answer is literally 552, theoretically, for my specific input."
3732260,3733280," Is it true?"
3733280,3734000," Yes, it's true."
3734860,3736440," So, it's kind of interesting."
3736440,3736720," Okay."
3736720,3738920," So, I really liked the fact."
3738920,3742020," Uh-huh."
3742020,3743660," Ha-ha."
3745160,3746760," I think I'm starting to get it."
3746760,3748280," I think I'm starting to get it."
3748280,3749320," So, here's my problem."
3749320,3751820," I come from a competitive programming background."
3751820,3761500," And, as I already mentioned, in competitive programming, it's either you have a full solution that works on all of the inputs, all of the possible inputs."
3761700,3763420," Or, you don't have any solution at all."
3763420,3765660," It is like that in competitive programming."
3765660,3770820," And, because of that, I go to advent of code problems with this mindset."
3770820,3776540," I need to come up with a code that, like, solves the whole solution, like, completely on all of the possible inputs."
3776540,3777540," And, it's correct."
3777540,3779300," And, that's why I couldn't understand people."
3779300,3780980," Why do you provide inputs?"
3780980,3783680," Like, correct solutions should just work for everything."
3783680,3785360," Now, I'm just understanding."
3785520,3791580," Because, you can partially solve it and then make it easier to solve manually."
3791580,3792740," Right?"
3792740,3798660," So, because I just made a visualization that helped me to solve it manually."
3798660,3801660," Right?"
3801660,3805740," The solution versus right answer."
3805740,3806540," Yeah, I suppose."
3806540,3811460," Because, I still have this competitive programming mindset where, like, I need to come up with a solution."
3811460,3814340," I need to come up with a program that just solves everything."
3814980,3816540," But, you don't need to do that."
3816540,3817640," Like, okay."
3817640,3820620," So, I think I'm starting to get the gist of the advent of code."
3820620,3822400," I think I'm starting to understand it."
3822400,3824540," All right."
3824540,3827160," So, cool."
3827160,3832300," I might as well actually do a pretty interesting thing."
3832300,3838480," So, for example, I can also print the rows."
3838480,3840220," But, I'm not sure if it's that useful."
3840220,3843140," I'm not sure if it's that useful."
3844320,3844980," So, yeah."
3844980,3848120," So, and yet another problem has been solved."
3848120,3849300," Was it interesting?"
3849300,3852760," Judging by my view count, it probably wasn't that interesting."
3852760,3853880," So, yeah."
3853880,3855480," But, I did my best."
3855480,3856440," I did my best."
3856440,3860060," And, again, I see that problem for the first time on the stream."
3860060,3862720," I was trying to understand it on the stream."
3862720,3866600," So, this is my raw unfiltered reaction on that problem."
3866600,3884320," I missed the problem, but I saw that the input file does not have enough entries for every seat in the plane."
3884880,3889160," How do you find the correct position when there are many solutions?"
3889160,3895940," Well, they explicitly said, ignore missing seats at the front."
3895940,3899960," Ignore missing seats at the back and ignore everything at the front."
3899960,3901000," That's it."
3901720,3905900," So, and that's how you find the correct solution, because here it is."
3905900,3906900," It becomes like obvious."
3906900,3908960," Like, it just stares at you if you visualize it."
3908960,3909880," All right."
3912580,3914140," It's, okay, cool."
3914140,3916780," So, I'm going to commit it."
3916780,3918960," So, and we'll see how it goes."
3918960,3929760," Okay."
3929760,3931800," So, I'm not going to include some of the stuff."
3931800,3935860," Git ignore."
3935860,3937340," It's going to be main."
3937340,3939800," Uh-huh, uh-huh."
3941580,3942960," Do we need to include anything else?"
3942960,3949060," Okay, cool."
3949060,3955080," Add solution for day five."
3955080,3957540," And I'm going to push that right into the repo."
3957540,3959980," I'm going to push that right into the repo."
3959980,3963340," You can find all of my solutions here, if you're interested."
3963340,3968020," And, yeah, so the fifth day was solved."
3970340,3972460," So, are we going to solve another one?"
3972460,3974520," We're going to solve another one."
3974520,3977480," Maybe it makes sense to solve another one."
3977480,3978640," I'm not 100% sure."
3978640,3982700," We don't have anything to do today anyway."
3982700,3985560," So, let's maybe solve this sixth one."
3985560,3988820," But that means we'll have to switch to a different language."
3988820,3990240," What do you guys think?"
3990240,3991700," Should I solve the sixth one?"
3992160,3994420," I'm not solving the seventh one for sure."
3994420,3998500," Because I just want to, like, give people time to solve it themselves."
4003500,4008440," It's almost, like, I don't know why Chad is so dead today, probably."
4008440,4011980," People probably put me on the background and, yeah."
4011980,4016360," So, what's going to be the next language?"
4016360,4017860," I didn't think about the next language."
4017860,4020080," The next language is the most difficult thing."
4020080,4023060," So, Coughlin, maybe."
4023280,4024900," I didn't really enjoy working with Coughlin."
4024900,4026480," I don't like its compilation times."
4026480,4029560," It's just not really pleasant to work with in that regard."
4035940,4038480," I don't know why I'm so dead today either."
4038480,4039840," Yeah, probably."
4039840,4040780," Racket."
4040780,4042280," Okay, Racket gave me an idea."
4042280,4045400," Maybe we should try, like, a scripting language this time."
4045400,4050780," Yeah, so far all of these languages were statically typed compiled languages."
4050780,4051700," Right?"
4051700,4054860," But we haven't tried the scripting ones."
4054860,4056980," So, maybe we can try a scripting one."
4056980,4057700," For example, Python."
4057700,4060140," How about we solve it in Python?"
4060140,4064100," Maybe at some point we're going to solve it in PHP 2."
4064100,4064460," Why not?"
4065940,4067720," All right, all right, all right."
4067720,4069360," So, it's going to be 0.6."
4069360,4071000," And let's do that in Python."
4071000,4074020," I'm going to use Python 2, by the way."
4074020,4075620," I'm joking."
4075620,4076760," Maybe I should use Python 3."
4076760,4082680," So, userbin environment, Python 3."
4082680,4083120," There we go."
4083120,4084380," So, you see, I'm using Python 3."
4084380,4087400," How do you fucking program in Python 3?"
4087400,4089300," So, I remember there was this shit."
4089300,4094800," If name equal, like, main."
4095940,4098260," Right, you just do something like that."
4098260,4098620," Print."
4098620,4103220," Hello world."
4103220,4105720," No semicolon, of course."
4105720,4109120," So, let me change the title."
4109120,4110500," Event of code in Python."
4112720,4113320," Yes."
4113320,4114800," Okay."
4114800,4116760," So, hello world."
4116760,4121300," And I think I want to add executable thing here."
4121300,4122780," Okay."
4122780,4124260," It said hello world."
4124260,4130320," I know that they're supposed to use, like, maybe something like IPython, you know, for this kind of shit."
4130320,4134460," IPython."
4134460,4135140," Do I have IPython?"
4135200,4136200," I don't even have IPython."
4136200,4136960," Get welcome there."
4136960,4139340," I can install IPython."
4139340,4140860," Ah, whatever."
4140860,4142120," I'm going to just use Python 3."
4142120,4144380," Yeah, I'm going to use Python 3."
4144380,4145420," All right."
4145420,4149180," So, this is me, for the first time, looking into that problem."
4149180,4150220," Never looked at it before."
4150220,4152820," And let's just go there."
4152820,4153460," PyCharm."
4153600,4159660," I'm incapable of streaming and using JetBrains IDs simultaneously."
4159660,4160800," My stream will die."
4160800,4162560," So, I'm sorry."
4162560,4164360," I'm on a potato laptop."
4164360,4166720," So, custom customs."
4166720,4167720," Okay."
4167720,4173720," As your flight approaches the regional airport, where you will switch to a much larger plane,"
4173720,4177520," customs declaration form are distributed to the passengers."
4177520,4179900," Okay."
4183220,4188640," Customs declaration is a form that lists the details of goods that are being imported or"
4188640,4190580," exported when a citizen..."
4190580,4191360," Oh, yeah, I know."
4191360,4192780," It's like a..."
4192780,4196320," So, it's export and..."
4196320,4196880," Yeah, okay."
4196880,4197280," I see."
4197280,4198960," I see, I see."
4198960,4205400," So, the form asks a series of 26 yes or no questions marked A through Z."
4205400,4211100," All you need to do is identify the questions for which anyone in your group answers yes,"
4211380,4212920," since your group is just you."
4212920,4216340," What the fuck is me?"
4216340,4222660," What the fuck is me?"
4222660,4222960," Okay."
4222960,4226440," That..."
4226440,4227240," Okay."
4227240,4228640," That's a little bit painful, but okay."
4230120,4235280," However, the person sitting next to you seems to be experiencing a language barrier and asks"
4235280,4238120," if you can help for each of the people..."
4238120,4238760," Oh, in their..."
4238760,4239020," Okay."
4239020,4239360," Okay."
4239360,4245240," In their group, you write down the questions for which they answer yes, one per line, for"
4245240,4245620," example."
4245620,4245920," Okay."
4246800,4252820," In this group, there are six questions to which anyone answered yes."
4252820,4257100," A, B, C, X, 1, Z."
4257100,4258740," Duplicate answers to the same question."
4258740,4260500," Don't count extra."
4260500,4262980," Each question counts at most once."
4263100,4269020," Another group asks for your help, then another, and eventually, you've collected answers for"
4269020,4271860," every group on the plane, your puzzle input."
4271860,4274560," Now, that's what I call an epic data mining."
4274560,4275560," Okay."
4275560,4286020," Each group's answers are separated by blank lines, and within each group, each person's"
4286020,4288220," answers are on a single line, for example."
4288220,4289160," Okay."
4289160,4292280," This list represents answers from five groups."
4292280,4296860," The first group contains one person who answered yes to three questions."
4296860,4297120," Okay."
4297120,4300580," The second group contains three people who combined the answer."
4300580,4301240," Okay."
4301860,4305420," Third group contains two people who combined the answer to yes, blah, blah, blah."
4305420,4305780," Okay."
4305780,4306460," I understand that."
4306460,4309700," In this example, the sum of these counts is 11."
4309700,4315100," For each group, count the number of questions to which anyone answered yes."
4315100,4318320," What is the sum of these counts?"
4318320,4326740," Why is this problem easier to understand and easier to solve than the previous one?"
4331860,4332820," What the hell?"
4332820,4341800," I thought they actually, the difficulty grows, like, you know, linearly, but the previous one"
4341800,4348700," was, maybe something, yeah, the previous one was difficult for me to understand because"
4348700,4349960," of how my brain works."
4349960,4354660," So, that doesn't count because for other people I saw in the chat, it was actually easy to understand."
4354780,4358500," But for me, I have a Pepega brain, so it wasn't easy to understand."
4358500,4359340," Hello, Feng Chi."
4359340,4362200," Hello, hello."
4362200,4363720," Python, is that a kind of..."
4363720,4369220," Ah, it's not that interesting because Python was one of the languages I, like, commercially"
4369220,4370160," programmed in."
4370600,4377900," So, I still have, like, a little bit of leftover reflexes for this language, so it would be more"
4377900,4381420," interesting if it was a completely different language that I have to completely learn from"
4381420,4383680," scratch, but I programmed in Python before."
4389860,4394300," So, how are we going to do that?"
4394300,4398480," Let's actually try to solve that for a single input."
4398480,4400220," So, we're going to have a single input."
4400220,4404480," So, we're going to have a function called yesu, literally yesu."
4404480,4407980," So, what this function does, it takes, like, answers, right?"
4407980,4415000," It takes a list of answers and essentially gives you how many people, like, answered yes."
4415640,4421140," Right, right, the first group contains..."
4421140,4423300," I'm not sure about the third group."
4423300,4428540," The third group contains two questions combined, the answered yes to three questions."
4428540,4431700," A, B, and C."
4431700,4438480," All right, can we just concatenate all of these things and just sort them and remove duplicates?"
4438480,4439600," Is that a thing we can do?"
4439600,4445160," Or one of the things we can do is essentially just put all of the characters into the sets."
4445640,4447680," And count the sets."
4447680,4450060," So, but I don't remember how to work with the sets in Python."
4450060,4453560," So, Python sets."
4453560,4457760," Look at that."
4457760,4460620," W3 schools is actually teaching Python."
4460620,4460940," Okay."
4460940,4464620," So, that means we're going to have this thing."
4464620,4466760," So, type of this thing is set."
4466760,4468340," It's dictionary, though."
4468340,4471060," That's very strange."
4471060,4473200," How can I create an empty set?"
4473560,4475060," How can I create an empty set?"
4475060,4479160," For example, if I do something like this, it's going to be 69."
4479160,4481680," A type of access is a set."
4481680,4483380," Oh, it's just a set."
4483380,4483980," Okay, thank you."
4483980,4484920," Oh, yeah."
4484920,4485860," And, all right."
4485860,4486800," Whatever."
4486800,4489920," So, and type of this thing is going to be set."
4489920,4490200," Okay."
4490200,4492260," Can I insert this thing?"
4492260,4494260," Professional Python developer, by the way."
4495400,4500940," So, you can pop union update, add."
4500940,4501260," Okay."
4501260,4504840," So, we can add 69 for 20."
4504840,4506300," And there we go."
4506300,4507900," You have 49 and 60 for 20."
4507900,4510140," And do I have something like contains?"
4510140,4513840," Maybe it's not that important."
4513840,4515380," Maybe I can take a length of it."
4515380,4515980," Is it possible?"
4515980,4516580," There we go."
4516620,4517880," So, this is actually fucking perfect."
4517880,4521700," So, and can I iterate through the characters in the list?"
4521700,4524100," For example, if I do something like ABC."
4524100,4526480," And then I can print something like this."
4526480,4528880," Oh, that is shit too easy."
4528880,4529280," Oh, my God."
4529280,4530060," Why is it so easy?"
4530060,4530800," I don't like that."
4530800,4531600," All right."
4533900,4537400," So, we can do something like this."
4537400,4538140," This is going to be set."
4538140,4541340," And for answer in answers."
4541340,4542120," Right."
4542120,4544120," For."
4544120,4546800," X in answer."
4546800,4549980," Result."
4549980,4550560," Add."
4550560,4552060," X."
4552060,4553700," Return."
4553700,4555300," Result."
4555300,4555780," Length."
4555780,4557820," Boom."
4557820,4560900," Cool."
4560900,4563780," So, that's it."
4563900,4567580," By the way, how do I load things into the Python?"
4567580,4572760," I think I can just import, like, from main import everything."
4572760,4573360," Right."
4573360,4574480," And then I have yesu."
4574480,4576000," Yesu."
4576000,4580440," And I can have ABC, ABCD."
4580440,4582620," And that will give me four."
4582620,4583060," Right."
4583060,4584860," So, because we have ABCD and stuff like that."
4584860,4586180," That's actually super fucking simple."
4586180,4587820," Okay."
4587820,4589200," So, fast and easy."
4589200,4589860," Yesu."
4589860,4590600," Yesu."
4590600,4593240," Cool."
4593900,4596860," But that's not enough."
4596860,4597920," That's not enough."
4597920,4601360," We need to open a file and read line by line."
4601360,4602840," And then accumulate all of that."
4602840,4603640," And then wait for."
4603640,4604300," Okay."
4604300,4611060," Python read file by line."
4611060,4614320," Read file line by line in Python."
4614320,4616000," Lime by lime."
4616000,4617580," Lime by lime."
4619080,4623400," So, I remember that you can open, yeah, you can open a file."
4623400,4626620," But who opens files like that in 2020, bruh?"
4626620,4628900," Who opens files like that?"
4628900,4631040," You have to open it with a width pattern."
4631040,4631880," Right?"
4631880,4632600," Right?"
4632600,4634300," In 2020, you have to do width."
4634300,4636580," With."
4637400,4639620," No, not like that, but there we go."
4639620,4640600," Input."
4640600,4642480," You can, not go."
4642480,4644940," Fin."
4644940,4647680," So, this is going to be sample."
4647680,4650920," And so, basically, it's like a Python array AI."
4650920,4652860," Python array AI."
4652860,4656440," And then, you can do."
4656440,4659000," Oh, you can just straight up read the lines."
4659000,4659860," Okay."
4660200,4663180," So, I can do fin, read the lines."
4663180,4664940," And I can iterate through all of these lines."
4664940,4665560," So, line."
4665560,4669040," Is it open as fin?"
4669040,4670840," Why not call it a file?"
4670840,4676660," You mean, probably, whatever."
4676660,4678260," Bike shading, by the way."
4678260,4683380," Well, Emacs doesn't like that person."
4683380,4685680," It thinks it's some sort of a keyword or whatever."
4687200,4689540," With open as input."
4689540,4691060," Ah, yeah, yeah, yeah."
4691060,4693100," Is it open as?"
4693100,4694800," Yes, there we go."
4694800,4699400," And I want to print these lines, you know, just to see if all of that works."
4699400,4701140," So, we're going to have a sample."
4701140,4706380," I think yes, it could just be a len set answer."
4706380,4707140," So, you think so?"
4707140,4708480," I'm not sure about that."
4708480,4709580," That's actually very interesting."
4709580,4711960," So, if I have several of these things, right?"
4711960,4714080," Maybe C, A, E, C, D."
4715120,4718340," No, no, no, no, no, no, no, no, no, no."
4718340,4721780," Emacs around files, not a reserved keyword or function in Python."
4721780,4724300," Yeah, maybe."
4724300,4725960," But I already called fin."
4725960,4727420," Whatever."
4727420,4728740," Bike shading."
4728740,4731540," Okay, sure, sure, sure."
4731540,4732480," File, file."
4732480,4733180," Whatever."
4733180,4734400," You happy now?"
4734400,4738240," Do I see Python?"
4738240,4738780," No."
4738780,4739740," This is not Python."
4739740,4740360," This is Go."
4740360,4740420," Go."
4745120,4749840," Sample."
4749840,4756180," So, so, so, so."
4756180,4760120," Where is..."
4760120,4763540," Okay, this is something..."
4763540,4764460," Yeah, Sample2xt."
4764460,4767220," Here is our thing."
4767300,4771220," And the only thing I want to do here is essentially do something like a main."
4771220,4775480," Okay, and I'm sorry."
4775480,4776620," You didn't see anything."
4776620,4777360," I'm sorry."
4777360,4778780," You didn't see anything."
4778780,4779520," Okay, okay."
4779520,4780360," You didn't see anything."
4780360,4781200," All right."
4781200,4782780," So, oh, shit."
4782780,4784180," And it also prints on the new line."
4784180,4786260," God fucking damn it."
4786260,4788020," God fucking damn it."
4788020,4789740," But I wonder if I can do something like this."
4789740,4796420," Just to see if it read anything correctly."
4796420,4798320," Invalid syntax."
4798320,4800000," Oh, yeah, sure."
4800000,4802340," Okay."
4802340,4803680," Uh-huh."
4803680,4805140," Uh-huh, uh-huh."
4805140,4812000," I wonder if I can then essentially just map this entire thing and trim."
4812420,4813760," How do you trim in Python?"
4813760,4815940," So, if you have something like ABC, can you trim?"
4815940,4819140," Trim."
4819140,4821020," So, Google time."
4821020,4822440," Python trim strip."
4822440,4822980," Strip, okay."
4822980,4825920," Strip."
4825920,4826560," Oh, cool."
4826560,4830240," So, I want to map all of that with a strip."
4830240,4831840," I think that will work."
4831840,4834000," Nope."
4834000,4835860," Oh, because it's a method."
4835860,4836880," Lamp the X."
4836880,4838820," Yes."
4842420,4847280," How do you force the iterator?"
4847280,4852540," List."
4852540,4853000," Okay."
4853000,4857120," Because it was not a problem in Python 2, right?"
4857120,4862620," So, in Python 3, basically, any of these generators become sort of like unthunked."
4862620,4865540," Like in Haskell, and you have to force them to evaluate."
4865540,4866600," Yeah, thank you so much."
4866600,4868840," I'm not really getting used to Python 3."
4868840,4870020," It looks a little bit weird to me."
4870020,4871020," Okay."
4871020,4872040," That's actually pretty cool."
4872240,4879420," Yeah, I guess."
4879420,4882900," And let's actually start working on that."
4882900,4888200," So, we have answers, which is going to be a list."
4888200,4893140," And I think if I'm going to just iterate this entire thing, right?"
4893140,4893980," I'm going to iterate it."
4894320,4900880," I don't really need this list thingy."
4900880,4904060," So, I wonder if I can make it a little bit prettier."
4905060,4908300," like this, probably, like this, probably, I don't know."
4908300,4912180," We might as well actually save lines to a separate thing here."
4912240,4920480," Right, we can save lines to a separate thing, so, uh, I can just do it slightly better, like this, uh, lines."
4920480,4921280," There we go."
4921280,4922900," Um,"
4922900,4928520," So, um, so fascinating."
4928520,4932460," Yeah, so this is one of the advantages of Python is that it's extremely concise."
4932460,4939460," Uh, right, and it's like, it's just, you can get in the flow and just dump your thoughts into the language."
4939460,4941840," That's why I think people, a lot of people like it."
4942060,4948280," Once you get used to the syntax and semantic, you can just, you know, zone out and just, you know, dump the code into, into this thing."
4948280,4951780," Mm-hmm."
4951780,4953120," All right."
4953120,4955980," So, yeah."
4955980,4960960," So, is there any easy way to check the, that the line is empty?"
4960960,4963200," Uh, the string is empty, for example."
4963200,4966380," Um, so, wait."
4966380,4970120," You cannot, you cannot do help on a string?"
4970120,4970980," Okay, dammit."
4971820,4976480," Uh, is empty."
4976480,4978680," So, I think we can just do length on it."
4978680,4982400," If len, uh, len line."
4982400,4986520," Uh, if string."
4986520,4987200," Really?"
4987200,4997820," If print, uh, yes, else, uh, print."
4997820,5001160," Uh, how do we do that?"
5001220,5002320," Do we, do we do a semicolon?"
5002320,5003140," I don't remember."
5003140,5004840," Uh, probably not."
5004840,5011800," Uh, I don't remember."
5011800,5012400," I'm really sorry."
5016400,5018740," Okay, so, all right."
5018740,5020460," Uh, that means we can do it like that."
5020460,5025580," If len, um, good size memory usage exactly."
5025580,5032960," If we do have a len, we essentially just add that thing to here, and I'm not sure how to add it to the, to the list."
5032960,5042400," uh can you do do you have you have append so if i do this thing and"
5042400,5057800," okay that works um append line so if it is empty we do yes on the answers and we have to add that"
5057800,5063800," to the final result because we get a sum of these things right so a result initially is going to be"
5063800,5067960," zero so that means it's going to be result plus this i'm not sure if it works there and then we"
5067960,5076400," have to clean up the answers um and after that i'm not sure it just depends whether we have the final"
5076400,5085360," line no we don't have a final empty line which means after all of that we will have to do that"
5085360,5096160," thing yet again uh there we go so and that's going to be a result essentially uh results"
5100960,5105680," is that it"
5105680,5116160," is that it i cannot believe that this is a this is it why is it so simple what the i don't i don't like the"
5116160,5129600," fact how simple it is like really really uh oh why is it so what the why is this so"
5129600,5134800," simple and easy to understand like it's supposed to be okay i already talked about it whatever i'm sorry"
5134800,5144160," i'm a little bit ranty today um okay so uh this is the sample let's go to the input txt let's go to the"
5144160,5152400," input txt and let's get our puzzle input oh that's a lot of shite boom uh"
5153440,5168320," um wait a second i think i have a strange feeling that i might have actually did the"
5168320,5179280," faki waki one more time i want to recopy paste input right and select okay all right okay"
5181040,5183440," not touching the end cool uh"
5183440,5187760," input"
5187760,5193520," okay so that looks good"
5203200,5208960," why is it so easy too easy piece of cake okay continue to part two all right"
5208960,5216640," uh so oh no this is not how you're supposed to do that in fact you have to do it like that"
5216640,5221920," so as you finish the last group custom uh declaration you notice that you misread"
5226080,5244400," one word in the instructions you don't need to identify the question to which anyone answered yes"
5244400,5250080," you need to identify the question to which uh and everyone answered yes all right that's what i'm"
5250080,5262560," talking about so um okay using the same example as above uh okay all right in that in that case"
5262560,5268640," is just like this one is going to be one the first one is one answer yes to three question um"
5270960,5282160," well this is the list isn't uh uh in the first group everyone all one person uh answered yes"
5282160,5289440," just okay i see now uh the second okay so i i understand what's going on here so"
5291280,5294160," um so let's call this"
5294160,5297520," any yes right"
5297520,5301920," uh it's gonna be yes sir any yes"
5301920,5307280," there we go this is any yes and then we're gonna have something like every year so"
5308320,5312240," uh i'm gonna have answers um"
5312240,5319680," yeah so maybe let's actually do something like this uh result"
5319680,5326240," it's gonna be any results and maybe we're gonna have uh something like every result"
5330080,5338960," every result plus every yes so right it's gonna be answers and uh i'm gonna duplicate it like this"
5338960,5346960," and we'll have to uh print any results and then every result right so we're gonna like include"
5346960,5352960," both of the solutions simultaneously here uh this one is gonna return zero for now and we can quickly"
5353680,5362640," even test everything so let me do main uh all right so um now we just need to implement this one"
5362640,5376560," uh should we register for it so in this case what we can do is we can collect them in the map"
5376560,5381920," right we can collect them in the map uh and actually we can collect like a histogram"
5382560,5390720," right um so key is the answer and the value how many people answered uh to to that to the question"
5390720,5396720," yes and then we can iterate through the entire thing and find how many uh are equal to the length"
5396720,5403440," of the answers right so yeah that's gonna be that's gonna be the idea so let's see if it's gonna"
5403440,5410960," work or not um it's gonna be python um but i forgot how to do that so um so we're gonna have access"
5410960,5419040," right and can i do something like a so it doesn't exist but um if i do something like zero and then"
5419040,5427760," plus one uh okay it does exist so i want to have a way to check if something exists or not uh in in a"
5427760,5437360," particular map uh has key okay so i can do something like has key uh python 2 again uh really oh okay so i'm sorry"
5438560,5445520," so uh but i mean i'm pretty sure it's gonna be the same right it's gonna be the same so uh i can do has key"
5445520,5459040," a uh oh okay so it's different uh clear copy from keys how do you check if it contains okay so maybe it is like"
5459040,5473680," that uh really if a oh okay sure um so let's uh whatever let's start doing something like this so"
5473680,5478560," this is going to be a result we're iterating through all the answers all right we're iterating through all"
5478560,5486240," the answers in answer uh then for a single character in an answer"
5486240,5494400," so i'm gonna do that in a very stupid way please tell me if there is a better way to do that so if"
5494400,5504800," result has key uh not has key if x in result we can do result x uh plus one otherwise uh result"
5504800,5510240," emacs uh emacs result"
5510240,5516640," x is there anybody any better way to do that does anybody know anybody way to do that"
5518480,5521520," i don't think so i don't think so i think it's well to be fair"
5521520,5531600," yeah i think i think it's okay um now um can i iterate uh through all this stuff so"
5531600,5543840," okay i have axis and for example if i do a uh 69 uh b 420 and then if i do something like x in axis"
5543840,5550000," and bring this entire thing what it will give me it will give me the keys but what if i have i want to"
5550000,5557120," have like more uh all this stuff to be fair maybe i didn't even need that yeah i didn't even need that"
5557120,5561360," because i need to iterate through the values anyway right so and that means i'm going to do"
5561360,5566320," something like you know what i think i'm going to use a little bit of a list comprehension so"
5566320,5578160," for um x in result values x and i'm gonna sum that up"
5578160,5591120," no then i need to filter them yeah wait a second filter if x equal length of answers"
5591120,5597920," yeah like this this is why i have to do that uh yeah this comprehension and then i can sum it up"
5597920,5601840," right so wait to read through all the values i throw away everything that is not equal to amount"
5601840,5607680," of answers we have here and then i sum everything up okay that looks legit i would say we can even test"
5607680,5618080," it out i think so uh let me try that so it's going python import from uh main import everything so what"
5618080,5621920," what we're looking at is every year soon every year so and we're going to have something like this it's"
5621920,5630640," going to be a uh b and c and i suppose this is going to be zero uh then we can do a a and it's going to be"
5634720,5643920," it has to be length so because"
5643920,5651920," so you the the questions to which yes it has to be length"
5653280,5654240," uh"
5654240,5664240," uh i think cool i want to test that on the sample just to ensure that i didn't understand everything"
5664240,5670400," correctly so this is going to be the sample right so let me try to run it on the sample and it is in"
5670400,5678320," fact six as we expected that and then i'm gonna do input right and i'll just run it on an input and i"
5678320,5684480," think this is the final result let's see if i didn't do any fakie wacky and there we go solve the first"
5684480,5691520," frame cool um who's a gut cooler here who's a gut clearer"
5695280,5697680," all right that's pretty cool um"
5697680,5704000," so yeah but but i'm not gonna go into the seventh problem i think"
5704000,5709760," i think i'm not gonna i'm not gonna go into the seventh problem uh because i'm just gonna wait until"
5709760,5713840," people solve it and then on the next day tomorrow we're gonna try to solve it as well"
5715840,5722560," so yeah i'm pretty sure i could do this just waiting until uh all of the 25 uh the end of code"
5722560,5725840," problems are available and he's gonna solve them in a single hour"
5725840,5733920," by the way i'm kind of out of the loop uh with competitive programming and uh what competitive"
5733920,5739680," programmers think about uh advent of code because for them this is like a it's not even a piece of"
5739680,5745360," cake it's just like it's like a hello world right compared to to the kind of the solving code"
5745360,5752560," forces is just like yeah uh whatever like do you know anything about that what what people in"
5752560,5754480," competitive programming community think about this thing"
5754480,5762880," hmm we can actually check it out to be fair uh so we can go to the code forces and just see"
5762880,5769200," if anyone is discussing advent of code there didn't talk about it oh okay so maybe it's just not worth"
5769200,5776880," their attention or anything yeah literally nobody's talking about it like okay so there's a lot of"
5776880,5783200," discussions here and in the recent discussions like yeah nobody's talking about that everybody's talking"
5783200,5790240," about ai cup and stuff like that because i recently got a mail about ai cup as well uh but i guess the"
5790240,5795520," event of course is just too easy for them what's funny is that advent of code difficulty is just just"
5795520,5802320," right for me so i'm okay with that this is a no hello hello uh welcome welcome to the gym i know about"
5802320,5806960," aoc because of you yeah it's kind of it's kind of strange i would imagine that for majority of like"
5806960,5816960," reds on code forces it's just nothing but it's fine unless for such a more another as myself okay um"
5820400,5820960," what was that"
5820960,5837120," three tone 37 means what you see is who we are is that what the hell is this is that like some sort of"
5837120,5840480," like an ad sponsor"
5840480,5845600," uh oh it's some sort of okay"
5848640,5854080," welcome to the people-centric company with a positive value strong culture and diversity"
5854080,5863680," uh currently open positions sweden currently open positions in sweden"
5863680,5868240," okay so let's let's take a look at the back end developer in stockholm"
5868240,5873760," so well what do you need to know what do you need to know"
5877520,5881520," live and breathe c-sharp well"
5881520,5888480," i'm not the right kind of person i need that's for sure i'm not the right person"
5888480,5891520," um"
5891520,5901920," okay okay cool so uh did i commit my my my solution i don't think so i think i didn't commit it"
5902720,5911280," uh okay good so this is gonna be that pycash by the way is that like a python 3 thingy i think it's a"
5911280,5919280," python 3 thingy wait a second i know that uh python 2 sheds all over the places with py uh yc"
5919280,5927280," so python 3 now sheds into pycash do i understand that correctly right so it basically puts all the poop"
5927280,5932880," into separate folders so it doesn't spread it all across the it's pre-compiled oh okay um"
5932880,5934880," um"
5934880,5934880," um"
5934880,5939040," imagine dying because breathing stopped for gc"
5939040,5945920," i can do it uh yeah okay so let me actually get to ignore all this stuff and it's gonna be just"
5945920,5952320," pyc and on top of that i probably want to exclude this entire thing"
5954320,5959200," um okay okay okay and maybe i'm gonna also exclude txts"
5959200,5964480," all right"
5964480,5974000," 06 add solution solution for day six"
5974000,5983120," oh by the way by the way chat i haven't showed you so here like this is the void of counter right"
5983120,5988480," essentially it just you know counts how many times i i typed void and void if it's just basically like"
5988480,5995360," a weird weird tick that i have i basically type void from time to time um i added a cool thing i"
5995360,5999840," already showed that on our discord but essentially i did uh uh this thing"
5999840,6003120," ah god damn it"
6005040,6013440," so if you do that very very fast to just show this uh um you know for manual tournament phrases"
6013440,6018160," and stuff like that so it's pretty cool it's like a discord yeah i stole that idea from discord"
6018160,6025520," so yeah but i don't really type uh this thing that often to actually get maybe occasionally when we're"
6025520,6030880," gonna get get like a double void but usually it's gonna be just a regular word and by the way so this"
6030880,6035760," entire program is open source if anyone is interested yeah i just type void because it's the name of"
6035760,6044720," program it counted towards it so yeah uh if anyone is interested how to master python i have no idea"
6044720,6051200," i don't program in python i just solved a one problem in python and i don't know anything about it i'm"
6051200,6057760," sorry i'm sorry really sorry about that sorry so we're not solving seventh okay so enough of advent"
6057760,6064880," of uh advent of code today so today we need to do something else right then we need to do something"
6064880,6073280," else and i was thinking about what to do for a monday and it was a pretty cool idea to continue the"
6073280,6082320," development of a bishop so how about we try to revive this project and start developing it again"
6082320,6089600," so for those who doesn't know ibisp is a very old project of mine of mine it's supposed to be an"
6089600,6099200," embedded lisp so essentially it's a lisp-like scripting language that is a library library it's it's it's not"
6099200,6105120," cochlear by the way it's written in c function you don't know what is ibisp you don't know what is it"
6105120,6111040," why come on you you should know what is the beast i don't know how for how long you watch me but"
6111040,6117840," if you missed the beast you missed a lot so this was one of the projects that i had um okay cool um"
6117840,6126240," yeah so essentially this thing is a library right it builds as a library and if you want to embed"
6126240,6131280," a lisp scripting language in your project you can just link with that library and just call the"
6131280,6139200," functions and you will have like a lisp and you can script your stuff with the lisp so another interesting"
6139200,6148320," thing is that i developed that for my game for my game to script levels and stuff like that and after"
6148320,6154880," some time i had to remove it because i felt like it was redundant but i didn't want to reno remove the"
6154880,6161120," language completely so what i did i extracted that language out of the uh out of the game"
6161120,6168400," into its separate project and then i forgot about it for more than a year because yeah it's it's uh 14"
6168400,6176240," months ago the last change was 13 14 months ago so it's years year old project um and yeah i don't"
6176240,6182240," really know what to do for monday i might as well just continue developing this thing and just get it"
6182240,6189040," to some particular point i completely forgot the the code and what needs to be done for this project so"
6189040,6196080," for me it's going to be rediscovering and relearning this thing yet again um i was even using nix us back"
6196080,6201040," then look at that i have a default with nix uh which i'm not going to use but it's going to stay there"
6202720,6207040," are uh the eb streams documented somewhere no but they're going to be uh they're going to be"
6207040,6213280," documented starting from now on because uh this stream is going to go to youtube on the watts channel"
6213280,6219920," not voids content words on the what's channel but it's going to be available tomorrow because we upload"
6219920,6232240," the uh votes on the next day uh so uh yeah so let's take a look uh do i even have uh ebisp anywhere do i"
6232240,6242480," even have ebisp anywhere so we need to change the title by the way um lisp mc i think it's a pretty good"
6242480,6250640," title look look at that title look at that title it's so small yet so catchy i love this kind of"
6250640,6257520," titles because it just takes like less than a second for a person to comprehend and it contains everything"
6257520,6265360," that catches people's attention oh my god it's such a perfect title i love it so that's a perfect clickbait"
6265360,6267920," so um okay"
6267920,6281680," uh to do to let me see leap in sync haha very funny it contains lisp uh it doesn't catch it i god damn it"
6286880,6293200," well i mean it will catch attention of very specific kind of people let's put it that way uh the kind"
6293200,6296720," of people that i would like to see in my community so that's that's okay"
6296720,6302400," so yeah"
6302400,6305280," uh"
6305280,6310000," new programming language written in c"
6310000,6316480," uh okay okay you guys are actually better at clickbaiting i think this one"
6316880,6319200," um scripting language"
6319200,6329840," well let's okay let's let's leave a lisp and wait for a while and if it's if it's not going"
6329840,6334640," to work i'm going to switch it to scripting language all right so i also need to update the project um"
6335920,6342960," today we are developing uh embed embedded lisp"
6342960,6348080," in c and it's going to be something like source code"
6348080,6351520," hdps github.com"
6351520,6358880," there we go there we go there we go there we go so we also need to call some shite"
6360000,6366880," just put php in the title to reap all the benefits it's it's gonna work only once believe me i'm"
6366880,6372400," streaming for almost five years i'm streaming seriously for three like four years but i'm"
6372400,6378080," generally streaming for five years it's not gonna work it's gonna work one two three times"
6378800,6385920," and then all the people who got click baited to that will recognize my nickname oh this guy is a liar"
6385920,6391360," and they're never gonna click on anything like that after that i know how it works okay so the idea is"
6391360,6399120," that um if you want to click bait you should not lie in your titles you should be always technically"
6399120,6403280," correct right so for example yeah um"
6403280,6408640," so something like scripting language in um"
6408640,6415840," in c it's technically correct because lisp is not necessarily scripting language but it is interpreted"
6415840,6426800," so if people got debated by that it's their own fault right so yeah essentially uh be always technically correct"
6427680,6435120," um anyways so let's actually clone this entire thing let's call this entire thing and see how it works"
6435120,6440320," how it goes uh wait maybe i already have it here the bisp it's clone maybe"
6440320,6450240," all right so uh and let's see if this thing is still built how about that does it still build"
6451600,6460640," it still builds a year has passed and this entire thing still builds how about that can your javascript"
6460640,6467920," do that can you do something like that with the react or angular will it build even in six months"
6467920,6474800," i don't think so this shit builds in a year it will build in five years it will build in 10 years"
6474800,6481440," and i'm pretty sure it will build in 30 years that's how cool it is um yeah"
6481440,6496320," all right all right all right so what's cool about this entire thing look look look look look uh it first"
6496320,6507760," builds a separate library libby bism libby bism right uh and then ripple and uh so this is basically what"
6507760,6513840," you're supposed to use right so this is a library you will link with that library uh and then we build a"
6513840,6521440," ripple as an example how to use that library and that's what you're gonna use uh to test uh your changes"
6521440,6526560," right so once we build all that we can try to do ripple and here's the ripple i wonder if i can do"
6526560,6537600," help uh void variable help uh so maybe you can do something like uh 69 420 and as you can see it works"
6537600,6543840," how about that i wonder if like something yeah we don't have i remember there was something oh there you"
6543840,6553520," go you can take a look at the current scope look at that um oh that's pretty cool um i don't remember"
6553520,6566320," how to define variables but i think it's something like this uh maybe define 69 div var 69 ah god damn it div var x"
6567200,6575680," 69 69 how did you find variables i forgot maybe it's just set yeah you just said it okay so it"
6575680,6581680," automatically says that variable for you and then if you take a look at the scope uh that variable yeah"
6581680,6587920," that variable is available in scope so scope by by itself is a sock so whoever programmed in list before"
6587920,6595920," they know what is a sock thingy yeah a sock so essentially essentially associative list right"
6595920,6607440," associative list where um where's my emacs oh native is essentially uh means that it's a c function when you"
6607440,6615760," call a function that is native to this thing you're essentially calling 2c code right and this particular"
6615760,6621200," library actually enables you with writing c functions and then making them available in lisp and you can"
6621200,6626080," call them from this but you you have to declare them in this very specific way uh and this is what"
6626080,6635600," they are they're native functions if you try to print something uh right print um 69 uh wrong argument it"
6635600,6641040," has to be a string okay that's kind of lame i think this is one of the things we'll have to first fix"
6641920,6650080," right i think it should be anything like any expression uh it depends actually it actually"
6650080,6658880," depends but maybe we should have some sort of like um string thing which accepts anything and just turns"
6658880,6666160," it into a string like any s expression and then you can print it um yeah something like that you also have"
6666160,6674240," new i think you can also quit and it will quit uh successfully okay so um let's see how it goes"
6674240,6681360," uh let's see how it goes it's going to be using ebisp uh let's take a look at the repo the ripple.c"
6681360,6690480," okay so this is how easy it is to uh start working with ebisp right so this is a buffer for reading lines"
6690480,6695600," from the user and that's a special first thing you do you create a garbage collector yes it's it is"
6695600,6701360," garbage collected this language is garbage collected but uh the thing is uh when you're doing that in c"
6701360,6709200," you have to call garbage collector manually from time to time i think unless yeah i think eval line"
6709200,6716320," yeah yeah so essentially it just calls gc collect from time to time like each time you try to evaluate the"
6716320,6725360," line uh it just calls like gc collect uh all right so and then you create a scope right so this is one uh"
6725360,6730080," one of the also important things you create a garbage collector and create a scope then we have a bunch"
6730080,6738320," of loaders like loader functions that load standard library and load ripple runtime so there's a particular"
6738320,6743920," functions that are only available in ripple runtime but not in the standard library so that's basically what it is"
6743920,6748400," so essentially with the data just just loads them into the scope and they become available in the scope"
6748400,6754720," and then we have an event loop uh just a simple event loop uh that reads the line and evaluates that"
6754720,6760560," line right when you try to evaluate that line we have a special parser so which is called a read"
6760560,6767520," expression from a string uh right then we get a parser result and then we evaluate whatever expression we"
6767520,6776160," manage to parse and then we print that expression and um yeah this one is interesting um"
6776160,6785600," yeah yeah so we basically try to parse uh all of the expressions available in a single line"
6785600,6792400," right and uh we always try to collect uh the garbage after we evaluated everything so this is pretty much the"
6792400,6800400," whole the use usage of the library this is the whole workflow right you uh create a gc you create a scope"
6800400,6807040," load some functions into the scope uh you parse the string evaluate the string um and just bring it"
6807040,6812000," and from time to time call garbage collector so you can embed this kind of thing into any pro"
6812000,6816960," a program and uh you're gonna have like a scripting built-in scripting language that is least"
6816960,6823680," um do you support garbage collectors no i don't support garbage collectors"
6823680,6828960," thank you for asking this question"
6828960,6840240," uh okay so all right um so what we need to do here um is there anything interesting we can implement"
6840800,6845200," we can take a look at how garbage collector works yeah we have 25 wishes because i actually imported"
6845200,6852400," all the issues that we needed here uh so flows do we even support floats at all um"
6852400,6859840," do we even have floats it's kind of interesting question but anyway uh so there's the gc"
6859840,6869840," uh and gc collect yeah there we go so and it expects a route right you really need to provide the"
6869840,6876880," route of the gc collect and in case of the ripple the route is going to be the scope itself this is very"
6876880,6886640," interesting uh so since scope is just associative list you can use the scope as the um as the route"
6886640,6895120," what it does it basically uh traverses all of the routes and marks what uh values it visited then it goes"
6895120,6901200," through all of the objects it allocated and removes everything that it didn't visit so it's a very"
6901200,6905600," simple garbage collector and maybe there is a name for this kind of a garbage collector but it's super"
6905600,6911680," simple right you just traverse everything uh like and remove everything that was not visited so that"
6911680,6917040," means it's not it's not reachable it's not needed uh very simple does anybody know the name of this garbage"
6917040,6926400," collector um because i don't really know the names what i do uh mark and sweep really is that how it's"
6926400,6935040," called okay so um the thing is i don't really know any names because i didn't really read any articles or"
6935040,6942400," books i only hear ideas so i overheard somewhere at some point that garbage collector works like that garbage"
6942400,6948400," collectors usually just traverse the expressions mark what they visited and then remove everything that"
6948400,6953600," they didn't visit and this idea stuck with me and then at some time i just implemented this this idea"
6953600,6960960," like that and what's fun is that i heard mark and sweep before but i didn't know that it's that so what"
6960960,6966480," i knew is vague idea that i just implemented here and it works and apparently it's mark and sweep we can"
6966480,6974320," actually take a take a look at it mark and sweep so i just want to verify that it's that tracing tracing"
6974320,6980880," garbage collection okay it's very interesting uh it's a form of automatic management that consists of"
6980880,6985200," determining which objects should be allocated garbage collected by tracing which objects are reachable"
6985200,6994080," by chain okay root and mark and sweep keeps a bit or two with each objects to record if it's"
6995120,7000720," white or black okay so it's a little bit like a modification bark and weep yeah"
7000720,7011280," all right so i suppose i suppose this is what implemented uh to be fair i don't remember if i even"
7011280,7017280," supports full support flows here i have a strange feeling that i do not support them"
7018640,7026400," oh i do support them so there's atom symbol atom integer and atom real and i think atom real is the real deal"
7026400,7031840," um okay atoms don't support floats"
7031840,7036800," oh okay that's a very interesting thing so"
7039760,7051200," 33 33 33 that is really strange ah here is the interesting part here is an interesting part"
7051200,7059520," the uh the issues are completely out of date because they come from a different repo"
7059520,7065280," god damn it so let me take a look at this thing atom doesn't support for atom"
7066240,7068720," i think we already implemented that um"
7068720,7078160," okay const a sex with doesn't handle encoding error system print so i think i want to start with"
7078160,7083920," something simple uh multiplication operation doesn't support floats let's see if we can implement"
7083920,7090000," something like that so in ripple uh also i this is not what i want it i get it"
7090000,7098160," uh zozin ibisp okay so uh i want to also do a row a row wrap do we have"
7098160,7106720," flow we do have what the nice flows by the way yes niche can manage it i i was thinking that i need to"
7107280,7114000," automatically migrate over that at some point but whatever so if i try to multiply these things"
7114000,7123120," together wrong argument type integer p okay so uh it expects integers so it cannot work with them"
7123120,7132240," but if uh it's funny is that it doesn't really tell so this is integer but if the second one okay oh it"
7132240,7142400," even tells which one is uh yeah it's actually kind of cool okay so let's find the move um op implementation"
7142400,7150720," so i would assume that it's located somewhere here so it's a multiplication operation right so it's a"
7150720,7158160," multiplication operation and essentially what we have here yeah this is how we define c functions that can be"
7158160,7165600," callable from uh lisp right they can be called from lisp uh essentially they accept garbage collector and"
7165600,7172080," the scope because they need to interact with the uh lisp runtime i'm starting to like i pass gc and scope"
7172080,7177680," pretty much everywhere it feels like that maybe they have to be combined into a single thing called"
7177680,7184000," something like context right uh something like context and it also accepts the argument as the argument"
7184000,7194320," list so param by the way is really interesting param uh it is a closure sometimes uh for example"
7194320,7200400," it's an additional parameter like in threats like you know how in postex threats in p threats"
7200400,7207280," uh you have uh additional argument that is passed to the threat this is the same thing uh so not every"
7207280,7211920," function you need to do you need to have that but you can put an additional parameter and sort of like"
7211920,7222800," closure so it's very convenient okay um so now uh-huh so we iterate through the arguments so while arguments"
7222800,7231360," are not new uh we check that it's cons p and we extract the uh values out of it and we expect them to be"
7231360,7241280," integers and we just multiply them until you know it works and stuff um i want to have other lisps work"
7241280,7250560," with this so for example in racket right is there any way to check a type of a value in racket nice uh ripple"
7250560,7260000," by the way can you do something like type or type of uh type of doesn't really work but if i do something"
7260000,7265120," like this uh it's gonna be this but if i do something like this it's gonna be this so what i'm thinking"
7265120,7275440," so if one of them is flawed everything has to become flawed right if one of them is not flawed"
7275440,7280240," so maybe this is where uh something like um"
7280240,7285440," non-boxing would be useful you guys know what is a non-boxing"
7287120,7292000," but i'm not sure if the unboxing is used for that but yeah for now we can implement something super"
7292000,7292400," simple"
7292400,7307760," lang okay can i do that in ripple though uh lang typed uh racket is that a thing i can do no uh because"
7307760,7315680," you probably have to pass a special argument here right uh for the language right so and of course it"
7315680,7322320," doesn't really tell me because i have to do help of course everything is so inconsistent so this directive"
7322320,7328400," works in file but of course it doesn't work in a ripple so we have a different way of doing that"
7328400,7335280," so it creates frustration and i wish things were a little bit more consistent but they are not unfortunately"
7336240,7344400," okay okay do you do you have to provide lang uh set slang uh there's uh no type of because racket uh"
7344400,7351200," us use dynamic and uh latently typed uh dynamically elately"
7351200,7356080," okay i don't know what is latently type"
7356080,7361120," that's a very new word for me let me take a look that's actually very interesting thank you"
7362240,7366720," uh refers to type system where types associated with the rules and not variables"
7366720,7378000," okay so an example uh scheme this typically uh requires runtime time checking and so commonly used"
7378000,7385680," phenomenously with dynamic typing how is that different uh from python for example right"
7386800,7392480," so if i want to check the type of a of a variable i want to check the type of the value of that variable"
7392480,7399760," so i mean i don't understand the difference between dynamic typing and latin uh latin"
7399760,7410720," but maybe i'm done anyways we need to solve this um we need to solve this and essentially if one of them is"
7411440,7416480," we need to solve this um um we'll have to do something about that"
7416480,7426080," the easiest thing to do in this particular situation and uh coincidentally the dumbest thing to do"
7426080,7435440," uh is to calculate everything in floats all the time this is really dumb but yeah"
7436080,7443040," um right calculate everything in floats is uh okay so it's car in an integer"
7443040,7445840," um"
7445840,7451600," uh and not real"
7451600,7462400," uh args and we need to create some sort of a problem here uh error here so integer p uh i think i'm gonna do it"
7462400,7467200," like that um wrong argument type uh so what does it accept"
7467200,7469760," uh"
7469760,7478240," okay um so compile grab rn"
7478240,7487600," where is it uh where is it available so it's in an interpreter so it accepts the type"
7489840,7495200," okay uh-huh expected type so it's a name of a type"
7495200,7497600," uh"
7497600,7505200," which is okay oh we can work with that i think we can work with that so the type is going to be"
7505200,7513360," uh integer p or real p so yeah this is going to be like sort of the type here uh maybe at some"
7513360,7518960," point we're going to formalize that i don't know um and then we take a num"
7518960,7521840," um"
7521840,7530000," we need to restructure that uh if"
7533440,7534000," this thing"
7534000,7541520," this thing result multiply car cards atom num i'm going to do float on that"
7541520,7546880," otherwise"
7546880,7548800," if"
7548800,7550800," a real p"
7550800,7553280," car"
7555040,7555520," arcs"
7555520,7563120," so maybe i should save car arcs somewhere at some point but what i'll have to do i have to do like a"
7563120,7571280," similar thing here but instead of num you can just use real right and otherwise i can bring this"
7571280,7577120," thing here and just remove that and then just put it like that there we go so uh might as well um"
7577840,7581920," so i don't remember the type of this thing so i'm going to put an integer and i'm going to go"
7581920,7587920," go just car uh and just put it like that so i don't have to do it all the time so because it might"
7587920,7596880," be slow the reason why i'm using integer here is actually pretty interesting because um"
7598880,7601920," the compiler hopefully will tell me what the am i doing wrong"
7601920,7608400," right so uh please tell me what the am i doing wrong please please please um"
7608400,7622000," it didn't tell me what the am i doing wrong because it's stupid okay uh support rational numbers um"
7622000,7628400," i think like it supports only integers and reels whatever whatever that's supposed to mean"
7628400,7631600," so it's type system is not really powerful um"
7631600,7638720," yeah so we support symbols integer real strings lambdas and natives"
7638720,7645600," so yeah the the answer is no um but i mean we only started to develop it again"
7645600,7654720," uh so uh let me take a look at what exactly because it's kind of difficult to know uh what is that so car"
7655360,7658560," so we take the cons of it and we take a console it"
7658560,7664640," uh and we take a car um so where is the car"
7664640,7673200," yeah it's a value yeah okay i'm starting to remember so the value of this thing is an expression"
7673200,7680560," cool uh so i need to go to the standard library there we go so this is basically what it is so it's an"
7680560,7687280," expression and then we can check if it's an integer p or not integer p uh rational numbers oh yeah okay"
7687280,7700400," so fractional you mean okay integer integer p integer p okay cool uh-huh so okay we have different testers"
7700400,7707680," for different kind of things but apparently we don't have a real p uh probably because i introduced real p"
7707680,7714800," recently so integer p so okay so it's going to be a real p it takes the expression"
7720560,7728720," and the type of the type of the item"
7728720,7735920," is expected to be real so this is how we check that so this is seem very simple check"
7735920,7742960," uh so this is an atom and this is real uh and maybe we also need to add all of that"
7744080,7754800," to here so integer p uh-huh simple as that cool does it compile oh look at that i have a separate"
7754800,7757920," compilation speaking of"
7757920,7766960," why a single compilation unit is faster right so because because of that look how much time it take"
7767520,7773600," it's it's it's it's a very small program right it's a very small program look how much time it takes to"
7773600,7782800," build it with a single thread by the way seven seconds and look at the size of this uh this thing"
7788880,7795120," two thousand lines in seven seconds two thousand lines in seven seconds"
7795120,7801760," so for you maybe it's okay but i can show you something else something"
7801760,7807680," something"
7807680,7817440," five seconds okay five seconds"
7818880,7828400," so"
7828400,7834240," so yeah speaking of why single copulation unit is faster"
7834240,7837200," uh"
7837200,7844560," well um minus b was intentional by the way because i wanted full rebuild you know for for the full time"
7846160,7853040," stuff like that uh okay so everything seems to be compiling and now if you try to run something"
7853040,7860800," like this right if you try to multiply 69 by 420 you will get this uh but i wonder if you do something"
7860800,7866480," like 69 69 420. oh it rounds it down"
7868960,7872880," okay so apparently it returns it as an integer"
7872880,7877600," oh and it didn't even complain"
7877600,7882080," all right so yeah so it's supposed to construct a new reel"
7882960,7894560," okay okay that makes sense okay that makes sense why i didn't even complain"
7894560,7902960," that's actually kind of sad that i didn't complain it might be uh like a fault of"
7905440,7907920," um"
7907920,7911920," it might be fold of c yeah that's right"
7911920,7924320," all right and the problem of this entire thing is that uh if you multiply two integers right you get"
7924320,7931120," a float which is not ideal right so i suppose we can do like implicit conversion"
7932640,7937200," um you know between integers and stuff like that"
7937200,7944880," how can we easily do all that um how can we easily do all that"
7944880,7953360," we can uh so this was just a demonstration right this was just a demonstration uh that uh this is one of"
7953360,7958960," the things we can do uh but unfortunately i don't think it's an ideal way of dealing with that at least"
7958960,7964320," for now uh what we can do we can have two versions of the code"
7964320,7972240," you can have two versions of the code the code that works with only integers right"
7972240,7979040," and the code that works with only floats and essentially we can do two passes we can iterate"
7979040,7985120," through all of the values right we can iterate through the values and if we see only integers there"
7985680,8000720," um write a huge transition table that defines what pairs of values convert to which values"
8006160,8011840," the problem here is the problem here is that i will need to have two results here right um"
8011840,8017760," right and i will need to like decide"
8017760,8025200," depending on whether we have one integer oh wait maybe not"
8027680,8031840," maybe not what about just using something like that"
8031840,8046000," integer gc0 and define a binary operation between two numbers that accept either integer or float"
8046000,8054400," yeah i think that's a better idea so essentially we can have something like"
8056080,8059520," uh struct eval results"
8059520,8071920," and so this is the result and we can do mole uh two right um i'm not sure if it needs to accept anything"
8071920,8077360," but it's going to accept it doesn't even need to accept this code because it's not like available"
8077360,8082480," function to the user but what it's going to accept is going to accept just two operations here right it just"
8082480,8090080," accepts two operations uh two two arguments i'm sorry it accepts two arguments and basically uh"
8090080,8096000," yeah instead of this thing we're going to use this thing"
8096000,8101760," yeah that's a good idea thank you thank you on that i think i think that's a good idea so initially"
8101760,8106960," it's going to be integer but then this operation may at some point convert everything"
8108960,8118640," market yes it is mark and sweep uh just see here it is here's the whole market sweep uh yeah so"
8118640,8124720," this is mark and this is sweep so everything before that is just basically preparation for for"
8124720,8130240," for the mark um okay okay cool"
8130240,8141840," um and this is the eval result and it can fail at any point so that would be interesting"
8141840,8153040," okay cool uh so and we don't even need to do anything here that's actually super cool so um results this is"
8153040,8160800," not the results um let's call it accumulator so this is going to be arc uh and then we're going to have"
8160800,8166000," struct eval uh when do you do mark when sweep"
8166000,8168720," uh"
8168720,8178800," i do them simultaneously um you're distracting me from from uh implementation let me finish my thought and then"
8178800,8184640," ask this question again okay uh so because you're trying to switch my constant context please don't"
8184640,8191440," do that all right so results and uh what we're doing here is a multiplication too we already talked"
8191440,8197280," about collection garbage collector before you came in very late i'm sorry that's what you get for being late"
8197840,8206000," um okay after that so this is going to be an accumulator and this is going to be car right so you see i"
8206000,8215520," multiply them together i multiply them together and after that um if result is error right we'll have"
8215520,8219680," to just return this result right so we have to instantly stop everything and we just return that"
8220720,8228800," uh otherwise we do accumulator equal uh result uh expression i think it's expression but i mean the"
8228800,8233680," compiler probably will tell me what's wrong yeah there we go and that simplifies actually a lot if you"
8233680,8242640," think about it so return new would you see here we go so uh-huh that's that's pretty cool"
8246400,8259360," so what does it complain about uh so we don't have new atom as what do you want from me uh okay so and"
8259360,8266960," then so oh it's supposed to be result okay so that means it has to be evolved success yeah it has to be"
8266960,8277120," well success because it is a result so and here is another thing here and here we have to return an"
8277120,8284480," accumulator the error the error messages are actually kind of kind of weird i don't like them"
8284480,8292000," you know what i think for for this thing i'm going to use minus g5"
8295680,8301040," maybe it's going to be faster but maybe at some point i also will have to switch to a single"
8301040,8302160," compilation unit as well"
8302160,8311440," okay cool so everything compiles now we need to implement this thing"
8311440,8320320," if um so we're gonna have like"
8322960,8329760," interesting situation if both of them is integer that means we do multiplication based on the integer"
8329760,8336000," if one of them is float we do multiplication based on the float so that's going to be kind of a solution"
8336000,8348960," i'm thinking what would be what would be the easiest way to approach that what would be the easiest way"
8349600,8355440," what would be the easiest way to approach that because um"
8355440,8358640," uh a"
8358640,8366960," imagine being debated by you know cybrick letters in 2020"
8366960,8368720," uh"
8373120,8375520," so i need to check integer p"
8375520,8380480," and integer"
8380480,8385680," in that case i just do return eval"
8385680,8388800," eval success"
8388800,8391680," integer a"
8391680,8396560," atom"
8398800,8409440," now look at that code chat look at that code right so you see if both of them are integer right"
8409440,8410720," if both of them are integer"
8410720,8414240," uh we just do that"
8420240,8421440," uh"
8421440,8425840," and otherwise we're gonna do the following thing"
8425840,8428800," if"
8428800,8433920," integer p"
8433920,8435520," a"
8435520,8442080," i'm i'm just thinking"
8442080,8449600," float"
8449600,8450000," float"
8450000,8450000," float"
8450000,8456320," a a a is going to be initially zero"
8456320,8466240," b b is initial zero if this thing is that a a is going to be equal a atom number"
8468240,8468720," uh"
8468720,8474080," oh can we have"
8474080,8480320," i have an idea"
8480320,8488320," what if we introduce another function if our results uh to a real"
8490800,8491920," it's too"
8491920,8494640," it's too real okay so it's gonna be gc and what it does"
8494640,8498160," uh we can even call it just real"
8498160,8500160," so essentially"
8500160,8501120," uh"
8501120,8506080," oh yes that's actually simplifies everything so essentially atom"
8506080,8508080," a um"
8508080,8510080," real"
8510080,8512080," right you do real"
8512080,8517600," um and then you take atom real multiply real b"
8518160,8523360," well the problem here is that they return the return result so that you have you'll have to handle"
8523360,8529040," that okay so it's going to be extract evolve result because we're using c uh right"
8529040,8531360," result a"
8531360,8541520," so and if result a is error we'll have to return result a"
8543520,8547360," result a and then struct evolve result result b"
8547360,8553120," real b and this is kind of similar but instead of a we're going to use b"
8553120,8561120," okay cool so and after that we can uh just return evolve success"
8563200,8563600," um"
8563600,8563600," um"
8563600,8565600," real"
8565600,8568000," result a"
8568000,8569280," expression"
8569280,8571120," uh"
8571120,8572320," atom real"
8572320,8574320," multiply by result"
8574320,8579680," now i understand why lisps are so slow but i mean they usually have some sort of a virtual"
8579680,8588800," machine but yeah so essentially um we try to cast this number to real and it's only possible if"
8590080,8596000," yeah this thing is um this thing is um this thing is an integer or"
8596000,8602640," a real right so it's actually pretty straightforward if a is real"
8602640,8606560," you just return it uh"
8606560,8608080," evolve success"
8608080,8610080," you just return it"
8610080,8612640," if integer"
8614320,8618320," if this thing is integer you construct a real"
8618320,8623760," atom num converting it to real"
8623760,8627200," and you return evolve success"
8627200,8631920," otherwise you return wrong argument type"
8631920,8636080," how do you use wrong argument okay"
8638000,8640320," wrong argument type like so"
8640320,8644320," and this thing has to be a real p or"
8644320,8645520," integer p"
8645520,8649680," so this is how we're gonna do that uh"
8649680,8650880," then"
8650880,8653440," yeah"
8653440,8657280," you might as well"
8657280,8663040," well yeah let's just keep it like that so i think this is probably how it's gonna go"
8663760,8664720," uh"
8664720,8667360," uh and let me see if it's gonna compile around"
8667360,8671520," and it doesn't come i can compile because i did a"
8671520,8675120," a real key so uh where is the real p excuse me"
8675120,8676960," um"
8676960,8679520," oh it because it's underscore i'm sorry"
8679520,8682640," in c is underscore inside of like uh"
8682640,8684400," it's supposed to be like that"
8686640,8693600," uh all right so uh what do we have here so here's the orgs and i suppose this is what i have to put here"
8693600,8698400," okay so my phone anything else"
8698400,8706080," uh so what's that uh integer yeah i have to provide the garbage collector now"
8706080,8712960," i have to provide the garbage collector um yeah i also have to provide garbage collector here"
8714240,8715680," otherwise i won't be able to do that"
8715680,8724560," uh i haven't touched this code base for a year as you can notice but i still can navigate in it"
8724560,8730560," speaking of by the way here's the thing so you know people cry oh you won't be able to read"
8730560,8737520," your own code in a month i read my own code in in a year and i can navigate it how do i do that"
8738560,8749680," how do i do that so yeah so the year has passed and i still can navigate in my own code so what's the"
8749680,8757440," secret zozin the secret is even is super simple i treat all the code as someone else code even my"
8757440,8765200," code so what i do is i learn how to read someone else code and you just treat any code as someone else"
8765200,8772320," code so that means that way you will be able to read your code in a year two three ten whatever"
8772320,8777840," because it's just someone else code you learn how to read code it's just a code um"
8777840,8784400," so you see that's that's the secret that's the secret everyone if anyone is interested about it yeah"
8785600,8790480," okay this entire shot compiles uh let's see if it works right so we're going to have a ripple uh"
8790480,8795600," maybe i'm going to do a real wrap right so here's a real wrap and if i do multiplication for 10 and 20"
8795600,8801600," right it is uh that but if i do something like this it is that so it automatically converts everything"
8801600,8808480," thank you then for suggesting the idea so and we can try something like this test yeah and it says a test"
8808480,8816240," real or integer test there we go so uh it even it tells you exactly what kind of type it expects"
8816240,8822480," it's kind of slow like everything here is kind of slow but i guess it's uh it's okay for now um all"
8822480,8828880," right so and that's the implementation and maybe we then later be able to reuse some of these functions"
8829600,8840080," um for something else yeah kind of like it kind of dig it uh so let's remove this entire thing and see"
8840080,8850080," how it goes um yep yep yep yep yep yep yep yep do we have any any tests though or we do have tests which"
8850080,8857680," oh did you guys know we have tests the did you guys know that how do you use them let's actually"
8857680,8870160," find out i forgot about that um so yeah you you can just do tests um oh that's pretty cool so just"
8870160,8878880," test tokenization uh parsing and stuff like that that's a pretty cool um like unit tests yes we do have"
8878880,8887280," unit tests um how can you survive without any unit tests but do we have a ci i think we do have a ci"
8887280,8894000," yeah yeah we do have a ci uh nice you nice you nice you nice you okay so what we're working on is an issue"
8894000,8910960," for uh moon op does not support floats yes it's an issue 14. um okay 14 make moon op support"
8912240,8919280," floats uh reels uh reels yeah let's call them floats and let's just push that right into the repo"
8919280,8931600," right and on top of that i don't remember if we we still use travis oh look how"
8931600,8935040," simple travis configuration is compared to github actions"
8937840,8944560," compare it to github actions um so let's create a pull request to to our own thing"
8944560,8951600," and i kind of want to refactor the build system and make it single compilation"
8951600,8959200," but maybe it's not the time to do it right now because it's not that interesting anyway"
8965440,8970320," okay so this is how much time how much code it took to add support for"
8970320,8973280," these kind of things here"
8973280,8991360," cool does anybody have any questions for like what we're doing right now so somebody was asking about uh"
8991360,8997440," like garbage collector or something okay here's the thing um you're supposed to call um"
8997440,9006880," garbage collector manually uh whenever you want uh you probably have too many assumptions about this"
9006880,9012720," language okay so i have to explain them yet again you should have actually joined a little bit earlier um"
9014480,9025120," this is a library this is not app like a proper language it's a library lisp as a library so it's embedded"
9025120,9033040," lisp it's in the name of this thing it's embedded lisp so you're supposed to integrate that library into"
9033040,9041440," your application to enable uh scripting with lisp so and that's how you work with it right so for example uh"
9041440,9048480," we have a ripple that demonstrates how you you work with it uh right so you organize the loop here right"
9048480,9055680," and you parse the line from the user you evaluate that line and after you've done all that you call"
9055680,9064320," manually garbage collector so from the c point of view you call garbage collector manually whenever you"
9064320,9070640," you think you think is appropriate like for example in case of a ripple you call it uh after each"
9070640,9077840," evaluation it's as simple as that and when you do garbage collection it consists of two steps it traverses"
9077840,9084400," all of the objects starting from the roots and marks everything it visited and the second step it removes"
9084400,9094240," everything it hasn't visited that's it make sense any other questions so this is specific for that project"
9094320,9102560," because of its um technical requirements requirements are it is a library that you can embed in your"
9102560,9110160," project to enable lisp scripting that's why garbage collector is implemented like that in any other lisp is"
9110160,9117280," going to be implemented differently so this is not a universal way there is no universal way of doing that"
9117280,9122320," you have a project you have technical requirements you use your brain to analyze technical requirements"
9122320,9126240," and you come up with a solution so that's very important part does it make sense"
9126240,9135120," okay moving on so hopefully it uh it's still building it's still building"
9137680,9143920," uh sweep you mark from root right and how do you sweep if the reference from root are lost"
9143920,9149120," don't lose them how do you traverse heap and how the objects are in heap are related"
9149120,9159280," well just don't lose the references like i mean if you lose the references to the root"
9159280,9166080," it's a bug in your program like why do you lose them like fix the bug and don't lose your reference from the"
9166080,9173680," root so in our case um root is the scope we have a table that keeps all of the variables in the scope"
9173680,9180000," and when they go out of the scope they become unreachable so they become roots um"
9180000,9186160," i don't understand your question just don't lose the roots i like really formulate your question i don't"
9186160,9194720," understand it i don't know understand which one uh so and also keep in mind i've never read anything on"
9194720,9201680," mark and sweep algorithm i just heard an idea and i just implemented it i don't know the ideomatic"
9201680,9206720," way of implementing mark and sweep to be fair i don't know what it is right i just heard an idea"
9206720,9210800," that you're supposed to traverse the object and remove everything you haven't visited that was"
9210800,9216480," enough for me to implement my garbage collector i don't know mark and sweep i'm sorry uh so"
9217920,9224240," um sorry so maybe i can suggest you just to google up what is marking sweep and read anything like i"
9224240,9228640," didn't read anything on that um so we're waiting for travis"
9228640,9236960," so the job is cute while we're waiting for that um i'm gonna make a cup of tea and maybe somebody else"
9236960,9246800," has any other questions so feel free to ask them but keep in mind that i usually don't read any articles"
9246800,9252240," or books and if you want me to answer a very specific thing with a very specific name name i"
9252240,9257920," probably don't know it uh but if you have any questions on particular ideas on how to do things"
9257920,9265040," we may discuss them um so anybody have any questions while i'm making a cup of tea i'm"
9265040,9275440," making early way by the way if anyone is interested um travis is very takes too much time to the fact"
9275440,9284640," uh maybe we should actually uh spend some time uh moving this entire thing to github actions"
9285600,9290720," because this is unbearable so one of the two things i want to do i want to move this thing to github actions"
9290720,9299760," unfortunately and also uh introduce single compilation units because the the compilation speed is just"
9299760,9320720," right so i'll have to quickly go turn on my kettle so uh and then i'm gonna quickly go back it's"
9320720,9325360," gonna be like a couple of seconds so because just my kettle in a different room and i can bring it here"
9325360,9328320," it's gonna be like a couple of seconds so i'm gonna be like a couple of seconds"
9328320,9329760," like you're gonna be like a couple of seconds so i'm gonna be like a couple of seconds"
9329760,9330640," so i'm gonna be like a couple of seconds so i'm gonna be like a couple of seconds"
9330640,9332320," so i'm gonna be like a couple of seconds so i'm gonna be like a couple of seconds"
9332320,9334320," so i'm gonna be like a couple of seconds so i'm gonna be like a couple of seconds"
9334320,9336000," so i'm gonna be like a couple of seconds i'm gonna be like a couple of seconds"
9336000,9338160," so i'm gonna be like a couple of seconds"
9338160,9339920," so i'm gonna be like a couple of seconds"
9339920,9340960," so i'm gonna be like a couple of seconds"
9340960,9342000," so i'm gonna be like a couple of seconds"
9342000,9343520," so i'm gonna be like a couple of seconds"
9343520,9345120," so i'm gonna be like a couple of seconds"
9345120,9345840," so i'm gonna be like a couple of seconds"
9345840,9356720," back to back"
9356720,9359920," so how is it going is it building anything"
9359920,9362960," it feels like it's not even building anything so"
9362960,9372640," i would really appreciate you if you spoke english i'm not gonna answer questions in russian i'm really"
9372640,9376080," sorry because it's too much work for me to translate them from russian to english"
9376080,9381520," for everyone else to understand uh don't you have a samover yes i do but i don't know how to use it"
9381520,9385600," uh so that's the problem and using it indoors i think it's kind of dangerous because"
9385600,9390560," it's that somewhere where you put like charcoals and sheds i just don't want to"
9390560,9396320," don't want to do that in home um custom channel points i can win um i don't know"
9398320,9404640," okay so that's actually takes a lot of time let's try to spend some time introducing maybe github"
9404640,9410640," actions or whatnot um so i'll have to go to master"
9410640,9414640," uh so"
9414640,9423360," i think people use uh channel points as a match the only time i saw people using channel points is to"
9423360,9432640," highlight this their messages uh is there anything useful for points does it has anyone find anything"
9432640,9437440," interesting to do with points like everything i saw on other channels is just kind of lame"
9437440,9444960," to be fair well except whatever comes with the uh with uh the twitch like flipping emos and whatever but"
9444960,9450160," it's just set it up automatically when you know your current background music i'm just listening to"
9450160,9451600," this thing"
9451600,9454720," i suppose"
9454720,9465520," i saw some funny internet of thing devices i guess i just don't find to be fair there's something wrong"
9465520,9473200," with my brain um the idea of uh you know people typing something in the chat and changing something in"
9473200,9480240," a streamer's environment it doesn't entertain me at all like i look at that and i find it boring"
9480240,9485600," like it's just it's really it's too obvious of an idea like"
9485600,9494240," but there's something wrong with my brain so don't listen to me so it's just like uh i find a lot of"
9494240,9498880," things interesting that are not interesting for the majority of people and the other way around majority"
9498880,9505280," of things are interesting to other people are just not interesting for me so uh there's something"
9505280,9511120," really wrong with my brain so you know just you know that's why i'm so as a social by the way because"
9511120,9519120," because of that i cannot socialize whatsoever uh so yeah i think to me that makes sense is to like"
9519120,9524720," game request or something probably so because the amount of points correlates to how long you've been"
9524720,9528400," watching the stream uh okay so"
9533040,9541200," uh let's set up the uh github thinking so because i want to have a github actions uh that would be"
9541200,9548480," pretty cool not gonna lie that'll be pretty cool so we'll have to introduce workflows right so"
9548480,9555920," introduce workflows i'm gonna copy paste this thing here um so we're gonna build all of that on gcc i don't"
9555920,9566800," think we need to install any dependencies i think uh let me see"
9566800,9577840," so because uh when i'm building ebisp do i have yeah what's cool is that about ebisp is that it depends"
9577840,9588960," only on uh libc so that's pretty cool it depends on the ellipse which simplifies the ci so we do check"
9588960,9596880," out then install dependencies so i can straight up am i in the right place by the way yes so remove that"
9596880,9602240," then we do make and we could do a similar thing for clang i suppose"
9604080,9610800," uh okay install dependencies we don't need to install any dependencies linux clang"
9610800,9620240," yeah so this is mac os uh okay i'm gonna remove that and i'm gonna say something like"
9620240,9630960," to do there is no build for there's no ci build for windows i wonder"
9633280,9636960," if we already have something like that if we already have an issue for that"
9636960,9644400," do we already have an issue for that uh windows no we don't so it's gonna be a new issue whatsoever"
9644400,9644640," cool"
9644640,9652800," so another to do probably that i want to create is that we need to clean up the issue whatever it"
9652800,9662800," doesn't matter nobody cares okay so i'm gonna create actions um introduce git"
9663280,9676800," actions okay okay i think my kettle is ready by the way"
9676800,9676800," you"
9676800,9688800," okay okay so"
9688800,9702240," okay so did i push this yeah i wanted to push to origin"
9704480,9709360," what do you think of setting message of the day for channel points"
9709360,9719360," okay so let's call the pull request"
9728000,9731360," i also need to set up the badge i suppose let's go"
9731360,9742320," so it's kind of strange that it's um look at that speed look at that speed"
9742320,9747280," github action is already done and travis is still waiting disgusting"
9748160,9753920," and we're still waiting for this oh my god"
9753920,9763200," oh my god this is should they just remove travis like if it takes so much time to start up i think"
9763200,9771520," travis just gave up after github introduced github actions they literally just gave up uh and it just"
9771520,9779360," doesn't work anymore so what's up nutrix life welcome welcome to the stream uh i think they literally"
9779360,9785120," just gave up like their entire infrastructure is dead their office is completely empty already"
9785120,9789760," they're just like you know the servers or servers are running on wsl until they until they"
9789760,9792640," run out of money so it's this is dead so"
9795280,9801120," i think this was going on so we just need to remove the the travis build or whatnot just switch to that"
9801120,9807360," uh can i disable this thing somehow i think i have to explicitly go to the travis"
9807920,9810880," but i'm not sure if we'll be able to do that um"
9810880,9814160," travis"
9814160,9816960," ci"
9816960,9819360," travis ci"
9819360,9828640," so i'm trying to sign in with github"
9828640,9836000," is it still working oh i still can i can still sign into into to drive so this service is not"
9836000,9843440," completely dead which is cool but it's slow as so what i want to do i want to disable a specific"
9843440,9851680," project so never build uh that project anymore can i find a piece please is it possible to find the bisp"
9851680,9860240," i didn't have that many projects i mean come on you just need to iterate a couple of hundred entries"
9860240,9864240," and iterating a couple of hundred engines is not that hard for modern computers come on"
9864960,9865920," dude come on"
9865920,9871600," the repo settings will list the integrations"
9871600,9878880," uh all right uh so i remember it was somewhere here is it settings"
9878880,9881520," yeah"
9885040,9910720," uh so uh let me take a look at the actions so and that means maybe i should be able to do travis i'm"
9910720,9918480," normally happy that i have to get rid of travis because uh github now doesn't have any competition"
9918480,9920240," but i mean yeah"
9923440,9928800," so we're doing everything so they're doing everything to make you dependent on github like"
9928800,9935600," fucking everything getting out of github becomes more and more difficult over time"
9937920,9949600," it is what it is it is what it is chat and it isn't what it is is it not i think it is"
9949600,9968400," how is the bisp different from something like janet programming language well there is very huge"
9968400,9983120," distinction i have no idea what the fuck is janet programming language and neither do i care"
9983680,9991200," next question so and i do know what is the bisp because i created it so i think it makes at least"
9991200,9997280," for me a huge difference like it's actually like astronomical difference um something that i know"
9997280,10002560," and created and created and something i've never heard of and it sounds lame the name is absolutely"
10002560,10009680," lame my name is is way better by the way um okay so let me let me see let me see"
10009680,10014160," ibispa the language something is a game yeah"
10014160,10018400," does it make sense does make sense i think it makes sense"
10020000,10030080," uh so introduce github actions all right everything seems to be building so uh did they push the removal"
10030080,10044800," of travis c remove travis yaml and let's just push that right into everything"
10047360,10048080," cheers by the way"
10048080,10054400," okay"
10054400,10063120," so is it gonna restart everything hopefully it will restart everything okay it didn't start"
10063120,10067120," the travis which is which is great um let's wait a little bit"
10073760,10078160," so this is janet lang let's take a look at it"
10078160,10085600," it's a functional and imperative programming language it runs on windows linux mac usb st"
10085600,10091280," the entire language is less than one megabyte you can also add any script into"
10091280,10097600," uh application so the answer is there's nothing special about this language okay"
10099760,10104640," all right cool thank you all right so let's merge that"
10104640,10117600," i stopped developing least 25 years ago you mean this is it still a thing no it's not a thing it's"
10117600,10126560," already dead uh let me show you uh don't don't bother don't bother with this so look look look"
10126560,10134960," this was created 62 years ago right so like it's it's dead let's be honest it's it's dead don't even"
10134960,10140240," bother it's not a thing just move on uh programming javascript this is a good modern language"
10144160,10150640," uh so okay let's actually um"
10150640,10154880," fuck"
10154880,10163600," origin and this is not what i want to do origin master let's remove that uh do i need to i feel"
10163600,10170320," like i want to replace this entire thing yeah yeah i want to replace it and actually"
10171040,10174880," uh force recompilation i'll i'll have to force push this kind of stuff"
10174880,10183040," okay is it is it doing is it doing it didn't update the view i didn't see the view being updated"
10183040,10187920," uh rebase elsewhere replace it on the master yeah yeah there we go i'm gonna force push that right into the"
10187920,10194560," um"
10194560,10207040," why are you so offended welcome to sorting channel i'm not offended by the question all right"
10211840,10218480," new friends on my right uh new friends so okay everything looks okay"
10218480,10231040," so we're waiting for only for mac os we're only waiting for mac os"
10232400,10240640," um and it's almost done it's almost done we also run tests uh we we even have unit tests who'd have"
10240640,10248560," thought who would have thought i didn't know that a year ago i wrote unit tests oh my god"
10250880,10265680," i'm only waiting for mac os uh is it is it done yet or just microsoft being microsoft yet again"
10265680,10273200," no it's still building okay at least it started hopefully it's not gonna error with 500 or something"
10273200,10283600," you know the thing that github actions like to do"
10283600,10292880," build the game yes build the game feel free to submit the poor request that changes that"
10295520,10296640," as soon as soon yeah"
10296640,10307280," dude seriously what the"
10307280,10315040," it cannot build it because it's not a game i know i know why it is like that it is not a game"
10315040,10319600," it is not a game"
10323600,10327840," finally jesus christ thank you so much thank you thank you thank you let's mark this boy there we go"
10327840,10337440," finally uh our multiplication operation supports floats how about that so now uh you should be able"
10337440,10346480," to do something like uh you know multiply 69 69 by 420 420 and that will work but on top of that if you"
10346480,10350080," just have integers uh the result is still going to be integer"
10352560,10358560," um the result is still going to be integer so this is exactly what we added in this pull request and"
10358560,10365920," i'm super happy about that that is amazing cool so let me fetch the other stuff um"
10365920,10371920," so maybe we're going to actually go through the rest of the similar issues because i"
10371920,10378880," saw a lot of other similar issues there um so maybe we can just quickly go through them and"
10380000,10387120," add a similar thing so ctrl f floats yeah plus op doesn't support floats and greater than also"
10387120,10392160," doesn't support the floats we can actually like just quickly go through them and add the support for"
10392160,10414880," so okay so uh okay so uh now i just need to merge origin master and there we go oh okay so yeah speaking of"
10415920,10425680," uh i think you guys were right because uh i think lisp in c doesn't really work well uh so i think the"
10425680,10433200," time has come to finally switch to scripting language in c uh new scripting language and see yeah i think"
10433200,10437920," that would be better okay cool all right so apparently chat is better at clickbaiting well we will find we're about to find out if the amount of views will increase i will admit that chat is better at clickbaiting"
10437920,10447120," apparently chat is better at clickbaiting well we will find we're about to find out if the amount of views will increase i will admit that chat is better at clickbaiting than me"
10447920,10455040," um your tests seem to be slow feel free to submit a pull request that fixes that because the project is open"
10455040,10461920," source the sky is the limit you can do anything it's under mit just go ahead and fix it"
10461920,10468880," the code the code is basically yours absolutely"
10468880,10480080," anyways uh let's continue hello center to one welcome to the stream we are developing lisp how about that did you know that"
10481040,10493600," look at that bro can your c plus plus do that can you see plus plus do that um yeah it can"
10493600,10503280," at least yes that's what we're developing uh okay"
10510560,10517040," was it was it oh no it's 10. dude gillow"
10517040,10528480," you almost debated me uh but didn't really debate but almost almost almost you almost debated me"
10528480,10539840," all right so we need to do the same but with plus yeah here's the problem okay so let's actually take a look"
10539840,10544400," the problem so you can do this kind of right let's still be fine but if you try to do something like"
10544400,10557280," this expected uh integer but got that and that's not way i know that's nobody i know so uh and that's"
10557280,10563120," exactly what we want to fix right now so it's going to be very similar to how we did with multiplication"
10564400,10574240," uh and we even gonna use this particular function so i wonder i think i want to put it somewhere like"
10574240,10580880," at the top so it's available to as many codes as possible so here's the function that is invoked"
10580880,10588400," every time you do plus right it's pretty straightforward function uh so let's implement"
10589120,10595280," this kind of thing like move two but for plus right it's going to be plus two"
10595280,10602400," plus two so if it's two integers we just sum them up without converting them"
10603440,10610080," if it if one of them is float we try to convert both to the float and we're just going to do plus for"
10610080,10619600," that all right so here uh the result instead of being specific integer it's going to be the expression"
10619600,10634000," so we're going to work with um with this expression directly now uh extract uh expression car orgs so"
10634000,10642320," this one is car right and i don't check its type here the the type of this car element is going to be"
10642320,10650480," checked here right and what we do is um by the way i think in the previous function i did what i rename"
10650480,10657680," this thing to accumulator i rename this thing to accumulator and now i have uh eval result result"
10657680,10668080," plus two so i sum up the accumulator and uh car right so that gives me evaluation result so here's the"
10668080,10677840," accumulator so i think initially it's going to be integer initially it's an integer uh dynamically typed"
10677840,10684160," kick i mean it's a scripting language i mean how else do you expect a scripting language being typed"
10684160,10691920," i mean it's don't make sense i'm not developing a programming language i'm developing scripting"
10691920,10697760," language right so when scripting language is like more comfortable to work with if it's dynamically that"
10697760,10708880," um okay so if result is error we're going to return that result so otherwise uh what we're going to do"
10708880,10721520," here is uh we're going to assign the accumulator result expression and then continue after that"
10722240,10724880," we should just return the accumulator i think that's it"
10724880,10734800," i only use uh gc for husky so i can see the scripting language fair enough uh there's also around ghc"
10734800,10744400," uh thing which essentially takes a dot hs file and runs it as a script um i wonder if it can work with"
10744400,10749520," she banks uh i think it should be able to work with she banks but essentially you can write husky scripts"
10749520,10756080," uh let's give it a try so if i try to do something like this uh this is not what i wanted emacs what"
10756080,10762480," the is wrong with you i mean i obviously typed something incorrectly but whatever so put strln"
10763360,10772880," scripting scripting scripting in haskell uh in 2020 character all right so and essentially this is how you"
10772880,10779840," can do that you can do run ghc and it will just run it as a script without compiling well i mean maybe"
10779840,10789520," internally it will compile uh or it's loading package environment it's doing things and i mean it was just"
10789520,10794080," warming up right so the second time is going to be a little faster you see it was it was warming up"
10794080,10799360," right it's warming up the caches and everything like that and the question i have the question"
10799360,10805920," is have does it work with she banks so if i do something like uh user bin environment around gsci"
10805920,10816240," will that work okay that's pretty cool look at that it didn't complain uh did i save the file yes i did so"
10816240,10823280," i'm going to try to do it like that okay so now it is executable and uh then if i try to run this file"
10823280,10828240," it works so you can use uh haskell as a scripting language with shebang and stuff like that"
10828240,10833040," so by using rangers so if you didn't know that this is how we can do that"
10841520,10844880," cool is it not i think it's pretty cool all right"
10844880,10855760," so um all right does it compile let's let's find it out um"
10855760,10864080," make minus b and minus g5 so it should compile probably um it doesn't compile would you look at"
10864080,10869680," that so because i also have to provide the account uh the garbage collector without garbage collector"
10869680,10876800," it's not gonna really work it's not gonna work and it does work okay so the only thing i needed"
10876800,10883600," is a garbage collector cool so now if i run the ripple right it's gonna be like this run the ripple"
10883600,10890240," and i'm gonna do one two three four right and one of them is gonna be this works so it works with both"
10890240,10896400," integers and uh integers and uh real numbers i wonder can you have something like can we have type of"
10896400,10906640," 69 i really want to implement type of that would be super cool that would be super cool type of"
10913680,10922720," okay um let's commit whatever we have here so this was actually relatively fast relatively quick"
10929920,10938320," add floats support to uh plus operation i'm gonna push that right into the river"
10938320,10946480," are you guys ready for a pull request i didn't expect to be so productive"
10946480,10950560," on ebisp today i thought i'm gonna be struggling with the code base"
10952160,10959760," but so far code base is decent enough i would say uh there are a couple of things i mean i had like"
10959760,10967680," kind of a different uh like outlook on programming a year ago some of the solutions uh some of the"
10967680,10976160," decisions that i made a year ago i didn't think they're that great or useful um but overall this code"
10976160,10981680," code base is decent enough i would say obviously i'm biased but i mean i haven't looked at that code"
10981680,10988400," base for a year struggling with their own code base well i struggle with every code base because i treat"
10988400,10991920," them as someone else's code base such is life yeah"
10998800,11007920," okay go um we're ready to okay so it actually is done uh let's merge the pull request confirm the merge"
11007920,11015600," it is support for something i'm not really sure if something is going to have a scripting language"
11015600,11022560," because scripting language just adds too much work because you constantly have to create bindings and"
11022560,11027200," then remove bindings because you want to make a particular logic faster and rewrite it in c"
11027920,11033040," so uh i would just rather prefer to make all of the logic and see and it's not that hard to actually"
11033040,11039840," so the only reason why you would have a scripting language in a game engine is because somebody who"
11039840,11046320," doesn't know a real programming language works on your on your game and to be fair lisp in that case"
11046320,11051760," wouldn't be ideal choice for such people and by these people i mean like game designers and stuff like"
11051760,11057440," that who who can think like programmers but they don't know any programming languages right for them"
11057440,11061120," something like unreal blueprints would be more ideal because they could just you know"
11061120,11067360," dump their logic there and not learn anything at least for non-programmers"
11067360,11073360," yeah i don't think lisp is great for non-programmers to be fair lisp is not great for programmers"
11079520,11086800," lisp is great for recreational programming that's for sure um so i don't know if there's that much lisp in"
11086800,11091920," production oh no no no there is lisp in production there's a lot of specifically common lisp in"
11091920,11099040," production apparently there's like a whole companies whose business is to sell some sort of like"
11099600,11105920," common lisp solutions or common lisp interpreters to like very like few specific companies that still"
11105920,11113520," have legacy code base in common lisp it's so weird like there's like a whole niche in the market for that"
11113520,11115440," and it's really hidden uh"
11117920,11121760," uh i think naughty dog used lisp on crash bandicoot i mean"
11121760,11126560," i don't know did it did pay off"
11126560,11127520," so"
11127520,11132480," just because they used it there it doesn't mean it was a good idea"
11133040,11140640," uh remember me talking about age of empires if i was lisp okay the same question applies to there"
11140640,11147040," was it a good idea so we need to ask the creators of those games and ask them like after so many years"
11147040,11153440," has passed was it a good idea would you you know would you meet your deadlines"
11153440,11159600," easier if you didn't have to deal with that so these kind of questions i mean you can you can like use"
11159600,11164560," whatever you want like anywhere you want but i mean does it really make your life easier would your life"
11164560,11169760," be easy if you didn't do that um i don't know that's a good question"
11169760,11175840," there were interviews they still think it was a good idea well very well then"
11175840,11181200," but was it actually they just made me think that's a good idea was it actually"
11189600,11197280," what's up heroes and blots welcome welcome welcome welcome um okay so uh"
11197280,11204080," don't get me wrong i like this i like the whole idea of lisp um but sometimes"
11204080,11210720," might be not a good idea okay let's merge everything and let's remove that"
11210720,11216400," cool so we need to do the same but for the greater than right so the greater than"
11218000,11226960," um epic games did a good move in that area they firstly write scripts and blueprints so you can"
11226960,11233680," test logic without we compile everything every time and then uh if everything okay they just rewrite it"
11233680,11240240," in c plus plus that's pretty strange can you automate that can you just like compile uh blueprints"
11240240,11246160," to c plus plus in the first place or they're not really compilable to efficiency plus pass it's like"
11246160,11250000," like why do you have to do that manually can't we just automate that um"
11250000,11263360," okay so uh let's do that so here's the simple it's a similar situation right this is the ripple and uh"
11263360,11272320," this thing greater than okay greater than yeah there we go uh it's two one right but if it's a float"
11272880,11280080," it's not gonna work okay uh automated with python yes all right here's this interesting thing"
11280080,11288320," in lisps this kind of comparison operators actually accept variatics variatic amount of arguments"
11288320,11290560," so you can do something like this"
11295600,11302240," not everybody knows that everybody knows that but uh this is not really a grader operator it's a function"
11302240,11311120," that checks whether the arguments are sorted in descending order that's what it is so i will"
11311120,11316560," demonstrate you with the last but i don't have a less support yet but essentially all right so we can"
11316560,11321520," do something like this but you can also add more all more things and what it does it just checks if the"
11321520,11328400," arguments are sorted but what it enables you with it enables you with writing something like this"
11328400,11336960," it's actually amazing uh it's actually amazing because uh like in other languages you will have"
11336960,11341440," to write something like this right which is not particularly convenient but here you just like form"
11341440,11346240," an array of these three elements and you just check if it's sorted and it just looks so natural you can"
11346240,11351760," actually add more things here if you want why not you can add as many things there as you want and"
11351760,11358960," just work so and that's why i like this right so because it just shows you like very this very"
11358960,11365920," interesting syntactical pun uh and it's beautiful sometimes so that's pretty cool"
11372320,11377280," cheers by the way"
11377280,11388320," i'm running out of tea i'm running out of tea"
11388320,11397600," okay so um let me find the greater than again so greater than here doesn't work with floats right"
11399120,11401200," so i'm gonna go just find"
11401200,11410960," works in python cool but i'm talking about this um greater than"
11410960,11414640," cool"
11414640,11422320," um i think we'll need to introduce like greater than two right"
11426560,11430800," greater than two which will compare specifically two arguments there"
11431840,11435360," lisp is dead and buried right and see"
11435360,11442800," right and see right and see right and see right and see"
11442800,11444560," right and see"
11444560,11453680," pascal's not the answer the answer nice accent by the way thank you very much anyway all right so"
11458720,11463520," pascal is not the answer"
11463520,11470400," so greater than greater than if both of these mother flippers are integers right"
11470400,11485040," integer p inter not integer integer a and integer b well we're gonna just compare them then uh return"
11486320,11496960," uh right in c1 in one c you meant one c not c1 or maybe i don't know what you meant i'm sorry uh what"
11496960,11504640," is c1 i only know one c uh and we will have to return uh this one is interesting actually i think"
11506160,11516640," do we have to do you just expose yourself as a non-russian"
11516640,11519920," because any russian"
11519920,11524320," russian would never make such a mistake that's for sure"
11525440,11540240," exposed your western spy okay so we're gonna do here is a atom num greater than a uh atom b atom num right"
11540240,11547280," do we have a function that accepts a boolean and constructs like t or nil"
11548720,11552080," brazilian spy oh you're from brazil i didn't know that for some reason"
11552080,11559040," it's kind of funny how like how many people from brazil we have in the chat but yet according to my"
11559040,11570000," twitch statistics brazil is not the majority of my viewers so it's kind of funny uh i guess like yeah"
11570000,11576640," this i already said that a hypothesis long time ago uh that brazilians are generally very talkative people"
11576640,11580080," and that's why they're uh very visible in the chat usually"
11581120,11587760," um because they're happy talkative people"
11587760,11598880," have stats changed i mean what kinders are on the top we can check it out one more time sure why not"
11598880,11606480," sure why not um i hope i'm not going to expose too much information"
11610240,11617840," uh uh uh the the twitch is slow the twitch is very very slow god damn"
11617840,11624720," channel anal ticks that's what i'm clicking on right now i'm clicking on channel anal ticks"
11624720,11632960," uh happy talkative people well that's the impression of brazilians and brazilians i have"
11632960,11640000," uh unlike russians who are grumpy doomers brazilians are very happy"
11640000,11653200," people this seem to be okay i cannot find it though like where is the stats all right"
11653200,11663120," i think i'm a dummy because i cannot find"
11664960,11666720," okay i think i found something"
11666720,11670320," okay do we have"
11670320,11686880," i think i think i can show this"
11688800,11696720," okay i can show you some stats so on the top we have russia apparently views per location so top"
11696720,11704080," is russia the second place is uh germany the third one is united states it's kind of interesting because"
11704080,11712800," the united states were on the top a long time ago then we have uk kona poland france and only then brazil"
11714720,11719680," but they're so active in the chat that it feels like brazil should be like somewhere up here but"
11719680,11728080," they're actually like here but at least they're top 10. um yeah so that's how it looks like pretty much"
11728640,11732720," yeah if anyone was interested"
11732720,11741520," um you're 24 years folks now yes i suppose yeah that's true uh that's true that's true"
11741520,11749680," italy is last i'm sorry um uk kona mode yes it's actually pretty good i really like this emote"
11751120,11760400," mm-hmm where is belarus well i believe belarusians don't really have much time to watch twitch these days"
11760400,11765920," they have their own problems"
11768720,11771440," those in where is china that's a good question i don't know"
11771440,11784560," okay so this is what we have here uh and i'll have to convert this thing i'm curious if they're"
11784560,11794960," taking ip location or profile data i think maybe it could be it could be a p location yes because they also"
11798000,11805120," they also show ads um depending on your location right so uh twitch can show me"
11805120,11813520," russian ads when i'm using russian ip but if i use like vpn it shows the ads from the country of that"
11813520,11821200," ip of that vpn so i would assume that they use the same mechanism for uh for their statistics as well so"
11821200,11830640," why not it just makes sense um results results okay yeah it shows local ads that's for sure"
11830640,11836720," um to the two so and what i need to do here i need to convert this thing to a real"
11838480,11846480," real trap okay uh results if it is error"
11846480,11859040," return the yeah we might as well actually do it like that return results a and similarly we're gonna have a b"
11861520,11862160," honeybee"
11862160,11866880," all right cool"
11866880,11877840," uh now we're gonna return return evolve success"
11877840,11885600," a atom real oh yeah so i need a function that takes a boolean and constructs t"
11886160,11888720," or something do we have anything like that"
11888720,11894720," oh i i know how to check that uh but i'm gonna do that a little bit later"
11894720,11901760," so let me quickly do something like this because i want this code to compile new gc so i'm gonna just"
11901760,11907600," return new gc uh let me quickly compile i just want to find a function that accepts a boolean and returns"
11907600,11913200," expression uh i wish we had hugo for c um but we don't i think i think we don't"
11913200,11917040," it doesn't forking compile mate"
11917040,11924640," uh what do you want for me control reaches i mean it doesn't"
11928800,11938240," what the f are you talking about dude come on"
11938240,11945360," control reaches the end am i am i a bebega oh yeah yeah am i uh"
11945360,11955600," that's right google for c that would be good yeah that'll be actually pretty cool i'm not gonna lie"
11956320,11958720," uh defined but not used"
11958720,11973440," stop running it with minus b but if i don't do the full rebuild it will cause problems related to"
11973440,11977040," you know recompilation and shit okay"
11982560,11986800," no i'm gonna run it with minus b i'm sorry because i've been beaten by the incremental"
11986800,11990960," compilation build so many times i just don't trust incremental compilation anymore"
11990960,11998640," like i just don't trust it anymore uh because the amount of times i was just chasing like non-existent"
11998640,12005680," bugs is just insane uh so i'm really sorry if that triggers you but it is what it is so what i was"
12005680,12014400," trying to do here is um xper h i want to update this thing and go through all the places where it fails"
12014400,12019440," and i want to see oh wait i think i saw it condition"
12019440,12025040," found it this is exactly the function i was looking for"
12027120,12031600," the way i found it uh is i knew that that function would use t"
12031600,12037200," let's find all the places where you see grapping t is pointless because it's a single character let's"
12037200,12044640," rename t to something else so it's called boolean is expression uh and that's actually super convenient"
12045200,12054720," um now i'm gonna go here remove that and um go back to the std and this is what essentially i wanted to do"
12054720,12058800," okay so this one is gonna be like that"
12061280,12074800," uh so uh boolean as expression yeah so we have a condition you turn it into expression at least"
12074800,12080720," and then you return it as a result and similarly we're going to have something like this a b atom"
12080720,12089840," real and then boolean as expression boolean as expression all right so let's reveal all of that"
12091120,12096960," doesn't compile because why uh i think i have to provide the garbage collector because it may"
12096960,12106000," yeah it needs to allocate some stuff uh b boolean s expression oh yeah this one also accepts and you see"
12106000,12113520," boolean s okay the only complaint here is that this function defined but not used that's"
12113520,12120880," totally okay don't worry about that don't even worry about that oh okay this one is"
12120960,12130400," interesting so we use void expression of some sort what the fuck why is this so complicated"
12130400,12139040," oh yeah this is because it's kind of pointless"
12139040,12144160," yeah oh i see it now"
12146800,12148880," this this function this this function is completely different so"
12148880,12166000," so because you cannot treat greater than as just like a monoidal thing right um"
12166000,12172160," yeah you cannot do that you have to compare them by pairs and something"
12173120,12175920," uh sorted uh sorted if not sorted"
12175920,12185280," uh so sorted you just return okay we even use this somewhere here"
12198000,12200880," so here we have x1 and x2"
12200880,12208240," so for this one i think"
12208240,12219120," that's how we're gonna do that i think i think i know how we're gonna do that"
12219760,12227200," so this is going to be the result uh struct"
12227200,12233840," eval result eval result and uh god damn it i i noticed how i did void uh unconditionally um"
12233840,12241280," so this is going to be a result and it's going to be greater than two accepts this thing x the one and x2"
12241840,12246960," but x1 and x2 are these kind of values right so this is x1"
12246960,12256480," i'll have to rewrite the whole thing here i think i'll have to rewrite the whole thing"
12259680,12266320," and by the way in racket in racket if you uh call this thing without any argument okay so"
12266320,12272480," arity is incorrect one argument is true and so on and so forth it works for this thing as well here"
12272480,12278000," right so it works with at least one argument i think i need to rewrite this entire function"
12278560,12286720," yeah i think i need to override it uh so the arguments arguments has to contain something"
12286720,12295920," it has to contain a value so all right so we need to implement greater than but from scratch"
12295920,12299280," right so that's what we need to do greater than but from scratch"
12301680,12313120," banana i haven't had a banana for so long i want a banana all right so is uh consp right if this is"
12313120,12323280," not a consp uh args we can do something like return wrong wrong argument type um so when i use the wrong"
12323280,12330720," argument type how do that i provide gc and i'm going to provide cons p uh for the args"
12331680,12337200," all right otherwise uh we're gonna do extract um"
12337200,12344480," same but i hate bananas well it's it's kind of interesting there's like whole huge category of"
12344480,12352400," people who don't like bananas uh there's a lot of them actually so it feels like sometimes it feels"
12352400,12359120," like i would say the third people i've met don't like bananas but two-thirds do like them"
12361360,12363760," and that's very very interesting i think"
12363760,12369040," but i do like bananas personally"
12369040,12374880," okay so we're gonna have x1 here and this is gonna be just a car of orgs"
12374880,12383520," uh and then um i think we should be able to do something like cdr awards"
12384400,12396560," oh this is gonna work so i have this thing first here um and also we keep boolean sorted so initially"
12396560,12405040," it is true so initially this entire thing is sorted and while the argument list is not empty"
12407200,12412160," and sorted we keep doing this thing we keep doing this thing yeah we keep doing this thing"
12412160,12423040," so then uh we're gonna do oh this one it has to be a struct uh expression so another expression is"
12423040,12429840," going to be x2 and it's going to be again car orgs so this is the second except expression"
12431600,12438240," and this is where we're gonna do um greater than two which accepts gc"
12438240,12448400," x1 x2 and it returns us a val result right and of course if the result"
12448400,12455520," is error we have to return that result so this is such a common pattern i might as well"
12457040,12468000," uh turn it into some sort of a macro right unwrap um unwrap a result right so it accepts the result and"
12468000,12482160," essentially uh if result is error return result so something like this um i mean yeah"
12486160,12496320," do we need this command uh i can edit"
12496320,12510800," okay so uh here's the result uh greater than okay and then uh we can check if it's new result expression"
12513040,12521680," sorted equals sorted like this and after that uh x1 becomes x2"
12521680,12528400," and orgs becomes cdr"
12528400,12533680," and then we return eval success"
12533680,12538560," boolean as expression"
12542160,12550160," okay so that's the whole implementation that's the full implementation um when you want to put up"
12550160,12553120," your hands but it just makes break out in gem"
12553120,12558960," i'm not sure if i understand that reference because i'm not following conversation in chat"
12558960,12565760," anyways seems to be compiling look at that it seems to be compiling that's pretty cool"
12571760,12578880," i like how straightforward this code is like i'm almost like programming in lisp but in c right"
12578880,12584320," because i just have a loop and this is essentially how i would program in lisp anyway but i just using c for"
12584320,12589520," that because uh we don't have like a complete standard library so that's why i'm using c"
12592240,12599760," okay okay so it seems to be compiling so now greater than should support uh this kind of stuff"
12599760,12606080," do we need to compare all list items if first comparison fails no we don't and that's why"
12606080,12620240," we have sorted here you see um we assume that it is sorted right and then we do a comparison and we end it with the current sorted and on the next iteration that sorted is going to be checked and if it's going to be"
12620240,12627760," checked and if it's going to become false yeah it will evaluate successfully but it will evaluate to"
12627760,12635360," false does it make sense so this is how the whole while is organized so it will stop once it's not considered sorted anymore"
12636480,12644000," um hopefully makes sense but yeah this loop automatically stops if uh"
12644000,12650000," uh if something fails not really automatically it just does this additional comparison here but"
12650000,12656480," uh whatever okay it seems to be compiling let's take a look"
12656480,12664400," uh ripple and uh what else do we have here i'm gonna do a row a row rl wrap"
12664400,12671520," and uh so here we're gonna do one two this is true so i did already did a wacky wacky nice"
12672240,12681840," uh i think it has something to do with the zen then um okay what the excuse me"
12681840,12686800," um where did they where did they up"
12693760,12700400," that's really strange okay where did they up okay so this is a car"
12700400,12703760," then we do cdr"
12705440,12716880," let's move into next one and we do check this thing here"
12716880,12724960," and if it's error i return that then i check if it's no or not and then i apply it here"
12727120,12729200," i don't see the problem so what's what's the problem"
12729200,12732880," maybe i need to rebuild it one more time just in case"
12732880,12738240," and let's rerun it"
12738240,12744160," it does fail uh because it expects this thing here"
12744160,12750880," this is true that's okay this is not correct the question is why"
12750880,12754960," the question is why it is not correct"
12757120,12759760," we can try to debug that maybe at some point"
12759760,12767520," um but i'm not quite sure how they properly debug that uh so it only"
12767520,12776480," can happen if this is gonna be true but it shouldn't be true like no it is not true"
12776480,12781680," so the only reason why it will be true is because here"
12787120,12796480," i don't see the reason so uh we can try to debug that okay so do we build ripple ripple with um debug"
12796480,12802960," oh we don't look at that uh all right so let's build everything with debug information"
12806880,12816400," all right cool so let's rebuild everything from scratch"
12816400,12826000," okay okay okay okay and um let's do"
12828720,12831520," is it still true is it still true that's a good question let me let me check"
12831520,12836560," uh two one oh it's the opposite"
12836560,12848160," okay so it's the other way around but i specifically"
12856960,12865040," what is going on so this is a car this is cdr car cdr x1 x2"
12865040,12870000," then x1 becomes x2"
12870000,12873120," what"
12873120,12880560," is it iterating expression no it iterates it raise them forward like i mean it just unwraps the conses"
12881760,12887600," it just unwraps the cons so that means it iterates them from left to right so yeah so essentially we"
12887600,12896160," just have that one two three and so on and so forth so it will take a look at that thing and then yeah"
12896160,12900640," it iterates it from left to right it's not opposite it will be reversed if it was recursive or something"
12902240,12914400," um this is the correct a b a b greater greater greater where is the mistake where is the mistake i don't see"
12914400,12921280," it okay so let's do gdb um let's do gdb and uh let's do a break"
12922800,12930880," uh right and let's just run it and it's gonna be uh one two a boom to enable cool um"
12930880,12940640," so we can take a look at the a right so what is a a is oh i like how it also shows me that's nice"
12941360,12951040," expression atom okay so and inside of the atom uh what do we have it is atom integer cool it's one"
12951040,12953520," wait a second"
12953520,12958080," what was the original expression i put in"
12958080,12965120," what the what was the i cannot see it um to disable"
12967120,12973520," one two okay so that that is correct that is correct to enable um and let's take a look at b"
12973520,12977680," b it is not a pointer"
12977680,12982400," atom"
12982400,12988240," it is integer so"
12988240,12996080," if i evaluate a atom num b atom num"
12997600,13005840," uh can i evaluate it is it okay whatever maybe something wrong with boolean as expression"
13008160,13017760," because this is true"
13017760,13020640," okay so um"
13020640,13021600," um"
13021600,13026720," okay okay so um"
13026720,13038160," let's print the results there is no error but the expression is atom right expression is atom"
13038720,13042800," so i'm gonna take the expression it is atom uh let's take a look at the atom"
13042800,13048160," it is symbol and symbol is new"
13051760,13057600," is it something wrong with boolean as expression uh boolean as expression"
13057600,13064160," what the hell is going on why did it become new"
13065440,13080480," what the hell wait wait wait wait don't tell me i"
13085920,13094000," i need to check if it's true"
13094000,13096560," i need to check if it's true that means for it to be true it has to be not new"
13096560,13097200," oh my god"
13097200,13100880," oh my god oh it hurts it hurts so much oh my god"
13100880,13104320," oh i'm so dumb oh my god"
13104320,13106240," i'm sorry"
13109200,13116400," uh this is the dumbest mistake i've ever done in my life oh my god okay i'm really sorry"
13116400,13119120," uh yeah"
13119120,13124080," okay let's uh let's take a look at it now um"
13125680,13138640," uh ripple okay and now the one two has to be false to one true then three uh and so on and so forth"
13138640,13144240," right and then you can swap this and this is not sorted okay cool but on top of that the thing"
13144240,13147680," that we added is that now you can work"
13149760,13150320," um"
13150320,13156080," that's interesting actually look at that um"
13156080,13166400," yeah you should be able to work with floats uh but it doesn't work with floats so this is another"
13166400,13172880," problem that we'll have to fix so all of the logic is done here um"
13172880,13177040," i don't know"
13179760,13182880," um not first try yeah yeah it does it's not first try"
13182880,13192160," so is error is error why don't you do that okay so what if it was like this maybe"
13192160,13198000," oh now it is true but if it's like that if it's false"
13198000,13199360," huh"
13199360,13203680," so both of them has to have to be floats"
13205920,13209520," um okay let's try to debug all of that and see how it goes"
13209520,13213600," uh wait wait wait i need a minimal reproducible example"
13213600,13219360," yeah okay so this is a pretty good reproducible example and we can see why it does doesn't work"
13219360,13228880," so um let me try it so it's gonna be gdp ripple and uh i'm gonna break on greater than"
13229760,13238400," two actually uh let's run it and it's gonna be uh 430 okay so let's take a look at what we have here"
13238400,13247200," uh we should skip cool um we can print a so print a is an atom but if you take a look at the atom itself"
13247200,13253120," um this is not what i want i want you to put this thing here it is an integer but if you take a look at b"
13254160,13260560," uh it is real uh it is real so um a is an integer you can clearly see that so here's the integer"
13260560,13271520," uh i mean this right and b is uh real right b is real cool uh after that uh we're trying to convert"
13271520,13280880," a to a real uh and if i take a look at the result of a it is not an error and expression atom"
13282560,13292160," is a real number and real is four uh cool uh then i can take a look at the result b"
13292160,13305760," result b it's false what about atom uh actually expression atom uh it's three cool both of them"
13306320,13318320," are correct where did they make a mistake so an a atom is greater than b atom real where did they make a"
13318320,13327280," mistake i just checked their values they're correct everything's correct okay let's go out and if i take"
13327280,13338560," a look at the result it is atom it is uh wait yeah it's it has to be expression it should be symbol"
13340400,13352400," and it's false why"
13352400,13371120," when you're alone in room full of vip users exactly"
13374080,13382880," okay so that literally doesn't work um that is really strange i don't understand what the is going"
13382880,13393760," and why"
13393760,13404320," because they get converted to this is true"
13406640,13410720," and this is true but if for specifically integer"
13410720,13415600," it just doesn't work like look at that what the hell is this bullshit"
13415600,13425840," what the hell is that because in this particular situation in this particular situation they both"
13425840,13431360," are going to be converted to real i already did gdb it didn't uh okay yeah okay once more time"
13432720,13438080," so it could be only here okay if it's real we just return real if it's integer"
13438080,13444480," we take the integer part convert it to float and construct a real out of it"
13444480,13448480," and just return it what's wrong in here"
13456960,13457600," is"
13457600,13470240," it does so it's something specifically with the first argument uh greater than"
13470240,13476160," here's the first argument so what's so specific about that"
13479200,13485360," oh"
13485360,13485760," oh"
13485760,13485760," oh"
13485760,13487040," this is so painful"
13487040,13491280," uh so did they make that mistake anywhere else"
13491280,13497520," i was comparing the wrong yeah i was literally comparing garbage in the memory"
13497520,13504400," oh my god i'm so sorry uh i think i'm already tired that's probably the explanation when you're"
13504400,13512320," tired you're starting to make mistakes like that yeah uh so essentially they were numbers but i was"
13512320,13522160," treating them as reals so yeah i'm just i'm so sorry chess yeah uh expression there we go"
13522160,13527360," let's try to see that and that should fix the problem that should fix it at least we caught it"
13528880,13537600," at least we caught it so let me see uh what do you think about single compilation unit i use it"
13537600,13544880," not not in this project but i generally use it in my other projects"
13544880,13549760," and it's useful it's it actually makes the compilation fast at least with clang and gcc"
13551440,13556880," so yes everything seems to be working so i'm actually planning to uh you know enable single"
13556880,13561920," completion for this project as well because i mean that will speed it up dramatically okay"
13561920,13568160," so what did we do here uh greater than does not support flow so what's the issue number it's 12."
13568160,13571360," uh okay"
13573440,13582400," so i'm also gonna add gdb uh enable debug info for all the targets"
13582400,13586640," uh okay"
13586640,13590400," 12"
13593920,13609040," add floats support to operation okay and let's push that out into the repo"
13609040,13619840," so the way you have to think about this kind of operators um right so we have something like this"
13620480,13628560," try to mentally like put this operator here and you'll instantly see why it is false"
13628560,13636880," right just try to visualize if you can because not everybody can visualize uh you know formulas in"
13636880,13644560," their head uh but i likely can um so just take this thing and put it in between these numbers and you"
13644560,13648160," will see uh you know the actual results does make sense"
13648160,13654480," it's just a fault well technically it is a fault it's it's another way of thinking about it"
13654480,13656640," um"
13656640,13662480," so uh is it did it create a pull request i didn't think i created the pull request"
13667520,13671520," um"
13671520,13675760," so we probably will have to add"
13675760,13680320," uh more operations to the standard library"
13680320,13688000," i really like how extendable this code base is like i just went back after a year of like hiatus on"
13688000,13691280," this project and i just i did a couple of functions like i improved a couple of functions"
13692800,13699840," because in abysp new is false yeah to be fair in like ebisp a semantic is very close to common lisp"
13699840,13705840," maybe we should change something about that maybe we should introduce like a boolean i think in racket"
13705840,13713600," racket has a separate type called boolean right so we have this and false and nothing else so there's no"
13713600,13720400," such thing right so this is a boolean uh maybe we should also introduce a boolean some yeah that'll be"
13720400,13728560," actually pretty great because the like new and t is very like weekly typed and i'm a big fan of stronger"
13728560,13737680," typing okay um there is but they're they're different types aren't they so so if i try to"
13737680,13743440," for example if i compare t uh and false i'm not sure if it's a correct way of doing that is it equal"
13744720,13756800," uh how do you compare them you can also always undefined this one is undefined it expects a number"
13756800,13768160," so uh is it boolean equal i don't know um so what i was trying to do is to check whether what's the type of"
13768160,13777520," these things because i would imagine that the type uh equal uh okay t f okay so they're not equal but"
13777520,13783280," if you try to do something like that there will be equal so what about c uh and what about this"
13783280,13787360," are they the same uh are they of the same type"
13787360,13795760," it's kind of interesting if you try to compare things like that oh it doesn't care about the type so maybe um"
13796800,13810160," maybe eqv would work it's not l okay and if i try to do five okay rf and ethical this should be i think"
13810160,13819760," they should be very good okay uh i'll think about that uh so i'll think about introducing like boolean"
13819760,13821200," because maybe that would be useful"
13821200,13829760," stronger typing and stuff like that all right so this one is done so let's merge everything"
13829760,13832400," but at the same time i have implicit conversions just kind of"
13832400,13839360," i was talking about only hash syntax so i don't worry about it yeah i was just curious"
13839360,13844880," to try things out um i don't know much about racket even though i programmed in racket like"
13844880,13848800," i prompted a lot of languages and i know nothing almost nothing about all of them"
13848800,13857440," that's the that's the reality of the uh jack of all trades all right so today was a pretty productive"
13857440,13865200," stream i gotta say so we solved two advent of code problems uh and we also revived a very old project of"
13865200,13872320," ours uh ibisp which is an embedded lisp interpreter uh which is essentially like a library right it's a"
13872320,13878960," library you link it with your c or c plus plus project or any project and you get a scripting"
13878960,13885200," language lisp like scripting language um and yeah i wanted to continue developing this thing for quite"
13885200,13891040," some time and now finally have an opportunity to do so so monday is going to be ibisp day how about that"
13891040,13899200," so yeah i think it's pretty cool so um and ibisp actually brings back so many memories when we were"
13899200,13905280," developing nothing and stuff like that so yeah that's cool but unfortunately booze and girls"
13905280,13911520," it is time for me to go thanks everyone just watching right now really appreciate that have"
13911520,13917840," a good one and i see you tomorrow tomorrow according to the skiddle skidoodle uh we're gonna do a rust"
13917840,13924320," development that's right we're gonna continue developing our uh twee framework and rust called rcui so"
13924320,13930800," essentially it's um yeah it's a 2d framework that's pretty much it is built on top of uncursus and uh"
13930800,13937280," we're developing it for other application that we're also developing so this is how it looks like yeah it"
13937280,13943680," looks kind of strange but i mean it's it's rust so you declaratively express uh the ui and you just give"
13943680,13950480," it to the engine and it's you know it does everything for you so also check out our schedule page for more"
13950480,13957040," information on other projects we're working on uh check out our votes channel uh where we archive"
13957040,13961040," all of the streams these streams is going to be there but tomorrow because we archive them on the"
13961040,13967920," next day and also check out our discord server for offline discussion with the community and that's it"
13967920,13982560," what i said for today thanks everyone for watching love you"
13982560,13988320," you"

start,end,text
0,14880," our life for the twitch is being weird again i think i think twitch is being weird again i"
14880,27120," suppose we're alive hello everyone everyone uh yeah is there anyone am i alone do we have anyone"
28640,34720," so looks like we're live so i can see this betrayed thingy so hello everyone and welcome to yet another"
34720,40640," zozin session how about that uh let's make a little bit of an announcement and officially"
40640,52400," start the stream so let me quickly do that uh it's a little bit weird but that's fine so uh red circle"
52400,58880," live on uh twitch right so this is a life on twitch and what are we doing uh today on twitch"
58880,66000," today we're trying uh jai meta programming right so this is like the main selling point of the language"
66000,74320," and i think uh the time has come to finally try that specific feature so we're gonna try it on the"
74320,81440," um i have too many mosquitoes i'm sorry so the mosquito season has started so uh you have to"
81440,88240," bear with me uh fighting with mosquitoes and stuff so we're gonna try to use it on the breakout game"
88240,95040," that we started to develop uh quite recently so and uh i think i have a pretty good opportunity to use a"
95040,99920," little bit of a meta program in there we'll see how it goes i'm not sure if it will work out very well"
99920,105680," because i'm not 100 sure about the available meta programming features and jai so but we're gonna"
105680,113680," learn along the way um so hello hello everyone welcome welcome welcome how you guys doing so let's"
113680,118320," actually fetch the latest stuff so you can find the source code of this thing here uh right i'm gonna"
118320,122880," copy paste it in the chat or in the description if you're watching on youtube at some point in the future"
122880,127680," because i have no idea when i'm gonna upload this thing because i have way too many things in the backlog"
127680,133280," that i need to upload some of them are starting to expire so i have to hurry up to not lose some"
133280,139440," of the votes uh right so some of the words that i didn't upload yet they're already starting to expire"
139440,145840," so they're gonna be automatically deleted by twitch like in a couple of days so i still need to upload"
145840,152160," that backlog somehow and i have to be really careful i just don't want to dump everything at once right"
152160,157360," because nobody's gonna watch that so i have to like slowly upload everything and also need to cut"
157360,162720," everything it's just like it's it's a pain in the ass i'm sorry uh okay so let's take a look at the um"
162720,172720," ji ji break so i have a little bit of stuff in here so and i don't have a repo in here so essentially"
172720,181920," what i need to do i need to clone it so let's go ahead and quickly clone it okay so uh get clone and there"
181920,189280," we go so we're gonna clone everything in here uh i still have nightmares about zig out why do you have"
189280,197600," nightmares i mean it was fine zig is a fine language um all right so let's take a look uh we have the"
197600,204000," fresh ji beta that came out today so i'm using the the new version so let me quickly do that and in new"
204000,210240," new version we still have this kind of situation yeah so i think removing underscore from tokenization"
210240,217120," was kind of a bad idea so probably i don't know i'll uh i'll probably have to do something about that"
217120,224400," at some point uh so compilation if i try to compile this entire thing it seems to be compiling and now if"
224400,230800," i try to run it so this is how the game looks like uh currently right so as you can see i uh changed the"
230800,240160," resolution i added a little bit of um excuse me i'm gonna sneeze excuse me um um added a little bit of"
240160,247280," like coloring and also edit the text so now we have a score and uh there we go let's actually try to play"
247280,252080," uh so this is how the game looks like right now which actually looks quite nice not gonna lie i really"
252080,259920," like this rainbowish uh gradient thingy so and if you put a pause it also says pause in here so it's"
259920,267680," pretty cool um thank you apocryphos for five months of tier one subscription thank you thank you thank you"
267680,273280," oh and by the way off screen i actually fixed the problem with the collision you remember how that we"
273280,281200," had a bug that the ball would penetrate into the into the bar especially if the bar is very very thick"
282080,288080," right so let's actually quickly check it out so i made it way more robust than it was"
288080,296640," right so if i try to demonstrate you that as you can see uh you you can see that as you can see it"
296640,304000," cannot penetrate that and this is because if the bar starts to penetrate the uh the ball it actually"
304000,309920," backed off right so there is some sort of like a you know prevention mechanism from that to happen so it's"
309920,315840," not that noticeable if the bar is not that thick right so but i wanted to come up with the general"
315840,321280," algorithm that works like regardless of the thickness of the bars so i can easily change this parameter if"
321280,327040," i want to and maybe make it part of the gameplay maybe there will be some bonuses that actually make"
327040,334480," the bar thicker for whatever reason if you want to have that um right so and all of that works more or less"
334480,343200," nice okay so and yeah so what we're going to use meta programming for as you can see we have the whole"
343200,350080," configuration section in here and unfortunately right now to change any of the parameters of this"
350080,356800," configuration section i have to recompile the entire program right so and this is not particularly"
356800,362800," convenient because i want to be able to change some of these parameters at runtime without like restating the"
362800,368000," the entire game because maybe i don't want to lose the state of the game so it would be nice if those"
368000,373360," things were hot reloaded but at the same time it would be also nice to have some sort of a the"
373360,380800," um some sort of like a release mode where a hot reloading is going to be removed and all of these constants"
380800,390960," will be baked into the executable and maybe potentially optimized out and stuff like that this is something that i used to do in c games quite often right so i would have a system"
390960,399600," um where i have a custom uh configuration format and then some sort of a meta program a separate program"
399600,408160," that takes this configuration uh file and generate different code um depending on the on the build release"
408160,414160," or debug build and for the debug build it would include hot reloading for the configuration values and for the"
414160,421840," release it will just bake them in so uh i decided to implement to try i don't know how it's gonna go i"
421840,427840," decided to try to implement something like that but for gi for gi uh theoretically you should never"
427840,432320," create a separate meta program you can just do that from within the program itself"
432320,441600," i'm on 25 yes i am on 25 so this is the latest one uh so the one that just came out today oh by the way"
444160,453120," change log of the of today's beta uh let me take a look so the change log and uh somebody actually"
453120,460000," added more examples for enumerations i don't know if if that was somebody who watches my streams because"
460000,464080," as far as i know john is not the only person who works in this compiler maybe it was one of the"
464080,470560," developers but thank you so much right and the examples that were added actually answer my questions"
470560,477920," about how to work with enumerations so thank you so much uh i don't know if it's because of me or maybe"
477920,484400," something else but that was actually very useful so specifically uh these things right in enumeration"
484400,490560," basics and they demonstrate how you can get the enumeration values all of the enumeration values all"
490560,496000," of the uh in the enumeration range like low and high all of the names and this is just an example so thank"
496000,508880," you so much yeah so and this is kind of annoying i suppose i'll have to go and maybe um uh get back"
508880,517440," that underscore thingy even though i was so enraged by it um so i think i need to bring it back because"
517440,522800," this sort of highlighting is so annoying but i don't really know why it is so dependent on highlighting"
523440,532400," so i would expect yeah we'll see we'll see we'll see so what kind of keywords do we have so this is"
532400,541840," joy keywords uh okay anyway so let me restart that responsive community yeah all right so to be able"
541840,547920," to do what i'm planning to do we need to understand how meta programming works i looked into how people do"
547920,553680," meta programming and ji right so there's a lot of examples and stuff like that so and the usual"
553680,559440," pattern that i already i noticed i already talked about it is that uh quite often there is so-called"
559440,568560," first.ji file which doesn't contain any main and it sort of like becomes the build file right so um and"
568560,574000," essentially it's just like a script um and what you're supposed to do in this file you're supposed to"
574000,581040," use run directive right set up everything set up some compilation parameters and then add a build file"
581040,586880," into the current compilation and then it will just build your final executable you can provide the"
586880,592240," uh executable somewhere in here and there you go so this is basically the meta program"
592240,600800," so and um what's interesting is that you can do all sorts of cool stuff uh within that meta program right"
600800,607360," because you sort of like inject yourself into the compilation loop right so because there is a function"
607360,612960," called compiler begin intercept right as soon as you sort of intercept the compiler you can start your"
612960,619840," your own event loop and you can wait for the compiler events for the compiler messages and there's a"
619840,625440," lot of different messages you can receive right so in here we pass the message into the build steps and in"
625440,632480," build step we can have a message type checked right so something got type checked and uh if we want to"
632480,638960," handle something on when something got type checked we we can do that right so and you can like check"
638960,645040," different things in here this is actually kind of amazing right so essentially you just if you want to"
645040,650800," intercept the compilation loop you can do that and you can start receiving the messages from the compiler"
650800,657120," and as you receive those messages you can actually generate more code for the compilation so this is"
657120,663600," actually kind of amazing it's a very interesting uh approach to the to the meta programming i really"
663600,673280," like it uh compiler callback no this is not a callback that's a thing this is not a callback uh you start an"
673280,679120," actual event loop and you wait for the for the compiler messages an event loop is actually blocking"
679120,687280," which means that you are running in a separate thread right so probably you this meta program"
687280,693040," and the actual compiler are in separate threads and you're sort of waiting for the messages like you know"
693040,698160," in in go channels if you want some sort of analogy right and you receive those messages and you just"
698160,705440," handle them right uh you just handle them that's actually pretty cool um i know how exactly it works"
705440,711760," maybe it's not a separate thread but uh because if it's interpreted it is not necessarily has to be in"
711760,718480," a separate thread right maybe there is something that sort of like uh intercepts the uh the bytecode"
718480,723520," execution or something like i don't know uh i don't know how exactly it works but it's actually pretty"
723520,732640," cool um so let's actually start with something super simple uh there is examples uh for meta programs"
732640,741040," right so maybe how to uh meta basic meta program okay so we have basic meta programs the main program"
741040,748560," is the target which says hello sailor and there is a first.j file which is supposed to compile this"
748560,755600," entire thing right so here we have a build function which is then executed through run right but you do"
755600,763200," not necessarily have to do it like that right so you can actually do that way simply so jai break uh let's"
763200,773040," go to j break and let's create first dot j so instead of doing something like build uh this and then run"
773600,780880," build what i saw people just do uh things like that right so you can just specify the block and it will"
780880,789680," just run that block for you um which is i think more convenient if you're making some sort of a build um"
789680,797040," build scripts and whatnot so uh to use anything related to the compiler you also have to uh include the"
797040,804560," compiler so we're going to include compiler and basics uh right so if i understand correctly so let me"
804560,810400," actually try to run that specific script right so let me try to run this specific script it's been jai"
810400,819840," and i'm going to do first jai so it will complain uh about the lack of an entry point right so complain"
819840,826560," about the lack of the entry point because it doesn't have a main right if you provide the main it will do"
826560,833440," nothing right we can actually make it do something uh right we can say something like this and then we"
833440,843120," can say uh hello from the build script right hello from the build script we can run that and as you can see"
843120,850000," it says hello from the uh build script and only then it runs the linker and then it creates an executable"
850000,855920," but it creates the executable for the first program uh for the for the build itself right it's not"
855920,864480," building our jai dot jai it's building the build script which is not what we want right we want this to act"
864480,872480," like a script that then builds these things with the parameters we want right but it's not what it's"
872480,880000," doing right now it's essentially building an empty program with this meta program being run as the first"
880000,887120," thing so first thing we want to do we want to tell the compiler okay don't uh generate any executable"
887120,893200," right because we don't want to build this file we want to build this file and the way you say that um"
894400,902080," right so basic meta program in the meta program itself in the meta program itself you basically set"
902080,909920," build options dc and dc stands for during compilation right so set build options during dc we can actually"
909920,916880," take a look at where it's defined so um i think it's somewhere in the modules maybe it's somewhere in"
916880,924240," the compiler uh right yeah there we go so as you can see dc stands for during compilation time and there is"
924320,930400," like a whole structure build options during compile and there's not that many options in there um so"
930400,936640," the most important option here is do output if true make no change to build uh if true if false"
936640,941520," essentially it doesn't produce any executable right or maybe library or anything like that"
941520,945040," so there's a lot of other parameters in here that we don't care about"
945040,952160," uh but essentially we only need to set this thing right so let's go to first here and i'm gonna just put"
952160,958400," this thing in here and as soon as you as i do that the uh the meta program won't care about entry point"
958400,965120," so i should be able to do something like this and notice how it didn't even uh run the linker it"
965120,970240," didn't even run the linker because we said to the current compilation process do not do any output"
970240,978720," right so we set the build options for the current running process right so the the compilation starts from"
978720,984080," here and then we set the option during the compilation so as soon as the compilation finished it look okay"
984080,988480," don't do any output and it's not going to do any output and this entire thing acts like a script now"
988480,994400," right so we still have this executable uh but now if i try to run it it just says hello from the build"
994400,999360," script and it doesn't produce anything so now this entire thing acts like a script essentially"
1000160,1005520," right we disable the output of the executable during the compilation and now this is an interpreted script"
1005520,1012080," kind of so i i wonder if you can go even further and just add a shebang in here right so something"
1012080,1020320," like home streamer opt jai bin jai linux right so you can probably do something like that and then you"
1020320,1026800," can add an executable permissions in here or something like this and now if i try to do first jai it's it's"
1026800,1034160," literally a script which doesn't even produce any executable so right uh which is kind of funny right"
1034160,1042080," so it's kind of a like a very bureaucratic way of defining a script because uh you don't necessarily"
1042080,1047040," have to have a compiler you can just have a basics then you have to use run and you have to say that"
1047040,1054560," you don't want to output and only then you'll have some sort of script um i really like how this language"
1054560,1063680," sort of makes the you know the border between executable like interpreted and compilable like"
1063680,1071600," very very blurry um because like actually like compile time and run time are superficial demarcation"
1072160,1080560," if you even know what i mean so okay you do that but then what can you do in this build script uh so"
1080560,1086240," uh let's take a look at the basic basic metaprogramming right the first thing you have to do you have to"
1086240,1093040," create a secondary workspace i do not necessarily know what is a secondary workspace but i suppose you"
1093040,1099600," start like a second compilation process to compile the other program remember that we uh start this thing"
1099600,1103920," to actually compile a different thing right i think this is how it works"
1103920,1113920," uh were you told that the num how to has been updated to now show how to get the number of the"
1113920,1120560," was it updated because of me i noticed that in the changelog as soon as the new beta came out i"
1120560,1125360," first thing i did i looked into the changelog and then changelog i saw that somebody extended the"
1125360,1131040," enumeration i saw that from the changelog was it because of me i really appreciate it whoever added"
1131040,1135680," more examples to the enumerations thank you so much i really really appreciate that"
1138080,1147840," uh so i saw that we mentioned it in a stream and he went and did that okay thank you thank you so much"
1147840,1154400," it's actually pretty cool because uh now i learned that there is a whole set of functions for enumerations"
1154400,1159760," and i found those functions in the module and now i kind of know what you can do with enumerations thank"
1159760,1164240," you thank you so much this is actually super cool uh rafael lubo thank you thank you so much"
1164240,1167680," um all right that's pretty cool"
1167680,1178640," all righty all righty all righty all righty so yeah we have to start like a second compilation process at"
1178640,1185360," least this is how i understand that right so we have to create a works uh workspace um i still don't"
1185360,1189120," really know what is a workspace but you can create it but you have to create it kind of"
1189120,1199440," okay so here we can say maybe jai break i don't really know what name for a workspace means uh is it"
1199440,1205440," even useful for anything maybe it is useful and it can also fail right so if it fails we're gonna do"
1205440,1214320," something like this okay uh after we created a word workspace we need to set some um build options for"
1214320,1222080," that workspace right there is a lot of build options build options is actually huge structure right uh so"
1222080,1229360," let's take a look at that structure so compiler um i saw the compiler but i couldn't get there so here is"
1229360,1234400," build options during compile time we'll already look into that but there is just build options and here it"
1234400,1242240," is build options right so these are all of the build options that you can set and this is not it because"
1242240,1248560," some of the build options like hidden into nested structures so there's separately llvm options right"
1248560,1254320," so and the lvm options is more things in here right as you can see it's a huge thing but you know what's"
1254320,1260720," cool about that this is what you use instead of the flags in the compiler right so if you take a look at the"
1260720,1271440," um uh at the flags uh right so if you just run uh something like jai dash help uh they even talk about"
1271440,1279520," that so there is a bunch of flags in here not that many right and then uh they say and that's all unlike"
1279520,1284720," most contemporary compilers we don't have a huge number of arcane arguments to control all kinds of"
1284720,1290480," minute things that you have to spend a long time learning about our philosophy is it's much more"
1290480,1296160," effective to do configuration from code where you have a great deal of precise control over what's"
1296160,1302320," happening options can be expressed as easy to understand data structures and so forth to get"
1302320,1308240," started look into the build options in the module compiler build.j or look at the how to program that is"
1308240,1315440," written um yet but will um it is not written yet but will be eventually i think it's already written so"
1315440,1319520," some of that is probably outdated but yeah this is what we're looking at that so the philosophy of this"
1319520,1326560," language is like you have to configure it through the through the structure right so and this structure"
1326560,1334880," is located in the workspace so you have to look get uh build options right so you get this structure and you"
1334880,1338960," get actually a copy of the structure if i understand correctly what's interesting you can actually put"
1338960,1344480," minus one in here which probably maybe indicates the current workspace right but anyway so and then"
1344480,1350080," you can modify the structure and then you have to put it back into the workspace right so you get a copy"
1350080,1354640," of this structure because you get everything the whole state because the structure is very big"
1354640,1361520," you modify some of the fields and you put it back into the workspace that's how we do that if i understand"
1361520,1372720," correctly um hey judging this is me john blow we did not change the documentation because of you it was"
1372720,1378400," always in our plans to document that part of an immersion function this was a simple case of post hoc"
1378400,1386080," ergo propter i don't know what it is but thank you uh john blow himself it's not him actually it's yet"
1386080,1390240," another memer in the chat uh so"
1390240,1398720," is that the same person saying this means all the time or the different different people i'm pretty sure"
1398720,1407680," it's the same person uh john has so many twitch ali associates amazing uh okay"
1411440,1416640," okay it's it's the same person uh some people don't know but they can actually look into the logs and now"
1416640,1422240," i know it's it's the only person it's it's a one man spam okay but but it's funny one it's funny one"
1422240,1430560," all right so uh let me see so this is what we need to do in here so we take uh target options uh and go"
1430560,1437520," in jai break uh i i suppose we can even print them can we we can even take a look at them so we got some"
1437520,1444880," options uh right and let's just like print target options and see how it goes right so we can just"
1444880,1450720," run that and we have undeclared identifier and this is because we have to include the compiler right we"
1450720,1456000," have to include the compiler and there goes so here are all of the uh options right so there's some"
1456000,1462160," machine options i have no idea what that is but it's a huge array of numbers and uh yep that's a huge"
1462160,1468720," structure um okay and what we can do in that specific structure so the first thing we have to"
1468720,1477520," do we have to specify the output executable right so uh target options uh output executable and let's"
1477520,1483200," call it jai break right i don't want to really call it anything else and in here they just set build"
1483200,1488240," options back um okay do we want to configure anything else i don't think so right so let's"
1488240,1495760," actually set it back set build uh options uh target options and we set it back there we go"
1495760,1506480," so after that uh what we have to do we have to add a build file right so uh add build file into the"
1506480,1513680," workspace and a build file is going to be uh jai break jai and there you go so we edit the build"
1513680,1519040," file and as far as i know this is basically it if you don't want to intercept any compiler compiler"
1519040,1524880," messages this is basically it right so you have to create a workspace you have to set some options that"
1524880,1531120," you want you can find options in the compiler itself uh there is a lot of them um so there's an"
1531120,1538000," interesting options in llvm right that i really want to look into but don't really have a enough"
1538000,1544080," knowledge and time right now so i really like this one output llvm intermediate representation before"
1544080,1551520," optimization that's a very interesting one so you can instruct the compiler to actually output the"
1551520,1556720," intermediate representation of the of the program and you can do all sorts of interesting things with"
1556720,1562480," that uh intermediate representation for instance translated to a different bytecode for instance"
1562480,1570640," web assembly bytecode which means through a set of hacks we can compile jai program to web assembly"
1570640,1575440," but i have no idea how difficult would that be because the jai program has like a little bit of a"
1575440,1588560," run time that it expects so it might not work easily um so uh this is something that uh i really want to"
1588560,1595120," look into at some point uh it will be kind of cool to be able to compile jai to web assembly like so"
1595120,1599280," because maybe i want to make uh like have that game um like you know running in the browser"
1600480,1609680," uh to two uh how you made your hair curly uh it's actually curled naturally like i don't know uh it's"
1609680,1614640," kind of funny there's something biological happening with me i don't know maybe i'm getting older but"
1614640,1621120," when i was younger my hair was actually straight and the older i get the more the more curly it becomes"
1621120,1626320," it's really weird i don't know what the is going on uh so"
1626320,1638320," anyway feel so yeah i'm getting old getting tired uh all right so that should be enough right that"
1638320,1645120," should be enough and now if i try to build this into anything it didn't say anything but it's supposed to"
1645120,1654080," generate jai break so let's actually remove the jai break and boom it didn't create a jai break which is"
1654080,1663280," rather strange why it didn't do anything it did it created in the build it created in the build huh it"
1663280,1667280," didn't even run the the thing"
1667280,1677280," said build options at build file i must have forgotten something uh must have forgotten something"
1686800,1697360," did i forget anything so let me try to run it uh like a properly so it's going to be opt jai bin jai"
1697360,1704560," first jai and it still didn't create the output um"
1704560,1710640," output executable okay so let's see"
1712560,1718800," so we created the workspace we set options we get options we set the executable and set build options"
1718800,1725440," back so intercept we don't have to really do that uh compile intercept and then we don't"
1725440,1731520," output anything in the current thing that we build the run but then uh that should be it"
1731520,1736880," time to get old faster yeah"
1741120,1746400," this is sus is that because i set build options at the beginning and not at the end"
1746400,1751760," you set output to false but i set it for during compilation"
1751760,1760320," right and i wonder if it's something that i have to put at the end okay i can try to do it like that"
1760320,1769840," so ice okay so we learned something so basically i thought it will set it for the current workspace"
1769840,1779440," whatever hell that is so it's either the build options are inherited yeah it feels like when you"
1779440,1783920," create a workspace the build options are sort of inherited from the current build options"
1783920,1787760," is that true that's actually very interesting"
1789120,1796480," hmm all right all right all right so that means i will have to put it in here so then it will create"
1796480,1805200," an exception and only then okay or maybe yeah so the build options and build options during compilation"
1805200,1811840," are two different structures maybe build options during compilations are used globally for any builds"
1811840,1818320," for any workspaces and that's why you have to first build and then right before the end of the program you have"
1819120,1821440," an output so it doesn't output so it doesn't output the current file"
1821440,1828000," oh that's a pretty cool that's a pretty cool thing"
1828000,1839120," uh so what's your opinion on kotlin i don't know i have the same opinion on any language on jvm"
1840080,1847280," right so as soon as you make a language on jvm that's it you're basically in your own wall garden"
1847280,1851120," that is very difficult to get out and no matter how good your language is"
1851120,1860640," uh so yeah it's a language for a very specific ecosystem that is difficult to integrate with other"
1860640,1865600," ecosystems you know what i mean like it's just like the language itself doesn't matter you're making"
1865600,1871840," it a part of a very specific ecosystem and that's that you're looking there um so it's not even about"
1871840,1874800," the language it's about like you know the infrastructure"
1874800,1892400," when uh people get older the hair on other head often gets thinner um like each hair is smaller which"
1892400,1895600," can change the texture of the spreading way okay so that actually makes sense that explains it"
1895600,1898720," maybe that's the reason"
1898720,1912000," all right okay and also as far as i know cochlear is implemented in jvm right so yeah"
1916720,1924160," anything on jvm is a huge pain in the ass um okay so we created an executable which is super nice"
1924160,1934400," all right uh you know what's interesting you can add any code any code during the compilation of the"
1934400,1941520," current program so you as you can see you add a build file right you add a build file here let's try to"
1941520,1950640," find the build file in the in the compiler right so on top of add build file you can add build string"
1950640,1960800," you can add build string if provided uh code is done okay so there's something called something for this"
1960800,1967200," code so now let's actually take a look at something interesting so if i go into jai break right if i go into"
1967200,1975520," the jai break and uh let's try to print uh something that is full right so i never defined"
1975520,1980400," foo anywhere and if i try to compile this entire thing it will say and declare identifier foo"
1980400,1990080," now if you go to the build script and right before adding this file you you add it add build string"
1991360,1994640," and let's actually add foo 69"
1994640,2001360," this thing will compile"
2001360,2010240," look so how useful could it be well you can actually add multiple of them"
2010240,2014720," who said you can't add multiple of them"
2017200,2017760," like so"
2017760,2031520," it and you will have 10 constants actually 11 constants right so that means you can have some"
2031520,2035600," sort of turing complete logic that generates these definitions"
2039440,2045440," it's not cool it's not cool it's actually very dumb but yet genius way to do meta programming"
2045440,2054800," furthermore since you can intercept the compiler messages you can generate those things conditionally"
2054800,2061040," so essentially you can loop and you can wait for a specific message for example"
2061600,2069200," a variable was type checked you may look into the variable name and based on its variable name generate"
2069200,2077600," function so for each variable like constant variable that starts with a foo you generate a special function"
2077600,2083600," that does something for that specific variable it is easy to do that because you can just add additional code"
2083600,2085600," right during the compilation like that"
2085600,2088480," isn't that fucking cool"
2088480,2095520," this is dang this is the dankest way of doing this kind of stuff like i've never seen that before"
2095520,2105040," it's like this is exactly how i would do that in c right so in c i would definitely write a separate meta program that generates text"
2105920,2111360," right but here it's almost the same but it's just generated like integrated together"
2111360,2116320," the program that generates more code and the program that compiles the final program"
2116320,2122560," is the same thing they're integrated together and they can actually exchange information with each other"
2131520,2138720," so you know what's funny i tried to actually introduce some uh compilation errors right so you can actually"
2138720,2145280," uh do something like this right you can actually do something like this and uh it's not it uh we have"
2145280,2152640," to probably just do something like this there we go so it's gonna compile and it's gonna work if you"
2152640,2159120," like do some compilation error so there's no semicolon uh it will complain we passed the declaration so we"
2159120,2166240," expected a semicolon after and as you can see it actually uh puts your string into separate file"
2166240,2171840," and i wonder will it create like a file for each individual string i think it will"
2171840,2179760," right i think it will and because of that you are i think i'm pretty sure you are encouraged to actually"
2179760,2186480," do add build file because you can actually basically generate all of that and put all of that into a separate"
2186480,2192400," file and add build file and it's the same add build file as you use for just adding the main thing"
2192400,2200240," uh so it's just like you're using the same mechanism for building the thing and for generating the thing"
2200240,2205440," and then adding it to the final program and it's just like the one single thing you're using a single"
2205440,2234400," so this is this is genius i really like that it's dumb but because it's so dumb it's genius right"
2235520,2241920," um because it's essentially the same thing that people already did in c and c plus walls people"
2241920,2249440," were already doing exact same thing it's just there was no way to communicate between the code generation"
2249440,2254800," and the main compilation process right there was just no way for them to collaborate how and you always"
2254800,2259920," used like a shell script to transmit information from one process to from one phase to another phase"
2259920,2266800," now it's the same thing and they can easily like inter cooperate right so the compiler can actually give"
2266800,2273440," the generator information of what definitions has already compiled and then the generator can give more"
2273440,2279360," code which in in turn can give more events and so on and so forth right so it just creates a very"
2279360,2286080," interesting feedback loop between the code generation and the compilation process right yeah it becomes like one thing"
2286080,2308400," all right so uh let me see so here uh so we essentially created like a simple build right so we created a simple build uh"
2308400,2314480," uh and now to build the program we have to do first jay of course like i probably have to get rid of that"
2314480,2321760," and uh there you go so and it compiled everything so i suppose uh the first commit of today is going to be"
2321760,2329360," like introducing build first jay which is the new thingy uh furthermore uh i think the time has come to"
2329360,2335600," update some stuff in here so what we have to do is just jive first and also i'm using a fresher"
2335600,2342560," beta so let me just check what version do i use so the version is 25 not 24"
2344320,2351920," so it works it is intended to work with the beta 25 like i want to specifically like state on which"
2351920,2356320," beta it works because you may have a different beta so you know which one to use right because"
2356320,2359280," maybe in the future it's going to change so much that it's not going to compile"
2359280,2371840," so uc10 thank you so much for what you want subscription and uh i hope i didn't miss anything"
2371840,2375600," opportunity force thank you thank you thank you everyone who subscribed i really appreciate that"
2375600,2383680," thank you okay so i still learn metaprogramming in jay so i may not know all the things right"
2383680,2394000," okay uh introduced uh first gi build uh problem right so this is a build program i'm going to push"
2394000,2400400," that right into the repo you can find this thing in the uh description right in the description and"
2401200,2408800," uh let me let me see like for anyone who's watching live or who's watching on youtube you can find that"
2408800,2415600," in here as well uh dev lotus thank you so much for twitch prime thank you thank you thank you so maybe"
2415600,2423840," there is more robust way to actually add additional code uh so for some reason i thought that maybe you"
2424720,2431520," should be constructing the ast and then adding those ast to the program but you can actually add them as a"
2431520,2439120," text so if you want to add as a text like more complicated stuff you can use the uh hash string"
2439120,2445360," syntax right you can always just do something like function and hash string syntax is actually kind of"
2445360,2452240," similar to like pearl string syntax there's like a multi-line pearl things uh you provide string then you"
2452240,2458640," provide the end and that is the token that indicates the end of the string so that means here you can"
2458640,2464880," have like a multi-line string that defines something right for instance uh full and you can just write"
2464880,2474000," some code in here right so in here you can do 0 10 and then you can print this thing like so if you want to"
2474000,2483440," right so this is uh this is an entire function and then you can just add build string function like this"
2483440,2488640," right so if you want to have like a whole block you can actually do it like that so which is which is"
2488640,2497280," kind of cool so we can try to do that um all right and in the build uh what kind of strings do we have"
2497280,2502880," so edit strict w3 yeah there we go so it's it's a string that came from from the workspace right so there's"
2502880,2510000," this is this kind of syntax for like big strings um which is super convenient for for example shaders"
2510000,2514560," right so if you want to have a baked shader into the source code you can just write this shader in"
2514560,2520880," here uh which is super convenient as far as i know it is used in the um in the"
2520880,2532000," in the standard library i don't want to call it standard library but in the simp specifically right simp has a bunch of like built-in shaders and they're defined in these kind of strings"
2532000,2540560," right but this is not what we're going to do right now okay so what essentially i want to do as already"
2540560,2549120," said i have a huge um config section right so i want to move these configuration parameters into a separate"
2549120,2556000," file with its own syntax you know what i mean uh right and essentially what i want to do i want to parse"
2556000,2562800," that file at compile time and depending on the mode i want to either either bake those values into the"
2562800,2570480," executable or generate some code that allows you to hot reload these values right so that's essentially what"
2570480,2576480," we're going to try to do so let's go ahead and create the config so it's going to be config how should i call it"
2576480,2587040," um i don't know so params uh config so in here we're going to have fps right so fps is going to be 60"
2587040,2593280," and i'm just thinking how we're going to be determining the types of those things so maybe i'm going to use"
2593280,2600560," a similar syntax like fps you have to uh provide the type in here and then equals and then the value"
2600560,2609120," right and this single line is basically a single um a single configuration thingy right so"
2610320,2620720," yeah we need to parse it somehow so other things that we'll need i don't know things like uh approach"
2620720,2629920," size right things like approach size this one is float and uh this is actually evaluated thing"
2629920,2638400," which is rather interesting right because like who said i can't really take this as an expression"
2640080,2654080," well i don't i can't really easily evaluate that expression or can i is there any way in jay to take"
2654080,2666160," a string compile it at runtime and then well i mean i should be able to i mean is there any way to use the"
2666160,2673360," compiler at runtime that's a very interesting question compiler at runtime you guys thought about that"
2673360,2682400," because i don't want to like write uh try it because but how would you do that how would you"
2682400,2689680," even start the project look i mean i can create a workspace at runtime right you can create the workspace at"
2689680,2694320," runtime but does that mean that i'm uh running the thing"
2694320,2703360," the compiler will be part of the result environment apparently which kind of would like if i distribute"
2703360,2711680," that file would that violate the you know agreement on beta right because i mean"
2714240,2723360," maybe not i don't know okay let me try let me try let me just see if it's gonna work or not"
2723360,2726400," technically the compiler uses the compiler at runtime"
2729680,2737760," so test jay right and essentially what i should be able to do is compiler right so main"
2741120,2749120," and then i'm gonna just like print something like hello sailor that would be interesting if it works"
2749120,2753760," but i have a feeling that it's not gonna work i have a feeling that it's not gonna and declare it"
2753760,2756000," prints and of course i have to do build"
2760240,2767840," and not build basic choose crests okay so it compiles so i can include compiler and now i have a"
2767840,2780400," runtime but then uh can i create a workspace create workspace oh it may fail at runtime saying that i couldn't"
2780400,2788400," create the workspace it may do that and that's why it may file and that's why we check that uh furthermore i"
2788400,2794320," can try to print the workspace right compiler create workspace okay let's see"
2794320,2802480," it compiled but now if i try to run this thing uh okay attempt to call compile time procedure at runtime"
2802480,2811040," okay you you can't do that uh compile time procedure at runtime um and this is because"
2811040,2818080," that specific procedure right if we take a look at optgi module compiler compiler"
2818720,2827360," is marked as compiler right so there is a special marker in here right and i suppose you can't call"
2827360,2833920," any of these functions in runtime i have a feeling that you just can't call them at runtime"
2833920,2838160," um though it still compiles"
2840240,2845200," hmm isn't that interesting i think it's kind of interesting right so you just can't do that it's a"
2845200,2846960," compile time only functions"
2846960,2850480," compile time only functions"
2850480,2852320," okay"
2854160,2864080," so my problem is that something that i had uh with the current way of configuration right with the current"
2864080,2872400," way of configuration is that i had parameters that depend on each other right so we can say bar y"
2873120,2881040," is like that that minus 50 right so which is kind of convenient but maybe some of these parameters"
2881040,2890720," should be runtime parameters always right so target grid x right since it's not um an independent"
2890720,2895200," parameter right since it's not an independent parameter maybe it should never be like that"
2895200,2900720," right maybe in the configuration we always we should keep independent parameters the parameters that don't"
2900720,2906480," don't depend on other ones uh right everything else everything that depends on other things have to be"
2906480,2921280," like a run time thing okay so"
2921280,2933120," uh conf params conf uh this is uh f32 and but this kind of stuff is not uh really convenient anymore so"
2933120,2934880," i have to make it like 20 now"
2936480,2944240," uh so this is 20 and this one has to be something else maybe i can even align it like that"
2944240,2953200," right so this is the configuration file right the thing i want to do is read this entire configuration"
2953200,2960080," file into the memory at compile time how can we do that if i remember correctly in j there is"
2961520,2967200," some function to read the entire file so opt jai mojo"
2967200,2976080," i think it was something a read entire file i think it was literally called like that yeah there is such"
2976080,2984160," thing apparently which is nice and let's find the definition of that thing okay so and there is"
2984160,2990960," there is implementation for you know different platforms unix and uh windows uh zero terminated"
2990960,2996640," there is even a parameter that tells you whether you want a zero terminated thing or not"
2996640,3009840," it's pretty cool so and it can also tell you whether it failed or not so that's convenient okay so let's actually go into the into here and then we're gonna say um"
3010560,3019040," for rams config right so it's params config uh i don't think i care about zero terminated and in"
3019040,3027040," here i probably expect the programs content and whether it's succeeded or not right"
3029600,3037200," if not okay we'll have to throw an error could not read maybe i'm gonna actually say something like error"
3037200,3045760," could not read um so probably have to extract it params file path right so this is params file path"
3045760,3056320," let's actually put it in here params file path uh boom uh programs file path and then exit maybe maybe just return"
3056320,3061360," right so and to for the consistency i'm gonna put it in here all right so"
3061360,3076960," cool uh now i can also go ahead and print it uh like so um print like this and params content so there"
3076960,3084400," go we have a go we have a per app rams content if i try to compile the game now uh so first j"
3084400,3093520," and declare identifier read entire file and this is because read entire file is located in a file okay"
3096160,3108560," so we have to go as you can see we read the content of the params that conf at compile time"
3108560,3115920," so the only thing that is left is to parse this thing i wonder if there is a way to like split by lines"
3115920,3123760," somehow uh so we have file maybe there is something called string there is something called string there's"
3123760,3130080," something like split uh okay split from okay so there's a lot of things in here but i'm"
3130080,3135520," okay split right split left why all of that is commented out um"
3135520,3147200," split from left okay that's very cool so you provide the bytes so it works on level of a bytes"
3148160,3156240," no unicode so far so split from left uh i want to see what the hell is that"
3156240,3165120," i suppose it just chops a single value from there i have a feeling that's what's happening"
3165120,3173440," so we need to test it out so it's actually quickly tested out uh all right so in here i might as well"
3173440,3182640," actually return in here right to block everything so let's introduce the following thing uh hello"
3182640,3192560," world food and the byte is going to be uh space so what we're supposed to have in here right we're"
3192560,3201760," supposed to have in here is found uh left right right that's what we have in here and"
3203760,3213600," if we found i want to print left left left and right right"
3213600,3222160," print not found uh might as well"
3224880,3236240," okay so return statement okay so this is a warning we don't care about that so here is the string"
3236240,3244160," so this is the string now and uh what do we have okay so statement this is all right okay so this is"
3244160,3253280," what we got so we had a hello uh world food and we split by a space and what we've got hello world food"
3253280,3260880," so essentially it just like chops it one time right it just chops it one time uh another thing"
3260880,3267200," so let me actually wrap it with bars so we can see what characters are like left"
3267200,3273040," uh okay so it also removes the separator so there was a space separator and there is no such space"
3273040,3279120," separated basically chops by a delimiter uh which is nice right which is absolutely nice which means that"
3279120,3286320," now i should be able to chop the content of that file line by line right so maybe it would make sense to"
3286320,3293200," actually copy paste it here so this is where we're gonna start uh you know parsing the parsing process"
3294560,3303360," okay okay so we can do something like let me actually think"
3303360,3308080," line"
3308080,3310880," rest"
3310880,3319200," and i wonder if i can reassign that so maybe i'm gonna have something like content because i presume read"
3319200,3325840," the entire file allocates some memory that we're supposed to free at some point so it would be nice"
3325840,3330240," to actually preserve params content uh and just do something like maybe a rest"
3330240,3337920," for rams content and what we're gonna do in here is that while rest is not empty i think maybe there's"
3337920,3344720," something like a length right zero uh greater than zero uh greater than zero and in here"
3344720,3353440," what we're going to have um we're going to do that"
3353440,3357520," rest"
3357520,3359520," found line"
3361120,3361760," a character"
3361760,3367760," it's going to be new line"
3367760,3376400," and then let's print the line right let's print the line this is the new stuff"
3376400,3379200," and that should be it"
3390480,3395360," as far as there is already hot loader module with the config parser okay the stream is over"
3395360,3401360," thank you everyone who's watching me right now i really appreciate that uh we are done with doing"
3401360,3402800," this entire thing bye bye"
3402800,3409360," all right so i guess that's what you want right so"
3409360,3413040," uh"
3417440,3422000," so let me see i think i want to make a small break because i probably want to make a cup of tea"
3422000,3423200," because i'm falling asleep"
3423200,3431680," i'm falling asleep short stream yeah so how long are we already streaming for like one hour so"
3431680,3438000," that should be fine that should be fine i should be fine you're scared don't be scared"
3446160,3450400," also there is already game written and jay there is no need to implement the game"
3450400,3452000," like why are you implementing the game"
3452000,3457840," uh all right so okay let's make a small break um"
3457840,3464800," anyway so hit the bell subscribe"
3464800,3472720," uh so let me see what's going on where do we have like a definition of the of the string somewhere"
3474320,3482000," uh let me let me let me see so string maybe in in module in here so string"
3482000,3494720," or maybe in the basics or maybe we can try to search for string like so uh which kind of worked"
3494720,3500400," oh there's a lot of things like that because the end with the string so maybe we are searching for"
3500400,3505280," something like struct uh maybe no maybe it's something like very much internal"
3505280,3509680," um so also let's take a look at the how strings"
3511680,3515680," so what we can do with the string many programs want to text string"
3515680,3529920," okay so it's account all right count and data uh which is nice i think"
3531280,3539760," so let's go in here so this one is count uh while this thing is count split from left"
3539760,3543920," and that should create something so let's actually try to compile this thing"
3543920,3555360," and see um couldn't find because we're in the wrong place oh yeah look at that so it never actually"
3555360,3565920," advanced anywhere um so maybe we can have something like uh rest zero and then we can say rest equal rest"
3565920,3572320," zero right so can we do something like that and it kind of worked uh right so because we've got these"
3572320,3588160," separate lines isn't that cool so probably want to remove this thing so we can uh already sort of separate"
3588160,3604480," things by line um okay go now we need to go a little bit deeper we need to go a little bit deeper and"
3604480,3613520," separate the line itself right so uh let's do split from left uh right so in this one is going to be a line"
3614480,3625920," uh so and this one is going to be what we want to separate this thing like so that way uh so can i"
3625920,3631120," just say that i don't care about found can i do something like that i think i should be able to do"
3631120,3642480," that maybe not and then um oh maybe i should actually take this kind of stuff because then i can easily"
3642480,3658640," check right so this is the name i have a feeling it would be better to have a separate function that"
3658640,3666400," accepts the line and returns you a structure for the configuration parameter and like i have to keep"
3666400,3673280," reminding myself that we're doing all of that at compile time right at compile time i organize the"
3673280,3679040," loop and then think okay it would be nice to have a structure and you don't have to program in a separate"
3679040,3683840," weird language that has nothing to do with the language that i'm currently developing the entire thing"
3683840,3689520," in it's just it's the same language right i'm just using the same language uh valigo thank you so much"
3689520,3694880," for 13 months 30 months of tier one subscription thank you thank you thank you pogey wogey indeed"
3694880,3701200," how are you doing how are your speed runs are you did you already get first place in the world"
3707600,3714400," all righty so what i want to have is still an advantage of the least macro c"
3714400,3726080," so um param let's call this param so this is going to be a structure and we're going to have a name"
3726080,3734880," right which is a string then we may have a type which is not necessarily a type uh we can call it param type"
3735760,3740480," uh i got world record like four months ago yeah but unfortunately i had to abandon my"
3740480,3746240," battle station to flee from country because my customers can't pay me anymore oh okay"
3746240,3750320," so i hope everything's fine now so you're already in a in a different country right"
3753360,3772640," um okay so and we want to have some sort of value instead of now uh doing all the boring immigration"
3772640,3782240," paper stuff okay good luck with that uh good luck okay so here we would like to have something like a union"
3782240,3785360," do we have a union store we probably don't have unions"
3785360,3793680," are we hanging there yeah it's it's fine for me i'm doing fine thank you thank you thank you"
3793680,3803680," um thank you so much for six months of twitch prime gen 18 383"
3805600,3811200," oh thank you thank you thank you thank you okay so this one is interesting how do we like have this"
3811200,3819680," polymorphism on the level of data uh let's actually learn about that a little bit"
3819680,3829120," uh let's actually learn about that uh how to union on okay so there's no mentioning of union in the names"
3829120,3837760," but uh if we take a look at this thing so there's no mention of union in here as well uh okay so maybe"
3837760,3844320," there's something in the modules uh i want to at least see some conversations about okay so there's a"
3844320,3851120," tagged union okay uh how to make a simple tagged union support uh which is something that people request"
3851120,3857600," request sometimes this language like c has built in union time designed uh designated by the keyword"
3857600,3865120," you really there is no wait don't tell me okay so tagged union okay very interesting"
3865120,3869760," okay so tagged union okay very interesting"
3869760,3887600," but if it has a wait a second is this outdated because there is no union keyword is it uh so it feels"
3887600,3894480," like it is outdated let me close the chats so we get a lot of backsevers in there um okay"
3895840,3901520," so probably want to go into maybe like an actual examples right so i need to go to the actual"
3901520,3911440," examples does anyone use uh union in actual examples okay so there's no uh such thing so there's only"
3911440,3917360," like a tagged union but i'm not even sure if i need a tagged union maybe i can approach this thing slightly"
3917360,3926400," differently right but when using the union you have to know which type is stored inside it so that you"
3926400,3932400," know how to interpret the memory stored in here this is done using some kind of enum based uh type tag but"
3932400,3939120," in c like languages maybe it's a hassle to define all these types tags and remember uh what tags are called"
3939120,3945120," so on so forth so here uh we define a tag union that takes care of tags automatically okay this is actually"
3945120,3952080," very interesting so tagged union and you can provide a bunch of types okay so and you can set and i"
3952080,3959120," suppose set will actually um how to call that dispatch at compile time depending on the type you're setting"
3959120,3965680," it will set the tag to float which is the value okay that's pretty cool because this language is not uh"
3965680,3970960," really about overloading weird operators and it is definitely not about overloading the equal"
3970960,3976000," equal equals we do not attempt to do these things here we do not want to pretend tag union is a"
3976000,3981200," primitive type okay that's cool we haven't yet done some kind of a macro of switching on the type"
3981200,3988480," i expect this is to be an interesting test of the macro system that will motivate a bit of improvement 2021"
3988480,3996320," uh year ago okay that's cool so you have a tag parameter and this is basically the types"
3997120,4007120," tag tell us the type is for the okay we can kind of dispatch based on this specific type all right so i"
4007120,4014720," really like this thing i really like this thing so value type and so you have a tag the union and value and"
4015760,4029600," then value so you then cast the data and it feels like this thing does not check if you're trying to"
4029600,4036080," set a value that is present in the tagged union or not like it doesn't care like you said the this value"
4036080,4044000," it will just set it there uh and in here what it does it okay it gets the biggest i really like how"
4044000,4051920," how straightforward it is actually right so what it what you do you pass a list of types right this is"
4051920,4059040," a list of types then you're given the list of types you calculate the biggest size and you just allocate"
4059040,4067840," enough bytes for that specific size this is like literally what c does but expressed explicitly"
4069040,4077360," using the language that is kind of cool i really like that this is so cool the the only thing i"
4077360,4083920," didn't see that it checks that the value is present within the tagged union type list except there is a"
4083920,4091760," debug thing in here and i guess this is what we check in here right so debug no check that t is one of the"
4091760,4098160," time okay so it would be kind of cool if it was always at compile time but why is it only when debug is"
4098160,4109200," enabled right so okay so that's fine so you can also check does the tag union hold the type of t uh"
4109200,4117600," which could be used okay so that's uh so this is internal thing i really like that so and how this"
4117600,4124240," thing is implemented so we have a for loop which iterates through the types and gets them okay i this is so"
4124240,4134720," simple what the why this is so offensively simple and straightforward what this language is offensive"
4134720,4136720," really it's too based"
4139440,4151520," what the"
4151520,4157440," it's like yeah yeah we need some sort of like a mathematical elegant system that fits our problem"
4157440,4165040," elegantly no you want to do that just just do that right just explain it directly in imperative way you"
4165040,4169920," want to do that that and that and that and that it should work right it's just like it's so offensively"
4169920,4172480," based and cool and this is like what the fuck"
4178480,4194480," so because of that we don't really need type tag because it's going to be already available in the"
4194480,4200400," tag union uh i don't know maybe this mechanism is old and you're not supposed to use this but but i kind of"
4200400,4213280," like it right so detect union but still it's kind of strange right so if i take a look at the mode"
4213280,4221200," union union is not part of the mode um keyword lists and i suppose mode is kind of outdated right"
4221200,4228160," so but then they say that there is union support but there is no uh examples in there so maybe it's not"
4228160,4237280," documented yet so i wonder if i just grab rn um i should probably grab in the entire compiler"
4237280,4241840," all right so let's actually grab in the entire compiler do we have something like that like in the"
4241840,4250000," entire okay there is such thing so i suppose the mode is outdated all right and since like it's not"
4250000,4257200," documented well which probably means that maybe it works exactly like in c okay that's just a little bit"
4257200,4265840," weird right so it's not documented properly yeah so let me go to local and uh here i'm gonna go to jay um"
4265840,4267680," keywords"
4273440,4285920," so uh"
4285920,4285920," so uh"
4285920,4294960," so first uh and if i try to do something like um union okay it works so i probably need to maybe create"
4294960,4300880," a pull request for the though my previous pull request was not still you know taken into account"
4300880,4309920," unfortunately um joy emacs trying to launch emacs from python you do be like that sometimes"
4310560,4313360," well google oh google by the way is broken"
4313360,4325680," kgb is just like checking what i'm searching for right so they are just"
4325680,4332240," seeing that i'm not searching for anything uh dangerous for the for the government right and then"
4332240,4339440," they approve they approve each individual query to google manually right so that's why it takes so much"
4339440,4346560," time uh right so the kgb officer actually saw that they don't even know what this jay emacs they they"
4346560,4351920," searched it has nothing to do with overthrowing the government so they decided to let it in that's why it"
4351920,4360720," then eventually worked uh so anyway uh pull request so this is my pull request and what i did here is just"
4360720,4369600," like edit uh regular expression thingy um yeah oh okay farakon thank you so much for approving"
4369600,4374080," can we get more approves for for this pull request please"
4376080,4381360," uh right so we need to get it in so essentially what i did here is just like edit the uh regular"
4381360,4386720," expression to parse the compilation error so we can jump quickly there right so we don't have enough"
4386720,4394160," approves it was was week ago okay anyway so i suppose the author just doesn't have enough time to"
4394160,4401680," to work on this thing so which is completely understandable uh okay optgi modules tag the union"
4401680,4409680," tagged uh union all right so maybe i'm gonna import"
4409680,4423840," and here we can have value tagged union up sorry just a reflex you didn't see that you didn't definitely"
4423840,4431600," didn't see that uh s64 or flow 32 so we're gonna work with these two values right and just like this"
4431600,4437920," so that way i don't even yet need to have my own flag uh i can just like do it myself"
4437920,4445520," is jay still enclosed better yes it is but it's slowly expanding so i"
4445520,4448400," expect more and more people are going to be streaming giant so"
4451040,4456240," and also trying giant stuff like that it's actually getting there right it's pretty stable i haven't"
4456240,4460320," encountered any bugs so far but i haven't tried anything super sophisticated"
4460320,4471840," uh me searching for styling deemed furry furry porn so i think the kgb would allow that because it's not"
4471840,4477680," dangerous for the government information you can't use that information to overthrow the government so it's"
4477680,4480240," totally fine all right so it's just like"
4480240,4489520," anyway i'm sorry well everything i say by the way has no intent to offend anyone it's just a joke"
4489520,4495760," it's just a parody okay um anyways"
4497840,4508080," let's continue now what i want to say i want to be able to uh parse uh parse param right so here i"
4508080,4519760," accept line and i return a parameter right or maybe i can also return an indication of a failure or success"
4519760,4525040," right so we usually do that through a boolean in here right so did it succeed or did it fail it is"
4525040,4534160," supposed to be a boolean um okay hello studying this is agent alexander t uh reducted i'm uh reaching"
4534160,4539920," out in relation to a recent search that you made online we couldn't translate the jimax to any of our"
4539920,4545600," known language so can you please explain what this search was about it will help our agent in the future"
4545600,4554000," not spend too much time on related searches thank a lot for understanding okay uh thank you thank you"
4554000,4563040," for the comment i really appreciate it so uh let's continue um to do to so here what we need to do"
4565760,4574320," so this is a rest zero and i just reassign the rest to here and um so i'm just like really curious i think"
4574320,4580480," found or not found has like it doesn't matter right and it'll be nice to be able to just underscore this"
4580480,4591840," and uh we'll see um now parse param i provide the line uh and then i get either okay param"
4594160,4604240," right if not okay we can say could not parse param right error could not parse param though"
4604240,4607360," it would be also kind of nice to"
4607360,4614880," uh explain where exactly we failed to parse the parameter if you know what i mean"
4614880,4622800," right so uh we can say that it happened in this file we know the file right so there is a params file path"
4622800,4629360," so this is where exactly it failed but it will be also nice to say where like in on which line"
4629360,4638080," on which line it happens as well uh so but the line is something that we can only keep track of"
4638080,4644640," right so this is going to be the line and there here at the end uh we're going to do something like"
4644640,4649680," this right so as you can see we keep track of the line um and there you go in here i can also"
4649680,4658400," return from the return from the entire thing okay so after that i'm going to just print uh the parameter"
4658400,4676080," hopefully it will say something interesting okay opt jai bin jai uh first jai there we go so line uh not all control paths so let's return nothing false"
4676080,4680480," uh nothing false and uh undeclared"
4680480,4684400," identifier not"
4684400,4696800," what"
4696800,4703840," am i am i going f***ing crazy"
4703840,4714640," because i literally have this thing in here"
4714640,4717360," and it works"
4719600,4724960," maybe there is a little bit of overshadowing oh by the way apparently the"
4724960,4731200," oh okay"
4731200,4740560," nice error message okay i see the type uh since i uh fucked up the order the type of okay"
4741120,4744880," was a parameter and since there is no overloading for"
4744880,4750400," exclamation mark it couldn't find a corresponding overloading"
4750400,4753840," so okay this is a good case of"
4753840,4760800," bad error message right what it should have said instead it should have said right expected type"
4760800,4766480," boolean but god type parameter and then i would realize oh okay i just f***ed up"
4766480,4770640," the order of the arguments and the only thing i have to do is just swap them around"
4770640,4775520," and it will work i mean it will still have some problems in here but i mean this particular part will"
4775520,4781680," compile so i i think this is a straight up bug of the compiler right so it actually hurts the usability of the"
4781680,4783360," compiler maybe i should report that"
4783360,4792320," weird that it parsed it as identifier um it's an identifier uh you can put error messages to john"
4792320,4796800," i'll probably do that right so but i need to come up with a more concise example for for the specific case"
4796800,4810960," because i personally strongly believe that the compiler have has to sort of like"
4811920,4816960," give you as much information as possible to resolve the problem and sometimes even try to understand"
4816960,4822640," your intent and suggest examples right it should like it should be a dialogue between the programmer and"
4822640,4824640," the compiler um"
4824640,4835440," okay so uh if i remember like i probably need to yeah create some sort of report and stuff like that we'll see"
4836640,4847040," okay so rest uh so it complains type mismatch type string but got uh okay our line okay what's called"
4847040,4863600," line number line number line number okay so it couldn't parse uh huh oh okay so and yeah"
4864960,4867040," um this one has to true"
4867040,4880240," okay all right so these are the parameters but they are not separated by a new line uh let's separate"
4880240,4885120," them by a new line okay so these are parameters and as you can see they are empty because we don't really"
4885120,4891440," uh you know parse them and anyhow okay so here we're gonna take the line um"
4891440,4897680," split from left so split from left"
4902640,4912800," uh found name uh"
4912800,4917200," found name name rest"
4917200,4929440," okay so we've got that if not found the name if not found the name uh we return"
4932320,4935760," uh just return nothing false"
4935760,4944320," okay then we do split from well i mean we split by"
4944320,4953520," character listing right so then we take the rest and we split by"
4956480,4961760," what what is that equals right and here we get found um type"
4961760,4972320," type value right so this is a type and value uh to be fair for now i would actually go for something"
4972320,4980880," like type string string and value string just to see if everything works correctly right"
4983200,4987760," then if not found type return false"
4987760,4997920," and then once we found everything we have name type and value we can use them for the parameter but"
4997920,5003120," unfortunately these are runtime things so i won't be able to do something like that right it's not going"
5003120,5009200," going to compile because uh they have to be constant which which makes sense we can we can do something"
5009200,5018480," like i don't know make uh program right so this one's going to name string uh type string value string"
5019520,5021600," right right and it's going to return a for ram"
5021600,5025360," so for ram"
5025360,5026720," for ram"
5026720,5030640," this ram name name"
5030640,5033200," type"
5033200,5037600," value return"
5039840,5040560," can you do that"
5040560,5040640," can you do that"
5040640,5045040," can you do that to make param is that a good idea maybe it's not a good idea"
5045040,5049280," but hey do i care i'm not sure if i do"
5049280,5061680," okay so as you can see we managed to parse those but we uh still have a bunch of uh spaces and whatnot"
5062240,5067920," so and also we have a semicolon in here which is you know not acceptable so let me go to the programs"
5067920,5071760," and i'm going to just remove the semicolons because we parts of it in bylines"
5071760,5081520," so now i wonder if there is any way to trim the spaces right do we have any ways to trim the white spaces"
5082240,5090640," trim okay so there's a trim left trim right and there's just trim okay so that means in here i can do"
5090640,5104080," train train train triple trim there we go so we triple trimmed all of them so triple trim uh cool"
5104080,5112080," uh the next thing is basically do a little bit of a dispatching right so right now"
5112080,5121760," we support only two types"
5121760,5129920," so this is kgb already coming because of my google query"
5129920,5135920," kgb nukes yeah"
5135920,5141040," uh does trim allocate the new string probably not"
5142160,5144320," uh i wouldn't allocate such thing"
5144320,5158400," if strings are just views if i know if i understand correctly in gi strings are basically views"
5158400,5164400," on some section of memory uh there's no need to allocate any memory to just do trim you can just like"
5164400,5165280," narrow the view"
5167600,5175680," uh all right so next thing can we is it possible to do something like if type equal can you do switch"
5175680,5176720," cases on the strings"
5176720,5183520," can you do switch cases on the string that's a good question so integer uh so this has to be case"
5183520,5190320," integer all right in the case of integer what we have to do so this has to be some sort of like a result"
5190960,5192880," uh result for ram"
5192880,5194240," uh nothing"
5194240,5199760," uh maybe we can even do something like param"
5199760,5205440," um"
5205440,5210000," just a second"
5210000,5215440," value right result value it has to be something like set"
5216800,5219920," oh and set is such a weird name so"
5219920,5225360," because it's so short you can confuse it easily with anything so let's actually do tu"
5225360,5230960," like this and that means that every time i want to do set i can do it like this so tu"
5230960,5235200," is like this but it also means that i have to do tu tagged union"
5235920,5238960," right uh so we have to set it"
5238960,5247920," um tag union set it has to be a pointer right i suppose this is the pointer and the value we have"
5247920,5258000," to set in there is essentially um yeah we have to parse an integer um the question is how can we parse an"
5258000,5268720," integer let me see so maybe there is something in basic right in basics uh integer float float"
5268720,5278240," flow to strength string to float integer okay so at least we have something for strings right string to"
5278240,5286400," float which can fail by the way which is nice okay so i'll keep that in mind remainder oh okay"
5288000,5295440," so remainder is like remainder on the string all right that is totally fine let's actually start with the float i think"
5295440,5302880," because i found this little thing in here so we have to provide the"
5302880,5312240," value right so we'll provide the value and we'll get the results right so the result whether it succeeded"
5312240,5316960," and also remainder but i don't really care about the remainder so maybe i'm going to actually leave it as"
5316960,5324800," this all right so we've got that if we didn't succeed if we didn't succeed we can just return"
5324800,5333280," false right so we didn't succeed that uh we just like you know continue otherwise we have a result"
5333280,5338320," we set the result to do this thing and there you go we've got this kind of stuff cool"
5340560,5350720," now what about the integer so i would assume that maybe the john's reflexes uh forced him to call"
5350720,5358560," such function a to i i would assume this is my like wild assumption so let's actually search for a to i"
5358560,5368160," um maybe even with case insensitive search because maybe he you know capitalized that no it's not a thing"
5368960,5375520," all right um maybe there's something like string to int"
5375520,5387520," okay i guess that correctly all right so and it's like any integer is there something okay so there is a"
5387520,5393040," thing called simple string um very interesting simple string"
5397040,5405120," so uh there is two string a lot of two string functions do we have like a from string no okay"
5405120,5407280," string"
5407280,5410480," two oh okay"
5410480,5418880," all right there are simpler okay so there is a simpler version 2017"
5419920,5424560," i want to have string to flow to parameterize but it doesn't quite work consistently for some reason"
5424560,5431440," in both uh uh jvmx64 uh test code uh okay there is a string to"
5431440,5438560," int oh there's literally like straight up this thing okay which means that i should be able to to do that"
5444880,5452400," um so first uh huh so let's actually copy paste that string to int"
5452400,5461760," i don't know so i use float32 and s64 maybe i should use the same types as the ones that i'm using in"
5461760,5473120," here just in case so they fit sort of um in them okay will that compile uh and here we can do another case uh which"
5473120,5477840," automatically returns false right so this is an unknown type um"
5477840,5480480," right this is"
5480480,5491680," uh this is not what i want let's try to compile this thing okay so and we don't need this stuff anymore"
5491680,5498800," because we are directly like setting things up or doing that's a good question right so we have a result"
5499360,5503600," uh and after we parsed the name we can do result name"
5503600,5507600," so that means we have to"
5507600,5517360," put it like that name result name type then we do the type then we assign the value and then we return"
5517360,5524560," the results right we return the results okay so is it gonna work uh"
5526080,5532960," attempt to do the reference type float but this is not a names namespaced type"
5532960,5538240," attempt to do reference"
5538240,5544880," this is extremely confusing"
5548880,5559200," hmm so string to float so this one is a float boolean and then the string okay floor the boolean blah blah blah"
5559200,5567680," oh because i see"
5570000,5577840," yikes okay so let's actually call this thing a value but we'll already use a um god okay let's go to x"
5581280,5583040," uh right"
5583040,5593440," okay could not parse a program and we could not parse it here uh it returns the true and the question is"
5593440,5604080," why so it happened on so we don't really know why exactly it failed right we don't know why exactly"
5604080,5610480," it failed on which of these parameters right so did it fail because of some syntactical error or did it fail"
5610480,5613440," because we didn't have the um"
5613440,5620000," didn't parse one of these things so it would be nice to actually maybe"
5620000,5627120," um you know debug about that right so let's put it this way so it's going to print"
5628480,5637840," um um failed name in here we can put it like that failed"
5637840,5641600," type so this is a failed type"
5641600,5651680," so this is a failed float parse"
5653360,5654000," uh huh"
5654000,5663680," and of course i forgot to put like a new line in here i wonder if there's like a print ln maybe"
5663680,5669120," maybe not print failed int parse failed in parse"
5669120,5677520," bring them um no one type"
5679120,5685120," and do we have anything else okay so unknown type okay so it encountered unknown type and we can even"
5685120,5693200," take a look at the type itself right so what's up with unknown type and this is because uh i'm pretty"
5693200,5698240," sure i'm pretty sure it does not support switch cases on strings"
5700480,5710480," or because it was not trimmed appropriately that's why i only trimmed them on uh constructing the parameter"
5710480,5715840," which makes sense all right so what essentially i have to do in here is"
5715840,5725360," uh i guess name trim name all right then uh type"
5726320,5734800," trim type and then uh what is that value trim value so i have to trim them uh okay and that worked out"
5734800,5743120," so as you can see we parsed those parameters and i really like that you can even see the the tag the type tag"
5753840,5759600," as long as you because some of the stuff it needs to be uh also working at runtime"
5759600,5769120," because ron works only at compile time but it doesn't work at runtime"
5769120,5778160," you see so we need to code we need the universal code the code that works in both compile time and runtime"
5781680,5787120," you using the run is not really runtime friendly it's compile time friendly"
5787120,5793840," uh okay so"
5793840,5798480," cool"
5798480,5805520," it would be nice to actually write that a little bit more elegantly if you know what i mean"
5807520,5814160," all right because i want to do split from left and simultaneously trim it but i can't trim it unless"
5814160,5820240," i destructurize it and check that it doesn't you know it doesn't fail right so that's the first thing"
5820240,5825520," i have to do which is not particularly like you know convenient but it is what it is i mean it's it's"
5825520,5832720," fine also it would be nice to actually tell the user of this function the caller of this function what"
5832720,5837040," exactly failed maybe instead of boolean we have to return enumeration that tells like what exactly has"
5837040,5843360," happened uh but uh maybe i'm going to do that a little bit later it's not a priority right now it is not a priority"
5844240,5849920," okay so uh let me see let me see all of that seems to be working"
5849920,5853840," uh"
5853840,5879440," the next thing is essentially generate something based on this entire stuff right um so right now"
5879440,5887360," what we can do uh we can just add um maybe we can do params j yeah we can do params"
5887360,5894320," for how long i'm already streaming i'm streaming for almost two hours god damn it like uh"
5894320,5896640," fuck"
5896640,5908800," all right so i'm gonna try to do a very dumb thing right so we parse the parameter right we parse the"
5908800,5917120," parameter and we can now try to do the following thing add uh build string right so let's do add"
5917120,5925760," build string um and i'm gonna do t print and here we're gonna have a name and then maybe the type and"
5925760,5929760," then maybe the uh the value right so this is what we're gonna have"
5932000,5940320," then for the name i'm gonna do param uh param name for the type i'm gonna do param value and i wonder if"
5940320,5945760," i can extract the type let me take a look at the tag the union uh so there is a type and if i try to"
5945760,5953360," print the type it should bring it as the name of that specific type uh and then i can do set but do i get"
5953360,5961440," have a get how do i get i have a strange feeling that to get something i have to"
5961440,5969760," just give the data and cast that data to that specific value is that the case i think that's"
5969760,5976400," the case because at least this is what they're doing here yeah all right that's very interesting so you take"
5976400,5984880," bytes data you cast it to the point of that specific type and then you essentially dereference it"
5984880,5991440," okay so we can do the same thing i suppose i'm actually quite surprised why there is no such thing as"
5991440,6000720," get right right why there is no get yeah because it's actually relatively easy to to write one right"
6000720,6010800," using zoom tagged union value then you take the type i suppose that's how we do that uh and"
6010800,6015280," yeah i mean"
6017280,6021760," so i'm not going to keep that in this file because uh it will be changed probably in the next"
6021760,6026240," like the next release or something like that i'm going to keep it in here"
6026240,6032400," right so there's no like reason for this thing to be like non-existing"
6032400,6039920," oh because you you still have to provide the type right you still have to provide the type so that's"
6039920,6044720," kind of the problem"
6044720,6053440," which i mean is not that big of a problem"
6053440,6059440," i think i'm i'm tired chat chat i think i'm tired straight up"
6059440,6067600," because what i have to have in here is the type right so this is the type"
6068720,6075920," and this thing should return a type but it may return the pointer so yeah it doesn't make sense"
6075920,6085120," because it's easier to just do that right uh bytes why is it called the bytes because we"
6085120,6093440," yeah and bytes are from the okay so i i think i'm starting to understand why this is not like a thing"
6094480,6105760," right anyway so param value bytes data uh cost to the pointer"
6105760,6111120," of the type and i wonder if i can do something"
6111120,6120560," well yeah okay i i'm i'm falling asleep i cannot stream for more than two hours"
6122080,6127440," all right so i guess you get the idea of how like you do metaprogramming i think i think this"
6127440,6132240," is how i would do that but i would like to continue and at some point actually implement"
6132240,6138240," uh does anyone have any questions does anyone have any questions uh before i go"
6140080,6142960," because i like my brain is slowly frying"
6142960,6158160," any questions any questions any questions any questions the tech union id is actually so cool i really like"
6158160,6165200," that"
6165200,6172320," do you know j strings are unique or the ruski as far as i know they're just a ray of bytes and whatever"
6172320,6174640," you want can be there"
6177040,6180400," do you like jsfr yes i actually kind of like it"
6180400,6189360," is this just for learning or is there a greater aim why people look for like a greater grain scheme"
6189360,6192240," idea i don't understand no"
6192240,6205680," can we just have fun already i don't know"
6216240,6219920," can you explain the point you think it's a de-reference that's it there's nothing to explain"
6219920,6222240," it's literally point to the reference"
6231280,6235680," okay so maybe i just need a small break because i think"
6235680,6245520," i'm starting to understand so the only thing i need to have in here is just param type and i wonder"
6245520,6253280," if i can just do something like case uh where i could do this stuff is that a thing i can do"
6255520,6260080," yeah case and float and then case so let me see"
6260080,6267840," okay type is not a member of param because it's a value type okay um"
6267840,6271440," it's probably tagged"
6271440,6281760," you can do that i really like the i really like the attitude of this language"
6282560,6286240," you you can't just do that right so you need to dispatch by type well"
6286240,6290880," go ahead and dispatch by type like this is the like the most obvious way to dispatch by type"
6290880,6293600," oh"
6293600,6301440," i'm telling you this language is offensively based right it's just like that's the best way i can"
6301440,6306480," describe this language offensively based like you need to dispatch by type yeah that's just like what's"
6306480,6311120," the most obvious way to dispatch by type take the type and just do case integer in case flow"
6311120,6318640," um and that is like this thing type is supposed to be compile time thing right it's supposed to be"
6318640,6326000," compile time thing but yet i'm using it in a runtime context right so there's nothing interesting about"
6326000,6330640," this kind of stuff if you're talking about dynamic language right because in dynamic language everything"
6330640,6335120," is available everything in runtime but we're talking about compile time static language"
6335120,6340800," right and type is simultaneously a compile time and a runtime thing and it's just like this juxtaposition"
6340800,6346160," of runtime and compile time things it's just like okay"
6347760,6356960," um so okay so if it's in an integer right so i want to just bring this kind of thing"
6356960,6363360," so the only reason why i need the tag is"
6363360,6373360," okay so if it's so offensively based right if it's so offensively based can i do like that then"
6375680,6380320," so if i have a type right and type if we consider type a runtime value"
6380320,6389200," what prevents us in the compiler to write a code if you're trying to do reference a runtime type"
6389200,6396160," it turns it into a pointer type so then you can also have a compile time cost"
6396160,6404320," like i mean technically if you want to be so offensively based right if you want to be so"
6404320,6411120," offensively based you should be able to do that right and there there are ways to do that i can see"
6411120,6417760," some ways to do that like like internally so then for ram"
6421200,6427920," uh so value date uh bytes is it called baits right um"
6427920,6440320," so it's baits data and um then i should be able to maybe print it like that but it might not work"
6441440,6449760," um so let's put it this way so then i can take prime it it may not work but but maybe there is a way to"
6449760,6457120," work that or for that to work we'll see so name value bytes uh when trying to evaluate the constant"
6457120,6463360," type non-constant declaration okay so you can't do that all right all right that makes sense that makes"
6463360,6470160," uh so that means i'm not gonna even try to go that route all right so let's just do if"
6470160,6475840," param value tag let's do the original idea that i wanted to do"
6475840,6484000," case integer right so the only reason why i need to do that is because now i want to be able to just do that"
6485760,6490080," and because of that i will have to actually reference this thing but yes um"
6490080,6494160," oh that was fun"
6494160,6504080," okay so and if we encounter anything else uh this is unreachable in my opinion"
6504080,6513120," okay oh i mean it has to be like this"
6515760,6525760," okay okay okay so what i forgot is a new line right all right so"
6525760,6529920," what the hell is that"
6529920,6539760," um yeah it didn't work the way i expected it didn't work the way it expected"
6545760,6558160," so i took this pointer though i'm not quite sure"
6558160,6561520," um"
6561520,6568720," so this gives me the pointer to the to the bytes"
6573040,6574160," dereference them"
6574160,6585360," uh what is oh dear okay god damn it okay so that makes sense all right cool cool cool cool cool"
6585360,6593120," so here i print those parameters right here i print those parameters but what if i add build strength then"
6596000,6605760," uh-huh type mismatch and of course i'll have to do uh like the the usual thing um let me see t print"
6605760,6625840," and like so and then i'm gonna add it to the uh to the workspace okay that's very cool so what is complaining uh so jbrick uh has already started running so it's options be using"
6625840,6635120," set option okay so i probably do some weird stuff what are you talking about"
6635120,6640800," uh-huh"
6640800,6646640," so i suppose i need to start this entire stuff a little bit later"
6646640,6655440," right so we set options then we add the build file and before we add the build file we do all of this meta"
6655440,6661840," programming shenanigans okay so maybe that's the problem okay so redeclaration variable"
6661840,6664720," uh-huh and the redeclaration has happened"
6664720,6669360," in the generated config i suppose right so it's a build"
6669360,6671120," uh w3"
6671120,6676880," so it happened in here"
6676880,6680720," oh edit string are actually added in the same file"
6680720,6685200," i thought they're going to be added in a separate okay so that means i don't have to worry about that"
6685200,6692080," all right look at that so this is the code that we generated from the uh params.config"
6692080,6694240," so that's actually pretty cool"
6694240,6701600," um yeah that is actually very cool but unfortunately this one is interpreted as probably not flawed but"
6701600,6708000," anyway uh so and this is needed only for like baking the configuration"
6708000,6716160," right so we can quite easily now introduce maybe some sort of a parameter right um so the parameter is"
6716160,6724000," going to be basically debug which is by default is true so and we only do all of that we only do all of that"
6726000,6736400," uh um if if we are in debug right so this is the debug and that means we just generate the"
6736400,6741040," well no debug okay otherwise"
6741040,6750160," if this is a debug instead of like baking those values we may want to generate a module"
6751040,6758960," that allows you to reload these runtime parameters and since these kind of things could be also runtime"
6758960,6767760," maybe we should uh maybe we should turn them into function calls yeah i think we should turn every"
6767760,6773200," constant in here into function call and depending on whether this thing is true or false it's going to"
6773200,6778240," be either compile time parameter or uh runtime parameter and if it's runtime parameter it's going to be"
6779040,6785520," like parsed from params dot config at runtime right so that's the entire idea right you have a single config"
6785520,6792640," and depending on the mode you either have this thing code generated and baked or"
6792640,6800800," read at runtime right so you can modify it at runtime so that's the goal at least that's the goal at least"
6800800,6807200," um so but unfortunately i'm already stranded for two hours and i'm not sure if i have enough"
6809040,6813600," strengths to continue but maybe i'm going to continue like in a second stream and then i can"
6813600,6819600," continue two streams together as i did last time i think it's a pretty cool idea yeah i kind of like"
6819600,6826160," this idea of like you know doing like a little bit of streaming then taking a break doing another stream and"
6826160,6832240," then concatenating the uh streams that are related by a topic and then uploading to youtube as a single"
6832240,6838320," stream i think it's a pretty cool idea right because sometimes like i cannot like do without like long"
6838320,6848240," breaks like a single topic uh we'll see we'll see uh but yeah okay doesn't even have any questions right"
6848240,6855120," so this is so far what i learned about metaprogramming and jai i only starting to learn jai so i don't know"
6855120,6861440," much please forgive me if i make mistakes right and what i like about this language is that"
6861440,6868640," how easy it is to learn right so you can just like poke around read you can like read the comments"
6868640,6873440," and see some things and you get the idea of how like language works i think it's actually very cool"
6873440,6880480," how long to next stream i have no idea it depends it all depends"
6882080,6887840," does anyone have any questions questions questions questions questions questions questions before i go"
6887840,6899840," i've been a student for four years now and this is the first time i'm actually enjoying watching"
6899840,6907120," someone code thank you i really appreciate that i also enjoy coding actually"
6912080,6921280," one mistake one mistake and your computer is deleted"
6921280,6929360," just like with any program language"
6929360,6938720," i mean uh what's the difference between delete your computer"
6940000,6945040," in the meta program and in the main problem"
6945040,6947840," what's the difference"
6947840,6950720," so"
6950720,6958880," if you can delete your computer at compile time you can delete your computer at runtime as well"
6958880,6962080," and in that sense how is that different from any other language right"
6963280,6974800," how is that different from just programming them"
6974800,6981840," all right so i guess that's it for today so maybe we should rate somebody"
6981840,6986080," is anyone streaming any epic jai development"
6987920,6994000," so let's actually try to see so so since the beta is actually expanding i would expect there is more"
6994000,6998560," people who stream jaya right now can you guys suggest anyone who's streaming jaya"
7003280,7007760," because people because people verify every single line of js modules that no downloads of course"
7007760,7011200," of course that's what people do"
7011200,7015120," okay"
7015120,7026720," so man i wish twitch was not s but unfortunately it is a huge s all right who's streaming jaya"
7029520,7040080," do we have any epic joy streamers"
7040080,7046800," pro c c plus plus"
7049440,7057600," okay i don't see anyone streaming jay"
7057600,7062560," all right"
7062560,7076000," very well then okay see you all next time love you"
7076000,7079440," okay you"

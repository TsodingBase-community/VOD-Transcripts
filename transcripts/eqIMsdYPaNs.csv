start,end,text
800,6400," looks like we're live hello everyone and welcome to yet another recreation programming session"
6400,11760," how about that i bet you didn't expect that so let's make a little bit of an announcement"
11760,18480," and officially start the stream uh right so we're gonna do a usual red circle live on twitch and"
18480,26960," what are we doing today on twitch.i television website today we are doing a small ai image"
26960,32720," model in c how about that i'm going to give the link to twitch.i the place where we do know that"
32720,38000," and i'm going to ping everyone who's interested in being pinged there we go the stream has officially"
38000,46480," started so today we continue developing uh our deep learning framework in prc that we started to develop"
46480,52800," like a couple of streams ago uh you can find the uh link to this framework in here if you're interested"
52800,57280," i'm copy pasted in the chat and for people who's watching on youtube it's going to be in the"
57280,64800," description so what we did in the previous stream uh we implemented uh very interesting well it's not"
64800,70080," that interesting i'm pretty sure a lot of people uh before me done that before but basically a"
70080,77680," compression algorithm for images so what we did we created a neural network that uh behaves like a"
77680,85360," certain image right so essentially we got uh the um uh the image from the nice database uh let's actually"
85360,93440," go uh here uh so here's the news database and training and let's actually take the uh the digit eight"
93440,101600," uh all right so this is gonna be black and go here is the image so we started with like a very small images"
101600,107680," and we're trying to train a neural network that behaves like that specific image right so uh let's"
107680,114800," actually start that specific application that will perform the training so it's called image to nm uh"
114800,121600," right so i'm going to provide nist uh training eight and i'm going to provide the image so and it started"
121600,127840," the ui where we can do the training so essentially this is the target image this is the neural network the uh"
127840,132960," the architecture of the neural network that we're using to imitate the image and the way we imitate"
132960,139760," the image is basically we have two inputs and one output right so and essentially inputs are the"
139760,145120," coordinates of the pixels and the output is the brightness of the pixel and we're using this image"
145120,151920," as the training set to train this neural network to behave like that specific image uh right so here on"
151920,158240," the top we uh we have the actual output the current output to the neural network it's currently here"
158240,162880," so it's randomized as you can see it doesn't really produce any interesting results it's just like a"
162880,168800," white noise right so nothing particularly special so but look what happens when we start actually"
168800,175040," training it right uh so it looks like the cost function doesn't do anything it's just flattened out"
175040,181920," but eventually it starts to uh you know go down and it starts to learn the shape of the image like it"
181920,187600," roughly learns the shape of the image and the more it learns the more it figure out different features"
187600,194160," of the image uh right so essentially at some point it will try to figure out the the holes right so as"
194160,199280," you can see it starts to like place a hole somewhere here we just need to give it a little bit more time"
199840,207840," uh right and at some point eventually if we have enough copium it will learn how to behave like eight"
207840,212880," uh right as you can see it's it's actually figured out that you need to start like putting a hole in here"
212880,217440," uh right and it's slowly putting a hole and it actually climbs down it sometimes it just starts to"
217440,222800," like wiggle around because it's kind of like a very difficult thing to to figure out but eventually it will"
222800,231200," behave like uh an image eight right and essentially if the amount of memory taken by the weights and"
231200,237360," biases is smaller than the amount of bytes taken by the raster image effectively what you did you compressed"
237360,244320," uh you know the digit eight right you effectively compressed this entire thing and uh the coordinates"
244320,251120," that we put into the inputs are actually normalized these are the inputs uh from zero to one so that means"
251120,256240," you can remap them to any coordinate systems you want and you can even upscale right because the"
256240,262160," neural network is a uh basically interpolator over of a particular function you can upscale it and make"
262160,267280," this entire image sort of smooth and this is what our application does when we actually close it it"
267280,273280," creates an image called upscale png and we can take a look at how it looks like so this is basically an"
273280,279920," upscaled version of this of this neural network that behaves like this image right it's kind of an"
279920,286160," interesting thing to experiment with right so i don't think there is any particular like a practical"
286160,291360," practical application to this in tesla but it's kind of interesting to just play with right just make a"
291360,298960," neural network that behaves like uh like an image right so that's actually kind of cool so and i was"
298960,308080," actually thinking like can we make it behave like two images and how would you even encode that like what does it"
308080,318320," mean for a neural network uh to have to behave uh like two images how can you even do that so and i think"
318320,324320," the answer is rather straightforward right so let's actually restart the entire application as you can see"
324320,333680," we have two inputs in here right so it's a x and y what if we go ahead and introduce another input into the"
333680,340480," mix right so what if we introduce another input i wonder if we can in this specific case just uh go ahead"
340480,348160," and update the architecture so let me find image2nn.c uh right so where is the architecture the architecture is"
348160,353120," located somewhere here so what if we have three inputs in here so let me actually try to rebuild"
353120,360880," this entire thing so this is going to be ready environment uh built uh so i probably have to put"
360880,366800," at atom here right there we go so it's going to rebuild everything uh it's going to take some time"
366800,373360," because we're streaming so a lot of resources of my 10 years old laptop are consumed by uh actually"
373360,379280," encoding this stuff and let's actually restart so you you can't do that you can't easily do that because"
379280,385600," uh this entire thing sort of assumes uh a certain amount of inputs uh but i wonder if we can uh"
385600,390880," uh basically say something like okay so here's the original thing we're going to say that we have four"
390880,395440," columns in here and in terms of amount of inputs and outputs so we're going to have something like"
395440,403520," this i wonder if it's going to just work right if we just allow this entire thing to uh slide off like"
403520,405760," so right hopefully it will work"
411360,417840," so let me let me see i think it should work yeah there we go so instead of two inputs now we have"
417840,425840," the third one right so and as usual the first two are x and y the coordinates uh of the of the pixel"
425840,432240," but what's going to be the third one the third one is going to be a basically an index of an image"
432240,439360," so essentially we're going to train it to behave like one image when this neuron is zero right when"
439360,444160," this neuron is zero it's going to behave like eight uh right when this neuron is one we're going to"
444160,451040," learn it to behave like a different image so that way we can basically flip-flop between the images"
451040,457440," right so on the on zero it's one image and on one it's a different image but here is the catch"
457440,461840," all of the inputs in this goddamn neural network are continuous"
463840,470000," what if we train this mother flipper to behave like one image on zero and like another image on one"
470000,476000," and then we're going to try to render it with this thing set to half what is it going to do"
476000,484560," is it going to render something in between them like i i don't know like i like i generally don't"
484560,490480," have any idea what it is going to do right so we can just train it on two images and can we just like"
490480,496080," render something in between will it render something in between is there something there i don't know i"
496080,504560," think that's actually kind of cool uh right and what effectively it creates i suppose it creates like a"
504560,511280," simple image model right very simple image model with just two images and you can basically slide one"
511280,518000," one parameter around uh saying that this image should be more like the first one or more like the second"
518000,525200," one right so it would be kind of cool to also in terms of ui to implement like a like a scroll where"
525200,529600," you could just like scroll left and right and switch between these two images and see how it behaves"
529600,537200," that would have been cool i think right that would be cool so let's actually try to to implement this"
537200,544560," and i think uh so unfortunately we're starting to get uh a lot of like um training data well a lot of"
544560,549680," i mean i have a 10 years old laptop i'm sorry i don't have a billion dollars for microsoft and azure"
549680,555440," services and shit like that i'm sorry uh i was born in a third world country with just like a shitty laptop"
555440,560880," and stuff like that right so i don't have a lot of resources so we're starting to have uh a lot of"
560880,567600," training data right so essentially here here we have 28 by 28 pixel image so and what that means"
567600,574560," right so if we uh do something like 28 by 28 uh so this is basically how many training samples we have"
574560,581600," right so it's uh almost 800 uh training samples and if we are going to have like the second image uh we're"
581600,589760," going to have uh basically over a thousand right and here is the interesting thing um so the cost function"
589760,596000," the computation of the cost function requires you to uh have all of these samples it requires"
596000,602560," you to iterate through all of the samples so essentially the uh more data you have the longer"
602560,610080," it takes to to just compute uh the cost function right so and eventually what if we're going to train on"
610080,616640," several images right so maybe on 10 images right so essentially this is basically how many training samples"
616640,624560," we're going to have uh right and it's already kind of slow with just 800 samples it is already kind of"
624560,630720," slow we can we can actually test it out let me let me show you so let me especially when i'm streaming"
630720,636960," so when i'm streaming it's like all that is extra slow it is kind of sluggish to be fair not gonna lie"
636960,644160," oh okay so i need to i do need to actually you know rebuild everything because i've made these changes"
644160,646960," uh so let me actually put a little bit of this entire stuff"
646960,656560," so maybe i should disable building some things that are not related to what i'm doing right now like"
656560,663200," uh compiling the adder and the gym and xor and stuff like that okay i'm going to disable that so it's"
663200,667280," already a little bit sluggish so you can you can kind of see every time you restart it's just like"
667280,674880," steps a little bit so it's not really super smooth it's not as smooth as if you for example were trying"
674880,680560," to train a xor model right so in xor model you literally have like a four samples uh and this is"
680560,688160," how quickly it just like learns like it's just like yeah it's it's done during right so sometimes it gets"
688160,693840," stuck in the middle like like here like i don't know why exactly it gets stuck and especially uh"
693840,699840," this specific value gets stuck uh right but quite often it just like it actually learns properly so"
699840,704560," here it's very smooth it's very fast but when it comes to image to neural network it's very slow because"
704560,710960," we have too many samples right and the more samples we have uh the uh worse the situation is going to"
710960,716880," become so how can we overcome this kind of stuff uh we can overcome them uh that by introducing"
716880,723120," something that is called stochastic gradient descent so currently we're using just the gradient descent"
723120,729920," but we can introduce a stochastic gradient descent so uh what is a stochastic gradient descent so let's"
729920,736240," actually take a look at this i'm going to explain how i understand uh what is stochastic gradient descent"
736240,742800," this is how we understood it by watching through blue and brown videos right so essentially uh you have uh"
742800,749360," your training set right so you have your training set uh and it consists of samples and it's a lot of"
749360,755280," samples it's so many samples you don't really want to compute a cost function or backprop on all of the"
755280,762800," samples it's just like gonna take too much time essentially what you do you split your entire data"
762800,770160," into small batches like in this case let's say batches of three right so batches of three and then you"
770160,776640," shuffle those batches around randomly right so you just shuffle them around and essentially on each"
776640,785520," iteration instead of training on the whole data set you're training on one single batch and then on the"
785520,791520," next batch and then on the next batch on the next batch and so on and so forth uh right so essentially"
791520,797600," if you had uh some sort of like a gradient descent right so essentially here is like your cost function"
797600,804160," uh right so there is a local uh optima somewhere here in case of like the actual gradient descent you"
804160,812320," would smoothly actually descend into the local uh minimum but if you actually step with uh one single"
812320,822000," batch right one single batch you're gonna go off somewhere um just a second you will go somewhere"
822000,828160," but then if you go uh and a step with a different batch you will go somewhere here and you will be"
828160,833040," going around like in like random directions all the time but here's the interesting thing since you go"
833040,839600," through all of the batches in theory on average you're gonna convert still to a local minimum instead of"
839600,845440," going straight into the local minimum you're gonna be just like waving around and just like going some places"
845440,848560," but on average you're gonna kind of converge there"
848560,855680," right but it's actually less computation in intensive right because you don't have to compute on all of the data"
855680,860320," right does make sense so that's basically the idea uh of the"
860320,866400," stochastic gradient descent as i understand it i might be a little bit wrong uh but this is something"
866400,873760," that we can try to employ to combat the um you know degraded performance right because we're going"
873760,878960," to have more and more data and i have 10 years old laptop so we have to do something about that at least"
878960,884880," we should try so and this is something that we're going to try to do first right so this is something"
884880,889120," that we're going to try to do first and that's basically plan for today stochastic gradient descent"
889120,894800," try to train on two images and let's just see how they interpolate between each each other if they"
894800,903680," interpolate at all right so okay so i see we've got some subs i see we've got some subs let me quickly"
903680,910880," acknowledge them uh i think we got some subs uh off screen specifically twisty and low guard"
911440,916960," loguerto i hope i pronounced your nickname correctly guy world thank you so much for um a tier one"
916960,922240," subscription nico red age thank you so much for twitch prime with the message yay yay indeed"
922240,927760," lolzora thank you so much for twitch prime really appreciate it uh runs l117 thank you so much for"
927760,935920," tier one subscription with the message hello hello my comrade welcome welcome to our epic uh deep learning uh"
937200,944080," club it's so fucking deep actually uh sodalimon thank you so much for uh tier one subscription"
944080,949120," kachops uh thank you so much for twitch prime and luxian will thank you so much for twitch prime i don't"
949120,956240," know why ui keeps jumping around but i guess this is just basically the web in 2023 thank you so much"
956240,963600," everyone for subscribing let's go ahead and try to implement the stochastic gradient descent so how"
963600,970880," we're going to be doing that right it's actually kind of interesting so we are doing backprop in here"
970880,978320," right so essentially we're doing backprop in here and backprop already kind of accepts the input data"
978320,989120," and expected output data right so essentially if you think about it if we take the sub-matrices of ti and to"
989120,997440," all and fit it into the backprop it will already kind of work right it will already kind of work"
997440,1006480," so essentially what we need we need some mechanisms some functions that allow us to take um you know sub"
1006480,1009680," sub mattresses and stuff like that"
1009680,1017920," but first thing i want to do right first thing i want to do is probably i want to implement something that"
1017920,1024640," will shuffle uh the rows of the matrix for us right so we generated some training data right so where"
1024640,1030080," the training data yeah there we go so we generated some training data let me actually even um oh my god"
1030080,1036720," what is going on i'm just trying to revert the buffers thank you so much okay so we generated some training"
1036720,1045600," data and let's actually try to print uh this entire thing why is it which software in 2023 i swear to god uh"
1045600,1052160," okay so let's try to run this into i think uh what i want to do i just want to print the the training"
1052160,1057680," data there we go so here is our training data so and what i want to do i want to have a function that"
1057680,1064240," will just take all the rows and shuffle them around right so randomly is it really necessary to shuffle"
1064240,1070480," them i don't really know to be fair right so maybe this is where this stochastic part of this stochastic"
1070480,1075760," gradient descent comes from but i kind of have a feeling that you don't need to shuffle it"
1075760,1081680," uh but three blue one brown said that you need to shuffle it so yeah who am i to argue with three"
1081680,1090320," blown problem right but i have a general feeling that it is going to converge to like somewhere on average"
1090320,1096640," anyway like what's shuffling exactly doing i'm not quite sure maybe this is something that we can try we"
1096640,1103360," can try to shuffle and not to shop right so but we'll see anyway so i'm not too smart to actually understand"
1103360,1108640," why why exactly you need to shuffle uh but anyway so maybe we're going to implement uh like a simple"
1108640,1114000," function uh which is literally going to be called like shuffle rows or something let's actually go to"
1114720,1123680," to the library in here and um so let's introduce something like matrix shuffle rows right so and"
1123680,1129920," we're going to accept uh the matrix and it's going to just like shuffle uh shuffle the rows of this matrix"
1129920,1138160," so let me actually go in here so we generated the data and i'm going to do mat shuffle rows and then"
1138160,1142880," we're going to print this entire thing and the question is how exactly are we going to implement"
1142880,1153760," uh this specific function right so uh the usual way people like the naive way uh people shuffle arrays"
1153760,1162000," around are just by basically picking two uh random elements in the array two random elements in the array"
1162000,1168400," and just swapping them right it's not particularly a great way to shuffle the array right so there is a"
1168400,1174320," better way i forgot the name of um of this sort of like the algorithm so i think i can google it up"
1174320,1186240," algorithm uh to shuffle array right algorithm to shuffle array yeah fisher yeats shuffle i i don't"
1186240,1191120," know if i pronounce the names correctly i'm really sorry but the idea of this algorithm is actually"
1191120,1199600," extremely simple uh and it surprisingly makes sense and when you like realize this idea you would think"
1199600,1204960," to yourself why didn't i think about it myself it's just like it makes so much sense why a stupid like"
1204960,1210720," swap two random elements comes into the head instead of that it just like makes so much more sense i don't"
1210720,1215440," know why uh maybe for me personally i can speak only for myself maybe because i'm stupid right"
1216080,1222160," so um right the idea is super simple the algorithm takes a list of all the elements of the sequence"
1222160,1227120," and continuously determines the next element in the shuffle sequence by randomly drawing an element"
1227120,1234560," from the list until no elements remain uh right so essentially i think there was a better description"
1234560,1243440," with the hat right so they got rid of the hat recently i suppose there was a yeah so i think they"
1243440,1250000," changed something so the idea or maybe bag right so they provided an analogy some time ago essentially"
1250000,1258880," put all of the elements into the hat right and just basically draw one by one randomly"
1258880,1265280," and arrange them in a sequence of uh in order you actually draw them out of the hat right so that was"
1265280,1272400," actually a very good description so they replaced it with this dry soulless description of having a list of"
1272400,1276880," elements and continuously determined the next element in a shuffle like what the is that"
1276880,1284160," so description with the hat or it was a bag or something was so much easier to understand than"
1284160,1290240," this that i think somebody changed that so i don't know we need we need to ban that person by ip"
1290240,1292480," so this person shouldn't have an access to wikipedia"
1294320,1301600," wikipedia needs to sound smart yeah so essentially yeah basically put your elements into the bag"
1301600,1309040," right just like shuffle them around and like take them out of the back one by one and put them in order"
1309040,1315360," that you actually draw them right so and in a case of like an algorithm how would you implement such"
1315360,1322960," algorithm it's actually positive forward right so essentially you can have some numbers uh right and"
1322960,1332720," you can essentially iterate uh elements from left to right right so and you can maintain a pointer"
1332720,1339120," right and the pointer can be thought of as the separator between what is already uh taken out of"
1339120,1344720," the hat and what's is already in the hat right so basically everything starting from that point to"
1344720,1352320," the right is in the hat right everything here is in the hat so everything to the left of the of this"
1352320,1358160," cursor is already out of the head and it's already sort of like shuffled around so and essentially what"
1358160,1365760," what you would do uh you take this range you pick a random element from that range and you swap it with"
1365760,1371840," the current element in here right you swap it with the current element in here and you move to the right"
1371840,1379200," so essentially your the amount of the elements in your hat decreased by one and this five is out of the hat"
1379200,1384000," and then you repeat the process pick a random element in here okay this is going to be six you put six"
1384000,1390720," in here swap it around like so and there you go uh and you can do that until you basically run out of"
1390720,1398080," the elements right so that's actually pretty cool and actually really easy to understand uh so we're"
1398080,1404400," going to iterate through the entire thing and what we're iterating right we are uh iterating through the"
1404400,1415920," rows right so there we go uh one of the things we'll have to do uh we'll have to swap the rows right so"
1415920,1423600," and this one is going to be rather interesting uh we can basically then iterate by columns and swap the"
1423600,1425280," columns correspondingly right"
1425280,1441040," so all right and now we need to do the random thing so how can we randomly pick an element out of here"
1441040,1446400," all right so essentially we have three elements in here right so we have to do three we have three"
1446400,1454560," elements in here so here are the indices zero one two three four uh and we have five elements so if i"
1454560,1463680," do something like uh five minus two it gives me the amount of elements in the hat right it gives me the"
1463680,1470240," amount of elements in the hat so that means i can quite easily just do m uh rows minus i and it will"
1470240,1476400," give me this entire thing basically one of the uh elements in here but this entire thing also needs"
1476400,1485280," to be shifted uh by i right so because it's basically from zero to uh to two right so it needs to be also"
1485280,1494320," shifted and that essentially gives me the uh the index j right the index j and now i need to swap uh"
1494320,1501200," ith and jth uh rows right but rows is a continuous thing so i cannot just like swap them around so i"
1501200,1506640," need to iterate through each individual column uh right so it's going to be starting from zero then k"
1506640,1514160," m calls uh plus plus k so and this is where we're going to be swapping elements one by one so this is"
1514160,1527760," going to be met at uh so m um so row i k and this second thing we have to do we have to actually swap"
1527760,1536480," uh j right we're going to be swapping j so interestingly interestingly if it picks this entire"
1536480,1542800," thing maybe we don't need to even do that but uh anyway so i'm just contemplating do i want to have"
1544720,1554400," uh do i want to have like a special swap thing here or do i just do the usual flat t float t uh then i"
1554400,1562480," just do it like that and then just do it like that because i don't really need swap very often right i"
1562480,1567760," don't really need swap very often so i don't think it makes any sense so and on top of that i think it"
1567760,1574400," makes sense to actually check if i not equal j right so in case the columns are too big right so it would"
1574400,1579200," be better not to spend too much time on that and there we go so this is basically how we shuffle the"
1579200,1587280," rows right so this is basically how we shuffle rows in place as well um all right so let me actually try"
1587280,1598800," to uh to compile this into anything and hopefully i didn't do any uh fucky walkie and potentially an"
1598800,1605440," oopsie doopsie so everything seems to be okay so we just like did the uh this working in here"
1605440,1611840," that's pretty cool so another thing uh we need to be able to do we need to be able to actually take"
1611840,1621200," uh like several rows uh from the from the training data so we need to perform like sort of like a batch"
1621200,1626880," uh so do i want to have a special function for that i didn't think so i'm going to try to do that"
1626880,1634640," without any special function let's actually not do any special function uh but we also need to determine"
1634640,1639920," the size of the size of the batch right so what's going to be the size of the batch uh right so let's"
1639920,1647200," say batch size um let's say we're going to have something like 50 right so this is going to be batch"
1647200,1658240," size uh and when we're doing an iteration in here right uh we need to actually know"
1660480,1670960," how we're going to be doing all of that so here we are doing several epochs per frame right so we have"
1670960,1678320," several epochs per frame uh but what we're going to consider an epoch it's basically one iteration"
1678320,1685120," over a single batch or is the is going to be like iteration over all of the batches that's a very"
1685120,1691520," interesting question so if we're going to do uh basically stochastic gradient descent with batches"
1691520,1698480," maybe like epochs per frame is not particularly useful because it's going to be replaced by the amount of"
1698480,1704960," batches right so we can do all of the batches per frame which is not particularly probably good idea i'm"
1704960,1711040," not sure if that's a good idea if you have like too many batches uh so yeah"
1712960,1718240," so it's probably not going to be a particularly great idea but one of the important things we need"
1718240,1724400," to have anyway is probably the amount of batches at all right so this is like a size of a single batch"
1724400,1730960," and then uh we need to do batch count right so how many of them we're going to have so and it's"
1730960,1738800," essentially rows um divided by batch size right but it might not be divisible right it might not be divisible"
1738800,1748080," by uh by this thing right so it might not be divisible so that means we need to actually round it up right"
1748080,1754400," so we need to round it up uh so the easiest way to round it up is actually do plus batches size like minus"
1754400,1763520," one uh right so essentially if there is any remainder if there is any remainder it's going to overflow and the"
1763520,1770160," the division is going to be like plus one and if there is no remainder uh we add a batch uh size"
1770160,1774800," minus one so it's not going to overflow so it's going to be like cut off by the integer division so"
1774800,1781600," it's basically like a seal but for integers right so this is how i i envision that essentially"
1784480,1795040," that's basically how i envision that so and uh now uh how i'm gonna this is actually very interesting"
1795040,1811120," right so i also probably need to keep track of the current batch or do i uh do i need to keep track of the"
1811120,1816960," current batch maybe i can use the epoch as the indicator of the current batch right so since"
1816960,1823040," i'm going to be circling through the batches i can just take the current epoch and do a mod of the batch"
1823040,1828880," count right so i can do a mode of the batch count and this is basically the current batch right so this is"
1828880,1839120," miss st uh batch current right so this is the batch current and uh knowing the current batch i can actually"
1839120,1845520," construct that current batch right and then i can feed that batch into the back propagation"
1845520,1853120," and uh then i can like do the cost but in case of the batch uh you know training and stuff like that"
1853120,1861680," um so we don't really know the full cost and like computing the full cost is kind of like um against the"
1861680,1868800," point anyway right so we don't want to compute the the whole cost uh we only know the cost for per batch"
1868800,1873600," so as far as i know what people usually do right what people usually do they basically compute"
1873600,1884560," an average cost across all of the batches right so computer like average cost across all of the batches"
1884560,1888640," and maybe this is exactly what we're going to do here right so this is probably exactly what we're"
1888640,1896000," going to do here okay so we've got the current batch uh so now we need to construct the the data"
1896000,1905520," right so the input data for the center stuff uh so we already have a ti so that means i need to construct"
1905520,1915440," like a new matrix to i though interestingly uh interestingly it would be kind of easier if i"
1915440,1924240," actually constructed them uh a little bit later right so essentially so we have matty i"
1926080,1931280," the amount of rows uh the amount of rows uh the amount of rows is basically the batch size right so"
1931280,1937840," this is the batch size the amount of columns is uh since it's an input so we're gonna have um two of"
1937840,1946560," them right so the stride is going to be original uh the stride of the t uh and this is where it uh gets"
1946560,1956000," very interesting right so what is going to be the um the elements i think it's kind of easy so we take"
1956000,1966160," uh the ti at the current row and the current row is the batch current batch current multiplied uh by the"
1966160,1973600," batch size yeah there we go uh so this is the current row and we're starting from the from the zero right"
1973600,1979680," and then we take a pointer at this entire thing right so this entire thing doesn't take into account"
1979680,1985920," the remainder uh of the division by the batch size so it kind of assumes that the amount of"
1985920,1992000," batches is actually divisible by the batch size right so it's kind of a bold assumption but we"
1992000,1998720," just do that because we want to simplify things right so anyway and we can do a similar thing in here"
1998720,2007600," so this is going to be the output so the amount of rows is going to be uh rows batch size uh then it's"
2007600,2015200," going to be columns uh this is going to be one right so then this is going to be stride just right and the"
2015200,2022960," elements is essentially kind of the same right it is kind of the same but uh it's going to be ti uh"
2022960,2031440," columns right so and that's basically the batch right that's basically the batch ti maybe i can even call"
2031440,2042960," it like a batch ti uh and batch to right ti to stands for training input training output and uh so the next"
2042960,2048080," thing i can do in here i can actually shove them into the back propagation in here uh right and the back"
2048080,2054400," propagation is going to work on a small subset uh of this entire thing like a very small subset of this"
2054400,2065360," and that's all right so uh and the question is how do we handle uh this situation uh when we're working"
2065360,2072560," with the last batch batch right so when we're working with the last batch so essentially when"
2074400,2080080," so this is the rows yeah so the situation when"
2080080,2093760," something like uh batch size plus batch size is actually greater uh when it is actually greater than"
2093760,2100400," the amount of rows or actually equal right so how do we handle that specific situation i think that's kind of interesting"
2102400,2108400," um"
2108400,2116320," so is there any well i mean um it should be relatively easy to to do that i just didn't think about it uh"
2116320,2124720," like too much on how to do that it would be much easier it if it was just divisible by uh the batch size"
2124720,2132160," in that case i wouldn't have to even think about that in fact i can just do that right i can just say okay"
2132160,2139120," so this is the batch size so it's going to be 28 right because uh we have 28 by 28 so it should be"
2139120,2147520," relatively straightforward to uh to actually do that in fact maybe we can even print all of the batches"
2147520,2152960," right away that would be kind of interesting so i can iterate through uh all of these things right so"
2152960,2158000," batch count all right so this is going to be batch count and i just want to see all of the batches in"
2158000,2168320," here right uh so we're going to put them in here right so it's going to be matrix uh print"
2169920,2181600," batch so and let's give it a try and see if it's going to work or not so batch current uh it doesn't"
2181600,2188880," really like oh because batch current is actually i right so size t batch current uh and this is going to"
2188880,2197280," this is going to be i there we go so ti columns um this one has to be batch ti all right so let's go"
2197280,2202960," through this compilation here so this is going to be batch ti uh what else do we have in here i can't"
2202960,2208720," see what is going to be in here so and it also prints the cost so for now i'm going to disable"
2208720,2215680," print in the coast all right because it's not going to tell us anything uh right and let's just try to"
2215680,2223760," run it and it didn't uh really produce anything useful this is because it would make sense to actually stop"
2223760,2229200," after we printed all of these things right so i should i suppose to actually put zero in here"
2231680,2240240," all right so this seems to be pretty uh legit okay so that's actually kind of cool"
2240240,2247040," that is actually kind of cool"
2247040,2259440," so yeah so the problem i have in here is that i want to do uh like i do everything i do the training and"
2260400,2267360," in a single frame that's that's a huge problem right so uh in a single thread i'm sorry in a single"
2267360,2272960," thread so that means i have to kind of juggle between like amount of operations i do per frame"
2272960,2279600," i don't want to do too many operations and uh so essentially i have a frame within a single frame i can do"
2279600,2289040," several batches but i also want to consider a single epoch as um going through all of the batches right so because"
2289040,2294480," once i went through all of the batches i can compute their average cost and kind of give you the cost"
2294480,2301920," information that you can put on the on the on the plot or something like that so i have frames i have"
2301920,2310400," batches and i have epochs uh and i'm not sure if um epoch is like a single batch or it's it's a round of"
2310400,2316560," batches right so i don't know if it's a like a round of batches or something like that so i don't know with the"
2316560,2322400," conventions i'm not an ai person i'm sorry right i know that there there are traditions there are"
2322400,2328480," conventions and stuff like that but i kind of want to separate the notions of the epochs and batches"
2328480,2333680," right i think it kind of makes sense at least to me right to the person who never actually worked with"
2333680,2345040," this entire stuff uh right so and because of that um i think uh here are we iterating through the epochs"
2345040,2354800," but i don't want to do so i need to introduce batches per frame then so i need to have something that is"
2354800,2363920," called batch per frame all right so let's go ahead and do that so epochs per frame uh so it's gonna be"
2363920,2376560," size t batches per frame so let's say that we're gonna have uh maybe i don't know uh 28 batches per frame"
2376560,2382960," right so we're gonna have 28 batches per frame uh and uh so essentially"
2382960,2390560," we can keep track of the current"
2390560,2393440," man"
2393440,2402000," i need to i really need to think about it right i really need to think how exactly i want to organize"
2402000,2407920," that it's not really easy right so i think i need to make a small break for that right so i'm gonna"
2407920,2412160," make a small break i'm gonna make a cup of tea and while i'm making a cup of tea i'm gonna think about"
2412160,2416880," it how i do want to organize all that and uh then we're gonna continue all right"
2416880,2425840," okay so uh i've got an idea right i've got an idea what if we essentially"
2426960,2434960," keep track of the uh position of the beginning of the current batch if that makes any sense right"
2434960,2440640," so we start uh at here and this is sort of like this is where we start we know the size of the batch"
2440640,2446800," right so we know the size of the batch so we say okay so the batch starts from here and then plus the"
2446800,2454720," size and this is our batch we process it and then uh after processing it one might one time we increment"
2454720,2461360," that counter by the size of the batch so it now points at here right so and then we continue if"
2461360,2470000," there is this small remainder it is easily detectable because the current sort of cursor plus the size of"
2470000,2476320," the batch overflows the amount of batches right it overflows the amount of batches and it's super easy"
2476320,2487680," to detect so we can uh just cut it down and um how to say that uh and do something special on that right"
2487680,2493760," so essentially one of the things i want to do once i protest all of the batches right i want to compute"
2493760,2499600," the average cost right so i want to compute the average cost and uh simply add it to the plot right"
2499600,2505600," so because i want to be plotting the average cost right so since we don't compute the full cost the"
2505600,2511440," only thing we can do we can compute the cost for that batch then for that batch so maybe a cost one"
2511440,2517840," cost two cost three then at the end of processing all the batches we can sum them up and divide by the"
2517840,2523760," amount of batches right and that's how we get the average cost right so it's not exactly going to be the cost"
2524720,2531040," but it's something that is very close it is on average as on average we're convergent just by processing"
2531040,2536000," batches or something like that right so all that is sort of an intuition right so but"
2536000,2545040," we'll see how it will work we'll see how it will work so okay so we have batches per frame this is a"
2545040,2552240," very important metric i want to actually uh this metric to be specifically not equal to uh the amount of"
2552240,2557920," batches like to be something different that's what i'm trying to say so here's the batch size uh here's"
2557920,2564640," the batch count i'm not sure if it's going to be useful uh it could be useful for computing the uh"
2564640,2571680," average average cost so i'm going to keep that uh right so and we can uh keep track of the something"
2571680,2577920," like the batch begin so where does it start right it starts at zero right so it essentially starts at zero"
2578800,2589520," uh right okay uh so this is basically where we're computing all of that so and in here right and in here"
2589520,2600400," what we're trying to do we want to do batches per frame bad chest per frame right so we're doing bad"
2600400,2607040," chest per frame while we haven't processed all the batches in the frame we're not paused and we didn't"
2607040,2616480," ran out of epochs right we didn't run out of the box what we're doing uh we're trying to compute the size"
2616480,2628000," of the batch so the batch starts at uh essentially batch begin right so this is a batch begin uh and this"
2628000,2634800," is another batch begin so this is where it starts i also want to get rid of this entire thing that was"
2634800,2641840," printing the uh all of the batches i don't think it's useful anymore right i don't think it's useful"
2641840,2644640," anymore uh and"
2644640,2655920," all right so one of the things that we need to detect in here right so there's no batch current anymore it's"
2655920,2665120," not particularly useful all right if batch begin plus uh batch size right batch size is"
2665120,2676640," uh greater or equal to the amount of batches right so that uh that specifically means all right that"
2676640,2688000," specifically means uh that we uh are on the last batch right that specifically means that we are on the last"
2688000,2688800," batch"
2688800,2706400," uh so which is rather interesting right which is rather interesting uh how that also means that the actual"
2706400,2712240," size is going to be slightly different right so we have the actual size and this is the batch size"
2712240,2718880," and if we overflow so the actual size has to be a more of a like um"
2718880,2727920," t rows minus batch begin right to uh to account for that specific size"
2729040,2736480," uh all right so essentially if we have so this is like the rows so the batch size is"
2736480,2748960," let's say two right so and the indices of the batches are zero one two right two three four right"
2749680,2758800," so here we have zero uh right so this is where what we're pointing at and uh plus two is gonna be uh"
2758800,2763680," still less than amount of things so it's gonna be fine then plus two it's gonna be fine uh right so"
2763680,2773040," here when we four um plus two is gonna be obviously greater uh than the amount of rows so what we'll have to"
2773040,2780560," do so we have five of them in here uh five minus four is gonna be one and that's the size the actual"
2780560,2787840," size in here so this takes uh care of the reminder easily what if it is divisible by uh this and that"
2787840,2794320," thing uh we're gonna stop at here so two plus two is gonna be four so it's going to overflow that means"
2794880,2800320," for okay so that takes care of all of that right so this specific approach does in fact"
2800320,2807280," takes care of all of these things right so that means here we can actually say that the size is"
2807280,2815840," going to be literally this right uh but that also indicate uh also indicates that this is the last batch"
2815840,2822160," and after that last batch we have to do something right so we have to compute the cost and what not"
2822960,2829280," right so essentially how can we do that so maybe we could have something like last"
2829280,2836320," uh right and here it becomes true uh right and essentially here we process in the batch"
2836320,2846000," uh right so here we're processing processing the batch and essentially if uh last right if last we"
2846000,2852880," incremented the epoch right and we need to also append the cost in here that we compute in a very"
2852880,2860960," specific way uh right so we compute that cost in a very specific way so let me let me see"
2860960,2872160," so we can actually do something like uh float um average cost which is initially zero right it is"
2872160,2882800," initially zero uh so we did a back propagation right we did a back propagation and then we do cost uh on"
2882800,2886400," the same batch we're doing the cost in the same batch we're doing the cost in the same batch but we also"
2886400,2895120," add the cost in here right and if we are at the last batch we take the cost and divide it by the amount"
2895120,2900800," of batches right so batch count right and there we go we also have to reset it to zero because we're"
2900800,2906480," getting on the next round uh right we reset it to zero and on top of that we have to do batch begin"
2907120,2916880," uh we have to reset it to zero as well right so all of that it feels a little bit complicated but because"
2916880,2923040," it is right so we want to be able to do uh several batches per frame but we're not going to finish all"
2923040,2933200," all of the batches in a single frame right so but then uh yeah so does it make sense why it is this"
2933200,2942480," complicated right uh because i introduced the notions of batches epochs uh and frames right so we have two"
2942480,2950480," separate like three separate notions that can be out of sync with each other right so i want to have a fixed"
2950480,2958080," amount of batches per frame uh a single epoch is like a single round of batches so you cannot finish"
2958080,2964640," an epoch on a single frame so all these things can be out of sync with each other right and we can only"
2964640,2970720," compute a cost after we went through all of the batches because we added up all of the costs of"
2970720,2977680," the batches and divided by the amount of batches does it make sense right so and also maybe i'm over"
2977680,2983520," complicating things uh unintentionally right so i don't i don't know right so let me know"
2983520,2988960," so maybe i am over complicating things but we'll see"
2988960,2999920," all right and in terms of okay so we also have to do probably batch begin plus batch size there we go"
3001440,3011360," and by the way this is where we can kind of detect that we are at last uh think without having the last"
3011360,3020240," stop in here if that makes any sense right so if we remove the last uh we can kind of see if batch begin"
3020240,3026080," is greater or equal to the amount of batches so this is the last we don't really need that boolean"
3026080,3032240," variable anymore right so we don't really need that boolean variable uh so"
3032240,3048240," um okay that looks okay uh so we add uh at the cost so that also means uh so here we're computing the cost"
3048240,3059200," but i'm not really sure how useful uh it is in here right so i can't really yeah i can't really print"
3059200,3065920," that course because it doesn't really make any sense uh all right let's go ahead and try to uh to compile"
3065920,3073440," everything we have in here because i think i kind of nailed it down uh right hopefully so batch to o so it"
3073440,3079600," doesn't like something too many arguments for and then cost i'm really surprised why oh because it"
3079600,3087280," doesn't accept the gradient it doesn't really need the gradient at all okay so cost um so it's actually"
3087280,3091440," average cost uh average cost"
3098640,3103920," all right so and we don't use epochs per frame anymore right so that makes sense that makes"
3103920,3111040," sense for sure and to be fair it could be like yeah so the funny thing is that if you have uh too"
3111040,3117920," many batches per frame you can actually go through several epochs in a single frame and that would also"
3117920,3124560," work right because all these things can be out of sync with each other uh all right so everything seems"
3124560,3131440," to be fine so i think i'm ready to just try to run this entire thing and see how it goes right okay so"
3131440,3136960," it was it was not complaining about anything all right so i'm a little bit scared so let's give it a try um"
3136960,3149200," uh so it is actually flickering i don't know why i don't really know why it is flickering honestly"
3151840,3158960," but it's going down so i go i guess epilepsy warning for for this specific thing"
3158960,3168480," all right so it is going somewhere which is surprising to me in my opinion uh right so let's say"
3168480,3175840," that we're gonna have uh batches perfect like let's say we're gonna have 100 batches right so per frame so"
3175840,3183600," that means it should actually go really fast why is it learning so freaking fast what the"
3183600,3198320," this is such an effective holy why didn't i implement that earlier what the that is so"
3198320,3207440," fast even even when i'm straight but that is beautiful this is and look how accurate it is right"
3207440,3217120," like i'm a little bit yeah unsettled by flickering in here but maybe that's by design"
3217120,3223200," maybe that is by design and this is an average cost by the way that's why sometimes it can go up by the"
3223200,3229920," way sometimes it yeah this thing is stuck a little bit i think all right i think it's stuck a little bit"
3229920,3232640," yo that is so cool"
3235920,3236480," all right"
3236480,3242080," i love that too good to be correct yeah"
3242080,3263040," um so we can try to increase the amount of epochs per frame so what about 200 of them"
3263920,3268240," whoever came up with an idea of stochastic gradient descent and splitting this entire"
3268240,3277360," by batches is a freaking genius i i'm telling you right it's only was like six uh six thousand epochs"
3277360,3283440," right so six thousand rounds around all of the batches and it converged beautifully"
3283440,3291360," like it converged beautifully so like what the this is so awesome"
3292000,3296880," and it's even more stable than whatever we had before like holy"
3296880,3304000," maybe the learning rate too high maybe maybe in case of a stochastic gradient descent you don't really"
3304000,3311600," need that however uh rate so let me actually try to reduce it in half at least uh right so"
3311600,3314640," uh yeah"
3317040,3321120," i guess the the fact that it's pulsating is because it's stochastic right"
3321120,3329040," all right so let's actually try uh other numbers right so we have the second number in here which is"
3329040,3337600," six right so let's see how it's going to behave in case of uh six all right so six is a little bit more"
3337600,3343360," more difficult for it to learn because it has like this weird loop right you see it's it's struggling"
3343360,3352560," with six usually uh right but but it learned like in a pretty decent level how to imitate six"
3354400,3361920," and this is something that it couldn't do for me at least uh with like the like the usual thing"
3364320,3373440," and this is awesome"
3373440,3384720," all right so uh so that means and again this is on a 10 years of 10 years old laptop"
3385440,3392560," from me from which i'm also streaming right i'm also streaming and uh twitch when i'm streaming"
3392560,3398640," actually works like the website twitch is actually lagging very like very very badly"
3398640,3404720," right and it made this entire thing speed up dramatically so to the point that i can actually"
3404720,3411360," work with that right so it's actually usable uh right it's actually usable so my learning rate is"
3411360,3415680," constant yeah for now maybe we'll come up with something like more dynamic but for now i think"
3415680,3422960," it's it's fine right anyway so what i want to do i want to actually accept two images now right"
3422960,3437520," i want to train on two images so uh how are we gonna do that so before i uh actually do this"
3437520,3444000," entire stuff i think i want to commit uh whatever i have already right so i think it's gonna be kind of"
3444000,3451200," useful so here i made this sort of separation on uh input and output i don't think it's in it anymore"
3451200,3459040," so there is here is the batches per frame so here is the size uh so batch count i'm not sure how"
3459040,3470800," useful batch count is um so interestingly interestingly uh i want to be able to display an average cost"
3470800,3479280," somehow um all right so at least at the top of training thing but here is the interesting thing"
3479280,3488240," at any point i don't really know the current cost or do i i have a plot actually yeah i have a plot i can"
3488240,3495680," take it from the port yeah um so let me let me quickly do that so the thing i literally can do"
3495680,3506480," something like cost uh f right if plot count is greater than zero uh right if it's greater than zero"
3506480,3514240," that means i can do just plot data plot count minus one otherwise it's going to be zero right so i can"
3514240,3522960," literally take the last value from the plot right so and it's going to be fine hopefully uh so essentially"
3522960,3529120," this is not how you use ternary operator you were supposed to put a question mark in there"
3529120,3533680," okay so what else do you want for me so this is items i suppose"
3533680,3543520," uh okay so that seems to be working uh and now i can see the cost it's it's really useful for me to"
3543520,3549920," it goes down so freaking fast it's insane as you can see sometimes it just like starts to spike"
3551120,3561280," uh oh yeah it found some local sort of optima and it's just like going around the circles i suppose"
3561280,3566240," that's why it keeps spiking and uh stuff like that we can try to restart this into i think"
3568800,3574800," but i really like how you can see the stochastic nature of the whole process right"
3574800,3580240," that's so beautiful"
3580240,3587680," so and then we can take a look at the upscale and this is upscaled"
3587680,3595600," it's really struggling to capture this loop if you know what i mean it kind of struggling to capture this"
3595600,3602240," the most scout thing i've ever seen oh all right so uh that's cool so let me do a committee committee"
3602240,3609840," um okay okay uh and so i don't think i'm gonna commit that"
3609840,3622720," image2nn uh implement uh stg right and i'm gonna push that uh right into the repo right into the repo"
3622720,3628320," so we've got some sub thank you so much killer rexu uh for which prime thank you thank you thank you"
3628320,3639600," what if we would reshuffle training data after last batch that's also an interesting idea right so"
3639600,3648240," to introduce even more random that already kind of makes sense all right so just shuffling it"
3648960,3654560," uh like before training doesn't really make much sense because it's just a different order of the"
3654560,3660560," data what's the point right so that's why i was like very skeptical what's the point of shuffling"
3660560,3666720," before like doing that because it's like it's gonna be stay the same but shuffling it every round"
3666720,3671600," now that makes sense because it introduced like actual randomness every time yeah thank you so much"
3671600,3677600," that's an interesting idea so i think this is what we should try to do uh right so that already makes"
3677600,3684640," sense to me uh okay so let's actually not even shuffle it at the beginning right let's not even"
3684640,3690560," shuffle it at the beginning and then at the end uh just shuffle it and uh let's see if it's going to"
3690560,3698960," like change anything uh all right so it's so much right look at the average cost yeah now we can see"
3698960,3711760," that it's shuffling it um but i mean it converged like quite well i suppose and by the way since we're"
3711760,3719440," doing stochastic gradient set and it's so fast maybe we can just give it more uh you know neurons to work"
3719440,3727280," with right so what if we just do something like uh 10 by 10 or something um"
3731600,3742720," okay i mean it just has more neurons to actually work with i suppose uh right"
3742720,3750480," i guess it still has this like sort of like weird tail uh right"
3756080,3757040," yeah that is so cool"
3757040,3766720," just stir the pile exactly you stir the pile i don't really like that it's not smooth but i guess"
3766720,3776080," if it works i mean who cares yo this is perfect it found a perfect representation of this i think it found"
3776080,3784880," it's getting better and better and better look at that indistinguishable"
3786080,3796000," indistinguishable the ai got so good you cannot distinguish the human written and ai written look"
3796000,3804880," how good it is it behaves just like human holy park you cannot distinguish them anyway"
3804880,3808640," right so if we take a look at upscale"
3814640,3819040," anyway so let's stop around right so we have a very specific goal today"
3819040,3826720," uh we want to combine two images together and that's the goal for today right that's the goal for"
3826720,3833200," today uh all right so how are we going to be doing all that i think we need to accept two images now"
3833200,3843040," right so uh input one uh let's let's put it like this image one image two right no uh no image one"
3843840,3851600," is provided no image one is provided uh so this is going to be image one file path so after that"
3851600,3859920," we can say no image two is provided and here we can have uh an image two"
3859920,3869760," and i suppose starting from like here up until the end it would be kind of nice to replace image with image"
3869760,3877440," one right so can we just like mass replace this and that okay i'm gonna mass replace hoping that it's"
3877440,3885520," going to like at least work it probably won't um okay so it in fact worked okay so we're gonna start"
3885520,3891520," with uh providing the eight right so this is gonna be eight and then we're gonna provide the second thing"
3891520,3899040," training uh six right so we're gonna provide both um yes yes yes yes kawaii freaking that so so everything"
3899040,3899920," seems to be working"
3899920,3905280," i love watching it how it learns"
3905280,3912560," and it's like yeah so the problem with the previous learning process was that it was not always finding"
3912560,3918880," the configuration where it would put two holes into the egg now it finds that configuration every single"
3918880,3922800," time and so fast um right"
3922800,3929520," well sometimes yeah so it's actually kind of good"
3929520,3943920," man that's so fucking cool anyway i'm sorry uh right so um now we are um accepting everything right so we"
3943920,3948640," read the first image in here right so we read the first image so the next thing we need to do"
3949520,3956000," uh we need to read the second image so i need to replace image one with image two so and we just read the"
3956000,3963120," second image about that so we can even maybe like print uh this kind of stuff here right so i'm going to"
3963120,3971280," just do return uh just to see if it worked successfully right uh okay so it managed to read both of the images"
3971280,3978720," into the memory right so what are we doing here here okay so here we constructing the um the data right"
3978720,3986640," so the training set so the amount of rows is the amount of pixels of the first image essentially we"
3986640,3994720," need to double the amount of rows right now we uh have the pixels of the second image as well so this is the"
3994720,4002720," amount of rows we have right so we have even more training data now uh so the amount of columns is"
4002720,4009440," actually going to be four right so we're going to have three inputs and one output so that's basically"
4009440,4016160," what we have so we're adding the pixels of the first image into here right so this is going to be that"
4016160,4025600," so the index is just this which makes sense right so which in fact makes sense uh so here is the input"
4025600,4033680," here is the output and essentially the second value has to be zero right it has to be zero because it"
4033680,4038720," indicates the index of the current image and the third value is the output which is the brightness of"
4038720,4048800," this and that thing okay so now uh what we're going to do essentially uh we're going to uh handle the"
4048800,4057760," second image right so this is going to be each uh two there we go but now we have to actually upset the"
4057760,4068000," index right so we have to upset the index by uh image one width multiplied by image one uh height"
4068000,4076320," right so we upset this entire thing and that should give us like a bigger training set right so let's do"
4076320,4083440," matrix print and this is going to be t and let's actually exit it here and let's marvel at the size"
4083440,4089600," of this training set that's a huge ass training set right so how many things we have in here uh like"
4089600,4097600," 1500 like exactly as we expected right so because it contains both of the images right so look at the"
4097600,4103200," third column this is the index of the image right so for this is the pixels of the first image right that"
4103200,4110880," makes sense and uh yeah the pixels of the second image uh they should have this thing equal to one"
4111440,4116320," right so this uh they should have this thing equal to one and i think we managed to capture the data"
4116320,4124720," correctly okay that's cool we can already try to sort of train this entire thing right so we can"
4124720,4130560," already try to train this entire thing and see how it works uh but we don't really sample this image"
4130560,4137360," correctly so that's kind of the problem uh right is it oh it's actually kind of stuck"
4139280,4144960," huh does it just mean that it doesn't have huh"
4144960,4157760," interesting uh i suppose we probably also want to specify uh the index right so in here we're going"
4157760,4163600," to do a start with uh zero in here uh then we're going to forward this entire thing and it should give"
4163600,4172480," us this entire thing back so i have a feeling that maybe uh what we have to do all right is so the"
4172480,4183920," sampling is correct maybe we should just give it um more uh neurons and stuff like that maybe we should"
4183920,4190400," just give it more so it cannot it really cannot learn but it doesn't really go anywhere uh okay"
4190400,4195920," so let's uh do the architecture so this is going to be seven"
4209360,4216160," all right all right so let's maybe add more things in here so adding more things is not particularly"
4216160,4218240," useful i think"
4226560,4234320," oh it has two yeah that's actually a good point why does it oh okay so yeah that was a stupid"
4234320,4244640," mistake how did it work then wait how did it even freaking work then um yeah that's that's kind of"
4244640,4249600," interesting right so there should be yeah thank you so much there's like three inputs in here"
4250240,4259760," um all right so there's like three inputs and in here uh in terms of ti"
4259760,4268160," there's going to be three inputs in here there's a lot of places where that i have to modify uh every"
4268160,4276480," time which is kind of dangerous uh all right if you think about that now we're freaking okay okay so that"
4276480,4281760," makes sense now now it behaves like at least it tries to behave like eight"
4281760,4294320," right so what's interesting is that it also on the uh at the background also tries to act like six"
4294320,4301120," so it tries to act like six and eight simultaneously right so that means when we're sampling it when we're"
4301120,4308880," sampling this entire thing uh right so let me let me see so this is going to be just like one right"
4308880,4318160," uh so without changing the like anything we should be able to see how it behaves like six but it doesn't"
4318160,4319600," huh"
4319600,4328720," all right so there's it kind of true okay so it kind of tries to do something"
4331120,4337680," uh-huh so there's something wrong maybe with the cost"
4337680,4350480," i need to already go through like the entire thing and make sure that we have like the right amount of the"
4350480,4358240," inputs and outputs and stuff like that but the the fact that the cost going way down that means that"
4358960,4364320," um in there it actually acts correctly so what's up with"
4364320,4371680," yeah this thing should work correctly in my opinion right it literally should work correctly and it"
4371680,4376240," should give us something it should give us the second image right so"
4378720,4395040," so the fact that it goes so low the fact that it goes so low the fact that it goes so low means that"
4396160,4406160," yeah there's something bogus in here"
4406160,4414080," but if we look at this thing it works correctly"
4419360,4432160," okay okay so let's actually go through the entire source code and let's make sure that uh there's no"
4432160,4433920," you know wrong things anywhere"
4433920,4443920," so we pre-allocate it so this is how many uh of these things that we have in here right so we have three"
4443920,4451360," inputs and one output right so that's essentially what we have three inputs and one output maybe what"
4451360,4457840," we have to do let's actually put architecture somewhere like at the top in here right so let's put"
4457840,4464000," architecture at the top in here uh all right and uh so essentially"
4466480,4473200," essentially where is the training data where is the training i can't see the training here here it is"
4473200,4476640," one of the things we can try to do is probably maybe arch"
4476640,4481680," um zero so this is the inputs and the arch"
4481680,4492480," though interestingly it would be way easier if we constructed these things first right so if we constructed"
4492480,4501600," the neural networks first uh all right so that way what we could do is just like inputs of this thing"
4501600,4508000," the amount of columns right so this is the amount of goals and the outputs uh and then"
4508000,4513520," uh and then the columns right so that way we don't really have to update that"
4513520,4521280," uh right so that's basically what we have in here inputs and outputs"
4523120,4530480," so this is that uh this is that so that's actually way better okay so here we're just"
4530480,4537040," constructing the window nothing particularly special so there is a preview image right preview image"
4537040,4547200," maybe one of the things we want to do in here is actually name it preview image one"
4547680,4553120," right so because oh maybe i want to actually do several of them right so because maybe i want to"
4553120,4557120," like view them uh simultaneously but but not for now we're going to do that a little bit later"
4557120,4563120," so uh then i could basically copy the original image in there then i load the texture"
4563120,4567440," and everything seems to be okay in here everything seems to be okay"
4568480,4574240," uh okay so here is the batches uh everything seems to be fine fine in here"
4574240,4578800," so this is the input"
4578800,4588080," in terms of the input so i construct the preview image right i'm just simply constructing preview image"
4588720,4594160," so i put x and y in here and then the index uh 0 1 2"
4594160,4598720," and that should be it then i forward this entire thing and i get something back"
4598720,4605840," uh so that should be fine and then we just render it and in here we're just printing the original thing"
4605840,4613360," and then this thing right so uh which also means that i have to probably do something like this"
4613360,4621280," so here i have to put zero and then i'm gonna get an output and then in here right so we just do something"
4621280,4629920," like this uh and yeah we'll get an output all right don't see any any errors right so everything"
4629920,4639600," seems to be okay uh so let's try to train it one more time so i don't really know why the second image wouldn't work"
4642000,4650240," uh it's almost like it's just keeps do i rebuild whatever i have and yeah i do rebuild okay"
4650240,4653360," because otherwise it wouldn't work obviously"
4653360,4663840," all right"
4669520,4679760," because i'm pretty sure it would affect the cost all right so that seems to be"
4679760,4685440," uh working and in terms of upscaled it managed to do something"
4685440,4688480," so"
4694880,4702880," okay okay so the six surprisingly okay so what if i swap them around what if i put"
4702880,4710160," one in here and zero in here how is this is it going to be here how is it going to be here"
4717600,4726640," okay"
4726640,4726800," hmm"
4726800,4730400," it's almost like"
4730400,4736720," i'm not sure"
4736720,4738000," uh"
4739840,4744960," what what exactly is causing that like i need to be 100% sure"
4744960,4747120," that"
4747120,4751360," this is not a bug"
4751360,4760400," right so i need to be 100% sure that this is not a bug that i somehow uh is the offset of uh"
4760400,4765120," what what do you mean yeah it feels like something wrong with an upset"
4765840,4768640," all right it does feel like something wrong with an offset"
4768640,4774000," uh but it's kind of difficult to tell what exactly could be wrong"
4774000,4783440," maybe i need to make another small break right so i need to think about what could be wrong in here"
4783440,4788640," right if if this neural network cannot"
4789840,4796000," do what i'm asking it to do why does it work only on the first image but not on the second and on the"
4796000,4802640," second it just like feels really weird and if it can work only on the first image why by swapping"
4802640,4808480," the indices it still cannot show the second image so there must be something wrong with"
4808480,4813840," the way i'm approaching this into i think so there must be somewhere a bug in here"
4815360,4825440," i'm pretty sure about that so image so maybe i have set this thing incorrectly right so because yeah"
4825440,4834960," it learned this thing perfectly uh all right but for for the second image it's incapable of doing that"
4834960,4837600," all right so let's make a small break right and after the break"
4839200,4848080," uh right and after the break we're gonna um we're gonna see what we can do all right so uh let's try"
4848080,4855520," to figure out what the is going on so one of the things that was suggested on the uh on the break"
4855520,4862000," is to actually swap uh the uh the arguments around so let's actually see with the usual order of the"
4862000,4868080," arguments right so that it learns to be an eight right we can clearly see that it is in fact an eight"
4868080,4881040," and okay uh maybe because if maybe because of this thing being a zero maybe because of this thing being"
4881040,4887680," zero uh that specific neuron does not even activate anything but i mean there should be there could be a"
4887680,4894400," bias anyway right so there's still a bias for for this kind of stuff so i don't think uh it's that big of a"
4894400,4908880," deal right so all right so let me try to do that uh okay so let me let me see okay so it does in fact act"
4908880,4918240," like six so maybe there is something about the index zero specifically all right maybe there is something"
4918240,4925680," about index zero specifically that's actually a good question what's up with that"
4931440,4934800," that is very interesting"
4934800,4942240," how we made this so fast i just use stochastic gradient descent now"
4942240,4946720," uh that's the way i made it to go at first"
4946720,4956640," that's the way okay so if i try six now uh right if i try six"
4958800,4962320," right it is being six and everything uh and now"
4962320,4966720," if i when i'm displaying this entire step i'm going to set that to one"
4966720,4974160," yeah"
4974160,4977760," it's doing something"
4977760,4982320," yeah it's still kind of out of bounds"
4984640,4991520," so that might be not a bug that might be not a bug"
4991520,5000800," fortunately or unfortunately uh what i'm thinking is that what if we just don't use"
5000800,5004240," zero right what if it's not a zero"
5006000,5013440," uh what if it's not a zero what if it's going to be like a half maybe 25"
5013440,5018160," and here we're going to have a 75 so"
5018160,5027840," interestingly so here we can put 25 is it going to even remotely work"
5030080,5031920," it's going to even remove the work"
5031920,5034320," okay"
5034320,5042400," it is trying to be six which makes sense okay so that's fine"
5042400,5044320," uh-huh"
5044320,5051440," then it kind of like you know struggles to do anything"
5054160,5060640," all right so it doesn't really go that much down but now if i do 75 on that thing"
5064080,5072720," is it going to act like something else"
5072720,5080080," maybe it just like simply doesn't have enough"
5080080,5089120," uh yeah enough neurons right so it doesn't have enough like power to just like produce anything"
5089120,5093600," so what if i make it a little bit deeper right we give more layers"
5093600,5098400," though we're using sigmoid and as far as i know with their problem with sigmoid is that"
5098400,5103200," it kind of like the more layers you have the more it sort of like vanishes"
5103200,5107520," the gradient slowly vanishes so it's not going to be that useful"
5116400,5118880," though it's it's rather fast right"
5118880,5126080," this straight up looks like a bug like holy"
5126080,5129360," all right so um"
5129360,5139120," something else is wrong yeah that's true it's just like it's so sus it cannot be true like i don't believe"
5139120,5144880," that uh there is no bug in there there is some sort of a bug but i can't"
5145600,5153120," i fail to see that bug all right so uh we have a preview image uh so maybe i'm going to say this"
5153120,5159840," is a previous image one preview texture uh original image but this is an original image one and we"
5159840,5168400," have original texture one right so we're going to have these kind of things uh right so let me see"
5168400,5174960," we definitely so let texture for a previous preview image uh this is a preview image one"
5174960,5184720," so this one has to be a preview image uh two right so that's what we have to have in here and this one"
5184720,5194960," is image two uh and then we have a similar stuff so it's just like instead of one we have to make sense"
5194960,5197280," make sense okay so let's go through the compilation errors"
5197280,5204080," what would be stuck on top only yeah that's a good question like what exactly is going on in here"
5204080,5208480," redefinition of preview yeah so this one has to be two"
5211760,5224080," okay okay original image um one what else do we have uh original image one so uh this one has to be two"
5224080,5230640," god damn so this one we have once okay so there's only two things here"
5233360,5242720," so preview image one so this one has to be 25"
5242720,5248960," and which one"
5261440,5266160," can be possible that there a number of zeros and training data is way more than"
5266160,5273600," the number of actual data uh no we're zeros because we're competing the different cost function is"
5273600,5280960," computed by the difference of the actual data and expected one so whether it's zero or not it doesn't"
5280960,5290080," matter it simply doesn't um all right if it deviates from what we expect it's going to affect the cost function"
5290080,5295600," uh negatively regardless of what we're like doing or anything"
5295600,5305600," okay so we need to construct uh this thing so i need to replace one with two so i'm gonna replace in that"
5305600,5316400," uh well that was kind of bad so what i have to do in here is this so this is uh 75 now"
5318560,5329120," uh okay so it's doing thing uh now i want to render like the pair of other things in there"
5329120,5337680," right so uh i updated the this thing and now i'm going to be updating pretty image two two"
5337680,5347840," two two um but now i'm going to be rendering them um so this one is actually image"
5348960,5357360," height two i'm going to offset them by image one width multiplied by scale"
5357360,5362080," so yeah it's going to be offset to the right"
5362080,5367120," uh so and the question is what is the scale can we make it a little bit smaller maybe like"
5367680,5369920," maybe 10 is going to actually fit all of that there"
5369920,5376560," okay so this is what we see in here so i think it's"
5380080,5391600," yeah"
5391600,5401360," i kind of refuse to believe that it cannot accommodate that because effectively what we're doing by the way"
5401360,5411760," chat we're storing three-dimensional image aren't we uh we're storing three-dimensional image right so"
5411760,5417440," basically the third input is the third dimension so how is that different from just two-dimensional one"
5418160,5424640," um so and this is basically the slice of two dimensions right i don't i fail to see how that"
5424640,5430320," just won't work right i just like i literally fail to see how that won't work"
5431040,5440720," um do you have enough neurons maybe i don't uh so uh we can see the uh the amount of neurons on the"
5440720,5446320," screen actually we can just like make it bigger like let's wait let's make it 28 by 28 like literally"
5446320,5452960," the size of the images maybe it will figure that out somehow uh that's the basically all of the neurons"
5452960,5464800," that we have"
5464800,5474240," could it be that extra dimension acting like a bias parameter"
5476320,5478800," um"
5478800,5480240," not sure"
5480240,5487680," and it's surprising that for the first one it works kind of perfectly"
5487680,5494640," maybe i messed up the data somehow maybe i messed up the data so width"
5494640,5503520," how would it react with two the same images yeah that's a good question"
5505120,5515600," six"
5515600,5517600," so"
5517600,5517600," so"
5517600,5517600," so"
5517600,5517600," so"
5517600,5517600," so"
5517600,5517600," so"
5517600,5523600," so"
5523600,5536080," so"
5536080,5538080," so"
5538080,5538800," it feels like there is a bug"
5538800,5545280," and maybe it's even a visualization bug"
5545280,5545280," so"
5545280,5555520," yeah that's a good question thank you so much yes"
5555520,5564320," that's a good question this is exactly why i don't understand why the cost is so slow or so low when"
5564320,5569840," the uh correct only half of the data exactly that's what we're trying to figure out that's a very good"
5569840,5575040," question and also why these biases are so and it get it look how good it is"
5579040,5583920," like the cost like the cost look at that god damn cost function i could have not dreamed about"
5583920,5587120," better cost function in my entire life like what the"
5589680,5595520," so what is going on so what is going on there must be maybe i just don't put enough data in there"
5595520,5599120," like dude this is so"
5600960,5611440," this is so bad"
5611440,5611440," um"
5611440,5619760," so matt at i2 what where so you found an error but where did you find an error"
5621920,5632800," holy okay who okay oh my god you are the hero wash benzin i don't know if i pronounced your"
5632800,5636160," nickname correctly but you are a goddamn hero holy"
5649200,5658240," thank you god damn legend god damn legend"
5658240,5670080," okay you are getting a goddamn vip i i swear to god so people who are not being helpful are getting"
5670080,5678800," timeout people who are helpful are getting vip right so can i auto complete yeah there we go so you're"
5678800,5692800," getting vip now thank you so much sir or man uh yeah cool okay uh so now uh let's actually go back to"
5692800,5699760," original like index zero and index one right so because that's uh gonna be very very interesting"
5699760,5707360," uh used to guess so and like such a simple stupid bug like i i told you right so i told you from the"
5707360,5713840," the beginning it's something stupid i have enough experience in software development i can feel i can"
5713840,5721440," sense the stupid bug right my my software developer sense that's tingling i can sense it's something stupid"
5721440,5723760," right it's it's a typo somewhere"
5723760,5728720," thank you thank you so much uh all righty"
5732400,5739920," because i've seen enough software over the 17 years or already 18 i don't know for how long i've been"
5739920,5748480," been doing this entire shit but used to uh all right all right okay so let me try to now put uh the second"
5748480,5756960," number in here uh right and we should have two separate numbers uh all right and look at that"
5758320,5763760," yeah that's exactly what i'm talking about so there's two slices two separate slices"
5763760,5773280," uh of three-dimensional space so this neural network acts simultaneously as six and eight"
5773280,5782000," right it acts simultaneously as six and eight uh so what's interesting is that not all of these things are"
5782000,5787920," engaged and probably we don't need that many neurons in the first place right so we were adding neurons because"
5787920,5793920," we were not sure what the is going on i i don't feel we need that many of them what if we just like use"
5793920,5801920," the original architecture that we used for a single number um right so this is what we use for a single"
5801920,5810480," number i wonder if it can compress uh actually two numbers into the single architecture yeah okay so it's trying"
5812720,5821440," it's actually kind of doing something it kind of can like it figured out six to some extent and it's struggling"
5821440,5828960," yeah it's well it's it it managed to actually compress something right so this is basically what it managed"
5828960,5835280," to compress uh also let me actually make the scale a little bit smaller uh right so maybe eight"
5836000,5840160," right it's because i want to actually you know see everything on the screen"
5840160,5849680," yeah man this is so awesome holy even though it doesn't have enough neurons to actually model this"
5849680,5855760," entire thing it's still freaking awesome right that we can do like both of them and it's like around"
5855760,5860080," here it starts to struggle a little bit okay so what if we make it a little bit more powerful"
5860080,5869520," uh seven four let's actually add a couple of things in here uh so how zero five looks like just a second"
5869520,5877120," okay well i want to find an a minimum architecture where it can learn both of them uh all right and then"
5877120,5885360," we can try to do half all right then we can try to do half this doesn't look that bad so it looks kind of"
5885360,5892640," good i think it's still kind of scared uh honestly what if i add like another layer"
5892640,5912640," so it's it goes a bit deeper now"
5915360,5929360," uh huh so what if i add this stuff in here we have nine"
5929360,5937040," cost in real time slow learning rate uh i don't think the problem here is in learning rate"
5937040,5943360," uh it's a stochastic gradient descent right it's supposed to be this spiky i think"
5944480,5947600," at least i'm just coping"
5947600,5951760," i'm simply coping"
5951760,5955280," that's kind of cool"
5955280,5959600," that's kind of cool"
5959600,5971680," i mean it's yeah it's encapsulated both of them uh all right so what uh here um at the end of the"
5971680,5977280," execution at the end of the execution we're rendering one of the images what if this is where we're gonna"
5977280,5983200," render something in between right right so what what if this is where we're gonna render something in"
5983200,5984560," between um"
5984560,5991280," actually yeah actually we can put that stuff in both of the places"
5992000,5998080," right right because we also have upscale so we can also see upscale thing here so we're about to render"
5998080,6003040," something in between so we need to basically pick the best uh training model that we've got"
6003840,6005760," uh so let's try to train something"
6005760,6010000," um okay let's try one more time"
6016000,6020480," that's a good one i think more or less"
6020480,6029680," all right i think it's it's kind of stuck in here okay so we're gonna stop in here and it in console"
6029680,6032880," it will show us what's how in between of them looks like"
6034880,6040640," so this is a thing in between it's kind of difficult to see in number but it looks like"
6040640,6047040," monkey to us anyway okay so we also have a upscale version"
6047040,6051200," so yeah this is something between that six and eight"
6051200,6053760," right"
6057600,6064880," so which is kind of cool right so it's just like merged two images together right it basically uh"
6064880,6079360," sexed sex yeah sex say sexed yeah sexed uh right my neural network is haunted one of the things i"
6079360,6086880," want to do is i want to be able to just like put two images uh together"
6087760,6092400," and move between them if you know what i mean right i want to be able to move between them"
6092400,6096400," so i wonder how can i easily do that"
6096400,6102320," because that requires uh to have a view special view"
6102320,6111520," and a slider right and it requires to have a special view and a slider but having a slider would"
6111520,6114480," be actually so cool because like it's it could be interactive"
6116640,6121040," okay so let me start the ui and see where we can put that into this stuff"
6121040,6131360," all right so we could have put it somewhere in here down below right i'm not sure if you can see"
6131360,6137360," that but yeah we could try to put some stuff in here"
6142080,6152320," there's not that much place that's the problem uh okay so we can maybe make a scale dependent on the"
6152320,6161360," on the width if you know what i mean right so if we have on the height actually so uh height"
6164160,6183600," multiplied by 0.5 right so let me see so that's gonna be our scale it's too big i can already see that"
6183600,6192240," um if you run multiple times does it produce similar intermediate images i don't know"
6192240,6201040," uh we're about to find out so can i just put one in here i'm trying to figure out"
6201760,6208080," uh from the uh from the ui perspective where exactly i'm going to put this entire stuff okay so this"
6208080,6213920," thing adapts automatically right so i think i need to put another image down there right"
6213920,6228160," another image down there with a slider as well right okay um so what we need is a preview image"
6229920,6236080," so we have a premium image two let's actually literally create a third one um"
6236080,6240640," let's literally create a third one"
6240640,6248320," uh we're using the existing sizes in here of existing things but i don't think it's a pretty"
6248320,6254480," good idea so let me maybe introduce special things in here so this is going to be preview"
6255120,6261680," width uh it's going to be 28 and height by 28 so it's going to be the same for all of them"
6261680,6267520," uh hopefully right preview preview"
6267520,6278320," so i wonder yeah preview width and preview height so original image it is also"
6279920,6289200," well the original image has to be this way the original image 2 also has to be this way yeah that makes sense"
6292560,6294320," so so and for the preview"
6294320,6301360," for the third one i'm going to put this thing in here"
6301360,6314080," i'm going to replace image 2 image 3. yep yep yep so this one is going to be half and the third one is going to be rendered"
6315520,6316880," essentially at"
6316880,6325040," yeah we don't need original in here"
6325040,6327040," replace 2 with 1"
6327040,6329040," except maybe vector"
6329040,6333600," uh what why 1 3 it has to be 3. what the f you're talking about"
6333600,6346160," uh so x is going to be that but y is going to be that uh so this is that but we also have to multiply"
6346160,6350640," by two because we're going to go a little bit down right so this is going to be the third one"
6351600,6356080," so image 3. um yeah all of that has to be preview"
6356080,6358000," preview"
6358000,6360000," width and height"
6360000,6368400," preview width and height and also the same for these things so click replace image 2 preview"
6368400,6375360," right because it's the same for all of them uh click place image 1 preview"
6378160,6380080," and let's give it a try"
6380080,6394000," okay so uh this third value the third image is going to be something in between must be something in"
6394000,6396960," between but it doesn't work the f"
6398080,6401760," uh because it is not 3"
6401760,6403600," it is 2"
6403600,6408880," okay"
6408880,6425600," right so this is something in between them"
6428080,6433360," so this is kind of interesting so we can try to restart it one more time"
6433360,6436400," so it's uh yeah"
6436400,6447040," generating alien alphabet so the the cool this is not the coolest thing in here"
6447040,6452080," the coolest thing would be to see the transition from zero to one"
6453040,6460000," that would what would be cool to see right i want to literally see that uh so here we can actually have"
6460000,6468000," this sort of thing um so let's go let's go scroll maybe right so this is going to be a scroll and this"
6468000,6473360," is going to be a separate uh sort of variable that we can have in here so this is going to be a float"
6473360,6480080," scroll uh and initially it's just like a half right and uh essentially what i want to have"
6480080,6486400," i want to have some sort of a slider that indicates uh the value of scroll if i if you"
6486400,6492880," know what i mean um right so we can put it somewhere down below i need to be able to draw a"
6492880,6498800," rectangle right how can i draw a rectangle let's find the array leap thingy uh this is going to be"
6498800,6504320," really draw uh rectangle there we go that's what i wanted to have can i draw a rectangle with the"
6504320,6510560," vector thank you so much array send five i really appreciate that ray san"
6510560,6524720," um so the position is going to be like at here right so that's the position uh and it has to be"
6524720,6531200," actually three in here uh so what's going to be the size we're going to put colliderial uh colliderial"
6531200,6537520," also i want to add a little bit of a padding uh right so this is my float pad and let's say it's"
6537520,6544320," going to be uh it could be uh our h multiplied by zero zero zero like one or two or whatever"
6546720,6560640," colliderial uh colliderial vector two uh size um i suppose is going to be uh so in terms of like x i suppose"
6560640,6566720," um it has to be this"
6568480,6577680," width width width but multiplied by maybe two right it's going to be width of two images in here"
6577680,6585840," um and in terms of height let's say it's gonna like have our h zero zero zero like four or something"
6585840,6592160," right so i'm making everything dependent on the height of the window so when i resize it also resizes"
6592160,6598560," along uh right so that's basically the idea so in terms of the color let's actually make it red for"
6598560,6607280," now just so we can see uh how this entire thing looks like right okay this is huge absolutely freaking"
6607280,6617600," huge i'm actually quite surprised how huge it is um so yeah i suppose if this is the size it has to be like"
6617600,6623040," this and this has to be like this right that's the mistakes i've made"
6623040,6632960," stupid fucking mistakes man yeah there we go so but it's too thin i think it's too kind of thin so let's"
6632960,6641280," make it a little bit thicker just a tiny bit thicker okay so that's a bit better but could have been"
6641840,6648720," smaller like half of that also padding is too small uh right so i think i can make a similar padding by"
6648720,6653760," the way i stole the idea of this sort of like relative units relative to the window from jonathan"
6653760,6659680," blow it's basically when he develops like user interface he usually does things like that and it's"
6659680,6667920," super convenient actually it's a very easy way to just like make uh resizable adaptive ui if you know"
6667920,6672480," what i mean it's like i never thought about it right so just think about not in terms of pixels"
6672480,6680480," but in terms of these relative units uh right and like in terms of this relative units"
6680480,6689440," uh all right so we have this entire thing which is uh particularly nice okay so and it would be nice to"
6689440,6696240," have on top of that also some sort of a slider right so some sort of a slider so i want to"
6696240,6705040," like encapsulate this entire thing so it doesn't leak too many like variables in here um so let's"
6705040,6710800," introduce the width of this entire stuff right so this is going to be the width might as well actually"
6710800,6720320," literally just use vector to size right so vector to size and just use this thing in here like so"
6720320,6730800," and this is the size so then uh if i want to render uh another thing in here"
6730800,6737040," it's not very adaptive but scalable and good enough in many cases"
6738160,6748160," depends whatever words you want to use uh sure anyway so where we want to put um our thing right"
6748160,6755200," so we want to now put a knob right so we want to put a knob where we're going to put that so i think"
6755200,6763760," i'm going to put it in the form of a circle right so draw a circle uh can i just use circle v okay so that's"
6763760,6779920," pretty consistent um and we want to put it starting at x but it's going to be plus size x multiplied by"
6779920,6784640," the scroll and the scroll is the value from zero to one right so that's basically what we have in here"
6784640,6793600," uh so in terms of y uh y is going to stay the same uh so maybe i'm going to do a position right so this is"
6793600,6799520," going to be a position uh position"
6799520,6806800," size okay so this is the scroll and position is going to be just uh you know y in terms of"
6806800,6817840," of the radius uh let's say that the radius is going to be also or h but zero um actually one we can"
6817840,6826000," maybe it's going to be too big uh but maybe uh yeah uh so this is the radius and let's make the core"
6826000,6835760," maybe red uh but in this case i think i want to make this thing white uh right so slowly slowly slowly"
6835760,6842480," building up the the ui thing and as you can see yeah it's in in the middle precisely somewhere here"
6842480,6848560," uh not really right so it doesn't take into account the uh the width of this entire thing right"
6848560,6854560," so in terms of y it also has to do plus the uh"
6854560,6862320," uh this thing divided by two right so this is also what it has to take into account in the radius i"
6862320,6867440," think could have been smaller definitely uh at least three right so"
6867440,6875760," all right so that's a good slider i think it could have been actually put a little bit lower"
6875760,6880960," uh right in terms of the padding and stuff like that so let's actually put like five in here"
6880960,6885680," uh i think that would have been a bit better so we get some subs by the way let me quickly"
6885680,6892640," acknowledge that because i'm not sure if we'll be able to do that so uh the real geor juve i have"
6892640,6896320," apparently announced your nickname correctly thank you so much for which prime yuri solovio thank"
6896320,6903120," you so much for tier one and mf ghosting and thank you so much for which prime all right so"
6903120,6911840," uh all right so this is what we have in here uh cool i want to be able now to also detect that i"
6911840,6922480," clicked on this entire thing so let's say this is a knob radius and we also can have something like"
6922480,6932800," character 2 knob position right so this is a knob position and you can put it like that knob position"
6932800,6939040," so we have a knob radius and knob position we need to know the position of the mouse"
6939040,6949040," right we need to know the position of the mouse and uh detect uh that we're inside of the knob mouse"
6949040,6960720," cursor okay so you can do get mouse so there should be a way to get mouse array whatever the it is okay"
6960720,6967280," that's very cool you can get mouse position that's very cool as well okay so maybe this is something that"
6967280,6978320," we're gonna do uh it actually depends um right so we also want to have uh a thing scroll dragging"
6978320,6982080," right dragging false uh right"
6982080,6992480," so can we detect a mouse click uh mouse button"
6993840,7001440," pressed okay is mouse button pressed once that's probably what i want and what kind of buttons can"
7001440,7008800," we have in there right so is mouse button um down check if mouse button is being pressed"
7008800,7016400," uh so when we actually went sort of down uh pressed and released"
7017120,7031680," all right uh so we pressed it down um if mouse press down but what button so mouse button i suppose left"
7031680,7040240," right so when we care about the left one if the left one is pressed and the mouse position you get mouse"
7041440,7049920," uh position is inside of this entire thing right so vector to mouse right so we need to find the distance"
7049920,7058480," uh distance um i think there was like a math in here uh distance yeah vector distance"
7058480,7065440," this is what i want um i clearly guessed it actually right distance between the mouse uh and"
7066400,7075200," knob position we can even call this mouse position right for the consistency and if this entire thing is"
7075200,7082880," basically less or equal than the knob radius right knob radius"
7086000,7100640," uh to to the two if it is knob radius um we have to do scroll dragging becomes true right scroll"
7100640,7103280," dragging becomes true um"
7103280,7115360," okay so does that make sense i think that makes sense okay then if is mouse"
7116000,7122720," button button released right released once on on that specific frame right released"
7122720,7131440," mouse button left regardless of where we are scroll uh dragging is going to be false"
7131440,7140240," and here is an interesting thing right if we are in a scroll dragging situation if we are in a scroll"
7140240,7145600," dragging situation we need to take the mouse position and we need to translate the mouse"
7145600,7150960," mouse position into the scroll value right we need to translate it into the scroll value"
7150960,7156080," and this is very interesting thing so essentially"
7156080,7164720," um we're gonna start with just having the x value right so we're gonna start with the x value and this"
7164720,7175280," is actually uh yeah we can straight up just do something like x right if x is less than the position"
7175280,7183440," the uh basically the beginning of the scroll uh all right if it's less we just assign it back to it"
7183440,7191680," so we clamp this entire stuff if it is greater than position x plus size x uh right we assign it"
7191680,7199280," back to it so we clamping that x value between those things right so that's what we're essentially doing"
7199280,7207440," we're just clamping it there then i'm subtracting uh a position x from x to make it from zero to size"
7207440,7216400," and then i want to divide this thing by the uh width of this entire stuff and that's the new scroll"
7216400,7222960," value in here all right so i'm doing a little bit of a like interpolation and stuff like that but that should"
7222960,7230560," work that basically should give us the scroll that we can use uh so we have an unused uh variables"
7230560,7237040," somewhere in here so uh let me see why is this thing not yeah this is true this is not used what"
7237040,7245200," else do we have in here um so yeah it's not uh visible because it's array math so we have to actually"
7245200,7255760," include array math in here all right so that should be fine okay cool can we yeah we can"
7255760,7268640," why did this work first try what the i literally just made immediate ui widget literally for how did i"
7268640,7281520," fucking do that it's so right people think you need an entire framework to make ui i literally just made"
7281520,7292400," um a ui widget out of nothing right literally i had only function circle and uh rectangle right of course"
7292400,7298160," like i had like a pro mouse button press and stuff like that but like i didn't have need like an entire"
7298160,7304080," ui ui just to do that 27 lines of code what the fuck i didn't even expect that it would work out what"
7304080,7313040," the fuck anyway i'm sorry yeah why do you need qt or anything like that or how is it supposed to"
7313040,7323440," be pronounced cute uh right or like slav like uh how uh or how slav calls them cute as far as i know"
7323440,7330960," all the slavs call the cute cute or qt as qt because that's how we pronounce things right"
7330960,7339200," at least east slavs and i know poles also call it called qt uh i'll know for a fact"
7339200,7349760," uh all right so we have this thing uh which is kind of cool and uh yeah as a poll i confirm yeah"
7351360,7358000," so i used to work in a place where uh one of my colleagues was from poland and that's that's how"
7358000,7360560," i know that paul's also pronounced it as qt"
7360560,7369840," okay that's a good one i want to actually train"
7369840,7376400," uh this thing to the point where like both of them resemble something right"
7377520,7381200," both of them resemble something and i would stop somewhere here"
7381200,7385200," okay so let's actually make it a little bigger now the moment of truth"
7385200,7391360," this is what the"
7391360,7402240," it is look look at that look at this circle look at this it is this reusing this circle"
7403200,7411920," what the i didn't expect this like holy this is what it's doing it's yeah"
7411920,7420240," where the you can use this for different transition effects in videos and stuff like that"
7420240,7426560," for cool transition effects like you have two like scenes and you want to transition from one scene to"
7426560,7430960," another scene train a neural network on both of the scenes and transition between them"
7433200,7442640," look look look how it's so freaking cool"
7442640,7445280," oh"
7445280,7450320," okay let's actually try to"
7453840,7460800," and by the way so here we have only one output we have only one output which is brightness"
7460800,7473200," what if we add three outputs r g and b so we can have colors imagine transitioning not only like shapes"
7473760,7475120," but also colors"
7475120,7488160," this is so freaking cool i i just like i'm poked out of my mind like right now i'm literally poked out of"
7488160,7499120," my mind this is so freaking cool okay so i think they got to the decent place excuse me this is a decent"
7499120,7507600," representation"
7507600,7513200," yeah"
7513200,7519200," uh what's interesting is that um"
7520720,7523840," you can have several images in here who said you can have two"
7523840,7534240," what if we like take n images we divide one by n and put these images on like equal intervals"
7534240,7540880," and just train this thing to to behave like this three-dimensional right so essentially if you have"
7540880,7548080," an images you have like a three-dimensional cube where each slice is the image and you're trying to"
7548080,7553440," approximate that you're trying to imitate that so and that way by scrolling around you're going to be"
7553440,7556800," scrolling through all these images and they're going to be transitioned between each other"
7556800,7561840," right what's interesting is that this is a single parameter"
7561840,7570640," what if we have like two parameters or even even furthermore uh let me actually see"
7571760,7577840," what if we create some sort of a simplex and basically a simplex i mean like um"
7577840,7584400," multi-dimensional triangle right so as far as you know uh like triangle is a two-dimensional simplex"
7584400,7589360," right so then you can add third dimension and you have like a pyramid and stuff like that what if we"
7589360,7595520," have some sort of like a simplex right so essentially uh we have three images and we"
7596160,7605120," basically imagine that they are on a triangle right they are on a triangle and then instead of a single"
7605120,7612240," index we have two indices that essentially describe the coordinates on that simplex"
7612240,7620080," right and the closer that point is to a particular image the more it will resemble that image it's sort of"
7620080,7626400," like a kind of like a barycentric coordinates and that way you can basically define i want my final"
7626400,7630640," image look more like this one but a little bit like this one and this one so we can actually"
7630640,7638400," parameterize this entire stuff with a vector right so basically you can put these images in a space"
7638400,7645440," in a continuous space uh and then uh your parameters can be a point in that continuous space and the"
7645440,7649920," closer that point is to a particular image the more it will resemble that image but it will also"
7649920,7659680," will include elements from other images wait a second is this how like text to image models work"
7659680,7667520," essentially well here's the thing text is a discrete thing it's not a continuous thing but there is such"
7667520,7676000," thing as word2vec right word2vec it's basically as like a family of algorithms that allow you to"
7676000,7684160," take words and put them in another continuous space so is that what like stable diffusion is it's just"
7684160,7690880," like it trained on a bunch of images and it has these parameters as a vectors and it just uses word2vec to"
7690880,7698960," is that what it is really like i i don't know i'm not an ai person i don't know how these things work but"
7698960,7705600," but is that how this thing works i i don't know like"
7705600,7717280," yo did you just like made a mini stable diffusion or something i don't know probably not these kind"
7717280,7722720," of things are probably way more complicated and probably do things completely differently but it kind of feels like a"
7722720,7732480," i can see like training like a huge model on a lot of images and having like a lot of parameters in here and just like"
7733120,7738240," uh you know uh you know yeah it's actually very interesting"
7738240,7749920," this one is cool look at this one"
7753520,7757360," and depending on how you train them they actually transition slightly differently"
7757360,7771360," this is so cool"
7778400,7785520," oh my god so uh can we make this entire stuff smaller right so i want to make a smaller neural network"
7785520,7796000," i think the smaller neural network is the cooler transition will become you know why because with a"
7796000,7801520," smaller amount of neurons the neural network is kind of forced to reuse some of the shapes"
7802160,7807840," uh all right it's going to be kind of forced to reuse some of the shape okay so this one is actually"
7807840,7811360," rather cool yeah look at that"
7811360,7826880," it's so awesome look at that it's just like this thing appears and it's just like oh the"
7826880,7837440," fuck"
7837440,7846160," so maybe since we have sliders i can probably make a slider for a rate as well if you know what i mean"
7846160,7851440," all right so then at some point if it starts to spike around like that i can just like"
7852160,7857600," stop it and just like reduce the rate a little bit manually and then continue training that would be"
7857600,7858880," it would have been interesting i think"
7858880,7863280," all right"
7863280,7872000," uh would be kind of scary if zero five would output seven yeah it would be kind of scary but i mean it"
7872000,7878880," doesn't have any notion of like numbers all right class illusion thank you so much for twitch prime and"
7878880,7885440," distant code thank you so much for uh twitch prime as well okay so we're streaming for almost three"
7885440,7890960," hours all right so if we didn't have that stupid bug maybe i could manage to actually do that within"
7890960,7896640," two hours but it is what it is that software development for you and it isn't what it isn't so"
7896640,7904480," yeah so what if we make it even smaller right okay i'm kind of curious what's gonna happen so what if"
7904480,7912800," it's gonna be like four i think at seven four it's not really capable of actually learning both of the"
7912800,7920240," images right they're gonna be unfinished they're gonna be very much unfinished yeah i don't think it will"
7920240,7927840," be able to figure it out but yeah so it's kind of stuck on on this kind of ship doesn't have enough power"
7928400,7934080," to approximate to approximate that but it's trying it's going somewhere"
7934080,7943200," all right so i'm gonna do a committee committee right now just for people who want to try that out"
7943200,7945200," uh so let me go in here"
7947440,7954400," interpolate"
7954400,7965680," between two images and i'm gonna push that right into the repo so i guess the next step would be to"
7965680,7972800," add images and make things like have more resolution uh by the way with the images with a higher resolution"
7972800,7979360," you don't really have to make each pixel a sample in the training data you can uh basically sample"
7979360,7985920," things with a certain interval right pixels with a certain interval or you can sample them randomly"
7985920,7994320," or uh maybe even use like a blue noise right so you guys know what is a blue noise right blue noise"
7996000,8004640," just a second so it's essentially um when you do blue noise on two-dimensional uh surface you have"
8004640,8012000," random points with the regular intervals right so they're not particularly random right but they're"
8012000,8021200," still kind of random right so we can basically take big images and train on them but sample not each pixel"
8021200,8026560," uh but like blue noise sample that would have been also interesting so that will lose a little bit of"
8026560,8032480," information and that will force the neural network to basically approximate between the samples uh right"
8032480,8042880," so yeah that's pretty cool interesting topic and i wonder how many different like how many images you"
8042880,8051600," can like basically cram into that model uh i suppose as many as essentially the architecture of the neural"
8051600,8058240," network will allow um use for videos to generate images for slow motion yeah so there's a lot of"
8058240,8064560," applications you can see for this entire thing uh right maybe interpolation between frames by the way how"
8064560,8072000," does the these like uh you know things that upscale frame rate to 60 fps work do they work like that"
8072000,8076720," do they just like interpolate between the frames using neural networks or something like that but i don't"
8076720,8085600," know right all of that is super new for me um but anyway i guess that's it for today thanks everyone"
8085600,8092400," who's uh watching me right now i really appreciate that uh have a good one and i see you all uh on the"
8092400,8098320," next recreational programming session uh thanks a lot for watching love you"

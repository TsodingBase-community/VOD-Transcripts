start,end,text
960,4960," looks like we're live hello everyone and welcome to yet another"
4960,11520," allusion session allusion session let's make a little bit of an announcement and officially start"
11520,21440," the stream so let me pull out my discord server uh okay so let's do a red circle live on twitch"
21440,28720," and what are we doing today on twitch.a television website today we are implementing a c compiler"
28720,35280," in php help out that so i'm gonna give the link to twitch.tv starting the place where we do all of"
35280,40000," that i'm gonna ping everyone who's interested in being pinged and there we go the stream has"
40000,48960," officially started so since today is april fools uh i'm obligated to do something quirky and weird"
48960,56560," so and because of that i decided to just do something quirky and weird and what could be more"
56560,64240," quirky and weird than implementing a literally a c compiler in php so that's what we're doing today"
64240,69200," that's what we're doing today hello hello everyone welcome welcome welcome"
69200,77520," uh so thank you so much uh fabio hbf for uh tier one subscription thank you thank you thank you"
77520,84080," uh with the message codyng cool codyng cool indeed because what we're doing today is in fact very very"
84080,91840," cool uh so let's go uh i'm gonna start team yux and let's go to uh codyng and uh let's create a"
91840,99040," folder uh let's call it uh c.php i think it's a it's a good name for for this entire thing for for the"
99040,105680," project right so uh what we're going to be doing right so i want to implement like literally a php"
105680,113440," script that accepts a c code and compiles it down to uh to assembly right so that's what we're going"
113440,120400," to be doing today we're going to write a php script that processes c code and generates assembly out of the"
120400,127360," c code of course we're not going to implement like a fully standing compliance c uh what i uh plan for"
127360,133920," today is to just go ahead and since today is april fools i suppose to do something weird and quirky"
133920,142560," so let's use vim uh for for the entirety of the stream right so uh yeah there we go i can't zoom in"
142560,150000," i can't can't zoom in on this goddamn editor uh maybe i can just like make the uh the font a little"
150000,156880," bit bigger i forgot how to do that so there's a use of 20 maybe how about 22 i think that will be that"
156880,166480," will be a little bit weird better um okay so um essentially my idea is that uh we're gonna implement"
166480,176720," a like a small subset uh of of c right in php so enough to to compile down a hello world right so let's"
176720,182160," actually go ahead and just create such hello world i'm gonna create hello c so what we want to support"
182160,189840," is i suppose including uh some um some standard headers so i think for now i'm gonna just basically"
189840,194640," ignore all of the pre-processed directives and stuff like that so this one is probably not going to have"
194640,200560," any effect so we want to be able to define like simple functions that returns integers right so we want"
200560,207440," to be able to also have uh return a number from such functions right so and then we probably want to"
207440,213920," support printf to some extent to just print hello world maybe it's not going to be a full support of"
213920,221040," printf but um i have an idea of making printf an intrinsic for now meaning that the compiler will see"
221040,226640," this function call uh and it's not going to call an actual function it's going to replace it with like"
230560,238160," like that so essentially uh i want to implement enough of the c compiler in php to compile this"
238160,243760," program to a native executable right that's the basically the idea for today's stream and i think"
243760,250000," this is kind of doable uh in like for like in two hours maybe maybe a little bit more we'll see it just"
250000,255520," depends on on the mood and stuff like that on how it goes i think that's a pretty good challenge i think"
256160,263360," uh right sounds sounds like fun i don't know so uh let's go ahead and freaking do that i already"
263360,270720," created a c.php file i already started this entire thing with open triangle bracket question mark php"
270720,276000," you're supposed to actually end it with a question mark closing this entire thing but as far as you know"
276000,281360," professional php developers just simply don't do that they never close this entire tag and this is"
281360,286800," totally fine in php so let's actually write hello world i don't remember anything from php to be"
286800,292960," fair i haven't programmed seriously in this language ever uh and i programmed unseriously in this language"
292960,298320," some time ago and i like i don't remember what was what was in this language but i remember that it had"
298320,305040," like a hello uh hello function that just brings stuff to the standard output so let's actually say hello"
305760,314640," uh world right so hello world and i suppose what you're supposed to do is just uh just this so uh"
314640,322400," unexpected on the file expecting um comma or semicolon so is it supposed to be ended uh with semicolon yeah"
322400,327120," okay so that's true it doesn't have a new line in here so that means we also have to put some sort"
327120,334560," of a new line in here and there we go we wrote a hello world in php i think this is already a great start"
334560,341360," this is a very very good start so we've got some subs and beats and stuff like that uh so let's"
341360,346560," actually acknowledge them zwony codes uh thank you so much for tier one subscription with the message"
346560,354240," okay so uh thank you lapis on the moon for uh twitch prime submission thank you thank you thank you"
354240,359360," uh enumerate uh with that 100 beats thank you so much for 100 beats with the message"
359360,366480," sodding weird happy tomfoolery day happy tomfoolery day to you too thank you thank you so much uh peter"
366480,370400," nah uh i hope i pronounced your nickname correctly thank you so much for tier one subscription with the"
370400,375760," message giving money to basis because i still forgot to cancel it yeah that's basically how it works"
375760,381840," that's basically how subscription works essentially you just subscribe once and you forget about it"
381840,388080," and you keep becoming poorer and poorer and poorer uh john x slayer thank you so much for twitch prime uh"
388080,392720," with the message php the one true programming language it is true that's the only true programming"
392720,399040," language the other languages are just like uh derivatives of php basically right so it all started"
399040,405040," with php uh cena basil thank you so much for five community gifted subs thank you thank you thank you"
405040,412480," all right so that's pretty cool we already know how to write a hello world so i'm not even sure if this"
412480,417440," is a correct c program that we wrote in here all right so let's actually try to compile it with an"
417440,423520," actual c compiler just to make sure that you know uh it is an actual c it is an actual c problem would"
423520,428240," you look at that okay let's remove that uh okay so i suppose the first thing we want to be able to"
428240,434240," do we want to do we want to be able to read a goddamn file how can we read a goddamn file in this goddamn"
434240,440480," language uh i don't have no idea so uh let me actually google that php read file"
440480,456880," who would have thought literally php read file how about that cool uh outputs file and this is not really"
456880,463440," what i wanted uh so let's actually give it a try so what if i do read the file and i'm gonna say okay"
463440,472880," hello dot c cool uh and then if i run this entire thing php uh c dot php and there is a syntax error"
472880,479120," because again i forgot the semicolon imagine requiring semicolons in 2023 and it just prints it it acts like a"
479120,486000," cat uh we implemented cat uh we implemented cat right so we implemented hello world and the next second we"
486000,492720," instantly implemented cat that's how efficient we are but this is not what i want i didn't want a cat"
492720,503600," i wanted a dog nobody uh all right so and my keyboard died just a second uh oh okay so it started to work"
503600,511360," again so everything's fine um okay so is there any other way to read a file uh is there any other way"
511360,521840," to read the file i wonder um file get contents this is actually pretty cool i think that's what we want"
521840,527840," uh yeah read entire file into a string so and it returns a string or false this is actually perfect"
528480,535600," so uh let's do file get contents right and even highlights that so and here we're gonna have a"
535600,543280," source so am i supposed to like do something like source uh like so right uh and let me let me see is"
543280,549040," there any examples on how to use this thing uh yeah this is how we do that and then you do echo echo"
549040,556160," so you don't even have to provide the parenthesis apparently around the around the arguments of echo"
556160,561040," uh which is actually kind of cool so it also accepts some parameters so we set true to here"
561040,568720," um so use include path oh it's something php specific i suppose there's also context there's offset"
568720,574320," length we don't really care about any of these things so i think we're good to go uh so let me"
574320,580960," actually put some stuff around uh this entire thing uh right and just do echo of course you have to put"
580960,587600," semicolons in here uh so this one is an echo and i just want to print the source code surrounded by"
587600,593440," the by the lines those separating lines and let's see how it's gonna go uh yeah it seems to be working"
593440,598720," it seems to be twerking but of course i have to provide the new lines in here of course so there"
598720,604960," we go so that means this is a proof that we're capable of reading the source code and actually saving"
604960,612320," that source code into a variable uh ben show me benjamin i hope i promise your nickname correctly"
612320,618080," thank you so much for twitch prime thank you thank you thank you really appreciate giving money to jeffrey"
618080,623200," bezos so as you can see we're already capable of reading uh the source code from a file so let's"
623200,628880," actually uh create like something like file name and put it in here just in in case we want to report"
628880,634000," errors in the future right so that's probably something that we want to do i didn't want to"
634000,639760," do that i wanted to do something like this okay so i suppose the next thing we need to do we need to"
639760,648080," uh create alexa right so because the first step in the compilation of any goddamn language is alexa"
648080,655120," right so it is alexa so let's remove all of that stuff and how i'm going to implement alexa i suppose"
656320,663040," i know that php had classes can we create like a class uh okay okay so it actually highlights this"
663040,670080," kind of uh right so we can create a class lexa uh but i want to have a little bit more information on"
670080,677200," that so we're going to be going into a little bit about oop uh classes how to use classes"
679600,687760," uh so people are subscribing like crazy holy shit uh starry love uh i hope uh i pronounced"
687760,692560," anything correctly thank you so much for twitch prime thank you thank you thank you uh all right"
692560,700160," so php courses and training online with coursera enroll for free now okay so how about that"
701360,712640," so maybe this course is actually useful i'm not really sure if i care bro php oop w3 schools this"
712640,719840," is precisely what we need okay so this is how you define uh a class you can define a fruit and code goes"
719840,728160," here got it so you can define properties which makes sense and you can define methods good enough so"
728160,733680," essentially for the lexa i want to have a method uh something like next token right and i would expect"
733680,741200," this thing to return either next token or maybe something like false similar to file get content"
741200,746960," right so since then it's a dynamic language it can return different kind of things uh it can return"
746960,752560," a string or if it cannot do something it can return false so through that we can indicate some sort of"
752560,759360," end of the stream of tokens or some sort of error or you know the usual stuff so um let me actually"
759360,765760," find the file get content i closed that specific page for some reason i should have not closed it"
765760,773920," okay uh so yeah there you go so as you can see in here they are saying that this function a file get"
773920,779120," content can return either string or false and i suppose it returns false in case if we cannot"
779680,784640," uh basically read that file i wonder like let me actually try to do that so for instance if i do"
784640,794960," uh cpp right if i just do cpp uh it says uh unexpected source um that's very interesting so unexpected source"
794960,801600," why did it say unexpected source huh uh t variable"
803040,811280," huh so is that because of yes probably because of this uh-huh but if the file does not exist right"
811280,819120," if the file does not exist uh it says no such file or directory okay so it still logs something and i"
819120,826560," suppose at the same time just returns false uh which makes sense right so maybe in case of if like not"
827120,834720," uh not source right if not source we can do something like exit uh with a non-zero exit code or whatnot"
834720,842080," what's funny is that maybe it's not even required right so can i just do something can i do something"
842080,850480," after reading the file has failed can i do something after uh reading the file has failed this is actually a"
850480,857360," very good question uh no i cannot it just exits well i mean i keep forgetting about this thing uh i can"
857360,863280," okay so it just logs an error but continues the execution and this is why it may return false"
863280,870400," right so and uh this is where we can just do exit with 69 or something like that uh right and as you can see"
870400,875680," we can stop this in the execution right so i think it's kind of important because if we couldn't read the"
875680,882960," file there's no point in trying to tokenize that or do anything with it so uh we should check if we"
882960,889200," didn't get anything and we didn't get anything just to return like exit with like 69 and did it actually"
889200,897920," exit with 69 yes it did as you can see uh in here it says 69 is not cool i think that's pretty cool uh"
897920,905280," that's pretty poggers modules um so let me let me see so we are supposed to have some properties right"
905280,912160," so we can actually uh have a public property called uh the content right or maybe the source uh right"
912160,920160," but the question is how do we construct such lexa do we have any sort of like constructors right oh yeah"
920160,927360," the chat says there is a there is this like very common concept right so file get content or die"
927360,932880," yeah yeah i remember that thank you thank you for reminding me uh so php die"
934880,946240," very funny uh okay so it is a poor design to rely on dying for error handling in a website because it"
946240,953760," results in ugly experience for site but we're not developing a website who do you think we are some"
953760,964480," sort of web developers we are developing a c compiler we are programming language developers we are computer"
964480,973120," scientists not just developers so that's why it is okay to rely on die i believe so"
973120,981040," so i wonder like does that actually well yeah it's supposed to return right so it's supposed to return"
981040,987440," this kind of thing okay um but i mean this entire thing already logs everything okay so we're not going"
987440,994000," to use die uh we're not going to use that so what i'm interested in what i'm interested in how do we"
994000,1002320," construct a class right we define some properties but where is the constructor right where is the"
1002320,1015520," constructor okay so we can do new fruit and you you set through a set setters and getters in 2023"
1016880,1027120," setters and getters disgusting do you have any construct so there is a this keyword okay uh this"
1027120,1034480," keyword instance of i don't care about any of this stuff okay so i apparently i have to google that"
1034480,1042320," explicitly php class constructor how do you constripe a goddamn class tell me okay so there are constructors and"
1042320,1048960," destructors cool cool uh underscore underscore underscore constructor uh all right so there's also like this"
1048960,1056960," kind of like a imaginary type system right so yeah imagine in the sense that it's only for documentation"
1056960,1064480," purposes and it doesn't appear to be actually checked at all uh like it's an optional type system okay so you can"
1064480,1071120," have a constructor and i suppose it can have parameters and you set the parameters through this and stuff like"
1071120,1075760," that okay so let's actually do the following thing we're gonna accept source all right and then i'm gonna"
1075760,1084080," say this uh source equal source there's so much syntactic noise oh you don't really have to put uh"
1084080,1095760," the percent in here and look at that look at that vim decided to use ligatures can your emacs do that"
1095760,1104720," can your emacs support goddamn ligatures it cannot do a fucking shit you have to i think you have to actually"
1104720,1111440," compile like emacs with a special patch to have a support for ligatures at least it was like that"
1111440,1117760," some time ago maybe they already fixed that but i remember back when i checked uh emacs was like"
1117760,1123040," literally incapable of doing that like it's just like it couldn't do ligatures at all uh so yeah"
1123040,1125840," vim can do them quite easily"
1129360,1135600," all right so um this is not a constructor what the am i doing um so i supposed to do"
1135600,1144400," yeah it has to be public function my god public function constructor what kind of language is this"
1144400,1154080," is that a java all right uh so this is a source uh let me move this entire thing in here can i do"
1154080,1159280," something like die uh to do not implement it right so this is how we're going to be using die"
1159280,1167280," so how this is how we construct and the idea is basically uh that i'm going to be creating a lexa"
1167280,1175760," new lexa from the source this already like feels like a usable language i i can program in that"
1175760,1180800," right i mean it's just like you have all the necessary necessary things in here you can read files"
1180800,1187520," you have you have if conditions you have classes you have variables what else do you need it's"
1187520,1193120," it's a very much usable language i don't see any problems with that uh right seems good seems good to"
1193120,1201040," me uh okay so we keep getting subs people are subscribing like crazy holy okay so"
1201040,1206000," len dald thank you so much for tier one subscription i'm sorry if i mispronounced your nickname"
1206000,1212800," with the message i've been watching you edit text files for one year i'm really glad that you still"
1212800,1214320," watching me editing text files"
1214320,1223600," it's actually really weird you guys are literally watching some some dude from the internet editing text"
1223600,1230960," files that's literally what you're doing uh okay uh thank you so much for uh tier one subscription uh"
1230960,1236960," valini thank you thank you thank you with the message sodding pogging sodding pogging indeed i'm pogging"
1236960,1246800," right now i cannot stop pogging uh right my skull is already hurting that's how much pogging i am i'm pogging"
1246800,1254800," anyway so uh let me see what else we need to implement right so essentially here what we want to do"
1255920,1262560," uh we want to keep pulling out the tokens right so i suppose one of the things we're going to do we can"
1262560,1271680," start uh doing the following thing so lexa next token right and of course next token shouldn't get"
1271680,1277920," anything in here right so this is going to be next token and i would expect to do something like this"
1277920,1284720," while we do have some sort of a token we keep printing the tokens right so we keep printing those"
1284720,1292000," tokens and we keep pulling out the tokens out of this thing right uh so that's how we're going to be"
1292000,1298560," iterating through all the tokens right so can i actually run this entire thing from vim uh as far as"
1298560,1305280," as far as i know i can so i can literally do something like php c uh php to do not implement it"
1305280,1311360," that's actually kind of cool but it doesn't tell me where exactly it fails that's what's weird about it"
1311360,1324560," right uh see really is that really it die just literally dies without telling you where exactly it died"
1329120,1338240," okay uh so let's let's google it up php die location i mean i would expect it to at least tell me where"
1338240,1345520," exactly it died uh right um so equivalent to exit okay"
1345520,1354640," uh is there something like maybe um i don't know uh location"
1356640,1359440," um something like error maybe"
1359440,1372880," uh display errors error handling uh die file and line can can you give me that information"
1372880,1379920," how to include files in die function maybe that's what one maybe i should actually use google for for"
1379920,1383440," this one right so because dr good doesn't seem to have to read a large file"
1383440,1392560," uh okay i don't know this function sucks"
1392560,1403680," uh this function sucks we should not use it does does php have exceptions exceptions can i just throw an"
1403680,1408880," exception okay so it looks like it does have exceptions and i would expect it to also give you the location"
1409840,1416400," okay you can throw some shits right can i can i click on it please oh okay so it's just that i need some"
1416400,1424320," examples uh throw error exception throw new error exception with the message and so on and so forth"
1425200,1434960," so i wonder if i can just say throw new error exception uh and literally just you know uh not implement it"
1434960,1443760," right so we're gonna and i'm gonna do it like that so if i do that okay so and it tells me at least the"
1443760,1450000," line where it failed right it doesn't tell me precisely or maybe it does tell me precisely i think the line is"
1450000,1456960," like okay so i i can use this kind of thing i wonder if i can even create a function something like uh to"
1456960,1466080," do uh with a message right and inside of that message i can say okay um do the following thing um"
1466080,1476400," plus i think the string concatenation in php is slightly different right so string concatenation i think it's like"
1476400,1485200," dot or something uh yeah it is dot so you're supposed to use like dot in here uh there we go so and we can"
1485200,1496080," do it like that uh right to do um right and maybe you can say next token right so and if i just do it like"
1496080,1504080," that okay so it actually fails and we know precisely where it is failing uh so this this is actually"
1504080,1504800," very weird"
1504800,1520320," stack trace isn't it right so first it's at 15 then it's at 24 and then it's on line four this stack trace"
1520320,1524640," is all over the place where what"
1524640,1541120," what the is this stack trace where does it start and where does it end where is the"
1541120,1551280," random yeah randomly ordered stack trace"
1551280,1556160," it's not the stack trace anymore right"
1556160,1563840," oh boy imagine some people actually programming this language like every day for money"
1565120,1574160," uh so i cannot imagine that so thank you so much uh am i am my room am a rule thank you so much for"
1574160,1578320," tier one subscription thank you thank you thank you and enumerate and thank you so much for 100 bits"
1578320,1583840," with the message poggin requires sacrifice thank you so much for the sacrifice i really appreciate your"
1583840,1590640," sacrifice all righty so we need to do the next token so we need to be able to keep track of the state"
1590640,1597680," of the lexa right so that's what we need to be able to do um i'm gonna be keeping track with the cursor"
1597680,1604080," right so this is basically the current position of um the cursor right as we as we parse things around"
1604080,1610320," so another thing that we need to keep track of is where the line begins so i'm basically replicating"
1610320,1616320," my usual lexa that i use for like a majority of the languages that i develop uh right so essentially"
1616320,1623600," in alexa i treat the entire file as a continuous sequence of characters so for me this is a continuous"
1623600,1630880," sequence of characters and um right i don't view it as a like sequence of lines or anything like i don't"
1630880,1637440," care it's a sequence of characters uh right so and we may have a source code like this so we can have"
1637440,1647600," include uh std io then new line then int main uh void right then new line and so on and so forth"
1647600,1654560," right so and essentially cursor just points at the current thing that we're parsing right and as i go"
1654560,1664800," and parse things around right i update the cursor but as soon as i encounter a new line i actually set"
1665440,1673040," the ball to that specific value and i keep it like that and i continue parsing uh further right"
1673040,1681200," like so so i know the character at which the current line begins and i have the current cursor so and"
1681200,1687200," this is this makes it super easy for me to calculate for example for example column right if i want to know"
1687200,1693840," at which column i'm currently currently am i can just take the cursor and subtract the ball that's how i can"
1693840,1700640," do that right and uh also i like to keep track of the current row i'm currently in uh right and this is"
1700640,1708080," enough information for me to know precisely where am i located right so yeah basically that's that's"
1708080,1713520," basically how i do that and i think it's pretty convenient uh right i don't know if i have to initialize"
1713520,1718720," all of that but i'm gonna initialize all of that just in case right so yeah i think i do need to"
1718720,1723280," initialize all of that because it's a dynamic language so this thing doesn't know the types of"
1723280,1730240," all these things right so we have to explicitly tell uh tell it what they are uh right so because of that"
1730240,1737200," all these things are going to become zeros and stuff like that all right that's pretty cool so what we're"
1737200,1743040," going to be doing uh the first thing i want to do i want to basically maybe trim uh"
1743040,1750000," like all the white spaces like trim left or something like that so i would expect this function to"
1750000,1759280," effectively uh just keep chopping the characters while uh they are pointing at a white space right so that's"
1759280,1766480," basically the idea uh right and because of that it's usually very convenient to have a function"
1766480,1773040," something like a chop character right so it's actually called a chop character and what it will do it will"
1773040,1779840," basically remove uh one of the characters and then update the cursor if necessary update the ball and also"
1779840,1786800," update row again if necessary right so uh let me see what we can do in here i need to be able to take"
1786800,1792240," the length of the string so i really don't know how to do that so let's actually go ahead and google it up"
1792240,1802080," length of string length of string uh so there is str len right so i wonder if i can just like try to use that"
1802080,1815760," so i'm gonna just comment this thing out right and let's print echo um size of file and"
1817200,1825760," i'm not sure how i have to handle that i think i'm gonna do it like this right uh str len on the content"
1825760,1832720," right and then we can do like a new line in here because it's a it's a number right so that means i"
1832720,1840480," should be able to just like concatenate these things like that right but again i'm really scared of php"
1840480,1849440," sudden conversions and shit like that because the uh the way php converts values between different types"
1849440,1859440," is fucking scary right i remember like a classical example php uh md5 uh float conversion step overflow"
1859440,1865600," or something like that i wonder if i can find that uh how to come no i don't remember um"
1865600,1872400," making sense of metadata but there was a like i keep forgetting i should make a bookmark on this thing"
1872400,1882640," uh essentially there was a stack overflow thingy um oh yeah this one yeah this is so bizarre right"
1882640,1891200," so this thing is equal to this thing why the these things are equal to each other we can try to check"
1891200,1898320," them uh right in php do we have a php ripple uh maybe we don't even need php repos because i can just"
1898320,1904720," do something like this well i mean i probably need to do echo uh all right so i probably need to do echo"
1905840,1910480," uh well it probably waits until the end of the script so let's actually give it a try"
1910480,1914560," uh all right so echo"
1914560,1930160," so close that and yeah it didn't work uh okay so maybe i can just copy paste is there a php repo or php"
1930160,1934400," ripple mode of some sort php ripple"
1934400,1947360," uh uh cli okay so this thing is useless online compiler interactive shell"
1947360,1956480," php minus a okay because i do remember there was something like that okay so let's actually see what"
1956480,1963600," do we have in here so we have this thing and uh we have this thing so as you can see they are completely"
1963600,1972160," different but if you compare them right are they equal to each other i think i think double equals should"
1972160,1978720," actually reveal if they actually are or not uh it will basically tell you yes they are equal so the"
1978720,1987680," question is what the fuck is going on in here um they're obviously different but php says they are"
1987680,1994080," you know the same so and this is because they all start with zero e which makes them look like floats in"
1994080,1996000," in a scientific notation"
1998400,2009840," so there is an explanation in here there is an explanation in here so uh so they are both flawed"
2009840,2014800," number format strings numerical string and if you use equal in p equal equal in php when you compare a"
2014800,2020320," number with a string or comparison involves numerical strings then each string is converted to a number and"
2020320,2025120," the comparison performed numerically both of the strings are converted to zero when compared with equal"
2025120,2031440," equal equal if you want to compare the string as a string remember to use a triple equal right so"
2031440,2039600," this is such a weird thing and you know you can say okay you used equal equal this this one is on you"
2039600,2050960," right you used equal equal but remember we are comparing string with a string the result of md5 is a string the"
2050960,2058800," result of this md5 is a string equal equal equal is very lousy it converts between the types but we are"
2058800,2065600," comparing literally two strings it knows both of them are strings it knows both of them are strings"
2065600,2072560," and it still converts them to numbers this is crazy even for something like javascript"
2073440,2081120," even javascript doesn't do like that i mean i do understand that it's equal equals haha it's you're"
2081120,2087120," not supposed to use it but again this is crazy it's too crazy it's even crazy for for something like"
2087120,2090320," javascript even javascript won't do like that so"
2093600,2102400," you have two strings you convert both them to numbers how on earth does that make any sense"
2102400,2108000," like behavior of javascript at least makes some sense to some extent"
2108000,2116240," anyway i'm sorry it's just like um it left such a huge impression on me it's just like i can't i can't"
2116240,2122000," i can't forget about it it's this shit traumatized me like this thing literally traumatized me"
2122000,2130560," anyways so let me put it in the reference in here"
2130560,2137680," it's a huge trauma for me i just can't forget this and that's why i'm really scared to just like do this"
2137680,2146720," kind of stuff uh right so but i suppose it's gonna be fine uh okay size of file is zero yay because we"
2146720,2157280," didn't read any file uh i wonder why though because here's the hello uh okay guys so because it's not a"
2157280,2168640," content it's the source that's why uh okay so unexpected lexa uh that's fine what else the size"
2168640,2176000," is 79 so if we take a look at the size of the file it is in fact 79 bytes i think that is absolutely"
2176000,2184320," perfect right i think we mustered php we now php musters so essentially what we want to do here we want"
2184320,2196240," to check right if this uh right this cursor is uh less than the str length of this uh source there we"
2196240,2203760," go i wonder if i have to prefix this every time do i have to do that right or is it only required when"
2203760,2209280," it's like unclear like in this specific case i feel like i don't have to do that right"
2211680,2217280," yeah i think i don't have to do that because it doesn't make any sense uh if this thing is less"
2217280,2222960," what i have to do i have to basically uh like increment this entire thing and that's basically it"
2222960,2232720," wait it it is required what's the point of having classes then wait really"
2236960,2244160," you have to use this always i i don't believe you i i need to try that i'm sorry i do not believe you i"
2244160,2254400," never believe the chat so i'm gonna do lexa uh chop chart right so let me give it a try uh so i'm gonna"
2254400,2263680," start this thing and uh unexpected plus equals and a syntax error okay so 25 i'm gonna just make it equal to"
2263680,2272000," zero because i'm not sure if it has plus yeah so are you telling me that i have to do this all the time"
2272000,2282560," all right use of undefined constant source uh well i mean we can just do something like that right can we"
2287040,2289040," what's the point of having methods then"
2289040,2296000," anyways uh okay so that's fine let's start really fine"
2296000,2312960," okay it's very cool uh and it seems to be happy now uh okay so here's the thing here is the thing um"
2313840,2322320," i need to update ball and row if the uh if the character that we chopped uh is actually"
2322320,2329520," uh new line right so that's what we need to have so essentially i wonder if i can do the following"
2329520,2339360," thing can i do source um cursor this uh cursor can i do something like that and just save this entire thing to"
2339360,2347280," here by the way this is something that scares me does that create a global variable with the name x"
2347280,2353920," because i know this motherfucking dynamic languages i worked with these scripting languages for too long"
2353920,2361920," right i know that they absolutely love to create a global goddamn variable every time you just declare"
2361920,2368720," something that looks local they absolutely love that they love that so i do not believe that this thing"
2368720,2375920," does not create some sort of a global variable uh right i need to double check that right um"
2375920,2386720," and how so how does the do these languages become popular that's the real question how do they even become"
2386720,2395760," popular in the first place it's just like what anyway sorry okay uh php local variable"
2395760,2402800," uh variable scope okay so there's some information about variable scoping"
2402800,2409360," um okay the scope of variable in the context within which it is defined for the most part all php"
2409360,2415920," was only have a single scope these uh single scope spans included and required files as well for example"
2415920,2421840," blah blah blah uh reference to a local scope variable global scope variable local scope variable"
2421840,2426000," right but you never defined a uh right uh"
2426000,2434560," so any variable used inside the function is by default limited local scope so you're telling me this is not going"
2434560,2440880," to work right because it's a local scope variable i'm actually really curious right so this will throw"
2440880,2448800," some sort of error you're telling me right uh so global scope and then i'm gonna just do test"
2448800,2452560," uh yep and"
2452560,2460480," wow a surprisingly sane handling of scopes what the is this"
2460480,2467680," shit right right you're telling me that it has a sane handling of scopes i i i can't believe that"
2467680,2474800," like i mean we just witnessed this motherfucker to convert two strings to numbers just to compare them"
2474800,2481680," we just witnessed that absolute freaking insanity and then it hits us with the same handling of scopes"
2484800,2490960," i i i i do not believe that like i there must be some sort of a catch there must be some sort of a catch"
2490960,2493440," like i just don't believe that anyway"
2493440,2504800," uh okay so let's continue let's continue so that means i can just save that and uh here is the thing"
2504800,2513680," oh by the way can i just address the strings with uh square brackets and get some sort of like a character"
2514480,2519840," and will that work with unicode and stuff like that so this is actually a very interesting question"
2519840,2525120," right so if i do echo uh let's do something like this right"
2525120,2535440," and in here i'm gonna do echo source and i'm gonna take the first character or maybe zeros one right"
2535440,2543360," so i just want to see what's going going to happen uh right okay so we've got the first character so that"
2543360,2548640," should be fine i wonder what's gonna happen if i if it goes out of bounds does that even check out of"
2548640,2556880," it does check out of bones looks look look this is a safe language it has out of bounds check it's it's"
2556880,2566800," as safe as rust so yeah uh anyway so let's continue um okay that's cool so what i want to do in here i"
2566800,2573520," i want to check if uh x is equal to the new line and of course just in case has to be triple"
2573520,2583120," uh so and if it is equal to the new line what we want to do is to actually set uh the ball to the"
2583120,2589440," cursor right so when i set the ball to the cursor and we want to increment the role right so this is"
2589440,2595760," basically going to be chop uh char right so this is what we're going to have so this is a very useful"
2595760,2601920," function um and essentially we're going to use this function for trim left so left so essentially while"
2601920,2612640," uh this cursor is less than str len uh this source and this is going to be used very often this specific"
2612640,2619920," like um you know expression so maybe it makes sense to actually extract that to some sort of a function"
2619920,2628000," right uh something like is empty um yeah i think i think this is a good one so and is empty is"
2628000,2635680," essentially this entire expression right so we're going to do something like this right and just return"
2636480,2645200," this entire thing like so so and hopefully this is going to be as easy as this is empty yeah this is"
2645200,2658480," empty um no not really this is not empty but i don't know how to come up with um what's called not empty"
2663120,2672400," right so not sure if it's actually shorter but i mean that's that's fine uh this is not empty right while"
2672400,2689680," this is not empty and um this source this cursor is space uh but the question is does it have something like"
2689680,2698960," is space right uh php uh is space um okay it does so essentially i want to just check if the current"
2698960,2706240," thing is equal to the space uh so intel char is that some sort of like a separate package"
2706240,2712320," can i use this thing like php minus a uh right so"
2714560,2727440," uh intel char is space and and of course this thing is not available uh so what does this mean human"
2727440,2735040," language and character encoding in tl uh-huh internationalization functions how am i supposed to"
2735040,2740720," use that is that like a separate package or yeah it feels like a some sort of a separate thing"
2742720,2754640," um so you know what i think i want to make a small break uh because i ran out of tea"
2754640,2762000," and it's uh my brain actually stops working so after a small break uh we're going to continue working"
2762000,2773360," this thing i think and yeah um all right so let's continue uh so we're trimming left um so what i need"
2773360,2779920," is basically being able to check whether this is a space or not um i don't want to be dealing with"
2779920,2787440," like separate packages and whatnot so maybe i'm going to actually create my own space but i mean it would be"
2787440,2793120," nice to be nice to just have just use this entire thing and it seems like php just does have the"
2793120,2798000," function but it's located in some sort of a package and won't tell me how to use this package because"
2798000,2806080," it's like documentation and shit okay php is space example just give me an example how to use that"
2806080,2812080," and it would be super like yeah cool but how do i use that right so there is some sort of a package"
2812720,2816880," um how do i use that right uh"
2816880,2825200," cool this doesn't work for me i'm super happy that you're just like telling me how to do this thing but"
2825200,2830240," it just doesn't work for me right as you can see it's just like it doesn't know this kind of thing"
2830240,2835200," like and this is the funny thing this example that just doesn't tell you what what to do to get this"
2835200,2840560," thing right it just doesn't tell you it's it's a bad example okay so we're like actually doing it"
2840560,2845760," without it so i should have not wasted that much time i'm not installing some so we're"
2845760,2851840," gonna have some sort of like a space uh and uh essentially what i'm gonna do is that"
2851840,2859520," yeah i'm gonna just compare it to a bunch of things uh so uh essentially this is going to be a new line"
2859520,2867840," right maybe it has to be like this yeah i feel like it has to be like this uh right so and this one"
2867840,2874640," is going to be space maybe some tabs uh but i don't plan to use steps but maybe it makes sense to actually"
2874640,2882960," include this entire thing right so uh let's have tabs here as well okay so you see like i wasted so much"
2882960,2888480," time just to research how to like to use this get them function i just like implemented it myself"
2888480,2895600," very freaking quickly uh right so i'm using like a wrong thing in here but yeah it doesn't really matter"
2895600,2900640," uh okay let me close the chat"
2903120,2914000," um all right so is space so we have this some sort of a con uh convention in here that i put in the"
2914000,2925040," score in here right because it's come from here uh all right so use space while this entire thing is space"
2925040,2933200," right so i'm going to be doing is basically chop a character right so we're trimming the left so cool"
2933200,2942000," after we did that what i want to do right i want to check if we reach the end right i want to check if"
2942000,2947760," we reach the end um so"
2951120,2960960," i think we're going to treat essentially we're going to treat uh the um the hash symbol as the"
2960960,2964960," comment right because we're not going to have like uh we're not going to handle the preprocessor"
2964960,2969200," uh we're not going to handle the preprocessor um"
2975760,2990160," so that means uh while uh this is not empty right this is not empty and uh this source right this source"
2990160,2999920," cursor is equal right is equal to that we're going to be doing the following thing we're going to be"
2999920,3005360," dropping the line right so basically as soon as we encounter like a hash sign we just need to drop the"
3005360,3012720," entire line uh right so and we'll probably create uh a separate function for that right which is"
3012720,3020800," actually super easy to implement right so drop uh line so in this case we're going to do uh drop line"
3020800,3028480," so this is a drop line and after we drop the line we have to repeat this entire thing and we do that"
3028480,3035040," do that in this sort of loop right so until we uh either reach the end or this thing is not"
3035040,3043200," uh equal to the hash sign right so that's basically the idea so after that uh if this thing finally"
3043200,3050960," reach the end right this uh is empty right if it's in fact is empty so maybe i should create like a"
3050960,3057440," separate function uh right is empty because it's actually kind of easy to like to confuse myself"
3057440,3062880," right if this entire thing is empty i'm probably going to just return false right so i'm just returning"
3062880,3069600," false and that's basically it uh so here uh next token yeah i think i'm going to keep it as this"
3069600,3078240," so it's not empty let's create is empty right so we're going to create is empty and uh since i"
3078240,3086880," already have is not empty i'm going to implement it as not uh this is not empty right is not empty like this"
3086880,3096800," so uh so uh let's continue this thing is empty and i just return false and false is going to indicate"
3096800,3101040," the uh the end of the stream of the tokens right so that's basically the idea"
3101040,3108160," okay so after that what we're looking for right essentially what we're looking for"
3109200,3118000," i'm probably gonna open like a separate thing in here and uh yeah so we're looking for symbols right"
3118000,3125120," so essentially like names uh things that start with alphanumeric uh right and also we're probably"
3125120,3134160," looking for special symbols like uh parents curly braces and so on and so forth you know the usual things"
3135200,3140720," all right so i suppose we need to create another class and that another class is going to be the"
3140720,3147600," class of a token right so i think that does make sense to have a class of a token and the class of a"
3147600,3152880," token is going to have what right so it's probably going to have the usual like type that i like to to"
3152880,3159600," have in here um but i like to have types as enumerations right you know uh does php have"
3159600,3168720," enumerations php enumeration does it have enumeration uh all right enumerations"
3168720,3174640," you can literally do it like that that's actually kind of cool so cases"
3174640,3177680," you have to put keys in here that's really weird"
3177680,3187520," all right so let's give it a try so maybe i can literally just have a token type"
3188080,3193440," in num i can't have that is that a separate package of some sort"
3193440,3200160," basic animations are a restricting layer on top of classes and class constraints"
3200160,3211280," when were they introduced when were they introduced i have a feeling that it is not supported this is"
3211280,3217440," extremely sus this is extremely sus so i'm gonna just like a use a separate thing in num"
3217440,3224160," uh php right so this is going to be like that and i'm going to copy paste this entire thing"
3224160,3232160," uh right so the thing that bothers me is that the text editor does not uh even support that right it"
3232160,3239120," doesn't highlight it properly so this text editor also like the the web one also doesn't highlight this"
3239120,3247360," thing so maybe that's fine maybe it's such a fresh feature but i also have an old uh old php so that"
3247360,3255440," could be a problem uh so in num php and expected to it to string so it is not supported right so"
3255440,3263760," the question is what am i even looking at right so it's probably like a something something new right"
3263760,3273200," so there's no in numeration uh okay uh php7 i suppose maybe it's something from php8 right"
3273200,3276560," enumerations on php"
3276560,3287360," i know that php doesn't yet have enumerations right so they were introduced relatively recently"
3288960,3294960," since php8 in numeration oh okay so it is from php8 but we're not using php8 because i have all php"
3294960,3300000," so depending upon the case you normally use something like this you literally have to auto"
3300000,3307920," increment these things okay so and or you also use like an abstract uh thingy in here i remember that"
3307920,3314880," there was a way in php to create some sort of like a constants through define or something uh php"
3314880,3320720," define if i'm going to be using like enumerations i might as well actually use those things uh if"
3320720,3328400," you know what i mean right yeah so there's this thing which creates constants uh yeah i can create"
3328400,3332080," these kind of things and you don't have to provide like a dollar sign in there"
3332080,3338960," and i have to provide any dollar sign in here so maybe this is what i'm going to be using"
3340160,3347520," um all right so what is it called cphp okay so let's define something like"
3347520,3353280," maybe so you have to use strings or not right so token um"
3353280,3360880," so we're gonna have token name right so there will be token name which is going to be zero"
3362000,3365840," all right maybe we can define things like uh token"
3365840,3379280," so this one is a bit hard all right so yeah i'm gonna actually use it like that"
3379280,3388720," uh so let me let me see so i'm gonna switch to hello duty so we're gonna have o parent uh o parent"
3389840,3399680," something like this and i wonder if i can have iota right so i can have a similar thing that i had"
3399680,3407920," in um javascript long time ago essentially create iota which is like initially zero and just do something"
3407920,3417200," like plus plus yeah so that way it is super easy to add new things in here and even reorder them"
3417760,3422400," i don't know if it's if it's going to work or not but that's an interesting idea doesn't it isn't it"
3422400,3430640," uh right so we're gonna have a token close parent right uh and then iota plus plus"
3430640,3435920," so define uh so token"
3435920,3445840," oh curly right so that's what we need to have uh plus plus and this is another one right so it makes it"
3445840,3452000," super easy to just copy paste this thing the uh the line without adjusting any numbers or anything like"
3452000,3458560," that so open curly close curly uh so maybe we also need to have a semicolon right i can see the semicolon"
3458560,3468480," uh semicolon that's right so on top of the name we probably need to have a number uh right so number"
3469200,3474000," uh let's actually put it in here because uh we're also gonna have strings right string literals"
3474000,3482960," so number string do we have anything else uh we may have keywords i suppose right so"
3484800,3490080," um usually the keywords uh are separate tokens right"
3490080,3499840," so did they capture everything i think i captured everything right so we literally have uh everything"
3499840,3512080," in here so uh okay can i just now do echo and i want to do something like token name uh all right and i"
3512080,3518480," we'll just see it's number so it's talking talking name and then for"
3518480,3524000," all parent i just want to see some of them in here"
3524000,3527360," right and in here"
3527360,3536800," surprisingly this one is highlighted and this one is not is talking name already something existing in the in"
3536800,3543040," php it could be actually it could be actually something already existing in there but that's that's fine"
3543040,3551360," um okay so i need to do cphp all right so it doesn't like what is going on here so on the line 28"
3551360,3557520," uh this is because of course i forgot uh this thing it still doesn't like what's going on on line 28."
3557520,3563280," uh okay so maybe i'm gonna temporarily disable this entire thing all right so temporarily disabling it"
3563280,3570640," so now it doesn't like what's going on in the line 70. for a dynamic language it is complaining a lot"
3570640,3571280," honestly"
3571280,3581520," right so okay so it kind of worked of course we didn't have any new lines in here right so"
3581520,3590560," let's actually add some new lines and that should be fine but yeah it actually worked my entire idea with"
3590560,3595040," iota freaking worked isn't that cool i think it's pretty cool"
3595040,3604480," okay good so who needs enumerations so we can create our own emulations"
3604480,3609040," so here's the type and the type is going to be equal to one of these things right"
3609040,3618400," um so are we also going to have the text right so token has a type and token has a text and token is"
3618400,3624480," supposed to also have some sort of a location uh right but i'm not sure if it's um particularly good"
3624480,3631840," idea uh right to have it in here but maybe maybe it is a good idea so location but for the location i"
3631840,3638560," usually like to create like also separate class or separate structure uh sort of speak right so this is"
3638560,3645440," the location and usually it's basically the file file path right so more of a file path where exactly that"
3645440,3651680," that has happened and then the role at which that happened and the column at which that happened right"
3651680,3658400," uh of course right so that's what we want to that's what we want to have in here and uh we probably need to create a constructor"
3658400,3664240," uh function construct and we're going to accept all of these things in here"
3664240,3670000," is there some sort of like a structures in php so i don't have to create this much body plates"
3671200,3674640," all right is there something like that that would be it would have been nice i think"
3674640,3683920," uh can i now go here and just replace file name with a row a boom it didn't work for some"
3683920,3695680," reason i wonder why uh i just wanted to well so file path with a row oh yeah i think i know why that that"
3695680,3705600," happened uh right place role with column so that's what i want to be able to do cool and when we create"
3705600,3715120," a token uh public um function uh is there something like structs in php right so we'll be actually"
3715120,3720800," convenient but i suspect it's not there is no such things uh php struct"
3720800,3730720," uh php struct okay rfc structs does have struck data probably not i'm pretty sure it doesn't have them"
3730720,3733760," because it would have been too modern for such language"
3733760,3742640," so we can have array like associated array uh or a standard object so you can just okay i see so"
3743280,3752960," basically the answer is no construct and we're gonna have type uh text though in case of a token we're"
3752960,3760080," gonna be filling those things up gradually so this thing doesn't really require um any particular"
3760080,3765040," constructor right so because i usually implement it like so right so we start with the token"
3766320,3771760," all right so we cleaned everything up uh and we just create a new token right so this is going to be"
3771760,3779440," just a new token and for that new token uh i set its location to the current location of the"
3779440,3782880," of the lexa right so this is going to be like that"
3782880,3792800," so and uh then if this entire thing is sort of empty right well i mean"
3793920,3800560," uh we still need to at least initialize some of the things that we create this stuff all right so"
3800560,3807520," i mean it probably would make sense to just accept at least the location uh right so"
3807520,3814560," let's go ahead and do that uh public function"
3816400,3825040," construct so we're gonna accept only the location and this location is going to be the location"
3825040,3830400," and the type initially is going to be just zero right so we're gonna we're gonna call this zero"
3838000,3840880," i actually changed my mind i want to provide everything in here"
3840880,3844000," like straight up"
3844000,3853440," so having this as a type might create some problems right because it's already highlighted but maybe not"
3853440,3864560," uh all right so we'll actually see we'll actually see okay so essentially if this is empty we just return"
3864560,3869120," false uh if it's not right we're gonna start with"
3869120,3884240," yeah we need to save the current location right so we need to save the current location"
3884240,3891120," so this is going to be this this is going to be the location and uh let's start with checking if"
3891120,3899680," something is equal to alphanumeric right so and here is an interesting thing man i i need is alpha num"
3899680,3906560," is all num do you have something like it you have to install that stupid intel char thingy that i"
3906560,3911840," absolutely hate and it doesn't even explain how to install it properly i just don't want to deal with installation"
3911840,3917040," um all right i just don't want to do that maybe i can use"
3918080,3924800," maybe i can use regular expressions is there any way to use regular expression c type l not wait so there"
3924800,3935600," is literally functions from c type of c why the why the duck the go or google didn't tell me about so"
3935600,3944480," that means that essentially means that php has uh c type is space why google didn't tell me that this is so"
3944480,3959600," bad oh my god like it should have like actually understood my intent dude the modern the modern"
3959600,3968400," search engines are garbage they're garbage holy it's insane like they're wasted so much time"
3968400,3973120," right so something like chat gpt could have actually probably figured that out but i i don't have an access"
3973120,3980400," to chat gpt because i'm banned by openai because openai made an assessment and came to a conclusion"
3980400,3987200," that me having an access to their product actually possess a threat to humanity so that's why i have"
3987200,3994080," to use garbage search engines and i can't have an access to chat gpt unfortunately unfortunately"
3998960,4013440," so yes yes yes yes yes uh let me let me see so can we have c type space right so uh space like so and"
4013440,4020960," at least i didn't complain uh with an error c type space right uh all right so that's pretty cool so that"
4020960,4029200," means i can use that uh that shed in there so we need this thing uh and let me find is space where do we"
4029200,4037440," use is space so trim left i still didn't implement it so i should probably do to do in here just in case"
4037440,4046160," so this is going to trim left uh huh so where is another is space okay so this doesn't matter that means"
4046160,4068240," uh okay so if um this source okay uh if source uh is uh what is is alpha right so essentially numbers start"
4068240,4076960," with numbers of course uh and the um identifiers only start with alphas right so i wonder if i can have"
4076960,4087440," like a list of all of the functions available in here uh can i have that so c type uh where is it oh yeah"
4087440,4100080," here we go so c type uh so c type alpha type alpha so this thing is alpha and in that case we basically"
4100080,4111600," have to um get characters uh while they are alphanumeric right so maybe we will have to save some sort of"
4111600,4117440," index right so this is going to be an index and it starts at cursor uh right so it's essentially started"
4117440,4132560," cursor and while uh this is not empty this is not empty and uh c type l num all right so l num this source"
4135280,4141920," this cursor this source this cursor uh we essentially increment this index"
4141920,4151360," by one but this is not particularly convenient right so this is not particularly convenient because"
4151360,4156160," we're removing the characters we're not actually removing them yeah we're not actually removing them"
4156160,4162320," because we're operating on the level of the indices right we're operating the level of these indices so"
4162320,4168160," that should be fine uh i don't even have to increment the index i can just keep it as it is so then i can"
4168160,4176400," do uh a chop character right so that's what we do so we're chopping until we reach this entire thing so i"
4176400,4183760," also want to be able to do some uh sort of a slicing right so i need to do php slicing"
4186640,4193920," i need to do php slicing so you can well erase slice no string slices i want to do string slices but maybe"
4193920,4201760," strings are basically arrays right so you can do substring which is fine uh right so you can do substring"
4201760,4205920," uh so start and length this is actually perfect right so this is actually perfect"
4205920,4214400," so and essentially uh after i reach the end or something unfamiliar i can basically just return a new"
4214400,4218400," token right so this is going to be new talking i have to provide the location location is here"
4218400,4224960," so i have to provide the type the type has to be token uh name right so this is a token name"
4224960,4235280," and the text itself right so we have to do substring uh substr uh i provide the source right so this is the"
4235280,4242400," source uh where this all starts the index and the length of this entire stuff so we have to take this"
4242400,4249280," cursor you can't see by the way right so because i forgot to put something behind my camera right i have"
4249280,4257840," to forgot to put something behind the camera uh all right so and now we should be able to see that"
4257840,4266480," so at least like i can't see yet so that means i know what i need to do uh maybe i'm gonna simply"
4267680,4277280," uh take this entire stuff and just move that into a text in here just a temporary thing uh like so then"
4277280,4285120," uh i'm gonna do it like that so there we go we managed to tokenize a single name all right"
4290560,4290960," all right"
4290960,4298560," so let me let me see let me see"
4298560,4307920," uh thank you so much uh nosbion for twitch prime thank you thank you thank you eric anarda thank you so"
4307920,4316480," much for tier one thank you thank you thank you thank you all right so uh i suppose this is fine so we can"
4316480,4325280," already start trying to actually handle um actually print whatever we got from the uh from the lexa right"
4325280,4330880," so we can already start trying to do that so interestingly right so here is the token and"
4330880,4337360," for within the token we should have the like location and everything by the way i remember that php had like"
4337360,4345120," some sort of a string interpolation right so can i use that uh right php string interpolation"
4345120,4353360," php string interpolation uh how can a menu interpolate the string does it have a string interpolation i don't"
4353360,4353920," quite remember"
4353920,4361360," so yeah being able to use this thing within the string so let me see"
4362240,4367120," uh there are there are more mechanisms in php string literals to replace placeholders"
4367120,4372560," uh you can do s printf okay so that makes sense it's not necessarily what i want to"
4372560,4376880," do here but maybe that's what i want to do in here yeah so let's actually give it a try"
4376880,4383760," because one of the things i want to be able to do i want to be able to just like print the location so i want"
4383760,4392320," to do s printf right so in here we're going to accept the file path right so then the row uh then the"
4392320,4398480," column right and then something in here or some sort of a token maybe we're going to put text in here"
4398480,4405680," right so this is going to be basically a text uh and in here we're going to do token location of the token"
4405680,4410800," location of the token and it's file file path i think i'm pretty sure it is a file path"
4411760,4418640," uh right and the problem here is that this is too long right so for each individual thing in here i"
4418640,4430160," have to do token um right token location row right it's it's too long like dude i i don't want to type"
4430160,4434880," it out like that right it's just is there any better way to do that i might as well just try to"
4435840,4443920," maybe have a function in here uh something like to string or maybe display uh right that will effectively"
4443920,4451680," return a sprint tab right and just do that uh for me all right because this is just like too long uh"
4451680,4454160," this file path"
4456160,4465920," this row uh this column there we go so and then here i can just do something like s so then i can"
4465920,4475280," basically display like so yeah that's that's much better that's much better and then text right"
4475280,4480240," i'm not sure if that's a good idea generally but i mean we can just try it"
4481040,4486480," uh okay so let's actually try to run this into anything and see if we manage to tokenize anything"
4486480,4492560," okay we didn't tokenize anything but that's kind of expected uh sort of right i kind of expected that"
4492560,4500720," it's not gonna work first try that is totally fine uh so let me see on which line it happened right so"
4500720,4504960," okay so we we have some things that are not implemented yet right some things that are not"
4504960,4516240," implemented so trim line to trim let specifically right so while this is not empty and uh this source"
4516240,4528240," this source uh this cursor uh right so this is going to be c type space right c type space while it is"
4528240,4534720," space we essentially just chop a character right so we do chop char and there we go so that's basically the"
4534720,4539120," implementation we'll probably also we'll probably also have to implement a line right so how we're"
4539120,4546080," going to be doing that uh while this is not empty right and this source"
4546080,4555920," um this cursor not equal to a new line right"
4555920,4564480," uh to a new line what i have to do right is essentially chop a character"
4564880,4566400," right chop a character"
4566400,4574000," uh right i'm just chopping the character so it's kind of funny that it just does not equal"
4574000,4579920," so and here is an interesting thing so if um this"
4579920,4588640," is not empty if this is not empty we probably need to do another chop to get rid of the new line as well"
4588640,4594240," right so that's the usual thing okay so let's go through the compilation errors okay so it"
4594240,4602960," it and this is scary this is what i don't like about php is that because this mother flipper just"
4602960,4611600," silently didn't work it didn't throw a single god damn error a single god damn error it just silently"
4611600,4618400," didn't work oh boy we're off to a great start okay so um that's cool"
4621120,4629840," uh right uh right so let me see um"
4629840,4636720," uh okay it literally didn't return"
4636720,4646000," anything all right so what if i do just something like that all right so what if i just like put it like"
4646000,4656160," that i'm on there okay so token is literally nothing so it already returned nothing uh which is"
4656160,4666640," understandable all right so this is really weird all right so we can try to debug it in here so did it"
4666640,4673440," fail in here so i'm gonna do plus plus all right so just to see if it's actually failed in here"
4673440,4680960," uh okay so it actually went in here so it is in fact empty uh all right and if i do is empty"
4681840,4692720," uh so that doesn't make any sense honestly all right so uh let's do echo all right and then here we can"
4692720,4701760," have uh cursor all right so this is gonna be a cursor uh this cursor and we probably want to do something"
4701760,4711760," like this uh 79 so the cursor is at 79 so something went wrong in here uh horribly um"
4711760,4721760," okay so let me take a look at the trim line while this is not empty and this thing is a space we chop a"
4721760,4729680," character makes sense to me so everything fine um so"
4729680,4742800," not oh this one is actually okay so triple yeah i think that's what i have to do in here"
4742800,4748400," i have a feeling that this is where what i have to do in here but it still didn't really help but i mean"
4749440,4757360," no no so if i don't drop any lines in here it just like never stops uh right"
4757360,4760160," um"
4760160,4773120," i'm not sure what the hell is going on right so this is not empty"
4775120,4784320," uh and it is equal to okay so that kind of makes sense right so what i what i meant to do in here is"
4784320,4791680," to just disable this thing all right because i wanted to i want this thing to fail uh at here i wanted"
4791680,4798960," it to fail at here so but it doesn't work it still goes indefinitely um all right"
4798960,4808560," which is i mean this is not how it works right can i have i can't have nested things content"
4808560,4816320," yikes uh okay so what i want to do essentially is just something like this"
4816320,4824640," all right yeah yeah so this is what i expected in here yeah yeah yeah okay so this thing is not empty"
4826320,4827120," and um"
4827120,4837200," the cursor is equal strictly equal to this thing and in this case i would expect"
4837200,4847840," uh to drop a line and do another trim left right so and then it goes back if it's not empty but it's not"
4847840,4856000," equal to that it will just drop down makes sense to me right uh so that must be a problem with the drop line"
4856560,4863680," right so there must be a problem with the drop line okay so this is not empty and the source"
4863680,4869520," not equal to the new line we just keep chopping it we just keep chopping it and if after doing all of"
4869520,4874960," that we came to the conclusion we came to the situation when it's still not empty that means"
4874960,4879280," we have a new line we have to chop it off makes sense to me where is the mistake"
4879280,4887040," why does it chop everything like literally everything up until the end of uh this thing"
4888160,4893680," so it could be because like drop line literally removed everything"
4893680,4904400," drop line didn't notice any of this stuff right it literally didn't notice any of this stuff so uh we"
4904400,4911760," can try to do something like this uh right we can do drop line uh right and"
4911760,4922720," uh this cursor all right so this is the cursor and uh let me see so of course if i go the new line in here"
4923680,4936000," uh okay so and yeah it didn't stop at the new line it literally didn't give a shit right"
4936000,4940080," uh it literally didn't give a shit"
4942320,4951440," so that's very interesting and i can already see why so vim already kind of hints me why this could"
4951440,4957520," be the case because of the different quotes right because with the single quotes as you can see it"
4957520,4964560," doesn't highlight this kind of stuff but with double quotes it does so maybe i should stop using single"
4964560,4969600," quotes uh let me actually go through all of the place where i use okay so there's a lot of places"
4969600,4974720," where i didn't make the same mistake uh mistake the language is like"
4974720,4984720," uh okay i should i should not even blame myself for this kind of stuff uh okay so that's cool"
4984720,4996800," all right all right so and uh what do we have in here so uncut uh call to okay finally it actually"
4997360,5004880," failed at uh the place where it's supposed to fail so there's no no such thing as lock uh right so"
5004880,5011040," finally we managed to debug all of that properly uh right so that's pretty cool so this is going to be"
5011040,5018160," lock and uh what we need to return in here we just need to return the file path we don't even have a"
5018160,5023760," file path in alexa right so we don't even have a file path in alexa with because we don't know any"
5023760,5030320," about any of this stuff right so uh let's create a file path so here's the file path and maybe this one"
5030320,5039920," is also going to store the file path right so and in here this is going to be this uh file path file path"
5040560,5053040," right so file path and as we do the log uh right so uh file path uh and the row we kind of do okay"
5053040,5062960," so this one is it has to be this uh this so what else do we have to have a row and the column is going"
5062960,5068720," to be computed by subtracting ball ball from the cursor right"
5068720,5077440," subtracting ball from the cursor so that's basically it that is basically it"
5079040,5091520," uh all right all right all right so okay um so let's try to run it one more time and go"
5091520,5094400," to the next uh line exactly"
5100240,5105680," my chat just like everything in twitch just freaking crashed"
5105680,5115280," you can't make that up i swear to god like you just can't make that up that's how bad everything is"
5120160,5137520," holy holy all right"
5146640,5153040," okay so i think i want to make another break all right so because this is too intense uh so yeah"
5153040,5159680," let's make another break um okay so let's continue going through the compilation errors right so uh"
5159680,5164720," i'm i'm kind of doing compiler assisted refactoring but with the dynamic language"
5164720,5173040," uh all right so what do we have in here too few arguments uh to construct the lexa okay so that makes"
5173040,5178960," sense i need to find new lexa right so now i have to provide a file path right but i call it file name"
5178960,5185920," in here which is kind of lame so let me rename this entire thing to file maybe path right so this is"
5185920,5194160," going to be it didn't really work for some reason uh right file name file path yeah there we go so that's"
5194160,5202480," that's what i wanted cool uh holy shit um okay so user undefined file path uh 13"
5202480,5211680," uh huh that makes sense sure what else that's too that's such a long warning uh oh it's actually two warnings"
5211680,5218400," okay so 14 what else did we do in here okay so there's these things that needs to be done"
5219280,5229120," uh huh so what else do we have in here 136 uh token uh object token could not be converted to a string"
5229120,5233440," but i don't really want to convert it to a string right it would be nice if it just like you know"
5233440,5238880," debug printed it but apparently it cannot do that which is i guess fine for now right so"
5239760,5249440," okay so let's try to pull out some tokens okay so that went kind of somewhere uh right so it basically"
5249440,5256000," identified this as a token which is absolutely incorrect by the way right which is absolutely"
5256000,5263040," incorrect but that's fine uh yeah it is incorrect because here i supposed to provide the length and"
5263040,5269120," length is going to be the current cursor minus the index that we got in here right so that's basically"
5269120,5276320," the idea okay that's really cool so look look look we managed to identify two tokens right so maybe it"
5276320,5285120," would even make sense to for me to do something like set make uh prg right php uh you know i need to escape"
5285120,5294000," the space and then uh c um c dot php right something like this and then i'm gonna do make uh right and it's"
5294000,5300240," it's going to cut yeah it actually jumped there uh but it i feel like it suffers from the same"
5300240,5309120," problem as emacs is that it expects the lines and columns to start numerating from one right which is"
5309120,5316240," i mean we can we can kind of fix that uh right so let me find display uh right and for the rows"
5316800,5321360," right for the rows i have to do plus one for the columns i also have to do plus one that's fine"
5321360,5327760," so it's the make uh and uh as far as now it's kind of like still open okay so as you can see"
5327760,5336480," we i can just like jump to the token int and then i can jump to token main right so we successfully"
5336480,5341680," basically identified two tokens and this thing it actually ignored this entire thing so we managed"
5341680,5349600," to parse uh up until here isn't that cool well not really parse but tokenize if you know what i mean"
5349600,5355680," right we managed to tokenize up until that point uh right which is already something right so um"
5355680,5362800," so for some reason tokenization is usually like the biggest part uh for me right it's the biggest part"
5364080,5370720," uh but as as soon as the tokenization done is just basically about just making a simple parser right"
5370720,5377200," so because since we don't need to implement like the whole parser we can only implement the parser that"
5377200,5383920," just parses these specific functions the functions that return integers uh don't have any arguments and"
5383920,5389840," have just a simple body of statements right these kind of functions are kind of easy to parse if you"
5389840,5396960," know what i mean they're kind of are easy to parse so yeah we'll see how it goes right so the biggest"
5396960,5404240," problem here is going to probably tokenization right anyway so now what we need to be able to do we need"
5404240,5410240," to be able to parse open parent right so let's actually see what we can have in here so we know for"
5410240,5418400," sure that the um the tokenizer is not empty right so it's not empty we'll need to basically check the first"
5418400,5423840," character and if the first character is open open parent we just have to return that specific and that"
5423840,5424560," specific token"
5424560,5434160," at least that that's the idea right so if this source uh right this cursor"
5434160,5441520," it would be kind of nice to have a switch case if you know what i mean right so some sort of a switch"
5441520,5448400," switch case where we could say uh okay if it's an open parent we have to do something but does a switch"
5448400,5458800," case work with uh strings and php so that's the real question right uh php switch case strings show me some"
5458800,5469120," examples please please show me some examples i want to see some epic examples uh all right so i already"
5469120,5476560," open this interesting but that's fine so you can do that with numbers okay that's very cool i can see"
5476560,5485440," only numbers where are the strings where are the strings do you have strings yes you can have strings"
5485440,5492080," this is absolutely amazing okay uh it's possible to use a semicolon instead of columns uh like this"
5493120,5500560," right but i don't care about the semicolon so okay i'm gonna assume that you can do this kind"
5500560,5507520," of stuff with strength uh right so it says it's possible to use semicolon instead of columns i think"
5507520,5516080," so isn't isn't isn't like enjoying uh yo that's actually kind of cool but you still have to provide"
5516080,5525120," this break this nasty nasty break all right so it's fine so this one is break so essentially what i want"
5525120,5531520," to do i want to simply chop uh one character right so we're going to be chopping one character in here"
5532560,5538800," and if um all right so we're going to just simply return right and if we're going to be returning we"
5538800,5543600," don't really need break we're going to return new token in that specific location and the token going"
5543600,5549840," to be all parent uh all parent and the text is going to be just like open open thing in here and that's"
5549840,5557200," basically it and we can even create a bunch of those things right for uh instance for close thing as"
5557200,5561920," well right but that means we just have to do it like that it would be also kind of nice to have"
5561920,5568240," some sort of associative array as far as i know php does have that one uh right so php array show me some"
5568240,5580800," uh so w3 school w3 school so yeah i know that you can also provide like uh keys in there"
5580800,5595680," uh that sucks this tutorial sucks my ass uh gotcha hyper um right hash map hash table"
5598240,5605600," uh so yeah associative arrays i think that's what i wanted associative array right"
5605600,5617120," that's what i'm talking about yes thank you so much that's what i wanted and that's perfect"
5617120,5626480," in my opinion because that will allow us allow us to create a thing like array right if you encounter"
5626480,5632480," open parent you can say okay it's equal to token uh all parent right and we can essentially have like"
5632480,5639120," a sequence of those things right and then matching all them is going to be basically iterating through"
5639120,5648640," them uh or maybe not not necessarily uh okay so we can have something like uh literal tokens right"
5648640,5655680," something like this so this is a literal tokens uh right and then we can say the literal tokens"
5656720,5663280," this source which is not particularly great because what if it's not there so we need a way to check"
5663280,5670000," is this thing in there or it is not in there right so but uh we can google that up a little bit later"
5670000,5675680," right so i'm gonna just like postpone it for now so in here we need to have these kind of things so"
5675680,5684240," token c parent not securely c parent i said uh right so when we're talking about curding it's going to be"
5684240,5692720," something like this token all curly right so this is all curly and then uh talking c curly do we need"
5692720,5701600," anything else right i don't quite remember uh so let me see so all parent uh semicolon uh yeah that makes"
5701600,5713600," sense so let's actually uh introduce semicolon all right so token semi semicolon so that's the literal"
5713600,5721920," tokens so is there any way to check if something is in there right so we can iterate uh that's pretty cool"
5722880,5737120," but how do we check um okay php check if associative array contains key contains key"
5737120,5759040," yeah there we go so regular people ask chat gpt i study the training data of chat gpt directly"
5759920,5767040," how about that right because this is basically training data on which chat gpt was trained so"
5767040,5775200," why do i need chat gpt i can if i can look up the training data of chat gpt directly for free"
5775200,5782160," without paying 20 bucks the data is free just read the train date"
5785280,5789040," oh anyway"
5789040,5797760," so uh let me see let me see looking for array functions"
5797760,5804240," is set okay so there's something like a set that's pretty cool"
5804240,5806720," is it"
5810240,5838480," so if is set um and this is literally what we have to do in here right i suppose"
5839840,5842880," um"
5842880,5852240," which is like very long right so this is a very long expression um which makes me think"
5852240,5860400," i'm referring to the first character all the time within the lexor maybe it would make sense for me"
5860400,5868720," to introduce something like first right so source uh right this cursor right and this is the first and i can"
5868720,5875520," i can always do something like uh like this right first of course here is going to be invalidated but"
5875520,5881360," that's totally fine right so i don't really care about it so then later it makes it super easy to"
5881360,5891360," just do something like this right so if the first is set that means it is really easy to just chop"
5892240,5897680," the current character right we're just tripping the current character and we're simply returning"
5897680,5909680," uh a token uh with this and tokens why is it called tokens uh right so i'm gonna take this thing and we're gonna"
5909680,5916400," set the type of the token to this right and the text is gonna be the first itself"
5917200,5920800," yo and all that stuff is not needed so this is how we're gonna handle all that"
5920800,5927760," yo uh but i don't really like that it's called tokens right so let me replace tokens with tokens"
5930400,5936320," is that cool i think it's pretty freaking cool holy shit all right so uh let's try to do the make"
5936320,5944000," and see and as you can see we managed to parse even more tokens now look at that integer main open parent"
5944000,5951040," close uh close parent curly printf open parent but we stopped in here because we encountered something"
5951680,5958240," unknown we encountered something unknown and we encountered string literal"
5958240,5965520," to make parsing the string literals a little bit easier i think i'm going to remove escaping right"
5965520,5972160," we're not going to support escaping for now right so uh it should be probably appraised for it right"
5972160,5978000," so we check if we start with double quote right and if we do start with double quote uh we just basically"
5978000,5983840," consume the characters until we encounter uh another double quote right so if you support escaping you"
5983840,5988720," would also look for backslashes and stuff like that but we're not going to waste time on that today"
5988720,6000560," right so uh cphp okay so if uh first is equal to this thing well this is a very good uh use case for"
6000560,6006400," single quotes i think this is a very good one uh right so and what we need to do first of all we need"
6006400,6010480," to chop this specific character off right there we go so we chopped it off"
6010480,6021280," we chopped it off after that after that i need to save the position of the current cursor because this"
6021280,6032080," is where basically the string starts right and then while this is not empty while the lexa is not empty"
6032080,6047280," and uh this source let's put it this way this cursor is not equal to double quote we keep consuming characters"
6047280,6055760," this chop character we keep consuming them so at this point we have two situations this stream uh of the"
6055760,6062640," character is either empty or not if it's not empty that means it ends with double quote right so"
6062640,6074400," if this uh is not empty uh that means everything is fine right everything is fine and uh we just need to chop"
6074400,6081600," the last thing in here right so basically you chop uh the character but before we chop it we need to"
6081600,6090320," extract the text right so the text is going to be called to substring of the um of the source starting"
6090320,6095520," from the index i should have actually called the index start because it will make much more sense"
6095520,6100000," right so let's actually quickly rename this kind of stuff so this is index but this is actually start"
6100800,6106320," there we go so this is the start and the amount of things is going to be basically the cursor minus"
6106320,6112320," the start right so there we go only then it makes sense to chop off right because we're chopping off the"
6112320,6119600," double quote and after that we simply return the the token right so this is the new token the current"
6119600,6128000," location the kind is going to be token string right so this is a string and the text is literally the text that"
6128000,6134720," we got in here so if we reached this specific place if this string is empty that means we have"
6134720,6140560," unclosed string we have unclosed string and what we have to do i'm going to report an error"
6140560,6146560," right so i'm going to essentially do a sprint app i think right so this is going to be something like"
6146560,6150720," this we're going to have a string and the error uh and we're going to simply say"
6152000,6157280," unclosed string literal right so that's what we're going to say and we're going to take the current"
6157280,6161520," location and we're going to display it right so we're going to convert it to a string there we go"
6161520,6167200," that's basically it and we're going to return false after that indicating that uh right this is a"
6167200,6173760," invalid token if you know what i think uh okay that's pretty cool i think that's basically it for"
6173760,6180320," strings literal so let's actually do the make and as you can see we managed to parse uh yeah basically up"
6180320,6186960," until the end almost right so we encountered hello then a close parent right close parent"
6186960,6193760," semicolon return and we stopped at something new and unknown right we stopped at this thing"
6193760,6202880," we don't know how to parse numbers we don't know how to parse numbers uh right so let's actually go ahead"
6202880,6208480," and uh see how we can do that so the thing about the numbers is that they start with digits right so"
6208480,6216000," that means there should be uh php uh c type digit right something like that at least"
6216000,6227920," uh yeah there is a c type digit this is perfect if c type digit uh first right so this is relatively easy"
6227920,6233760," right right so we will have to do start which starts at this cursor right so it starts at this cursor and"
6233760,6241920," while excuse me this is not empty all right and uh this source"
6241920,6252960," this cursor is still digit right so we're just looking for the digits in here c type digit"
6255120,6260560," so this is still digit we're going to be chopping off this thing right so keep chopping it off"
6260560,6269840," cool uh after we're done i need to be able to convert um this thing into a number you know"
6269840,6280960," this is very interesting all right so the token uh the token has a text which implies that it could be"
6280960,6287440," also a string you know what i mean what about escape characters uh we don't support them now"
6287440,6298640," um so i think i need to rename this entire thing into a value right so essentially if the type"
6299680,6306000," is going to be number this thing is going to be integer otherwise it's going to be a string right"
6306000,6313360," i think it's reasonable uh right but this is a such a pain in the ass to rename and refactor"
6313360,6319760," so that's the problem in here uh this is a huge pain in the ass to refactor because this is a dynamic"
6319760,6326800," language right so i wonder if i can just do something like um text and change it to a value but i'm gonna do"
6327520,6334240," basically you know query replace right if you put c in here right so when you do replace"
6334240,6342240," and you put c at the end um vim is essentially going to uh every time you want to replace something"
6342240,6347600," ask you do you want to replace that and you will have to suppose to answer yes or no right so as you"
6347600,6352880," can see here it asks you do you want to replace that uh in this case i'm gonna say yeah i want to replace"
6352880,6359600," that so uh in here do i want to replace it with value i think i do right because at the end of the"
6359600,6366000," day it goes into the token here right so it's kind of convenient right so we just do a regular s command"
6366000,6371600," but you put c at the end and it acts like a query replace from emacs right so and i really like query"
6371600,6377440," replace from emacs uh right because uh it's just like i only have a control over this entire thing"
6377440,6383520," bro is not reading chat of course i'm not reading chat are you saying anything of a value"
6383520,6388720," no that's why i'm not reading the chat uh so"
6390000,6398240," mm-hmm what php version are you using i'm using the seventh one i'm using the seventh one right"
6398240,6415040," anyway so do i want to replace this text uh i think i do i feel like in all the cases i do want to replace"
6415040,6422320," text with the with the value yeah and there were not that many of them anyway okay so uh what do"
6422320,6429840," we want to do what do we want to do i want to construct value one more time right i only construct"
6429840,6436320," every one more time uh so to do that i'm going to copy paste this specific thing right so this is going"
6436320,6444640," to be the value but i need to convert it to an integer right so uh php string to integer like explicitly"
6444640,6449840," right uh how they convert string to a number to php okay"
6460480,6465600," okay so we can literally cast things that's actually kind of cool right so"
6465600,6475520," uh this is the source start and can i say integer i can say that that's pretty cool so and then we're"
6475520,6483840," going to do return new token and then uh location and then token uh what is it it's going to be number"
6484720,6491840," and then value and this one has to be unreachable i suppose right so this must be unreachable"
6491840,6503360," uh there we go we freaking tokenized everything look at that we tokenized the entire c program and it"
6503360,6510960," took us two hours to do that isn't that amazing i think it's goddamn freaking amazing holy sh*t"
6510960,6519680," okay so uh let me let me see"
6519680,6528480," uh so what do we have in here we also were printing the cursor for some reason i'm like because when i did"
6528480,6534080," that it printed curr equals 77 and where do i actually do that i don't quite remember"
6534080,6541760," so curr yeah this is where i do that we don't need that nobody cares about that so we have alexa so we"
6541760,6548240," can actually you know tokenize all that stuff so the thing we need to do we need to be able to parse"
6548240,6553040," a function right we need to be able to parse the function how we're going to be doing all that that's"
6553040,6561040," a good question so maybe we need to have some sort of a function uh right it's called parse function"
6561040,6567440," right and it's going to accept alexa uh and it's probably going to return the definition of a function"
6567440,6573440," right so the definition of a function so maybe it's going to be a class right so this is going to be a"
6573440,6580400," function it's already let's call it func yeah yeah so it's called func so the function is going to have"
6580400,6584400," uh i'm pretty sure it's going to have a name right so this is going to be a name which is going to be"
6584400,6596080," string and uh it probably needs uh what does it need it needs a return type i suppose as well right"
6596080,6598560," a return type"
6598560,6606560," and that also means that we need to have some sort of a type system right so we need some sort of a type system"
6609120,6617280," so let's introduce some types so we already have token types right so something like this"
6617280,6624560," maybe we're going to have a similar enumeration for just types right so i'm going to set my iota"
6624560,6630240," to zero right i'm going to define some like primitive types if you know what i mean"
6630240,6635120," right so we need to define some primitive types so we're going to have type integer and this is going to"
6635120,6647440," be uh iota plus plus so i'm not going to introduce any more types because i don't think we have any more"
6647440,6654080," types right uh probably it probably makes sense to actually have something like void all right so we're"
6654080,6661200," going to have a void and uh then we're going to have an integer there we go so we have void and we have integer"
6662720,6669920," um okay so arglist i'm not sure if we need arglist because i'm going to support"
6669920,6677920," only this kind of function so my goal is to to just be able to compile uh this thing right and here"
6677920,6688800," we don't have any arglist so yeah we also don't have any voids right so maybe because of that it makes sense to actually not have any types"
6689600,6695600," yeah i think it i think it does make sense right so we're only going to have a body right so we're doing"
6695600,6703440," like a minimum bare minimum to compile that specific function so and body is going to consist of statements"
6703440,6710640," right so uh let's actually have a statement stmt right so this is how it's usually done so"
6711920,6717680," it would be nice to actually have statements like a hierarchy of statements if you know what i mean"
6717680,6724320," right some sort of a hierarchy statement but maybe maybe not because i wanted to have like more of an"
6724320,6730800," open architecture right uh right because i could have used polymorphism if you know what i mean right but"
6730800,6742800," i don't want to go into that op route so uh we can google that how to do polymorphism it's so abstract classes probably"
6742800,6751200," okay"
6751200,6760640," so yeah that's how we can do that so we can have like a base class statement and then we can we can"
6760640,6766880," extend it but i just don't like to do that because it's not particularly flexible all right because"
6766880,6773680," essentially you have to define within the interface literally everything that you might ever have to do"
6773680,6779280," with that specific interface right which is not particularly flexible right so it's better to just"
6779280,6785440," expose the data and whatever functions need just use whatever they they have there right so it's just"
6785440,6791520," like you know like to do this kind of stuff uh right so and because of that i'm going to probably"
6791520,6798960," introduce the the type like so right and this is literally goes against any of op principles and i"
6798960,6804160," know that and i do that on purpose to piss op people off yes that's precisely why i do that"
6804160,6813040," uh okay so we're gonna have stmt and we right now by the way uh have only two kinds of statements"
6813040,6818720," as you can see in here we have two kinds of statements uh the first one is a function call"
6818720,6827520," right the function call and return right so that's all we have uh so let's go back to uh to this thing"
6827520,6834480," and that means we're going to have a phone call right so this is going to be iota plus plus and another"
6834480,6842480," one is going to be stmt uh stmt a return right this is another statement this is iota plus plus"
6845840,6854080," is a group statement a block uh yeah i suppose it's just like two group and block statement is just like"
6854080,6861840," two different names for the same thing maybe uh right so and here we want to have maybe i'm gonna call it"
6861840,6875120," and in case of return um"
6875120,6887200," it's actually like using an abstract class would have been more convenient in here i think"
6891040,6898880," does php have instance of does it have instance of i think it had instance of"
6898880,6904880," yeah there is instance of i can use that"
6904880,6912560," so and if i want to cast something"
6914640,6915760," to another thing"
6915760,6925200," to another thing this example is incomplete right if you check instance of you should also demonstrate"
6925200,6930480," like how to go further right after checking to instance of you probably cast it do you cast it the"
6930480,6935840," same way as you cast two integers i wonder this is not useful"
6942800,6948480," this is not a useful complete example useful complete example would also do the cast and just demonstrate"
6948480,6953200," how to do this kind of thing um oh wait a second this one is interesting"
6953200,6965120," it's written in circle class wait does the instance of automatically sort of cast it or maybe you don't even"
6965120,6972480," have to cast that because it's going to be just available there yo it's a dynamic language yeah it's a dynamic"
6972480,6976400," language you don't need to cast it's just like it's like a duck typing right"
6976400,6984720," it's like a duck type yeah so because of that maybe i don't even have to do that"
6984720,6988720," okay so let me go to uh to here right"
6992960,6998320," yeah my brain keeps thinking in like a statically type stuff right i should probably stop doing that"
6998320,7004880," uh right so we just have functions so we're gonna have just like a return"
7004880,7013760," uh return thingy so it's called the red uh maybe even a red stmt"
7015920,7021920," and uh we're going to have the expression that you return right so just an expression that you return"
7021920,7026080," and we're going to have another one fun call stmt"
7026080,7035120," uh all right and what does it have it have a name has a name right and then arguments right the arguments"
7037200,7040320," uh so and the body is supposed to be an array"
7040320,7048240," of these things right it's supposed to be an array of these things yeah that makes sense"
7048240,7060000," okay okay anyway so let's actually start parsing this entire thing uh so what i want to do"
7061200,7069120," first thing i want to do i want to extract the um the return type right so i want to extract the return"
7069120,7077200," type uh we're going to do lexa next token right so next token should be available"
7077200,7083760," um so we can do something like token right and if"
7083760,7090960," uh token is not available right if token is not available we can say something like"
7091200,7097040," it would be kind of nice to actually get the location but i suppose we can have a location"
7097040,7103040," because we can do lexa uh lock right and then we can display that specific location right"
7103040,7111600," so that's what we can do and we i can say then s printf s error expected um"
7113920,7121120," name but got end of file or something like that then we can just put it in here"
7121120,7134320," yeah so and i suppose after that we can just return false right so we log the error and we then return"
7134320,7141840," false after that uh if everything went okay uh we need to check"
7143920,7151440," right we need to check that token uh talking what i think it's type right so i think it was type"
7151440,7159200," but i don't remember already uh where is the type it is here so let's stay is equal to token"
7159200,7166480," name right there we go if it's not equal to token name right if it's not equal to token name we have to"
7167360,7173120," also report an error we're gonna say uh that we expected a name but got something else and it would"
7173120,7178480," be nice to actually extract that to a separate function or that's what i usually do uh right"
7178480,7180480," essentially do something like function"
7180480,7189760," expect token right and you would provide the lexa and the token type uh and it would either return you"
7189760,7198880," that thing or not so we can even move uh all of these functions there right uh there we go so expected"
7198880,7214320," name actually we need a way to um to convert token type to something else right so s uh yeah display token"
7215920,7224080," type token type token type but token type is a number right token type is a number which means"
7224080,7231040," that i should be able to have something like token type names and then token type"
7231040,7239520," yeah that's cool uh can i actually do just type i think i should be able to do just type yeah token type"
7240480,7249040," uh token type names uh that's pretty cool remember return false uh expected s"
7249040,7259440," right but got something else actually this has to be here right so let's put it like that"
7259440,7269040," so the first display and then token type name okay so and in here expected that but got something something"
7269040,7277200," else uh right so it's okay so put it actually here maybe maybe that's fine yeah i think that's fine for"
7277200,7288000," now um token type names so this is type we expected that but got something else uh token type names what we"
7288000,7294880," got we got token uh type which is something else all right return false otherwise we return whatever we"
7294880,7302240," manage to parse in here so that makes it a little bit easier i think uh so this is return type we expect"
7302240,7307920," uh token and what kind of token do we expect we expect token name all right"
7307920,7311600," cool so"
7311600,7321040," uh let me remove this entire stuff so what i want to do i want to just parse the function right i'm going to"
7321040,7327040," provide the lexa and hopefully that is going to work so so far so good this is actually like sort of like"
7327040,7334480," the main the main entry point right so this is a file path we get the entire source code right so then we"
7334480,7340560," construct the lexa out of it and out of that and we're trying to parse uh a function call out of that"
7340560,7345440," right so that's basically what we're doing here so i want to check if this entire thing is going to work"
7345440,7356640," uh right so let me do php c dot php and yet again it didn't even complain so that means everything was fine"
7356640,7363440," which is probably correct right what if i try to expect a different token type in here like something like"
7363440,7368560," number is it going to complain it is not going to complain this is absolutely perfect i love it"
7371840,7382880," so that means nothing worked in here right okay that's very cool uh so can i just do echo before"
7382880,7394000," expect right and uh here we're gonna have after uh all right so that means it went inside in here cool"
7395440,7403840," uh so we extract the token right so we can try to maybe print that token so um that means we got it"
7403840,7408240," right so we got it and if it's not equal oh okay yeah"
7408240,7415360," so that's basically what we have to do i forgot to unheard code some of this stuff so that's that's"
7415360,7422080," what's the problem uh and there we go so well something something went wrong in here specifically in"
7422080,7434080," here we don't have a token uh type names right so let's go um token type names right and we can"
7434080,7447600," actually kind of organize some interesting stuff in here all right um yeah can we turn all of that stuff"
7447600,7458640," quite easily so essentially the easiest thing for me to do would be just turn all of these things"
7458640,7469120," into array but this is kind of lame if you know what i mean all right can i um by the way do something like"
7469120,7479520," this then everything up until the end and replace it with nothing maybe not really nothing but uh comma"
7479520,7486480," right trailing characters what do you want from me i don't understand"
7486480,7488720," um"
7488720,7496320," do you want me to do like that i don't know what it wants honestly so i'm not a"
7497200,7506240," though i could have just like done it like this yeah just to replace space and everything up until"
7506240,7518720," the end with nothing yeah boy boy that's cool uh-huh cool and i suppose i also have to do"
7522400,7536800," this thing this thing cool and define token type names in but oh how can i access a global variable"
7536800,7548640," um okay so we need to be able to access global variables global variables"
7552000,7556400," mm-hmm so i'm also learning php"
7556400,7559600," seriously globals"
7559600,7568080," dude no i reject that variable school"
7568080,7576720," global"
7576720,7585680," all right so that makes sense"
7585680,7596800," global it's like in python would you look at that token uh types names all right"
7596800,7606560," look at that yes so it fails at the line three column four with an error expected number but"
7606560,7612400," got name and if yeah there we go that's actually pretty cool so that's perfect actually"
7612400,7620080," what the fuck it's too good it's too good it's too good uh right and we're going to be expecting"
7620080,7626480," actually name uh right so but it has to be like a very specific name right so if"
7628480,7640160," uh return type in return type um is not equal to int we gotta say something like echo s printf uh s"
7640160,7650960," error uh unexpected type uh s right so it's not really return type it has to be yeah it has to be"
7650960,7657600," the value that we'll be the value that we're extracting in there right and uh this is return type we might as"
7657600,7664400," well put it in here and we're taking the location of this thing we're displaying this entire stuff and then"
7664400,7670720," we take the return type value like so and then we return false"
7671840,7680480," there we go so yeah that's pretty cool so let's try to do make uh it's it's totally fine but now let's"
7680480,7685520," switch to hello c and let's say that we're going to be returning void which is also valid but our compiler"
7685520,7690960," is not going to support that as you can see unexpected type void and it actually points in here"
7692160,7700640," that is so freaking cool okay so we we can support that so maybe we can even uh extract this entire"
7700640,7710480," thing to a separate function right so yeah parse type and we're going to accept the lexa uh and we're"
7710480,7718560," going to just like literally move this entire stuff in here parse type uh otherwise return so this one is"
7718560,7728800," interesting so i was like hesitating to actually introduce the type type type type uh but maybe"
7728800,7735280," it makes sense to do that right because it's going to be extendable in the future in some sense right so"
7735280,7742240," let's let's still do that let's define uh something like type int right we're gonna have this kind of"
7742240,7749840," thing uh iota plus plus right so and essentially when we parse this entire thing since we have only one"
7749840,7759040," type we're going to be just returning uh type int right so that's what we do and uh we parse type"
7759040,7767280," right we just parse type from the lexa and in here i suppose we can just uh you know"
7769840,7778320," simply assert right we can simply assert uh that this thing this return type is equal to"
7778320,7785280," um type integer right so the reason why i do all of that machinery is that it will make it easy in the"
7785280,7793680," future to um to extend right so if we add more types it will be super easy to just like uh slap a"
7793680,7800240," new thing in here hopefully i don't know we'll see i don't know that's just some sort of to think about"
7800240,7804720," okay so the next thing we need to do we need to get the name right so we're gonna have a name and we're"
7804720,7809600," gonna expect a certain token in here and the token that we expect in here is going to be talking name"
7809600,7816960," right so that's pretty straightforward so we'll get the name so another thing uh though yeah"
7819040,7828640," we'd have to also check a lot of things right so for instance if not uh return type right we have to"
7828640,7830160," return false instantly"
7830160,7836640," return false right because if this thing returns false"
7837680,7844320," oh my god is zero a false type"
7844320,7856000," yikes so it probably also means that"
7859520,7863840," in a sense of enumerations it would be better to use string in this language"
7863840,7874080," how do you remember syntax functions of different languages"
7874080,7883280," that's a good question uh i don't know i just look around and mimic the thing right"
7885280,7893520," i don't know so essentially uh i'm editing some sort of source code right i'm editing some source code"
7893520,7899520," and around i see that variables are prefixed with dollars so i just repeat that"
7899520,7907840," right so then i need to create the function i look around how do you define a function oh you started with"
7907840,7915120," a word function so i do that i store the knowledge about the syntax within the source code itself"
7916080,7923200," like i don't have to remember how to um refer to a variable because i have that in front of me"
7923200,7928560," why do i have to remember that i never have to remember that uh like do i have to remember that i have"
7928560,7933920," to put parentheses around the condition no it's in front of me it's stored in the file in front of me"
7933920,7940160," why do you need to remember that and this is basically how language models also do that"
7940960,7947040," they just look at the text around them and predict them the most possible token like why do you need"
7947040,7956640," to remember that i don't understand right and you can do a similar thing with unknown code base in a"
7956640,7964240," language that you never programmed in like i remember an episode when one of like like i used some program"
7964240,7970240," that used a ruby script and something failed in a ruby script i know nothing about ruby i never"
7970240,7978240," programmed like at all in that language ever uh the error pointed at some place in the source code i went"
7978240,7984480," there and i managed to fix it because i looked around and uh understood how the language worked its basic"
7984480,7990640," syntax and i just modified it like and i didn't even look up anything in the manual because why i have"
7990640,7997760," examples on how to use the language in front of me that's the thing you don't need to remember any of"
7997760,8006880," the syntax right it's like with mathematics right because you never have to like if you're memorizing"
8006880,8014480," formulas you're doing math wrong you don't have to memorize anything ever you should be able to have an"
8014480,8022000," understanding to derive all of the all of the formulas from scratch right so that way you never have to"
8022000,8027360," remember anything it's the same here just look around uh okay"
8037440,8048560," base in inference law yeah exactly uh it's actually kind of interesting uh so"
8048560,8061280," maybe we have a thing or two to learn from language models right because maybe we can just basically mimic"
8061280,8071200," them right so yeah because it's basically mimicking the language model anyway um"
8071200,8080400," so we made language models to mimic humans so then they can become better and we can start mimicking the"
8080400,8089680," language models it went full circle right or maybe we can use language models to get"
8089680,8099200," into like to get insight into how we think ourselves right so maybe we can use language model to better"
8099200,8105360," understand ourselves because they're basically a mirror of ourselves when you're interacting with the"
8105360,8110400," language model you're almost like looking into the into the mirror of your consciousness"
8110400,8115280," if that makes any sense uh anyway"
8115280,8125920," so expect tokens and uh okay so what i was doing that so i expected the name the next thing i want to"
8125920,8133360," do yeah so if return to do false uh if not name also return false"
8134240,8141280," um we're not gonna parse any arguments right now right so i'm gonna do i'm gonna say expect token uh lexa"
8141280,8149440," token all open parent right so if oh yeah i remember"
8149440,8158400," this thing is false right uh phpa if uh zero echo"
8160160,8163600," yes else uh else echo no"
8163600,8165680," fuck"
8165680,8173280," so that means uh in terms of a type"
8173280,8181200," it would be better to just have things like i don't know man uh maybe"
8183520,8187360," maybe maybe literally type int if you know what i mean"
8187360,8194160," yeah and uh i probably have to do this stuff here as well"
8194160,8200640," which actually will make it even easier all right if we just"
8200640,8207200," yeah if we just make it equal to the name i never have to even have this thing in here"
8209840,8216480," i guess that makes sense right so it's a little bit extra work uh but maybe it it's worth it if"
8216480,8222720," you know what i mean but it's not really needed right now we can do that later right so we can do"
8222720,8228800," that later but for this thing it is important okay so here i'm going to do another expectation so i'm"
8228800,8235520," gonna do uh close parent right so as you can see we expect open baron and close parent and then the last"
8235520,8245040," thing that we expect in here is uh open curly right so if we go back into hello right in here we expect"
8245040,8250400," open parent close parent open curly and that is basically it right so that's basically what we do"
8252080,8260320," though maybe it would be actually nice to have a thing called parse block right so parse uh block"
8260320,8268000," and we're gonna provide alexa and we're gonna have something like body in here uh so but before we're"
8268000,8273840," gonna try to parse the block i'm gonna just like parse this thing uh and curly is gonna be part of the"
8273840,8288720," parse block right parse block uh lexa uh so 13 there we go uh and we got a name we got a return type name"
8288720,8296080," and body so if i take a look at the function we have a name and the body which is fine uh right so i"
8296080,8304640," should be able to do something like return new func name body right so we are slowly building up the ast"
8304640,8315120," uh just building up the ast and maybe i need to have something like this in here so public uh function"
8315120,8322560," function construct name body this name"
8326080,8340800," okay okay so let's go back and when we're building the block we basically have to um keep um"
8340800,8351440," parsing the statements right so we need to keep parsing the statements uh this one is really interesting"
8352080,8358960," all right all right so essentially what we need to do we need to get some token all right"
8358960,8371920," so let's call the name expect token uh laxa token name and we have two situations in here if name"
8371920,8381360," uh right if name is equal to return that means this is a return statement"
8381360,8386960," all right so this is a return statement if it's not uh return that means it's a function"
8386960,8398880," okay cool so"
8398880,8405520," um this one is going to be a rather interesting because"
8408160,8412000," um what the neighbors are doing i swear to go"
8412000,8416240," they're just moving for furniture or something"
8416240,8421040," uh in the middle in the middle of the night by the way"
8421040,8426400," what are they doing holy"
8426400,8435520," uh okay so essentially we can basically get the next token right um"
8436880,8442880," though we can do something interesting in here we can expect one like several tokens in here"
8442880,8450480," uh we can say token name or token closed curly right so this is the thing that we can expect"
8450480,8456400," and uh then depending on the type right if uh name"
8458720,8466400," type is equal token name then we do that and by the way this has to be a value right so this has to be a value"
8466400,8475120," so there we go so if it is something else right if it is something else"
8476960,8483600," uh we have to uh we have to uh we have to end the entire thing uh we have to end the entire thing"
8483600,8488000," yeah that's actually kind of cool uh so"
8488000,8504160," which means we can do it like that while true uh we do that if uh name type is equal token c curly"
8505120,8509120," we break out of the loop right we simply break out of the loop"
8509120,8518160," uh right and otherwise we do something like this there we go so that's the entire thing"
8518160,8524480," but as we build this entire stuff right as we build this entire stuff we have to append"
8525200,8540560," uh to the block uh um so that's pretty cool okay so in case of the return right in case of the return"
8540560,8546640," we need to get an expression so i suppose for now uh what we're going to be doing we're going to be"
8546640,8552960," like literally expecting zero right so we're going to be literally expecting zero"
8552960,8561760," um expect token oh by the way i think here we have to do something like"
8561760,8574960," uh if not expect token lexa token semicolon right so we expect semicolon otherwise we instantly return false"
8574960,8582000," uh so uh we also probably have to do block which is going to be array and we're going to append in"
8582000,8589040," stuff to that array and then we're going to just return this block uh right this is going to be an array"
8589680,8599040," uh so but i need to figure out all right i need to figure out how to do variatics in php so let's go ahead and do that"
8599040,8602240," variatics"
8602240,8606640," uh variadic function"
8610080,8613280," wait wait you can specify the types in here that's actually kind of cool"
8613280,8621920," optionally right okay so we can have numbers in here uh all right so can i say"
8621920,8625440," uh types"
8625440,8627600," yeah"
8627600,8634000," so types right so we expect this thing and"
8635440,8637360," yeah uh"
8637360,8639120," uh can i do for each now"
8639120,8642320," for each"
8642320,8651280," all right show me some examples for each"
8651280,8656160," so it's the other way around but why do i have to put this thing in here that's so weird"
8661280,8662480," array as key"
8662480,8666800," seriously what the hell is that"
8666800,8669520," is that an ampersand"
8669520,8673200," it isn't a percent well i mean sure"
8673200,8675280," for each"
8675280,8678800," types as"
8678800,8684640," type i'm really not sure why i have to do that but sure"
8685920,8687840," um okay"
8687840,8691840," so i need a way"
8691840,8694160," to essentially"
8694160,8697360," you know append all of these things together"
8697360,8701440," all right so given the types"
8701440,8705360," um"
8705360,8708320," types"
8708320,8710480," as string"
8710480,8713440," so and i want to accept the types"
8715120,8716320," so um"
8716320,8719680," i want to be able to have something like this"
8719680,8722000," right where i just iterate for each"
8722000,8725200," types as type"
8725200,8727760," where i would do something like"
8727760,8732720," s equal s dot"
8732720,8734400," or"
8734400,8737440," the type"
8737440,8739520," so that's what i want to be able to do"
8739520,8745040," but this is not particularly easy because i don't have to put"
8745040,8746400," or for the first one"
8746400,8747680," all right"
8747680,8749840," i don't have to put"
8749840,8751760," or for the first time"
8751760,8755120," huh"
8755120,8756400," so"
8756400,8759040," it would be kind of"
8759040,8763040," is there something like join you know what i mean"
8765120,8766560," uh let me see"
8766560,8766880," uh let me see"
8766880,8768560," php"
8768560,8770960," join string"
8770960,8781360," yeah you can just join"
8781360,8786800," so here's an interesting thing i think the easiest way to do that would be to join"
8787840,8788640," with or"
8788640,8788640," with or"
8788640,8791280," these types"
8791280,8793200," if the types were strings"
8793200,8794720," but they are not strings"
8794720,8795040," they are"
8795040,8796480," numbers"
8796480,8797840," right"
8797840,8798960," and that's kind of"
8798960,8800320," that's kind of sucks"
8800320,8800800," right so"
8800800,8805440," we can fix that by actually defining those things as strings"
8805440,8810560," so this is something that i didn't want to do but apparently i have to do that"
8810560,8811120," right so"
8812960,8817200," i wonder if i can do a little bit of a v magic if you know what i mean"
8817200,8818560," right so can we do"
8818560,8820560," define"
8820560,8824400," all right then we can take this kind of thing token underscore"
8824400,8826080," all right then"
8827360,8828080," i suppose"
8828080,8829120," yeah"
8829120,8831680," i can take from a to z"
8831680,8834400," all right so something like plus"
8834400,8835760," it doesn't match"
8835760,8838160," will it match now it does match now"
8838160,8841280," uh right so and then we're gonna have"
8841280,8843360," uh iota"
8843360,8844960," plus plus"
8844960,8847280," didn't have that"
8847280,8850000," it doesn't match that anymore"
8850000,8854400," do i have to okay so i have to explicitly do it like that which is kind of weird but i mean"
8854400,8854720," fine"
8854720,8858960," and uh what i want to replace it with i want to replace it with"
8858960,8860880," just token"
8860880,8862400," first"
8862400,8863520," and then"
8863520,8865440," token"
8865440,8867760," first one more time"
8867760,8870000," will that work"
8870000,8872080," it does in fact work"
8872080,8874240," can your emacs"
8874240,8877600," do that i don't think so mate"
8877600,8878880," holy"
8878880,8879920," okay"
8879920,8884080," so that is pretty cool and that means we don't need talking types"
8884080,8886480," right so we don't need any of these stinky talking types"
8886480,8887520," uh"
8887520,8888000," token"
8888000,8889760," type name"
8889760,8895360," right we just don't need that anymore because we can use the type directly in here"
8895360,8897360," uh"
8897360,8901920," isn't that poggers i think that's pretty freaking poggers"
8901920,8906800," okay and essentially"
8908400,8909200," right"
8909200,8909920," right what we can do"
8909920,8912640," we can iterate through the types"
8912640,8913760," and if"
8913760,8917040," something is equal to one of those types"
8917040,8919120," we can essentially"
8919120,8921520," just instantly return that token"
8921520,8925600," right if it's not equal to one of the types we have to"
8925600,8926880," say"
8928960,8930160," that we didn't expect that"
8930160,8930320," that we didn't expect that"
8930320,8930800," that we didn't expect that"
8930800,8931520," expected"
8931520,8933280," what did we expect"
8933280,8934240," join"
8934240,8936080," or"
8936080,8938240," types"
8938240,8940960," like that"
8940960,8941680," but got"
8941680,8944880," token"
8944880,8947280," type instead"
8947280,8949280," so that makes it way more easier"
8949280,8950560," right as you can see so"
8951120,8952960," we can actually provide several types in here"
8952960,8954560," that's"
8954560,8955120," that's good"
8955120,8955920," i like that"
8955920,8956480," i like that"
8956480,8958800," okay so parsing the type"
8958800,8960400," parsing the block"
8960400,8962480," so here we expect"
8962480,8963840," either name or"
8963840,8965520," close curly"
8965520,8965920," right"
8965920,8966960," so if we expect"
8966960,8968560," if we found close curly"
8968560,8970560," we just exit the syntax thing"
8970560,8971120," if we in"
8971120,8973920," found the return we have to do something else"
8973920,8974160," okay"
8974160,8976880," in case of a return"
8976880,8978720," i can just expect token"
8978720,8980720," lexa token"
8980720,8981760," name"
8981760,8984880," token name"
8984880,8987280," actually not token name but number"
8987280,8988320," right"
8988320,8989040," so number"
8989040,8992960," and this is going to be an expression"
8992960,8997840," so actually maybe let's call it value"
8997840,8999360," right"
8999360,9001040," and if"
9003600,9004080," value"
9004080,9007360," return"
9007360,9007760," false"
9007760,9009680," so interestingly"
9009680,9010640," i probably do"
9010640,9012080," have to do a similar thing in here"
9012080,9012560," if not"
9012560,9013600," name"
9013600,9016160," also instantly return false"
9016160,9016400," all right"
9016400,9018560," so it means we couldn't parse this into i think"
9018560,9020880," uh"
9020880,9022400," we couldn't parse this into i think"
9022400,9023520," so this is a type"
9023520,9024400," and blah blah blah"
9024400,9029840," right"
9033600,9033920," cool"
9033920,9040320," so where do we define return return statement"
9040320,9042000," so it only has an expression"
9042000,9047280," so i'm going to return"
9047280,9048960," not really return but"
9048960,9049760," yeah"
9049760,9051120," so what i need to do"
9051120,9051920," do i need to check"
9051920,9054800," so let me close all that stuff"
9054800,9056080," this is not needed anymore"
9056080,9057760," i need to check"
9057760,9062000," append array"
9062000,9063040," how do you append array"
9065520,9066240," array push"
9066240,9067600," there's such thing as array push"
9067600,9068320," cool"
9068320,9071440," that's that's good enough for me"
9071440,9072800," i'm fine with that"
9072800,9073840," so array push"
9073840,9075920," block"
9075920,9077520," right we do block"
9077520,9080800," and we'll be pushing new return statement"
9080800,9083360," and in here we just provide the expression"
9084240,9085040," which is the value"
9085040,9085840," right"
9085840,9086160," so"
9086160,9088640," there we go"
9088640,9090400," that's basically it"
9090400,9092400," so we return the integer"
9092400,9092640," right"
9092640,9096000," so function call is going to be rather interesting"
9096000,9099120," um"
9099120,9103360," so we already have a name"
9103360,9106640," so we need to parse arglist"
9107120,9109760," so arglist"
9109760,9112400," parse arglist"
9112400,9114800," and we're going to provide the lexion"
9114800,9116080," right"
9116080,9116720," and if"
9116720,9118960," not arglist"
9118960,9121600," instantly return false"
9121600,9123920," right"
9123920,9124960," instantly return false"
9124960,9128000," and then just do array push"
9128000,9129680," block"
9129680,9132480," new fun call"
9132480,9135280," fun call statement"
9135280,9136320," we provide the name"
9136320,9137600," we provide the arglist"
9137600,9140240," and that is basically it"
9140240,9141360," right"
9141360,9143680," so we just push all of these things in here"
9143680,9144480," and after the"
9144480,9147040," end of all the statements"
9147040,9148880," we expected the semicolon"
9148880,9149120," right"
9149120,9150480," so and then we repeat"
9150480,9151840," we expect either the name"
9151840,9152960," or closing curly"
9152960,9154560," if we encounter closing curly"
9154560,9157200," so we basically end this entire thing"
9157200,9158320," and we just return the block"
9158320,9158560," okay"
9158560,9160560," so we managed to implement this entire thing"
9160560,9162400," so"
9162400,9164000," yeah"
9165280,9166160," what i want to do"
9166160,9166160," what i want to do"
9166160,9167760," i probably want to try to"
9167760,9170720," just run this entire thing"
9170720,9172640," and go through the interpretation errors"
9172640,9173760," not really compilation errors"
9173760,9174960," because this is not a compiler"
9174960,9176560," right"
9176560,9178880," but yeah there we go"
9178880,9181840," so it's going to be php"
9181840,9183520," c php"
9183520,9184000," there we go"
9184000,9185200," so"
9185200,9187920," 225"
9187920,9189200," so what do we have in here"
9189200,9190320," i probably have to"
9190320,9192160," yeah i have to put this stuff in here"
9192160,9195520," so what else do we have"
9195520,9199200," 249"
9199200,9200160," 249"
9200160,9201920," what you don't like in here"
9201920,9203200," yeah that makes sense"
9203200,9203920," thank you so much"
9203920,9208480," 236"
9208480,9209840," what you don't like in here"
9209840,9212880," call to undefined function arg list"
9212880,9214080," yeah that makes sense"
9214080,9214960," that's fair enough"
9214960,9217280," uh-huh"
9217280,9220000," parse arg list"
9220000,9222000," so we're going to accept the laxa"
9222000,9223600," one of the things we can do in here"
9223600,9224480," is actually"
9224480,9225840," if not"
9225840,9227520," expect token"
9227520,9228960," laxa"
9228960,9229520," token"
9229520,9230560," all parent"
9230560,9231360," act set"
9231360,9232000," all parent"
9232000,9234000," all right"
9234000,9234480," a set"
9234480,9235120," all parent"
9235120,9236800," return false"
9236800,9237840," and similarly"
9237840,9239840," close parent"
9239840,9240080," right"
9240080,9241360," so this is what we have in here"
9241360,9245280," so we need to parse an expression"
9245280,9245600," right"
9245600,9247520," so we already kind of had coded"
9247520,9248800," different expressions in here"
9248800,9251760," so what i'm thinking is that"
9251760,9252640," i'm going to literally"
9252640,9254800," get either"
9256880,9257440," number"
9257440,9258240," or a string"
9258240,9259840," so maybe this is what"
9259840,9261520," we have to have in here"
9261520,9263360," so parse expression"
9263360,9265040," so for now"
9265040,9267120," we're going to have only"
9267120,9269840," two kinds of expressions"
9269840,9270880," right"
9270880,9271600," it's"
9271600,9272720," numbers and strings"
9272720,9273840," i think that's fair enough"
9273840,9274960," right"
9274960,9275600," so we can say"
9275600,9276480," expect token"
9276480,9277680," laxa"
9277680,9281040," right"
9281040,9283840," it's either token"
9284640,9285280," number"
9285280,9286240," or token"
9286240,9286880," string"
9286880,9288720," all right"
9288720,9289600," and"
9289600,9292000," so this is going to be an expression"
9292000,9293440," and if"
9293440,9295520," not expression"
9295520,9301600," return false"
9301600,9304880," and here we're just going to do"
9304880,9305360," value"
9305360,9306720," that's it"
9306720,9308800," right"
9308800,9310320," we expect only these two things"
9310320,9312480," so which makes it kind of easy"
9312480,9312800," right"
9312800,9312800," right"
9312800,9313120," i think"
9313120,9319040," they'll"
9319040,9323440," maybe it's not particularly"
9323440,9326480," interesting"
9326480,9327360," so"
9327360,9331040," actually we do number in here"
9331040,9333120," i think this function is useless"
9333120,9334480," right"
9334480,9338320," because it does it doesn't allow us to"
9338320,9340080," smoothly parse the center i think"
9340080,9341440," so i'm going to do it like this"
9341440,9342080," arglist"
9342080,9343920," array"
9343920,9344880," so this is array"
9344880,9345360," and then"
9345360,9347520," while"
9347520,9348560," true"
9348560,9350400," we're going to take"
9350400,9351360," the next thing"
9351360,9352480," which is going to be"
9352480,9353280," an expression"
9353280,9354240," which is expect"
9354240,9356080," token"
9356080,9357440," we would expect"
9357440,9358000," one of these"
9358000,9359440," one of these things"
9359440,9361360," token"
9361360,9361760," string"
9361760,9363520," token"
9363520,9363920," number"
9363920,9365760," i'm kind of into"
9365760,9366480," doing whatever the"
9366480,9367600," fuck i'm doing right now"
9367600,9370000," i know i'm into writing this in php"
9370000,9372160," i don't enjoy php"
9372160,9373360," but i kind of like"
9373360,9374560," enjoy this project"
9374560,9375040," uh"
9375040,9375520," very much"
9375520,9378320," so and another thing i expect in here"
9378320,9379440," is a token"
9379440,9380160," close"
9380160,9381280," uh"
9381280,9382160," close parent"
9382160,9383120," right"
9383120,9383440," if"
9383440,9385280," not"
9385280,9386720," expert"
9386720,9388720," expert"
9388720,9390320," return"
9390320,9392080," false"
9392080,9394080," return"
9394080,9394400," false"
9394400,9395760," uh okay"
9395760,9396560," so"
9396560,9397840," if"
9397840,9400880," expert"
9400880,9401360," type"
9401360,9401920," is equal"
9401920,9402400," token"
9402400,9403040," c parent"
9403040,9404240," i'm just"
9404240,9404880," instantly"
9404880,9405840," returning"
9405840,9406720," arglist"
9406720,9407600," right"
9407600,9408960," uh"
9408960,9409920," i'm actually say"
9409920,9410880," i can actually say"
9410880,9411840," something like break"
9411840,9413600," and return"
9413600,9415760," yeah we don't have to do that"
9415760,9416560," and just return"
9416560,9417200," arglist"
9417200,9419360," yeah"
9419360,9420160," that makes sense"
9420160,9421280," otherwise"
9421280,9422400," um"
9422400,9423680," array"
9423680,9424960," push"
9424960,9427200," arglist"
9427200,9428960," expression"
9428960,9429840," value"
9429840,9431440," yeah there we go"
9431440,9433760," so that would allow us to parse the arglist"
9433760,9435840," and this function becomes kind of useless"
9435840,9436240," i think"
9436240,9438400," uh"
9438400,9439760," right it becomes kind of useless"
9439760,9441840," so parse arglist"
9443120,9443760," and some other"
9443760,9445760," cool"
9445760,9451760," so that's basically it"
9451760,9456720," in terms of outlining the idea that i want to implement so we only need to go to the"
9456720,9460160," compilation errors or interpretation errors or whatever the it is"
9460160,9466880," okay so let's go ahead and do that so what's going to be the next one 2021"
9468560,9473280," expected um syntax error unexpected return"
9473280,9479920," what don't you like about oh i see that makes sense so if i go to close pattern"
9479920,9487760," sure uh what's the next one 248 uh aha so this has to be prefix with that"
9487760,9498320," fair enough uh what's the next one uh 244 uh value okay so what's up with that uh if we"
9498320,9503680," return um if not expression yeah so that makes sense as well"
9503680,9512000," okay so it worked out correctly which is kind of weird not gonna lie"
9512000,9516160," uh class fun call wait a second"
9516160,9522080," new red statement this is sus"
9524720,9527440," um so i never defined"
9527440,9531440," constructor for this thing will that work"
9531440,9536160," that's a real question so if i do something like"
9536160,9546640," full and i have a let's call it public a public b right and then i have something like full"
9548240,9560160," new full 69 420 and then i say okay echo full a and b will that work"
9563120,9566960," but if i then define public function"
9566960,9578320," um public function construct a b"
9578320,9587840," okay what a horrible language what a horrible language"
9589840,9593360," uh i will never program that commercially"
9593360,9599440," my god anyway so maybe i will who knows"
9599440,9603360," construct"
9603360,9607600," so expression some sort of an expression this"
9607600,9610560," expression expression"
9611760,9616000," so fun call statement we also kind of need to do funcal statement sure"
9616000,9621600," construct a function"
9621600,9625760," name orgs"
9632960,9646160," who needs who needs codex who needs copilots who needs all of that i can type the border plate myself"
9649280,9665360," okay uh so is there any way to check the type of whatever we got um php get type"
9665360,9670320," uh so it returns a string okay so let's give it a try"
9671680,9677200," echo echo um get type func"
9677200,9686560," let me see uh yeah sure object"
9686560,9695600," cool so i suppose well i mean it's not particularly i would like to have a specific thing"
9697120,9700400," uh but that's fine maybe there is something like get class"
9700400,9701760," is there something like get class"
9701760,9710480," get class okay so but i'm not sure if it's a like um"
9710480,9717680," uh useful thing get class which has the name of the class yeah that will be"
9718880,9721200," uh"
9721200,9725760," get class get clean"
9725760,9737920," funk that's perfect class funk uh let me see what i want to do i'm gonna just do"
9737920,9747520," funk body all right and how do you get the length i forgot length of an array"
9748880,9751760," uh php array length"
9751760,9760960," ah size of okay so maybe that's that's what i want"
9760960,9773920," size of size of size of size of so how many of these things we have so that's the real question two"
9773920,9780800," which is perfect cool uh so what i want to do now i want to do for each"
9780800,9789520," right so i want to do for each where i just do funk first of all by the way if uh not funk"
9789520,9797200," simply exit with 69 that's what we're gonna do just exit with 69"
9798320,9808080," uh right so funk body as uh stmt right so we're iterating the statements"
9808080,9816640," and what i want to do i want to just do something like get class class"
9817920,9823200," stmt and then just like a new line"
9823200,9836160," okay phone call and statement so and this is actually more generic than you think"
9836160,9844240," so here is the source code that we have in here right and we parse this entire thing and we determined"
9844240,9850080," that this is a phone call statement and return statement now look i can do the following thing"
9850080,9858160," i can add another one where i would do full bar and it has two phone call statements this"
9858160,9861040," motherfucker understood what i mean"
9864000,9873760," chat look at that we parsed c using php i can try to introduce some syntactical errors and it will"
9873760,9882400," complain saying at the line seven and column 11 expected token semicolon but got token name so line seven"
9882400,9888720," right but i mean it's it has to be it's numbered from one right and 11 so it says that it expected to"
9888720,9897600," semicolon in here we got an ast in php"
9897600,9900240," right"
9904880,9916560," okay"
9916560,9918880," isn't that cool"
9918880,9923440," isn't that cool i think it's pretty freaking cool mate"
9923440,9930000," look at that beautiful beautiful a s t isn't that cool"
9932480,9938640," beautiful a s t so what we're going to be doing in here i suppose"
9938640,9944480," uh we can compile it to something what we can what can we compile it to"
9944480,9954880," well ideally i would like to compile it to uh assembly right but we can compile it to whatever we can"
9954880,9957920," compile it to uh to python"
9957920,9970000," essentially what we can do uh we can check is stmt instance of uh phone call right so phone call statement"
9970000,9976960," this is a phone call statement and this is what we can do in here uh right within this thing uh we can"
9976960,9991520," say if stmt uh write is uh what is it going to be um name right is it name fun call uh class fun"
9991520,10005040," uh call yeah so it's a name and arguments uh if it is equal to print f right so if it is equal to print f we're going to uh do some uh stuff"
10005040,10010480," uh we're going to do some stuff uh we're going to do some stuff so print f"
10010480,10019600," we can essentially basically iterate through the orgs i have an idea what if i join uh together"
10019600,10027760," uh all of the orgs in here so stmt uh arg list all right so i'm going to just join them together"
10028480,10032960," and then we're going to do echo uh maybe a sprint f"
10032960,10041200," where i'm going to do print and this is s and this is a new line and this is what we're accepting"
10041200,10045200," here right so this is basically what we have uh-huh"
10045200,10054080," so and otherwise otherwise we probably should say something along the lines of uh we should complain that"
10054080,10058240," this is not a valid thing um but we need to know where exactly"
10058240,10066560," um that function call was defined right so we need to have a location"
10066560,10077360," so i have an idea so this is the name right and name could be effectively uh a token right so new fun call"
10079360,10081360," statement so here i'm actually"
10081360,10084560," look at that"
10084560,10094800," it is it okay so that means i have to do a value actually so this is a value and of course it has"
10094800,10103040," to be like that uh all right all right so that means here i can say echo as print f"
10104320,10110480," error unknown unknown unknown but of course i have to do something like this"
10110480,10121920," unknown function s right and uh of course we probably want to exit with 69"
10124080,10135360," and what we're gonna do here so uh stmt i can't see in this mist uh okay name lock display"
10135360,10143520," look at that statement name of display and uh function call is a statement name"
10144080,10146320," value so that's basically what we have"
10146320,10151920," is that cool i feel like i'm programming in c"
10151920,10160720," okay that's fine so we're gonna ignore returns we're gonna basically ignore any returns which which"
10160720,10169840," is fine uh okay so invalid argument passed in blah blah blah so you don't like what i provided in here"
10169840,10180240," why don't you like so what exactly is the problem uh undefined property arg oh okay so undefined property"
10180240,10190400," arg list um class fun call statement oh it's just called args it's not our it's it's args okay"
10193120,10202400," okay that is cool wait a second just wait a second don't say anything uh all right there we go"
10202400,10212560," so we wrote the compiler from c to python in php"
10214480,10220880," well we can we can save that stuff we can say okay hello uh dot py and then we can do python 3"
10220880,10226880," hello dot py there we go we compiled c to python using php"
10226880,10241200," there you go that's your april fools joke i spent three and half of an hour uh implementing"
10241200,10251680," a compiler for a small subset of c in php to python it took me three hundred lines of code"
10251680,10264000," uh just a second my my mouse was broken yeah so one handed lines of code per hour"
10266720,10277360," an average performance in enterprise is 100 lines of code per week how much we outperformed an average"
10277360,10278400," enterprise developer"
10278400,10283920," so yeah"
10283920,10293600," in fact this is actually kind of dumb this is like a very simple thing to do right so it's a very small subset"
10293600,10299680," of this thing and it's doable in three hours it's it's literally doable in three hours it's just like"
10299680,10306320," there's nothing in here i can actually swap them around right i can swap them around uh and uh of course"
10306320,10313920," if i try to recompile it uh and do it again as you can see it's a full bar hello world so we don't support"
10313920,10318960," a lot of things in here there is no conditions in here there's no it's not possible to even have"
10318960,10326640," uh this kind of stuff in here right so it literally won't compile but i mean we implemented a subset from"
10326640,10335360," scratch uh right so it i can see that uh just a second yeah it complains so it expected c parent but"
10335360,10340720," it actually like detects syntactical errors it detects the things that it doesn't support and it reports"
10340720,10349600," you that like what it expects and everything uh i think it's kind of cool uh all right so anyway"
10349600,10357040," so i'm gonna release it uh i'm gonna use emacs maybe not i'm gonna just stick to"
10357760,10372000," to the mem as the license and i did all of that using vim right uh okay mit license text"
10374560,10384880," and to to to to to to to to to to to to to to to to to to to to to to to to to to okay"
10384880,10392000," so who's gonna be the copyright holder it's gonna be me uh let's see"
10396560,10411200," alexei putepov k comrade it's me i created this shit thank you very much my comrade uh okay so what"
10411200,10424880," do we need in here uh okay so and let's go ahead and do uh readme dot md okay c compiler to uh in"
10426320,10431040," let's put this way c to python compiler in php"
10431040,10439440," okay so quick start"
10439440,10447280," console um php c php"
10447280,10454080," to uh hello pi hello pi and then python"
10456080,10461920," hello pi you know it would be nice if we like literally supported arguments i think this is"
10461920,10465600," something that we need to do in here right um"
10465600,10470080," um a very um"
10470080,10475200," this is an april"
10475200,10477920," fool's joke"
10480240,10493520," please please don't take it seriously it only supports a very small subset of c"
10493520,10498320," literally return and function"
10498320,10506080," the function call we even made printf and intrinsic"
10507920,10512480," please don't don't use it in production"
10512480,10523440," this is an april fool's joke please don't take it seriously it only supports a very small subset of c"
10523440,10530880," literally re return uh literally return and function call uh we even made printf and intrinsic please"
10530880,10538560," please don't don't use it in production okay so that's funny but the thing is uh we need to support command line arguments"
10538560,10541360," uh php command line"
10541360,10562640," parks. Okay, so how do we do that? Seriously? What the fuck is this shit? Please don't tell me it"
10562640,10577680," doesn't support that properly. Please don't tell me. So there is argc. When calling PHP script"
10577680,10587680," from command argc. Okay, so we do have argc. So let me try to do that. Can we do var dump"
10587680,10603000," argv exit zero? PHP, c, PHP. Okay, so we've got something. If I provide the hello to c,"
10603000,10614040," right, so we do have that. Cool. What about argc? Bro, bro, bro. It's two. What we can do in here"
10614040,10626180," now. All right. If argc is less than two, we're going to report an error. Echo error. No input"
10626180,10645640," is provided, right? New line. Exit 69. Otherwise, argv one. Cool. Easy peasy. A lemon ask wheezing."
10645640,10655540," No input is provided. Boom. Epic. Let me see. That's cool."
10655540,10658940," So let's do committee committee."
10658940,10670700," All right. So we have status init this entire shit. I'm going to add license, readme, cphp,"
10670700,10679620," hello.c. And I'm going to commit this entire stuff. Already a set ago. I could have spent"
10679620,10686320," like extra time maybe generating assembly. Right. But I'm already doing that for too long."
10686320,10692120," Right. And it's going to be that much different from just generating Python. It's just like I'll"
10692120,10698540," have to generate more text. But ultimately, this is going to be the same. Ultimately, this is"
10698540,10703260," going to be the same. So let's create a repo. Right. So I'm going to actually upload that"
10703260,10711300," so you can play it on your machine and maybe extend it if you want to. Right. So cphp."
10711300,10717480," C to Python compiler in PHP."
10720480,10724340," Oh boy. Oh boy. Oh boy. Oh boy. Where is my soy?"
10724340,10741640," Remote at origin. Boom. Posh origin master."
10744480,10756040," Okay. Chat. Look at that. It is live. It is live. Give it a star. Like, subscribe. There we go."
10756040,10763200," I've copy pasted it in the chat. And of course, for people who are watching it on YouTube, it's"
10763200,10772000," here. Yes. Chat. We did it. We f***ing did it."
10772000,10781920," All right. So by the way, uh, we got a sub, uh, star over. Thank you so much for, uh, 24 months of"
10781920,10785600," year one subscription. Thank you. Thank you. Thank you. Really appreciate that."
10785600,10789680," Really appreciate that. To fix Twitter algorithm."
10789680,10795200," Oh yeah. The Twitter algorithm got leaked recently. Right."
10795200,10801280," So I don't know. Maybe I should look into that, but I don't know."
10801280,10807840," Can you write something in Delphi? Man, I haven't programmed in Delphi for like 10 years already."
10809040,10813680," Does it even work on, on Linux? On Linux, you're supposed to use like free Pascal or something,"
10813680,10815280," Lazarus or whatever it is."
10815280,10823280," Uh, use it in my next tool chain by generating main and see that prints a source code that compiled"
10823280,10828320," with PHP running the generated Python to get the source code and go on from here. Good luck."
10828320,10838000," So if I can find you should look at the commits commits, you mean pull requests."
10838000,10842800," Do they even merge anything? Uh, okay. We can take a look at that. Sure."
10842800,10844400," I mean, why not?"
10844400,10861120," Uh, to, to, to, to, to, um, the algorithm in Scala. People already like started. Okay."
10862720,10869840," Let's take a look. Fix has GTA, took a false, uh, make it kawaii."
10869840,10876480," I'm pretty sure we have to look at the closed ones. I hope there is nothing offensive in here."
10876480,10883520," Yeah. It could be actually, you know what? Um, I'm probably not going to look into that. Yeah. Because"
10883520,10891760," I know that you can have something like not to us friendly in there. Uh, right. So, okay."
10891760,10896000," I'm going to take a look at what free food suggests. Right. So just a second."
10896000,10902320," Uh, right. But I'm not going to open everything because I know there is a way to just post something"
10902320,10913200," like literally porn on GitHub and nobody's going to give a shit. All right. So, this is my cat."
10914080,10917200," Okay. Thank you. Nice cat. This is a nice cat, actually."
10917200,10933280," Yeah. I like this cat. Thank you. Anyway, uh, I guess that's it for today. I hope you liked this small"
10933280,10942880," April Fool's joke. Right. So it just was literally one stream project. Um, have a good one. And I see you on"
10942880,10959120," the next Azuzin as such. As usual. As usual. Uh, so yeah. I love you all."

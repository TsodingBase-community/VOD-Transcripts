start,end,text
0,29980," Thank you."
30000,59980," Thank you."
60000,89980," Thank you."
90000,119980," Thank you."
120000,149980," Thank you."
150000,179980," Thank you."
180000,209980," Thank you."
210000,239980," Thank you."
240000,269980," Thank you."
270000,299980," Thank you."
300000,329980," Thank you."
330000,359980," Thank you."
360000,389980," Thank you."
390000,419980," Thank you."
420000,449980," Thank you."
450000,479980," Thank you."
480000,509980," Thank you."
510000,539980," Thank you."
540000,569980," Thank you."
570000,599980," Thank you."
600000,629980," Thank you."
629980,659960," Thank you."
659960,689940," Thank you."
689960,719940," Thank you."
719940,749920," Thank you."
749940,779920," Thank you."
779940,809920," Thank you."
809940,839920," Thank you."
839940,869920," Thank you."
869940,899920," Thank you."
899920,929900," Thank you."
929920,959900," Thank you."
959900,989880," Thank you."
989900,1019880," Thank you."
1019900,1049880," Thank you."
1049880,1079860," Thank you."
1079880,1109860," Thank you."
1109880,1139860," Thank you."
1139860,1169840," Thank you."
1169860,1199840," Thank you."
1199840,1229820," Thank you."
1229820,1259800," Thank you."
1259820,1264940," input the second amplifiers input leads to the third amplifiers input the third amplifiers input"
1264940,1269100," leads to the fourth amplified input the fourth amplifier input leads to the fifth amplified"
1269100,1275020," output there we go i see the first amplifier's input value is zero and the last amplifiers output"
1275020,1286780," leads to your uh ship's thruster um so this is how it looks like two thrusters cool the elves"
1286780,1294300," have sent you some amplifier control software acs your puzzle input a program that should run on your"
1294300,1300060," existing int code computer we already have an incode computer each amplifier will need to run"
1300060,1311260," a copy of the program oh that's cool oh all right that's actually super cool so you have a program"
1311260,1318620," you run it on each amplifier and the output like gets amplified through the software holy i like that"
1318620,1324380," when a copy of the program uh starts running on an amplifier it will first use the input instruction"
1324380,1330700," to ask the amplifier for its current phase setting when a copy of the program starts running on an"
1330700,1338540," amplifier it will first use an input instruction to ask the amplifier for its current phase setting an"
1338540,1344860," integer from zero to four each phase setting is used exactly once but the elves can't remember which"
1344860,1352700," amplifier needs which phase setting the program will then call another input instruction to get the"
1352700,1360620," amplifier's input signal compute the correct output signal and supply it back to the amplifier with an"
1360620,1365980," output instruction if the amplifier has not yet received an input signal it waits until one arrives"
1366620,1373420," your job is to find the largest output signal that can be sent to the thrusters by trying every possible"
1373420,1379980," combination of phase settings on the amplifiers make sure that memory is not uh shared or used between"
1379980,1390460," copies of the programs i mean of course uh so that's actually super cool so you have uh like different"
1391100,1397580," zero to four like phase settings and you have like five amplifiers right so and essentially you need to"
1397580,1405660," have uh five nested four loops um where you basically brute force different settings uh for the program"
1405660,1412620," and you find the the one that outputs the maximum thrust uh we have a raid from devs power juice i hope i"
1412620,1419100," pronounce your nickname correctly welcome raiders welcome welcome a the devs is it were you doing ada"
1419100,1427420," are you are you guys ada this interesting i programmed in ada only three times on this channel"
1427420,1433660," and that and that made a lot of noise hey nice haircut thank you i did it myself"
1436140,1443820," um all right that was hard actually well it was hard the first first time when i had a long hair"
1443820,1450380," uh but once the hair is short it's actually super easy uh ada devs always watching yeah that's the uh"
1450380,1456060," that's the most ada was ever you know it's actually used way more than that"
1456780,1462620," uh it's just like it's used in the places where we don't expect it to be used so yeah"
1462620,1468620," ah wait a second by nsa"
1468620,1477580," it's kind of strange there's a lot of russians working on either from like i actually googled about"
1477580,1484540," like ada core and like ada in general and there is like a pretty active russian ada community apparently"
1485260,1492060," uh yeah so it's really crazy um okay"
1492060,1499580," an intentional who said it's unintentional it's actually was intentional it's called tsmr cheers"
1499580,1506940," why does it always have to be russian i don't know man russians are kind of sus i'm gonna lie"
1506940,1515100," all right so um find the largest output signal i still don't understand how we have to configure the"
1515100,1520380," program it will first use the input instruction to ask the amplifier for its current phase setting"
1520380,1528780," each phase setting is used exactly once but the elves uh can't remember each phase setting okay that's"
1528780,1534380," really interesting the program will then call another input track to get the amplifier's input signal"
1534380,1540700," compute the correct input signal and supply it back to the amplifier with an output instruction okay so it"
1540700,1553500," it needs a setting and an input right so uh zero one two three okay so there's exactly five of them so instead of actually doing um"
1553500,1569580," how to say that the nested loop what we need to do here is uh permutations so we need to take these settings and we need to check all of the possible permutations luckily in husk it's super easy believe it or not we have a function called permutations"
1569580,1575820," is that cheating is that cheating is that cheating i think this is cheating but anyway"
1575820,1581020," what you can do here is that you can do this thing and uh it gives you all the possible permutations"
1581020,1588700," uh so when you can just test them you can just map it and uh just pick the one that gives you the the biggest value"
1590380,1597180," uh anyway so i think i understand uh for example suppose you want to try the face setting sequence"
1597180,1603420," three one two four zero which would mean setting amplifier a to one blah blah blah okay start a copy"
1603420,1609980," of the amplifier control software that will run on amplifier a uh at its first input instruction provided uh"
1609980,1616060," provide it the amplifier phase three okay i think i understood what needs to be done the final output signal"
1616060,1623740," from the amplifier e would be sent to the thrusters however however this face setting sequence may not"
1623740,1629100," have been the best one another sequence might have sent a high signal to the thrusters there are some"
1629100,1638220," example programs um max has a signal from phase setting sequence uh all right max signal okay so we have some"
1638220,1644380," test sample programs that we can actually use here uh what is the highest signal that can be sent to the"
1644380,1650460," thrusters all right it's pretty step forward it's pretty good damn straightforward i like that so and"
1650460,1657340," especially it's cool that we already have a machine uh like encode machine right so and it have tests and"
1657340,1663900," stuff like that so we can just use it i really like that um can your not husky language do that"
1666940,1671180," i don't know maybe either can what is better husky or ada"
1671180,1685500," choose wisely because behind husky we have nerdy computer scientists but behind ada we have chad military"
1685500,1695900," department choose wisely think about anyway uh so let me let me let me see so let's do import and it's good"
1696940,1706380," the country yeah the country yeah the country of chad yes yes that that one uh"
1706380,1710300," um"
1710300,1718540," so how are we gonna work with all of that we need to have a program we probably also need to have a machine"
1720060,1729660," uh so in machine in here if i remember correctly doesn't really have that much stuff so machine can"
1729660,1738140," be essentially an equivalent of uh of a program right an equivalent of a program so let's have a function"
1738140,1747900," solve which accept uh config right it accepts configuration of our nation then it accepts the copy of the machine and it"
1747900,1753020," produces the output right it produces the output and this is exactly what we need to implement"
1753020,1757580," and in our case configuration is going to be just a list of numbers right it's going to be a list of"
1757580,1765020," numbers uh and what is essentially does it just needs to chain these machines together right we need"
1765020,1771260," to be able to be able to chain those machines together somehow and uh you know what's good at chaining"
1771260,1773020," you know what's good at chain"
1773020,1782460," monads nobody knows what is a monet but i mean i just wanted to mention that word because it makes me look"
1782460,1790380," smart anyway so uh that one is really interesting so essentially i think we need to be able to"
1792540,1799340," uh this is needs this needs to be solved for a series of numbers right so this needs to be solved for the"
1799340,1804620," series of numbers unfortunately this alias doesn't really make it easy to understand i think i'm going"
1804620,1810540," to inline it so we need to solve for a series of numbers but also we need a function that does the same"
1810540,1819180," thing but for a single number right so this thing will accept a setting and also it needs to accept an input"
1819180,1826460," i think so this is a setting and an input uh there's a moment by the way"
1826460,1830620," um all right"
1830620,1839740," how are we gonna call it um so this is a single amplifier right so maybe we can call it run"
1840540,1849420," uh amp so that thing single thing runs amplifier and in here we have a setting uh setting and an input"
1849420,1853340," and also the machine right and also the machine"
1853340,1861420," uh cool cool cool cool cool cool and uh let me see how it is going to work"
1863500,1870140," uh so interestingly enough first we have to provide the setting right first we have to provide the"
1870140,1875740," setting and then we have to provide the input so that means we have to change the input of the machine"
1875740,1884460," so machine get input is going to consist of setting uh and input there we go so this is the input of the"
1884460,1892540," the machine and we are about to run that machine so to run that machine we have a special uh function"
1892540,1901180," called execute which takes a machine and uh basically steps the machine until we halt right until we halt"
1901180,1908220," so that's essentially what we need to do execute the machine so we executed the machine and uh"
1908220,1916460," uh in the output machine that halts uh we need to get its out uh its output so its output should be"
1916460,1923500," something like this get output right and the output is going to be just a list and i according to my"
1923500,1931900," calculations right and according to how i understand the output uh should be only the only value that it"
1931900,1938140," will print so essentially we can just do something like that where uh output and we can just return"
1938140,1947100," the output there we go uh so yeah we implemented like a single run amplifier pretty straightforward uh"
1947100,1953260," pretty straightforward and as far as you can tell it even compiles but not really because you also have"
1953260,1962940," to uh do something like uh search path yeah it has to be through i yeah there we go uh it has to be"
1962940,1968060," like that otherwise you won't be able to load into code yeah that's right pattern"
1968060,1975260," matching non-exhaustive yes this is intentional uh you know why uh because if you get a pattern"
1975260,1979900," that is not this that means your input is incorrect right that means your input is not"
1979900,1985340," is not correct and there's nothing we can do about that except um signal to the programmer"
1985340,1990300," um yeah so that's why uh the power matching is not exhaustive it's intentional"
1992780,1998540," for these kind of like small throwaway programs uh non-exhaustive uh the ability to do non-exhaustive"
1998540,2003580," pattern matching is actually very important for for the productivity uh it's kind of dangerous to"
2003580,2008860," have non-exhaustive pattern matching in like a production real software where you need to check"
2008860,2015580," everything but for these kind of things i think you need to be able to you know to actually not care about"
2015580,2025740," some things the intention of intent yes funny word haha okay so i think i need to uh grab some samples"
2025740,2033820," right so let's actually get some of the samples that we have here uh you see yes so here is the program"
2033820,2040780," so here is the program and uh we need to be able to load that program right and as far as i know you"
2040780,2047820," can do something like a machine from file yeah so you basically can load the machine from file which is"
2047820,2055100," super convenient so machine from file um sample hello belginal welcome to the stream how are you doing"
2057740,2067260," all right so this is what we do here and we need to run amplifier so according to this um the setting"
2067260,2072620," has to be for the first amplifier has to be four and since it's the first amplifier the input has to be"
2072620,2079180," zero so let's try to run this machine and look at the output and that didn't compile because the uh"
2079180,2085820," machine read from a file is located behind io so we have to penetrate it and the result of this entire"
2085820,2092140," thing was four and as you can see it uh non-exertive pattern match did not explode right it didn't"
2092140,2097580," explode that means we do everything correctly okay so we can do this kind of thing for a single thruster"
2097580,2103660," right we can do this kind of thing a thing uh thing for a single thruster the next thing we need to do we"
2103660,2108940," need to start chaining them together right we need to start chaining them together and this is where it"
2108940,2115740," becomes very very interesting so here is the settings several of them here is the several of settings"
2115740,2121660," so what is your terminal background color um x resources"
2121660,2125660," background this one"
2125660,2135580," yep so this is background color you can find uh the full configuration of my terminal here in the dot files"
2135580,2141740," in the dot x resources so dot x resources is uh available on github"
2141740,2147180," here in the dot fang chi hello hello function stop gaming 50 uh hello hello welcome welcome welcome welcome"
2147180,2158460," so oh that's fine i need to add an alice thank you uh it does uh dot file dot files hello hello welcome to the stream"
2158460,2166780," so do i have a rainbow rainbow mode yeah here are basically all the colors that i use for my terminal"
2168780,2177020," uh all right um i can't find the total config of your vim uh it's there it's also there"
2177020,2185260," so that's whole config i didn't commit all of the things but majority of the things should be there"
2185260,2189980," available uh rexium dot files"
2192860,2198140," uh dot vim rc there we go here this so it's a it's a config of my view it's actually pretty straightforward"
2198140,2206940," like i don't have been configured very heavily so it's just very simple stuff um okay"
2206940,2209340," cool"
2211900,2215100," so how can we chain all that this one is actually very interesting"
2215100,2226860," this one is actually very interesting i think we can turn amplifiers"
2226860,2234220," huh into a monitor unironically we can make an amplifier monet"
2236060,2243500," holy i just got an idea you know what is an amplifier you know what is an amplifier i'm gonna create a new"
2243500,2251260," type it's um uh yeah my mom was an amplifier um"
2251260,2262460," it's essentially a function that accepts um a value an integer and returns you an integer that's what it is"
2263420,2264860," uh it's an amplifier"
2264860,2274940," yeah oh holy shit yes run and run amp is essentially going to be just like this function which is super"
2274940,2282700," easy to uh chain together right but to create a new amplifier what you have to do you have to provide"
2282700,2290300," this setting right you have to provide the setting uh setting uh type setting uh integer and"
2290860,2299260," machine and that will give you an amplifier uh reader uh yeah i think it's kind of close to reader monet"
2299260,2306620," but uh we'll see how it goes we'll see how it goes um all right so and in here so here is the setting"
2306620,2314780," here is the machine and uh this entire thing is equal to uh input right and i essentially can just copy"
2314780,2323660," paste this entire stuff here and here is the is the amplifier right so here is the amplifier uh there's"
2323660,2332300," the compile it doesn't really compile because why uh input a variable not in the scope int input this is"
2332300,2343180," not true uh this is really really really not true because int is here and it is maybe it has something to do with"
2343180,2347660," yeah let's actually do it like that i think it's going to be a little bit easier to work with"
2347660,2356300," all right is it going to compile now then it does compile um i wonder if i can now i cannot do much uh"
2356300,2363260," much stuff but yeah so here's an amplifier right here's an amplifier uh so you provide the setting you"
2363260,2369340," provide the machine and furthermore uh i think we want to provide machine first because that will help us to"
2369340,2377180," take the settings take the settings take the settings and the machine and create a sequence of amplifiers"
2377180,2382700," a sequence of amplifiers um so how are we going to do that um"
2382700,2391820," map settings with new amplifier machine so here it is we have a sequence of amplifiers and i just realized that"
2391820,2397420," that the amplifier doesn't need to be a monad it could be just a monoid"
2397420,2412380," i sound like this like weird haskell fanboy but this shit makes me excited actually"
2413100,2419740," uh amplifier is a monoid it's well i mean it is technically a monoid seriously it is monoid trust"
2419740,2428060," me and it makes so much sense uh all right so here is this thing and it is a monoid so to prove that"
2428060,2436460," it is a monoid we need to first prove that it's a some um semi group right uh you are that weird haskell"
2436460,2445900," fanboy though no no i'm a mature software developer okay i'm not some sort of a haskell fanboy all right"
2445900,2456220," anyway so um instance uh semi group uh amp right so let's actually see what we need to implement here and we"
2456220,2463740," need to implement yeah so we need to implement an operation that will um essentially compose two"
2463740,2471020," amplifiers together you see what i mean it composes two amplifiers together uh so it's gonna be like"
2471020,2478140," that it's gonna be amp amp one uh then amp amp two like i decompose them simultaneously i could have just"
2478140,2482700," done something like that okay let's then let's do something like this and essentially what we need to do"
2482700,2487740," here uh we need to just compose their inner functions as far as i know a single function"
2487740,2495500," right a single function is also a monoid so i can just compose them yeah it's it's also monoid so that"
2495500,2505660," means i can do get uh run amp amp one run amp amp two and there we go we just proved that it's a semi group"
2505660,2516700," uh not really couldn't match uh huh is that because of something like this like why don't you wanna"
2516700,2524700," expect ah this is because we need to wrap it back into the amplifier i see so like this let it go"
2526220,2532380," we need to wrap it back into amplifier and uh it still didn't work because integer is not a"
2532380,2543260," i see well okay so we can just compose it then i was hoping that it will yeah okay so define so to get"
2543260,2549660," rid of this run amp we can actually do something like this we can basically destructure them here and"
2549660,2554620," just compose them and there we go this is a semi group this is how we compose the amplifiers the problem"
2554620,2565500," here is that no no everything's okay um solving this and go with concurrent routines made my day"
2565500,2572860," why do you need concurrency for this excuse me there is nothing concurrent here uh so the next amplifier"
2572860,2577980," cannot work without the previous finishing working like how how is that the concurrent problem uh all"
2577980,2583580," right so another thing we need to implement a monoid right so we need to prove that it's a monoid and the"
2583580,2591020," the only thing monoid provides is um empty and we're just going to wrap uh id into the amplifier so"
2591020,2596940," this is our amplifier here and all that compiles as you can see so when essentially uh what we need to do"
2596940,2604220," is we need to compose several amplifiers uh with the corresponding settings right with the corresponding"
2604220,2611100," settings and uh actually fold them i don't know where where can we get fold map where where can we get"
2611100,2616700," full map because you have to be concurrent when you code in go duh that's the point then ah okay i see"
2616700,2624380," so fold map uh where is the full map it's available in data foldable right it's going to import data foldable"
2624380,2633180," uh there we go and uh let me let me see let me see yeah full map did it did compile"
2634460,2641340," uh okay so yeah that gives me a single um a single amplifier i can even show what i mean right so"
2641340,2648060," imagine that you have this kind of settings and uh right then you need some sort of a machine right so"
2648060,2653580," you need to all load the machine from somewhere do we have empty machines do we have some sort of empty"
2653580,2659420," machines in int code that i could use oh yeah we do have empty machines perfect so if i do new amplifier"
2659420,2671020," right new amplifier on an empty machine uh like this what essentially i get is uh new amp is not really"
2671020,2678860," just a second chat just a second just haskell billing being annoying nothing special it's just haskell"
2678860,2685900," being annoying okay right so you get a list of amplifiers right because a single new amp a new amp on a new"
2685900,2691660," machine empty machine gives you a function from setting to amplifier so you can have a sequence of"
2691660,2699580," machines right but if you do fold map you automatically construct a single amplifier which is a composition"
2699580,2706380," of all of them right it's a composition of all of them all right so and after that you can try to run"
2706380,2711260," that amplifier but uh since we don't have a correct program it's not really going to work correctly but this"
2711260,2717260," is going to be just a function here right so i'm going to run this amplifier uh like this and i'm"
2717260,2723660," gonna i can provide an input and that will give me the final thing here anyway so um what we have to do"
2723660,2730380," here we need to run the amplifier uh providing the input as zero and there we go this entire thing compiles"
2730380,2737660," and we can try to test that we can try to test that so i can do machine from uh file and we're going to read"
2737660,2745580," read the machine from a sample txt sample here is the here is that um okay and also according to the"
2745580,2754380," to the description uh the settings for this machine is uh actually this so if i take the settings"
2754380,2761740," uh put them here right i'm putting them here and what i need to do i need to solve i need to solve this machine"
2762220,2769340," uh with this particular settings right so and if i run it it give me one two three which is not correct"
2769340,2775020," congratulations i don't know what the happened but yeah nice"
2775020,2783340," um maybe i actually provided the settings in not correct order or something like that but yeah"
2784460,2793340," it's kind of interesting uh so it feels like well yeah in the machine get input the first thing is"
2793340,2800780," going to be settings right so this is the first thing that machine will get and another one is going"
2800780,2811260," to be that and then we provide the output it feels like your code contains a mistake"
2811260,2816860," probably maybe that's exactly what's going on um"
2816860,2820300," huh"
2820300,2828300," how can we even troubleshoot that how can and it's really strange like the the output one two three and"
2828300,2834700," three is it really one two three maximum thruster from phase setting sequence four three two one oh"
2834700,2844140," okay so i have no idea why this would uh didn't why it wouldn't work but i i want to swap the uh the"
2844140,2849980," input maybe that will change something and well it changes something but it's not changing it to correct"
2849980,2857180," value anyway so um okay i wish i knew husko"
2857180,2864060," why would it be like that"
2864060,2877420," so it starts with a zero could be because of the order how we compose but i think composing doesn't really"
2877420,2879500," affect the order"
2879500,2889820," isn't the problem that you run the machine another time after you folded everything"
2889820,2895980," what run another time i run it only once"
2898380,2908220," what do you mean uh it's a haskell there is no shared state in here every time i do this it creates"
2908220,2913580," a copy of the machine it literally creates a copy of this machine so if that's what you mean if you"
2913580,2916940," think the problem is shared state it's not problem with the shared state there's no shared state in"
2916940,2923020," haskell by definition um but i'm not sure what you mean um so"
2923020,2927980," okay we can try to do step by step uh"
2927980,2939340," wait wait a second four three two one zero and it's one two it's kind of like reversed is that what this"
2940300,2947980," it really feels reversed what the fuck huh what is that zero in the code it's an input uh please read"
2947980,2951500," the description first um you can find the description here"
2954140,2958780," um so it is an input it has to be an input"
2958780,2963820," i don't think it's bad okay so what if i reverse this thing"
2963820,2970620," so if reverse will do something okay i hate it why is it why does it work then"
2973020,2977820," why on earth does it does it does it work is that because of this fold map"
2977820,2991980," we need to understand why it works uh if i reverse it but maybe we also need to do that"
2991980,2998700," with the rest of the uh samples let's actually uh do sample zero two it's probably something really dumb"
2999660,3010940," um you think amp two why oh i see why holy oh it's so dumb yes i was right it was something dumb because"
3010940,3015340," first get them haskell and it's right to left uh applications"
3015340,3023020," god damn haskell i see i see i see why i see exactly thank you thank you so much"
3023660,3030380," uh all right so now now if i try to do that i need to actually remove this entire thing and it didn't"
3030380,3039340," work why it didn't work okay now it works cool i it messes with my it messes with my brain really"
3039340,3047500," really hard uh sample zero two txt uh let's test the rest of the samples shall we let's test the rest of"
3047500,3054140," the samples uh so this one yeah it doesn't it doesn't matter actually even though i can just put it like"
3054140,3065260," that oh my god all right so uh sample two is not going to really produce a big over output unless we use"
3065260,3073020," zero to four so right we can do zero to four and that gives us exactly this thing and i'm gonna just check"
3073020,3080620," the last sample just in case because why not uh because why not let's just test it it's gonna be a"
3080620,3091660," three and the maximum uh thing here is gonna be one zero four uh one zero four uh three two three"
3091660,3100300," two and sixty five uh two one oh there we go cool so that's actually pretty cool but that's not enough by the way"
3100300,3107980," this is this is only um this is only to find one configuration right so here i think what we need"
3107980,3119980," to do is to um we need to rename this function it's not solve it's not solve uh it's actually run run"
3119980,3128540," amp chain there we go so to actually solve things right to actually solve things what we have to do here"
3128540,3133660," um anything to make it easier for us to solve we need to solve the arguments because we're going"
3133660,3138860," to parameterize this thing with the machine right uh i'm going to take all the possible settings here"
3138860,3143580," are the settings and i can take the permutations of the settings right i cannot take the permutations"
3143580,3153820," without actually importing the data list right data list uh data list okay zero four here it is and then we're"
3153820,3164380," going to do permutations here are the permutations and i can try to map this entire stuff with uh run amp"
3164380,3171900," chain uh and i need to provide some sort of a machine right and machine has to be from a settings"
3175980,3183260," from a settings and from a settings i have to read it from a file all right i need some sort of a like"
3183260,3188220," a function let's create a function solve it will accept the file path uh basically the one that we"
3188220,3194060," have to solve and it will return us int uh with a side effect of course so here's the file path"
3194940,3203820," here's the file path and uh what i do machine from file file path here is our machine cool"
3203820,3210940," uh so then we start with the settings right then we uh do all the permutations of the settings and"
3210940,3217660," then we map all of that with run amp chain uh of that specific machine there we go so that gives us the"
3217660,3226060," mappings of the uh of the configuration to what we get to the the final output of the thruster right"
3226060,3230540," the final output of the thruster do we have something like maximum uh function that i can just"
3230540,3238700," apply there i think i can so and after that i just need to find the maximum uh maximum and i just need to"
3238700,3246060," return that out of that there we go hopefully that will work and um yeah so now i should be able to just"
3246060,3256860," do solve uh sample zero one and that gives me four three two one uh one oh right exactly that uh so two"
3256860,3265340," is five four three two one and uh three is just that so we have a function that just solves a particular"
3265340,3271740," file so you can just solve a file um so we might as well call it part one i think i think it would"
3271740,3276300," better to call it part one because this is definitely a part one so what else do we need"
3276300,3281500," here we need an input right so for a first try get could remove we need an input so the input is"
3281500,3286060," actually pretty straightforward uh pretty small this is not what i'm saying i want to say pretty small"
3287580,3296780," uh all right so and after that i can do part one input txt chat are you ready are you ready for a"
3296780,3305500," first try gut cutter moment are you ready are you ready there we go it wasn't that impressive"
3305500,3307980," aren't you impressed with my coding skills"
3311420,3319020," god damn first try so and the code is actually pretty cool like we uh demonstrated that amplifier"
3319020,3324540," is a monoid and we just used standard fold map function that takes a bunch of monoids and just"
3324540,3331260," merges them together and yeah that's actually pretty concise and pretty cool um"
3334220,3342380," it worked people are throwing money at me i am saying thank you thank you so much for a two months"
3342380,3348780," of tier one subscription thank you thank you thank you and welcome to epic first try club that's right"
3351340,3360540," all right so uh zozin a pug uh how about a part a two let's take a look oh shit feedback loop holy"
3360540,3370060," shit uh all right very very interesting um okay it's no good in this configuration the amplifier can't"
3370060,3378380," generate a large enough output signal to produce the thrust you will need the elves quickly uh talk you"
3378380,3384540," through uh rewriting the amplifiers into a feedback loop uh most of the amplifiers are connected as"
3384540,3390540," they were before amplifier a's output is connected to amplifiers b blah blah blah blah blah blah however"
3390540,3398780," the output from the amplifier e is now connected into the amplifier a's output this creates the feedback"
3398780,3405260," loop the signal uh will be sent through the amplifiers many times in the feedback loop the amplifiers need"
3405260,3414300," totally different phase settings integers from five to nine again each uh again each used exactly once"
3414300,3420300," these settings will cause the amplifier software to repeatedly take input and produce output many times"
3420300,3429020," before halting oh provide each amplifier its phase settings as its first input instruction uh all further"
3429020,3441500," input outputs instructions uh are for the signals okay this one is actually going to be interesting"
3441500,3452620," hello welcome welcome welcome welcome welcome and old man welcome back hello hello so uh don't restart the"
3452620,3460300," the amplifier controller software on any amplifier during this process uh each one should continue receiving"
3460300,3466540," this uh and sending signals until it halts all signals sent or received in this process will be"
3466540,3475740," between pairs of amplifiers except the very first signal and the very last signal to start the process a zero"
3475740,3485420," signal is sent to amplifier a's input exactly once exactly once exactly once eventually the software on"
3485420,3492300," the amplifiers will halt after they have processed the final loop uh when this happens the last output"
3492300,3499500," signal from the amplifier e is sent to the thrusters your job is to find the largest output signal that can be"
3499500,3506140," sent to the thrusters using the new phase settings and the feedback loop arrangement all right i i hope it is"
3506140,3512060," brute forceable right i really do hope it is brute forceable uh otherwise it's going to be kind of"
3512060,3524620," uh two two all right so um max thruster signal from blah blah blah okay try every combinations of the new"
3524620,3529260," phase settings and amplifier feedback what is the highest signal that can be sent to the thrusters"
3529260,3534220," all right this one is a little bit more complicated uh what's cool about the previous part is that"
3534220,3538060," we didn't have to keep track of the state of the machine but now"
3538060,3545260," we kind of have to like we have to we have to keep track of the amplifier's state so that"
3545260,3548140," means the definition of this entire thing is going to be completely different"
3548140,3557180," right so yeah it's more we're going to be like a state t situation right it's more of a state t"
3558220,3571100," uh yeah uh we can try to um to create a new type uh but what's interesting is that like we"
3571100,3580060," uh we don't have to make state t parameterizable by the monet and the return type right so that means"
3580060,3585020," it doesn't really have to be a model it a moment it could be uh like a simpler type like semi group or"
3585020,3596780," monoid so let's uh introduce a type empty right uh and this type i think is going to run the following"
3596780,3606300," way you will have to provide an input right uh oh no not states well i mean it is what it is and it is and"
3606300,3615980," what it isn't uh so we accept the integer and that uh basically produces a function that accepts machine"
3615980,3623900," that accepts a particular state uh right it accepts a particular state and returns you a machine in a"
3623900,3630460," different state with a particular output right so something like that so this is going to be our state"
3630460,3642540," transformer or whatever right our state transformer furthermore um maybe yeah so this one is going to"
3642540,3647340," be kind of interesting so how are we going to be composing all that well composing all that is actually"
3647340,3655580," pretty straightforward the input of this entire thing uh you can treat the input like this you can swap these"
3655580,3660380," things around it doesn't really matter and then you can actually uncary it and that's pretty much what it"
3660380,3674780," is so this is basically yeah okay uh it's yeah sure um we might as well um we might as well actually"
3674780,3682700," make this uh like this uh modification here and just go through the compilation errors and uh maybe it's"
3682700,3693420," going to work for our uh first part part one that's what i wanted today to say part one okay so we'll"
3693420,3697980," probably have to go through a lot of places it's going to be 16 um"
3701980,3708060," okay so we'll need to construct an amplifier yeah so with the amplifier it's kind of"
3708060,3719740," different right so a new amplifier this thing stays the same except now"
3726860,3735260," the amplifier yeah the amplifier could be just a function it doesn't even need to be parameterized"
3735260,3742140," by anything because we are providing the parameters outside so it doesn't really matter that much"
3742140,3752060," imagine having stayed in your computer yeah i can imagine that it's unbelievable uh so it feels like"
3752060,3758300," like we don't really need this thing anymore right we don't really need it anymore except we also have"
3758300,3765900," to provide the setting oh yeah i see okay so see a new amplifier doesn't need a machine anymore because"
3765900,3773260," it needs to store its own setting yeah that makes sense so here we have an input and we also have a"
3773260,3778060," machine right so here is the machine and here is an input so we take the machine we provide the setting"
3778060,3783980," an input and there we go that's the that's the whole change uh that's actually super cool and here we don't"
3783980,3793740," have to provide anything anymore uh and if i try to recompile all of that uh it almost works it almost works"
3793740,3802620," except it doesn't uh what is 14 what is 14 oh yeah i don't have to provide the machine because machine is"
3802620,3809900," basically part of the of the state now uh you don't have to extract output now"
3809900,3815020," why"
3815020,3823500," i haven't finished yet uh i don't know what you're talking about i haven't discovered that problem uh"
3823500,3829260," yet the one that you're talking about i'm sorry uh all right so here we don't have to do head"
3829820,3837820," and um so here is going to be the output right but we also need to provide uh the final machine"
3837820,3843580," without the output okay uh so this is going to be a machine"
3843580,3853580," maybe oh that's what you're talking about you actually jumped to a head"
3855500,3860860," yeah okay it doesn't make any sense for me because i wasn't even in in that context what's the point"
3860860,3866460," of telling me that if i'm not in that context yet like it doesn't make any sense right so once i went"
3866460,3873340," into the context that you are in as well i can also see that so yeah anyway so here's the output uh we're"
3873340,3879580," executing this machine and that means that we probably can do the following thing we can simplify this thing"
3880300,3886140," down to that this is actually very interesting i do agree with you though this is actually very"
3886140,3892620," interesting uh so that means when we compose them together when we compose them together we'll have"
3892620,3899500," to manually extract this is actually super cool i really like that um all right over there right so um"
3899500,3907980," what do we have uh so it's gonna be uh now it's literally reader t sure why not"
3907980,3917900," uh okay cool so what we have to do here is just provide a function which is gonna be a machine"
3919900,3928700," uh machine and this one is an input right so this one is an input then we take amplifier one we run"
3928700,3939900," amplifier one on the machine with a specified input right with a specified input so what does it give us"
3939900,3946380," it gives us um a new machine so it gives us machine uh prime"
3946380,3955820," use this machine prime and find uh okay cool so machine prime and defined"
3955820,3966940," and now i need to run it for for the second time right so i'll have to do run amp amp two on the machine"
3969660,3977260," without the input or uh right without the input so it's going to be prime um and we'll have to get"
3977260,3979340," an input right get an input"
3979340,3991500," of the machine prime uh and actually take ahead of it but we also need to uh simultaneously simultaneously"
3991500,3997340," pop it out right we also need to simultaneously pop it out what i'm thinking is that maybe we want"
3997340,4004940," to have a function that will do that for us right so i want something uh let's call it cons input"
4004940,4013180," right so it accepts a machine and it will return you the um it has to be output right it's called cons"
4013180,4021980," output it takes a machine and returns a new version of the machine right so and in here we can have a machine"
4023020,4035180," with a particular input you get input uh right so input rest input okay and what we want to return we want to"
4035180,4048220," return input uh machine uh get input rest input right arrest input uh okay so it doesn't close properly"
4049020,4054540," what is going on parse error where is the parse error is this because i didn't put this thing here"
4054540,4060300," ah it drives me nuts what do you want from me um"
4060300,4066700," dude like did where did i make a syntactical mistake and this mother flipper is not going to tell me"
4066700,4071180," this is not going to tell me where did i make a mistake or something it just says parser"
4072700,4080220," okay whatever um so this is the basic concept uh so what i want to do here now is i want to on top"
4080220,4085260," of that like i run this entire thing and i want to cons output immediately i'm pretty sure chat already"
4085260,4090860," noticed where i made a mistake uh thank you so much i just want to finish the thought because uh i will"
4090860,4097020," lose the trail of thought it's actually very uh very dangerous for me to lose the trail of thought okay so we"
4097020,4105260," have that and then i can do run amp amp two machine prime input prime and that uh means i also want to"
4105260,4116620," do another cons output right cons output um okay so that will give me another state of the machine and"
4116620,4121820," another output but maybe we don't even need to do that if you think about that we can try to just return"
4121820,4136220," that because the output has to be just this right so and um which means so according to our holy"
4136220,4145820," shit if we swap these things around if we fucking swap these things around uh i can simply do this"
4145820,4153500," shit like that and there we go holy okay so it's kind of difficult to explain"
4153500,4158540," for those who doesn't know haskell what what all that means but essentially cons output automatically"
4158540,4164140," creates things that can be put into run amp you see by just doing that you automatically just"
4164140,4172300," decomposes and that's actually super cool holy shit uh all right so and that simplifies everything"
4172300,4177420," dramatic and of course we have to do some some other shit because we have to wrap it into a monad and"
4177420,4187340," whatnot um not the moment but you know what i mean so uh it has to be a machine input right machine input"
4187340,4194700," and since it could be just that it could be just that we can also replace that with x right and since"
4194700,4201500," it's it's just a wrapper function we can turn it into like a point free notation all right and just do amp"
4201500,4208940," like this cool so you run amp one then you const output and turn it into run amp two and there we go"
4208940,4215900," free food thank you so much for uh for five months of twitch crime solution thank you thank you thank you"
4215900,4221980," you didn't have to but thank you so much uh and welcome to our epic husky club isn't that amazing"
4221980,4229020," isn't that amazing it is goddamn amazing so maybe yeah you see how it's actually kind of interesting"
4229020,4234540," how coincidentally they just fit together these pieces just fit together uh we might as well actually"
4234540,4245740," do something like pop out i think it makes more sense you just output um yeah that's super cool uh"
4248140,4252620," it's kind of difficult to explain why i'm excited about all that but the reason why i'm excited is"
4252620,4261100," because i'm intellectual masturbator i like how so doing this is between good okay okay buddy okay"
4261100,4270540," uh so this is basically what i forgot here uh uh okay and everything actually here doesn't work because"
4270540,4276540," oh now it is not id anymore it is not id anymore and what they're complaining about is that"
4277180,4289100," uh couldn't match expected amp with the machine amp two all right i see so uh we have this thing right so"
4289100,4296140," run amp should give me this function"
4296140,4306780," which means i accept it here then i pop the output uh let's go let's go back to this kind of situation right"
4306780,4314460," so i think it's gonna be a little bit easier to debug if i put it like that all right hopefully i don't know"
4314460,4322940," uh i kind of want to use uh haskell mode because it makes me it makes it easier for me to jump around"
4322940,4331020," uh what is it uh where the parade we we should make a command for that because i have to explain that very"
4331020,4342860," very very often uh do we have uh add uh maybe add uh i don't remember um okay so couldn't find a module"
4342860,4353420," uh int code okay so that's not very particular convenient uh can we have ghc id uh gc id a known flag"
4354940,4362940," um okay cool uh couldn't match expected type amp all right so this is 22"
4362940,4372620," so we didn't fully apply everything right we didn't fully apply everything so how can we"
4372620,4380860," do all of that uh can i have some something like this so it expects that stuff all right so if i put"
4380860,4389260," something like this um so i i just made a lucky lucky somewhere and i'm not sure where exactly"
4389260,4395980," um pop out expect a machine and run amp"
4395980,4404460," gives you the machine ram amp gives you the machine i'm missing something dumb"
4405340,4413740," what kind of dumb i am missing you don't need to run amp since yes i don't thank you you see like"
4413740,4421100," every time i say that i'm missing some dumb it is in fact a very dumb because i i know i know that"
4421100,4426060," because i went through everything everything makes sense that means i made some dumb stupid mistakes"
4426060,4433900," i just missed something and it's always so goddamn annoying right uh so and especially if you tilt it"
4433900,4439660," right so when you tilt it you're become blind to these small little things and it just makes you"
4439660,4447820," even more tilted you know what i mean um so i got a damn classic uh okay so what do we have here this"
4447820,4453100," is not an id so empty amplifier is not going to be modifying anything so this one is going to be"
4453100,4460140," essentially a function that accepts a machine uh and pretty much ignores its output i think that's the"
4460140,4465020," that's the empty thing here uh so can we"
4465020,4474540," i i don't know so it could be a function oh you know what it is do you do you guys recognize this"
4474540,4477820," function do you guys recognize this function this is a fst"
4477820,4486940," yeah it's literally fst that's actually reaching it's kind of fun how you can like notice these patterns"
4486940,4493580," and identify them and realize oh it's actually yeah okay huh that's that's cool uh and then uh"
4493580,4499580," so another one is going to be 28 and when we're yeah so this one is going to be more interesting so you"
4499580,4505740," fold map so you create an amplifier you merge them together but to run this amp you have to provide not"
4505740,4512620," only zero but also the machine right you also have to provide the machine uh oh i'm sorry"
4512620,4522140," does it work so expected int but got the machine cool so so that gives us the machine uh what we need"
4522140,4529740," to do here we need to pop the output that gives us pair machine int and then i take smd out of that and there we go"
4529740,4543100," uh so uh so this is basically that so this is part one i think uh yeah so we effectively implemented part"
4543100,4550460," one but uh with keeping track of the state right with keeping track of the state so now"
4550460,4564460," our amplifiers are capable of keeping track of the state and this is very very important"
4567980,4571580," i think i think i did a fucking fucky bucky oh god damn it"
4571580,4578300," because the result is going to be not correct"
4579420,4583900," i can't fucking damn it oh i'm an idiot i'm an idiot"
4583900,4598780," all right because if i do part one on input now it's not correct it's not even part one"
4598780,4606540," i'm an idiot it threads the state of the machine through the amplifier this is not what it's supposed"
4606540,4617020," to do it threads them it threads them it threads them holy shit i'm gonna do it"
4617020,4625260," i'm such a pepega and i didn't even commit anything i didn't even commit anything so we probably lost all"
4625260,4634700," of that can we go back so this was this was such an exciting idea how far back can we go that's the"
4634700,4644060," question i think that's that's as far as we can go uh all right so let me let me commit all that because"
4644060,4656780," i don't want to lose anything so uh all right so there's so add add part one day seven solution i'm gonna"
4656780,4660780," push that right into the repo let's make a cup of tea chat let's make a cup of tea"
4662540,4670220," so uh i couldn't even push anything and this is because i have some chain yeah i think i have some"
4670220,4678300," changes uh because uh i was adding links to the screencasts yeah i was adding links to the screencasts"
4678300,4685340," let me rebase everything onto the origin master and uh let me push that back linear types would have"
4685340,4692060," helped finding this error at prototyping stage by the way probably um oh yeah they would actually"
4692060,4697900," right yeah because the linear type is like a uniqueness you can consume it once but yeah"
4697900,4706700," uh all right so that was like a logical mistake straight up very interesting let me uh"
4707820,4718220," first start all of that where's my emacs"
4718220,4722940," did i not"
4732860,4744220," oh okay i committed the folder yeah i know changes yes yes it almost gave me a heart attack"
4744220,4752380," yeah because i checked out to a different branch right which that didn't have that folder and i checked"
4752380,4758700," out back which effectively deleted the folder and created the folder again so the i note of the folder was"
4758700,4772060," the folder is different oh all right so everything's okay uh everything's okay let's let's make a cup of tea"
4774620,4775260," um"
4775260,4787260," so how we're gonna do all of that so the amplifier just does that ext for a classic"
4787260,4798540," um we still need amplifier amplify t we still need to amplify the one with the transformer and stuff is"
4798540,4803100," just we have to compose them differently right we have to compose them differently"
4804620,4809900," um"
4809900,4811260," um"
4811260,4820780," what if us will fix that issue huh but for the empty you have to can consume and carry some kind of a"
4820780,4823020," machine cube yeah that's true"
4825820,4828460," uh that is true uh that is a true in the fact"
4828460,4833580," we're about to find out how to do that"
4833580,4843900," so essentially this state has to be parameterizable right the state has to be parameterizable"
4845100,4851820," and the state could be actually yeah let me let me try to make it deployment so it's going to be empty"
4851820,4857820," right and amp essentially is going to be around empty of course i put a t here"
4857820,4866300," so and in here the input is going to be not just a machine but the list of the machines right and input"
4867100,4874060," and then we're going to get the list of the other machines there we go so this is how we're going to do all that and"
4874060,4875660," interestingly enough"
4875660,4884140," yeah and as you compose this amplifier chains you actually compose this input and output lists as well"
4884860,4888060," right okay so probably makes sense"
4888060,4894940," it's not a bad idea to be fair so we can try to explore that it's a bit complicated type but maybe"
4894940,4899740," it's going to be worth it uh so the constructing you like think"
4899740,4910540," so the for each amplifier you can have yeah it's pretty cool um all right so i'm going to go to the"
4910540,4916300," the kitchen and turn on the kettle uh to boil up some water and then i'm going to be back uh don't"
4916300,4931260," go anywhere or you know what's going to happen you all know what's going to happen"
4931340,4941100," so"
4941100,4943100," so"
4961340,4978460," why are most quarters bald well it's a pretty toxic job not gonna lie okay uh so"
4978460,4989260," how can we construct a such simple a simple amplifier chain new empty so uh what we need here essentially"
4989260,4995580," is only a setting right a setting and it will give us amplifier t"
4995580,5001420," so interestingly enough interestingly enough"
5001420,5008700," that applies the settings for all of them"
5008700,5017260," now i think it's a it's a flawed approach it's a very flawed approach"
5017820,5025900," essentially what we need to do here i think is just have something like this and then work with a list"
5025900,5032940," of amplifiers basically uh have a function that accepts list of amplifiers some sort of an input"
5032940,5033740," and gives us"
5033740,5036940," um"
5043500,5049900," well it also have to and gives us the function that accepts a list of the machines"
5049900,5060220," and anyway i haven't decided how to do that but uh we'll definitely need to apply all of that"
5060220,5071260," so yeah it will be way easier in a imperative stateful language but again no matter how much stateful code this"
5071260,5075340," thing we will require we will require we have to do that in haskell so that's the challenge right"
5075340,5082860," that's essentially the challenge uh where many interesting ways to solve this part yeah"
5082860,5085820," so there are many interesting ways to solve them"
5087660,5101020," um so there's the amp chain so and it could be could be still something like this still something like this probably"
5109020,5110780," there's only for one"
5110780,5124220," okay let's try to uh prove this thing to be a semicolon and uh monoid and we'll see how it goes"
5124220,5128620," uh so instance uh semi uh not semicolon"
5128620,5135100," uh this new modes are great thank you thank you so much uh all right"
5135100,5145580," so uh we're gonna have something like this empty empty one uh and empty empty two right"
5145580,5154940," so we're gonna have something like this and uh in here we're gonna have uh some other stuff so we have"
5154940,5162060," machines in here machines um i'm gonna have machines"
5162060,5172700," and we're also gonna have an input so here it is machines and the input"
5175900,5180700," it could be also the following thing because since machines consume all of that right"
5180700,5183820," uh so we'll have to return the new input here as well"
5183820,5190620," um all right so uh what essentially i'm essentially i'm doing is"
5196780,5200940," but when you're you don't need to compose them that's the that's the thing"
5200940,5207900," you need to compose them"
5223260,5229820," okay let's go back so i think i'm gonna start with this thing yet again"
5229820,5236220," i'm not sure if it needs needs to be a monoid or semi group but uh we definitely need pop output"
5236220,5242300," which will take uh empty uh and return you the machine"
5242300,5247820," int so then later you can um do something about that right"
5248940,5254140," uh but the pop out output i think it was working specifically with the machine right so it's going"
5254140,5264060," to be something like that so in a machine uh we do machine get output so it's going to be"
5264060,5272060," output rest output output and then it's going to be equal to a"
5273260,5283580," pair of machine uh without that output right rest output and the output uh here so we have pop output"
5283580,5293820," right pop out cool so the next thing we need to do uh we need to"
5297420,5303100," i have some sort of a function that performs a single round of the amplifiers like single cycle"
5303100,5308460," of the amplifier so this function will accept the uh list of the amplifiers to which it needs to perform"
5308460,5314620," this side of the cycle it will accept the input of the for these amplifiers and will return you the new"
5314620,5324060," uh state of the amplifiers and the uh the outputs of these amplifiers right uh it's going to be like"
5324060,5329180," integer something like this and since it's an output it has to be like that so it kind of"
5329180,5337820," well yeah it kind of starts to have this uh kind of signature but maybe we can abstract"
5337820,5347180," that away a little bit later we'll see we'll see um okay single cycle right so this is a single cycle"
5352540,5355100," uh"
5355100,5364460," the amplifier doesn't store it so stay that's the problem okay my tea is ready by the way my tea is"
5364460,5379980," ready by the way so what happened to the voice counter and the octopus it's pointless that is not needed"
5382540,5396380," if you come here for the octopus and void of counter i have really bad news for you you've come to the wrong channel"
5396380,5412940," you may want to actually try to find other channels to watch so it's kind of this channel is kind of not about that if you haven't noticed right so it's kind of about a different thing um anyway"
5412940,5425500," this channel is kind of this channel is kind of not about that if you haven't noticed right so it's kind of about a different thing um anyway"
5425500,5442060," so and in here i accept the machine right accept the machine and accept the input of the machine and this is what i have here"
5442060,5448860," this is a single cycle um but again it actually means that i don't need this amp amp t here"
5450460,5459980," all right so maybe yeah it's just a statement yeah it's essentially statement but i'm just not"
5459980,5466060," not sure how how i'm going to implement all that all right so uh i'm not going to introduce any types"
5466060,5471900," because i think i'm trying to do top down development when i don't know what i'm doing right so top down"
5471900,5478140," development is needed when you do know what you're doing so let's not try to do that so here is machines"
5478140,5490140," um there's machines and um put output rest output put rest output on the line 12"
5494540,5501660," i'm i'm sorry okay uh so what do i do here so we have machines and um"
5501660,5519660," so i'm starting with"
5524540,5536700," okay"
5551020,5563180," okay so for the the problem here is that"
5563180,5573820," i can then turn them into functions yeah i need i need to turn them into these functions"
5575900,5579420," uh essentially state transformers that um"
5579420,5588140," accept a machine input"
5588140,5591660," machine and"
5591660,5594620," machine output"
5594620,5599180," that gives me and then i compose them"
5604460,5613180," no no no no no no no no"
5613180,5614700," it's really interesting"
5614700,5621500," so let me actually draw i think my my brain cannot understand what exactly is needed here but"
5621500,5628300," uh if i draw i think we can come up with something interesting it it feels like i don't have enough"
5628300,5632060," primitives like haskell primitives like haskell primitives to express what i'm trying to do"
5632060,5647020," um so uh we have a bunch of machines right m1 m2 m3 and so on and so forth um right so and"
5651340,5655260," well they also they also they also they also have to be parameterized with something so that's"
5655260,5661900," that's even more annoying uh than i would expect"
5661900,5667100," um so we'll have to like prime them to some particular extent"
5668780,5686300," so we'll have to have a mechanism that waits for the inputs and outputs and stuff like that until they"
5686300,5693180," are available um so we need a different execution method so we have an execution method that executes"
5693180,5699500," machine until it's uh fully complete"
5699500,5705980," until it's halted yeah this is what i wanted to say until it's halted"
5705980,5711500," right but we need another one we need to uh have a function that executes machine until"
5711500,5719580," it has an output right so basically it uh fails that and maybe that may help us to do something"
5720460,5726060," uh that may help us to do something so uh let me try to do that"
5726060,5738780," so um does it even compile here uh i need to do oh my god i lost everything already i lost everything"
5738780,5743900," already and this is a very interesting problem specifically for haskell right specifically for"
5743900,5752460," haskell i think um okay so the function is going to take a machine all right and we might as well make"
5752460,5759820," this function return output as well uh wait for output this is literally what is going to be called"
5759820,5767420," so and if you take a look at the execution right with the execute function right so it iterates through the"
5767420,5776060," machine until it's uh not halted right so we can do this like similar thing uh iterate"
5776060,5785660," iterate prime by the days prime here i don't know step and drop while we can actually have two conditions"
5785660,5791740," here i think it's kind of important to have two conditions so here is a machine uh and it's not"
5793260,5796700," halted right and um"
5796700,5811340," output is empty right so we keep doing that until that right uh so drop while and uh there we go um"
5815580,5820300," so that's pretty interesting so that's pretty interesting so then we take the head right so"
5820300,5827580," here is our uh machine and to get this particular signature to get this particular signature we need"
5827580,5837500," to pop the output uh we need to pop the output there we go so now while we're having a machine uh"
5838380,5846140," if we have machine we can make it wait until it has an output or until it's halted so which is"
5846140,5851580," very interesting okay so if it's halted how do we indicate that it's halted"
5851580,5862780," uh so is it okay to indicate it as maybe like this in that case we kind of lose the um"
5864860,5870940," we kind of lose the output i think it has to be something like this so this will sort of indicate"
5870940,5880620," that the machine halted so there was no output right so uh there was no output so by doing that"
5880620,5889020," we're popping output right pop output it gives us that and we can even do it like that so essentially if you"
5889660,5897580," have that it will work for you if you do something like that uh right it's just going to give you"
5897580,5905900," just and this one is going to be just machine nothing so and that will just work out automatically"
5905900,5912780," you wait for output and you also pop the output and maybe int is an indication that uh you know whether"
5912780,5922700," you have an output or the machine has halted okay that is a very very interesting um that is very very"
5922700,5932380," interesting so after that you have a bunch of machines so essentially what you need to do uh you need to"
5933100,5944860," wait for the uh for the output of the machine uh you're waiting for the output of the machine"
5944860,5951980," you also need a way to provide the input do we have a function that provides the input so something about"
5951980,5958220," the input you can set the input you can set the output but these are not very particularly useful"
5958220,5965900," functions i think we need some sort of functions that uh push inputs okay so we're starting to have"
5965900,5974940," like these symmetrical functions pop output and push input right so uh that means i can just do something"
5974940,5982460," like int machine right and that's very interesting so here's the input and of course it returns a new"
5982460,5991100," machine where you you have this input and stuff like that of course um so um yes yes yes it's gonna be"
5991100,6003020," something like machine uh machine get input so it has some sort of an input uh rest input right um"
6003020,6010140," and you have to actually push it at the end so which makes it kind of not particularly fast"
6010940,6016540," so but maybe it's okay for now maybe it's okay for now we'll see we'll see it's gonna be machine"
6016540,6024140," get input uh rest input and it has to be like that like there's no other way to do it otherwise like"
6024140,6033980," it's just it has to be like that at least for now um okay so now uh once we have like a first machine um"
6035580,6043740," once we have a first machine we can push an input there and just wait until an output once we have"
6043740,6051020," the output we chain it into the next one and into the next one and into the next one okay so i want to"
6051020,6056300," think how we can uh actually combine two machines right how can we combine two machines"
6057740,6065900," it will be lazy anyway so it doesn't matter uh well i mean it will just create a thunk right so it's"
6065900,6073100," just will consume more memory i suppose because it literally will create like in memory ast node"
6073100,6079900," where on the left part you have this and on the right part you have that and the more you push the"
6079900,6092700," deeper ast node will become in a thunk so yeah i guess i don't know we'll see so i'm planning to uh"
6092700,6102460," i'm planning to rewrite this entire stuff with uh strict vectors anyway in the future so uh to you know"
6104220,6111500," to speed things up uh hopefully i don't know let's see so i want to see how we can combine"
6111500,6118940," the input for two machines right so imagine that we have an input uh first machine second machine"
6118940,6126460," maybe we can even do something like that right first machine second machine uh and that should give us"
6126460,6132700," that should give us a new pair of the machine a new pair of the machine so this is not going to be the"
6132700,6138140," final thing i just want to see how you can do that uh i just want to see how you can do that maybe you"
6138140,6146060," can and it doesn't even compile here anyway so uh 18 so something went wrong here so iterate through"
6146060,6154860," the steps while uh machine is not halted and the output is a machine is empty um so i drop it while"
6154860,6160140," then i take a head and then i pop the output and the output should be working correctly but it still"
6160140,6170540," complains about something at this particular line so machine uh-huh okay it's it expects a machine"
6170540,6176380," here and i suppose i forgot to provide the machine here so will will you be happy now please okay it is"
6176380,6183580," happy now i'm and that makes me happy as well okay so we have a machine one and machine two all right so"
6183580,6191260," what i'm doing here i'm pushing an input into the machine m1 right so that's what i'm doing here"
6191260,6200300," essentially um so that creates a very interesting thing so that gives me that and i want to pop the"
6200300,6207900," output uh pop the output of that machine right so that gives me a new machine uh and i'm popping the output and"
6207900,6224620," uh here i have um m1 prime uh m1 prime with a particular output right with a particular output so it's going to be uh output"
6227180,6244780," okay so uh this is what we have here uh and m1 prime just output is going to be push input"
6244780,6255580," so uh this is what we have here uh and m1 prime just output is going to be push input"
6255580,6268940," push input uh output let's go output one output two uh output one into this and pop the output out of here"
6268940,6271180," all right"
6271180,6278220," okay cool so that's actually very interesting"
6280460,6286140," uh right uh right uh right and that gives me the next state of m1 and m2 and stuff like that"
6286140,6294460," so and at the end of course um"
6294460,6297820," hmm that's interesting"
6310060,6314940," so of course the the result is going to be output two but then we can just return m1 and 2 and we"
6314940,6320220," can forget this one it doesn't really matter so we can just do something like this so if you have"
6320220,6324780," input and two machines this is how you will connect them together so uh this is what i'm trying to"
6324780,6333900," explore this is how you connect them together uh you push input in m1 then you um no then you wait for"
6333900,6340620," the output i quite forgot about that like wait for the output uh and you don't need to pop it out yeah wait"
6340620,6345340," for the output cool um wait for the output"
6345340,6349660," so that's essentially what we have here"
6349660,6353740," push that wait for the output"
6357980,6367260," i think to maintain the list of the states of the machine we have to utilize the laziness the way i"
6367260,6373340," explained it in my latest youtube video i think that's what we'll have to do so essentially"
6373340,6381420," um yeah we'll have to do this trick of actually looking like yeah"
6384060,6387420," i i think we'll have to do that i couldn't see any other way to do that"
6387420,6398060," all right so let me let me see"
6400860,6402860," uh here is the main input"
6402860,6410780," here is the main input on main channel excuse me"
6410780,6416940," yeah yeah on main channel yeah my brain will already switch the context i'm sorry"
6416940,6421980," my brain already switched the switch the context uh so yeah yeah yeah"
6421980,6429020," so we start with the first machine i should have not actually deleted that because i'm gonna use"
6429020,6437580," it as a reference anyway i'm gonna use it as a reference anyway so uh i'm pushing the input so"
6437580,6441660," this one is going to be machines and this is going to be the first machine what's called m and ms"
6441660,6451900," right so i push an input into the first machine right and i'm organizing this as a list right and i'm"
6451900,6465740," actually i'm gonna do it like that um i'm gonna do it like that uh and so we're gonna call it ms prime"
6465740,6476140," i'm gonna do it ms prime so and what's funny is that we're gonna actually store all of this thing so i'm"
6476140,6483180," pushing this input and i'm waiting for the output like this is what i'm doing within that list"
6483180,6491660," within that list"
6491660,6503820," next thing i do i'm self-referring to that list back i'm so you see this is what i'm doing here as i did in"
6503820,6511420," the video so this is the first machine and i'm self referring to this thing back um but i need to"
6511420,6522380," actually zip this entire thing with ms okay this is the first ms and this is the next one right so this"
6522380,6528380," is the previous state of the machines this is the next state of the machine uh and we're gonna zip it with"
6528380,6537020," and here we have a very interesting situation we have um the first state of the machine uh it's kind of"
6537020,6539340," like taking let's call it m"
6539340,6543980," zero this one has to be called in zero so i can do it like that"
6543980,6552460," uh here we have the current state and here we should have the previous state but we shouldn't actually touch that one"
6553660,6563180," i think"
6563180,6568380," so this one starts from the beginning"
6568380,6579100," this starts from the beginning and that one should start from the tail of a mess so here we have a"
6580620,6587260," next state of the previous machine next state of the previous machine"
6587260,6593820," and the second argument is going to be the current state of the current machine"
6593820,6603740," there we go and what's funny is that here uh we're also going to have an input prime here to feed it into"
6603740,6611260," there um so i don't really have that much space on the screen uh but i'm trying my best to feed"
6611260,6615340," everything okay so what that means what that means"
6615340,6626460," we have to take that input and feed it into here push input input prime into m"
6628060,6635260," all right we don't even care about this state actually we don't really care we can basically"
6635260,6642860," throw it away we push that input into that machine right and then we're waiting for the input"
6642860,6650700," waiting for the output and what's funny is that this one can be nothing actually it has to be just"
6654380,6663740," and uh i need int undefined so this is how it's gonna be okay um"
6663740,6675100," yeah that's that's basically what it is so we i don't know uh this is only a single iteration though"
6675100,6683420," this is only a single iteration what i'm thinking is that um"
6683420,6687660," we need to be"
6687660,6697740," agnostic of this missing input we need to be very agnostic of this missing input essentially"
6698780,6705660," uh if input is not available here we shouldn't put anything there right we shouldn't we shouldn't"
6705660,6711500," try to put anything there um and what would be the best way to do that"
6711500,6719180," uh we can well yeah anyway"
6723740,6729420," so we need to check if this entire thing compiles it is compiled by the way this entire thing compiles"
6729420,6737100," can we acknowledge that like i did a pretty crazy backflip right and this entire shot compiles so um"
6737100,6749020," this is quite advanced actually people think that monads or lenses is the advanced haskell right this is not"
6749020,6754700," advanced hack this is very advanced task because i'm exploiting the laziness and it's really hard to do"
6754700,6761100," holy uh because you basically have to change the way you think about the programs right when you"
6761100,6766780," program in c or javascript or whatever imperative language you know that everything is executed top down"
6766780,6772780," like here you can completely have to switch that paradigm right so you have to think in a more abstract"
6772780,6780380," way like thinking about thongs and how thongs can be resolved and like that it's like holy must mean it"
6780380,6785500," works maybe it may actually went in an infinite loop it's kind of dangerous to work with laziness like"
6785500,6793740," that because it can become infinite uh it can just you know generate in like infinite instruction definitely"
6796620,6806540," um all right so nice today by the way um hello set 69 69 welcome to the stream so basically if input is"
6806540,6812940," uh empty i just don't want to perform this push i can probably try to parameterize push input i can just"
6812940,6822460," try to parameterize push input um but we don't really use it in that many places um so uh let me try let me"
6822460,6830140," actually try to do it like maybe right in case of the juice input it's going to be that in case of this"
6830140,6837020," thing being nothing uh it's going to act like an id so it will just return you a machine so and then here"
6837020,6844540," i can just do juiced input and here i can just use the input and it will not push anything uh and what's"
6844540,6849900," quite important is that wait for output also checks for halt so if the machine is halted it's also going to"
6849900,6856380," halt so uh trying to fit something into halted machines is not going to work right i mean and it"
6856380,6863100," will work on the level of a program but uh the the single cycle will just stop right so this is the single"
6863100,6872540," cycle okay so what we have here essentially is not this thing we have a list of pairs machine output"
6872540,6879340," machine output machine output i can even show you so uh if i try to return that it will be type mismatch"
6879340,6886940," and the type mismatch between uh this pair and the list of pairs pair and the list of pairs what's"
6886940,6895740," interesting is that this list of pairs actually returns maybe here so um yeah this one is actually"
6895740,6904540," quite interesting this one is actually quite interesting um so we have to be a little bit careful here so we might"
6904540,6913580," as well try to return maybe int so that could be like a single uh should uh return maybe uh two yeah"
6913580,6921420," yeah i'm also thinking about that um there is a pattern here somewhere uh so you know if it is yeah"
6921420,6926940," yeah so there is a pattern here somewhere because you can see machine may be int and list of machines may be"
6926940,6933580," int but i can't quite like point out that part it's probably some sort of like a statement that it is"
6933580,6941100," uh but how like this is really strange like that's why i'm not trying to abstract it away because like i"
6941100,6948700," don't see what fits here perfectly um anyway so what i need to do here is i need to map this entire thing"
6948700,6957820," first of all uh with uh fst right uh to grab this machine right and in that case this thing will compile"
6957820,6966620," right uh but what we have to have here we have to grab the last element of fs uh right uh and"
6967580,6971660," something like this i think this is could be uh could be right way to do that so it's gonna be last yeah"
6971660,6979340," so if i try to do this it does compile okay so you have a sequence of machines uh simonette in this haskell"
6985180,6995180," we have this uh single cycle right and we can grab a bunch of machines but each machine has to be primed"
6995180,7001900," with a setting so the way we're gonna do that we're gonna grab the instance of a machine then in then"
7001900,7009260," clone that machine to uh five layer to five machines for each amplifier and then to each machine we're gonna"
7009260,7015660," push an input of with settings so meaning to prime it right and once the machine is primed we're gonna"
7015660,7022540," push it into single cycle and single cycle will wait for the output right uh and also provide the"
7022540,7029980," input so we don't need like additional abstractions here um yeah so machines has to have to be primed"
7029980,7038940," first um we can even do something like this prime machines you provide uh settings list of settings"
7040220,7047020," uh and list of machines and you get a list of machines and what's funny is that stop saying funny it's not"
7047020,7059420," funny uh i don't know why i said machines you can zip with them like zip with uh push uh and push input"
7059420,7065820," actually accepts maybe i mean that's that's okay okay we can do that setting"
7068220,7083180," machine uh push input just setting uh just setting look this maybe int is really out of place"
7083180,7089580," it's really out of place i think it shouldn't be there i think this kind of thing should be"
7089580,7094780," resolved in here it should be resolved in here let me actually quickly fix that because it's really out of"
7094780,7102380," place it's like it doesn't have to be machine so just repeat a single machine uh yeah probably"
7102380,7110460," but it could be like outside of the function itself i don't know but yeah i see what you mean um"
7111020,7118460," all right so it creates a problem uh so let's just remove this thing"
7118460,7121340," okay"
7121340,7133020," uh so uh yeah it still complains about that maybe int in okay so when this input is empty"
7135100,7139660," uh i need to do this thing uh i need to do this thing with maybe i keep forgetting how to do that"
7139660,7146860," maybe so it accepts the default value function from a to b and it just maps it or something like that"
7146860,7153980," oh boy oh boy all right so uh maybe default value is going to be"
7156700,7166860," default value is going to be the machine itself the function is going to be push input right push input"
7166860,7176140," what what uh push input does take it takes an integer um it takes integer and what we're trying to push there"
7178140,7183180," it has the different order it has the different order it has the different order i have to flip it i suppose flip"
7183180,7188140," push input uh input prime"
7188140,7196620," i'm not a big fan of these kind of things because they're really unreadable um right so here's an input"
7196620,7201580," the default value is going to be n and if it has something we're pushing input into it we're making a new"
7201580,7208780," new machine um yeah i'm not a big fan of this kind of things but okay uh does it compile it doesn't even compile"
7208780,7211660," okay uh let me see one more time"
7211660,7219820," uh oh i fucked up big time uh 25"
7219820,7230060," yeah you see what i mean like it's just not very convenient um so case uh lambda cases uh haskell lambda cases"
7231180,7236940," um maybe i can do that without lambda because i still have to wait for this kind of stuff"
7236940,7244220," maybe lambda cases uh it's not convenient it's not convenient it just drives me nuts"
7244220,7247580," did they close the i think i close this to lambda cases"
7247580,7255820," fucking working yeah it's not really fucking working it's just like i know exactly what"
7255820,7259820," for fuck's sake i'm gonna get uh lambda cases um"
7259820,7268300," uh it's just like i know exactly what i want it's like uh to make it how i want it i have to fight"
7268300,7274780," with language instead instead of like doing what i want i'm fighting with the language uh and i don't"
7274780,7279580," know whose fault is that is that a fault of the language or is that my fault for not knowing language"
7279580,7287420," really well it's kind of difficult to tell um so in here i want to have like a case uh like this right"
7287420,7295660," so here's the first case and if i have just input uh i can uh push that input into the machine"
7295660,7301260," and wait for the input otherwise if i have nothing um"
7301260,7309580," uh if i have nothing and machine i just wait for the machine you see what i mean uh this is what i"
7309580,7316540," want this is my intent here uh this is literally my intent and i this is the only way i can express"
7316540,7322220," that intent so if you have an input push that you don't have an input don't push that simple as that"
7322220,7325980," um so yeah let me say"
7325980,7341260," yeah so much better like and the the version with uh with maybe wasn't even compiling anyway so i'm"
7341260,7350780," not sure if this one will compile ah we're about to find out okay and it it fails with with parsing so"
7350780,7352140," this doesn't work"
7352140,7359100," i cannot parse anything it's not possible"
7359100,7369580," oh yeah i see uh thank you okay pattern syntax and expression"
7371260,7385660," no no i don't think so no i don't think so all right so we literally have to suffer yay"
7385660,7391740," i like suffering chat suffering is my favorite"
7397660,7405260," suffering is my favorite okay just input prime prime input prime prime and of course"
7405260,7417180," nothing is gonna be just wait for the uh input of this thing and it doesn't it is not even a"
7417180,7422540," correct syntax because it can because i forgot oh yeah so this is what it has to be"
7424780,7436780," ahhh haskell why in some places it's so annoying like in some particular places it just gets extremely"
7436780,7441900," annoying to write in this language and it doesn't even compile like i'm doing something dumb yet again"
7442460,7449100," uh 26 and this is not helpful oh i see what what's going on i see okay"
7449100,7459660," it's just too much output it's worse than template haskell c++ template"
7459660,7467660," why am i spending time on this can anyone tell me why i'm spending time on this i have no idea"
7468380,7473100," okay input maybe machine but got maybe int this is not what i want"
7473100,7486780," where is the mistake expected type maybe machine but got maybe int no no this is"
7486780,7494220," this is not what you want so this is a machine push input gives you a machine"
7496780,7505820," ah it's the other way around i see oh i'm so tilted i'm so tilted okay it compiles now"
7505820,7516860," i want a very simple thing how can i express it like more concise than this"
7516860,7523900," there's no way to express it more concise than this no you just just just cannot do that you just just can't"
7524700,7531500," like well maybe you can but but it's not really readable right so it's not readable um this is"
7531500,7538620," still not readable but some somewhat um okay so prime machines uh we can specify the settings and we can"
7538620,7547340," have a single machine right time for a cup of tea maybe you think no it's not a cup of tea yet uh time"
7547340,7553100," all right so what i need to do here i need to map the settings right when i'm mapping the settings here is"
7553100,7561180," a single setting and in here uh what i'm doing i'm pushing in input setting input into the machine"
7561180,7569100," so it's a single machine actually so it gives me that uh and yep i think that's what we want here"
7569100,7576780," is it going to compile it does compile so we can prime the machines with settings and we can perform a single cycle over the machines"
7578300,7587500," cool i think it's cool maybe uh anyway so we can go back in here uh so here is the um"
7587500,7596540," uh yeah so we have that and this is the problem so let's actually put"
7597180,7603580," uh this program into a sample i wonder if it's the same sample here so zero one um"
7603580,7613980," i don't think so uh sample so let's let's have an indication that this is a part"
7614860,7623740," one sample right so this is a part one uh through k state music functor instance yeah yeah probably uh"
7623740,7631340," zero zero two zero one txt all right so let's actually put this thing here"
7631340,7635900," so this is a problem like specifically designed for"
7637900,7642220," for imperative languages right so and that's basically where the challenge comes from"
7642220,7646380," all of this uh designed for imperative languages"
7646380,7655580," but it is what it is uh machine from file and we provide sample two zero one so here is the machine"
7655580,7665020," we read the machine um so then we can try to prime uh the machines right prime machines right prime machines"
7665660,7672540," and uh we need to put the settings here we need to put the settings so what are the settings uh let me put"
7672540,7682780," the settings here uh here they are and let's just uh i said um why it didn't do there we go it did"
7682780,7689100," there we go so here we have a bunch of primed machines so it's kind of difficult to see what the"
7689100,7696220," fuck is going on right but if you map all these machines with get input uh for each of them right"
7696220,7703420," so you will see that inputs of those machines contain uh the corresponding settings right so all these machines"
7703420,7710140," are primed uh the next thing we can try to do we can try to uh perform a single cycle over them"
7712220,7714860," so single cycle it will accept by the way"
7714860,7723820," i think i want to uh kind of uh a refactor this into i think i think uh i'm going to do it like this"
7723820,7728300," so it accepts the machine and it accepts the input like this you see"
7728300,7732380," oh maybe not maybe it's going to be input like that"
7734620,7740220," right and this is a straight up state monad yes i do understand that this is a straight up state monad"
7740220,7746700," um this is a state monad this is a state monad this is a state monad i can clearly"
7746700,7750940," see all of that it's just not particularly um helpful"
7750940,7761100," um yeah it's also state yeah yeah so i i see all these patterns but it's just yeah"
7763900,7770700," uh so as i already said right to make anything useful in haskell you first have to reinvent"
7770700,7778140," imperative language right so that's essentially what you're doing with uh io monads state monads"
7778140,7783100," state fail you reinvent an imperative language first and then you're programming an imperative language"
7783100,7792220," um okay so a single cycle um i think i need to reload all that of course i i modified this entire thing"
7792940,7800300," but that's kind of the challenge here right this is kind of the challenge uh-huh uh yep so"
7800300,7809500," single cycle and we have to provide zero here okay so it performed a single cycle"
7809500,7814220," and the output of that cycle was actually 57 right um"
7816700,7824060," the output of that cycle was 57 um okay so and what's funny is that"
7824060,7830700," we have to carry the state of the machines along with the input along with the input"
7830700,7837020," now we have to feed it again so the easiest way to feed it again would be to do something like this"
7841900,7849180," and i actually i mean it was it was intentional okay so it was intentional um so because then"
7849180,7854620," does it make it easy to feed it again i don't think so"
7854620,7860060," because there's mismatch between the steps anyway so it's not it's not particularly helpful"
7861660,7872300," right it's not particularly helpful um yeah so this is going to be just maybe you still have to branch"
7872300,7882380," and maybe here yeah yeah okay so uh let me put it like this uh and if at some point we don't have an output"
7884300,7912540," um at some point we don't have an output it would be way easier if uh we had something like this"
7914300,7920700," and we would just use iterate"
7920700,7930940," you see what i mean we could do iterate prime machines blah blah blah zero and would we would iterate"
7930940,7940940," and we would drop um maybe take until uh this thing is uh is not nothing see what i mean"
7942780,7944700," yeah i think it's a pretty cool idea"
7944700,7954860," drop until is nothing yeah yeah so something like that so um yeah so let's give it a try so this has"
7954860,7963900," to be just input and in case of a single cycle here being uh nothing we can just return this thing here"
7963900,7971580," right uh or we can keep returning nothing in that case right we can keep returning nothing and if i uh"
7971580,7975580," yeah it still compiles so the only thing we need to do here we just need to"
7975580,7983420," prime the machines and we need to construct this thingy here so i need some sort of a function right"
7983420,7995580," yeah let's create function part two which accepts the file path the file path and uh returns you"
7996700,8001740," let's say a list of integers i think i want to see a list of integers uh i think it's going to be useful"
8001740,8007980," so here's the file path and in the file path i'm going to just read the machine uh it's going to be"
8007980,8015500," machine from file so file path there we go so here's the machine then we prime the machines with a"
8015500,8021340," particular setting so this is going to be the setting this is going to be the setting and here's"
8021340,8027900," the machine so we have a bunch of machines now primed for the success uh we turn all of that into the"
8027900,8033740," input and we know that the first input is going to be this so this is the uh initial state that we are"
8033740,8039820," iterating over so then we are iterating so let's iterate text function first it does take function first"
8039820,8046780," single cycle so we're iterating over this entire thing with a single cycle and we take while while"
8046780,8054940," uh snd is just uh and then we want to return this entire thing we're just going to return this entire"
8054940,8064060," thing yeah there we go um and after that uh since we know yeah we want to take a look at the"
8065580,8069740," uh so we're going to have a list of these states right we're going to have a list of the states"
8069740,8078380," and i want to map this entire stuff uh with snd because i want to see this maybe i want to see the"
8078380,8085420," trace of the feedback loop right that's what i'm doing the trace of the feedback loop um yeah i think"
8085420,8092140," it's going to be interesting so uh is just is not available so i have to be data maybe"
8094060,8100700," in and in this case result will be the last output of the last yes exactly hopefully that will actually"
8100700,8111180," uh work uh so this does not work at all because why uh maybe int with oh yeah okay sure sure sure it has"
8111180,8115420," to be maybe int uh right okay"
8118940,8134860," it's kind of difficult one but holy shit um okay um now"
8134860,8146460," so return map and blah blah blah i'm just a little bit scared to test all of that uh so uh sample uh"
8147980,8154780," look at that glorious form don't make fun of me okay uh scared to fail yeah"
8154780,8157500," uh all right"
8157500,8160380," huh"
8160380,8165420," and at some point it failed"
8165420,8173740," prelude fail okay that was interesting so 57 40 and what was the output that was actually way bigger than"
8173740,8176940," i thought uh all right"
8176940,8180300," okay"
8180300,8191020," what a nice question to ask in the middle of me solving the problem all right so um"
8194060,8199740," why would it fail it do i have tail ms"
8199740,8210380," empty list and what's interesting is that we don't even know if it's if this fails because of that or"
8210380,8219580," something else because it could be like last might be using tail all right so if you try to do last on"
8219580,8228220," one empty it also tells you no it tells you tail okay so it means tail has failed uh tail has failed"
8228220,8231340," why would it fail like what the fuck"
8237740,8248940," it would be also nice to know it would be also nice to know where exactly that failed"
8248940,8251980," does this count as a try what"
8256540,8266060," exhausted a list of machines no how what no it doesn't it's not it's not it's really strange"
8271420,8281420," uh wait for the output"
8281420,8291900," okay uh so what if we try to do this thing ourselves well"
8295420,8305260," oh"
8305260,8309180," i don't even know where to start from so um"
8309180,8320780," push settings"
8322460,8326700," no i wanna know the place"
8326700,8331260," ghc place"
8331260,8335660," of exception like"
8335660,8346940," where what the fuck oh my god ghc where exception happened like i want to know precisely where it"
8346940,8348460," happened uh"
8348460,8353420," uh exception okay stack traced"
8353420,8358140," can you give me like i know that structure doesn't make any sense but maybe there are discussions that"
8358140,8359900," mention that uh"
8359900,8363500," okay trace"
8366700,8376060," this information you see allow you to dump a stack trace of the cost centers um"
8376060,8394780," it would be nice to have like a position in the file like i want to know where exactly that happened and i want to know for sure that it happened here but that couldn't happen here"
8394780,8398380," uh"
8398380,8399020," oh can it"
8399020,8406460," uh-huh we don't need to tell here i just realized that we don't need to tell here"
8406460,8411100," because it's already tailed it's already tailed here i just realized that"
8411100,8412460," okay"
8412460,8414620," but why didn't fail"
8415820,8422620," so if that was the problem why didn't it failed right away after the first one so that's what makes it really weird"
8422620,8425260," uh because if that's the mistake"
8425260,8431500," well you should is that because of the laziness it could be because of the laziness or something like that alex really strange"
8432300,8435500," but no laziness shouldn't affect anything"
8435500,8438140," i don't fucking know it's really strange"
8438140,8440780," uh all right part two"
8441340,8442540," um"
8442540,8442940," um"
8442940,8443820," sample"
8443820,8444940," two zero one"
8444940,8447660," and is that the answer"
8447660,8451820," is that the answer holy shit it is the answer"
8451820,8454060," oh"
8454060,8454940," fuck"
8454940,8457260," yo"
8457260,8458540," what the fuck"
8458540,8459900," uh okay"
8459900,8461420," so um"
8461420,8463260," interesting"
8463260,8466620," and unexpected first try yeah"
8467340,8468220," uh okay so"
8468220,8468940," map snd"
8468940,8470140," uh can i do"
8470140,8472620," uh map"
8472620,8479020," how how you filter out the uh the the nothings it's something like map cat"
8479020,8480140," map"
8480140,8482140," uh"
8482140,8484540," map maybe i think that's what it is map maybe"
8484540,8487740," um and uh we can do map maybe here"
8487740,8494060," right maybe and that will get rid of this thing all right if i try to do that"
8494700,8497420," yeah so that gives me this and then i can just do"
8497420,8507500," last last not lost last english please could you speak it properly mr so didn't"
8507500,8510540," so that's the answer here cool"
8510540,8512780," uh"
8512780,8518940," so there's also map maybe in our case map maybe is going to be like better because you have a function"
8518940,8520300," that you can map and stuff you know"
8521420,8521980," uh"
8521980,8530860," i wonder if we can merge these two things together i don't think so actually"
8530860,8535580," oh wait a second uh"
8535580,8537340," we can"
8537340,8544300," we can map all of that with snd right we can map all of that with this and d"
8545020,8551660," and uh here we can have just just and then cut a cat maybe"
8551660,8559500," yeah there we go i think that may work so it's a little bit like cons more concise we do that"
8559500,8564860," iteration we also uh throw away states of the machine because we don't care about the machines"
8564860,8571740," uh right then uh we take until it has something that we cut the maybes and take the last value and"
8571740,8579180," there we go so that should be working quite well so i want to do sample to uh zero two txt and i want"
8579180,8584140," to take a look at the second sample here oh by the way this is actually not the final solution if i go"
8584780,8590620," uh we need to find the settings right right right so this is not the final plan"
8590620,8598300," yeah so we need to find the settings uh keep forgetting about that um"
8598300,8613100," uh okay fails at brute force part we'll see how it goes"
8613100,8624540," uh okay so the second part is uh yeah it is correct it is is that cool uh so we need"
8624540,8637020," a like a slightly different function here i think um run amp chain uh okay so we're gonna call it like"
8637020,8643180," this so it's gonna be a single machine uh right so run amp chain takes a machine and integer okay"
8644060,8657820," uh um then this um and returns you um returns you a single value here right so this is pretty much this"
8657820,8666460," thing um so machine is gonna be available here then we're gonna have settings uh all right so here's the"
8666460,8679260," the machine here's the settings machine and settings um run amp loop right so this is a ran amp loop uh and"
8679260,8684940," part one is gonna be actually doing permutations and shit like that so if you have permutations i might"
8684940,8693660," as well actually you know copy paste this entire thing uh we're gonna put it here uh this is part two"
8695420,8708780," part two permutations run amp loop on machine and that should give us the right thing hopefully uh return"
8708780,8713820," what's wrong with the return int with actual type in"
8719340,8726380," it fails it fails at 43 oh okay there's there's no reason to have this thing here anymore okay i see"
8726380,8735660," cool so here's a part two uh i want to see if part two actually uh you know works correctly"
8735660,8742220," so it's going to be a sample sample uh 201"
8746140,8753420," that that that was the maximum by the way um oh yeah i see what's wrong here uh five to nine yeah"
8753420,8760380," you have to do five to nine uh yeah because it has a different settings yes it has a different"
8760380,8768380," settings uh yeah there we go so this is a correct and this one is correct as well"
8769740,8779260," mostly mostly mostly correct okay so that's pretty pogue that's pretty pogue uh and now we're ready to"
8779260,8781420," run on the actual input"
8781420,8789020," empty input for read opcode at position one two two"
8791660,8797420," interesting so it failed inside of our int code interesting"
8797420,8803980," um read opcode"
8803980,8809260," the f how did that happen"
8813180,8819180," exception exception one case yeah but for the samples it works right for the samples it works for"
8819180,8823180," but for the actual input it doesn't"
8823180,8827740," so maybe there's something wrong with the input maybe i fucked it up"
8827740,8830380," did i did it it up i don't think i fucked it up actually"
8830380,8835580," but i'm gonna re download it one more time we'll get your puzzle"
8836460,8845100," okay okay okay this is not the data we need to add the actual input"
8845100,8851500," and yeah empty input for a read op code at position one to two"
8851500,8860300," so the part one should work right part one works but part two it doesn't"
8863020,8872700," uh so let me understand so five to nine so five to nine"
8872700,8879740," i don't even know where to start debugging"
8886540,8888780," find the largest output signal that can be sent"
8888780,8895020," does it fail on any permutations that's a good question"
8895020,8903980," we can try to see uh like what on which permutations it fails right so essentially i"
8903980,8912060," can try to take this thing and just iterate over them so it's going to be uh for m underscore right"
8912060,8918780," and this is basically one of the settings right and i'm also going to be printing uh printing them of"
8918780,8923820," course so we're going to have printf debugging by the way in haskell isn't that amazing i think it's"
8923820,8930460," going to be amazing holy shit uh so and it's going to be just show uh settings"
8933340,8942300," um okay so show settings and uh what i'm doing here is i'm a printf uh d"
8942300,8947740," who said that haskell isn't is declarative language who said that"
8947740,8952780," uh it's not not even close to being imperative"
8955740,8958860," you still have the same here so um"
8958860,8967900," all right so printf and i'm going to do import uh text printf"
8967900,8976700," okay that's cool uh and uh let's do part two and let me actually do part two on the samples because"
8976700,8983660," uh i want to see how it if it works in the samples zero two one uh yeah there we go so it kind of works"
8983660,8989820," in the sample so here's different configurations and uh their outputs that's pretty cool uh what about"
8989820,9002140," the output input um like it instantly failed it didn't uh it failed on like literally on the first one"
9002140,9013100," so yeah it just didn't work at all um excuse me the fuck did i miss something um do i have to modify"
9013100,9017820," something or would not i think i'm using everything correctly if i'm mistaken um"
9017820,9024460," what is the highest signal let's actually read more uh it's not good this configuration that can't"
9024460,9030860," generate a large enough uh output signal to produce the thrusts you'll need uh okay most of the amplifiers"
9030860,9039100," i know before amplifier i output is connected to m4b and so on however the output the feedback loop the"
9039100,9049660," signal will um at what line does it fail exactly uh it fails inside of the machine it fails inside of the"
9049660,9054460," machine one hundred and seven what"
9054460,9061420," excuse me are you trying to tell me something i don't know um"
9062940,9068140," i want to read if i don't miss anything in feedback loop mode the amplifiers need totally different"
9068140,9075580," phase settings integers from five to nine again each used exactly once these settings will cause the"
9075580,9080460," amplifier software to repeatedly take input and produce uh output many times before halting"
9081260,9086700," provide each amplifier its phase settings and at the first input instruction all further input"
9086700,9092060," output instructions are for signals don't restart the amplifier control software on any amplifier during"
9092060,9100780," this process each one um each one should continue receiving and uh and sending signals until it helps"
9100780,9106780," all the input all signals send or received in this process will be between pairs of amplifiers except the"
9106780,9113180," very first signal and the very last signal to start the process a zero signal is sent to the amplifier"
9113180,9115420," input exactly once"
9115420,9125260," to start the process a signal eventually the software on the amplifier halter after they have"
9128780,9132140," exactly once exactly once isn't that exactly what i do"
9132140,9144940," uh yeah so signal is going to be just zero and it literally fails instantly"
9144940,9157420," if i reverse the permutations does it fail on any of them"
9158780,9169660," reverse yeah it fails on any of them like it's like it doesn't even work for samples it does work"
9169660,9177500," it's it cannot even do anything"
9182380,9189580," but samples work that's what's interesting like samples just work um okay so it says um"
9189580,9195420," we have a read instruction so empty input uh"
9195420,9206940," opcode at position 203 so that means like there's no input provided there's no input provided for this"
9206940,9213660," for this entire thing i need to make a cup of tea chat so does anyone have any questions while i'm making"
9213660,9227020," a cup of tea"
9227020,9242380," empty line uh we can try to print the state of the machine at empty line don't we remove the output remove the"
9242380,9250380," outputs so essentially it tries to read but it doesn't have an input so if it doesn't have an input that means"
9250380,9261420," no like actual input was provided at some point so it's no input may be provided if one if we have this situation"
9262860,9270300," okay okay so maybe i should reconsider this situation so if no input was received in one of those things"
9270300,9276780," right if no input was received um maybe i should crash"
9276780,9283180," that could be a thing that i could try to do"
9285580,9296860," um so um so because maybe it should um finalize like gracefully or something"
9296860,9305100," uh let me see what if i just say error what language is this this is haskell"
9306300,9316060," no input let's put this like that and i want to take a look at the samples uh all right so oh and it fails"
9316060,9316780," instantly"
9316780,9325340," so this situation is essentially norm maybe one of the presentation the first one doesn't"
9326540,9333660," doesn't case the machine q to go into feedback loop and you don't account for that case what do you mean"
9333660,9340140," doesn't make the good go into the fed feedback loop what do you mean by that we're coding the feedback loop"
9340140,9346060," feedback loop intentionally like we like what excuse me what do you mean um"
9349340,9356220," doesn't make any sense so the first cycle returns nothing immediately uh in that case"
9356220,9364700," it doesn't make sense it doesn't make sense to me i'm sorry"
9364700,9367660," uh okay i need to make a cup of tea"
9367660,9378940," all right so i'm gonna go to the kitchen just turn on the kettle stuff like that you know you know the drill"
9379340,9393340," uh um"
9409340,9423340," it's really strange"
9423340,9435340," um"
9439020,9442060," so maybe we can try to do a single cycle of this thing"
9442060,9451580," it's kind of difficult to do single cycles because you need to first uh do machine from"
9451580,9460780," uh file right so it's going to be input right so here's the machine right uh and i'm gonna put this"
9460780,9468940," machine somewhere here so here's the variable with the machine nothing special uh and um so what else do"
9468940,9475180," we have here so we have here so it's going to be a machine just zero and we're going to perform a"
9475180,9483820," single cycle on that uh machine so is it going to fail instantly uh oh yeah we need to prime the machine"
9483820,9491420," sure sure prime machine uh prime machine that's going to be from five to nine and we provide the machine that"
9491420,9500700," gives me gives me that gives us essentially uh five machines right uh so after that i'm just gonna do just"
9500700,9507740," zero and i'm gonna perform a single cycle so and it instantly fails this is actually pretty good"
9507740,9515500," so that means there's something fundamentally wrong here fundamentally right so either with the input or with my program"
9516300,9525100," so and uh yeah it doesn't really matter nine so i can do five to nine and i can try to reverse all of that"
9525100,9529100," so it's it fails on the first instance first"
9534220,9542380," cycle instantly first cycle instantly up code is different"
9542380,9549420," read up code at position well i mean depends depending on the configuration is just"
9549420,9556380," something uh something does not provide the input is that what it is"
9556940,9566460," it feels like maybe i'm forgetting something do i have to modify modify the program"
9566460,9581260," try every combination of new phase settings on amplifier uh did i miss anything it's not good"
9581260,9588300," uh as quickly okay most of the amplifiers are connected uh the feedback loop the amplifiers need totally"
9588300,9593740," different phrase settings integer uh out many times before halting provide each amplifier its face"
9593740,9597980," setting the first input instruction all further input outputs instructions are for signals"
9597980,9603660," don't restart the amplifier controller software"
9609820,9618380," so all signal sensors please come down okay so we're trying to solve a problem here don't create too much"
9618380,9625100," noise thank you um so is so the t is still going"
9625100,9637900," uh eventually the system amplifiers will halt uh after they it feels like i just missed something uh it feels like"
9637900,9644620," i just missed something but i don't understand what i'm missing so if i missed something crucial the samples"
9644620,9651340," wouldn't work but the samples work that's what's interesting samples just work but my input doesn't"
9651340,9660460," um is that something fundamental with my um with my input what if we try someone else input"
9660460,9686060," um so day seven day seven do they have the input so husk holy people implemented in all sorts of languages uh here's the input"
9686060,9695660," uh and uh yeah so here's another input input uh zero i know that it's crazy but i'm just curious i want"
9695660,9703740," to eliminate some theory i just want to like check some theory here uh all right so i'm gonna just do something"
9703740,9710940," something like that uh and uh part two is gonna be uh input"
9710940,9713820," uh"
9713820,9715980," zero two"
9715980,9719180," okay so it's it's not on it's it's something with my machine"
9719180,9723740," but the fact that samples work what's up with that"
9724540,9731660," what's up with that what's up with the samples hello programador binario welcome"
9731660,9745340," how badly could i up okay so single thing instantly fails maybe it fails even"
9745340,9750220," deeper than that right maybe it fails even deeper than that so let's actually try to"
9751180,9756380," take a single machine primed with some of the settings and just see what's going to happen"
9756380,9760140," all right so my tea is ready uh and we're going to continue"
9760140,9788540," deeper ha ha oh you're still here uh all righty"
9790140,9799180," interesting this is really interesting and again we cannot use any step debugging or anything like"
9799180,9801820," that because it's haskell so yeah"
9801820,9804860," it's pretty cool"
9804860,9816700," to do the term trace from it's not gonna be useful um so what i want to do is uh again read the machine"
9817500,9821180," machine um"
9821180,9825580," machine from file and it's gonna be input"
9825580,9834460," txt here is the machine and i'm gonna not really prime the machine i'm gonna just push input"
9834460,9844060," of five into the machine right so um well i mean yeah and if you get the input of that machine right if"
9844060,9851740," you get the input of that machine there you go you have a input with five so after that um what i want"
9851740,9858140," to do i want to just wait for the output wait for the output of that machine and there we go and"
9858140,9865580," something couldn't expect uh wait output wait wait wait wait wait for the output"
9865580,9873660," oh i don't have to get the input i'm sorry oh"
9876140,9879260," empty empty input for read up code"
9879260,9887260," oh okay uh so after that i think what i need to do i also need to push the input zero"
9889420,9891420," um"
9891420,9898700," right so here is the input you have five and you have zero"
9898700,9902540," you have five and you have zero"
9902540,9910860," so and it still says uh okay does it complain on in different places so if i just"
9911420,9922780," um wait for it for output wait for an output of just this machine uh it fails okay up code at position"
9922780,9931420," zero cool uh push input five it fails here push input zero it fails there"
9932860,9944300," um"
9944300,9949900," i think i kind of know what's going on"
9957820,9964140," is that what people were talking about when they said that about something about concurrency"
9964140,9975900," well i don't have more stuff for it to produce until it produces some sort of output"
9975900,9981660," doesn't produce any output okay let's actually keep uh providing output for it uh like what if"
9982460,9990940," input what if i provide zero okay i provided two zeros and now it printed one okay"
9990940,9998140," why did they have to provide two zeros here"
9998140,10009420," most of the amplifier is connected as they were before amplifiers as output is connected to amplifiers b"
10009420,10014860," the output e is now connected into preferences this creates the feedback loop the signal will be sent"
10014860,10020620," through the amplifiers many times in feedback loop mode the amplifiers need totally different phase"
10020620,10025980," settings integer five to nine again each used exactly once this thing will cause the amplifier"
10025980,10032380," software to repeatedly take input and produce output many times before halting provide each amplifier"
10032380,10038860," its phase settings at its first input instruction uh all further input outputs are for signals don't"
10038860,10045260," restart the amplifiers uh until it halts all the signals sent or received to the uh to this process"
10045260,10049980," will be between pairs of amplifiers except the very first signal and very last signal to start"
10049980,10058460," the process a zero signal is sent to the amplifier ace input exactly once but i had to send it twice"
10058460,10063500," what the hell is going on eventually this way on the amplifiers will help before they have"
10063500,10068780," processed the the final loop when this happens the last output signal from the amplifier e is"
10068780,10077740," sent to the to that your job is to find the largest output one um no it's actually part two um and for"
10077740,10084140," some reason my program for whatever reason tries to read multiple times like it reads okay the settings"
10084140,10092380," it reads the settings doesn't produce in an output and then i can push input another one it still wants more"
10093180,10100780," uh and only if i provide something like this only then it outputs something it outputs one but that doesn't"
10100780,10109980," make any sense like it says i have to provide zero to a once uh find the largest output signal that can be"
10109980,10117260," sent to the thrusters using the new uh phase settings and feedback look arrangement um and again samples works"
10117260,10123580," something is really fishy going on something is really fishy and it feels like it's something with the"
10123580,10126780," program but not really i don't think it's something with the program"
10129260,10140460," okay so what if what if i continue providing the values uh push input okay uh push a 10"
10145260,10161420," so it's still not halted um it could be one hundred just one push inputs now it still returns some"
10166700,10175900," it's really sus it's really sus i could say that it's a problem with my code but what the hell is this"
10175900,10192140," shit then why does sam why do sample work why do sample work but not my code but not my input"
10192140,10197420," that's a problem with my code but not my code is a problem with my code so i don't know if my code"
10197420,10200860," is a problem with my code is a problem with my code but not my code is a problem with my code"
10200860,10209500," i'm i'm lost okay we can try to like actually go and debug the program itself and try to see what the program is doing"
10212620,10223100," any standout differences between uh sample and output well the input is bigger that's the standout difference"
10223100,10230380," uh for sure for sure for sure for sure um yeah"
10235820,10248780," we can try to do some sort of a trace i think um i have an interesting idea what if we um yeah what"
10248780,10258700," if we have a trace you know what i mean uh when we are stepping a single thing here we're returning a new"
10258700,10274700," machine but we can also return what exactly it did all right we can also return what exactly it did"
10279900,10290540," and yeah so debug trace i bet this is an extra space it's an extra are you trying to joke or you're"
10290540,10293660," know what you're talking about okay so um"
10299100,10300460," an extra space oh you mean"
10300460,10312460," wait a second"
10312460,10317900," well there is an extra space so wait"
10317900,10324460," wait a goddamn second uh read file"
10326780,10327900," please don't tell me please don't tell me"
10327900,10333180," okay"
10333180,10348220," no this shouldn't be a problem come on um okay int code look there's no single space in here"
10348220,10355820," uh machine from so we're taking a memory from file"
10356780,10365900," okay so i actually use t read file and i don't have it of course because import qualified"
10365900,10369980," qualified data text as t"
10369980,10375340," uh and another one is actually io"
10375340,10383180," i can do that yeah okay so uh then t split on"
10385100,10393660," this thing i think i have to be like that well and then i strip all of them so"
10393660,10402540," map t strip so that strips this thing away for sure for sure"
10402540,10409580," there's no space anywhere there as far as you can tell so there's no extra spaces"
10411180,10421820," there's no line but apart from that"
10421820,10440220," no it's not it's not that okay so it tries to read more than needed that's what it does"
10441580,10447500," that's already super sus by the way that is already super sus like it reads setting"
10447500,10449420," reads the input"
10449420,10455100," setting and the input and then it also"
10455100,10463340," sends the value only on the third value but it cannot get the third value without a single loop so"
10463340,10469900," that's kind of the problem here it cannot get that value without that single loop so it's not a thing"
10469900,10476940," you can just do there um so it's and it's extremely strange like"
10479420,10494140," i'm hoping that i'm copy pasting everything correctly um so here is another thing and yeah where it is"
10494140,10499020," here's two inputs we are matching them perfectly"
10501020,10510860," we're matching them perfectly and um"
10510860,10521740," okay i got distracted by the way i wanted to have an idea of tracing things uh all right so debug trace"
10521740,10528060," please don't distract me um so um debug trace so this is what i wanted to do"
10532700,10536300," uh you take a string okay so this is what we need"
10536300,10541740," import debug trace"
10541740,10552940," uh and now we'll have to slowly and painfully go through all of these things okay so this is a plus"
10553100,10554460," operation"
10554460,10558220," trace"
10558220,10562060," multiple operation"
10562060,10565340," uh"
10565340,10567980," so what is that"
10567980,10574780," trace read operation"
10578380,10581180," uh what is that um obtain parameter"
10581180,10583340," what is four"
10583340,10586860," i forgot what is for"
10586860,10589420," take a memory"
10589420,10594940," and out output i see uh let's let's call it actually output maybe"
10594940,10596700," right whatever"
10596700,10602780," so this one is if"
10602780,10607660," all right so we can actually do it like that trace"
10608380,10618940," um if um not equal if not equal if not equal"
10618940,10628060," if equal zero"
10635340,10636060," wait"
10636060,10639100," well yeah"
10639100,10641660," okay in here"
10641660,10645180," uh i don't remember what is this one"
10645180,10647340," i think it's just"
10647340,10649740," um"
10649740,10652300," less"
10652300,10653420," than"
10653420,10656460," less than"
10656460,10660300," trace"
10663820,10664300," equal"
10664300,10677180," okay so it's it's compiled which is which is nice"
10677180,10678860," um"
10678860,10681980," so machine"
10681980,10684140," from file"
10684140,10687020," uh it's gonna be input"
10689660,10690860," so this is machine"
10690860,10693980," so we have a machine"
10693980,10696140," and i push"
10696140,10701580," input zero into machine and then i wait for output"
10701580,10703980," wait for output"
10703980,10707020," so a read plus if not equal"
10707020,10712140," uh so it read the first one okay so that"
10713980,10717260," i'm gonna push uh actually we have to push five right"
10717260,10721820," so to to prime it for for the new for the new phase right plus if not equal"
10721820,10723100," uh"
10723100,10724220," then"
10724220,10725900," push"
10725900,10727420," input"
10727420,10728620," zero"
10735900,10737020," it did a write"
10737020,10745340," our wait for output instruction is"
10745340,10746460," okay"
10746460,10751020," it did a write"
10751020,10753980," which means it should stop"
10753980,10756220," but it didn't stop"
10758380,10759020," okay"
10759020,10759020," okay"
10759020,10760060," this was extremely"
10760060,10761100," fucking useful"
10761100,10761580," holy"
10761580,10761820," shit"
10761820,10762940," uh"
10762940,10769180," wait for output what's wrong here"
10769180,10770140," so we take the machine"
10770140,10771980," right we take the machine"
10771980,10772940," uh"
10772940,10777340," we step through it and we actually drop all of the machines until"
10777340,10778780," uh"
10778780,10780860," while the output is null"
10780860,10787900," the output is null"
10787900,10793900," not halted"
10793900,10795500," and output is null"
10795500,10799980," so in a right"
10799980,10807260," configuration we add a thing to the output it should have stopped"
10808780,10809740," but it didn't"
10809740,10813980," uh"
10813980,10815260," it didn't"
10815260,10817340," and that's very important"
10817340,10825980," first time seeing haskell and it looks interesting yeah it does"
10825980,10830780," it is in fact interesting language it's more of a declarative one programming in haskell is like"
10830780,10831900," programming in sql"
10831900,10836860," but not databases but general like programming"
10838780,10839100," uh"
10839100,10842860," and with more concise syntax"
10842860,10848780," uh"
10848780,10852620," it's i would say that type lego is the other aspect of haskell"
10852620,10857740," so there is this a declarative sql aspect of haskell"
10857740,10861180," this is one aspect of it and the type lego is a different one"
10861180,10864940," so haskell is actually a combination of these things so i wouldn't say that"
10865500,10866460," it's one or another"
10866460,10869020," um so"
10869020,10875900," because when you're reading stuff from file and then filtering mapping it does feel like sql but"
10875900,10879580," another aspect is it's also something else"
10879580,10883340," um all right so this is uh we found a clue"
10883340,10888380," we found a clue and this is super important that clue is super important but i need to make a small break"
10889180,10896780," uh small break two minutes so i finally found a sas"
10896780,10903740," so the sas is uh we have right but wait for output has not stopped"
10906060,10913260," and this is bug this is straight a bug um all righty so um"
10913260,10917420," okay"
10917420,10923260," so let's make a small break i think i'm gonna go for three minutes i'm not sure how much time it will take"
10923260,10938300," for me"
10938300,10940460," i forgot how to use computers i'm sorry"
10942940,10955100," have fun"
10972940,10985100," so"
10985100,10987100," so"
10987100,10999260," so"
10999260,11001260," so"
11001260,11005260," so"
11005260,11019420," so"
11019420,11023420," so"
11023420,11041580," so"
11041580,11041580," so"
11041580,11059740," so"
11059740,11061740," so"
11061740,11079900," so"
11079900,11081900," so"
11081900,11100060," you"
11111900,11124380," you know what's up welcome back"
11124380,11137260," i think we're super close to uh actually solving all that um"
11139500,11143660," so what is wrong"
11143660,11147740," i want to have like an opposite thing here"
11147740,11150380," uh"
11150380,11153660," an opposite thing here"
11153660,11157740," which will actually show me each individual state"
11157740,11167340," all right so let me put a trace here as well import import"
11169500,11171180," debug trace"
11171180,11175900," and in here is going to be a trace"
11175900,11176860," uh"
11176860,11179820," no gray face"
11179820,11182140," uh"
11182140,11182460," show"
11182460,11185660," get output m"
11185660,11187180," okay"
11187180,11189420," is it going to compile okay"
11189420,11193340," so one more time uh doesn't work because why"
11193340,11196860," machine this thing one more time"
11197660,11199820," uh"
11199820,11202060," read"
11202060,11203100," write"
11203100,11203740," write"
11203740,11204940," didn't produce okay"
11204940,11206060," the problem is that"
11206060,11206460," write"
11206460,11208860," didn't produce an output"
11208860,11209340," why"
11209340,11210780," write didn't produce an output"
11210780,11213180," that's really strange"
11213180,11213580," um"
11213580,11216780," so you"
11216780,11225260," you take an output"
11225260,11230460," hello everyone"
11230460,11231980," well hello"
11231980,11236860," so we didn't write but that didn't produce an output"
11236860,11239820," why"
11243020,11254380," why i didn't produce an output"
11254380,11269340," it's kind of strange"
11273020,11274220," uh"
11274220,11277340," here's it's writing it there"
11277340,11278780," didn't"
11278780,11280620," didn't obtain parameter"
11280620,11283660," but the thing parameter just returns the parameter depending on"
11283660,11289660," like it's not even an optional thing if you put something there it should be just available there"
11292300,11293260," what is going on"
11293260,11297180," why didn't we receive a parameter"
11297180,11299900," why"
11299900,11303660," where is the"
11303660,11305580," where is the output"
11305580,11310700," output is not there and i mean there should be such like this such a strange bug"
11312140,11313900," is that a husky bug or something"
11313900,11316380," like i'm really"
11316380,11321020," in a bad place when i'm starting to suspect that it's a bug of the compiler"
11321020,11321980," so"
11321980,11323420," like this is"
11323420,11325900," does this does not make any sense"
11325900,11327660," like"
11327660,11331100," it's already on the level of language like where is the"
11331100,11333740," output output should be there like"
11333740,11334780," and what"
11334780,11342620," uh right so here's the right operation and um we add a thing there the output is"
11342620,11355100," here"
11355100,11359020," it just doesn't pushes anything"
11363740,11372780," okay"
11372780,11380060," okay i need i need a way to disable the traces somehow um"
11380060,11384940," so"
11384940,11389260," so let's call it t which which accepts a string"
11390220,11395900," and uh a from a right so essentially it's going to be a trace"
11395900,11397900," or"
11397900,11399500," see"
11399500,11406140," s id so it could be something like that and uh if def debug"
11406140,11407580," uh else"
11407580,11409820," and if"
11409820,11413180," right so and we can then"
11413180,11414940," debug"
11418060,11422460," and then i want to query replace uh query replace trace with t"
11422460,11424700," so hopefully that will work"
11424700,11432140," uh can i do it like that now and you have to enable cpp as far as i know for it to work right"
11432140,11435420," so uh ghci help"
11435420,11440780," uh so is that an extension of the language um"
11442300,11444540," gc ghc cpp"
11444540,11453820," ghc cpp is that a language extension how do i okay it's a language cpp cool"
11453820,11462780," uh all right so there we go all right using literal character"
11465500,11465740," what"
11465740,11472620," i'm molding so hard holy"
11472620,11478780," what do you want"
11478780,11492940," what do you want from me"
11492940,11496540," what do you want from me"
11498300,11498860," oh"
11498860,11498860," oh"
11498860,11500620," does it replace like t within"
11500620,11511660," wait what"
11511660,11512220," ah"
11512220,11535420," so there's some something really strange going on with this language um okay so and um"
11537180,11541660," where was the trace so here's the trace and i can enable it and disable it like this doesn't matter"
11541660,11547820," uh doesn't matter okay machine uh just do that"
11547820,11555900," ah where was that wait for the output okay so it gives me that uh cool and i need to remove that"
11555900,11563020," thing i need to remove that thing from the trace oh holy shit i'm so fucking molding holy"
11563020,11571020," fuck it's so dumb it's probably something god damn stupid and it drives me nuts"
11571020,11578140," i mean i'm really that bad at programming i think i'm really bad at it because i'm making so"
11578140,11586700," okay so this is that uh the thing i want to try i want to go to the main and i'm going to do"
11586700,11594380," uh part two uh part two uh input input txt so this is what i'm doing here um"
11594380,11603340," yeah i i know uh so let's try to do um put strln and i think i'm gonna be print whatever"
11603340,11611100," uh and uh why don't you work because it's not a functor it has to be bound like this uh thank you"
11611100,11616140," very much if i try to do something like this it still fails now i'm gonna try to build this and i"
11616140,11623580," think with the compiler um well of course you have to do something like this no interpretation no any"
11623580,11629740," of the bullshits build build as a compiler uh link and all that jazz go ahead"
11631820,11641660," well yeah it still fails with the same thing what is the what is going on how did i fail logic uh logic"
11641660,11648540," wait for input where could i fail all right one more time one more time we take the state of the machine"
11648540,11661180," and we iterate what's the difference between iterates uh thingy type iterate prime um so what's the h2c hs"
11661180,11675180," um iterate i'm going insane dude i'm going insane uh like this doesn't make a"
11678540,11689020," um what's the difference between iterate prime and not iterate prime huh huh you like that i'm sorry um"
11689020,11697660," strict version of iterate it ensures the result of each application"
11697660,11703580," of force to weak had a normal form before processing i know that it forces thunks"
11708300,11714860," uh huh so it probably messes with the magic of the runtime or something"
11714860,11726700," will i rely on laziness in a slightly different place so i don't know"
11726700,11729420," okay"
11729420,11738060," so maybe some somewhere in the youtube comments later is gonna tell me so because uh like apparently a lot"
11738060,11743500," of people actually watch this what's on youtube so uh yeah people on youtube in the comments please"
11743500,11749020," tell me what the hell is going on so i don't i'm not really uh like big expert on laziness but there's"
11749020,11755580," like some sort of laziness shenanigans going on here um so let's go to the int code implementation"
11755580,11763740," let's find iterate prime so um and if i switch it out so first of all i'm going to remove this execution and"
11763740,11772700," second of all in main hs is going to be iterate okay so we don't uh use iterate prime anywhere"
11772700,11780140," anymore right so it's it's all just a regular iterate okay um now if i try to do part one"
11780140,11788940," part one on the input uh is it gonna give me the final result uh okay so are we gonna first try this"
11788940,11799420," final result are we gonna first try it uh a boom no all right we didn't first try it so your answer is"
11799420,11799900," too low"
11799900,11811100," wait me i waste okay okay okay okay okay okay okay uh so uh technically it's like i mean it's still gonna be"
11811100,11818700," first try because i didn't make a try since i used a wrong function it was not a try all right since i"
11818700,11823180," no no no no no no i used the wrong function it is not a try so that means it's gonna be first try all"
11823180,11833980," right so uh part uh two uh yeah let's let's actually do that okay uh all right so part two"
11839420,11847420," okay so this is the proper try now this is the proper try uh right that one wasn't a real try this one"
11847420,11853820," well i mean it's also technically not a try i need to wait until it's"
11853820,11858460," done i mean it's like come on those were like this were not tries"
11858460,11864140," those were not tries okay so six seconds right so let's actually put six here um"
11867740,11873900," no it's a first try these two things were not tries because first uh first of the first time i uh"
11873900,11877820," tried like a completely different function so it's not a try"
11877820,11884220," uh all right so this is a war i'm gonna put it here"
11884220,11893820," first try mark yes first it's a first try mods mods ban everyone who says it's a third try parallel"
11895020,11899740," so yeah first try um"
11899740,11907340," all right so i wasted so much time"
11907340,11916460," on such a stupid thing you see here's my problem this is exactly my problem with haskell to use haskell"
11916460,11923660," efficiently and not shoot yourself in a leg you have to have like a really deep knowledge about it about"
11923660,11931260," run time right because for the majority of time it works fine but once in a while you shoot yourself in"
11931260,11938780," a leg so hard like like this and you don't know like how to troubleshoot things like all of a sudden"
11938780,11945420," like you put a single like tick here and there you go your program like goes crazy and you have no tools"
11945420,11953100," and no way to properly troubleshoot that so yeah it's a cool toy language but when it comes to like a real"
11953100,11958140," software imagine something like that happening in like in in production in a huge like program in a huge"
11958140,11965660," system holy um so yeah it's scary i'm actually scared to use that for something serious"
11966380,11979820," um anyway so yeah that's actually pretty cool so um let me see how we can um now clean it up uh the"
11979820,11987500," thing i want to just quickly clean up this entire stuff uh this one is going to print f part one"
11987500,11999580," so this is going to be this and this is going to be uh this cool so now if i try to do around ghc i"
12001180,12006940," main hs um is going to give me both of the answers um"
12006940,12021740," okay so let's do the the documentation um so what was that day seven right day uh seven solution"
12021740,12031420," here's the day seven solution uh and the link to the day seven um is going to be here uh expected"
12031420,12039660," results console hola so it's going to be the expected result expected result expected expected"
12039660,12047180," result is going to be this there we go there we go let's see let's see all right"
12051740,12067020," um zero seven add uh is it at day seven part two solution let's push that right into the repo"
12067020,12080700," all right so the source code of uh all the solutions uh that i've came up with so far is available here"
12081420,12087420," right you can find all of that here and let's continue let's continue um"
12087420,12098380," excuse me oh all right i want to make like make a small break uh like yeah just literally like one"
12098380,12106060," minute just just give me a little bit of time um i'm not gonna even give a timer so it's gonna be super"
12106060,12117980," quick"
12117980,12147660," um okay day eight so i'm not sure um if uh we'll have time to solve day eight we"
12147660,12154780," wasted so much time then uh time on day seven it's it's insane uh let me push my breath"
12154780,12158460," all right let me close everything"
12158460,12171420," that's that's interesting zero eight zero eight day eight space image format space image format"
12173180,12179900," the elves spirits are lifted when they realize you have an opportunity to reboot one of their mars"
12179900,12188460," rovers and so they're curious if you would spend a brief so what is this world can you please speak"
12188460,12196780," english that would be actually pretty cool if you spoke english please uh a period of time when you"
12196780,12205900," stay in the planet that should not at home uh okay sojourn search okay um you land your ship near the"
12205900,12213180," rover when you reach the rover you discover that it's already in the process of rebooting it's just waiting"
12213180,12220700," for someone to enter a bias password the elf responsible for the rover takes a picture of the"
12220700,12228380," password the puzzle input it sends it to uh to you via the digital sending uh network uh unfortunately"
12228380,12235260," images sent via the digital sending net what interesting digital sending network uh aren't"
12235260,12241340," encoded with any normal encoding instead they're encoded in a special space image format none of"
12241340,12247020," the elves seem to remember why this is the case they send you the instructions to decode it images are"
12247020,12256140," sent uh as a series of digits that each represents the color of the single pixel the digits fill each row of"
12256140,12264460," the image left to right then move down uh to the next row filling rows top to bottom until every pixel"
12264460,12271660," of the image is filled each image actually consists of series of identical sized layers that are filled"
12271660,12277020," in this way so the first digits correspond to the top left pixel of the first layer the second digit"
12277020,12283580," can spot to the pixel to the right on that on the same layer and so on until the last digit which"
12283580,12290380," corresponds to the bottom right pixel of the last layer for example given an image three pixels wide"
12290380,12295260," and two pixel stalls the image data is one two three four five six seven zero one correspond to the image"
12295260,12303980," uh to the following image layers okay one two three oh okay that's actually pretty cool i understand"
12303980,12313100," that i think i do understand that the image we receive is 25 pixels wide and six pixels tall to make sure the"
12313100,12318940," image wasn't corrupted during transition the elves would like you to find the layers that contains the"
12318940,12328220," fewest zero digits on that layer what is the number of the uh of one digits multiplied by the number of two digits"
12328220,12337340," what okay whatever uh so let's actually try to encode that it should be pretty straightforward so"
12337340,12344540," essentially you take this um so you always have two layers right so how many layers do you have"
12344540,12351500," each image consists of a series of identically size ah i see so since you know the size of a single image"
12351500,12358220," um you know how many layers you can have there all right so uh let's start it's going to be main dot um"
12358220,12370220," um main dot hs so module uh main where so um let's call function layers it accepts a string"
12370220,12380780," right and uh it will return you a series of layers i suppose um yeah that's simple there series of layers"
12380780,12389100," uh but you also need to provide the width and height the size width and height right so uh this is what"
12389100,12395820," we're going to have here so it's going to be width height uh and input cool"
12397980,12409100," uh to to determine what's next so the size the whole size of the image right something like n is going"
12409100,12418140," to be multiplication width and height and we need to split the input into chunks of uh size n right we"
12418140,12425500," need to split them into chunks of size n um so you know what we can introduce something interesting so we"
12425500,12440460," can say row is a string uh image is a list of rows right and layers uh and we can say that the layer maybe"
12440460,12450700," yeah image there we go something like that so it's going to be list of list of uh interesting any piece"
12450700,12455260," of stuff that is just big number it's it is illegal to know some numbers because you haven't"
12455260,12467100," paid for them wow that is so deep that is so deep oh my god please pull it off all right uh"
12467100,12477740," we need a function chunk it's too deep for me man like pull it off pull your idea off it's too"
12477740,12485020," fucking deep it hurts me um all right so we don't really have so the thing i want to have"
12485020,12495100," here is actually int uh a and a all right so deep it broke"
12495100,12508540," chunks of uh all of that shite is third party dependencies dance game okay so let's introduce"
12508540,12520300," our own chunks uh so we're gonna say int a a a a and it's gonna be n right and if you have like an empty"
12520300,12527260," thing here we're gonna just return them to think and then in here we're gonna do take uh an axis"
12528620,12545420," uh there we go so we have chunks uh so i'm still on seven let's go back to eight i'm gonna do ghci"
12545420,12553660," so if i have oh my god oh my god you it wants main function oh i forgot that i have a"
12554780,12560460," that i have a snippet for for defining modules i keep forgetting about that all right so uh chungus"
12560460,12567180," uh so it's gonna be one two three four five six and i want to take the size of three there we go"
12567180,12575260," this is exactly what i did shut isn't that amazing i think it's goddamn amazing mate so essentially"
12575260,12584780," i take the input and i split it into chunks of n and uh yeah so here is the input and within a single"
12584780,12593180," thing here uh i'm splitting it do i need to actually split it even any further uh okay i can do that why not"
12593180,12600620," chunks of uh width yeah i think chunks of width is gonna be all right and if i try to recompile all"
12600620,12609580," of that it works and i can now take a layers so uh where is this thing so here is this string"
12609580,12619340," and um yeah and the size of this entire thing is gonna be um three pixels wide three pixels wide and two"
12619340,12625820," pixels tall so it's gonna be three by two uh and there we go three by two so we split it into these"
12625820,12633020," kind of layers and yeah so we can know that what does it want from us so the layer you receive is 25"
12633020,12639660," pixels wide and six pixels tall uh to make sure the image wasn't corrupted during the elves we'd like you"
12639660,12647100," to find the layers that contains the fewest zero digits on that layer what is the number of one"
12647100,12657500," digits multiplied by number of two digits what okay so to make sure the image wasn't corrupted during the"
12657500,12663500," transition the elves would like to define the contents on that layer oh on that layer i think my brain missed"
12663500,12676540," this part on that layer i see uh oh okay so um all right i need to find the one with this uh maximum"
12676540,12683500," amount of digits so it feels like we don't really need to split that much right so we don't really need"
12683500,12690300," to split that much uh i think i'm gonna go with the part one so um it's gonna be int int"
12690300,12702140," string and uh maybe we can even return the answer so here is a width and height width and height input"
12703420,12717900," and defined um so we don't need this uh width and height so here is the chunks um and"
12717900,12725900," yeah it's actually really strange that chunks is just like it's yeah i have to reimplement it all the time"
12725900,12736060," like every time um so now i want to have a function uh that counts zeros count"
12736060,12747820," so maybe we can count count elements count elements so uh you can provide x you filter everything equal"
12747820,12753340," to x and you just count this entire there we go so that's how simple it is we can even test it out"
12753340,12762460," seriously so count elements uh you provide uh like zero and you provide zero one one zero one and it says"
12762460,12766540," that there are two three of them so it's pretty straightforward as you can see it's pretty easy to"
12766540,12775180," implement so uh now so we count elements and we want to find the one with the biggest amount of those"
12775180,12784220," elements um is there something like maximum by maximum by uh no i don't think so"
12784220,12790540," so let's do import data list"
12790540,12802860," so a maximum by all right so it accepts ordering ordering and in terms of ordering i think we can do"
12802860,12815100," something like compare on um compare on count elements yeah uh so for that we'll need uh import data function"
12815100,12824140," there we go so in here we're gonna have on very useful so imagine that we have a bunch of these things uh"
12825020,12838300," one one one one one zero and one one zero zero cool and now i want to actually do maximum by uh compare"
12838300,12852860," on count elements zero that will not work for sure uh so yeah i have two two clipboards here so um"
12853180,12856700," you know what i'm gonna actually move this thing here because it's"
12856700,12863260," very goddamn useful so element it accepts a single element and list of elements and returns your integer"
12863260,12870460," it's pretty straightforward okay and it didn't work thank you very much because this thing has to be equal"
12870460,12879500," all right one more time all right uh uh variable not found in the scope characters something something"
12879500,12883980," because i have to put this thing here because i have to put this thing here and it still didn't work"
12883980,12889100," oh maximum by"
12889100,12891420," uh"
12891420,12897820," on accepts a thing"
12897820,12903180," all right you're missing s ah okay"
12905180,12912060," there we go okay cool cool cool so now if i do something like this okay it works this is exactly"
12912060,12920540," what i want compare on and there we go so um yeah so we can now take this thing"
12923100,12927260," uh thank you so much thank you thank you thank you and uh there we go"
12927260,12938940," and now we have the element there right so we have that element which we probably can save here so"
12938940,12948700," let's put it to m right and uh count elements one m multiply by count elements two m that should be the"
12948700,12957020," result okay part uh uh all right let's go to the input txt and they call it day seven"
12957020,12960700," i don't know well it's a part one though"
12960700,12970460," so there we go so if i read that uh from input so"
12973100,12975180," okay okay i will need to trim it first"
12975180,12981740," i'll definitely need to trim it and this entire thing accepts strings and"
12981740,12985260," yikes"
12985260,12995100," how can we trim it actually by the way uh we can turn it into lines uh like this"
12996620,13005180," right lines and then head so that's the way to trim it yeah part one uh and uh we also have to provide"
13005180,13015260," the size and the size is if i remember correctly what was the size uh why 20 25 by uh six and are we"
13015260,13019020," we're going to first trying that when the flip are we're going to first try that when the flip a chat chat"
13019020,13020940," chat chat chat chat but what"
13020940,13027900," the fuck is going on"
13027900,13032300," um excuse me"
13036620,13042060," um viewest"
13042060,13051980," this is embarrassing okay okay okay okay okay okay"
13051980,13066140," god cooler by the way let's try well it doesn't count because i i didn't miss it i i miss it right so it"
13066140,13070780," it has nothing to do with my coding skills all right it has nothing to do with my coding skills"
13070780,13077100," it has something to do with my reading skills i didn't read it properly but if i read it properly"
13077100,13083420," right uh so it would work right so it it's absolutely absolutely irrelevant to my coding"
13083420,13088620," skills so it still got code removed you see what i mean it's still going to be first try right it"
13088620,13093340," wouldn't be first try if i read it correctly understood it correctly but then applied my coding"
13093340,13098220," skills and it didn't work all right so i just read it incorrectly so but i implemented it according to"
13098220,13104060," how i read so this is going to be first try believe me uh this is going to be literally first try"
13106860,13117100," uh so this does who cares about table come come on um come on all right so uh 17 16 and then"
13118300,13128940," bam first try first try first try see got cool i'm not good at reading but i'm good at coding yeah so"
13128940,13137100," let me see see first try it was a first try okay now you're ready to decode the image the image is"
13137100,13143500," rendered by stacking the layers and aligning the pixels with the same positions in each layer the digits"
13143500,13150140," indicate the color of the corresponding pixels uh zero is black one is white two is transparent so"
13150140,13158300," the layers are rendered with the first layer in uh front and the last layer in back so if a given pixel"
13158300,13165020," has a transparent pixels uh forcing cd in the first and second layer a black pixel of the third layer and"
13165020,13169980," the white pixel in the fourth layer the final image would have a black pixel at that position"
13169980,13178620," uh for example the given uh image two pixels okay i get it i get it uh i get it so uh"
13180700,13186460," so the final image what message is produced after decoding the image okay so um let's actually"
13186460,13195100," implement a function that will blend the pixels uh so mix so it's gonna take a bunch of characters uh"
13195100,13205820," right so and essentially uh this is a lower layer and another one is the upper layer right so one um okay"
13208380,13214300," uh two is transparent uh two is transparent anything uh with a transparent pixel is gonna be that pixel"
13214300,13225180," right um that pixel uh then otherwise it's gonna be that so this is essentially what it is right"
13225180,13227100," so that's essentially what it is"
13227100,13234620," i bet people who solved it in js actually rendered image on canvas probably i don't know uh"
13237340,13248060," so uh this is how we render all of this and the thing is uh we split everything by chunks right so if you"
13248060,13256780," take this entire thing so here's lines and then i do chunks uh 25 by 6 right 25 by 6"
13256780,13266860," uh here are all of the chunks so essentially i need to oh yeah i need to uh like i turn it into"
13267340,13272940," mix layer right so this is a mix layer right which takes a string and another string and produces another"
13272940,13285820," string pretty straightforward okay um so then uh we have layer a and layer b and i zip them with mix a and b"
13285820,13291420," there we go uh i might as well actually get rid of a and b and just do something like this zip with"
13292060,13299980," uh is it gonna work uh is it gonna work i think uh no instance num char ah i see pc"
13299980,13306300," all right so now we have a mix layer uh the next thing we can do um"
13306300,13313580," um we can do a render render layers so uh we accept a bunch of strings"
13314540,13321420," and then uh essentially what we do is um take all the layers"
13321420,13330780," and zip uh actually fold left them right fold left them from the left uh with mix layer uh and the"
13330780,13335820," initial layer is going to be yeah we need to come up with the initial layer though uh we can do it like"
13335820,13344780," that uh i think there's also like fold uh fold one yeah there's a folder one that okay it doesn't"
13344780,13351420," require anything so i can do fold one mix layers ls and i can just apply something like this and there"
13351420,13358700," we go we have render uh render layers uh also it would be interesting to print the layer right put a"
13358700,13367660," stln uh let's go print image it's gonna accept this size um maybe it's gonna accept only width so we only"
13367660,13375020," need width here uh a string and we'll produce io here that's essentially what it will do so we have"
13375020,13384140," width uh we have image and then i split everything by chunks of that width and then i uh map m underscore"
13384140,13392140," put strln this entire big and that should be okay all right so we accept the input here so here's the"
13392140,13401340," input txt so that's pretty cool we need to uh we need to strip it first so it's going to be lines and the"
13401340,13410220," head right so we split all of that into chunks of 21 uh 25 by 6 this is 25 25 by 6 i think it's 25"
13411100,13418780," by 6 cool uh right so here are the chunks and then i'm trying to render those chunks so it's going to"
13418780,13425580," be render uh render layers and let's see what's going to happen so here's the final layer and then i want"
13425580,13435100," to print the image i'm going to print the image and that did not work because i'm bebeka uh print layers uh"
13435100,13448940," print image and it still doesn't work oh because i have to provide the size"
13448940,13452860," what does it say okay"
13458540,13463420," the message is produced after decoding your image i thought that i have to"
13463420,13465980," uh"
13465980,13477180," does it make any sense okay uh i can try to copy paste that here and then do one it doesn't make any sense to"
13477180,13493660," there must be clear number visible okay so um something is not right yeah so the image is uh"
13493660,13498700," rendered by stacking the layers and aligning the pixels with the same position in each layer okay the"
13498700,13501340," layers are rendered with the first pixel in front"
13501340,13511500," um the layers are rendered with the first layer in front of the last layer"
13511500,13515260," okay so let's try to reverse them then um"
13515260,13520780," so here are the layers and uh let's reverse them"
13523340,13528220," uh okay so this looks a little bit better so yeah i forgot to reverse them actually"
13528220,13533580," okay fabi"
13533580,13541260," okay so okay fabi and i wonder if it has to be capitalized"
13541260,13551340," okay so let's let's grab it and if it has to be capitalized it's still gonna be first try"
13553500,13556860," first try above that that was actually kind of cool"
13556860,13563340," i'm not a bad challenge not a bad challenge it's pretty interesting"
13563340,13570700," actual first try i mean the previous tries were also actual first try okay so because like the"
13570700,13576220," previous one was like testing my ability to read but not my ability to code right so i'm still got"
13576220,13581500," quarter um anyway so we need to clean everything up"
13581500,13588460," so this is the part two okay so this is the part two"
13588460,13598380," part two uh accepts the width and heighten and uh does something like this there we go"
13599500,13609100," uh boom part two is this man the definition of first and try yeah exactly exactly uh width height"
13609100,13619980," input uh so this one is yeah okay so uh i'm gonna do it like this then i'm gonna just remove this"
13619980,13628140," entire thing uh and this is the input we split input by chunks we reverse this entire thing then we render"
13628140,13636460," this entire thing and then uh we just print all of that but we can get rid of that uh and then we don't"
13636460,13644300," need any of this shite there we go okay so this is the part two does it even compile uh it does in fact"
13644300,13653820," compile nice nice nice nice so okay uh we need to uh read the inputs the input is going to be like this"
13653820,13664300," a read input input txt and um lines head um"
13664300,13678060," we count only successful tries it's all of his first try uh all right so yeah part one 25 by six input and"
13678780,13689020," essentially is going to be part one uh s there we go and that has to be like a new line uh put s to uh"
13689020,13699100," maybe i can also use like this part two uh new line here and after that we're going to do part two uh 25"
13699100,13708620," six input uh there we go just do length drop while is not successful oh i thought you're talking about"
13708780,13717820," uh my solution uh my solution or something text print f uh okay uh and what do we have here print f s"
13717820,13727820," d all right is it gonna work cool so this is expected result"
13727820,13734700," uh after you see the stream i realize i'm not a good coder again it depends on the definition of"
13735340,13741820," first try god and color so within a certain definition you can call yourself a god coder if you want to"
13741820,13750140," why the fuck not why the fuck not definition of god"
13750140,13764860," okay uh so here's this day seven i suppose day seven um a little bit tired already but whatever read me"
13765340,13785020," uh um d day eight day eight uh solution right uh expected results console hello and it's going to be part"
13785580,13790140," one and or two there we go cool"
13790140,13802780," zero eight add day eight solution and push that right into the repo you you can find uh the source code"
13802780,13810220," here uh trailer white spaces are automatically removed when i save the file so you don't have to worry about"
13810220,13818540," that look look look look isn't that amazing i think it's goddamn amazing"
13818540,13821020," okay"
13821020,13823260," um"
13823260,13835740," we'll be tired but we still have some time for another problem here for day nine"
13837820,13841180," i need a little bit of a break"
13841180,13858700," finger snap training space remover yes sensor boost oh shits i'm not using c plus plus"
13858700,13862460," unfortunately oh shit it's yet another int code fight"
13862460,13874060," okay does anyone have any questions because i'm i want to make a break uh it's just a little bit too"
13874060,13883340," too much for my pepega brain how are you guys doing today by the way uh who participated in the 2019"
13883340,13892780," advent of kudu did you guys like it was it interesting we're on day nine and it's pretty interesting so far"
13892780,13900940," uh i could imagine it being quite fun to participate like while programming in c for example i think it"
13900940,13907100," like fits for c really well uh what do you think about the new pogchamp i don't really care about the"
13907100,13914620," pogchamp i think the mod is dead at this point so so what twitch is trying to do now so first of all which"
13914620,13920940," killed the pogchamp like uh whether whether it which killed pogchamp or not which killed pogchamp is"
13920940,13927740," actually kind of you can debate about that because they had no choice okay so they literally haven't had"
13927740,13935180," no choice but to kill pogchamp because if they didn't uh that uh that opened up that would open"
13935180,13941740," uh a lot of opportunities for media to essentially make articles about which like they're promoting"
13941740,13947580," violence and whatnot uh even though nobody cares about that guy but still so they had no choice to kill"
13947580,13953660," this emote and all these attempts are they're just like beating the dead horse so that's why i don't"
13953660,13959420," care the emote is dead twitch killed it because they had no choice and whatever"
13959420,13970540," yeah it was all right but uh dropped out before halfway i see"
13970540,13976780," it's kind of difficult to replace the original pogchamp"
13982060,13987340," never knew where pogchamp came from it was just like from one of the youtube videos of the guy i think"
13987340,13995420," yeah it was just a random video"
13995420,14006380," um but who needs pogchamp when you have a sodium pog right am i right so who needs pogchamp it's just"
14006380,14015500," starting poll uh and how is that associated with violence well you can go to the website google.com"
14015500,14022540," and ask that question there all right so um"
14022540,14028940," i don't know about bttv yeah but bttv is like a third party thing"
14031180,14041660," okay zero nine let's read about that one there is a paywall behind sodium pog exactly that's why it's"
14041660,14048860," better than pogchamp because for using pogchamp for people using pogchamp i don't get paid so"
14050860,14061820," you see um so okay sensor boost uh you've just said goodbye to the rebooted rover and left mars when"
14061820,14069820," you receive a faint distress signal coming from the asteroid belt it must be sarah's monitor i hope i"
14069820,14078140," pronounce that correctly monitor in the uh station uh in order to lock on to the signal you will need to"
14078140,14086540," boost your sensors the elves send up the it sounds like you just you need to take some sort of a drug"
14086540,14092780," to boost your sense okay whatever the end is that send up the latest boost program basic operation of"
14092780,14103420," system test uh while boost your puzzle input is capable of boosting your sensors for uh tennis tennis"
14103420,14108460," tennis i don't speak english i'm sorry safety reasons it refuses to do so until the computer"
14108460,14115740," it runs on passes some checks to demonstrate it is complete int code computer your existing"
14115740,14123340," int code computer is missing one key feature it needs support for parameters in the relative mode"
14123340,14133740," parameter in mode 2 relative mode behave very similarly to parameters in position mode the parameter is"
14133740,14139980," interpreted as a position like position mode parameters in relative mode can be read from"
14139980,14145260," or written to the important difference is that relative mode parameters don't count"
14145260,14154860," from address zero instead they count from a value called relative base the relative base starts at zero the"
14154860,14165500," address uh the address a relative mode parameter refers to is itself what the address a relative mode parameter"
14165500,14169900," refers to is itself plus the current relative base"
14172380,14177500," when the relative base is zero the relative mode parameter and the position of parameter with the same"
14177500,14184220," value refer to the same address for example given a relative base of 50 a relative mode parameter of minus"
14184220,14193100," 70 refers to a memory okay 43 the relative base is modified with the relative base offset instruction"
14193820,14202300," okay okay opcode 9 adjust the relative base by the value of its only parameter the relative base increases or"
14202300,14210860," decreases if the value is negative by the value of the parameter for example if the relative base is 2000 then"
14210860,14218380," after the instruction this the relative base should be 2019 if the next instruction were that it would be"
14218380,14225980," to 1995 okay your income variable will also need a few other capabilities the computer's available memory"
14225980,14233180," should be much larger than the initial program memory beyond the initial program starts with the value zero and"
14233180,14239180," can be read or written like any other memory it is invalid to try to access memory at negative addresses"
14239180,14268940," though okay so here are some examples uh takes uh no input and produces a copy of"
14268940,14280940," itself oh it's a quine it's a mother flipping quine yeah okay so should output 16-bit integer and yeah"
14280940,14289580," matthewsf777 hello uh the boost program will ask for a single input"
14289580,14297980," rather than test mode by providing uh it the value one it will perform a series of checks on each up code output any"
14297980,14304940," up codes and the associated parameter modes that seem to be functioning incorrectly and finally output the"
14304940,14311660," uh put boost key code once your int code computer is fully functional the boost program should report"
14311660,14319420," no malfunctioning up codes uh when running a test mode it should only output a single value the boost code"
14319420,14327740," the boost key code what boost key code does it produce okay that sounds freaking excited exciting that's actually"
14327740,14334140," pretty big a pretty big thing oh all right so essentially you just have to take this thing"
14334140,14339500," and provide in input one and just forget about it uh but uh first you need to implement"
14339500,14347980," all of these instructions uh guys are you ready let's go uh so do i have any"
14348700,14355900," changes changes for the int code machine so do i have traces yeah i actually committed the trace no face"
14357260,14361420," uh all right so um yeah"
14361420,14370380," so relative base it's initially zero if i understand correctly right so um"
14370380,14379260," uh let's introduce a new parameter here it's going to be called get base so it's going to be integer"
14380700,14386860," so and it also will support like big numbers maybe we'll have to swap ins to integer at some point or"
14386860,14391660," at least inside of the memory right inside of the memory uh we'll probably have to swap this thing"
14393100,14406780," uh relative based relatively based on what uh okay um okay let's go back to to here and zero name and"
14406780,14412780," ghc i manage should i make another cup of tea i already prepared the leaves"
14413820,14421660," but i think i think i had enough cups of tea already i think i'm pretty sure i had enough cups of tea"
14421660,14430940," i'm sure if you can see that let me let me zoom in so i had one two three"
14430940,14435260," four i had four cups of tea"
14435260,14443100," okay it's kind of funny that i can count that and it's also depressing at the same time"
14443660,14444540," so um"
14444540,14451420," whatever so get based um"
14451420,14467340," ghci int code uh hs useful skill yeah uh 27 uh so here we have a base and initially it's going to be"
14467340,14473180," zero maybe i should start you know um providing some names here because it becomes like kind of unreadable"
14473180,14478540," yeah i think we're going to see if we're going to do this is what we're going to do here on the dzozin"
14478540,14484380," channel follow the dzozin channel for more t quantization quantization that's cool"
14485580,14499580," uh is uh is and this one is get get input get input get input get output and this one is going to be"
14499580,14511580," get base there we go so that's a little bit more readable uh now uh so machine from memory oh machine"
14512780,14514540," from memory um"
14514540,14517580," that's interesting"
14517580,14527020," so what i can essentially do here i can just use empty machine right empty machine um and just do get"
14527020,14534460," memory equal memory so we don't have to ever think about that ever again there we go okay so we have base"
14535420,14537500," that's amazing it's amazing"
14537500,14547740," uh so now we need to implement the uh relative mode but i forgot how to do that okay decode mode"
14547740,14557100," uh so we have a position immediate uh position immediate and relative mode so this is what we have here"
14557980,14565180," position immediate and relative and i suppose the uh mode two is the relative one so that means we have to"
14565180,14572060," do something like this two uh is a relative one and uh we'll have to handle it here right we'll have to"
14572060,14580860," handle it here oh so we obtain parameter from a memory but we also need to have a base you're a purist if"
14580860,14588940," you use loose leaf tea tea bags are easier um okay so what"
14588940,14603660," i think you're just jealous that's that's what it is um no"
14603660,14613900," so i think we'll have to accept the whole thing here i think we have to accept the whole thing like the"
14613900,14620140," whole machine because we need to not only the memory but memory plus the base and who knows what else we"
14620140,14624140," will need right who knows what else we will need so i'm going to do like a machine here"
14624140,14628860," uh two two two two and let's see what uh we're going to have here"
14628860,14638060," oh that's that's a lot of places uh so it's going to be 88"
14639580,14645420," so that means it's going to be a machine get memory like this"
14645420,14649100," yeah i think that this should be all right"
14649100,14653100," i'll need some luck considering how day seven"
14653100,14662380," okay i'm not going to try to uh play with strictness anymore let me actually strip off any like"
14662380,14667900," like you know hints of strictness because i remember like i put strictness because it wasn't"
14668940,14675580," uh sure oh that's that's very interesting oh yeah okay this is not strictness it's it's an array it's"
14675580,14680380," trying to access the array all right so um now"
14680380,14689660," maybe i should do a ghc id uh let's do ghc id because it's going to put it on the top"
14691500,14697020," uh so now instead of memory i have to use the whole machine right i have to use the whole machine"
14697020,14700700," obtaining the parameter uh so yeah"
14700700,14708700," do i have to be bold to understand haskell no you don't have to be"
14710380,14713660," unless you're following the character cult then yes"
14713660,14725100," what is this even uh you're talking about emote or you're talking about it haskell this is a haskell"
14725100,14730380," you never you know it's your haskell so by the way for those who never saw haskell i recommend to"
14730380,14738220," check out uh haskell rank series that i did some time ago uh by the way back then i wasn't uh bold and i"
14738220,14742540," still programmed in haskell so speaking of whether you need to be bold to understand haskell i wasn't"
14742540,14750860," bold back then um so yeah i can i ask kind of topic question no you have a panel that says music provided"
14750860,14756540," by chill hope what do you do to be able to use their music do you pay to them no you're just allowed to use"
14756540,14770860," them uh chill hope uh you just have to register them uh you can buy uh like actually buy the rights but"
14770860,14781020," you don't really have to uh live streams i think i don't remember uh there was an explanation somewhere"
14782220,14791340," how to do that or use our music okay uh free to take a tour monetize the content on youtube twitch"
14791340,14800220," and blah blah blah uh there was an explanation create an account yeah okay so create your account"
14800220,14806540," connect your youtube channel or also twitch uh it also works for twitch and uh put the links there"
14806540,14813100," all right so for twitch uh essentially uh you need to connect your twitch account with your account on"
14813100,14819820," chill hops and that is needed so their automated system don't dmca you so yeah they basically will"
14819820,14825260," see okay this is your account this is connected there the the uh credits are provided so they will not try"
14825260,14835260," to dmca this is how it works um so yeah does it make sense um yeah you're welcome it's actually pretty"
14835260,14841420," cool i think you they they also have some exclusive songs that you can pay for like it's generally pretty"
14841420,14863580," interesting website um so yeah um so all right um what i was doing um so 135 135 it's a memory and we"
14863580,14875180," have to provide the machine here uh 142 and another machine uh i use epidemic sound but their collection"
14875180,14894220," is limited yeah i see um okay so machine uh 164 and uh um in how many programming languages you can"
14894220,14901980," code i think it's answered in my fiq yeah the answer is yes i mean the secret here is that i don't know how"
14901980,14907900," how to code in any language uh and i just copy paste code from stack overflow it's actually answered"
14907900,14913500," in my fiq i don't know how to program in any languages like every time i stop uh i finish the"
14913500,14918460," stream i forget everything so i have to relearn it every time on the stream that's how it works actually"
14918460,14930780," uh so okay i would like to have some parameters here all right so we have another mode here obtain"
14930780,14941740," param machine get memory memory memory memory and we also need to get base right so here's the base"
14941740,14946940," uh and it's a parameter and it's a relative one and what we're essentially doing"
14946940,14955820," is i suppose we're going to do a memory but parameter plus the base so that's essentially how it's"
14955820,14960300," going to go if i understand things correctly it's actually pretty cool that we have already"
14960300,14967740," all the necessary machinery in place to decode uh modes and stuff so i can easily add another mode and"
14967740,14978060," it's actually placed about uh yeah looks like and i laughed at this for years it's like here's the thing"
14978940,14987260," languages at their at their core are pretty similar to each other so after some years of experience you"
14987260,14994380," will start to realize that and language doesn't matter anymore for you so yeah so it's not about"
14994380,14999580," like knowing like each individual language you know one language which makes it easier for you to learn"
14999580,15005580," the second language and which makes it easier to learn for you uh the third one and then at some point"
15005580,15011180," you can just learn a language in an hour solve a problem in that language and forget that language"
15011180,15016380," and that's exactly what i do and that's exactly what i did in ausc uh 2020 so you can take a look"
15016380,15023740," at the ausc 2020 where we did 25 languages challenge right where i used 25 languages for each day um and"
15023740,15029180," half of the languages i never programmed in actually so i had to learn them right in the stream so if you"
15029180,15034780," click on the folders there are links to the streams where it actually happens so it's it's not that"
15034780,15041580," impressive actually to be fair because languages are really similar to each other um so i think this is"
15041580,15048460," how we do that um so this is a relative one and uh we need to implement the offset right we need to"
15048460,15059500," implement the offset um adjust the relative bay by the value of its only parameter the relative base"
15059500,15064380," increases or decreases if the value is negative by the value okay so let's implement the opcode"
15065500,15069740," the upcode oh and we also want to have like parameters and stuff so"
15069740,15075420," is that the whole machine by the way so they say complete"
15075420,15084460," you see complete do we have a complete uh virtual machine at day nine i was hoping that we're not"
15084460,15089340," going to have a complete virtual machine up until day 25 that would actually pretty interesting imagine"
15089340,15095020," that you don't have a complete one until like the last day and then the last day you sort of like"
15095020,15105180," implement the last instruction that unlocks the god powers i don't know um anyway um maybe it's not"
15105180,15111900," maybe it's not uh the the complete one but anyway so we need to uh get the parameter and the parameter"
15111900,15122620," of this thing itself can also be in different modes i think pug yeah okay so we obtain the parameter it's the"
15122620,15129100," the next one and uh do we have a destination i don't think we have a destination what we need to do here"
15129100,15140860," is uh how is it called um um adjust relative base is that what it's called"
15144700,15158220," uh okay just relative base um and then we are doing what we do machine uh we don't modify the memory"
15158220,15167340," though right we don't modify the memory but we do modify the base uh get uh base equal base plus a one and"
15167340,15174620," then we also need to do get ip ip plus uh one two i think we'll have to do two right"
15174620,15185420," uh we'll have to do two and uh i think that's entire thing but the instruction set is complete at ninth"
15185420,15194220," oh instruction sets okay interesting uh okay so we also need to have a base"
15196940,15209260," uh base it gets uh base machine all righty uh it still compiles does it okay that's cool"
15209260,15218860," nicer nicer nicer nicer nicer nicer uh should be it should be the the whole implementation we can try to"
15218860,15226860," test it on different things on different interesting things so uh memory from image right so i can"
15226940,15240460," do memory memory from image so this is what i need here uh ghci so here is the image uh this is not the image"
15240460,15252860," so memory from image memory from image there we go here's the memory and then we can have machine from memory"
15252860,15261820," memory cool so here is the machine and uh we can try to execute that machine and what it gives us oh"
15261820,15271020," shit okay so i forgot that you can actually go beyond um this thing you can go beyond uh how much beyond though um"
15274620,15285180," uh to to to much higher than initial memory beyond the initial program starts with the value zero and"
15285180,15292700," can be read or written like any other memory okay this one is cool uh but we'll have to think through"
15293260,15299340," how we're gonna exactly how we're gonna exactly implement all of that uh uh all right"
15303420,15316460," int code introduce relative base and uh the adjust pop code there we go i'm gonna push that right"
15316460,15323500," into the repo interesting interesting interesting because this thing so when you're trying to access the"
15323500,15336460," the memory right um so the easiest solution would be to just allocate more memory to just allocate more"
15336460,15345500," memory but maybe we should make a hash map out of it maybe memory should become a hash map uh right so"
15345500,15355020," instead of this thing it should be memory map it's going to be m map right so you see what i mean m map"
15355020,15363020," from the address to the integer and every time you try to access something from it or read there like it"
15363020,15370700," automatically initializes everything with uh zeros but i'm not sure how good of an idea that is right"
15371660,15375820," um maybe it's going to slow down everything dramatically who knows"
15375820,15383340," uh and also maybe i should have a way to like switch between different implementations of memory"
15383340,15390060," depending on how fast i want to go uh so this one is going to be interesting so can i have a hash map"
15390060,15397660," is there a thing you can do hash map so you can have a hash map from an ordered containers and if i do ghc"
15398860,15406540," package and i'm going to do a list so do i have an order yes we do have an ordered containers beautiful"
15406540,15422940," so um that means we can just import this stuff import uh qualified uh data hash map as hm okay and here is"
15422940,15433100," going to be hm map uh hm map address so and let's try to compile all of this um it's gonna be ghc id so"
15433100,15439180," let's see how miserably it fails all right so could you i couldn't find hash map so i think this is because"
15439180,15446620," you have to specify the uh whether it's strict or lazy right you have to specify the strictness of it"
15447340,15452060," uh this is something internal this is not what i want i want to take a look at the contents please"
15452060,15454940," that will be actually kind of cool cool"
15454940,15460300," so yeah i have to switch between like strict and lazy and whatnot"
15460300,15467260," so let's go with strict one for now even though it's probably kind of dangerous i already get beaten"
15467260,15473820," by strictness once uh but maybe it's gonna be okay couldn't load module but i thought if you're"
15473820,15480780," using this like that it should just work it's member of a hidden package all right so what if i do it like"
15480780,15492620," that but everything i do is usually available okay uh set package you can run set to expose it"
15493820,15502060," okay set package unordered unordered containers"
15502060,15512300," okay i've been changed resetting the loading new package okay and it now it works all right"
15512300,15523740," and did it just compile without any problems is that what happened i can't believe that um all right so"
15523820,15527340," ghci and if i do"
15527340,15533820," package unordered containers"
15533820,15542940," okay this is exactly what i wanted to see now this is called type constructor uh or uh hm module does not"
15542940,15550060," export map uh what is the expert though this is this is what i want uh it exports hash map okay that makes"
15550060,15560140," sense uh hash map that's what i wanted cool finally uh i wonder if i can now use ghc id"
15560140,15568380," i can cool 31. so uh here's the empty memory"
15568380,15574060," um i think we need to introduce like literally empty memory empty memory"
15575500,15581980," empty memory and it's going to be a memory uh and it's going to be equal to that and depending on what"
15581980,15587740," it is actually we're going to switch to empty memory hm empty uh cool"
15587740,15595180," uh 65 65 65 all right memory from image"
15595180,15596860," ah"
15599100,15605740," memory from image this one is rather interesting so i can try to do something like this is going to be"
15605740,15610700," memory from uh we probably still need n here but maybe not"
15610700,15623980," memory from image so access then i zip zero with access and then i do hm from list right hm from list"
15625900,15630140," right"
15630140,15637980," so uh yeah i forgot to put this thing here uh 95 another one 95"
15637980,15645660," yeah the way you get a parameter the way you get a parameter we need to abstract that away as well"
15645660,15653660," so um the thing we need to do so okay we have empty memory which you can modify however you want"
15654460,15660940," right uh can you basically have nested modules or something that would be actually kind of cool"
15660940,15665100," uh asking nested modules"
15665100,15671980," in one file i don't think you can do that otherwise people will be using that quite often so i don't"
15671980,15679340," think it's a thing and do i need to wait for this slow website probably not i think yeah you have to"
15679340,15690380," create folders that's for sure so memory uh memory from list wait uh memory from"
15690380,15700060," i guess that's what it is so i'm gonna just keep it so depending on implementation is just gonna be different"
15703580,15709180," maybe you could have like come up with the uh with some sort of interface uh but whatever"
15709180,15720140," uh memory add so this one is interesting memory add and then maybe memory get right memory get"
15722620,15729020," uh so essentially what we do here we accept the memory here we also accept the the address right we accept"
15729020,15737820," the address and uh we return you a value right another one is going to be memory set uh and memory set"
15737820,15750220," does what uh it uh accepts uh it uh accepts the memory actually it accepts an address i suppose address the value"
15750220,15757660," and uh creates your modifier of the memory so that's essentially what it does and uh i want these functions"
15757660,15766940," to basically take into account trying to access uh after the the memory and so on and so forth so yeah"
15766940,15770620," we'll have to implement all of this um and on top of that we'll need to"
15770620,15782860," yeah okay so there's a couple of complaints here 101 uh because yeah because of this operator"
15782860,15793100," so i have an idea uh what if we do the following thing uh yep i essentially hide that and we have"
15793100,15801180," variable not in the scope so memory get is going to do this thing right we're going to provide our own one"
15801180,15808380," and now we need memories slash slash so uh set could be that as well so it accepts the memory and list of"
15808380,15818460," the players right so it's going to be um actually memory and list of the players of address and integer"
15818460,15824540," and uh then i can just rename this to just that and everything compiles okay so essentially i'm just"
15824540,15831260," re-implementing the interface of array and i'm hijacking hijacking the interface of the array"
15832540,15839500," so i just need to implement all of this um now so let me go to ghci"
15839500,15845900," super quick and take a look at what we have so hm probably has a lookup right it does have a lookup"
15845900,15854060," so this is what we can do hm look up i want to ask would you consider uh taking a web dev project for"
15854060,15864780," a share no i'm not taking any work right now i'm sorry uh okay so here's the memory so memory uh dress"
15864780,15871660," uh what type classing yeah it would i actually mentioned that while i was rambling about my things"
15871660,15876060," uh so i was thinking about type classing but i just don't want to do it right now maybe at some point"
15876060,15886620," we're going to do that um yeah so first i want to have something working uh so address memory"
15886620,15896540," and we have a maybe and so i think we also have to have from maybe uh and for that we'll have to import"
15896540,15904540," data maybe uh and then from maybe yeah this is what we'll have to do from maybe zero see if it's not"
15904540,15909500," available it will return you zero so that means if you go beyond what's interesting is that the"
15909500,15915580," consequence of this thing is that you can also go to the negative addresses as well so but uh we were"
15915580,15924060," not asked to implement that but we implemented it anyway uh so import data maybe and let's take a look"
15924060,15933820," and there we go there we go i wonder how many things would break after this change i wonder we'll have"
15933820,15940300," to we'll have to go through them and see um all right so how about this one now um"
15940300,15947100," thanks but what if it's promising would you look at proposals sorry don't mean to be"
15947100,15957420," best no all right memory uh so memory and uh values so we are setting the values so what i want to do here"
15957420,15973900," i suppose i want to uh i want to yeah we can just fold above that uh fold left memory yeah fold left some"
15973900,15983740," sort of a function right so this is the uh accumulator so maybe memory this then address uh address value"
15984540,15990860," right and this is what we'll have to do here so we're going to put in defined uh and then memory"
15990860,15997740," values so which means by the way that we can do some sort of etta reduction and just do it like that"
15997740,16005900," so just fold l um how are we gonna put all of that i don't remember i think it has uh insert yeah it does"
16005900,16012780," have insert it doesn't look like it has insert it has key value in this thing uh okay so it's going to be hm"
16012780,16022940," insert uh insert address value memory prime and since we already did add a reduction we don't need prime here"
16023580,16032060," there we go so it looks pretty straightforward so just fold it uh and that gives us a memory um"
16032060,16043580," cool look at that so we have like a full implementation here hello green meek welcome to the streams so"
16044540,16053100," yeah that's pretty cool that's pretty cool oh wait a second if you're yeah if you're trying"
16053100,16058700," to set an address it will also set this thing automatically this is actually kind of cool i really"
16058700,16074300," like this idea i don't know how to interpret that thank you i guess um"
16078780,16082140," that's the most bizarre compliment i've ever had okay we got"
16082140,16094620," you know what would make this compliment better if you said instead of not dumb you said uh less dumb"
16094620,16099260," it's true that most russians are dumb and fit all the stereotypes but this one is less dumb"
16099820,16108300," like it would be even better"
16108300,16112300," oh okay so"
16112300,16118780," anyway"
16118780,16126540," thank you this is the only possible answer for that yes"
16127900,16132140," uh that's a good one um all right so um let's continue"
16132140,16141340," i'm kind of scared okay so we need to test all of this right so we need to test all of that somehow"
16141340,16143340," uh yep"
16151020,16160540," so from uh machine memory from yeah we'll have to do machine from yeah yeah memory from image"
16160540,16170780," memory from image and again we need to put uh that image there"
16173340,16178860," um all right so memory from image and there we go we get we get an image okay everything works"
16178860,16179660," correctly okay"
16179660,16189020," uh so and machine from memory here is the machine for memory i hope it's not going to become slower"
16189020,16196140," um because of me using a different data structure uh we'll see how it goes and let's try to execute this"
16196140,16200860," and i think and see how it goes at least it didn't fail and look at that"
16200860,16207740," this is the output so you see get i can even actually show you uh get output"
16207740,16215100," so it actually printed itself oh yeah it printed itself but it printed itself in a reversed order"
16215100,16220380," because uh we append them at the beginning so technically it actually uh printed them you know"
16220380,16224860," printed all that in the correct order so after that we can try to reverse this entire thing and there"
16224860,16231260," we go here is the input which we can use again for for the program so we can do memory from image"
16231260,16239100," right memory from image then machine from uh memory right and we can execute that one more time"
16239100,16247260," right and we can get the output uh and uh reverse it yet again uh and yeah we got the original output"
16247260,16255260," yet again yes i just uh taking the quine and i run it again for for a second loop i think i'm pretty"
16255260,16261500," sure we can even uh make it like indefinitely iterate over itself uh but uh it's kind of useless"
16261500,16269660," but it's pretty cool that it works um so should uh output 16 digit number all right so let's see if we can"
16269660,16281100," pull that off um 16 digit number it's gonna be a memory from image machine from memory uh-huh and let's"
16281100,16292460," execute and see how miserably it fails uh is it 16 digits i think it's kind of 16 digits uh oh yeah it's"
16292460,16301100," a 16 digit number so uh maybe something will overflow at some point um yeah should probably with larger"
16301100,16307020," number in the middle uh okay so this is the last thing that i want to check here right"
16308460,16327100," uh machine from memory uh execute okay uh it just prints that number okay um all right so i'm just"
16327100,16333580," worried if it's gonna go even further beyond uh so because of that i'm thinking to maybe change the"
16333580,16340620," values to integers uh because integers can actually scale to big numbers right you can even do something"
16340620,16347660," like this right and even this so you can have these kind of numbers but the type of such a number would be"
16347660,16353740," actually well it's it's numb but underneath it's uses integer which is a long arithmetic integer"
16353740,16361660," i'm just not sure if i need to do that anyways so yeah we have a new implementation of a memory"
16361660,16369980," um and uh a better machine with more instructions in shape so let's go ahead and try to import that in"
16369980,16381580," code uh so i'm going to put input cxt here and what's going to be the input so uh so we have to provide"
16381580,16388460," a value one for the input right uh provide a single input cool uh let's get the input puzzle that's actually"
16388460,16395020," pretty huge all right so we're gonna put it here holy did i did it copy it correctly wait a second"
16395020,16404300," um so let me select that one more time so then i'm gonna select it one more time again"
16404300,16412860," uh-huh and it seems to be working seems to be twerking uh now i'm gonna go back into"
16414540,16424220," the bog oh man i have to provide more packages now so it has to be something like package unordered"
16424220,16434140," containers uh yeah so we'll have to okay so couldn't do integer okay int code one more time"
16435100,16441180," uh uh clipboard ssd didn't copy correctly yes you know what i'm talking about you know what i'm talking"
16441180,16452540," about um because welcome to linux um well rather welcome to x11 all right so it's not really linux"
16452540,16464540," thing it's inherited by all the unixes who uses x11 and shit like that um okay so uh file um machine"
16465100,16471020," from file right i can read machine from file this is going to be the input here it is uh on top of"
16471020,16483260," that i can push input uh one oh i actually need to uh bring the useful functions that i introduced in the"
16483260,16491020," previous um in the previous solution to to the main machine so we'll definitely need such thing as pop output"
16491020,16496140," push input and wait for the output i feel like these things are going to be extremely useful"
16496140,16503020," uh so that's why i want to like literally put them into the int code so um yeah"
16503020,16511020," let's put it put them here somewhere so yeah they're extremely useful"
16512380,16520460," uh okay oh it's it's actually one and uh there you go so in an input here we have one so the the program"
16520460,16527580," itself has a huge uh a huge memory and if we take if we take the input input is just one cool so let's"
16527580,16536620," try to execute this bad boy and uh let's actually get the output uh right away um okay how many things it"
16536620,16544300," have to output the possible ask for a single input run uh it in test mode by providing it it will perform"
16544300,16551900," series of check on each op code output any op codes and associated parameter mode that seems to be"
16551900,16560460," functioning incorrectly and finally uh output a boost code once i don't understand what's supposed to do"
16560460,16567900," for a single input run it in test mode by providing it the value one it will perform a series of checks"
16567900,16575020," on each op code output any up codes and the associated parameters that seem to be functioning correctly"
16575020,16581340," uh and finally output the boost code so it's actually printed like zero is it is it okay that"
16581340,16593660," the printed zero i'm not quite sure um we can try to maybe remove the uh remove the implementation of"
16593660,16601340," one of the op code and see if it behaves differently uh so we can remove implementation of this thing so let's"
16601340,16610620," see okay so unknown opcode at position nine okay uh we may try to do something like this"
16611340,16619660," uh unknown code uh unknown code well i mean it works correctly so um"
16619660,16632860," i'm not sure if i have to just do 203 i'm a little bit scared because it's probably not going to be the"
16632860,16643180," first try yeah you see it's too low like yeah it didn't didn't work um okay so we can try to do the uh"
16643180,16652060," the integer value then uh so let's actually try to do the integer value um will it improve anything"
16656940,16668860," uh uh 25 and uh yeah so we accept integers here you are just debugging doesn't count as first try yes"
16668860,16679340," yes uh all right all right all right uh i was just debugging"
16682460,16690220," okay integer you know what uh i think we should actually instead of integer call it a value right"
16690220,16700540," so we have a type address uh and uh value is going to be integer uh right so address value so then you"
16700540,16707980," have a bunch of values uh memory address returns you a value you see how nice it is like it becomes more"
16707980,16718380," more readable uh value so get ip an ip by the way is supposed to be an address if you think about that"
16718380,16726940," so this is an address uh and outputs and stuff like that are integers right base uh well it's supposed to"
16726940,16733180," be an address i think so yeah there we go so we have like semantic information all over the place"
16734620,16745660," uh 57 so what's up with that uh set input uh it's integer set output is another integer uh 103"
16745660,16752540," um so what do we have here integer uh it has to be about obtain parameter it returns you a value"
16752540,16757820," four um oh and parameter itself um"
16761900,16767100," i found the piece with copy queue in settings checkpoints one two three you can also ignore"
16767100,16776220," password from password manager like oh it's not for me right okay uh from integral so yeah essentially"
16776220,16784060," we are converting address to a value but i'm not sure what is a parameter"
16784780,16792380," oh sure by the way uh parameter has to be a value i think the because we retrieve them from from from"
16792380,16799180," values so this is a value and this is a value decode mode so it has to be a value it gives you that"
16799180,16809260," uh decode up code it's also a value gives you that okay so uh oh three"
16811020,16814860," uh-huh so and then you use parameter"
16814860,16825500," i guess we have to use integer like everywhere now then that's what you all we want to do um"
16825500,16831900," yeah so it's gonna be so uh this one is a value"
16833500,16837340," two one two two one two push this one is a value"
16837340,16850380," 2 16 this one is a value there we go cool um yeah so it's really strange that it just doesn't work"
16850380,16852860," right away and i wonder what's causing that"
16855100,16859500," uh-huh yeah it just doesn't work correctly"
16859500,16869980," all right so int code"
16869980,16881420," by the way we tested on the samples it's yet again yet again it works on the samples samples work"
16884620,16892220," uh all right so and yet again i'm having some sort of like strictness thing here let's actually change"
16892220,16904140," it to lazy will it change anything here then um no weak samples yeah that's what it is so weak samples and"
16905100,16907100," yeah"
16907100,16911340," am i providing the right thing what if i provide zero or something"
16911340,16913820," or at 69"
16913820,16923260," maybe i just implemented like relative and correctly because it doesn't react to any values"
16923260,16926380," look look at that it's definitely it doesn't react to any values"
16927260,16933020," uh so parameter in mod 2 relative mode behaves very similar to parameters in position mode the parameter"
16933020,16938540," is interpreted as a position like positional parameters in relative mode can be read from or"
16938540,16944220," written to the important difference is that relative mode parameters don't count from address zero instead"
16944220,16950540," they count from a value called a relative base uh the relative base starts at zero okay that's exactly"
16950540,16956460," what we'll do the address uh a relative mode parameter first two is itself plus the current relative best"
16956460,16961820," base when the relative base is zero a relative uh mod parameter and the position what parameter with"
16961820,16966940," the same value refer to the same address for example giving the relative base 15 and you do that"
16966940,16971660," the original best is modified with the relative base of set instruction wait a second i think"
16972460,16980780," um this has to be two right um adjust the relative value by only parameter though to base increases"
16980780,16986620," or decreases the value integer okay so here is the parameter right here's the parameter uh"
16986620,16992460," we add this thing here and then we also modify the uh this thing here as well"
16992460,17002220," so base plus a one uh plus one to skip the address itself uh plus skipping the parameter"
17002220,17016140," this okay so to obtain this thing uh right so we are in immediate position and relative so this is"
17016140,17021980," the same except like we take the base and we take the parameter and just plus and just extract this thing"
17021980,17031340," from there i don't see any problems see any problems everything seems to be okay"
17032220,17045420," uh so good"
17045420,17059500," so what if i don't provide an input yeah it expects something"
17061820,17067740," it expects something and it shouldn't be overflow either right because uh like we have integers they"
17067740,17074940," don't not gonna overflow um relative base offset"
17074940,17085340," so we start with that just fold it and use this memory back"
17087980,17092460," insert when you insert when you insert something by the way do you update that thing in"
17092460,17099420," wait a goddamn second hash map am i using hash map incorrectly"
17099420,17101900," insert"
17101900,17108860," uh since i specified if the privacy contained the mapping of the uh the old value is replaced"
17108860,17116060," this is exactly what i want okay i didn't see any problems um oh there's also this thing"
17116780,17128860," yes oh oh okay uh where am i chat i don't understand what the fuck is going on okay"
17128860,17134780," memory from image let's try samples yet again let's try samples yet again"
17134780,17141420," let's try samples yet again samples seems to be working samples seems to be working"
17143740,17149900," uh and they do uh and they do test so they do have nine here right so well do they have nine"
17149900,17160060," this one doesn't have nine though uh none of them use nine but maybe they're modified so um"
17160060,17167820," okay so the samples from memory machine from memory"
17170300,17173660," uh machine from memory and let's execute this i think"
17173660,17181660," right so and it returns us something and base is 16 so it does modify right so it's just like"
17181660,17192460," it's self-modifying program um so and without without the ninth thingy we won't be able to do that"
17192460,17196380," without the ninth of code right"
17196380,17201020," okay so that makes sense"
17201020,17215580," oh yeah we're probably at some point just subtracting 100 there right that makes sense"
17219420,17224060," did they up okay one more time let's take a look at the input"
17224060,17228940," do we have any spaces okay it's the same situation here"
17228940,17234620," oh it's uh with the param okay yeah that's true i didn't realize that"
17234620,17243740," uh nine should be taking into account the uh the op like modes as well right it should be taking them into"
17243740,17247820," accounts so um yeah"
17247820,17261180," so zero positional one immediate two relative um"
17261180,17267180," then we convert them and then we just use them relative is the parameter plus base"
17269580,17276060," and yeah then we set the base plus a see any problems"
17276060,17285340," see any problems okay so maybe the time has come for tracing one more time uh we can give it a try"
17285340,17290300," let's let's enable tracing uh so the way we enabled tracing"
17292780,17296780," oh boy oh boy oh boy oh boy oh boy uh trace"
17296780,17300700," so there we go so i'm enabling tracing"
17300700,17305420," and i'm executing this entire stuff so everything looks okay"
17305420,17310380," so machine from a file i'm providing the input"
17310380,17317500," so here's the input um i also push the input like one so this is what we have to put there"
17319260,17324460," and we're executing the machine um did it print anything"
17324460,17330460," yeah we can we can take a look at the output then get output"
17330460,17337340," all right so multiply less than if equal plus adjust relative base adjust relative base"
17337340,17344220," uh read equal if not equal checks a bunch of things writes a bunch of things"
17346700,17347660," oh boy"
17347660,17352780," do i just write them incorrectly"
17352780,17356380," no"
17356380,17364460," by the way when i do this thing do i use anywhere"
17369820,17377180," wait wait a god damn seconds insert"
17377180,17380220," uh"
17380220,17383340," insert"
17383340,17388940," it takes a key and value"
17394780,17398140," key key value key value key value"
17398140,17401900," trace value don't see"
17401900,17409580," it's impossible to debug at all like holy"
17409580,17409820," shit"
17409820,17416220," so the thing also is that it doesn't even react to any of these things like it's just"
17416220,17420940," doesn't care unless it might be negative"
17422380,17427900," and of course for negative values you have to it's something so goddamn stupid"
17427900,17432460," what is it what is it what did i miss what did i miss what did i miss"
17433900,17446300," i missed something so goddamn stupid"
17446300,17449500," so how does it even adjust them do we do we want to print how it adjusts them"
17449500,17454860," so how does it even adjust them do we do we want to print how it adjusts them"
17454860,17463500," so how does it even adjust them so how does it even adjust them do we do we want to print how it adjusts them"
17464780,17480380," um we can try to print it so something like d and we can uh just print how it exactly adjusts this into and stuff"
17480380,17486700," uh adjust relative base then three three three why does it do that three times"
17487660,17490460," um okay"
17490460,17501980," though it doesn't read anything up until it adjusts the address so it does multiplications and checks"
17501980,17507100," something and then it reads right only then it reads"
17507100,17519180," let me read the description one more time maybe i'm missing something very important"
17520940,17525580," missing one key feature it needs to support parameter relative mode parameters in mode 2"
17525580,17529100," parameters interpreted as a position"
17529100,17534060," uh yeah i'm sorry jang"
17534060,17543180," such complex programs in haskell are almost impossible to debug"
17545420,17554540," uh yeah so we have very similar to parameter position i don't know relative basis 2000 uh"
17554540,17557500," copy with some"
17557500,17562780," i don't know what i missed samples work"
17562780,17572140," samples works the input doesn't work yet again and the thing is the last time the samples worked"
17572140,17578220," an input didn't work it was because of some stupid happening in haskell with laziness that's literally"
17578220,17583660," what it was and because of that it makes me super suspicious like what do i do like how do i know"
17583660,17589900," that it's not haskell being haskell yet again um and i did everything correctly like how do i know that"
17591180,17602940," there's no way for me to know that uh unless we can try a pretty interesting idea right of switching back"
17602940,17609500," to uh arrays right let's actually switch back to arrays uh so i'm switching back to a race"
17609500,17612300," uh"
17612300,17620780," so it's going to be integer and let's me see so and for the arrays i'm really glad that i actually didn't"
17621180,17630060," uh remove this entire thing uh expected memory got uh array but that's exactly what it has to be"
17630060,17641820," uh let me see 27 uh expected memory got array it is memory is the array whatever what are you talking"
17641820,17648300," about i think i know what it is generic length that's what it has to be there we go it worked"
17649180,17660460," quite nice um so okay so if we try to uh put one in here right put one in here this is exactly what i"
17660460,17672060," expected it actually you know uh failed miserably what we can do here uh so this is a memory from file"
17672060,17680300," right memory from file um i can try to do something else uh i can try to read this entire thing this is"
17680300,17688140," how we try to read it right so this is how we are reading it and map and i cannot do that because i need"
17688140,17693660," to also import all of this stuff all right one more time please there we go what"
17697260,17703020," input input where am i am i am i in the right place i'm i'm in the right place"
17703020,17710620," what do you want from me"
17710620,17717900," what do you want for me"
17721820,17729020," this is the only thing i want um just give me input txt please no parse what the"
17729020,17736300," are you talking about holy okay oh wow i know i know what it's talking about i know yes i'm so dumb"
17736300,17739180," it doesn't have enough type information yes yes of course"
17743100,17748140," okay okay so the next thing i want to do after that if i want to actually replicate"
17748140,17757180," replicate uh 1000 zeros or something this is exactly what i want to share uh replicate"
17757180,17766060," 1000 zeros right and uh the thing i'm going to do here i'm going to just do uh plus plus i'm going to"
17766060,17773020," just append them at the end of this entire thing right so i have a memory and i have additional"
17773100,17778460," thousands things i can actually generate as many of them as i want for example five thousands doesn't"
17778460,17788780," matter cool so we're using array um so we're using arrays so then memory uh from image so that should"
17788780,17795260," give me a memory from image and then we can have machine from memory right so here's the machine from"
17795260,17801340," memory cool uh so then i can push an input on this thing so i'm going to provide the input and then i'm"
17801340,17806620," going to get the input to verify that it compiles and it gives an input okay then i can try to execute"
17806620,17814380," this entire thing uh and to be fair uh it's kind of useless but i can just get the output all right"
17814380,17820620," so i got the same output that's what's interesting i got the same output even though i'm using a"
17820620,17827980," completely different memory model right so that means there's problem not with the memory but probably with"
17827980,17836140," how i handle this instruction generally so and i wonder where exactly i have a problem i literally"
17836140,17846860," don't understand so"
17846860,17853660," two three would suggest that opcode three doesn't work correctly with the parameter mode two according to"
17853660,17857980," the description oh i didn't think about that i see"
17857980,17867180," that's a good point"
17878860,17889340," but we're doing read"
17889340,17906620," so i take the input it's a it's a destination isn't it it's a destination and usually destinations like"
17908860,17916380," that's a destination isn't it's a destination isn't it it's a destination so i don't know why would it"
17916380,17920860," be a problem um so let's go back then"
17920860,17926780," so where do we where did we have a call of code three i think it was somewhere here"
17928780,17934860," i don't remember where we head up code three"
17934860,17942780," no not here"
17942780,17950780," um"
17950780,17962380," does anyone remember uh doesn't use the param mode"
17962380,17965740," yes exactly neither neither do i"
17965740,17976220," so that's the interesting thing like sure i don't use it cool um where is my price now so"
17977260,17980540," yeah i just take this thing as an address"
17980540,17984220," right so this is the destination"
17984220,17992380," but oh the destinations should be actually i see"
17992380,18000140," they could be positioned oh you see oh my god thank you so much thank you so much"
18000780,18002140," i see what what what that means"
18002140,18012780," yes yes thank you so much that makes sense it it wasn't a problem because uh we only had"
18012780,18019260," uh pose and im and im doesn't make sense for the destinations and that's why i always treat it as a"
18019260,18030700," pose right but rel also makes sense for the destinations yes oh my god okay so uh let's take a look at this"
18030700,18033100," so it's so it's actually means that um"
18033100,18036060," um"
18036060,18038060," oh"
18038060,18041020," oh"
18041020,18041660," shit"
18041660,18043900," so we have to"
18043900,18050940," yeah it's it's actually super dumb like is it something that you"
18050940,18054540," no i almost finished by the way don't worry about it i almost finished"
18054540,18060620," um so we just need additional function right so this is obtain parameter obtain dst"
18060620,18068460," right so it's going to be a machine uh so this is a parameter this is a mode of the parameter"
18068460,18073900," and uh we're going to have an address right so that's basically what it does it's a obtain dst"
18073900,18082780," machine we get memory we don't really need memory we only need it depends on what we need actually"
18082780,18091340," so parameter and if it's position right um so what is the mode uh pause"
18091340,18100860," i forgot what pause means im im means the median and pause means position right or does it mean anything"
18100860,18107500," else i remember so but i have to take it like uh uh as it is so i have to take it as it is and um"
18108940,18117740," then if i have a relative one i have to do plus base and uh then i have a machine uh and then i'm gonna"
18117740,18128540," do actually i'm gonna do machine to get base base uh and then if i have immediate one error"
18130540,18142140," immediate uh mode does not make any sense for the destiny uh destinations there we go uh so we have"
18142140,18149740," obtained parameter we have obtained destinations right so um so this is the destination"
18153820,18161260," so we have m1 m2 and m3 um so obtain parameter"
18161260,18176700," okay i'm doing the right thing uh machine m3 it will give me uh it will give me the right thing here"
18176700,18191500," hopefully hopefully uh obtain parameter machine m3 dst so that means we have this problem like pretty much"
18191500,18212540," everywhere uh obtain dst yes yes yes thank you obtain dst machine i'm a little bit tired just a little bit"
18212540,18215500," this is my third problem for today so this is the third one"
18217820,18220140," and it's not even part two i'm still on part one"
18220140,18230380," am i i don't remember yes i'm still in part one uh all right so"
18230380,18240060," could you please not repeat the same question over and over again"
18241740,18250140," uh all right so this team obtain dst machine and three"
18250140,18260220," all right oh and i actually applied it here that's very interesting"
18260220,18265980," and here we have to do obtain dst so is it dst"
18267820,18269900," uh adjust uh adjust yeah it's actually parameter"
18269900,18275740," don't experience in general that's true"
18275740,18282300," god damn it uh okay parse error mojo oh my god come on"
18282300,18287100," uh so what's wrong here ah yes sure"
18287100,18292700," obtain dst variable not in the scope"
18293820,18303260," up train okay it's a really interesting word we've got there up train dsts"
18303260,18313260," up trains it sounds really like dude uh all right so uh can we try to do something like this now"
18313980,18319260," and is it going to be a first try uh is it going to be a first try"
18319260,18324780," it was first try thank you so much and then you're thank you thank you thank you"
18324780,18331260," so that was the problem actually i just didn't realize that it has to be like"
18331260,18340780," the new mode makes sense uh for the destinations so i never actually implemented that abstraction for"
18340780,18347500," the destinations and that was probably the the whole point of all of that um also i want to go back to"
18347500,18356620," the uh to the hashes right so you don't have to you know do all that um okay so we're gonna do machine"
18356620,18365420," from file and it's gonna be just an input just an input there we go um and then i'm gonna try to um"
18365420,18371180," push input one push input one and um"
18371180,18381820," uh and then we're gonna try to execute uh and that didn't work so this is exactly why i want to have a"
18381820,18391180," hash maps right we're gonna do that uh-huh so here's the hash maps hash map uh hash map"
18391180,18399580," and the operations for the hash maps are going to be like this okay so is it going to work hm from"
18399580,18401420," yeah we have to restart this entire thing"
18403820,18408540," uh hm insert so you don't have hm oh yeah forgot to do this thing"
18408540,18418860," what do you ah i need it okay all right all right all right come on so and get output"
18418860,18424220," yeah it worked cool now we can use the uh hash maps and shit"
18426940,18436780," part two uh you now have a complete int code computer finally you can lock on the service"
18436780,18441980," distress signal you just need to boost your sensors using the boost program"
18441980,18447820," the program runs in sensor boost mode by providing the input instruction the willy 2. once run it will"
18447820,18452460," boost the sensor automatically but it might take a few seconds to complete the operation"
18456940,18461660," in sensor boost mode the program will output the single wheel with the coordinates of the distress"
18461660,18466300," signals uh run boost program in the sensor boost mode what are the coordinates of the distress signal"
18466300,18481660," um okay few seconds i'm using haskell where i'm kind of forced to use hash tables few seconds"
18486940,18493100," oh wow is my stream alive is my stream alive"
18493100,18501500," uh oh okay it it worked okay i thought it's gonna it's gonna die uh"
18501500,18511100," like i thought it's gonna be like very like heavy but apparently it wasn't that bad"
18512140,18517740," uh actual first try thank you so much for for nine year old uh to nine year old who actually helped me"
18517740,18523660," like notice the thing that i didn't take into account holy thank you so much um"
18523660,18531900," all right we solved three problems apparently that's pretty cool uh so i think i'm gonna do i want to"
18531900,18539020," remove the arrays i think i'm gonna remove the arrays and then at any point i know that if i need to"
18540140,18549020," implement something there i'll have to just have some sort of an abstraction there right so yeah so now"
18549020,18560700," we're using only um hash maps by the way i can try to use strict ones i wonder uh okay but shut up okay"
18560700,18568540," uh all right so import uh yeah stop uh is it gonna be faster"
18570620,18576620," yeah yeah debug trace yeah i had to use it at some point um i wonder if it's gonna be faster"
18576620,18583180," yeah it's gonna be it's it wasn't that fast but at least it produces them well this one was actually"
18583180,18590860," yeah it was still fast whatever um so yeah this is our machine it's pretty impressive not gonna lie"
18591820,18605100," uh uh so complete"
18605100,18611100," int code machine there we go so we have a complete int code machine"
18613100,18617980," um so another thing i want you to actually go through all the solutions that potentially use"
18617980,18625340," um our int code because we are sharing in code right so we're sharing in code uh that means after"
18625340,18631660," changing some of these things uh we might have actually broken something so let's actually go"
18631660,18640300," and just do all of that ghc uh i uh what this is not what i want it's gonna be main uh hs"
18640300,18642780," and it seems to be working"
18642780,18646860," uh huh"
18646860,18651980," okay seems to be working about the third one"
18655340,18658780," okay so far so good it's kind of interesting"
18658780,18665020," none of them are failing so which is kind of sus"
18665020,18670700," okay so now we're talking so for this one we'll have to do package"
18670700,18680460," unordered containers so that's what needs to be done and um variable not in the scope main"
18681820,18684380," uh huh really"
18684380,18689420," main so we have something wrong with five"
18689420,18695180," where what"
18695180,18703580," unordered containers"
18708060,18714540," holy shit okay um do i have to put it somewhere wait a second maybe"
18714540,18724620," no it's it's actually it fails in unordered container or something like that"
18724620,18732860," um i'm super confused so maybe run ghc does not accept the packages"
18733900,18738700," right but i can do something like the ghci uh package unordered"
18738700,18744700," unordered containers main hs"
18744700,18746860," uh and"
18746860,18750140," all right so this is what i wanted to see"
18750140,18753100," uh this is literally what i wanted to see and"
18753100,18758460," uh now i can just try to debug that so let's go to the five uh fifth one"
18759100,18767660," um and in here what do we have seven uh all right so identifier"
18767660,18773580," uh so this has to be a value right so this is a value and this is a value"
18773580,18778700," okay so that works but we still don't know how to properly run this thing then"
18780140,18782940," uh is it possible to just build this entire stuff"
18782940,18788940," uh but i mean if we're gonna build it you'll have to provide this thing"
18788940,18790540," you'll still have to provide the package"
18790540,18796780," um package and ordered containers"
18799260,18804780," uh-huh all right so it still works so that means we'll have to take that into account in the"
18804780,18807500," in the rest of the stuff um"
18807500,18812780," okay six works and seven"
18812780,18819660," uh make this is not the one did it okay so that fails"
18820140,18823260," ghcid so let's actually go through that um"
18823260,18831180," cool uh so what was that it was seventh"
18831180,18837820," seventh one main dot hs uh 15"
18837820,18847660," 15 so what is it doing oh yeah okay so this thing has to be a value so this is a value now because we"
18847660,18858300," have abstracted that way uh so run amp loop all of that is a value and that is a value uh 26"
18858300,18868860," setting and setting has to be a value well that's true 38"
18868860,18877420," uh part two we have to have a value and all of that has to be a value as well so because uh yeah"
18877420,18884220," we abstracted the the specific things we store there away so all of that values and that is a value too"
18884220,18888460," cool so now if i do ghc"
18888460,18897420," so that's that works uh now zero eight"
18897420,18901020," ghc let's build that"
18902780,18909980," eight works cool that's actually pretty cool uh ghc that should work as well"
18909980,18918300," that is oh okay and and for nine we actually didn't clean it up for nine we didn't clean it up so in main"
18918300,18921660," oh okay"
18923820,18927180," uh this one is interesting so uh yeah we'll have to do it like this"
18927180,18937020," um so uh it was so simple i solved it in ripple right um so i need to do um machine from file"
18937020,18948060," from file and i need to do input txt so here is the machine right then i uh push an input into the"
18948060,18956140," machine the input is going to be just one and then it just executes the machine uh get its output uh and"
18956140,18966700," also head of its output and uh then i just print it print f part one uh d and there we go so and in"
18966700,18972940," here's the part two is going to be just providing two that's it so that's the whole solution of this part"
18973980,18981980," uh which is kind of interesting so we also have to import text printf all right cool"
18981980,18990220," and i forgot to uh provide new lines of course"
18990220,18998140," oh look at that actually the second part is way faster when you compile uh this thing to native code"
18998140,19003660," look look look look look look second part it was faster it was way faster i should keep that in mind"
19003660,19008060," by the way every time if if i'm going to have something very slow if i compile it it's probably"
19008060,19014460," going to be way faster so what about um o3 you can also do all three right so which enables more"
19014460,19018380," optimizations and shit uh right so it compiles slower"
19021020,19029100," imagine the the uh program compiles slower than it would have been if you run it without optimizations"
19029100,19031180," think about"
19031180,19036140," the irony of the situation oh"
19036140,19047980," half of a second this competes with c holy wow nice"
19049260,19053580," yeah i should actually start compiling husk more because like i got used to working it"
19053580,19057980," with it in ripple where it's just literally interpreted and it's so slow but when i compile"
19057980,19063660," to native code it's what the um that's pretty cool"
19063660,19075260," uh to to to that's pretty epic um when it's faster than rust and safer than rust"
19078140,19089660," all right um back back back port solutions to new machine there we go"
19089660,19095660," um imagine the day they invented a lisp compiler"
19095660,19103180," what do you mean sbcl sbcl is a disk compilers probably no it can compile lisp to native code and"
19103180,19108300," i think but then i don't remember it i think it has like a jit or something yeah so high performance"
19108300,19113340," common vsp compiler uh it's open source free software with permissive license blah blah blah"
19113340,19121740," uh anyway so zero now i also forgot to add a readme here readme md"
19124220,19135820," so day nine solution day nine solution and there we go it's kind of it's kind of interesting by the way"
19136860,19144940," uh the husky streams on twitch usually on average get less viewers than any other of my streams"
19144940,19154540," but on sodium woods these husky streams actually take like get more views on average than any other"
19154540,19162700," sodium vote that's very interesting yeah it's so weird like twitch doesn't like husky but youtube audience"
19162700,19171820," does uh so yeah it's really really interesting um so i think two hours for you is going to be enough"
19174220,19181740," uh to be fair a little better haskell programmers are too busy looking for haskell job yeah i actually"
19181740,19188860," started watching your videos because of haskell huh interesting so which made me like i at the"
19188860,19193820," beginning like i was like i don't want to stream haskell but then i realized that i'm just use i'm just"
19193820,19198860," doing that on the wrong platform right so i'm just doing that on the wrong platform"
19199900,19208620," so maybe i should do haskell stream vm most popular would yeah but i'm talking about average though"
19208620,19214620," targeting youtube audience and twitch which makes sense by the way targeting"
19214620,19222540," youtube audience and which makes sense if you upload votes on youtube it does make sense right so yeah"
19225580,19234460," uh expected uh expected uh results um so i've known you for a long time on youtube but just got here"
19234460,19240140," yesterday to watch your streams well hello welcome welcome welcome welcome welcome i suppose you know me"
19240140,19246060," from my main youtube channel because i have a secondary youtube channel where i upload all of my uh votes"
19247420,19257980," uh so yeah you can also follow me there um okay so this is the expected results and uh"
19257980,19269020," main channel yeah it's kind of like i don't really post that very often on my main channel because the kind"
19269020,19276540," of content i produce there is really time consuming and i also set up myself a really like high quality bar"
19277260,19285100," uh so uh which sometimes like i cannot come up with a good topic that's worth uploading there so"
19285100,19293020," maybe you should get out of that mindset and start just you know posting there um yeah so the problem"
19293020,19297900," with my main channel is that i think i have to post something like very high quality there otherwise it's not"
19297900,19306460," gonna uh go really well so maybe you should say it let's just post there yeah that'll be interesting"
19307260,19325820," i think i want to add uh day nine solution all right let's just push push that right into the repo"
19325820,19333260," shazabak hello so the thing i want to do here i'm going to do ghc this package on"
19333260,19340620," port port containers uh and then i'm going to do just one so i'm going to slightly update"
19340620,19350060," uh the instructions to reflect our current state of the things update quick start instructions"
19350060,19355900," and i'm going to push that right into the repo you can find the source code of all of these things here if"
19355900,19363420," if you want to of course if you want to so day 10"
19363420,19371900," uh anyway i don't know so i've already solved like three problems"
19378620,19386380," another one another one another one um yeah they do get a little bit more difficult will you review"
19386380,19394780," other solutions for problems then you already solved uh so solutions of someone else why why would i do"
19394780,19404220," that so why why would i do that what what exactly do you want to get out of that review like what"
19408620,19416940," is interesting i think but you should look at it with a fresh mind yeah i think i think so um"
19416940,19428220," so if you think i'm somehow magically gonna tell you what you're doing wrong i'm gonna tell you like a very"
19428780,19435420," you know big secret on software development programming problem solving and stuff like that"
19435420,19442860," look as long as you have this your solution is correct no matter what the other people tell you"
19442860,19450220," as long as you have this your solution is correct language doesn't matter text editor doesn't matter"
19450220,19454860," algorithm doesn't matter indentation doesn't matter splitting by files doesn't matter"
19454860,19461660," nothing fucking matters that's the only criteria there's nothing to review literally nothing to"
19461660,19467740," review if somebody tells you otherwise just don't don't listen to them ignore them this is the only"
19467740,19475980," criteria that's how world works so if you want to get better at coding get better at getting these"
19475980,19480540," things you want to get better at coding get better at getting these things and i don't mean specifically"
19480540,19486300," these things usually like when you're solving something there is a quantifiable uh output right so you need"
19486300,19491820," to solve the problem right you solve the problem you do this correctly because you solve the problem"
19491820,19499500," that's it don't listen to anyone right none of that that that everybody preach"
19500620,19506460," matters you solve the problem you did it right uh so"
19506460,19509660," all right"
19509660,19515100," version goes we solved three problems you can find the source code of all the solutions here"
19515100,19524380," uh so um and it is time for me to go it's time to go thanks everyone who is watching right now i really"
19524380,19531180," appreciate it uh have a good one and i see you uh guess when guess when i'm gonna see i'm gonna see you"
19531180,19537420," all uh tomorrow tomorrow we're gonna do a random one-off stream that means i'm gonna uh pick a random"
19537420,19544460," topic and i'm just gonna stream it for for one streams so the topic is secret you'll have to join tomorrow to"
19544460,19551020," find out what's gonna be the topic that's right so i'm debating you to join tomorrow uh check out uh our"
19551020,19557820," schedule for uh more different streams uh more different projects we're working on uh we're working"
19557820,19564460," on so all sorts of projects also check out our votes channel where we upload um uh the archives of our"
19564460,19569180," streams this stream is going to be there but tomorrow we upload them on the next day and also check out our"
19569180,19575500," discord server for offline discussion with the community uh and yeah that's it that's it for"
19575500,19576940," today boys and girls love you"
19599180,19629160," Thank you."

start,end,text
160,6320," Hello everyone and welcome to yet another recreational programming session with Mr. Zozing."
6320,12240," So today we're going to do another C3 development stream, right, and we're going to continue working"
12240,17600," on the WebSocket library that we started to work some time ago, right, so the first episode of that"
17600,24240," is going to be in the description, right, so essentially what we did, we took my old library"
24240,31280," CWS, which is basically WebSocket implementation in pure C, which I did for educational and"
31280,36000," recreational purposes, and what I did I just translated it to C3, right, so then off screen"
36000,42560," I just polished it up a little bit, and now we have sort of like a, you know, rough outline of the"
42560,49280," library. Unfortunately, as of right now, it contains only the client part, so the only thing you can do"
49280,53760," with that library is connect to the server, send some messages to the server, and receive some messages"
53760,60720," from the server, but you can't write the server, right, so, and to be fair, client and server are"
60720,68240," not that much different from each other, they use the same approach, the same framing of the messages"
68240,75920," and stuff like that, but the only difference between them is how they handle the handshake, right, so the"
75920,82400," thing about WebSocket, by the way, is that the handshake of WebSocket looks like HTTP request,"
83280,89920," right, it's rather interesting, actually, so it intentionally looks like HTTP request, and then,"
89920,98720," right, it's basically an HTTP upgrading to WebSocket, and then it starts, it continues working as TCP protocol,"
98720,105360," right, so essentially we can take a look at how the client does the handshake, right, so in the library itself,"
105360,114080," so here is the example, right, it's a very simple example, which I polished it up, which I polished up,"
114080,134880," and I started to use, actually, a pretty cool module within C3, std.net.tcp, it's much easier than whatever I was trying to do at the end of the previous stream, right, but whatever I was trying to do at the end of the previous stream, right, but whatever I was trying to do at the end of the previous stream, I tried to do that intentionally, because I wanted to translate code pretty much one-to-one,"
134880,164400," one-to-one, so to not introduce any additional weird variables, which I potentially will spend hours debugging for no reason, if you know what I mean, right, so first thing I want you to do, I just want you to translate thing, like, one-to-one, see that one-to-one translation just works, and then keep improving it, right, so that makes it more manageable, if that makes any sense, right, so, and, yeah, so there is a pretty cool,"
164400,185960," pretty cool module in here, which just allows you to create TCP connections, right, so, essentially, how we do that, you just do TCP connect, you provide host, you provide port, and you get the TCP socket, so, the way our library works, you just rub the TCP socket into WS, into WebSocket, and there you go, you got a WebSocket that you can work with, that's it,"
186400,192200," it's that easy, so, it's that easy, so, internally, WebSocket library actually does a lot of temporary"
192200,201760," allocations, C3, being a modern killer of C and C++, has its own temporary allocator, it's kind of a meme that"
201760,209800," originated in game development community, and I think it got really popularized by Jonathan Blow, right, in Jaya language, and stuff like that,"
209800,221300," but a lot of the C, C++ killers, they have this temporary allocator, where you can just, like, allocate, like, whatever, right, use that, and forget about it, and then,"
221460,228860," you can periodically clean up the entire temporary allocator, which is rather convenient, right, so, this entire"
228860,236220," approach is insanely convenient, so, it's almost like using garbage collector, where you manually control when the"
236220,242860," thing is going to be collected, right, it kind of feels like that, it's really convenient, right, and essentially, all the"
242860,250460," allocations in the WebSocket library, they happen in the temporary allocator, and what you have to do, you have to"
250460,255460," periodically clean it up, right, so, because when you write a WebSocket application, you will naturally have"
255460,262520," an event loop, and essentially, all of the allocations are designed to be deallocated at the end of that event"
262520,269140," loop, right, so, the library expects you that you're going to deallocate everything at the end of the, at the end of the"
269140,275440," iteration of that loop, right, so, and because of that, here, we just take the temporary allocator, and we just"
275440,284580," take a mark, so, mark is essentially snapshot, right, if I understand correctly, the way it works, right, is that allocator is just an"
284580,293440," area, right, you just allocate some, a bunch of bytes in there, then you allocate a bunch more bytes, and maybe a bunch more"
293440,301380," bytes, so, with different symbols, I just basically denote different allocations, so, and essentially, mark denotes where the"
301380,313380," allocation was, right, so, basically, same in the current mark, right, then I allocate a bunch of things, like so, and then I use this mark to reset the temporary allocator, as"
313380,322520," you can see, then, at the end of the iteration, I take the mark, I say, reset that temporary allocator to that specific mark, and what happens, it just, like, resets the mark of the"
322520,331520," temporary allocator to that, and the next allocation is going to override the previous allocations, this is how I understand, I didn't really look into how exactly this"
331520,342040," temporary allocator in C3 is implemented, but I, myself, implemented my own temporary allocators, and it pretty much ended up having the same API, right, so, because of"
342040,350740," that, I assume it kind of works in a similar fashion, right, so, that's how it works, and the first thing we have to do after we establish"
350740,359380," connection, and so on and so forth, we do the client handshake, right, so, this is the function that we're interested in, so, let's actually take a look at it, so, the"
359380,367080," implementation of this specific function, right, so, we pass the host in here, right, host is very important, and as you can see, the"
367080,376820," handshake that the client sends to the server looks exactly as an HTTP request, right, it's actually really funny, but it's, it's not really"
376820,389080," HTTP protocol, it's just WebSocket protocol, the handshake of which happened to look like HTTP request, right, so, it's kind of cool, so, in"
389080,396360," essentially, we have to say it's a GET, it's a GET request, right, so, we provide the host, and this is why we pass the"
396360,402680," host in here, and we're requesting to upgrade the connection, right, as you can see, so, we're upgrading the"
402680,412480," connection, right, and we have to provide the WebSocket key, and also WebSocket version, so, and the WebSocket key is"
412480,427260," rather an interesting concept, it's a base 64, massive, massive reverb, really, when did it start to happen, when did it start to happen, I can't hear anything,"
427260,444080," no reverb, who is this person, chat, ban them, like, okay, so, this is, this is a straight-up timeout, timeout, Zubernet, one hour,"
444080,461220," alright, so, um, okay, so, probably opened two tabs, literally opened two tabs, streamer, fix, goddamn ban, like, that, such people"
461220,470140," should be fucking banned, out of the civil, uh, community of recreational programmers, one guide, exactly, honestly, like, fucking"
470140,477260," permabent, it should be not just timeout, fucking permabent, I do not fucking tolerate this kind of shit,"
477260,495820," um, alright, so, uh, now, so, this is very interesting, uh, WebSocket key, and WebSocket key is, um, literally for, um, not really for security reasons,"
495820,507740," by the way, literally not for security reasons, base 64, uh, right, just a second, uh, uh, so, it's just a, like, a random text,"
507740,516700," as you can see, it's actually a random text, so, and essentially, uh, what a server is supposed to do with that key,"
516700,528000," the server is supposed to take that key, right, uh, take that key, and, uh, essentially decode it, uh, essentially decode it,"
528000,538600," uh, append some, I think, GUID, some sort of a GUID into that key, uh, decode it into base 64, and send it back as a response to the handshake,"
538600,545080," right, so that's what it's supposed to do, and the reason why this security key is even in the place,"
545080,554300," right, why it is even in the place, is to prevent, uh, accidental, uh, accidental upgrade of the WebSocket"
554300,561700," protocol, right, because it looks like a HTTP request, so that means other HTTP clients may start sending"
561700,569940," things and accidentally initiate, uh, you know, uh, WebSocket protocol, so to make it not accidental,"
569940,574740," they require this sort of, like, exchange of the keys, and it's not really for security reasons,"
574740,581380," uh, I thought that this is for the replay attack prevention, maybe it is, but we can take a look at"
581380,590100," the RFC, actually, we can take a look at the RFC, uh, right, so we can literally just search for that key,"
590100,599540," uh, right, uh, let me see, let me see, so protocol overview, so the handshake, I literally use the"
599540,604980," same key from the RFC as well, the protocol has two parts, a handshake and data transfer,"
604980,610180," the handshake from the client looks as follows, right, uh, right, and the handshake from the server"
610180,615940," looks as follows, right, so this one is a little bit bigger, so we can actually try to decode what the"
616500,621060," response from the server is supposed to look like, it's kind of interesting, look at that, it's a 101"
621060,628500," switching protocols, uh, that's a very interesting response, isn't it, um, so let me copy paste this"
628500,638260," entire thing, so this is going to be echo, uh, okay, base64d, oh, and it looks like garbage, that's very"
638260,646580," interesting, so, and I wonder what exactly, xxd, uh, yeah, so it's probably, it's probably not"
646580,652180," concatenation, so, but what we can actually read, uh, what it's supposed to do, the lean line from client,"
652180,658820," uh, follows the request line format, uh, basically, yeah, so it's basically http request, the request"
658820,666180," status line, status line products are defined in RFC, blah, blah, blah, blah, so, uh, I'm looking for the"
666180,677220," key explanation, opening handshake, so the opening handshake is intended, uh, uh, okay, so I'm looking,"
677220,684900," I remember there was some GUID being involved, uh, okay, so to prove that handshake was received, the server"
684900,691220," has to take two pieces of information and combine them to form a response, okay, so we missed something,"
691220,701780," we missed something, we missed something, that's a lot of text, uh, all right, so maybe I can find"
701780,713140," more stuff in here, so, uh-huh, nah, too much to read, honestly, too much to read, but this is something that"
713140,723220," we'll have to implement anyway, right, so, um, probably I should read all of that, uh-huh, the request URI,"
723220,729860," additional header fields are, uh, to select options in the protocol, typical option available,"
729860,738420," original, blah, blah, blah, the header, uh, to provide service, inform, finance has to prove that the client"
738420,744980," is in the received client handshake, so the server doesn't accept connection, uh, or not, okay, so finally,"
744980,750820," the server has to prove to the client that it received the client's WebSocket handshake, so the server"
750820,755140," doesn't accept connections that are not WebSocket connection, this prevents an attacker from"
755140,763060," tricking WebSocket, okay, so this is, this has something to do with attacks and stuff like that, so, uh, packets from that, or blah, blah, blah."
763060,768500," To prove that the handshake will receive the server has to take two pieces of information and combine,"
768500,774740," uh, the, uh, the formal response. What are the first two pieces? The first piece of information comes from the"
774740,783540," circuit. Ah, I think I misinterpreted this sentence. I actually read it so it felt like they described the"
783540,789220," two pieces of information before, so it feels like I missed something. Okay, so they are describing the pieces"
789220,795860," of information in the, uh, in the future text, okay? I just misread it and I was like panicking. Do I really"
795860,800100," need to read all of that wall of text just to know what all of these two pieces of information are? They're"
800100,804980," going to explain that in the, in the next text, okay. The first piece of information comes from the, the key,"
804980,811220," right, so this is the key we're receiving. Uh, for this header field, the server has to take,"
811220,820580," uh, okay, so for this header field, the server has to take the value as present in the header field, uh,"
820580,828740," base64 encoded version, version, version, minus any leading and trailing white spaces. Okay, so whatever."
828740,836420," And can continue, uh, this with the global unique identifier GUIT, this specific GUIT in the string form,"
836420,841540," which is likely to be used, uh, which is unlikely to be used by the network endpoints that do not"
841540,849380," understand the WebSocket protocol. Uh, a SHA264 hash, the base encoding of this concatenation and then"
849380,860100," return to the server. Okay, uh, very interesting. So you take this key, you can coordinate it with GUIT,"
860740,869380," you take SHA1 and base encoded. So if you are a server, that's what you have to do in response."
869380,875780," If I understood that correctly, I need to read that one more time. Do we decode that thing or do we not"
875780,881940," decode that thing? So for this header field, this has to take the value as present in the header field,"
881940,890100," the base64 encoded version minus, uh, all of that and concatenate this with the global unique identifier"
890100,896900," this in the string form, which is unlikely to be used by the network endpoint to do not understand"
896900,905700," WebSocket protocol. Uh, a SHA1 hash, a SHA1 hash base64 encoded of this concatenation is then returned to the"
905700,914260," server handshake. Right, so that means server does not try to base64 decode that, it just takes that,"
914260,924420," concatenates that and just does SHA1 on that. Right, so that's what it is. It does look like some sort of"
924420,932980," assaulting, right? So, uh, concretely if an example above the header field has the field this, the server would"
932980,940580," concatenate this string, uh, to form this, right? This is the concatenation. The server would then take"
940580,948420," the SHA hash of the string giving the value blah blah blah. The server would then give the SHA hash of this,"
948420,958900," given this thing. All right, so that's pretty cool and I think that's the SHA, so B37A, uh, B37A for, uh,"
958900,967380," like 4F, uh, 2C and so on and so forth. Right, so that's pretty cool, that's pretty cool. All right,"
967380,972900," so, and if we're going to be doing the, uh, server implementation, the server handshake, we'll have to"
972900,984900," implement all of that? Mm-hmm. So, if I understand correctly, uh, C3, by the way, uh, C3, uh, does in fact"
984900,991540," have base64. All right, so we're going to do grab, uh, can I, yeah, I probably can do something like"
991540,1001220," find f name, uh, base64, right? So, base64, so here is the base64, so we can, uh, do this kind of thing,"
1001220,1008900," but do we have SHA1? Uh, that's a good question, actually. Probably not. We can try to search for SHA1,"
1008900,1021300," or maybe it has to be SHA1. All right, what the fuck, so we have everything. Wait, wait, wait,"
1021300,1032180," for real? Right, so we can just do that? Uh, okay, so hash SHA1, so, and it's implemented by learner himself,"
1032180,1038820," right, so, uh, yes, yes, yes, yes, so, and it's just like, that's, that's pretty poor. Uh, that's"
1038820,1042980," pretty poor, so we can, we're going to use that. Thank you. Thank you, learner. Thank you so much for"
1042980,1048660," just, like, implementing all the necessary pieces, and I suppose SHA1 is not that difficult to implement."
1048660,1057620," It's just like 257 lines of code, right? So it's a pretty simple hash, I presume. Uh, right, so implementation was of"
1057620,1068180," uh, uh, C, rate SHA1 C implementation. Okay, so it was basically translated to C3. Okay, so, um, yes, yes, yes, yes."
1068180,1079380," So, let me try to maybe, um, test how the handshake, how, um, the handshake is usually established by nodes"
1079380,1088900," specifically, right? So, I'm really curious about that. So, C3 WS C3. Uh, so, as of right now, we literally"
1088900,1096100," ignore the server's handshake. Like, we just ignore it. Um, and, um, so, we just check that it returned"
1096100,1101780," something at least, right? So, we only check that. Uh, but apart from that, we basically ignore it. One of"
1101780,1107220," the things we can try to do in here, we can try to simply print this entire stuff, right? So, here's the"
1107220,1113780," buffer size. Uh, I can now take the buffer, take a pointer to that thing, and maybe, you know, just to"
1113780,1120580," take a slice from zero to buffer size. So, here is the slice, which is, which I can then try to print."
1120580,1127620," So, this is what we can do. So, it's going to be IO print, um, you know, print, print N, right? So, this"
1127620,1132100," is how we're going to be doing all of that. Maybe I'm going to do print FN. So, it's going to be S."
1132100,1139140," Maybe I'm going to say hand shake from server, right? So, it's going to be S and that's about it."
1139140,1147780," So, let me try to build the whole thing. It doesn't build because we do not, in fact, uh, we do not,"
1147780,1156980," uh, do anything. We do not import STD IO. We need to do that. So, it can be STD IO, uh, like so. And, uh,"
1156980,1163220," there we go. All right. So, let me reset this and I think I'm going to actually start all of that in"
1163220,1171860," TeamUX. Uh, all right. So, let me just go there because it's going to be continued. So, it may"
1171860,1178020," actually be weird, right? So, why the do I use TeamUX if I just use Emacs? Uh, I could have just"
1178020,1183220," done all of that in Emacs. The problem is that Emacs is absolutely horrible terminal emulator. It's"
1183220,1191060," actually slow. Uh, so, uh, right. If you want to like use like a good terminal emulator, just don't"
1191060,1199060," use Emacs, honestly. Just don't fucking use it. Uh, okay. So, let's actually start maybe Coil. Uh,"
1199060,1204340," right. And the Coil is the game that we're developing and it has its own, uh, WebSocket server. I think I"
1204340,1210500," need to put that thing in the description, right? So, in the references as well. And we are developing this"
1210500,1214420," library for that specific game. In the future, we're going to be integrating this library into the game."
1214420,1222340," Uh, right. Just don't use Emacs, uh, Coil. Yeah, exactly. Like, you think I'm joking or memeing or"
1222340,1228660," anything like that? I already talked about it. Don't fucking use Emacs. Like, just don't fucking use it."
1228660,1234580," It's, it's actually kind of a bad editor. Anybody who uses Emacs will instantly tell you that. Do not"
1234580,1241460," develop your habits around this shady editor because then you won't be able to escape them. Don't repeat"
1241460,1248020," our mistakes. Don't fucking use Emacs, people. Don't fucking use it, otherwise you won't be able to get"
1248020,1256500," rid of it. Uh, right. So, it's, it's not even a fucking joke or anything. Uh, so nobody fucking uses Emacs"
1256500,1264980," because they like it. Like, nobody uses that. Seriously. Um, anyways. So, here's the coil. And I"
1264980,1275940," need to maybe bring this entire thing to, to here. Um, okay. Uh, I love Emacs, dude. Stockholm Syndrome."
1275940,1283940," I can understand. Uh, all right. So, let's actually put this stuff in here. And, uh, yes, yes, yes, yes."
1283940,1290420," All right. So, let's actually do surf. So, here's the server. Uh, right. And I'm going to try to"
1290420,1299540," establish the connection. Out of, okay. Cool. Uh, yep. So, and it happened, uh, when I was trying to,"
1300340,1308660," it didn't even happen, it happened on a handshake. Okay. So, uh, line 120. You can't see that,"
1308660,1313460," right, because of the camera, but I can see that. And that's what's important. So, it happened here."
1313460,1321380," Okay. Uh, all right. All right. All right. All right. All right. So, I do not quite understand,"
1321380,1335780," honestly. All right. Because, um, so, if I didn't even have to do it, right. So, here is the,"
1335780,1340820," here's the slice. Maybe I can just do it like that. Yeah. So, I should, I should be able to. Yeah,"
1340820,1347860," there we go. So, handshake from server. All right. And this is basically HTTP response that we got."
1347860,1352980," And then this is the stuff that we received from the server. Uh, I suppose we probably need to treat"
1352980,1358740," this entire thing as a string. Can we explicitly convert that to the string so we can then see it?"
1358740,1366500," Okay. So, here it is. So, this is what we received from the, uh, from node implementation of WebSockets,"
1366500,1372500," right? So, we received switching protocols, upgrade WebSocket, connection upgrade. And here is the WebSocket"
1372500,1378580," accept, which is basically, uh, that thing. All right. So, we can do echo. Uh, all right. So,"
1378580,1385220," we can do echo. Uh, all right. So, we can do echo and then base64d and then xxd, right? And that's"
1385220,1393300," basically the, the SHA-1 hash. Can I even do SHA-1, uh, in the, in here? So, there is a SHA-1 sum. Uh,"
1393300,1400340," oh, right. So, that's pretty cool. That's pretty poggers. Okay. So, I suppose what we have to do,"
1400340,1408420," we have to implement that, uh, a function that performs the, uh, that creates the accept thing,"
1408420,1413940," right? So, that just computes the WebSocket accept. And to be fair, we'll need this function on both"
1413940,1418500," ends, right? So, we'll need this function on both ends on the client and the server because the client"
1418500,1424180," also supposed to verify that the web server returned the correct thing anyway, right? So, that also will"
1424180,1429380," mean that we'll have to parse the, uh, you know, HTTP headers and stuff like that. So, it's gonna be fun."
1429380,1435220," It's gonna be fun, everyone. All right. So, uh, let me, let me see. So, let's actually just create"
1435220,1441780," a function and how are we gonna be calling this entire thing? So, it's gonna be just a string. Um,"
1441780,1450340," I don't know, right? So, it's just like, it's supposed to accept the, uh, web, uh, you know,"
1450340,1462100," WebSocketKey. Right? So, this is gonna be WS, WSKey. Um, okay. Is there, is there a good name for that? Um, so,"
1464260,1471700," how would, would you call such process? How would you, uh, call such process? Maybe like compute, uh,"
1471700,1480500," sec, compute sec web, uh, socket key. I can't come up with a better name for that, honestly. It's just like,"
1480500,1487700," this is, we are computing sec web socket key. That's what we're doing, right? So, and that's how it should be called."
1487700,1494820," So, and this thing is a sec web, uh, socket, um, accept. Right? So, it's accept and this is the key."
1494820,1499700," Uh, right. And essentially what we're doing in here, we're just concatenating this entire thing. I think"
1499700,1505060," I'm gonna be using tformat, which just formats the string, but allocates all the necessary stuff in the"
1505060,1512180," temporary memory, which is fine for, for this library. Uh, right. So, let me, let me actually see. So,"
1512180,1519380," this is going to be s and we need to grab the, uh, this thing, right? So, the, the GUIT, um,"
1519380,1528100," the string, uh, uh, right. So, let's just put it in here. Uh, and we need to now compute the hash of"
1528100,1539780," this entire thing and base 64 encode it. Uh, all right. So, let me go to, uh, sha this. So, I suppose,"
1539780,1544820," so, this is the module we're working with, right? So, that's the module we're working with."
1544820,1552260," So, I'm gonna be importing this entire stuff like that. So, how do I even compute things?"
1552260,1558900," So, do I have to create some sort of an object, sha1 and everything? I feel, I don't want to be"
1558900,1564820," doing that. Okay. So, there's a hash and that's probably what we want to do in here. So, I'm gonna do"
1564820,1572740," sha1, uh, hash and that gives me a bunch of bytes, right? So, that gives me a bunch of bytes. But,"
1572740,1580180," where does it give those bytes? Where does it take that, those bytes from? Uh, so, this is the final."
1583300,1596500," So, it just returns them. So, digest, uh, right? So, that it returns them literally as value. Ah, I see."
1596500,1605300," Wait, yeah, I see what's going on in here, right? So, it literally returns them. So, yeah, I forget that"
1605300,1611940," this is not a slice. This is not a slice. This is like an actual array. So, it's returned by value,"
1611940,1616660," uh, right? So, that means I don't have to worry about memory allocation or anything like that."
1616660,1624660," Okay. So, and now we have to do base64, right? So, where can we find base64? So, here it is. The module is"
1624660,1632260," std encoding64. Uh, let's actually go ahead and import that thing as well. And, uh, do we have"
1633380,1640100," something like encode, right? There should be some sort of like a, um, high-level function that just"
1640100,1648340," performs encode, uh, right? So, do we have encode? I want it to be super convenient, right? Like, I don't"
1648340,1654420," like to, the fact that they have to create some sort of object in here. Um, it's kind of annoying. It would"
1654420,1661380," be cool if it was as convenient as just that, right? So, I would say something like, um, you know, base64,"
1661380,1668420," uh, encode and be done with that. That would have been epic, honestly. That would have been epic."
1668420,1674580," Uh, but unfortunately, that's not how it goes, uh, right? So, I can try to just do it like that and"
1674580,1680100," hope that maybe it's going to compile. Nope! Like, everything compiles pretty much except this entire"
1680100,1685380," thing. So, that means I kind of have to create an encoder. Okay. So, how do I create an encoder? So, I can"
1685380,1694260," create, um, write this thing. Uh, okay. So, this is going to be encoder. All right. So, do I have to"
1694260,1701620," init? So, there is something like init. Uh, all right. So, parameter alphabet, the alphabet used for encoding."
1701620,1708580," I don't want to be providing the alphabet. Is there an easy interface? Is there an easy interface so I don't"
1708580,1718660," have to do any of that stuff? Oh, bro, bro, bro. Okay. So, there's the std alphabet. So, that means I can just"
1718660,1724660," pass std alphabet in here. That's actually kind of cool. Uh, right. So, this is actually kind of cool."
1724660,1730420," cool. So, I can do encoder. Uh-huh. Thank you, learner, for providing the standard alphabets and"
1730420,1739060," shit like that. So, std alphabet, it gives you std. Right. And padding and stuff like that. Okay. Okay."
1739060,1745060," So, that's basically the easy interface. Uh, all right. So, does it allocate? Do I have to deallocate"
1745060,1752260," some shit afterwards? All right. So, deinit. Um, it will be, like, a bunch of examples would be nice."
1752820,1759940," A bunch of examples would be nice. Uh-huh. Uh-huh. But, I mean, if I need to do some deallocation,"
1759940,1769700," I think we can fix that later. Anyways. So, uh, we do encoder. Encoder encode. Uh-huh. So, here is encode."
1769700,1778660," We provide src and we provide dst. Do I have to do the encoded? Do I have to, uh, destination to small?"
1781540,1794020," So, encode len. Uh-huh. That is fascinating. How do I know upfront? How much do I have to allocate?"
1794020,1808420," So, what's the, what's the best way to do that? Because the usual way, I can just, like, allocate twice as much."
1808420,1814900," Uh, encode len function above. Oh, yeah. I can just, like, call this thing then. Right. So,"
1814900,1823300," encode len. Calculate the size of the encoded data. Um, all right. So, given the size of this thing,"
1823300,1834580," yeah, maybe I can do that actually. All right. So, encoder. Um, okay. So, let me, let me see."
1836420,1844340," So, what's called hash. Right. And the hash, uh, has to be this thing. Right. So, the hash has to be this"
1844340,1855540," thing. Uh, right. And then, what do I do? Might as well actually move it like that. So, encoder len,"
1856340,1864660," and this one is going to be use size len. Okay. That's pretty cool. Um, so, base 64. It doesn't"
1864660,1870820," really return anything in here. And this is how much we want to allocate. Okay. So, now we're going to be"
1870820,1878740," allocating DST. Right. So, uh, DST. We can do something like, um, if I remember correctly. So, T,"
1879460,1888900," new, there's a new array. Yeah, a temp new array. Mem, temp new array. And when I'm allocating a new array,"
1888900,1895700," right, I'm allocating new array of character of the size of len. Right. Might as well actually inline"
1895700,1903780," this entire thing. Uh-huh. So, and I have DST. So, that's pretty cool. Uh, afterwards, uh, I'm trying to"
1903780,1910980," encode the thing in here. So, here's the encoding. Uh, right. So, SRC. Um, oh, this is actually kind of"
1910980,1920500," cool. So, I can just call it SRC then. All right. So, this is SRC. Um, and then I provide DST. So, afterwards,"
1920500,1926740," it returns the size. And I suppose it returns the size, which is, like, the thing that I already have."
1926740,1934260," Yeah. So, it's that one. So, I can essentially, um, do I even have to do that? Well, I mean,"
1934260,1940420," I can just return this entire thing. Not really return that, but return DST. And I probably have"
1940420,1946500," to cast it to string, but I will do that later. So, encode may fail. Look at that. It may fail."
1946500,1952980," But it may fail because the destination is too small. Right. So, can it fail for any other reason?"
1954180,1960740," Uh, is that the only reason it can fail? That's a good one, actually. Okay. I don't see any other"
1960740,1968740," reason. Does it do any? Okay. So, this is literally the only reason why it may fail. Uh, which is,"
1968740,1977060," which means that it will never fail. Okay. So, I think it's kind of safe to just, like, unwrap and crash"
1977060,1982820," if that happens because that means that there is literally a bug in the library itself. Right. So,"
1982820,1989620," there's a literally bug in that library. Um, okay. So, let's go ahead and try to build the whole thing."
1989620,1999300," So, it fails because function. Okay. So, we should, oh, hash bytes. Okay. Um, so, I suppose the hash bytes."
1999300,2008820," Aha. Understandable. So, this hash bytes is part of the SHA one. And this one is probably part of the,"
2008820,2017140," like a base 64. Right. So, it's a base 64. So, base, uh, 64. We have to prefix all of these things in here."
2017140,2024340," All right. So, do we have anything else? So, the error, uh, oh, initialization can also fail. This one"
2024340,2028420," is interesting. Uh, let me take a look at the initialization. What are the reasons it may fail?"
2029140,2036420," Um, okay. So, check alphabet. Um, I suppose if we are using one of the standard alphabets, it will"
2036420,2045460," probably not fail. Um, right. So, return duplicate in alpha. Okay. So, this is pretty safe to assume"
2045460,2050820," that initialization will never fail because we're using standard alphabet. Right. So, standard alphabet"
2050820,2057460," was actually checked. Uh, right. So, I think that is safe to assume in here. That's actually kind of,"
2057460,2065300," kind of cool. Anyways. All right. So, uh, function from other modules must be prefixed with the same..."
2065300,2072340," Ah. Yeah. So, because this thing is now called SRC. Right. So, this is SRC. All right. All right. All right."
2072340,2081220," Uh, all right. So, you cannot cast char to uSizeLong. Understandable. Right. So, since we're trying to"
2081220,2088420," compute the length, um, right. So, this has to be just like, um, length. Right. So, we're taking the"
2088420,2095620," length in here. Uh-huh. So, we're passing... Yeah. So, we need to now pass it as a point. Right. So,"
2095620,2104180," because it's a, it's an actual array that is allocated on the stack, but this encode thingy accepts, uh, the"
2104180,2110340," slice. Right. It, in fact, accepts the slice. So, then, to convert it to slice, we have to take a, uh, sort of,"
2110340,2115140," like, a reference on this and that. Okay. And afterwards, we're trying to return a slice of"
2115140,2119780," characters, but it's actually a string. But string is a slice of character anyway. So, we can actually"
2119780,2126420," cast it to string. And that's going to work. All right. So, that's basically how you compute the"
2126420,2134260," response for the, uh, WebSocket key. According to RFC, at least. Right. According to RFC, at least."
2134260,2138580," We can actually try to see if it returns the correct thing."
2139460,2145860," Let's actually try. Right. So, uh, let's go to the example. Um, maybe we can create something like, uh,"
2145860,2153300," WebSocket key, uh, test. Right. So, it's going to be C3. And in here, we're going to import, uh,"
2153300,2159700," C3WS. Right. So, this is what we're importing in here. Um, unfortunately, we'll have to probably provide"
2159700,2166020," some, some stuff in here. It doesn't make it super convenient to, to test. Right. Because this is the generic"
2166020,2171940," module. Right. So, since it's a generic module, we have to, uh, essentially provide all of the parameters,"
2171940,2178900," uh, which is not particularly convenient. But, I mean, whatever. Uh, all right. So, let's put this stuff"
2178900,2187460," in here. And then I can try to do, uh, something like this. Compute, uh, this stuff. Right. So, we're computing this thing."
2187460,2198900," And let's literally grab this key. Let's literally grab this key and put it in here. Right. Uh, and this one is"
2198900,2211780," going to be accept, uh, accept. Uh, accept. And we're going to print stdio, like so, uh, ioprintfn, uh,"
2211780,2221620," web, uh, socket. It's probably sec, web socket, uh, accept as. Right. And let's put accept in here."
2222260,2227540," Let's see, uh, if it's going to compile. So, when we are compiling things, we're compiling only"
2227540,2234020," example. But I suppose now we have to also compile the second example here as well. Maybe we'll have to"
2234020,2240740," create like an example folder where we put all the examples and stuff like that. Uh, right. So, and"
2240740,2246180," using build.sh script is actually absolutely, uh, you know, uh, temporary. Right. So, I just do it"
2246180,2253460," because I haven't learned the C3 build system yet. I, I've built an entire game in C3. Right. Well,"
2253460,2258340," I mean, not the entire game, but like basically the game's engine, multiplayer engine, and I still"
2258340,2265140," don't know the build system of C3. That's how little I care about this over bloated build systems. Right."
2265140,2271860," I build an entire multiplayer engine in this language. I still don't fucking know how to use this build"
2271860,2276020," system based on JSON and stuff like that. That's how fucking little I care about the build systems."
2276180,2284420," It's just, just so, you know, just, just so you know. Uh, cheers, by the way."
2284420,2293140," And in, I think in that game, I'm literally using, uh, JavaScript as a build shell. Right. So,"
2293140,2300260," uh, I think all of these build systems just like literally a waste of time. Like you, what you want to"
2300260,2305860," do, you just want to use the same language for building as you do for programming. Right. So,"
2305860,2312740," the compiler itself should be a build system that is configurable with its own language. That's how it"
2312740,2319940," should be. That's where all of the modern languages are going to. Right. Jai, Zig, Odin, you name it."
2319940,2325300," Right. So that, that's the way to go. Uh, and I think in the future, that's how, you know, these native"
2325300,2330420," system languages are going to be actually built. It's going to be like one compiler. Right. And all of"
2330420,2337140," that is going to be configured from, you know, from the compile time or something. Um, right. Because"
2337140,2341300," it just makes everything easier. It reduces the amount of moving parts in your projects because"
2341300,2346740," all of these build systems, they encourage you to build this tower of generators on top of generators."
2346740,2353380," Right. So it's like making it only complicated. So anyway, uh, right. So this thing complains that"
2353380,2358260," we didn't provide any parameters or anything like that. So I suppose what we have to do"
2358260,2364580," is, um, provide something, but that's not like, that's not particularly convenient."
2364580,2370740," That's the problem in here. That's the problem. So I feel like we probably need to have like a separate"
2370740,2374980," module, which is not generic. Where are we going to be keeping all of that stuff? Like,"
2374980,2380500," I don't really know how to call that. Uh, right. So, but maybe it's going to be like an internal,"
2380500,2386180," right? We can call this module internal. It's not generic one, uh, as you can see. Uh, right. It's"
2386180,2391060," kind of funny that the outer one is generic one. The inner one is not generic. I think it's going to work."
2391060,2396900," Um, right. So let's actually see. So it's going to be internal. Uh, and because of that, by the way,"
2398020,2403380," I'll probably have to prefix it with internal, right? It's kind of stupid, but, uh, I mean,"
2403380,2408260," it is what it is. So, okay. So what this is talking about? Oh yeah. So since we moved this entire thing"
2408260,2414580," to a separate place, now I have to move all of these things, uh, right to here. Right. So to, to this"
2414580,2420420," separate module. Okay. Makes sense. And it compiles. Okay. That's cool. So we've got an executable,"
2420420,2429060," uh, right. So we can try to run it like so, and does it go to doesn't look like a correct answer,"
2429060,2436740," honestly. Right. So the answer is supposed to be, um, well, it didn't really, yeah, it is,"
2436740,2443780," it is incorrect. It is completely incorrect. I wonder why though. Hmm. All right. So I'm glad"
2443780,2449780," that we troubleshoot that at least. Right. So I'm glad that we at least try that. So what's up with all of"
2449780,2462500," that? That's a very good question. So did I, uh, concatenate this stuff correctly? Let me see. Yeah,"
2462500,2476340," I think so. Uh-huh. I do think so. So in WebSocket, this is that, so this is the correct key. Uh-huh. All right."
2476340,2488420," So this is the concatenation. And, uh, we just take the SHA-1 of that thing. Right. So just allocate this thing."
2490020,2494900," Maybe I just, like, called this incorrectly. Did I call it correctly?"
2494900,2503460," Mm-mm. Uh, it says on the WebSocket standard which Base64 standard to use. Maybe I'm using"
2503460,2514340," wrong. Ooh. Maybe it has to do something with the alphabet. Uh, string has an ultimate. It's irrelevant,"
2514340,2522580," right, because the strings in C3 are sized. Uh, it is completely irrelevant. Okay. So Base64. Maybe"
2522580,2533060," let's try URL alphabet. Uh, so it was actually saying Base64. What was it saying that it has to be, um,"
2533060,2538340," you know, well, whatever. It doesn't matter. Let's just give it a try and see if it's going to improve it."
2538340,2542100," Right. If it's, if it's going to actually fix it, who cares? Right. What does it say?"
2542100,2549540," Um, all right. So let's actually build it. And, uh, let's actually run it. It didn't do sh*t,"
2549540,2564260," So it's the same. Hmm. Annoying, um, annoying, annoying, annoying, annoying. Anyways, so let's,"
2564260,2570900," let me see. Base64. Let's actually go through everything in here. So encode, uh, encoding. So the"
2570900,2581460," first one, SRC, right. So this is SRC, uh, right. So this is SRC and this is the hash itself. Uh,"
2581460,2596980," and then we provide the DST. Hmm. Which is, I think I didn't make any miss. Oh, oh, yikes, yikes."
2596980,2613860," In 2024, bro. This is such a blind spot in C3 design. This is a such a blind spot. It is just"
2613860,2620580," annoying and painful. This should not be in, in a modern language, in a modern useful language,"
2620580,2627780," this should not be a thing. I understand learner is by the way, is aware of that. So, uh, he's aware"
2627780,2635380," of that. And I think in the future is going to be fixed, but yeah, so you can actually see how critical"
2635380,2641380," that issue is. Right. So it must be in a runtime error. At least that would be actually kind of cool."
2641380,2648100," Right. So, because I understand that implementing it properly is very hard. Uh, like adding any features"
2648100,2653620," to a language is actually goddamn fucking hard. I know that firsthand. Right. And maybe quick hack"
2653620,2660100," would have been like a runtime error at least. So, but yeah, this is, this is very important. Just like"
2660100,2664580," a note for myself, when I'm going to be creating a language, this is not something that should be"
2664580,2671060," ignored. Right. So this is like very important for usability. Anyways, so here is the sec, uh, web"
2671060,2676420," socket key and let's go back to the SD alphabet. Right. So let's go back to the SD alphabet."
2676420,2686500," Uh, go lang will show as a runtime error. No, it will not. It will not. I think I'm pretty sure it will"
2686500,2690580," not. We can, we can check that. So, um, package main."
2690580,2705140," So the go also suffers from the same problem. Uh, right. So fmt print f and, uh, hello s. Right. So"
2705140,2717060," now you just do go run main go. Uh, all right. Which is not a runtime error. This is not, this is not a runtime"
2717060,2726180," error. It didn't error. It didn't panic. There is no error. What it did, it just informed you through"
2726180,2735860," the resulting string. Literally what happened in C3. Right. So essentially, as of right now, C3 will just"
2735860,2742180," inform you. But since we never printed that string, since we never printed that string, we never saw that"
2742180,2748660," report. The same with go. Right. So we could have replaced it with s printf. Right. So we could have"
2748660,2755460," replaced it with s printf and maybe saved, uh, that somewhere here and then print it, uh, maybe the"
2755460,2762900," length of this entire thing. Uh, right. So is it not, is it just like this? Uh, I think it's just len, isn't it?"
2762900,2770020," I think it's just len. As you can see, it didn't error. You see? Go did an error. There's zero error in here."
2771060,2778180," Zero error. Go didn't error as well. That's the thing. Uh, yeah. Literally, like, um,"
2778180,2784900," um, Vincent, like, literally, we, we have this kind of situation in here. Your object object will"
2784900,2792980," write in nine minutes. Yeah. So go doesn't solve that problem either. Go literally goes the same, uh, route."
2793700,2800820," Anyways, but I'm pretty sure it will be fixed in C3. Uh, right. In, in, in C3 in the future. Um,"
2800820,2808180," because I already said, learner is aware about this problem. Right. Developing programming languages is"
2808180,2814980," hard. I understand that. Sometimes I get angry, but I, deep down, I do understand that it's all hard."
2814980,2822180," Uh, right. And learner is actually doing a great job in developing this language so far. Uh, anyways,"
2822180,2828420," so let's actually give it a try. And, uh, yeah, that already looks more correct, honestly. That already"
2828420,2835780," looks more correct and it actually fits perfectly. There you go. Fits RC. Fits RC. We, we nailed it."
2836420,2845780," Literally nailed it. So, but maybe it would be nice to actually, like, know precisely what Base64 standard"
2845780,2853380," does it use. Does it use the alphabet one? Yeah, first try it, by the way. First try. First try. First try."
2853380,2865780," Uh, so that's pretty apogers. That's pretty apogers. Um, yep, yep, yep, yep. Um, so what I wanted, uh, where is the"
2865780,2876100," WebSocketKey? I need to know... I actually need to know the name: WebSocketKey. Uh-huh."
2876100,2886420," All right, let's go back, uh, back at the top. Uh, right, so it's that. Protocol Overview."
2890260,2899540," So, Base60, which is interpreted, so this is UTF-8. Open in the Handshake. Uh-huh. Uh-huh, uh-huh."
2899540,2909220," So, the original Handshake. WebOriginContext. Base64. All right. So, presented header:"
2909220,2915620," the Base64 encoded version minus any leading training white spaces. Okay, so that's the version we're using."
2916580,2927060," Base16, Base32, Base64. Uh, I don't know, honestly. Does it have an alphabet? Okay, so it does have"
2927060,2933940," an alphabet. Choosing the alphabet. Uh-huh. Different applications have different requirements on the"
2933940,2937700," character in the alphabet. Here are few requirements to determine which alphabet should be used."
2938340,2949220," Uh, HandlebotHuman. Um, okay. So, it may have several alphabets, right? Alphabet. Uh, interpretation:"
2949220,2957540," non-alphabetic characters. Choosing the alphabet. Uh, HexAlphabet. Anyway, so we're gonna just, like,"
2957540,2965620," use, uh, the STD alphabet and hope for the best. That's basically my approach, right? Hope for the best."
2965620,2971780," Implemented. Oh, okay. So, specifically, the implementation is based on RFC 46, specifically"
2971780,2978740," this section. Okay. And that's literally the R... Okay. So, and the section is, uh, section four."
2978740,2985700," All right. So, let me see. Let me see. So, Base64 encoding the following, blah, blah, blah. Okay. So,"
2985700,2996260," it's literally from that specific RFC anyway. Um, why that key needs to be hard-coded? I have no idea,"
2996260,3006420," honestly. Uh, but it's hard-coded. To be fair, we can actually maybe use our custom key and, you know,"
3008180,3015460," so that we can identify our own library, right? We can just, like, use the name of the library,"
3015460,3022740," uh, convert it to Base64 and use that, um, right? Because, like, it doesn't matter. Like, what exactly"
3022740,3028900," is the key? It doesn't matter. Uh, so what matters is the transformation that you apply to it, right? So,"
3028900,3035460," you just concatenate this thing and then you do SHA one and then, you know, Base64 and that should work."
3035460,3039620," All right. So, that's pretty cool."
3039620,3051540," So, okay. I feel like I want to actually bring this back in here. It was only for testing. We were only"
3051540,3063220," testing things. Uh-huh. So, we got that. We got that. So, I suppose one of the things we want to do in"
3063220,3070500," here, we want to implement the server, the server handshake, right? So, let's actually implement the"
3070500,3080740," function called server handshake. So, ws, uh, server handshake. Uh-huh. So, ws and what we're going to be"
3080740,3088340," accepting in here? I suppose we're going to be accepting the sec web socket key, right? Uh, and"
3088340,3095140," essentially, we just have to return the, um, the result. Uh, and that's going to be the result that"
3095140,3100740," we're going to be returning. I'm going to be hard coding that thing as well. Uh-huh. So, I'm going to"
3100740,3110100," just copy paste this entire stuff. So, here we use dynamic string, right? And we are allocating everything"
3110100,3114900," in that dynamic string in the temporary allocator. So, that's how we work with this entire stuff."
3114900,3122820," Okay. So, let me quickly do the following thing. I'm going to turn that into strings slash r slash n."
3122820,3133540," All right. And after that, we are doing handshake, uh, append, like so. And at the end in here,"
3133540,3146100," it's going to be append, okay? So, we're going to just do compute. And we are computing this thing based"
3146100,3154260," on the web socket key. Right. So, and I suppose we have to also have like an extra slash r slash n at the"
3154260,3164580," end, right? So, because it's a http response, like so. Uh-huh. So, yeah, that's about it, actually. I think. I think that's about it."
3164580,3171620," So, the next thing we have to do, we have to just send that entire thing to the, to the underlying socket,"
3171620,3177220," right? So, because the ws usually contains internal socket, which has a write method implemented for it."
3177220,3183380," So, we take the handshake, we view it as a string, and we just send that sequence of bytes as is,"
3183380,3187300," uh, right? And since all of that is allocated in a temporary allocator, all of that is going to go"
3187300,3196900," away in the next situation of event loop. Um, right. So, I guess that's about it. Um, we don't really"
3196900,3203220," verify. Well, I mean, server doesn't really have to verify anything, right? So, it receives the key"
3204180,3210420," from the client, right? It receives the key from the client, and then it just parses it and stuff like"
3210420,3216500," that. Though, what it has to do, honestly, right? So, what it has to do, it has to just parse this entire"
3216500,3223460," thing and extract that, uh, secret key, right? It has to extract that secret key from there. That's,"
3223460,3230260," yeah. So, I think server handshake should not actually accept anything in here, right? So, what it should do,"
3230260,3236980," right? In my opinion, it has to do socket to read, right? It reads the socket. It will read this entire"
3236980,3244900," response, parse it, right? It will parse it, extract the key, and then apply all of that stuff in here,"
3244900,3249620," right? So, that's what it has to be. Uh, all right. So, how are we going to be approaching this entire"
3249620,3256660," stuff? That's rather interesting. Um, okay. So, we can maybe pre-allocate some, some buffer, right? So, we can"
3256660,3263940," pre-allocate, like, uh, kilobytes, right? So, this is going to be buffer, uh, 1024. And, in fact, this is"
3263940,3268500," something that we do on the client handshake as well, right? So, as you can see here, we just, yeah, we just"
3268500,3275380," read some stuff in here. Uh, all right. So, might as well just copy-paste this and I think, right? So, here's"
3275380,3284340," the buffer. So, we read the buffer, uh, and, um, so, after that, we can just try to interpret that thing"
3284340,3293620," as a string. Um, so, yeah, we can do buffer from zero buffer size, right? So, that's what we got. And this"
3293620,3303220," can then be interpreted as a string. Can you even split this string, uh, by slash r slash n? I think we should be"
3303220,3309460," able to. So, there should be something to do that. Uh, I'm pretty sure. So, let's actually go to here,"
3309460,3318340," uh, right? And let's find maybe, uh, name, uh, string c3. All right. So, here is that. And I'm gonna go to here,"
3318340,3328020," uh, split. Okay. So, yeah, you can split by needle. It uses, um, heap allocator. I wanna actually,"
3328580,3332580," so, um, so, it uses allocator because it will return an array. So, to return an array, it will need to"
3332580,3336740," allocate that array somewhere. So, it will be allocating it on a heap. So, there should be"
3336740,3343860," maybe a variant t-split. Called it. So, uh, I actually noticed the convention in c3 as of recent,"
3343860,3347860," right? So, if something allocates the memory, it usually by default allocates it on a heap,"
3347860,3353540," but then there's usually a variant for temporary allocation, which is prefixed with t or with temp"
3353540,3357940," underscore, right? And it's actually consistent throughout the entire standard library, and it's"
3357940,3363220," actually kind of cool. So, you can just use the standard heap allocator, right? Or then, uh, you"
3363220,3367620," can just allocate in the temporary memory. So, we can just do t-split and that creates that in the"
3367620,3373140," temporary memory. Like, man, I love temporary allocators. Like, it's, they're so fucking convenient,"
3373140,3379620," right? So, it's just like because I heard this freaking argument that annoys the heck out of me that"
3379620,3386100," you need garbage collector because how you're going to be dealing with a lot of small objects"
3386100,3391620," when, for example, you're concatenating strings and stuff like that. Obviously, you need some sort of"
3391620,3396020," runtime system that manages all of that. Like, I literally heard this argument that, like, you"
3396020,3400820," always have to have garbage collector because you need to deal with a lot of small, uh, like short-lived"
3400820,3408180," objects. Temporary allocator fucking destroys that entire argument. It fucking annihilates that entire"
3408180,3417860," argument. Completely. It's just like, fuck off! It's so insane. I love that it annihilates that entire"
3417860,3424100," fucking argument. Thank you. Fucking thank you. No, you don't need to have garbage collector everywhere"
3424100,3428260," because, like, how you're going to be dealing with a small, short-lived object. No! Fuck off!"
3429780,3445460," Ah, anyways. I'm sorry. It's just like I got a note by that argument some time ago. Cheers."
3445460,3451700," Anyways, what we need to do in here. So, I suppose I want to just do string"
3453220,3459700," t-split, right? So, I'm going to be just doing t-split by /r/n, right? Because that's what it is."
3459700,3466100," And I suppose after that, after that, we can just do for each, right? So, it's going to be for each"
3466100,3476500," line, right? And in, like, in this entire line, we're going to be doing some interesting things."
3477380,3484660," Honestly, I would love to actually factor this thing out into something like a content or maybe"
3484660,3490980," it's called request, right? So, this one is going to be a request and I'm going to just put this stuff"
3490980,3498340," in here. So, here is your request. We take request and this one is actually header, right? So, this one is"
3498340,3505780," actually header. Okay. So, what we want to do with the header, we want to actually split that header by"
3506420,3513620," this thing as well, right? That's what we're going to be splitting that. So, and in here,"
3513620,3522340," in here, in here, in here. So, essentially, we're going to have parts. Maybe it's going to be header parts."
3522340,3531140," And there's something weird about header parts if their length is not equal to two. You know what I'm"
3531140,3536020," talking about? If the header parts, if the amount of header parts is just, like, not equal to two,"
3536020,3540020," that's sus. That is just straight up sus."
3540020,3548660," Does temporary allocator clean up the memory after it goes out of the scope? No. That's the point."
3548660,3555700," It only cleans up the memory when you explicitly ask it to clean up all of the memory that was allocated"
3555700,3562820," within temporary allocator. Usually, they have some sort of a method that you call and everything that was"
3562820,3569460," allocated in that allocator delegates automatically. The thing about interactive applications or any"
3569460,3574820," long-running applications is that they usually have a natural place where you can just call"
3574820,3582180," that reset periodically. It's kind of... Yeah, it's kind of an arena. Right. So, they usually have a natural"
3582180,3589940," place where you can actually place that reset. And it's usually in either in an event loop or if it's a game,"
3589940,3596820," it's in a game loop, like each frame and so on and so forth. Right. So, essentially, you can have objects"
3596820,3604180," that live for exactly one frame and you never have to deallocate them explicitly. Right. So, for example,"
3604180,3609940," while you compete in the frame of the game, you just allocate small objects and you know that you're going"
3609940,3615140," to use them on the next line and you will forget about them immediately. You don't have to worry about them."
3615140,3619620," They're all going to be deallocated automatically at the end of the frame. The same with the web servers."
3619620,3626820," Right. So, they have usually event loop. Right. So, you can put reset at the end of the event loop and you can allocate small"
3626820,3630500," intermediate objects that are going to be deallocated automatically at the end of that event loop."
3631060,3634820," like in our case, for instance. Right. So, we can just like allocate a lot of shit in here"
3634820,3639460," and then at the end of the loop, it's going to be deallocated. So, we don't have to worry about that."
3640420,3646740," So, that's pretty cool. That's pretty cool. That's pretty cool. Okay. So, if the parse is not two, that's sus."
3646740,3650740," But maybe it's not even that sus. Right. So, can I just like"
3650740,3657780," split only like one. Is there any other variance of split?"
3657780,3665940," So, okay. So, there's a max in here. Look at that. So, max number of elements. Zero means no limit."
3665940,3674980," Defaults to one. Okay. I want to experiment with this thing, honestly. You know what I mean?"
3674980,3684420," Okay. Just a second. I made some modifications. Let me grab this string. Maybe even... Yeah."
3684420,3691220," Let's grab this string. And I'm going to do test c3. Right. So, this is a test c3. I'm going to put"
3691220,3701060," the string in here. Fn void main. And let's put it in here. So, this is... Emacs, are you okay?"
3701060,3710900," I think Emacs is not okay. String. So, this is text. Right. And what I want to do is just like I'll print"
3710900,3720660," n text t split. All right. T split text by this thing. So, this is what I want to print. And I'm going to"
3720660,3731460," import stdio. Compile run test. Let's go. Okay. So, forgot about semicolon. That's totally fine."
3731460,3739460," Nothing to be worrying about. So, cannot cast string to use size. What are you talking about?"
3739460,3745860," All right. So, string. Did I fuck up? So, here's the needle."
3745860,3756100," Ah. I know. Because like... Yeah. Okay. All right. Everything's fine. Okay. So, this is what we got."
3756100,3760740," Right. So, here's the first string. Here's the second string. Understandable. Completely"
3760740,3767540," understandable. But what if I have several of them? Full bar. That's already sus as you can see."
3767540,3776740," But what if you're supposed to like split it only by one and the rest of the stuff may contain columns?"
3776740,3781940," Right. What if the rest of the stuff may contain columns? In that case, I feel like you have to specify"
3781940,3787220," max. And max is the amount of elements that you can have. Right. So, the max, let's say, is going to be"
3787220,3792980," one. Right. If it's going to be one. Yeah. So, we just have one element in here. So, it never split"
3792980,3798260," anything. So, we have to say at least two. And there you go. We have two elements and the rest of the stuff"
3798260,3805060," was not even split. Right. So, if you want to chop off only this first thing, we probably have to put two in"
3805060,3816660," here. Smart. Smart. I think go also has a similar interface for splitting in here. I kind of vaguely"
3816660,3823620," remember that goes that does a similar thing. Right. So, let's actually go in here. So, this is going to be"
3823620,3830500," two split. This is going to be two. Right. So, this is going to be two. And if the length is less than two,"
3830500,3840020," now that's sus. That's sus. So, we actually have a fault. So, we have a client handshake error."
3840020,3846500," We might as well introduce server handshake error. Right. So, server handshake has failed. Okay. So,"
3846500,3857460," in here we're going to be returning just what was that? Ws error. Okay. Ws error. So, server handshake"
3857460,3864340," error. Right. Like this. Pretty cool. Pretty cool. So, now we can just actually do server parts."
3864340,3872180," This is the name. Right. So, I would even say that this is the... What are header parts usually called?"
3872180,3876260," Name and value. Right. Or key and value. Well, let's call it key. I think it makes sense. So,"
3876260,3881540," this is the key and this is the value. Right. So, key and value. But they may have like a"
3881540,3886820," trading white spaces. So, one of the things we probably have to do in here is probably trim them."
3886820,3894020," Right. So, can we trim them? Okay. So, characters from the strings front and end. So, and it's a method."
3894020,3899940," So, that means I can just trim this entire thing like so. Not time. Trim. All right. There we go. So,"
3900660,3904740," just iterating all of these things. And yeah. That's cool. That's cool. That's cool."
3904740,3914340," So, yeah. One of them is going to be actually empty. Right. So, because there is this extra thing in here."
3914340,3920740," Right. It's going to be empty. But the one that we're looking for specifically. Right. So, the one that we're"
3920740,3934420," looking for specifically is probably sacWebSocketKey. Right. So, if key is equal to sacWebSocketKey. Right."
3934420,3950740," We are saving this entire thing. SecWebSocketKey. And we are just saving it. SecWebSocketKey like so."
3950740,3957540," Equal to the value. And after that, we can kind of break out of that. We don't really care about anything"
3957540,3969060," else. And honestly, what if it doesn't contain any of that. We probably have to return an error. Right."
3969060,3976420," We probably have to return an error. So, it would be nice to have a separate function which like just does"
3976420,3993060," pass that for you. Right. So, parseWebSocketKey from request. So, we pass the request in here. And"
3993060,4005620," we're moving this entire stuff in here. Right. If we didn't find that thing, we just return ws error"
4007140,4015380," server handshake error. Otherwise, no. We have to return it at the end when we didn't find it. When we"
4015380,4024980," found it, we just return the value. All right. Something like that. See that? See that? Right. So, we don't"
4024980,4031300," really check the rest of the headers. And this is probably something that we have to do at some point."
4031300,4036100," I don't really want to do it right now. What I want to do is just like some sort of"
4036100,4037140," working server"
4037140,4044260," handshake. Right. So, I don't want to handle all of the possible edge cases as of right now. I just"
4044260,4049940," want to have something working. Something that may potentially work with the browser as a client. Right."
4049940,4056980," I want to get it to the point where if you have a valid, you know, client like a browser, it may work with"
4056980,4063940," our server. Right. All of the edge cases can be smoothed out, can be ironed out, you know, later."
4064820,4094660," Okay. So, check the rest. Let me verify the rest of the headers of the request. Right now we are only looking for sec web socket key. This one is web socket key. So, right now we're only looking for that one. Okay. So,"
4094660,4102820," we did a request. We got a request and now string sec web socket key parse this entire thing"
4102820,4115700," from the request. And of course, it may fail. So, we just put the exclamation mark in here. So, that just means that if an error happens in this function, it will automatically short circuit and return from this function."
4115700,4127700," It's kind of similar to errors in Rust. It's kind of similar to errors in Rust. Right. In many modern, you know, system menus. Okay. So, that's basically what we want in here. I think that's basically what we want."
4127700,4143700," So, do we want anything else. So, we may have... Yeah. Okay. So, this is the server handshake. But then you may have an empty line. If you know what I mean. You may have an empty line."
4143700,4159700," But then you may have an empty line. And you may have an empty line. You may have an empty line. So, let me just grab the response. And let's go to the test C3. I just want to have like something."
4159700,4181700," So, this is going to be blah, blah, blah, blah. Right. Doesn't really matter what it is. Okay. So, here is the handshake. Here is the handshake. And maybe I can make it as a handshake in here as well. Right. So, here we have a bunch of things in here."
4181700,4194700," Okay. Then, as far as I know, I can view it as a like a str. Yeah. Str view. This is how we do that. I can just convert it to that. So, and this is going to be a request."
4194700,4209700," Mm-hmm. So, the thing I want to do, I just want to see how it is going to work if I just split it. So, request tsplit. I'm splitting it specifically by that. And then I'm iterating the headers like so."
4209700,4228900," And I'm just going to be printing them. So, print fn like this. So, this is my header. Is it going to have one empty one? Is it just this? I do not remember. What was it? Ah, it's for each. Keep forgetting about that. There we go."
4228900,4251560," Okay. So, it has some... Yeah. Slash r slash n. Yeah. Okay. So, this one is interesting. It has actually two empty ones, surprisingly. Huh. Where is the second empty one coming from? Ah, I think I understand. I think I understand."
4251560,4264520," Mm-hmm. So, what I'm thinking is... What I'm thinking is that maybe as soon as we encounter the empty one, we have to stop. Right. You know what I mean?"
4264520,4273420," It's just like if header len is equal to zero, just like break out of that. That's it. Right. So, I guess that makes sense."
4273420,4285960," But I'm not sure if I have to train this entire thing right before I do that stuff. Can you have like... I think you can't. Right. So, I think a valid end of the HTTP request is just like this. Slash r slash n."
4285960,4293420," Right. Everything else, it's just invalid. Right. It's just like not valid thing. I think that's how it works. Right."
4293420,4313700," So, that means when I'm parsing this entire stuff, if header len is, you know, equal to zero. Right. So, I just break out of this entire thing, which will automatically, you know, return it that."
4314080,4319040," So, because we never reached WebSocket key. Right. Because we never reached WebSocket key."
4319040,4330900," Anyways. So, let me try to build the whole library and save and build. So, let me just double check. Yeah. Okay. So, I think I just, you know, implemented the first try, essentially."
4330900,4339060," Implemented it first try. So, you know what I want to do? I want to make a small break. Right. I want to refill my cup of tea and stuff like that."
4339060,4349680," So, and after the small break, we're going to, we need to try to create a server. Right. So, we need to create a TCP server, which is going to accept connections."
4349680,4364760," And then we can try to connect from our browser, for instance. Right. So, that's the goal. The goal is to create something that browser client is compatible with. That's the goal. Right. Sounds good. Sounds good. Sounds good. Let's go."
4365480,4375960," Okay. So, before we can actually try to write a WebSocket server, we need to create just a server. Right."
4375960,4385920," So, so far we were creating, you know, TCP client. Right. So, the way all of that works, I can actually remove all of that stuff. I don't think it's needed anymore."
4387520,4399360," So, we first connect, make a TCP connection, and we get TCP socket. Then we wrap that TCP socket into the WebSocket and then perform the handshake and so on and so forth."
4399620,4419180," So, we need to do the same thing, but for the server. So, we need to create a TCP socket, TCP server. Right. So, we need to have some sort of a TCP server. So, let's actually go to the module, to this specific module. Right. So, let's actually find it and see if there's any TCP service."
4419180,4426020," Okay. So, I suspect that there's something at least. Right. So, there should be something. So, we can do module and we can just grab the center. Maybe RG."
4426020,4429680," Okay. So, here's the module supports inet. Okay. That's cool."
4430400,4436040," So, let's go there. Let's go there. STD.NET.TCP.C3."
4436040,4447160," Ooh. What's that? Look at that. But, I mean, they are literally the same thing. Right. So, they are literally the same thing."
4447160,4466240," So, but maybe TCP socket server is used. Aha. Aha. Aha. Aha. Man. Okay. So, I suppose the reason I was struggling in the previous stream is because you may say it was a skill issue."
4468800,4483760," And I allow you to say that. But, right. Because of not knowing the API of C3. Right. So, but the thing is, as I already said, I wanted to translate my example one-to-one. Right."
4483760,4495800," And apparently, it's not translatable one-to-one from C to C3. Which is kind of the whole premise of C3, isn't it? It's supposed to be like compatible with C kind of, but whatever."
4496300,4506480," Anyway. So, but the network library in C3 is actually kind of great. Despite of what I experienced in the previous stream, I just did it in a very unconventional way."
4506480,4518340," It was also tied. Right. So, but the network library is actually kind of good. Right. So, in here, as you can see, we can just like listen to a certain host at a certain port."
4518340,4524620," So, the backlog, I suppose, is how many connections we expect in here. And we get a TCP server socket."
4524800,4533780," So, and I suppose now we should be able to simply accept this entire thing in a loop. Right. So, we're accepting it in a loop and we're getting a TCP socket."
4533780,4540360," Right. So, that's pretty good. So, that should be easy. Okay."
4541780,4554500," So, let's go ahead and just like create that. So, this is example, but this is in fact a client example. Right. So, this is a client example."
4554500,4564820," And we're going to have a server example. Right. So, this is a client example. Right. So, this is a client example. Now, we're going to have a server example."
4565480,4584200," For example, C3. So, let's import stdio. Of course. Let's not forget net TCP. Right. And now, let's do fn void main. Right. And the thing I'm going to do, I'm going to say listen."
4584460,4594160," And I'm going to be listening only to local connections for now. Let's listen to local connections and let's listen to 69 or 69. So, do we have, yeah, we do have this thing."
4594160,4601860," So, let's actually kill it because I think it was also listening to 69, 69. Right. So, here we have TCP server socket."
4602060,4612060," So, this is the server and we've got this thing. Right. So, just a second, TCP. Right. Let me see if this entire thing compiles even. It doesn't compile. Right."
4612060,4623620," So, because we have to specify backlog. So, backlog is going to be 10 connections. I don't think it matters that much. Right. So, it's just like, it's basically the size of the queue. Right."
4623620,4631900," It's the size of the queue when several clients connect and stuff like that. So, this is the server. And I suppose here in a loop, we are supposed to be listening."
4632060,4645300," Right. So, it's supposed to be accepting the connections. Right. So, accept returns an error or a TCP socket. All right. So, and we have to actually do it like that."
4645300,4660840," So, this is the server and we can do try client. Right. There you go. So, that's how we do. So, client. And after we accepted the client, we should wrap that client into the web socket."
4661020,4669080," And that's how we're going to be basically accepting the connection. So, let me do the following thing. C3WS. Right. So, this is a C3WS."
4669080,4687700," And so, in here, I'm going to just do WS parametrized by TCP socket and the size of the chunk. Right. So, if you take a look at this module, as you can see, it's a generic module."
4687700,4692460," And the parameters of the generic module are the socket type. In our case, it's going to be TCP socket."
4692460,4706460," And the chunk size, which is the constant. Right. So, the thing, the interesting thing about the constant, it's the size of the chunk when the web socket message is partitioned. Right."
4707020,4718140," So, web sockets are not like TCP. TCP is stream-oriented. Right. Web sockets are more like frame-oriented."
4718800,4730700," So, and there is some sort of a framing in there. And here, we can customize like how big of the, you know, chunks of the frames we're going to have. Right. That's what it is. Basically."
4731440,4739760," It would be kind of nice to maybe have a default value, but I don't know. Can I just like have a default value in here? Is that a thing? Can I specify like 1024 or something like that?"
4740400,4752400," Use the default for chunk size? You're very smart. Oh my God. Did you come up with that yourself? That's very cool. Anyways. So, let's actually go."
4752400,4767840," So, yeah, you can't actually do that. So, there's no default for here. Okay. Let's go. Okay. So, what do we have in here? Okay. So, it's going to be server example. And let's call it WS."
4768000,4783260," And this is going to be the socket. Oh, right. So, that's the same. And the size is 1024. I don't remember. In the client example, what did we do? We use actually 100, which is kind of weird."
4783260,4795520," But I mean, let's actually use 100 here as well. I think it's too small. But anyways. So, here we have to do server handshake. So, we do server handshake."
4795840,4810780," And after that, we can maybe send something to that socket. How can we send something? As far as I know, here we have a method send. Yeah. So, you can send either text or you can send binary."
4810780,4825680," So, since I want browser to be the client, for now at least, I think I'm going to be sending the text. And I'm going to be sending specifically JSON. All right. So, send text. Or maybe not JSON. Let's just send hello world."
4825680,4841900," Right. So, let's just send hello world. And maybe after that, let's just close the socket. Yeah. Like that. And by the way, by the way, so, we need to organize the temporary allocator stuff."
4842260,4862340," So, how are we going to be doing that? Allocator temp. And we just take the mark. And that's basically use size temp mark. Right. And then, in here, we are resetting. So, it's going to be allocator temp reset to temp mark."
4862820,4880260," And that's it. Okay. So, let's try to compile it. It doesn't compile because it's a TCP except what is this language? This is ZIG. I'm programming in ZIG right now. Right. So, let's actually put this thing in here."
4880820,4890480," And what else do we have? Okay. So, when I'm sending the text, it may fail as well. Right. So, we're going to be unwrapping this stuff. Okay. There we go. So, that seems to be compiling."
4891820,4901660," So, the thing we probably need to do in here. We probably need to print something. Print and ZIG3. Yeah. ZIG3."
4901660,4916080," Let's actually print to the user. Right. So, listening to SS. Right. And so, let's actually have host port."
4916820,4926280," And let's maybe put these things in here. So, this is going to be host, const, string, host, like this. And this is going to be port."
4926280,4932520," Const. I think it's ushort. Yeah. Like this. Let's try to compile."
4932520,4940180," Print. I think fn. Yeah. It's fn. There we go. Cool."
4940560,4944160," So, this is a simple WebSocket server. If we implemented everything correctly."
4944160,4953440," We can actually try to... Hmm. This one is really interesting. Because we can use both of them."
4953440,4959600," Yeah. So, I already have a client. I already have a client."
4960720,4965920," So, that means I can test how they interact with each other, at least."
4965920,4973600," So, that's very interesting. But ultimately, what's important is that the server should work with the browser."
4973600,4975360," So, that's more important."
4975360,4982080," Okay. So, here I'm starting the server example."
4983440,4984080," Make sense to me?"
4984080,4985760," So, let's do client."
4985760,4990800," You know what? Let's actually print something."
4990800,4997920," Print io, print fn, accepted connection."
4997920,5001360," And I would like to print something about that connection."
5001360,5006320," Like, I can probably print address, but I also want to print a remote port, right?"
5006320,5008080," So, let's see if I can do that."
5008080,5010400," By the way, this one has to be something like d."
5010400,5012640," I have no idea why it just works, but anyway."
5012640,5017040," So, net. Where is the TCP?"
5017040,5019200," All right. So, here is the socket."
5019200,5020800," So, this is an internal socket."
5020800,5024880," So, I need to know the internal implementation of this thing."
5024880,5027760," But maybe there are some parameters in here that I could have used."
5027760,5030080," Okay. So, here is the net."
5030080,5033120," Is the socket struct?"
5033120,5034480," What is the socket?"
5034480,5038400," I can't see the definition of ""luso-kit""."
5040240,5043200," It's probably private socket."
5043200,5046240," Where is the definition of ""luso-kit""?"
5046240,5051680," Is it native socket or is it ""bro""?"
5051680,5055200," Oh, it's a struct."
5055200,5055440," Okay."
5055440,5060560," So, proper way to..."
5060560,5064560," This is the address storage or something like that."
5064560,5067520," But I suppose maybe socket has some methods."
5067520,5069520," Some juicy, loosey methods."
5069520,5072560," So, ""getOption"", maybe ""socket""."
5072560,5075040," So, let's see what kind of method."
5075040,5075840," You can read bytes."
5075840,5077120," You can write bytes."
5077120,5078080," You can close."
5078080,5081360," ""GetBroadcast""."
5081360,5082720," Okay."
5082720,5083760," So, that's fair."
5083760,5086240," I don't see anything useful, honestly."
5087920,5089440," I really don't see anything useful."
5089440,5089840," So, there's..."
5089840,5090960," Okay."
5090960,5093680," So, there's a ""getOption"" and ""setOption""."
5093680,5096400," ""GetOption""."
5096400,5098240," Aha."
5098240,5098640," I see."
5098640,5100880," So, here are a bunch of options."
5100880,5101600," And..."
5101600,5103920," So, ""reusers""..."
5103920,5105920," Oh, they're just flags."
5105920,5106640," They're just flags."
5106640,5108080," Nothing particular special."
5108080,5108880," Anyway, whatever."
5109840,5114640," So, I was just thinking maybe I can provide additional information when I accept the connection."
5114640,5119600," Maybe I could, but it feels like it's just too much, you know, effort to figure out right now."
5119600,5120640," So, I'm not going to figure it out."
5120640,5122160," All right."
5122160,5123920," So, let me rebuild everything."
5123920,5125200," Okay."
5125200,5126320," So, I'm starting the server."
5126320,5127440," I'm starting the client."
5129360,5138000," So, it didn't build anything."
5138000,5151600," I suppose it just build everything into a single executable."
5151600,5152240," Wait a second."
5152240,5152720," Example."
5152720,5155040," Server example."
5155040,5155440," Okay."
5155440,5157120," So, if I build this entire thing..."
5159360,5159840," Okay."
5159840,5161920," So, am I going crazy?"
5161920,5164160," I think I am."
5164160,5167440," How..."
5167440,5168080," And..."
5168080,5168720," Ahhhh."
5168720,5173520," You know why?"
5173520,5178000," Because client example has modu..."
5178000,5178480," Aha."
5178480,5185440," It calls the executable after the module rather than the file name."
5185440,5188480," Okay."
5189360,5190480," Module name."
5190480,5191520," You're very smart."
5191520,5192560," How did you come up with that?"
5192560,5195280," Anyway."
5195280,5196880," So, client example."
5196880,5198960," So, server example."
5198960,5202800," So, here we're going to do a module server example."
5202800,5203200," Let's go."
5203200,5206720," Okay."
5206720,5211280," So, example server example."
5211280,5211840," All right."
5211840,5213280," So, cool."
5213280,5214640," There we go."
5214640,5215600," So, we have both of them."
5216240,5217760," Should we try C3?"
5217760,5218000," No."
5218000,5222080," Do not try this language."
5222080,5225920," It's not finished."
5229200,5233200," But if you are legit into programming."
5233200,5239280," If you enjoy programming as an activity and you want to become a great developer one day."
5239280,5240880," You should try it."
5241840,5245920," But since you are asking these questions of whether should you try it or not."
5245920,5253680," You probably don't give a shit about programming and you probably want to make a, you know, good move in your career."
5253680,5255120," Right?"
5255120,5257840," So, you want to basically invest into a certain language."
5257840,5259520," So, then you're going to become hireable."
5259520,5263440," In that case, you probably don't, shouldn't try C3."
5263440,5263680," Right?"
5263680,5266880," So, that's basically my response."
5266880,5267120," No."
5267120,5268880," Do not try it."
5275360,5278080," What do you mean by should?"
5278080,5282560," I'm pretty sure they mean that will I be hireable if I learn this language."
5282560,5286640," They're a little bit ashamed of actually saying that explicitly."
5286640,5289360," And that's why they're asking it this way."
5289360,5291440," They're going to just like hint it."
5291440,5293280," Like, will I be hireable?"
5293280,5297680," Does the big company use this language?"
5297680,5297920," No?"
5297920,5298160," No?"
5298160,5298160," No?"
5298160,5298400," No?"
5298400,5298720," No?"
5298720,5299040," Okay."
5299040,5299280," Okay."
5299280,5300800," So, I'm going to learn JavaScript."
5303440,5303840," Anyway."
5303840,5305120," So, yeah."
5305120,5307920," And in that case, if you're asking that question in the first place, no."
5307920,5309680," Right?"
5309680,5313280," Just based on the fact that you're asking this question, no, you shouldn't learn this language."
5313280,5321040," So, learn something actually useful like Python or JavaScript."
5321040,5325360," Something that actually, you know, puts the bread on the table."
5325360,5326240," You know what I'm talking about?"
5326240,5328640," Don't waste time on this nerdy shit."
5328640,5329920," Seriously."
5329920,5331680," Come on."
5332800,5333200," Anyways."
5333200,5335520," So, what do we have here?"
5335520,5339600," Be hireable."
5339600,5340800," Learn IBM Cabal."
5340800,5343440," Yeah."
5343440,5350400," I think, like, honestly, learning Cabal is kind of dangerous."
5350400,5355440," In a sense that you won't be able to get out of that job ever."
5357040,5367200," So, essentially, if you worked as a Cabal developer once, the motherfuckers won't let you go."
5367200,5369600," They fucking won't let you go."
5369600,5374320," They're going to physically just rope you to the chair so you can't escape."
5374320,5376160," They just, like, write Cabal code."
5376160,5382080," Because there's so few Cabal developers, like, yeah, you're not going to fucking escape."
5382080,5383920," Seriously."
5385440,5390480," So, Zorkin Hammer, like, one of the streamers on Twitch, worked as a Cabal once."
5390480,5392800," He can't fucking escape the HRs."
5392800,5394240," Like, he just fucking can't."
5395360,5396480," Just, like, that's it."
5396480,5397440," That's your fate."
5397440,5400080," It's for the rest of your life you're going to become a Cabal developer."
5402640,5407760," Anyways."
5407760,5415760," So, here's the server example and the moment of truth."
5415760,5417440," Yay!"
5417440,5422800," They crashed both simultaneously on illegal instruction."
5422800,5427440," Can your Rust do that?"
5427440,5429840," I don't fucking think so."
5429840,5436960," I don't fucking think so."
5436960,5438880," All right."
5438880,5440720," What do we have?"
5440720,5442080," Why the fuck did that happen?"
5442080,5445280," Why the fuck did that happen?"
5445280,5446560," That's a very good question."
5446560,5447840," So, it actually..."
5447840,5452320," It even tells you where exactly that happened."
5452320,5454080," So, example main panic."
5456640,5458160," So, it's 18."
5458160,5458720," All right."
5458720,5460160," 18."
5460160,5461840," Handshake."
5461840,5462960," The server handshake."
5462960,5463840," Understandable."
5463840,5465360," Let's go into the server handshake."
5465360,5469280," Server handshake."
5469280,5471280," So, server handshake."
5471280,5475680," Very interesting."
5475680,5477920," Very, very interesting."
5477920,5479520," Why did that even..."
5479520,5482080," So, yeah."
5482080,5486000," So, essentially, it's just like a server handshake or nothing particularly special."
5487280,5488160," There's not that many..."
5488160,5488720," There's not that many..."
5488720,5492400," So, that means it couldn't parse this entire stuff."
5492400,5492720," Right."
5492720,5493840," So, it couldn't parse."
5493840,5502640," Because there's only two places where that may happen."
5504640,5505040," Right."
5505040,5521280," We may call this thing differently."
5521280,5522320," Server handshake."
5528880,5529920," Server handshake."
5529920,5530880," Server handshake."
5530880,5534400," No key."
5534400,5534640," No key."
5534640,5542400," Bad request."
5542400,5546640," That's basically the things we have."
5546640,5548400," Right."
5548400,5549920," So, let's try to rebuild this."
5549920,5550400," I think."
5550400,5552400," So, bad request."
5552400,5554640," So, server handshake."
5554640,5557680," Because I want to know exactly."
5557680,5559360," Right."
5559360,5560480," So, bad request."
5560480,5563280," And no key."
5563280,5568000," So, that's basically what we have in here."
5568000,5570400," All right."
5570400,5571040," So, that's cool."
5571040,5571760," Server."
5571760,5575440," Bad request."
5575440,5576960," That's already interesting."
5576960,5578560," I really like that."
5578560,5579840," It's a bad request."
5579840,5588240," So, that means at some point we got a thing that is less than two."
5588240,5589680," Which is rather surprising."
5591600,5593920," Maybe what we have to do in here is."
5593920,5596880," Can I just do header."
5596880,5598960," And just like header trim."
5598960,5601600," Because we have to kind of stop at empty header."
5601600,5603520," The only reason why this will happen."
5603520,5607120," I'm an idiot bruv."
5607120,5609040," I'm an idiot bruv."
5609040,5610960," I'm an idiot bruv."
5610960,5612000," I'm an idiot."
5612000,5615040," We forgot about this shit."
5615040,5616560," Get."
5616560,5617520," Yeah."
5617520,5618560," HTTP cat."
5618560,5619920," Code cat 69."
5619920,5620480," Thank you."
5620480,5621600," You're so smart."
5621600,5623920," So, thank you."
5623920,5624560," Thank you so much."
5624560,5625360," I really like you."
5625360,5627440," I think you parsed it wrong."
5627440,5636480," You're very smart, my friend."
5636480,5640000," Cheers."
5645920,5647280," Cheers is so important today."
5647280,5651760," Anyways."
5651760,5654000," Deep in insightful."
5654000,5655760," Okay."
5655760,5658160," How are we going to be doing over there?"
5658160,5658960," I don't fucking know."
5658960,5660720," We can try to skip that."
5660720,5663040," Okay."
5675360,5675880," Anyways."
5675880,5679760," Just to skip that."
5679760,5683440," Verify the rest of the headers of the request."
5683440,5690560," So, verify the request status line."
5690560,5692080," Request status line."
5692080,5693520," Because I think that's what it's called."
5693520,5693760," Right?"
5693760,5695920," So, that's what it calls."
5695920,5696880," It's a status line."
5696880,5698080," All right."
5698080,5700000," If I remember correctly."
5703440,5703760," But."
5703760,5706160," I think."
5706160,5706480," Yeah."
5706480,5707360," So, you're supposed to."
5707360,5708160," If you put colon."
5708160,5709600," You're supposed to provide the length."
5709600,5709840," Right?"
5709840,5711360," So, for open-ended thing."
5711360,5712480," You have to put dot dot."
5712480,5715520," It's kind of interesting actually."
5715520,5718560," Like, C3 supports both colon and dot dot."
5718560,5720880," Which is basically the same symbol."
5720880,5722400," It's just like 90 degrees difference."
5726080,5726480," Anyway."
5726480,5731520," So, and the colon separates the begin index and length."
5731520,5735360," And dot dot separates begin index and end index."
5735360,5737840," So, it basically supports both styles of slices."
5737840,5739680," Which is kind of cool."
5739680,5740560," What language is this?"
5740560,5741120," This is zig."
5745760,5753360," So, yeah."
5753360,5759200," Bondsboss."
5759200,5760960," Thank you so much for the sub."
5760960,5761280," Hello."
5761280,5763120," I missed a toasting bay leaf."
5763120,5766240," I missed today's wallpaper."
5766240,5768240," Can you show it off again?"
5768240,5770400," It's this one."
5770400,5771840," It's the 3D maze one."
5772880,5774000," Isn't it cool?"
5774000,5776880," You can actually find all the wallpapers at panger."
5776880,5780240," panger.city wallpapers."
5780240,5781440," Absolutely for free."
5781440,5783920," Absolutely for free."
5783920,5786080," The link is going to be in the description."
5786080,5789200," The link is going to be in the description."
5789200,5789600," There you go."
5789600,5791920," All of the wallpapers."
5791920,5794320," No weird apps."
5794320,5796720," No 70 bucks per month."
5796720,5798080," No anything."
5798080,5800000," You just go to the website."
5800000,5801760," And you grab the wallpapers."
5801760,5802160," That's it."
5802160,5803760," That's it."
5803760,5807280," We're not collecting any data."
5807280,5809120," Right?"
5809120,5810320," We're not tracking you."
5810320,5812480," We're not trying to sell you."
5812480,5814000," And you just open the website."
5814000,5816320," Grab the wallpaper."
5816320,5817360," And put it on the screen."
5817360,5818240," That's it."
5818240,5819200," No."
5819200,5820160," Not even cookies."
5820160,5820320," Right?"
5820320,5821280," So, this thing."
5821280,5822000," As far as I know."
5822000,5823840," This website doesn't even have a backend."
5823840,5824640," Right?"
5824640,5827040," It literally serves the static HTML pages."
5827040,5831200," I think it's physically incapable of setting cookies."
5831200,5831840," But I'm not sure."
5831840,5832080," Right?"
5832080,5833600," So, it's hosted on NeoCities."
5833600,5835600," Maybe NeoCities themselves doing something."
5835600,5838480," But I actually doubt it's capable of setting."
5838480,5839520," Maybe through JavaScript."
5839520,5839680," Right?"
5839680,5841040," So, it has a little bit of a JavaScript."
5841040,5843600," So, maybe it may set some cookies."
5843600,5845280," It's fully static."
5845280,5845760," Yeah."
5845760,5846080," Right?"
5846080,5847600," In the sense that it doesn't have a backend."
5847600,5847840," Right?"
5847840,5849840," On the front end, it has a little bit of a JavaScript."
5849840,5850080," Right?"
5850080,5853360," So, to introduce some Easter eggs and stuff like that."
5853360,5855760," But apart from that, it doesn't have any backend."
5855760,5860480," So, I think we use local storage for some of the seconds."
5860480,5860720," Yeah."
5860720,5861120," Makes sense."
5861120,5861600," Honestly."
5865520,5867360," That's what we call serverless."
5867360,5869520," It doesn't have any backend."
5869520,5872560," Serverless servers."
5872560,5874560," Alrighty."
5874560,5884880," Okay."
5888880,5890640," Accepted connection."
5890640,5892880," But the client has failed."
5892880,5895440," That was interesting."
5895440,5897200," So, and..."
5897200,5899520," Alright."
5899520,5904640," The server is capable of handling several connections without dying."
5904640,5906720," Which is already a progress, I think."
5906720,5906960," Right?"
5906960,5910640," So, before we had both server and client dying."
5910640,5912320," Now, only the client dying."
5912320,5913680," Good."
5913680,5915440," So, let's go to the client."
5915440,5917920," Oh, something with my heart."
5919040,5919760," Too much tea."
5919760,5921200," Anyways."
5921200,5923600," So, let's take a look at the..."
5923600,5927360," Add the thing."
5927360,5929440," So, the client handshakes."
5929440,5930720," So, what's up with that?"
5930720,5931280," What's..."
5931280,5931600," When..."
5931600,5937280," Honestly, the we fail only..."
5937280,5938880," Yeah."
5938880,5947600," So, when the server doesn't send anything or this thing doesn't end with..."
5948880,5952160," With slash r slash n."
5952160,5954560," So, I wonder, like..."
5954560,5958640," The reason why we actually coded it like that is because we were programming in C."
5958640,5958880," Right?"
5958880,5961280," And in C, we don't have ends with."
5961280,5966640," But I feel like in C3, we do have ends with."
5966640,5966960," Yeah."
5966960,5968320," We literally have ends with."
5968320,5971440," Which is something that we can actually do in here, I think."
5972480,5975680," We're going to do something like, what's called response."
5975680,5975920," Right?"
5975920,5976960," So, this is going to be response."
5976960,5978480," Buffer."
5978480,5981200," Starting from zero, buffer size."
5981200,5984560," And we're going to cast it to a string, obviously."
5984560,5985360," All right."
5985360,5989680," So, in here, we can just do it like that."
5990400,5994720," Response ends with slash r slash n."
5994720,5998720," If it doesn't end with that, this is a client handshake error."
5998720,6000320," All right."
6000320,6002400," So, we also say the thing."
6002400,6003520," So, okay."
6003520,6005600," So, this is a response, essentially."
6005600,6005840," Right?"
6005840,6006960," That's the response."
6006960,6009440," Oh, yeah."
6009440,6011840," And did it ever actually print?"
6011840,6012160," Okay."
6012160,6013840," So, this is what it printed, actually."
6014960,6018560," So, switching protocols, web socket, upgrade, and we get that thing."
6018560,6020080," All right."
6020080,6024640," So, an expected full connection reset."
6024640,6025600," Ah."
6025600,6028160," Ooh."
6028160,6031840," Oh, now it fails with something."
6031840,6032960," It doesn't fail with the."
6032960,6033920," Okay."
6033920,6034960," That makes sense."
6034960,6035280," All right."
6035280,6035520," All right."
6035520,6035760," All right."
6035760,6038880," But I mean, I simplified this entire thing anyway."
6038880,6039200," All right."
6039200,6040320," So, which is good."
6040320,6043360," So, I think everything is fine."
6044000,6045280," Actually, believe it or not."
6045280,6046560," Ooh."
6046560,6048880," That is juicy."
6048880,6051360," So, the client."
6051360,6053920," And it didn't manage to actually write anything."
6053920,6055680," Surprisingly."
6055680,6060160," Accepted connection, but we didn't receive anything."
6060160,6062000," So, let me take a look at the client example."
6062000,6062800," What are we doing here?"
6062800,6067760," So, we send binary and then we're trying to read something."
6067760,6070320," Uh-huh."
6071760,6074240," Maybe one of the things we have to do."
6074240,6077520," We just have to read something."
6077520,6080400," So, ws read."
6080400,6082240," All right."
6082240,6085360," So, here we can have a message."
6085360,6086720," All right."
6086720,6088400," So, this is the message read."
6088400,6091120," And it obviously can fail."
6091120,6093200," And the thing we want to actually do here."
6093200,6094240," Print."
6094240,6098160," Just print n, I suppose."
6098160,6100320," String message."
6100320,6102720," Maybe."
6102720,6106800," Maybe even something like that."
6106800,6109040," And then this is going to be f."
6110880,6113520," So, message from server."
6113520,6117520," And this is just the message."
6117520,6121360," Is it going to build?"
6121360,6122560," It seems to be building."
6122560,6126400," So, this is the message from server."
6132320,6133440," That's very interesting."
6133440,6139680," We got something."
6139680,6142000," We got something from the server."
6142000,6143680," I wonder why."
6143680,6147360," 48T8 exactly."
6147360,6151200," 48T8."
6151200,6155280," So, let me go to C3."
6156720,6158640," So, we're also printing the handshake itself."
6158640,6161360," But I didn't think it's that useful per se."
6161360,6163280," Should be 42."
6163280,6164720," No, it shouldn't be 42."
6164720,6166400," I don't think so."
6166400,6168640," No, I do not think so."
6168640,6172640," Because in here, as you can see, we're just sending the text."
6172640,6172880," Right."
6172880,6175440," So, we're performing the server handshake."
6175440,6176560," We're sending the text."
6176560,6178400," And then we're closing the connection."
6178400,6178640," Right."
6178640,6180240," And obviously, we reset everything."
6180240,6182640," So, we're supposed to see hello world."
6182640,6183440," Right."
6183440,6184480," That's what we're supposed to do."
6185120,6186240," The message is wrong."
6186240,6187040," Thank you so much."
6187040,6190720," Right."
6190720,6194960," That's very interesting."
6194960,6197120," Sending the text."
6197120,6204640," So, because you closed the connection."
6204640,6205840," I don't think that's the reason."
6205840,6211760," Because I would expect it to buffer the data there."
6211760,6214000," But it didn't actually do that."
6214640,6215840," So, this is the client."
6215840,6216720," Oh, and it's."
6216720,6218160," Oh, it's different every time."
6218160,6218400," Okay."
6218400,6219200," That's cool."
6219200,6220160," So, there's different."
6220160,6225120," And sometimes, the client handshake is actually failed."
6225120,6227520," That is weird."
6227520,6227760," Right."
6227760,6228880," I would expect it to."
6228880,6229920," Okay."
6229920,6230320," We may."
6230320,6232320," All right."
6232320,6234080," Let's actually not close the connection."
6234080,6236080," Then maybe that's the reason."
6236080,6236480," Okay."
6236480,6237600," So, maybe you're right."
6237600,6238320," Maybe you're right."
6238320,6238640," Let's see."
6238640,6239040," Let's see."
6239040,6240960," So, let's restart the."
6240960,6241280," Oh."
6241280,6242480," Addressing."
6242480,6243280," Oh, fuck."
6243280,6245440," Fuck."
6245440,6246000," Shit."
6246000,6247120," Damn."
6249520,6250720," So, we have to wait a little bit."
6250720,6251760," Because 16."
6251760,6253600," You have to set a special."
6253600,6253920," Yeah."
6253920,6254320," Yeah."
6254320,6255120," Set options."
6255120,6256560," So, linger and whatever."
6256560,6256880," Yeah."
6256880,6258160," So, this is what we have to do."
6258160,6259440," I don't want to do that, chat."
6259440,6261840," So, what is this?"
6261840,6263760," So, it doesn't even exist."
6263760,6264960," You're debating me, chat."
6264960,6266000," Go away, chat."
6266000,6267120," I'm closing you."
6267120,6267920," You're debating me."
6267920,6269520," All right."
6269520,6271680," So, stop debating me."
6271680,6272480," I'm not even reading."
6272480,6274400," So, okay."
6274400,6275680," So, this is the 16."
6275680,6276720," 17."
6276720,6277520," Right."
6277520,6279200," You know what?"
6279200,6280640," You know what?"
6280640,6285920," What if I put that into like a config of some sort?"
6285920,6289120," So, it's going to be config C3."
6289120,6290080," Right."
6290080,6292400," So, it's going to be module config."
6293440,6294240," Maybe."
6294240,6297760," Yeah."
6297760,6298560," So, config."
6298560,6301520," Example config."
6301520,6302560," Right."
6302560,6305040," So, this is example config."
6305040,6310000," And example config."
6310000,6313520," Honestly, we can actually call it like this."
6313520,6317280," Because like we can have nested modules and shit."
6317280,6321600," And the thing I want you to do in here is actually just move all of these things there."
6321600,6322640," Right."
6322640,6323920," So, just move them there."
6323920,6329040," The cool thing is that let's remove all of these things."
6329040,6329280," Right."
6329280,6332960," And I can actually swap this kind of stuff."
6332960,6338720," And internally, I can call this stuff like that."
6339280,6343760," And server this stuff like that."
6343760,6344320," Right."
6344320,6345360," So, yeah."
6345360,6348160," So, it can have like a common namespace."
6348160,6350960," Example client, server, and config."
6350960,6352320," And they share both of them."
6352320,6353360," So, this is the server."
6353360,6353440," So, this is the server."
6353440,6354480," So, this is the server."
6354480,6355200," The client."
6355200,6357760," Right."
6357760,6358400," So, the cloud."
6358400,6358800," Okay."
6358800,6360080," So, this is whatever."
6360080,6361760," We don't need that stuff anymore."
6362560,6363520," All right."
6363520,6368320," And what can we have in here."
6368320,6369280," So, this is that."
6369280,6370800," This is that."
6370800,6377440," But on top of that, both of them, by the way, are going to have a config."
6378320,6378640," All right."
6378640,6383920," So, it will make it easier for me to just change a port and host for both of them."
6383920,6384800," Right."
6384800,6386400," So, let's rebuild all of that."
6386400,6388640," And, of course, it can't find them."
6388640,6389920," So, this is a client."
6389920,6391280," 25."
6391280,6394480," And I wonder if I can just do config."
6394480,6396240," Config."
6396240,6399840," And I don't have to import it because it's like an internal thing."
6399840,6400560," But maybe not."
6400560,6401360," Maybe I'll still."
6401360,6401840," Yeah."
6401840,6403040," I'll still have to do that."
6403040,6404720," So, that means I'll have to import."
6405760,6408320," Import example config."
6408320,6410240," All right."
6410240,6412400," So, and the same for host."
6412400,6415120," Config."
6415120,6417760," All right."
6417760,6419920," And now for the server."
6419920,6422960," For the server 7."
6422960,6426080," So, this is going to be config."
6426080,6429760," And this one is going to be config."
6433600,6439280," So, we have to import example config."
6439280,6443600," So, that will make it easy for me to just like change it."
6443600,6445600," Because it's shared between both of the examples."
6445600,6447200," All right."
6447200,6448720," So, server."
6448720,6450960," It's already kind of finished."
6450960,6451280," Right."
6451280,6452240," So, oh."
6452240,6452480," Yeah."
6452480,6457120," So, it's actually now named after the leaf module."
6457120,6457440," Right."
6457440,6458960," So, it's now leaf module."
6458960,6460160," I can probably customize."
6460160,6460400," Right."
6460400,6462720," So, we can probably put dash O in there."
6462720,6463520," And stuff like that."
6463520,6465360," But I don't want to do that."
6465360,6467200," So, we get some subs and everything."
6467200,6468960," So, I think I want to acknowledge them super quick."
6470160,6472320," So, JioFrostomA."
6472320,6473040," Thank you so much."
6473040,6475680," I hope I pronounced nickname correctly."
6475680,6477200," Thank you so much for Twitch Prime with a message."
6477200,6478800," I'm late to the streams as always."
6478800,6479440," It's fine."
6479440,6481600," So, the words are available."
6481600,6483040," And it's going to be on YouTube as well."
6483040,6484720," CaribbeanDominos."
6484720,6486880," Thank you so much for two hand bits with a message."
6486880,6491120," Watching you helps keep me calm after arguing with Uncle Bob all day."
6492560,6493760," Why are you arguing with him?"
6493760,6498160," This feels kind of pointless, to be fair."
6498160,6499440," Right."
6499440,6503760," So, like he's just pushing his agenda no matter what."
6503760,6508000," It's just, it's like arguing with LLM with a certain prompt hardcoded into it."
6508000,6510080," It's just like, why would you even do that?"
6510080,6512400," Just like, don't waste your time."
6512400,6513840," Write something."
6513840,6514480," Something useful."
6514480,6516720," Hexas333."
6516720,6519120," Thank you so much for Twitch Prime with a message."
6519120,6520640," C3ARC confirmed."
6520640,6522560," It's been a while already."
6522560,6526080," I mean, so, I've done a lot of C3 streams actually."
6526080,6527680," Right."
6527680,6528720," MonsBoss."
6528720,6531520," Thank you so much for the Twitch Prime."
6531520,6532640," I already acknowledged you, I think."
6532640,6534640," CLLazarA."
6534640,6536240," Thank you so much for a tier one subscription."
6536240,6537600," I really apologize if I missed anything."
6537600,6538320," But, right."
6538320,6539600," Sometimes I miss it."
6539600,6543120," Because I'm super focused on the software development."
6544080,6544400," Okay."
6544400,6549440," So, let's actually try to run the server."
6549440,6551440," And let's actually run the client."
6551440,6553840," And, yeah."
6553840,6557600," So, the client handshake error was unwrapped."
6557600,6564240," So, the only reason why it may be unwrapped is because it didn't fully read everything."
6564240,6567200," Why it didn't fully read everything?"
6567200,6568560," That's the real question."
6572560,6573120," Okay."
6573120,6575440," So, what if I just do tell nets."
6575440,6575840," Okay."
6575840,6577040," 27.0.0.1."
6577040,6577600," 69."
6577600,6579360," 69.69."
6579360,6580320," Right."
6580320,6581120," Did we?"
6581120,6581360," Okay."
6581360,6582640," So, it accepted connection."
6582640,6584160," Right."
6584160,6585600," And then it's a legal instruction."
6585600,6588720," But, I mean, server handshake node key."
6588720,6596240," Honestly, we should not crash the server on the handshake error."
6596240,6600240," I didn't think it's worth doing that, to be fair."
6600240,6601120," Right."
6601120,6605520," One of the things we can do is, you know, if try."
6605520,6607280," All right."
6607280,6612400," And essentially do something like print fn error."
6613680,6617680," Handshake failed."
6617680,6622160," We can even maybe print, like, you know, what kind of handshake was that."
6622160,6624160," Right."
6624160,6625200," So, this can be error."
6627600,6633200," So, if catch error, we just print the error and then we continue."
6633200,6635200," That's what we can do in here."
6635200,6637200," Right."
6637200,6641440," If catch error, like this."
6645440,6651120," So, if we didn't, I think it will only fail when there's a legit error in here."
6651120,6655040," So, and you want to quit in any way in this specific situation."
6655040,6656400," Right."
6656400,6661040," So, in here, we're going to do print fn."
6661040,6669360," So, send text failed because of that error."
6669360,6671440," And we just continue."
6672400,6673760," So, okay."
6673760,6679440," So, we need to do something about resetting the mark."
6679440,6687120," So, that basically means that we probably want to reset the temporary mark at the beginning."
6687120,6688640," Right."
6688640,6692640," We're just resetting the temporary mark at the beginning."
6692640,6695520," And, right."
6695520,6697440," So, then we go into that."
6697440,6698480," And, yeah."
6698480,6699440," I think that makes sense."
6699440,6701040," That makes sense."
6701040,6701600," Defer."
6701600,6703360," Maybe defer."
6703360,6707440," If defer works scope-wise, I don't know."
6707440,6708720," I need to research that."
6708720,6710800," I'm not really in the mood of doing that right now."
6710800,6712320," All right."
6712320,6714400," So, okay."
6714400,6716400," So, that's much better."
6716400,6718560," It doesn't kill the server, as you can see."
6718560,6720240," Right."
6720240,6722480," So, how do I..."
6722480,6727920," Does anybody remember how to fall into connection?"
6729440,6730080," Right."
6730080,6732640," So, I can just search for Telnet."
6732640,6734880," I forgot how to work with Telnet."
6734880,6736160," Control-4."
6736160,6736480," Okay."
6736480,6738560," It didn't work."
6742560,6742880," Okay."
6742880,6744560," To."
6744560,6746400," Control."
6746400,6746880," Yeah."
6746880,6749440," Okay."
6749440,6750240," So, that kind of worked."
6750240,6754400," It was easier to..."
6754400,6755040," Oh, it's still..."
6755040,6756160," Okay."
6756160,6757280," Listening to the chat again."
6757280,6758560," Okay."
6758560,6759200," Telnet."
6759200,6759840," Kill."
6759840,6761440," One, three, two."
6761440,6762000," One, two."
6762000,6762560," Yeah."
6764080,6766480," So, this is because we don't close the connection."
6766480,6767840," That's actually why."
6767840,6768640," Right."
6768640,6769840," We don't close the connection."
6769840,6772480," What if we do close the connection in here?"
6772480,6776000," And by the way, we probably do want to close it."
6776000,6780000," I wonder if I..."
6780000,6781280," Yeah."
6781280,6784000," Can I just like, you know, close it and ignore it?"
6784800,6786240," Um, defer."
6786240,6788240," Maybe I can't."
6788240,6789120," Right."
6789120,6791520," Can you also do defer in here?"
6791520,6792800," Maybe I can."
6792800,6794880," Yeah."
6794880,6800160," Uh, all right."
6800160,6801200," So, what we have in here..."
6801200,6804000," So, it seems to be compiling."
6804000,6805360," So, everything is nice."
6805360,6807440," Right."
6807440,6809200," So, it's always closing."
6809200,6811120," And, uh, let me see."
6811120,6813680," So, if I do tile net."
6813680,6818800," And set some shit."
6818800,6820160," And it closes the connection."
6820160,6820640," Perfect."
6820640,6821440," That's actually kind of cool."
6821440,6822800," Uh, right."
6822800,6824240," I can just put some shit in here."
6824240,6825440," And just like a server hand-check."
6825440,6825840," No key."
6825840,6827360," Understandable."
6827360,6828720," Perfectly understandable."
6828720,6830240," Uh, I can probably even."
6830240,6832000," Um, maybe."
6832000,6834320," Copy paste this."
6834320,6834720," Like a."
6834720,6836320," Requests."
6836320,6836640," Right."
6836640,6837520," From RFC."
6837520,6838480," Can I?"
6838480,6840880," Uh, I think I can."
6840880,6842080," That's actually kind of cool idea."
6842080,6844560," Uh, web socket."
6844560,6846240," This is the wrong one."
6846240,6851360," Uh, web socket key."
6851360,6854400," Yeah."
6854400,6854800," This one."
6854800,6857840," Probably not that good of an idea."
6857840,6858880," Um."
6858880,6862400," Because."
6862400,6865600," I need to make sure that."
6865600,6867520," it has slash r at the end of it."
6867520,6872160," Which I can probably ensure."
6872160,6873360," If I convert."
6873360,6875680," Um."
6875680,6876480," I don't remember."
6876480,6877600," Like a buffer."
6877600,6878240," Convert."
6878240,6880720," Emacs."
6880720,6883280," Convert text to dos."
6883280,6884800," I remember vaguely."
6884800,6886560," How to do that."
6889120,6889920," What's the interactive."
6889920,6890880," What's the interactive."
6890880,6892480," Default buffer."
6892480,6892960," Default buffer file."
6892960,6893360," And code."
6893360,6894800," No bro."
6894800,6897040," What's the interactive function."
6897040,6898560," That does that."
6898560,6902160," How is the interactive function called."
6902160,6903040," This is."
6903040,6904080," Fucking bad."
6904080,6904560," Useless."
6904560,6905840," Set buffer."
6905840,6906240," Okay."
6906240,6907120," This is what I'm talking about."
6907120,6908000," Set buffer."
6908000,6909840," File encoding system."
6909840,6910240," Dos."
6910240,6910720," There we go."
6911520,6911920," Uh."
6911920,6913040," All right."
6913040,6913840," So hopefully."
6913840,6916880," That will maybe create something."
6916880,6917840," I'm not sure if it will."
6917840,6918240," You know."
6918240,6918800," Do anything."
6918800,6920080," But."
6920080,6920720," Let's actually."
6920720,6922960," Fuck."
6926800,6927200," Okay."
6927200,6927600," So."
6927600,6929840," And it."
6929840,6931680," It didn't fully."
6931680,6933680," Ah."
6933680,6943280," I think I copy paste it."
6943280,6943760," Yeah."
6943760,6944000," Yeah."
6944000,6945360," I didn't properly copy paste it."
6945360,6945920," Unfortunately."
6945920,6947280," Whatever."
6947280,6948400," It doesn't."
6948400,6948880," Doesn't matter."
6948880,6950480," Okay."
6950480,6951760," So if I try client."
6951760,6953680," Message from server."
6953680,6954880," Connection."
6954880,6955600," Reset."
6955600,6956720," Something with a client."
6956720,6957200," Honestly."
6957200,6959360," Something with a client."
6959360,6960240," Sometimes client."
6960240,6962400," Passes properly."
6962400,6964400," But sometimes it doesn't."
6964400,6965440," And."
6965440,6965760," Like."
6965760,6967520," I allocated big enough buffer."
6967520,6968320," For all of them."
6968320,6969280," To work properly."
6969280,6970400," So."
6970400,6971200," Something."
6971200,6971760," Flash."
6971760,6973120," Maybe it's something about."
6973120,6973600," Flashing."
6973600,6974080," Honestly."
6974080,6974720," You're right."
6974720,6975840," Yeah."
6975840,6977680," That looks like a flushing problem."
6977680,6979040," Um."
6979040,6980080," So let's actually see."
6980080,6981120," TCP."
6981120,6982560," There's something like."
6982560,6983120," Flush."
6983120,6984960," Um."
6984960,6985520," So maybe."
6985520,6986160," Socket."
6986640,6987440," Flush."
6987440,6990000," Mm."
6990000,6990720," That's annoying."
6990720,6992240," That's annoying."
6992240,6993600," Whatever."
6993600,6994000," Chat."
6994000,6995640," CRLF."
6995640,6996040," Whatever."
6996040,6996940," We already passed that."
6996940,6997360," It doesn't matter."
6997360,6998240," Um."
6998240,6999440," So how can we flush?"
6999440,7000640," Chat again."
7000640,7001440," Can't keep up."
7001440,7002000," With me."
7002000,7002720," It's just like."
7002720,7003040," They're."
7003040,7004400," Speaking about the problem."
7004400,7005200," That is not a problem."
7005200,7006160," For half of an hour already."
7006160,7006880," All right."
7006880,7006960," All right."
7006960,7007060," All right."
7007060,7007460," Um."
7007460,7008240," So."
7008240,7011120," That's."
7011120,7012120," Annoying."
7012120,7012780," Honestly."
7012780,7013520," The fact."
7013520,7014260," Uh."
7014260,7014960," That's."
7014960,7016440," We need to do flush."
7016440,7017180," In here."
7017180,7017800," Like."
7017800,7018380," Why do we even."
7018380,7019320," Fucking need the flush?"
7019320,7020880," Uh."
7020880,7021900," All right."
7021900,7022500," So."
7022500,7026880," That doesn't even allow me to flush."
7026880,7027460," Right."
7027460,7028300," It's not a thing."
7028300,7028740," In here."
7029480,7031000," In the entirety of the."
7031000,7033280," Of the thing."
7033280,7034740," Mm."
7034740,7035400," That's annoying."
7035400,7036320," I probably have to."
7036320,7040660," I probably have to do some shit."
7040660,7045900," It does feel like a flush problem."
7045900,7046120," Right."
7046120,7048280," Because it's also very much inconsistent."
7048280,7049740," Um."
7049740,7050180," Right."
7050180,7050940," But anyway."
7050940,7054200," So let me take a look at C3WS."
7054200,7056240," Uh."
7056240,7057300," So the client."
7057300,7058500," Handshake."
7058500,7059360," Where is the client?"
7059480,7059900," Handshake."
7059900,7062960," So we just append this thing."
7062960,7063760," So."
7063760,7065400," And then we just write."
7065400,7066840," This stuff."
7066840,7069420," And I expect it to be blocking."
7069420,7070020," I think it."
7070020,7071400," It must be a blocking."
7071400,7074360," Lerner."
7074360,7075200," Please."
7075200,7077180," Don't debate me."
7077180,7079800," Please don't tell me."
7079800,7081480," That you made TCP sockets."
7081480,7082940," Asynchronous by default."
7088620,7089540," I swear to God."
7089540,7090540," If there's some sort of."
7090540,7091860," Asynchronous sockets by default."
7091860,7096300," Like."
7096300,7097880," I'm going to be very much disappointed."
7097880,7099040," It's the case."
7099040,7101820," Okay."
7101820,7102840," So."
7102840,7106180," So we're doing that."
7106180,7108100," Connect without timeout from."
7108100,7108480," Okay."
7108480,7109940," So that's how we're connecting."
7111100,7113940," So if the timeout is."
7113940,7116760," So we can do with timeout."
7116760,7118560," Then we're connecting to."
7118560,7121800," So there's some socket option and stuff like that."
7121800,7123120," So let's actually take a look at that."
7123120,7124520," So connect to."
7124520,7127180," Connect from."
7127180,7130600," But that's already part of the net thing."
7130600,7132140," And it's."
7132140,7133140," Where is it?"
7133140,7134040," Bro."
7134040,7136740," So connect."
7136740,7137320," Okay."
7137520,7139300," So and it's not even here."
7139300,7141060," Um."
7141060,7142100," All right."
7142100,7143980," So where is that thing?"
7143980,7146360," Uh-huh."
7146360,7148520," Loop over AI."
7148520,7151520," Uh-huh."
7151520,7155240," Apply SOC options."
7155240,7157220," But I didn't think we passed any."
7157220,7159200," Options in there."
7159200,7161640," And that would do OS connect."
7163640,7166680," So chat."
7166680,7167400," Go away."
7167400,7169140," You're being too noisy."
7169140,7170220," I'm not listening to you."
7170220,7172080," Uh."
7172080,7173700," Okay."
7173700,7176980," So I didn't really see anything."
7176980,7180780," So maybe apply SOC options could be something."
7180780,7181120," Yeah."
7181120,7184120," It doesn't have any additional things in here."
7184120,7185600," Uh."
7185600,7185940," All right."
7185940,7187380," So the OS connect."
7190080,7193800," OS connect."
7193800,7194060," Yeah."
7194060,7194620," I didn't really."
7194620,7196160," And it's external function."
7196160,7197140," It goes into C."
7197140,7198980," All right."
7198980,7201860," So that is fascinating."
7201860,7202460," Honestly."
7202460,7204280," That is fascinating."
7204280,7205940," So we need to."
7205940,7210900," Go into the C3WS."
7210900,7212620," C3WS."
7214620,7217800," So we don't return anything particularly useful in here."
7217800,7218820," Um."
7218820,7221200," So we were logging stuff in here."
7221200,7222620," So printfn."
7222620,7224040," Right."
7224040,7226000," Um."
7226000,7228780," So."
7228780,7230980," The server."
7230980,7232160," Responds."
7232160,7234500," So this is the server response."
7234500,7235500," This is S."
7235500,7237120," Responds."
7237120,7238880," I just want to take a look at that thing."
7238880,7241460," I simply want to take a look at that thing."
7241460,7242400," So it can be build."
7242400,7243860," Uh."
7243860,7244680," Like so."
7244680,7245800," Right."
7245800,7246980," Okay."
7246980,7249020," All right."
7249020,7249580," That's cool."
7249580,7253960," So we received everything in its entirety."
7253960,7256280," Um."
7256280,7257400," I wonder if it's going."
7257400,7257660," Yeah."
7257660,7257900," Okay."
7257900,7258740," So this is good."
7258740,7261200," It crashed."
7261200,7265560," Even though."
7265560,7269540," This seems to be like a legit thing."
7271340,7276120," That is bizarre."
7276120,7279220," In all honesty."
7279220,7282200," That is bizarre."
7282200,7288080," Probably because we need to maybe maintain some sort of a buffer."
7288080,7291400," Hmm."
7291400,7294440," I probably need to maintain some sort of a buffer."
7294440,7295120," We already."
7295120,7298480," Processed everything and stuff like that."
7299760,7300100," Hmm."
7300100,7300260," Hmm."
7300260,7301680," Yeah."
7301680,7302600," That's what we have to do."
7302600,7303380," I think."
7303380,7308000," Hmm."
7308000,7310340," That's probably what we have to do."
7310340,7314160," Honestly."
7314160,7316640," That's a lot of effort to do it right now."
7316640,7319580," I'm already streamed for two and a half of an hour."
7319580,7322940," And I think I'm going to leave it for maybe tomorrow."
7324180,7324480," Yeah."
7324480,7329900," Because maintaining this sort of like a."
7329900,7331340," You know what I'm talking about guys."
7331340,7332960," Like do I need to explain what I'm talking about?"
7332960,7334540," Um."
7334540,7336460," Do I need to explain what I'm talking about?"
7336460,7338200," Um."
7339240,7341280," So the thing."
7341280,7342740," Yeah."
7342740,7343100," We see."
7343100,7343340," Yeah."
7343340,7345400," So there should be some sort of like a limited buffer."
7345400,7346340," Right."
7346340,7346840," And."
7346840,7347980," Uh."
7347980,7349340," So when I read."
7349340,7351140," I just append stuff into that buffer."
7351140,7352860," Then I process it a little bit."
7352860,7354360," Then I shift it around."
7354360,7355620," Then I append even more."
7355620,7356400," And so on and so forth."
7356400,7357500," Sort of like a rolling buffer."
7357580,7361320," Because TCP is this stupid stream oriented protocol."
7361320,7362340," Uh."
7362340,7364060," Which nobody fucking needs by the way."
7364060,7365760," Nobody fucking needs that."
7365760,7366800," But it still is."
7366800,7368620," So you have to do this stupid shit."
7368620,7369120," Um."
7369120,7370060," And."
7370060,7371100," Here."
7371100,7372260," Whatever I did in here."
7372260,7373260," Is sort of a hack."
7373260,7374820," Ring buffer."
7374820,7377160," You may call it a ring buffer."
7377160,7377880," But it's."
7377880,7379760," I don't want to use a ring buffer."
7379760,7382360," Because it's not particularly continuous on the ends."
7382360,7383180," And stuff like that."
7383180,7386080," So it's better to just like pre-allocate some sort of a buffer."
7386240,7387900," And just like literally shift it around."
7387900,7389040," It just like makes everything easy."
7389040,7390200," Um."
7390200,7391540," So yeah."
7391540,7394540," And that's what we'll probably have to do."
7394540,7395360," But that's."
7395360,7396960," Just takes some time."
7396960,7397560," Right."
7397560,7398220," To implement."
7398220,7399660," I already spent a lot of time."
7399660,7399900," Just."
7399900,7400820," You know."
7400820,7402220," Figuring out the rest of the stuff."
7402220,7402540," So."
7402540,7405340," I think I'm going to maybe split it into days."
7405340,7406120," Um."
7406120,7406580," Right."
7406580,7406960," So."
7406960,7408660," And I'm going to continue on the second day."
7408660,7409600," And we'll see how it goes."
7409600,7410840," Um."
7410840,7411160," All right."
7411160,7412320," That's it for today."
7412320,7414660," Thanks everyone who's watching right now."
7414660,7415760," I really appreciate it."
7415940,7416480," Have a good one."
7416480,7417200," And I'll see you tomorrow."
7417200,7418980," Tomorrow we're going to continue."
7418980,7420520," We're going to finish this entire thing."
7420520,7421420," Uh."
7421420,7421740," Right."
7421740,7423380," And hopefully by the end of the session."
7423380,7423860," Right."
7423860,7425600," So we're going to have like a working server."
7425600,7428400," That can accept connections from the browser."
7428400,7428900," Right."
7428900,7430180," So because that's going to be the goal."
7430180,7430980," All right."
7430980,7432240," Thanks everyone for watching."
7432240,7432920," I love you."
7432920,7434540," All right."
7434540,7435560," This is the next day."
7435560,7436180," So."
7436180,7437260," Essentially."
7437260,7438160," Um."
7438720,7442540," We have a little bit of a problem with the WebSocket protocol."
7442540,7443080," Honestly."
7443080,7444360," Um."
7444360,7449000," So the WebSocket protocol is actually kind of nice and clean."
7449000,7450020," Um."
7450020,7452780," In the sense that at any point of time."
7452780,7456700," You kind of know how much data you need to read from the socket."
7457260,7457580," Uh."
7457580,7457900," Right."
7457900,7460520," So because usually you first read."
7460520,7461280," Uh."
7461280,7463380," A little bit of like a header of the frame."
7463380,7464820," I don't remember the details."
7464820,7465660," Please forgive me."
7465660,7469680," Like I don't remember if the length of the payload of the frame comes first or not."
7469760,7471620," But there is a little bit of like a like metadata."
7471620,7474100," And it's usually has like a fixed size."
7474100,7475180," Uh."
7475180,7475480," Right."
7475480,7475880," So."
7475880,7477420," And then you decode that metadata."
7477420,7482520," And you kind of know how much data you need to read to read the entirety of the frame."
7482520,7484280," Which is rather convenient."
7484280,7484580," Right."
7484580,7487340," So it makes the memory management kind of predictable."
7487340,7488100," Right."
7488100,7489760," So I read the fixed."
7489760,7490120," Uh."
7490120,7492720," Fixed size chunk."
7492720,7494940," Then I read a variable size chunk."
7494940,7495860," But I know its size."
7495860,7497620," Then I continue doing that."
7497620,7498760," And I'm just reading the frames."
7498900,7501120," And that's basically the protocol."
7501120,7501420," Right."
7501420,7502180," So."
7502180,7506080," But all of that kind of breaks at the handshake."
7506080,7510240," Because handshake must look like HTTP requests."
7510240,7511080," Right."
7511080,7512540," And it can be a variable length."
7512540,7515960," And it's kind of difficult to pull it off."
7515960,7519120," Because you're trying to read a fixed size."
7519120,7521960," In our case, we actually did a little bit of a hack."
7521960,7524780," So let me actually open this entire thing."
7524780,7527820," So when I do a server handshake."
7527920,7530400," Let's find the function that does the server handshake."
7530400,7531840," Right."
7531840,7534460," So we just allocated like a buffer of kilobyte."
7534460,7536300," And we read the entirety of the buffer."
7536300,7537680," Right."
7537680,7544460," And the problem is that what if we received the handshake plus the first frame."
7544720,7547580," And all of that fits into a single kilobyte."
7547580,7548320," Right."
7548320,7551540," So that means we're going to read a little bit of the frame."
7551540,7552060," Right."
7552060,7553340," A little bit of the frame."
7553340,7556260," So we're going to verify the handshake."
7556260,7559500," And we should kind of retain this a little bit of the piece."
7559500,7560500," Right."
7560500,7563000," So this tiny piece of frame."
7563200,7570380," And then we have to process it on the next read message of the library."
7570380,7570700," Right."
7570700,7572160," So when the user of the library requests."
7572160,7572380," Okay."
7572380,7573460," So read the message."
7573460,7579740," So we should kind of retain this piece and take it into account when we're reading the frames and stuff like that."
7579740,7581160," It's kind of annoying in that regard."
7581160,7582560," Right."
7582560,7586660," So and because of that, these handshakes break everything."
7586660,7597480," It would be kind of nice if we had an opportunity to kind of like read a huge chunk and then like basically unread that entire part."
7597480,7600880," So the next read on the socket returns it back."
7600880,7601700," Right."
7601700,7605500," And as far as I know, some IO APIs actually allow you to do that."
7605940,7612360," But yesterday, right after the stream, I looked into what the POSIX socket API provide."
7612360,7615800," And I couldn't really find anything except one interesting thing."
7615800,7617440," If you use a function receive."
7617440,7618900," Right."
7618900,7620460," So there's a receive function."
7620460,7620820," Right."
7620820,7623800," Which acts like read, but it's for sockets specifically."
7623800,7624440," Right."
7624440,7629320," So in POSIX, you can use either read or receive on the socket."
7629320,7629580," Right."
7629580,7631300," Because the socket is basically file descriptor."
7631300,7631760," It doesn't matter."
7632320,7638020," But the receive allows you to supply additional flags specific to socket API."
7638020,7638460," Right."
7638460,7642880," So and one of the flags that it allows you to supply is called message pick."
7642880,7643580," Right."
7643580,7645200," So this is a very interesting flag."
7645200,7653520," So this flag causes the receive operation to return data from the beginning of the receive queue without removing that data from the queue."
7653520,7657280," Those subsequent receive calls will return the same data."
7658240,7668740," So essentially, one of the things we can do instead of like unreading that specific piece of data, we can actually peek into first kilobyte of data."
7668740,7669580," Right."
7669900,7678480," So denote, identify what is the handshake, process that handshake, and only read the size of the handshake."
7678480,7685120," So it gives us an opportunity to actually measure the size of the handshake and basically remove that."
7685120,7691000," So then the next read is going to actually read a correct boundary of the frame, hopefully."
7691540,7693120," And this is only a hypothesis."
7693120,7698520," So I think that's the reason why yesterday our server and client didn't really work."
7698520,7700680," But I might be wrong, actually."
7700680,7701800," I don't know yet."
7701800,7711500," I want to try to implement this idea, right, where the way we process the handshake is by actually peeking into the handshake rather than reading it right away."
7711820,7717720," Right, and see if it fixes anything, if it fixes anything, so that means we'll finally achieve the goal that I wanted to achieve yesterday."
7717720,7718900," Right."
7718900,7719520," Sounds good."
7719520,7720520," Sounds Gucci."
7720520,7721040," Chat."
7721040,7722420," Sounds Tomaguchi."
7722420,7723280," Let's go."
7723880,7727720," So let's take a look at what the library provides, actually."
7727720,7730240," So let's take a look at what library provides."
7730240,7736320," So we need to grab, maybe I'm going to do RG, and I'm going to grab specifically receive."
7736320,7739560," So we don't really use receive in that many places, right?"
7739560,7744940," So we have just basically declaration of the function for Win32, for POSIX, and stuff like that."
7744940,7747800," So, and here is the interesting function, right?"
7747800,7752180," So receive is only used in here, right?"
7752680,7754280," So when we read from the socket."
7754280,7760160," And what's funny is that, like, you can't really provide any flags in here, right?"
7760160,7764480," So, and that's the only place where receive is actually used."
7764480,7770680," So what I'm thinking is that it will be kind of cool to maybe introduce another function in here, right?"
7770680,7782200," So something like socket peak with literally the same signature, except internally, it's going to be maybe implemented with that specific flag."
7782480,7784860," All right, so let's actually give it a try."
7784860,7786100," Message peak, right?"
7786100,7788240," So maybe it's a part of libc, I don't know."
7788240,7790360," So something like that."
7790360,7791440," It will be kind of cool."
7791440,7797700," I'm not really sure why is it dynamic, and I don't remember what is dynamic, what dynamic means."
7797700,7802300," Is it like, so uses virtual table or something like that?"
7802760,7804880," All right, so let's actually see C3Lang."
7804880,7806980," So I need to open the website."
7806980,7810760," All right, all right, all right."
7810760,7816920," So thank you so much, in-laws, for to which I am subscription, with the message, hey, hey, what's up, what's up?"
7816920,7817420," Hey, hey, hey."
7818080,7820840," All right, so let me see what is a dynamic."
7820840,7826840," Okay, so I don't see."
7826840,7828140," Okay, dynamic methods."
7828140,7829120," All right."
7829120,7836040," Method must be declared dynamic to implement an interface, but the method may also be declared dynamic without the type declaration."
7836460,7843200," It implements a particular intercept, for example, this allows us to write, this will be in-satisfying-my-name."
7843200,7850060," Dynamic methods have their reference retained in a runtime code and can also be searched for a runtime."
7850060,7857720," Okay, so it's something, doesn't really explain what exactly does it do, but okay, sure."
7857720,7862560," Maybe we don't have to make it dynamic or whatever, but anyway."
7863260,7867060," So maybe for now, we're not going to actually add it to the library, right?"
7867060,7872000," So because in that case, the code that we'll write only will work with my version of the compiler."
7872000,7875040," Yet again, I already made that mistake before."
7875040,7875900," I'm not going to make it again."
7875900,7882660," So for now, I think I'm going to just make it part of the library itself and see if it's going to work, actually."
7882660,7890960," So I think, so the syntactical part of C3 kind of suggests that you should be able to do this kind of shit, right?"
7891060,7894180," So essentially, like here, I added another method to socket."
7894180,7897000," All right, so let's give it a try."
7897000,7900160," So I'm going to build sh, right?"
7900160,7906620," So, and really, there is no message peak in here."
7906620,7907900," So, are you real?"
7907900,7909480," Are you even fucking real, bro?"
7909480,7910780," So, RG."
7916480,7927780," We can actually extract it from C, I suppose, right?"
7927780,7929520," So we can do something like main.c."
7929520,7935460," Right, so man receive message peak."
7935460,7939200," So all of that is located within the sockets."
7939200,7940240," Le sockets."
7940240,7941260," Le sockets."
7941980,7944060," And I'm going to include std.io."
7944060,7947320," And let's just do it like that."
7947320,7953820," So this is going to be something like printfd message peak."
7953820,7955440," Right."
7955440,7961440," So I suppose learner actually just implements, you know, the POSIX interface as it's needed."
7961440,7964520," So he probably never needed this kind of part of the interface."
7964660,7965860," So it's not part of the library."
7965860,7966480," Right."
7966480,7971040," So it's kind of difficult to just like implement everything at once unless you have some sort"
7971040,7974160," of like automatic conversion or anything or something."
7974160,7977120," So, yeah, it's understandable actually."
7977120,7978140," It's understandable."
7978140,7980140," Two."
7980140,7980940," Okay."
7980940,7982720," So message peak is actually two."
7982720,7984080," Understandable."
7984080,7985200," Understandable."
7985200,7990300," Can we just make it something like const int message peak equal to."
7990300,7990940," Right."
7990940,7995600," So, and then in here, I just grab the syntax thing and use that."
7995600,8001440," So, but I'm not really sure like how exactly does it work on Windows."
8001440,8001740," Right."
8001740,8009580," So can I have, so this is going to be the Linux, the POSIX thing."
8009580,8012340," But on Windows, what is it?"
8012340,8013780," Do I have something like error?"
8014400,8020800," Can I say, so not supported on Windows yet."
8020800,8021840," Right."
8021840,8023320," Because I have no idea."
8023320,8025560," I have no idea how to do that."
8025560,8029420," So is there any way to just like error, do a compilation error in Sist3?"
8029420,8030140," Does anybody know?"
8030140,8033160," It will be actually kind of progress, I think."
8033160,8036180," No, there is no way to do that."
8036180,8041160," But honestly, I don't fucking know."
8041160,8042400," I don't fucking know."
8043180,8047420," So maybe fail, failure."
8047420,8048960," You know what?"
8048960,8050380," You know what?"
8050380,8051200," You know what?"
8051200,8058480," So I probably can actually look into the, into the mode of Sist3."
8058480,8062120," Because it probably has all of the, yeah."
8062120,8063140," So here they are."
8063140,8064760," Here are all of these things."
8064760,8067060," So assert, assert."
8069220,8077780," The closest thing I see is probably, yeah, it's probably assert, which we can actually utilize."
8077780,8081400," Can I just say assert, right?"
8081400,8085500," So assert and just say false like that."
8087600,8089240," Sounds good, actually, to me."
8089240,8090880," What does it say?"
8090880,8092780," Expected."
8092780,8097020," So I need to have some example how assert is actually used in here."
8097020,8100040," So check for conditions, compilation time or something."
8101340,8104460," There is a message pick support in Winsoc.h."
8104460,8107320," Winsoc.h."
8107320,8113260," Message pick."
8113260,8115220," There is no message pick in the standard library."
8115220,8115640," That's it."
8115640,8117640," Right."
8117640,8119040," So, okay."
8119040,8120220," Oh, there is error."
8120220,8122500," When it's compiled, issue a comp..."
8122500,8124640," But it didn't work."
8124640,8127680," But it didn't work."
8127680,8133400," That's very interesting."
8133400,8135840," Is that the, like, was it introduced, like, recently?"
8135840,8138880," I'm actually really curious."
8138880,8141560," So that means the error does exist."
8141560,8144020," So can I just say something like test?"
8144020,8146760," Let's just see."
8146760,8150220," Okay."
8150340,8151680," So it wants a semicolon."
8151680,8156120," Expect to start with a global declaration in here."
8156120,8158320," Okay."
8158320,8162000," Oh, you can't have ifs at the top level?"
8162000,8163560," Is that what it is?"
8163560,8166100," Is that real, Chad?"
8166100,8168440," Like, you can't have ifs at the top level."
8168440,8172380," Oh, I think I know how you do that."
8172380,8173060," Right."
8173060,8174080," I think I know how you do that."
8174080,8180300," So, essentially, you just say, like, if, right, environment win 32."
8181320,8181680," Right."
8181680,8183520," I think that's how you do that."
8183520,8184900," Yeah."
8184900,8186540," It's kind of annoying, honestly."
8186540,8187440," It's kind of annoying."
8187440,8188560," So, you know what I'm going to do?"
8188560,8190180," I'm going to just put it like that in here."
8190960,8199960," And for now, I'm going to just say that error, so win 32 is not supported yet."
8200420,8205340," I know that somewhere in some sort of a header somewhere there is a declaration."
8205340,8208240," I can look into that and blah, blah, blah, blah, blah, blah, blah."
8208240,8210140," I fucking know that later."
8210140,8212600," Later."
8212600,8213360," All right."
8213400,8217540," So, I need to focus on making the thing work on my machine for now."
8217540,8219840," All of that can be fixed later."
8219840,8220820," All right."
8220820,8223300," I understand that you can do that."
8223300,8224860," Anyways."
8224860,8227440," All right."
8227440,8228200," So, what do we have in here?"
8228380,8248880," So, it's insane how people just over-hyper-focus on the most unimportant fucking thing ever."
8249020,8253880," It's just insane to the point that they become blind to actually solving the fucking problems."
8253880,8255820," Right."
8255820,8259120," It's just like, dude, calm fucking down."
8259120,8259940," All right."
8259940,8261680," So, all right."
8261680,8262420," Nice, nice, nice."
8262420,8263460," Okay."
8263460,8266320," So, and it works and this kind of thing."
8266320,8267180," It's interesting."
8267180,8272200," Nobody really updates the Emacs extension these days, right?"
8272200,8276320," So, because they switched to TreeSitter, right?"
8276460,8280900," So, and the Emacs extension that I use now is considered like a legacy extension."
8280900,8284440," But anyway, it is what it is and it isn't what it isn't."
8284440,8286480," So, everything seems to be compiling."
8286480,8287760," Right."
8287760,8289640," So, maybe I'm going to put it to doing here."
8289640,8299180," Move socket peak into the stand, into STD and make a PR to C3, maybe."
8299180,8300080," Right?"
8300080,8300740," Something like that."
8300740,8302100," Okay."
8302100,8303620," So, we'll get this kind of stuff."
8303620,8314660," And now we need to probably port, you know, this, not really port, but re-implement the handshake to support peak."
8314660,8319760," So, I think it's going to be rather interesting."
8320180,8325320," So, here we're doing peak, right?"
8325320,8327080," So, we'll get the request."
8327080,8332120," And here we're parsing the WebSocket key from the request."
8332120,8333300," We return the key."
8333300,8341600," And on top of that, I feel like we just need to also verify that, you know, this entire thing."
8342460,8343480," This entire thing."
8343480,8345900," So, we need to do several things."
8345900,8349140," We need to compute the size of the request."
8349140,8349760," Right."
8349760,8352840," Just compute the size of the, not really request, but the handshake."
8352840,8353840," The size of the handshake."
8353840,8355540," Right."
8355540,8359640," So, and also extract the WebSocket key if it exists."
8359640,8362040," That's what we need to do in here."
8362040,8363260," Right."
8363260,8365620," So, let me see how we can do that."
8365680,8369100," And we need to cram that into this interface somehow."
8369100,8371200," Right."
8371200,8373720," So, I'm not 100% sure."
8373720,8374680," So, we can try to..."
8374680,8385060," So, ideally, maybe we could pass it by a pointer."
8385060,8395060," So, on top of just processing this entire thing, it would actually chop off the request itself."
8395220,8395620," Right."
8395620,8397640," It will chop off the request itself."
8397640,8400360," Right."
8400360,8406160," And so, then you can later, you know, figure out how much it ran."
8406160,8408000," So, I need to return two information."
8408000,8408480," Right."
8408480,8410080," So, two pieces of information."
8410080,8412160," The key itself."
8412160,8412600," Right."
8412600,8415880," So, the key itself and the size of the request."
8415880,8418480," So, what's..."
8418480,8419840," How better way to do that?"
8419840,8422380," So, as far as I know, C3 doesn't return several values."
8422920,8426940," So, I suppose it would be nice to just return this thing."
8426940,8429680," And maybe..."
8429680,8431240," I don't know."
8431240,8431900," It's like..."
8431900,8433300," Do I return it like that?"
8433300,8434660," Right."
8434660,8436220," So, handshake..."
8436220,8437600," Handshake size."
8437600,8438880," Is that a good way to do that?"
8438880,8440600," Is that a good way to do that?"
8440600,8442100," Maybe it is a good way to do that."
8442140,8443160," Like, I'm not even sure."
8443160,8445140," But anyway..."
8445140,8448500," Anyway, anyway, anyway."
8448500,8451580," So, here's the handshake size."
8451580,8453940," And..."
8453940,8456220," So, we start with the request."
8456620,8461380," And we split this entire stuff by slash r slash n."
8461380,8464600," That's how we do that."
8464600,8466300," So, then..."
8466300,8471080," We split those things by that."
8471080,8476780," So, if we got this thing,"
8477440,8481040," We should not return right away."
8481040,8481900," Honestly."
8481900,8484080," We should not return right away."
8484080,8488160," We should assign it to some sort of a variable."
8488160,8488920," Right."
8488920,8491020," We should reassign it to some sort of a variable."
8491020,8491960," And continue."
8491960,8492540," Right."
8492540,8495320," Because we want to get to the end of the request."
8495320,8495780," Right."
8495780,8496760," So, that's what we want to do."
8496760,8498280," We want to get to the end of the request."
8498280,8499980," Right."
8499980,8501540," So, and in here..."
8501540,8501820," Right."
8501820,8503040," So, this is going to be like that."
8503040,8504100," So, it's going to be empty."
8505300,8505660," Right."
8505660,8509800," We can also have something like found this entire thing."
8509800,8511040," Right."
8511040,8511940," So, found."
8511940,8514020," So, initially, it's false."
8514020,8521020," And so, that means we can have a situation then when..."
8521020,8526220," Honestly, it would be nice to just have some sort of a library"
8526220,8528780," that implements HTTP header parsing."
8528780,8531780," But we don't really have that anywhere, as far as I know."
8531780,8532020," Right."
8532020,8533340," So, there's nothing in C3."
8533340,8534520," We can actually look into that."
8535160,8537700," Does C3 have anything like that?"
8537700,8539300," So, I actually don't think so."
8539300,8541280," Right."
8541280,8542500," So, it's going to be HTTP."
8542500,8544480," Anything HTTP related."
8544480,8544960," Right."
8544960,8546200," So, this is going to be that."
8546200,8546640," So, yeah."
8546640,8547720," There's no..."
8547720,8550920," Maybe we can even grab HTTP, just in case."
8550920,8551860," There's something..."
8551860,8553240," Well, I mean, there's just links."
8553240,8553760," Okay."
8553760,8554420," That's fine."
8554420,8556140," That's fine."
8556140,8556560," That's fine."
8556560,8556940," That's fine."
8556940,8558800," So, maybe..."
8558800,8559480," Yeah."
8560920,8565140," So, what's the easiest way for us to do all of that?"
8565140,8572200," We could, honestly, maybe separate concerns in here."
8572200,8575220," Kind of separate the concerns."
8575220,8576960," Right."
8576960,8580160," And create separate head."
8580160,8581920," But it's actually kind of too much."
8581920,8582800," I don't want to do that."
8582800,8583600," All right."
8583600,8583840," Whatever."
8584680,8585120," Okay."
8585120,8585720," So, here."
8585720,8587360," Found sec."
8587360,8588720," This is going to be true."
8588720,8591620," And we can have an interesting situation."
8591620,8594400," What if we found another key?"
8594400,8598120," So, if already found this kind of thing."
8599460,8601600," So, I suppose this is kind of an error."
8601600,8601960," Right."
8601960,8605000," So, we can return ws error."
8605000,8607520," Server handshake."
8607520,8610960," Maybe duplicate key."
8610960,8613620," Do duplicate key."
8613620,8614860," Can you see what I'm doing?"
8614860,8615760," You can't see it."
8615760,8617020," So, this is going to be duplicate key."
8617020,8617820," Right."
8617820,8620480," So, if we encounter it the second time."
8620480,8620740," Right."
8620740,8621680," So, we just say, okay."
8621680,8622680," This is a duplicate key."
8622680,8624160," Okay."
8624160,8627420," So, we split this like that."
8629420,8638540," And honestly, I really don't like this approach."
8638540,8642840," I really, really don't like this approach."
8642840,8651140," Because it's just like pre-splits everything."
8651140,8652860," And you have to think."
8652860,8653200," Okay."
8653200,8655320," So, the sum of them are going to be empty."
8655320,8656400," What does it mean?"
8656400,8659320," How many of the actual things you're going to have?"
8659380,8666800," This is a really bad way of thinking about parsing the HTTP request."
8666800,8670540," This is kind of a bad way of doing that, honestly."
8671660,8678100," So, maybe a better way to do that would be to maybe while."
8678100,8679760," Right."
8679760,8684280," So, while request is not empty."
8684280,8684740," Right."
8684740,8686320," So, request is going to be count."
8686320,8687540," You know, greater."
8687540,8689260," I think it's just something like len."
8689260,8690240," Right."
8690240,8693520," So, while is greater than zero."
8694080,8698660," We're trying to maybe split it by that."
8698660,8704420," Maybe we can try to find, you know, slash R slash N."
8704420,8704920," Right."
8704920,8706660," So, that's what we can try to do."
8707240,8711820," So, let me try to just go here."
8711820,8712900," So, this is going to be."
8712900,8718700," So, I need to find type file name string C3."
8718700,8719140," Right."
8719140,8720760," So, this is what we found in here."
8720760,8722120," Right."
8722580,8724620," So, is there something like indexOf?"
8724620,8725440," Okay."
8725440,8727160," So, there is an indexOf."
8727160,8729220," And needle is actually char."
8729220,8730740," But, oh, it's just char."
8730740,8731360," But, yeah."
8731360,8731560," Okay."
8731560,8732140," So, there you go."
8732140,8734220," I was looking for something that has a needle string."
8734220,8737920," Needle is usually what you're searching for."
8737920,8738280," Right."
8738360,8744280," So, and in the place where you're searching for something is usually called haystack."
8744280,8744700," Right."
8744700,8747380," So, you're searching for a needle in a haystack."
8747380,8748880," Okay."
8748880,8750560," So, yeah."
8750560,8751420," So, this is that."
8751420,8755360," And it can actually return you missing or, yeah."
8755360,8757860," So, the only thing it may return to you is missing."
8757860,8759540," Which is understandable."
8759540,8760080," Right."
8760080,8762020," So, which is totally understandable."
8762020,8766860," So, we do a request indexOf that."
8767440,8770980," And if we can just try."
8770980,8776160," And this is basically going to be the index where we found that specific thing."
8776160,8776880," Right."
8776880,8778720," So, where we found this specific thing."
8778720,8783440," And, by the way, since we're doing it like that."
8783440,8785860," Since we're doing it like that."
8785860,8790340," It is super easy to do the following thing."
8790340,8794940," While requestLen is greater than zero."
8794940,8795620," Right."
8795860,8802580," And request does not end with slash r slash n."
8802580,8804920," Right."
8804920,8812860," So, while it is something and it doesn't end with slash r slash n."
8812860,8816500," We are looking for the next slash r slash n."
8816580,8818520," And we're just processing."
8818520,8820300," We're just chopping off the headers."
8820300,8821080," Right."
8821080,8822140," So, that's what we're doing."
8822140,8826120," And then it is super easy at the end of this entire loop."
8826120,8826660," Right."
8826660,8828680," At the end of the entire loop to check."
8828680,8831840," Does it end with slash r slash n?"
8831840,8832740," Right."
8832740,8833740," Does it end with that?"
8834240,8838800," So, request ends with this kind of thing."
8838800,8839920," Slash r slash n."
8839920,8841080," And if it does."
8841080,8841560," Right."
8841560,8843140," So, if it does end with that."
8843140,8846280," That means we finally reached the end of the request."
8846280,8850480," So, it's much easier than just pre-split everything by slash r slash n."
8850480,8851260," And then figuring out."
8851340,8851500," Okay."
8851500,8855300," So, the last one is the empty element in that splittage."
8855300,8856040," And it's just like."
8856040,8856220," No."
8856220,8856340," No."
8856340,8856460," No."
8856460,8856940," It's just like."
8856940,8859620," Let's just do that dynamically in a sense."
8859620,8860000," Right."
8860000,8860560," Does it make sense?"
8860560,8861680," I think it does make sense."
8861680,8866400," And it makes it super easy to then also count the handshake size and everything."
8866400,8866780," Right."
8866780,8873080," So, we can even maybe pre-initialize handshake size like with zero."
8873080,8876400," And as we find the next index, we're going to be chopping it off."
8876400,8877600," And so on and so forth."
8877600,8878940," Right."
8878940,8880800," And here is an interesting part."
8880800,8881160," Right."
8881300,8888320," So, essentially, we may do something like this."
8888320,8888600," Right."
8888600,8891200," So, we are extracting the index."
8891200,8895960," And the index is going to be use size and it contains an error."
8895960,8899700," And then we can catch an index."
8899700,8900520," Right."
8900520,8901940," So, we're catching an index."
8901940,8907280," So, this is the place where an error has happened."
8907280,8911100," So, if we reach this entire place, that means we didn't find slash r slash n."
8911260,8913620," Which means it is an error."
8913620,8914140," Right."
8914140,8916220," So, it's basically a bad request."
8916220,8917200," Essentially."
8917200,8918080," Right."
8918080,8919840," So, this is a straight of bad request."
8920640,8921900," And we are returning that essentially."
8921900,8929200," So, what's interesting is that after we did this catch, it automatically unwrapped the index."
8929200,8934480," So, now index here contains the actual value by which we can actually slice things around."
8934480,8935160," Right."
8935160,8938920," So, I can now say, okay, starting from zero, length of the index."
8938920,8940580," And that's our header."
8940580,8942080," Right."
8942160,8943280," So, this is our header."
8943280,8943900," Like so."
8943900,8945060," Cool."
8945760,8949340," And then, on top of that, I can say, okay."
8949440,8962520," So, the request is going to be equal to request starting from index, but plus two because it's the size of this separator."
8962520,8962980," Right."
8963080,8966000," So, and we're actually taking to the end of the request."
8966000,8966520," Right."
8966520,8969780," So, here we're basically doing like a head and tail pattern."
8969780,8970160," Right."
8970160,8972680," So, we know where the separator is."
8972680,8974300," We're splitting the header."
8974300,8978900," And the rest of the request is going to be processed on the next iteration of the loop."
8979220,8979520," All right."
8979520,8980420," So, something like that."
8980420,8984320," So, what's interesting is that we're hardcoding like a lot of things."
8984320,8986900," Like two and this separator."
8986900,8987220," Right."
8987220,8988860," So, what if the separator changes?"
8988860,8989320," Right."
8989320,8990840," So, we'll have to change this place."
8990840,8992120," It will never change."
8992120,8992360," Right."
8992360,8993180," I understand that."
8993180,8998280," But the connection between these two and this separator is actually kind of unclear."
8998280,8999140," Right."
8999140,9007620," So, maybe it would make sense to actually have something like a, you know, separator, which is slash r slash n."
9007620,9008540," Right."
9008620,9011660," And then, directly just use this."
9011660,9014620," Maybe even call it a line separator."
9014620,9014940," Right."
9014940,9016860," So, maybe a line separator."
9016860,9020940," So, then later, I can do line separator length."
9020940,9026200," So, as you can see, the connection of this magical number and this separator is already established."
9026200,9031040," It's not like I'm going to change the separator in the future because this is basically the standard."
9031040,9031420," Right."
9031420,9035860," So, but the connection between these two values was not clear."
9035860,9037120," Now, it is established."
9037120,9037420," Right."
9037480,9040100," So, now, hopefully, it makes more sense."
9040100,9041420," Right."
9041420,9042360," Is string like string view?"
9042480,9042940," Yeah, exactly."
9042940,9042960," Yeah, exactly."
9042960,9043980," String is like string view."
9043980,9046360," So, yeah."
9046360,9049060," Thank you so much for all of the subs, everyone."
9049060,9049940," Right."
9049940,9052120," I'm very sorry that I didn't fully acknowledge that."
9052120,9054380," So, thank you so much."
9054380,9055820," We'll fix W with a message."
9055820,9059480," Hi, I just finished part one and a little late for part two."
9059480,9059980," It's fine."
9059980,9062120," Part two is going to be available here as well."
9063000,9064380," Don't worry about it too much."
9064380,9065520," Don't worry about it too much."
9065520,9066220," Yeah, less magic."
9066220,9066660," Exactly."
9066660,9067340," Less magic."
9067340,9079300," So, and here in here, I suppose, so header equal to zero is going to happen only if request starts with slash r slash n."
9079620,9082060," So, that means this line will definitely never happen."
9082060,9082740," Right."
9082740,9084140," It definitely will never happen."
9084140,9085160," Right."
9085160,9088160," Because otherwise, we automatically query from the loop anyway."
9088160,9092900," So, here we take the header and we actually split it in two."
9093080,9096060," So, here I'm probably going to use t-split, so I think it's totally fine."
9096060,9104140," Though, I could have actually used a similar thing with indices, but I mean, it's too, yeah, it's too annoying."
9104140,9104440," Right."
9104440,9110820," So, that means I have to introduce an additional variable where I look into the index and so on and so forth."
9110820,9116200," Though, I already have a variable index, which I don't really plan to use for anything else."
9116200,9120520," So, maybe it's fine, but I'm not sure how well it's going to work."
9120520,9121680," So, whatever."
9122300,9122700," Okay."
9122700,9124860," So, here we have key and value."
9124860,9126040," Right."
9126040,9127780," So, here we do that."
9127780,9133620," So, duplicate key, not duplicate key, and so on and so forth."
9133620,9135940," And then we repeat this thing one more time."
9135940,9136360," Right."
9136360,9139620," We'll repeat this thing one more time until we process anything."
9139620,9140760," Right."
9140760,9148920," So, in here, what we want to do, actually, we want to check if request ends with line separator."
9148920,9150700," Does it end with line separator?"
9151140,9155640," If it doesn't end with line separator, well, that means it's not the correct request."
9155640,9156240," Right."
9156240,9157740," So, this is not the correct request."
9157740,9159420," So, we can just do something like this."
9159420,9165340," If it does end with this kind of thing, so it's super easy to maybe do something like this."
9165340,9166180," Right."
9166280,9173880," So, it's essentially, you know, line separator len, and then the rest of the thing."
9173880,9174480," Right."
9174480,9176040," So, this is the rest of the thing."
9176040,9183020," And that rest of the thing, we could have just returned it, couldn't we?"
9183600,9185580," We could have just returned it, I suppose."
9185580,9190500," Yeah."
9190500,9192300," It would be nice to actually return it."
9192520,9200280," So, then, you know, essentially, how much you have to unread."
9200280,9201280," Right."
9201320,9203620," But, we are not unreading, we are just peeking into that."
9203620,9205060," But, it's still going to be useful."
9205060,9207040," Right."
9207040,9208580," So, yeah."
9208580,9211820," Because of that, we probably want to actually accept that by a reference."
9211820,9212100," Right."
9212100,9213920," So, because it's going to be modifying this and that thing."
9213920,9215440," So, it's going to be a little bit annoying."
9215440,9215800," Right."
9215840,9219020," So, that means we'll have to syntactically just, like, change all of these things."
9219020,9220780," And we'll see how it goes."
9220780,9222880," All right."
9222880,9224660," So, we've got that stuff."
9224660,9226640," And, on top of that, we need to check."
9226640,9235580," If not found the key, we're going to return WS error server handshake no key."
9235580,9236500," Right."
9236500,9237800," So, this is what we're doing here."
9237800,9242540," Otherwise, we just return the security web socket key."
9242540,9243400," So, that's what we're doing."
9243860,9248020," I guess that's essentially everything I wanted to do."
9248020,9248460," Right."
9248460,9250660," I think it's a good approach, more or less."
9250660,9252140," So, let's go to the compilation errors."
9252140,9254140," They're obviously going to work."
9254140,9260220," Because I'm modifying the request, I think I don't need handshake size."
9260220,9260780," Right."
9260780,9265620," So, because I'm going to figure out the size just by the remaining of the request."
9265620,9267580," That's how I'm going to do that."
9267580,9272360," By the remainder of the request, I'm going to figure out, like, how much I have to actually,"
9272500,9275900," sort of, like, throw away from the input buffer of this socket."
9276840,9281040," Can request go by more than one socket read, or is it impossible?"
9281040,9281780," It can."
9281780,9285680," But we're not looking into that case right now."
9285680,9294640," So, essentially, what I did, I allocated big enough buffer to hopefully read the entirety of the request."
9295180,9302620," And then, unread this stuff that I accidentally read more than I needed to."
9302620,9308440," For the case when I actually need to perform more reads, I'm going to put a separate to do."
9308440,9308880," Right."
9308880,9311400," So, this is something that I don't want to think about right now."
9311400,9311620," Right."
9311660,9314300," So, it could be, but we're not looking into that case yet."
9314300,9315740," Right."
9315740,9321800," So, the goal for today is to make this server work with a browser client."
9321800,9322360," Right."
9322360,9328160," So, and it's a very, like, a specific situation and generally won't work."
9328160,9329600," But that's the goal for today."
9329600,9332160," Just roughly implement, like, a very specific case."
9332160,9336480," And once it works, we can look at more different interesting cases."
9336480,9341980," In fact, there's a pretty cool thing here called, I think, like, Autobahn."
9341980,9344680," So, Autobahn."
9344680,9345100," Yeah."
9345100,9345400," Yeah."
9345400,9349480," So, it's basically a test suite for WebSockets."
9349480,9349940," Right."
9349940,9352280," Autobahn WebSocket Protocol Test Suite."
9352280,9359200," It essentially, just like a suite of tests for all of the possible core cases of WebSocket"
9359200,9360040," and stuff like that."
9360040,9364220," It's just like a shit ton of Python scripts that basically try to destroy your WebSocket"
9364220,9364860," implementation."
9364860,9370420," One of the streams, on one of the streams, we're going to be setting up this thing and then"
9370420,9373580," figuring out what are the edge cases we didn't implement."
9373580,9374380," Right."
9374380,9379680," So, right now, the goal is not to, like, have a full, proper implementation."
9379680,9380460," No, no, no, no, no."
9380460,9386620," Right now is to have something working in some very, very narrow specific case."
9387060,9390800," Once we have that, we can actually smooth out the stuff."
9390800,9393140," Autobahn if software is cracked."
9393140,9395640," I guess."
9395640,9396400," I don't know what that means."
9396400,9396860," But anyway."
9396860,9397860," So, here's the thing."
9397860,9401220," What's funny is that, so, they have a website."
9401220,9407080," So, it's created by a company called Crossbar.io and it doesn't exist."
9407080,9411440," So, I honestly have no idea what's up with that."
9411440,9412160," Right."
9412160,9414400," So, the company just, like, literally doesn't exist."
9414400,9420900," I remember a long time ago when I was implementing the CWS, the C version of this thing."
9421400,9426180," I actually also found this website and it existed, right?"
9426180,9430840," So, but then, like, three years ago, I suppose, three years ago it existed."
9430840,9431820," But now it doesn't exist."
9431820,9433660," Maybe it just went bankrupt or something."
9433660,9435280," But they're still doing things, right?"
9435280,9436740," The last change was nine months ago."
9436740,9438060," Right."
9438160,9442380," So, but I hope the test suite is still useful, because that's what's important."
9442380,9446300," So, this is something that we're going to be doing as well, but in the future."
9446300,9446720," All right."
9446720,9448340," Anyways."
9448340,9451740," So, let's actually go through the computation errors, as usual, and see if it's going to work."
9451740,9454120," Obviously, it doesn't work, of course."
9454120,9455600," 49."
9455600,9457380," So, what does it say?"
9457380,9458620," Oh, yeah."
9458620,9461240," We have to actually do this kind of thing, right?"
9461240,9465080," So, as you can see, we have buffer, right?"
9465080,9467940," So, we picked into the buffer and we know the size of the buffer."
9468160,9468600," Right."
9468600,9474860," But we're taking a view of the center, I think, and the parsing is going to modify the view,"
9474860,9477480," but not the original buffer, right?"
9477480,9479020," We still know the size of the buffer."
9479020,9487120," We can quite easily basically chop off the handshake request from the internal buffer of the socket"
9487120,9493600," by basically subtracting buffer size and request length, right?"
9493600,9496900," So, because this is essentially how much we have to read."
9497420,9501840," So, WS socket read, right?"
9501840,9504620," So, I suppose we can even do something like that."
9504620,9508740," So, as you can see, in here, we're peeking into the buffer, right?"
9508860,9520500," Then, in here, we're figuring out how much we have to actually read and the amount we have to actually read is the buffer size that we read minus the remaining part that we didn't parse, right?"
9520500,9524840," And that remaining part is probably the beginning of the frame, right?"
9524840,9530540," And it's going to be left in the socket, so it's going to be available on the next read when we try to read the WebSocket message."
9530540,9532920," That's basically the idea in here."
9532920,9534420," That's basically the idea."
9534420,9536740," Right."
9537420,9538860," That's the goal, at least."
9538860,9540040," All right."
9540040,9542480," So, let's actually go through the rest of the compilation errors."
9542480,9545000," 149."
9545000,9549080," So, it complained about something, but I suppose we just have to provide a point in here."
9549080,9554380," The next error, 149, still complains about this thing."
9554460,9554620," Okay."
9554620,9558980," So, this argument would expect the number of parameters, but did you add two parameters?"
9558980,9559960," What do you want from me?"
9559960,9561700," I don't get it."
9561700,9566860," Ah."
9566860,9572700," So, the amount of stuff you have to read is actually provided through..."
9572700,9574000," Yeah, I see how it works."
9574000,9577760," So, we basically have to do something like zero, and that's how much you have to read."
9577760,9579100," Right."
9579100,9581300," So, that's how it works."
9581300,9582560," Are you happy now?"
9582560,9583520," I think it is happy."
9583520,9583940," 123."
9584460,9585360," All right."
9585360,9586520," So, the request is a pointer."
9586520,9588600," So, that means we have to do something like that."
9588600,9589880," Uh-huh."
9589880,9591320," Request."
9591320,9592740," Uh-huh."
9592740,9594200," So, it has..."
9594200,9597380," When I do dot, it automatically de-references anyway."
9597380,9599160," So, it's totally fine."
9599160,9600240," Uh-huh."
9600240,9601640," So, here we have an error."
9601640,9605260," Emitting index is not allowed to the pointer."
9605260,9605580," Okay."
9605580,9606200," So, I see."
9606200,9610020," Essentially, we have to do that shit yet again."
9610020,9611680," And that's like that."
9611680,9611920," Yeah."
9611920,9613620," So, this is the annoying part of the..."
9613620,9616800," Of C3."
9616800,9617300," Right."
9617300,9618340," So, for this kind of situation."
9618340,9620640," So, we don't have a duplicate key, apparently."
9620640,9623060," So, let me see."
9623060,9623960," Uh-huh."
9623960,9624700," No key."
9624700,9626100," Duplicate key."
9626100,9626460," Right."
9626460,9628320," So, we have generally bad requests."
9628320,9630340," The lack of the key."
9630340,9631980," Or too many keys."
9631980,9632460," Right."
9632520,9634980," So, that's basically the situations we can have in here."
9634980,9636060," Uh-huh."
9636060,9636500," All right."
9636500,9640240," So, and the last problem we have in here is that one."
9640240,9642980," So, we'll just do it like that."
9644340,9650220," I swear to God, there was something like chop."
9650220,9651220," Wasn't..."
9651220,9652940," I remember seeing chop."
9652940,9654140," Nah."
9654140,9655900," Huh."
9655900,9656560," Okay."
9656560,9657300," Very well done."
9657300,9659800," That's about it."
9659800,9661460," So, it seems to be compiling."
9661460,9662020," Right."
9662020,9664640," So, that's basically the idea."
9664640,9666780," Very, very cool."
9666780,9669080," I'm super happy about that."
9669080,9673940," So, let me now take a look at what we do in here."
9673940,9674560," Right."
9675360,9688160," So, WSServerHandShake does not take into account situations when you need several."
9688160,9696080," When HandShake does not fit into Hand24Bytes."
9696080,9697360," Right."
9697360,9701520," So, we don't take that situation into account."
9701520,9703140," Right."
9703140,9706840," So, and we kind of need to do the same thing for the client."
9706840,9708540," Actually."
9708540,9711260," We kind of need to do the same thing for the client."
9711260,9713460," So, the client."
9713460,9714420," Right."
9714420,9715160," What does it do?"
9715160,9718020," It sends the said handshake."
9718020,9718580," Right."
9718580,9720260," It sends the said handshake."
9720260,9722180," Right."
9722180,9723800," It writes it as usual."
9723800,9727640," And then it reads the server."
9727640,9728180," Right."
9728180,9729500," It also reads the server."
9732320,9738420," And how do we even verify the thing?"
9738420,9740700," I suppose."
9740700,9743140," Hmm."
9743140,9749300," We need a separate function, which is similar to this one."
9749300,9751880," So, parse sec web circuit from request."
9752100,9757480," But for verifying the response from the server."
9757480,9759040," All right."
9759040,9762380," So, that's what we need to do."
9762380,9770040," And honestly, this is something that we'll need to do."
9770040,9777200," We'll need to, like, take whatever the server returned and make sure that the key is correct."
9777480,9782940," So, the client also should, you know, verify all of that stuff."
9782940,9784300," So, I suppose."
9784300,9785580," Yeah."
9785580,9788880," Because the server has to return WebSocket accept."
9788880,9790740," Right."
9790740,9792800," It has to return WebSocket accept."
9792800,9793720," By the way."
9793720,9795560," Status line."
9796620,9799720," We forgot to skip the status line."
9799720,9800700," Right."
9800700,9804280," That's, like, another thing that we have to do in here."
9804280,9807400," So, how are we going to be doing all of that shit?"
9807400,9809140," How are we going to be doing all of that shit?"
9811220,9815720," Let's go ahead and maybe just, like, a search for this entire thing."
9815720,9817040," Right."
9817040,9818940," So, we're looking for the separator."
9818940,9820480," Right."
9820480,9824140," So, handshake bad request if we couldn't find this entire thing."
9824140,9827500," And I wonder if we can just reduce the index like that."
9827500,9827800," Right."
9827800,9829380," If it's already defined."
9829380,9832180," But I feel like it may be, you can't very easily reuse it like that."
9832180,9832900," But we'll see."
9832900,9833160," We'll see."
9835040,9836740," So, yeah."
9836740,9838120," We got that."
9838120,9840280," And, yeah."
9840280,9841960," Essentially, what we have to do."
9841960,9845120," We just have to skip that first thing in here."
9845120,9846160," Right."
9846160,9848160," Hopefully, that will work."
9848160,9852000," And, of course, it didn't work."
9852000,9855620," So, the variable is unwrapped in this context."
9855620,9857580," If you don't want to unwrap, use it."
9857580,9859620," Okay."
9859620,9861940," So, the variable is unwrapped."
9861940,9863880," Can I just, like, nest it?"
9863880,9865000," Like so."
9865900,9866380," No."
9866380,9868720," This is annoying, chat."
9868720,9870020," This is straight up annoying."
9870020,9871200," I really don't like that."
9871200,9877440," Unwrappage doesn't work that well."
9877440,9884720," Is there any..."
9884720,9885040," Okay."
9885040,9893120," So, I feel like a better approach in here would be to do something like if try."
9893660,9894280," All right."
9894280,9896420," So, we're doing the try."
9896420,9900840," Otherwise, return that."
9900840,9902540," Is that a good approach?"
9902540,9904060," I think it is a good approach."
9904060,9904300," Right."
9904300,9905380," So, we're just doing that."
9905380,9906880," We sharpen that off."
9906880,9907960," And then we're..."
9907960,9908080," Okay."
9908080,9909680," So, I think that will work."
9909680,9911800," Yeah."
9911800,9913100," So, it compels as you can see."
9913100,9915400," So, can I actually use that stuff in here?"
9915400,9917940," I feel like I should be able to."
9917940,9920520," But, at the same time, the header is a little bit weird."
9920520,9922400," You know what I mean?"
9922400,9924940," The header is a little bit weird."
9925400,9927940," But, the way I could have done that, right?"
9927940,9930880," So, I could have just defined the header first up front."
9930880,9934640," And then if try index, right?"
9934640,9936860," I could have put that stuff in here."
9937860,9938880," Double equals."
9938880,9940500," All right."
9940500,9944580," So, and in here, I could have just done something like this."
9944580,9948220," Otherwise, this is a bad request."
9948220,9950440," This is a bad request."
9950440,9951640," And something like this."
9951640,9953340," So, I could have done something like that."
9953340,9954000," You know what I mean?"
9954660,9955060," Right."
9955060,9955860," So, here is the header."
9955860,9957520," So, we're looking for the line separator."
9957520,9958620," So, we do that."
9958620,9959880," So, the separation, separation."
9959880,9960640," And there you go."
9960640,9961840," Okay."
9961840,9962160," That's cool."
9962160,9968220," And because of that, we can kind of similarly do the key and value in here."
9968220,9970960," Yeah."
9970960,9973560," That's actually kind of interesting."
9973560,9975900," Can we do..."
9975900,9978320," We could have just done something like key and value."
9978320,9979220," Right."
9979220,9988400," And then just, like, try index request index of, right, index this, right?"
9988400,10004420," And if you found the index, so, essentially, you can do header starting from the beginning up until maybe from zero and the index, right?"
10004420,10006140," So, you got that."
10006140,10008140," But then you trim this entire thing."
10008760,10009040," Okay."
10009040,10014420," So, then, after the index, you do index, but plus one."
10014420,10018680," And then for the rest, until the rest of this entire thing."
10018680,10019680," And you've got the value."
10019680,10020980," Right."
10020980,10022660," And you probably want to assign it like this."
10022660,10026980," But otherwise, right, otherwise, you've got a bad request."
10026980,10031220," And that kind of, I think it makes it much more readable."
10031220,10031900," Look at that."
10031900,10034460," Look at that shit, shit."
10034460,10036080," Isn't it better?"
10036080,10038140," I think it's kind of better, right?"
10038240,10040200," So, just, like, do line separator, right?"
10040200,10041020," Update these things."
10041020,10042880," And I've got a header, right?"
10042880,10048380," Then I just, within the header, I split the header and the key and value, right?"
10048380,10053060," And then if any of these things didn't work out, it's just, like, a return bad request."
10053060,10054300," I think it's much better, right?"
10054300,10055460," So, it just, like, makes more sense."
10057960,10059980," So, yeah, that's pretty cool."
10059980,10060880," That's pretty cool."
10060880,10062660," So, we also have duplicate stuff."
10062660,10065540," Yeah, that's much better."
10065540,10070020," So, this is the line separator here."
10070020,10075980," We can have maybe something like a header separator, which is this thing, right?"
10076460,10083140," And which means I can do header separator and plus one is because of the header separator."
10083140,10091180," Again, we are sort of, like, establishing connection between the separator and its size in this specific case."
10091180,10092080," So, that makes sense."
10093860,10096400," Binary tree code, binary tree code."
10096400,10097980," I don't see the binary tree code."
10097980,10099520," There's no binary tree in here."
10099520,10101000," Anyways."
10101000,10105060," Anyways, anyways, anyways."
10105060,10109560," Technization is the pain of other language."
10109560,10110440," Exactly, exactly."
10110440,10111020," You know it."
10111020,10111880," You know it, my friends."
10111880,10112980," All right."
10112980,10115840," So, that seems to be working."
10115840,10117720," That seems to be at working."
10117720,10119700," Right."
10119700,10122900," So, now, so, we refired the request status line."
10123240,10125940," Maybe I can put this stuff in here."
10125940,10128440," Verify the rest of the headers of the request."
10128440,10130080," Right."
10130080,10133960," So, right now, we're only looking for this kind of stuff."
10133960,10136380," So, I'm going to put these things in relevant sort of places."
10136380,10140180," In relevant places."
10140180,10144920," So, one thing I would like to do now."
10144920,10152520," We need another function here, which is basically parse sec web socket accept."
10152620,10153620," From response."
10153620,10154460," From response."
10154460,10155200," Right."
10155200,10159160," So, because this function is going to be called on the client side."
10159160,10163080," Because the server have to response with accept."
10163080,10165380," And it should return the corresponding key."
10165380,10167220," Which we have to verify as well."
10167220,10168420," Right."
10168420,10169460," So, this is in response."
10170000,10179680," And funnily enough, funnily enough, it is literally the same as this thing, except we just replace the freaking key."
10179680,10181180," Right."
10181180,10185900," So, that's actually kind of insane how similar this stuff is."
10185900,10191600," And the reason why they're similar is because it's the same code of parsing the HTTP request."
10191600,10194380," And that's what it is, essentially."
10194380,10199040," And maybe we can factor it out into something."
10200360,10207900," Parsec website accept from response secure real version 3."
10207900,10209620," Yeah."
10211360,10213900," So, yesoo, yesoo, yesoo, yesoo."
10213900,10215080," Okay."
10215080,10217520," So, here is the response."
10217520,10222460," And now, maybe I want to replace the word key with accept."
10222460,10223380," Right."
10223380,10224440," So, this is going to be accept."
10224440,10225800," Right."
10225800,10227040," Verify the rest of the headers."
10227040,10228580," Right now, we're looking for accept."
10229140,10231500," So, this is not the key I'm talking about."
10231500,10232460," This is the key."
10232460,10233260," Ah, bug."
10233260,10234020," Well, I mean, yeah."
10234020,10236460," So, duplicate."
10236460,10238680," Duplicate accept."
10238680,10239040," Yeah."
10239040,10241680," So, seg found."
10241680,10242720," Found that."
10242720,10243980," Found that."
10243980,10246580," And, yeah."
10246580,10250380," And in here, maybe we can actually replace server with client."
10250380,10252320," Yeah."
10252320,10255780," So, client handshake bad request."
10255780,10258980," Yeah."
10259780,10260600," That's kind of cool."
10260600,10264300," So, there's a client handshake and so on and so forth."
10264300,10266360," All right."
10266360,10268500," So, let's go through the compilation errors."
10268500,10269680," Ah-ha."
10269680,10270760," So, 120."
10270760,10271880," It's a request."
10271880,10273480," Now, it has to be response."
10273480,10276400," Create replace response."
10276400,10277520," Request."
10277520,10278600," Eh?"
10278600,10279480," What?"
10279480,10281680," Request response."
10281680,10283840," Uh-huh, uh-huh."
10283840,10287380," So, that's what we're doing."
10287380,10288500," Um..."
10288500,10293340," Yeah, it needs to be somehow factored out."
10293340,10295640," It definitely needs to be somehow factored out."
10295640,10298040," Um, so let me..."
10298040,10300360," Let me try to do it."
10300360,10301460," So, where is the client?"
10302000,10304660," And so, this is going to be the client."
10304660,10306700," Client handshake."
10306700,10308260," Bad response."
10308260,10310880," And this one is accept."
10310880,10313160," Uh, right."
10313160,10316380," So, we're already kind of starting to see the pattern, as you can see."
10316380,10316740," Right."
10316820,10317820," So, we're seeing the pattern."
10317820,10317860," So, we're seeing the pattern."
10317860,10320120," And yeah."
10320120,10321380," Okay."
10321380,10323960," So, here is this stuff."
10323960,10326600," And we have to do parse sec."
10326600,10329460," It's going to be the response."
10330280,10332380," Uh, so we pass the response in here."
10332380,10337440," Uh, so we have to actually peek into here."
10337440,10337780," Right."
10337780,10338860," So, we're peeking into here."
10338980,10343620," And here, we do sec web socket accept."
10343620,10345820," Uh, like this."
10345820,10346680," Right."
10347740,10353620," And afterwards, we are actually doing WS socket read."
10353620,10362300," But we are reading specifically from, uh, zero up until buffer size minus the response length."
10362300,10364240," Kind of a similar situation."
10364240,10365780," Kind of a similar situation."
10365780,10373280," Uh, but on top of that, we also have to compare sec web socket accept, um, to what we expect."
10373280,10374380," Right."
10374380,10376880," So, okay."
10376880,10377540," To do."
10377740,10379340," Uh, right."
10379340,10382720," Make sure this thing is correct."
10382720,10384800," Uh, we can actually hard code that."
10384800,10386920," Because we hard code the key anyway."
10386920,10390400," Uh, so we can hard code that thing as well."
10390400,10392920," Um, all right."
10392920,10393680," So, let me see."
10393680,10394880," And that seems to be compound."
10394880,10395840," So, that's kind of cool."
10395840,10396340," Right."
10396340,10398300," So, it's pretty cool."
10398300,10399000," Pretty cool."
10399000,10399460," Pretty cool."
10399460,10403980," Um, so the question is, what is the response?"
10403980,10405260," Right."
10405260,10407660," Um, we can."
10407740,10409880," Um, since we hardcoded the key in here."
10409880,10410160," Right."
10410160,10414800," We might as well just hardcoded the response."
10414800,10416200," So, expected response."
10416200,10419620," Uh, where is RFC?"
10419620,10421520," Uh, where is RFC?"
10421520,10424860," I remember the RFC was actually present in here."
10424860,10425700," Right."
10425700,10429120," Uh, let me find the RFC."
10429120,10430120," So, where is RFC."
10430120,10431260," So, where is RFC?"
10431260,10433060," So, here is the key."
10433060,10434460," So, let's look at the key."
10434460,10435620," Uh-huh."
10435620,10437840," And this is expected response."
10437840,10439320," Okay."
10440740,10463800," So, uh, if secwebaccept not equal to this thing, um, we can say, we can just return, uh, WS error, uh, right, error, uh, client handshake, um, unexpected, maybe bad accept."
10463800,10467180," So, right, so that's what it is, bad accept."
10467180,10470260," So, in here, we just don't do anything."
10470260,10473720," So, client and shake."
10473720,10476060," Uh, okay."
10476060,10479820," Duplicate accept, bad accept."
10481380,10482440," More magic."
10482440,10484060," Where do you see more magic?"
10484060,10485520," I don't fucking know what you're talking about."
10485520,10486400," Anyways."
10486400,10488520," Oh, you mean the hardcoded things?"
10488520,10489820," I mean, it doesn't matter."
10489820,10491180," They, they really don't matter."
10491180,10495900," Uh, it's just, like, to prevent the certain kinds of attack."
10495900,10502620," Anyways, um, so, I think that seems to be working, hopefully."
10502620,10504120," That seems to be working."
10504120,10507700," So, pick, uh, pick, pick, pick."
10507700,10510060," So, here we, do we have any errors in here?"
10510060,10510460," Yeah."
10510460,10514660," Okay, so, if some sort of error will happen, it will report that appropriately."
10514660,10521860," Uh, I want to dub, double check that we're using pecan here, right?"
10521860,10523940," So, we're using pecan here, and then we do read."
10523940,10531260," And then client in here, so client handshake, uh, here we just send the thing, um, right."
10531260,10536480," And there, then we peek into the buffer, and then we read the syntax stuff."
10536480,10542560," Uh, and again, we, we kind of have a similar situation that, uh, we expect that the handshake"
10542560,10545460," is going to fit, uh, right."
10546140,10549020," So, uh, the server handshake is literally, you know, right now we're making an assumption."
10549020,10550560," The server is sent successful handshake."
10550560,10552240," Nothing is sent after the handshake."
10552240,10559440," This is the to-do that I wrote three years ago in C."
10560100,10565200," I, I actually, I actually anticipated this exact problem that I'm trying to fix."
10565200,10566460," This is so cool."
10566460,10569860," Uh, right."
10569860,10572740," So, it's kind of funny."
10572740,10573380," Right."
10573440,10576120," I, I kind of anticipated this exact problem, right?"
10576120,10580440," So, I just, like, cut some corners and I put, this is the importance of, like, putting to-dos,"
10580440,10584040," even, even if you don't plan to fix them right now, right?"
10584040,10588600," Because later, they can actually help you to understand why certain things were not done,"
10588600,10588880," right?"
10588880,10591740," So, it's just like, oh, it was cutting the corners, uh, right?"
10591740,10595460," So, when you're cutting the corners, it's kind of important to document what, what kind"
10595460,10597400," of corners you cut, right?"
10597400,10600140," So, backseated by yourself from three years in the past."
10600140,10602140," Maybe that's what, what it is, right?"
10602140,10605560," I mean, so, uh, the server sent successful handshake."
10605560,10606860," Nothing is sent after that."
10606860,10612280," I think we can safely remove this thing because we created a bunch of more to-dos in the parsing"
10612280,10613960," functions to, to fix properly."
10613960,10615280," So, I didn't think it, it matters."
10615280,10616540," Uh, right."
10616540,10622600," So, the only to-do here that is important is this one that, uh, the client, uh, and"
10622600,10625220," right, does not take into account situation when the handshake does not fit."
10625460,10627440," into, uh, yeah."
10627440,10631320," It's a very long, longly word, right?"
10631320,10640400," So, assumes, I think it will be better to say, assumes that response fits into 124, uh, bytes."
10640400,10641920," It's just like, it's shorter."
10641920,10646360," Uh, it's cleaner, as we say in industry."
10646360,10655440," Uh, so, server, uh, assumes that request, um, fits into, uh,"
10655460,10657640," 124, uh, 24, bytes."
10657640,10660340," Uh, mm-mm."
10660340,10664060," Oh, it's the magic of pick and read over string views."
10664060,10665060," Yes."
10665060,10668660," Um, that's basically the magic."
10668660,10669560," Hopefully, it will work."
10669560,10670640," I'm actually a little bit worried."
10670640,10672980," Uh, so, I don't know if it's going to work or not."
10672980,10673620," So, we'll see, we'll see."
10674480,10678660," Uh, it's either going to work first try or nothing will change."
10678660,10680140," Like, literally nothing."
10680140,10688000," And if nothing will change, that means the problem was not in, uh, you know, in reading too much."
10688000,10688480," Right?"
10688480,10690120," So, the problem was not in reading too much."
10690120,10692220," But I think it is, uh, right?"
10692220,10693880," The problem is in reading too much."
10694920,10703280," Because, in our example, in a server, what we're doing essentially, uh, right, we're accepting connections, right?"
10703280,10709580," So, we're accepting connections, we perform the handshake, and we immediately send the text, hello world, right?"
10709580,10710760," As you can see, like, immediately."
10710760,10714040," So, here's the server handshake, and we immediately send."
10714040,10716440," So, they kind of, kind of, like, gambled together."
10716440,10720080," Uh, and the client was getting confused, right?"
10720120,10721680," So, I think that's what's happening in here."
10721680,10723380," Um, right."
10723380,10724740," I really like that."
10724740,10727600," So, the defers kind of, kind of, make it super cool."
10727600,10732540," And then, try catch syntax of C3 in some situations just, like, makes it super clean."
10732540,10733780," I really like that."
10733780,10736660," Anyways, um, okay."
10736660,10738720," So, you think, you think it's a tea time?"
10738720,10739880," Uh, okay."
10739880,10740500," So, we'll see."
10740500,10743020," But we need to first check if it works or not, right?"
10743020,10746580," And regardless of whether it works or not, we're going to make a tea time."
10746920,10755740," So, it's either going to be celebratory tea time, or it's going to be just a break to, you know, come up with a new hypothesis on why it didn't work."
10755740,10757040," Okay."
10757040,10759100," So, here we have that."
10759100,10761200," And I'm going to rebuild one more time."
10761200,10765320," Um, contemplatory."
10765320,10767740," Contemplatory."
10767740,10769860," I don't even know how to pronounce that."
10769860,10771780," I'm really bad at speaking English."
10771780,10772680," Okay."
10772680,10774240," Listening to this thing."
10774240,10775480," Example, client."
10776920,10778020," It didn't work."
10778020,10779840," Server handshake, no key."
10779840,10780760," Ha."
10780760,10782100," That's very interesting."
10782100,10785020," Uh, so, connection was reset."
10785020,10786840," Uh, yeah."
10786840,10788220," So, it didn't work."
10788220,10790180," All right."
10790180,10792520," So, this is the second situation, right?"
10792520,10796440," So, let's make a small break and, uh, think about what exactly is going on."
10796440,10796780," Um."
10796780,10798920," Um, all right."
10798920,10802040," So, but I mean, I think we're on the right track."
10802260,10802800," Uh, right."
10802800,10806880," So, this is an expected error, right?"
10806880,10808340," So, this is an expected error."
10808340,10810940," So, that means maybe there is a bug in the implementation."
10810940,10812320," Uh, right."
10812320,10813460," So, in implementation itself."
10813460,10814620," No key."
10814620,10817180," So, connection reset."
10817180,10818520," Wait a second."
10818520,10820900," Maybe it's actually super, super quick."
10821360,10826180," Um, I feel like server handshake."
10826180,10829760," Um, let me, let me just grab that."
10829760,10831540," No key."
10831540,10834240," Um, found."
10834240,10836580," All right."
10836580,10838740," Do."
10838960,10840980," So, we, we trim everything."
10840980,10844340," Um, so, if request doesn't end."
10844340,10846100," Yeah."
10846100,10849760," It's bizarre that it didn't find the key."
10849760,10851480," You know what I want to do?"
10851480,10852540," I want to actually print them."
10852540,10855280," So, I'm going to do printfn."
10855280,10861160," Uh, and let's actually do key as, uh, value as."
10861160,10863160," And here's the key value."
10863160,10865320," I just want to see what we received there."
10866120,10871240," Um, and I'm going to just recompile this entire thing."
10871240,10873020," All right."
10873020,10876340," So, restarting the server and doing the client."
10876340,10881080," Didn't print anything."
10881080,10883740," Did I rebuild stuff?"
10883740,10887080," I'm pretty sure I rebuild everything, right?"
10887080,10889340," So, okay."
10889340,10890340," Accepted connection."
10890340,10892080," And, yeah."
10892080,10895580," So, we didn't receive anything from the."
10896120,10897820," Uh, from the server."
10897820,10900780," A key from the request."
10900780,10903440," So, that means we never."
10903440,10909000," Man."
10909000,10910720," That is fascinating."
10910720,10913100," So, we didn't."
10913100,10915760," Get anything."
10916220,10916720," Right."
10916720,10919080," So, not a single line was processed."
10919080,10921800," Uh, so, what we can do."
10921800,10924100," Is probably."
10924100,10926640," Maybe put some stuff in here."
10926640,10927820," How about just this?"
10927820,10930480," Like, how many iterations we even have in here?"
10930480,10931860," Um."
10931860,10932760," Yeah."
10933000,10933540," I think."
10933540,10933540," I think."
10933540,10939240," Not a single iteration happened."
10939240,10942720," So, while request is greater than zero."
10942720,10944380," And request doesn't end."
10944380,10947100," Did the client flash."
10947100,10949340," It has nothing to do with flash."
10949340,10950220," Uh, okay."
10951060,10953020," So, all right."
10953020,10953420," All right."
10953420,10954000," All right."
10954000,10955680," Uh."
10955680,10960680," It's not even that buffered."
10960680,10961080," Okay."
10961080,10963240," So, um."
10963240,10965400," Parse sec."
10965400,10967220," Key from request."
10967220,10969980," Do we."
10969980,10970940," Uh."
10970940,10972960," All right."
10975960,10976360," Okay."
10976360,10978320," It was never."
10978320,10981560," Uh-huh."
10981560,10985060," It goes in the chat."
10985060,10986040," Okay."
10986040,10988400," So, um."
10988400,10990860," That is fascinating."
10990860,10992980," So, let me take a look at this thing."
10992980,10994400," Request len."
10994400,10997200," Is it empty?"
10997200,10998960," Print fn."
10998960,11000900," Uh-huh."
11000900,11002660," So, I'm going to put some stuff in here."
11002660,11004940," Uh-huh."
11005960,11008140," I'm not reading the chat."
11008140,11010040," Okay."
11010040,11012200," Okay."
11012200,11013120," So, something."
11013120,11015420," So, we have something in there."
11015420,11016360," Which is good."
11016360,11017600," Uh."
11017600,11018220," Which is good."
11018220,11019300," But does it end."
11019300,11020620," Uh."
11020620,11022360," With the line separator."
11022360,11023680," Ah."
11023680,11026400," Starts."
11026400,11028180," Obviously."
11028180,11030620," Obviously."
11030620,11031660," Starts."
11031660,11032640," Backseaters."
11032640,11034500," And you guys."
11034500,11035440," Are not just backseaters."
11036680,11038180," You are paid backseaters."
11038180,11039760," You paid."
11039760,11041220," To backseat."
11041220,11044060," And you failed to backseat."
11044060,11046380," Literally wasted money."
11046380,11048100," You paid."
11048100,11048560," Because we're."
11048560,11049140," Right now."
11049140,11049820," We have a sub mode."
11049820,11050160," By the way."
11050160,11051020," For YouTube people."
11051020,11051960," Uh."
11051960,11052280," Right."
11052280,11053560," So."
11053560,11058080," Uh."
11058080,11058480," Yeah."
11058480,11058800," Okay."
11058800,11059500," So, that's fine."
11059500,11061100," So, it starts."
11061100,11062080," All right."
11062080,11062360," All right."
11062360,11067240," So, it's kind of like actually easy to make this, you know, mental mistake."
11067240,11068260," The paid actors."
11068260,11072040," You guys all are paid actors right now."
11072040,11072880," Did you guys know that?"
11072880,11073520," Um."
11073520,11073920," Right."
11073920,11076220," Um."
11076220,11076600," Right."
11076740,11077860," Ends with."
11077860,11078480," Uh."
11078480,11079580," And."
11079580,11080280," Well."
11080280,11080720," That's."
11080720,11081300," That's very interesting."
11081300,11081580," Okay."
11081580,11083980," So, this is the key."
11083980,11085060," Uh."
11085060,11086520," So, it starts with."
11086520,11087000," Right."
11087000,11087900," So, line separated."
11087900,11089040," And we have to."
11089040,11092680," Check that it starts with that as well."
11092680,11093540," All right."
11093680,11095240," So, we have to check that."
11095240,11096560," Uh."
11096560,11096960," Okay."
11096960,11099580," So, we have to do a similar thing in here as well."
11099580,11099960," Right."
11099960,11101520," Clear place ends with."
11101520,11103040," Now, starts with."
11103040,11103600," Let's go."
11103600,11104040," Boom."
11104040,11104400," Boom."
11104400,11105540," Okay."
11105540,11107940," Paid gebaters."
11107940,11109000," Paid gebaters."
11109000,11109360," Okay."
11109360,11110000," That's cool."
11110000,11111500," Let's actually remove that."
11111500,11112740," Start in the server."
11112740,11113700," Uh."
11113700,11114240," And."
11114240,11116960," Bad request."
11116960,11117380," Okay."
11117380,11120240," So, that's already different."
11120240,11120500," Right."
11120500,11121900," So, it's not handshake."
11121900,11122340," No."
11122340,11122700," Key."
11122820,11124540," It's a bad request."
11124540,11125260," Okay."
11125260,11126280," So, that's already better."
11126280,11127940," So, in case of client, it doesn't matter."
11127940,11130320," So, it's because the server has failed."
11130320,11131240," Uh."
11131240,11131560," Right."
11131560,11132560," The server has failed."
11132560,11133740," And it closed the connection."
11133740,11136280," And that's why we never really received anything."
11136280,11138880," So, I think if we manage to fix the server."
11138880,11141580," So, it will probably fix the client as well."
11141580,11142800," Um."
11142800,11144400," So, here is the key."
11144400,11147600," So, how many bad requests do we have in here?"
11147600,11148600," That's a good question."
11148600,11151500," And which bad request has happened specifically?"
11151960,11156120," So, it says, uh, handshake, server handshake, bad request."
11156120,11159220," So, let's see how many times we refer to this thing."
11159220,11160500," It's that one."
11160500,11161520," Um."
11161520,11162500," That one."
11162500,11163600," Uh."
11163600,11164360," That one."
11164360,11164520," That one."
11164520,11164840," That one."
11164840,11167140," So, there's only this kind of situation."
11167140,11168680," That's kind of sad."
11168680,11169740," Honestly."
11169740,11172680," I wish I could actually supply more information."
11172680,11174300," Is there any way to supply more information?"
11174840,11178160," One index of always be zero if it starts with."
11178160,11182620," It's a very question out of the context."
11182620,11184260," Which piece of code are you talking about?"
11184680,11185180," Uh."
11185180,11185520," Okay."
11185520,11186100," So."
11186100,11189060," Um."
11189060,11191520," So, index of."
11191520,11192680," Oh."
11192680,11193340," Right."
11193340,11196920," Um."
11196920,11200320," Never mind."
11200320,11200620," Yeah."
11200620,11201960," So, you're just like."
11201960,11203420," It's very out of the context."
11203420,11204560," It's very confusing."
11204560,11205500," Um."
11206420,11211260," It's a bad request."
11211260,11212140," Bad request."
11212140,11213360," Uh."
11213360,11216400," I don't want to create separate things for this stuff."
11216400,11217660," It looks like I have to."
11217660,11219600," It's annoying that I have to do that."
11219600,11221460," Is there any better way to just."
11221460,11222900," Um."
11222900,11223400," You know."
11223400,11224860," Know precisely."
11224860,11227900," At which place it kind of failed."
11227900,11229420," Uh."
11229420,11230180," Right."
11230180,11230720," So."
11230720,11231420," And it's just like."
11231420,11231780," One."
11231780,11232160," Two."
11232160,11232660," Three."
11232660,11233440," Though."
11233440,11234380," I already did that."
11234380,11234720," Right."
11234720,11235040," So."
11235040,11235540," I already."
11236420,11236740," Uh."
11236740,11237740," Implemented this thing."
11237740,11239300," Okay."
11239300,11239880," So."
11239880,11240420," Uh."
11240420,11240920," It's three."
11240920,11241340," Okay."
11241340,11243900," And what is that?"
11243900,11245400," It's here."
11245400,11245880," Okay."
11245880,11247060," So."
11247060,11249000," Index of."
11249000,11251100," Header separator."
11251100,11253220," Let's take a look at the header separator."
11253220,11254440," It's that."
11254440,11256280," Okay."
11256280,11258520," Uh-huh."
11258520,11260140," So."
11260140,11260780," What am I looking at?"
11260780,11260960," So."
11260960,11261720," This is the key."
11261720,11263040," Um."
11263040,11263720," So."
11263720,11265040," It couldn't find."
11265040,11265760," Ah."
11266400,11266980," Okay."
11266980,11268540," Okay."
11268540,11269560," Another one."
11269560,11270360," Uh."
11270360,11271840," So."
11271840,11272980," Uh-huh."
11272980,11273340," Uh-huh."
11273340,11275260," Paid back sitters."
11275260,11277820," Paid back sitters."
11277820,11280840," I'm sorry."
11280840,11281580," I'm shaming."
11281580,11282840," But I'm jokingly shaming."
11282840,11283120," So."
11283120,11284100," Don't worry about it."
11284100,11286120," Uh."
11286120,11286900," Right."
11286900,11287340," So."
11287340,11288180," Don't worry about it."
11288180,11290040," Uh."
11290040,11290340," Okay."
11290340,11290800," So."
11290800,11291560," Let's fucking go."
11291560,11294560," Okay."
11294880,11295320," So."
11295320,11296240," But the."
11296240,11298020," Then we got the garbage anyway."
11298020,11298480," So."
11298480,11299560," Uh."
11299560,11302040," But now it consistently returns garbage."
11302040,11302740," Right."
11302740,11303240," So."
11303240,11304960," It just consistently returns garbage."
11304960,11311500," I have a feeling that maybe it just doesn't unmask the request."
11311500,11313640," Right."
11313640,11316340," So because there's some sort of a mask masking in there."
11317140,11317520," Um."
11317520,11319820," Right."
11319820,11322860," Can I just do something like xxd?"
11322860,11325980," Aha."
11325980,11326980," No."
11326980,11328960," It's actually different."
11328960,11333100," But sometimes it's kind of the same."
11333100,11334680," Sometimes it's just like empty."
11334680,11339660," But sometimes it's just like the same size roughly."
11339660,11344080," If we take a look at the size of this stuff."
11344080,11344740," Um."
11344740,11346980," So what do we get in here?"
11346980,11349360," Uh."
11349360,11349560," Uh."
11349560,11353580," Uh."
11353580,11353700," Uh."
11353700,11354020," Uh."
11354020,11354280," Uh."
11354280,11355220," So."
11355220,11356700," Uh."
11356700,11357280," Shit."
11357280,11359260," We didn't copy paste properly."
11359260,11360040," Just a second."
11360040,11361260," I should have."
11361260,11363080," I should have done it like this."
11363080,11363540," Yeah."
11365740,11372660," I think I'm looking for is something like this."
11372660,11375320," Low world."
11375320,11378180," Okay."
11378180,11381520," I think the problem is that."
11381520,11388820," The problem is that we do not unmask the response on the client side."
11388820,11389860," Or something."
11389860,11391900," Something with masking specifically."
11391900,11395460," Something with masking."
11395740,11397320," You know what I'm looking about?"
11397320,11398500," Yeah."
11398500,11399500," All right."
11399500,11402140," So we're going to look into that a little bit later."
11402140,11403440," Uh."
11403440,11404360," After a small break."
11404360,11405520," All right."
11405520,11406360," So."
11406360,11406960," Uh."
11406960,11409480," We have a really weird situation."
11409480,11409780," Right."
11409780,11410080," So."
11410080,11410540," And."
11410540,11411480," That is."
11411480,11413320," Sometimes it."
11413320,11414880," Like as in here."
11414880,11417160," Doesn't receive any message at all."
11417160,11417780," As you can see."
11417780,11419180," Doesn't receive any message at all."
11419180,11420740," Sometimes it receives the message."
11420740,11422960," And it's exactly the size that we would expect."
11422960,11423820," Right."
11423820,11425640," And the weird part is that."
11425740,11430480," If there is a bug in how we process the frames."
11430480,11433680," I would expect only this kind of situation."
11433680,11434000," Right."
11434000,11434740," It's garbled up."
11434740,11437860," So that means maybe we're not processing masking correctly."
11437860,11438600," That's fine."
11438600,11439440," But."
11439440,11442980," The fact that sometimes we receive an empty message."
11442980,11444780," Completely empty message."
11444780,11446340," That's what worries me."
11446340,11447120," Like."
11447120,11448520," What's up with that?"
11449080,11451000," And maybe I just like."
11451000,11452260," Right."
11452260,11453940," So we're closing too fast."
11453940,11454320," Right."
11454360,11456220," So maybe the server closing too fast."
11456220,11457440," But at the same time."
11457440,11458780," We're using the blocking API."
11458780,11460420," So when if we're using blocking API."
11460420,11460720," That."
11460720,11462200," Like closing too fast."
11462200,11463200," Should not be a problem."
11463200,11463460," Right."
11463460,11464660," Because everything is blocking."
11464660,11465420," It's synchronized."
11465420,11466180," And stuff like that."
11466180,11466800," So like."
11466800,11467760," It's weird."
11468320,11470820," So I would like to figure out what's up with that."
11470820,11473760," And then maybe go into the masking situation."
11473760,11475440," Right."
11475440,11476600," So let's actually see."
11476600,11479720," Maybe we want to take a look at how we do the server."
11479720,11480400," Right."
11480400,11481740," So in the server."
11481740,11482740," We're just like listening."
11482740,11483940," Accepting."
11483940,11485440," Right."
11485440,11488380," So then we're doing the handshake."
11488380,11488740," Right."
11488740,11490380," So the handshake seems fine."
11490380,11492000," All the operations are blocking."
11492000,11493840," And then we're sending the text."
11494440,11498020," And I suppose that at the end of the iteration in here."
11498020,11499380," It's closed."
11499380,11503560," So it's supposed to be closed after we have done all of that."
11503560,11508560," So I didn't see any problems in the server side."
11508560,11508860," Right."
11508860,11509220," Honestly."
11509220,11510880," I didn't see any problems in the server side."
11510880,11512420," So let's take a look at the client side."
11512420,11515080," Is there something on the client side?"
11515080,11517080," So we have a log message."
11517080,11518260," Do we want to use this log message?"
11518260,11520560," I kind of doubt we use that."
11520560,11522480," Yeah."
11522480,11524360," Okay."
11524440,11527000," So here."
11527000,11528920," Yeah."
11528920,11532320," We just like perform the thing."
11532320,11534760," We just perform the thing."
11534760,11536260," And that's it."
11536260,11538380," So I didn't see any problems whatsoever."
11538380,11541860," So the handshake is correct."
11541860,11542180," Right."
11542180,11544640," Otherwise it wouldn't even work."
11544640,11549340," Otherwise it wouldn't even work."
11549340,11549880," Okay."
11549880,11551960," So let me go into the C3."
11551960,11553980," So we're going to be starting debugging, I suppose."
11553980,11554600," Right."
11554600,11559000," So where is the WS read?"
11559000,11566560," So the thing about reading is that message is fragmented."
11566560,11567340," Right."
11567340,11569000," So the message is completely fragmented."
11569160,11576340," So here is the message, we read a single message, then we are iterating, you know, the chunks of the message."
11576340,11578020," Right."
11578020,11584460," And we're just concatenating all of the chunks of the message and we're just returning the concatenated string."
11584720,11585380," I think that's what's going on here."
11585380,11586480," I think that's what's going on here."
11586480,11589220," So what is W message?"
11589220,11595480," So the W message has a kind and linked list of chunks, right?"
11595480,11598360," It's linked list because it was initially implemented like that."
11598560,11600460," So don't get too scared about that."
11600460,11602240," We're going to make it better in the future."
11602240,11603500," Don't even worry about it."
11605360,11613920," OK, so when we read the message, OK, so we can just print a little bit of stuff in here."
11614980,11618520," Print F, right, so this is a debug."
11618520,11621420," Maybe I don't even have debug, right?"
11621420,11625360," So like I'm going to wrap all of this stuff with, you know, dashes."
11625360,11628920," So it's very easy to find later and disable all of that."
11628920,11631460," So print FN."
11631460,11636660," So, yeah, what can I say?"
11636660,11638940," Do I care about message kind?"
11638940,11640240," Maybe I do."
11640240,11641000," Right."
11641120,11648260," So message kind and so we'll just print and the message is going to be the kind."
11648260,11649180," Right."
11649180,11650680," Let me try to rebuild this into happening."
11650680,11651900," Right."
11651900,11654360," So let's actually try to run the client."
11654360,11655860," Kind is one."
11655860,11656980," Right."
11656980,11659300," WS message kind."
11659300,11662760," And I don't remember which one is which."
11662760,11664040," So text."
11664040,11667200," OK, so we sent text and we received text."
11667200,11668160," That's good."
11668160,11669520," That's good."
11669720,11678460," So now every time we append the chunk, we just do append D bytes of chunk."
11678460,11681560," We can even do something like WS read."
11681560,11683420," Right."
11683420,11687240," So and here is the chunk payload len."
11687240,11687800," Right."
11687800,11690480," So that's how much we append in there."
11690480,11691860," Right."
11691940,11693140," So it's itter."
11693140,11694680," It's itter."
11694680,11697180," OK, that's cool."
11697180,11699980," Append."
11699980,11702180," Yeah, that's exactly what I'm talking about."
11702180,11704280," OK, sometimes it's 12."
11704280,11711980," So and what's funny is that it receives at least one chunk in here."
11711980,11713380," Right."
11713480,11718380," It receives at least one chunk and that one chunk is actually empty."
11722220,11733460," What does it run that differ to clean temp alloks?"
11733460,11736860," It's a very good question."
11737020,11738980," I didn't think for the client it matters."
11738980,11743480," Yeah, for the client it doesn't matter."
11743480,11753180," So interestingly, but maybe the server just doesn't send things properly."
11753180,11754860," That could be the case."
11754860,11755440," OK."
11755440,11759000," What if we don't reset the temporary location ever?"
11759380,11760260," That's a good question."
11760260,11764640," Maybe that will change something."
11764640,11766760," So maybe that's the..."
11766760,11767160," Oof."
11767160,11768700," What the fuck?"
11768700,11771920," That wasn't expected."
11771920,11773720," Ah, it's an Android..."
11773720,11774240," OK, OK."
11774240,11778720," I know that I need to set some option to the socket, blah, blah, blah."
11778720,11779820," I'm aware of that."
11779820,11781160," Don't tell me about that."
11781160,11785420," I don't want to spend time researching how to do that in C3."
11785420,11785740," OK."
11785740,11788340," I already know what chat is going to say."
11788380,11790220," I'll just set that flag and I'm just going to..."
11790220,11791760," I know about the thing."
11791760,11794160," I don't have time researching how to do that in C3, OK?"
11794160,11796060," Whatever."
11796060,11797980," All right."
11797980,11798300," Let's go."
11798300,11799180," OK."
11799180,11800140," So I'm going to do that."
11800140,11803080," And all right."
11803080,11805580," No, it doesn't matter."
11805580,11808340," So it's not about temporary memory."
11808340,11809400," OK."
11809400,11811240," So it's not about temporary memory."
11811240,11814380," OK."
11814380,11817380," So it has nothing to do with temporary memory."
11817960,11818240," Whatever."
11818240,11819800," OK."
11819800,11822840," So this is the interesting part."
11822840,11825480," So maybe we need to go deeper."
11825480,11826040," Right."
11826040,11828000," So something about reading the message."
11828000,11830940," Whatever."
11830940,11832140," Doesn't matter."
11832140,11833800," I'm closing the chat."
11833800,11834500," OK."
11834500,11836020," So."
11836020,11836620," All right."
11836620,11839920," So where is the read message?"
11839920,11841220," W.S."
11841220,11842780," Message."
11842780,11844440," OK."
11845340,11846320," So what do we have in here?"
11846320,11849740," Maybe."
11849740,11856180," So when we're reading the message, we might sometime receive some..."
11856180,11875580," What was the quote in the original library?"
11875580,11880920," I think that's the..."
11880920,11884920," Yeah, so CWS read message."
11884920,11891460," And break here was because switch case needs the break."
11891460,11905380," And break here was because switch case needs the break."
11909880,11917280," How does the break work in switch cases in C3?"
11917280,11917300," How does break work in switch cases in C3?"
11935220,11939640," Same as C but cases without any code break automatically."
11939640,11943180," Same as C but cases without any..."
11943180,11946560," I don't believe it honestly."
11946560,11947900," I'm going to check it."
11947900,11950760," You know, I'm just not going to fucking believe that."
11952760,11953760," I'm going to check it out."
11953760,11953760," I'm going to check it out."
11953760,11954760," I'm going to check it out."
11954760,11955760," I'm going to check it out."
11955760,11956760," I'm going to check it out."
11956760,11957760," I'm going to check it out."
11957760,11958760," I'm going to check it out."
11958760,11959760," I'm going to check it out."
11959760,11960760," I'm going to check it out."
11960760,11961760," I'm going to check it out."
11961760,11962760," I'm going to check it out."
11962760,11963760," I'm going to check it out."
11963760,11964760," I'm going to check it out."
11964760,11965760," I'm going to check it out."
11965760,11966760," I'm going to check it out."
11966760,11967760," I'm going to check it out."
11967760,11968760," I'm going to check it out."
11968760,11969760," I'm going to check it out."
11969760,11970760," I'm going to check it out."
11970760,11971760," I'm going to check it out."
11971760,11972760," I'm going to check it out."
11972760,11973760," I'm going to check it out."
11982760,11983760," I'm going to check it out."
11983760,11984760," I'm going to check it out."
11984760,11985760," I'm going to check it out."
11985760,11986760," I'm going to check it out."
11986760,11987760," I'm going to check it out."
11987760,11988760," I'm going to check it out."
11988760,11989760," I'm going to check it out."
11989760,11990760," I'm going to check it out."
11990760,11991760," I'm going to check it out."
11991760,11992760," I'm going to check it out."
11992760,11993760," I'm going to check it out."
11993760,11994760," I'm going to check it out."
11994760,11995760," I'm going to check it out."
11995760,11996760," I'm going to check it out."
11996760,11998760," I'm going to check it out."
11998760,11999760," I'm going to check it out."
11999760,12000760," I'm going to check it out."
12000760,12001760," I'm going to check it out."
12001760,12002760," I'm going to check it out."
12002760,12003760," I'm going to check it out."
12003760,12004760," I'm going to check it out."
12004760,12005760," I'm going to check it out."
12012760,12013760," I'm going to check it out."
12013760,12014760," I'm going to check it out."
12014760,12015760," I'm going to check it out."
12015760,12016760," I'm going to check it out."
12016760,12017760," I'm going to check it out."
12017760,12018760," I'm going to check it out."
12018760,12019760," I'm going to check it out."
12019760,12020760," I'm going to check it out."
12020760,12021760," I'm going to check it out."
12021760,12022760," I'm going to check it out."
12022760,12023760," I'm going to check it out."
12023760,12024760," I'm going to check it out."
12024760,12025760," I'm going to check it out."
12025760,12026760," I'm going to check it out."
12026760,12027760," I'm going to check it out."
12027760,12028760," I'm going to check it out."
12028760,12029760," I'm going to check it out."
12029760,12030760," I'm going to check it out."
12030760,12031760," I'm going to check it out."
12031760,12032760," I'm going to check it out."
12032760,12033760," I'm going to check it out."
12033760,12034760," I'm going to check it out."
12042760,12049760," We also never sent pings, by the way, as well."
12049760,12051760," That's another thing we have to do."
12051760,12059760," So read the message."
12059760,12063760," We read the frame."
12063760,12065760," Right, so we read the frame."
12065760,12071760," And maybe we need to actually,"
12071760,12073760," when we read the frame,"
12073760,12077760," we need to print what kind of frame we got."
12077760,12082760," What kind of frame we got?"
12082760,12086760," So frame."
12086760,12088760," So here's the opcode of the frame."
12088760,12090760," Right."
12090760,12092760," And that's the opcode of the frame."
12092760,12096760," So printf."
12096760,12099760," And yeah."
12099760,12102760," So do we have opcode name?"
12102760,12103760," Opcode name."
12103760,12105760," We had something like that."
12105760,12106760," I think I removed."
12106760,12107760," Oh, no, I didn't remove that."
12107760,12108760," That's good."
12108760,12109760," That's good."
12109760,12110760," So do we locate that in temporary?"
12110760,12111760," Yeah, we do."
12111760,12112760," Okay."
12112760,12113760," Okay."
12113760,12115760," So read the frame."
12115760,12116760," Right."
12116760,12118760," And this is going to be just that."
12118760,12121760," So opcode name."
12121760,12122760," Name."
12122760,12123760," Ah."
12123760,12124760," Name."
12124760,12125760," Emacs."
12125760,12126760," Stupid Emacs."
12126760,12127760," Okay."
12127760,12128760," Frame."
12128760,12129760," Opcode."
12129760,12130760," Okay."
12130760,12134760," So then we can do ioprintfm."
12134760,12138760," So I'm going to just do that."
12138760,12140760," So any of them."
12140760,12141760," Okay."
12141760,12144760," So that's the only place where we do the logging."
12144760,12145760," Okay."
12145760,12146760," Okay."
12146760,12147760," Let's do rebuild."
12147760,12148760," So I modified."
12148760,12151760," Let's actually restart them just in case."
12151760,12152760," Okay."
12152760,12153760," So we got the text."
12153760,12154760," And some of the text is empty."
12154760,12155760," Sometimes."
12155760,12156760," Some contains stuff."
12156760,12157760," Sometimes."
12157760,12158760," Sometimes it doesn't."
12158760,12159760," Okay."
12159760,12160760," So we got the text."
12160760,12162760," And some of the text is empty."
12162760,12163760," Sometimes."
12163760,12164760," Some contains stuff."
12164760,12165760," Sometimes it doesn't."
12165760,12166760," Mm-hmm."
12166760,12166760," But it's a text frame nonetheless."
12166760,12166760," It's a text frame nonetheless."
12166760,12167760," It's a text frame nonetheless."
12167760,12168760," Okay."
12168760,12168760," So red frame."
12168760,12169760," So this is opcode."
12169760,12170760," Alright."
12170760,12171760," So we can say this is opcode."
12171760,12172760," And."
12172760,12175760," Do we know the size."
12175760,12176760," Right."
12176760,12177760," So we can say this is opcode."
12177760,12178760," Right."
12178760,12179760," So we can say this is opcode."
12179760,12180760," And."
12180760,12183760," Do we know the size."
12183760,12184760," Right."
12184760,12185760," So."
12185760,12185760," I/O printf."
12185760,12186760," N."
12186760,12187760," Payload."
12187760,12188760," Read."
12188760,12189760," Frame."
12189760,12190760," Payload."
12190760,12191760," LEN."
12191760,12192760," Which is going to be D."
12192760,12193760," And."
12193760,12194760," So."
12194760,12195760," I/O printf."
12195760,12196760," N."
12196760,12197760," Payload."
12197760,12198760," Read."
12198760,12199760," Frame."
12199760,12200760," Payload."
12200760,12201760," LEN."
12201760,12202760," Which is going to be D."
12202760,12203760," And."
12203760,12204760," I/O printf."
12204760,12205760," N."
12205760,12206760," Payload."
12206760,12207760," Read."
12207760,12208760," Frame."
12208760,12209760," Payload."
12209760,12210760," LEN."
12210760,12211760," Which is going to be D."
12211760,12212760," And."
12212760,12213760," Frame."
12213760,12214760," Payload."
12214760,12215760," LEN."
12215760,12216760," All right."
12216760,12217760," Okay."
12217760,12218760," So it didn't go like that."
12218760,12219760," Uh huh."
12219760,12220760," Maybe this to do."
12220760,12221760," Okay."
12221760,12222760," This doesn't matter."
12222760,12223760," So we need to confirm that first."
12223760,12224760," Okay."
12224760,12225760," Sometimes it's zero."
12225760,12226760," Um."
12226760,12228760," Sometimes it is zero."
12228760,12229760," Um."
12229760,12230760," Sometimes it is zero."
12230760,12231760," Um."
12231760,12232760," Sometimes it is zero."
12232760,12233760," Um."
12233760,12234760," Sometimes it is zero."
12234760,12235760," Um."
12235760,12236760," Sometimes it is zero."
12236760,12237760," Um."
12237760,12238760," I/O."
12238760,12239760," So."
12239760,12240760," Um."
12240760,12241760," Um."
12241760,12242760," So."
12242760,12243760," Payload."
12243760,12244760," LEN."
12244760,12245760," What's up with that?"
12245760,12246760," Is it always going to be?"
12246760,12247760," Um."
12247760,12248760," Sometimes we literally."
12248760,12249760," Receive."
12249760,12250760," Payload."
12250760,12251760," LEN."
12251760,12252760," LEN."
12252760,12253760," We get payload."
12253760,12254760," LEN."
12254760,12255760," LEN."
12255760,12278540," Is it always going to be...? Sometimes we literally receive payload length, but we get payload length from the data. That's the thing. We get it from the data. Sometimes it's straight up zero."
12281600,12300060," Okay, so this is very interesting. Sometimes it's like we receive payload length from the frame data itself. Something is sus and possibly on the server's end."
12304440,12311040," The load length is the garbage. I'm not sure. No, it is not."
12311040,12318600," All right, so C3W. So we're already there. I'm thinking send frame. Where is the send frame?"
12318600,12331840," Ok, let me see. So we're going to do something like IOPrintFN send frame opcode."
12331840,12348660," Okay, let me see. So we're going to do something like IOPrintFN send frame opcode. And this is going to be the opcode."
12348660,12367660," So IOPrintFN send frame. So payload length is going to be D."
12367660,12379700," All right, so end here. We're just going to do printFN."
12379700,12384200," So it's actually... I don't have to put new line in here."
12384200,12389400," I have to put new line in here. Okay, so let's rebuild the full thing."
12389400,12392900," And let's do the server. And let's do the client."
12392900,12397280," Okay, payload length 12."
12397280,12403820," But we received nothing. Sometimes we received, but sometimes it's not."
12403820,12404940," Okay, so that's cool."
12404940,12426820," When I'm encoding payload length, it's less than 126. That means it's going to be actually written like that."
12426820,12444700," Okay. And we literally just write that into the circuit."
12444700,12455820," So because depending on the size of the length of the payload, we allocate a different amount of..."
12455820,12462820," ...a different amount of bytes."
12462820,12466820," Different amount of bytes."
12466820,12471820," All right, so then we generate a random mask."
12471820,12475820," All right, so we generate a random mask."
12475820,12478820," Mask the payload."
12478820,12484820," All right, and then we're just sending that data."
12484820,12491820," Sleep before socket close related to sew, linger..."
12491820,12495820," Are you guys talking about that? Jesus fucking crap. Okay."
12495820,12500820," All right, it's literally pointless to read the chat."
12500820,12509820," Okay. I need to recollect my thoughts."
12509820,12511820," Um..."
12511820,12517820," Send fin and opcode."
12517820,12522820," I don't remember..."
12522820,12524820," What is that?"
12524820,12529820," What is that?"
12529820,12531820," So we're sending like a single byte."
12531820,12533820," All right."
12533820,12544820," So let's actually start looking at some of that stuff."
12544820,12544820," All right."
12544820,12545820," All right."
12545820,12546820," All right."
12546820,12546820," I don't remember what it is."
12546820,12552820," So we take the opcode and we send the opcode."
12552820,12564820," The fact that opcode is received correctly is actually rather interesting."
12564820,12576820," Why on earth the client interprets that as zero?"
12576820,12581820," Why on earth the client interprets that as zero?"
12581820,12583820," I have no idea why it does that."
12583820,12604820," Is that because some of the, um, um, some of the things, uh, we need to maybe, let me, let me see."
12604820,12612820," Um, I need to see exact bytes."
12612820,12617820," Setting up Wireshark is pain in the ass because I don't know how to use Wireshark."
12617820,12621820," I mean, I know how to, I used it before, but I need to recover my knowledge."
12621820,12627820," I haven't used it in a while and it's going to be too, like too much hassle for now, just for a simple check."
12627820,12629820," Uh, right."
12629820,12630820," So."
12630820,12637820," Uh, I just want to see what kind of bytes exactly we receive from them."
12637820,12639820," So, um, okay."
12639820,12646820," So read, uh, and just compare what we send on the, on the server and receive from the client."
12646820,12647820," Yeah."
12647820,12648820," I know that Wireshark is great for that."
12648820,12653820," I just like, it's too much hustle to set it up and learn it just for that very simple case."
12653820,12654820," I understand that."
12654820,12655820," Uh, all right."
12655820,12657820," So write frame."
12657820,12659820," Um, all right."
12659820,12661820," So here's the header."
12661820,12666820," Uh, and the first thing we do is the payload length."
12666820,12667820," All right."
12667820,12672820," So what is interesting is that."
12672820,12682820," Do we even."
12682820,12683820," Um."
12683820,12709220," I see."
12713820,12720720," I have to be careful with this kind of shit, right?"
12720720,12730720," So, did you guess it correctly, secondary, the sorcerer?"
12730720,12737980," So, that's the problem, here it is."
12737980,12747980," Here it is, so read doesn't read everything."
12747980,12749980," Can it just like..."
12749980,12761580," Yeah, we need to probably make a wrapper around socket read and socket write, so we make sure"
12761580,12770780," that we read everything because, yeah, so that's literally the case and I have to go through"
12770780,12773580," all of them and it's just like, yeah."
12773580,12775580," It's not that much though."
12775580,12777580," So, socket to read."
12777580,12778580," All right."
12778580,12785580," So, socket to read and make sure that I read everything."
12785580,12798280," So, how can we even do that?"
12798280,12810580," Maybe, maybe, we need to take a look at this thing, so it's gonna be lib, c3, stdnet, socket."
12810580,12815980," Maybe, socket already has some convenient things for the read."
12815980,12819680," So, you can read a single byte and, yeah."
12819680,12822280," What if we just like, literally read them byte by byte?"
12822280,12827280," But, nah, it will be actually better too."
12827280,12828280," Okay."
12828280,12829280," Okay."
12829280,12841380," So, I guess we need to introduce something like, I don't know, socket read all."
12841380,12844880," But not read all, right."
12844880,12851380," So, basically, keep reading until you've filled the entirety of the buffer, right?"
12851380,12853580," If that makes any sense."
12853580,12858780," So, this is going to be just like the bytes and just do that in the loop, essentially."
12858780,12859780," Right?"
12859780,12862480," So, just do that in the loop."
12862480,12871780," So, and yeah, because we need to read precisely the amount of bytes, like precisely."
12871780,12879180," So, it probably actually goes back to reading the handshake, read into entire buffer."
12879180,12880180," Right?"
12880180,12883180," Read the entire buffer."
12883180,12884180," Right?"
12884180,12885180," So, we can say something like that."
12885180,12886180," Right?"
12886180,12889180," So, the read entire buffer and this, that's the buffer session."
12889180,12890180," Anyways."
12890180,12893580," So, yeah."
12893580,12902380," What we need to do, what we need to do, so it's going to be useSize, like while buffer length"
12902380,12903580," is greater than zero."
12903580,12904580," Right?"
12904580,12911580," So, what we do, we just do useSize, n, so self-read buffer."
12911580,12915880," Oh, no, obviously it can fail."
12915880,12923880," And then we just do buffer equal to buffer, n until the end."
12923880,12927180," I think that's a great way to do that."
12927180,12931180," So, it's just going to fill the entire tool."
12931180,12932180," Does it make sense?"
12932180,12933180," Does it make sense?"
12933180,12934180," I think it makes sense."
12934180,12935180," Right?"
12935180,12939180," And it's going to block until it receives the necessary bytes and stuff."
12939180,12940180," Okay."
12940180,12945780," So, let me, let me see what we have in here and let's go through all of these socket reads."
12945780,12946780," Right?"
12946780,12948780," So, it's this one."
12948780,12951780," So, with the handshake is kind of like weird."
12951780,12952780," Right?"
12952780,12954780," So, but we already have to do for that."
12954780,12955780," Right?"
12955780,12956780," So, I think that's fine."
12956780,12958780," So, it's also the handshake."
12958780,12959780," This one."
12959780,12960780," Yeah."
12960780,12963780," Read entire buffer."
12963780,12964780," Right?"
12964780,12966780," So, read entire buffer."
12966780,12967780," Right?"
12967780,12972380," Read entire buffer."
12972380,12974380," Read entire buffer."
12974380,12975380," Uh-huh."
12975380,12978380," Read entire buffer."
12978380,12982380," So, the payload."
12982380,12983380," Yeah."
12983380,12988380," And that automatically fixes that to do."
12988380,12989380," Right?"
12989380,12990380," All right."
12990380,12994380," So, there's only two situations in here."
12994380,12995380," Right?"
12995380,12997980," Read."
12997980,13001980," So, in terms of sending, do we need to do the same thing for sending?"
13001980,13003980," I think we should try."
13003980,13004980," All right."
13004980,13008980," So, read entire buffer and then send entire buffer."
13008980,13009980," Just in case."
13009980,13010980," Because I don't know."
13010980,13011980," Maybe it will not send entire buffer."
13011980,13014980," But I mean, so far we didn't really have problems with that."
13014980,13016580," I think."
13016580,13017580," All right."
13017580,13018580," So, it cannot."
13018580,13019580," Oof."
13019580,13020580," All right."
13020580,13021580," So, it wants to have size."
13021580,13022580," Ah."
13022580,13024580," It wants for that assert."
13024580,13026580," This assert is not needed anymore."
13026580,13027580," All right."
13027580,13029580," So, it's not relevant anymore at all."
13029580,13030580," All right."
13030580,13031580," That's pretty cool."
13031580,13038180," So, I basically kind of stepped debug this entire thing."
13056180,13057180," Very cool."
13057180,13057780," Fixed it."
13057780,13058780," It was weird."
13058780,13060780," But I fixed it nonetheless."
13060780,13061780," Cheers, by the way."
13061780,13065780," Now, the masking."
13065780,13066780," The masking."
13066780,13069780," I feel like we're not handling the masking properly."
13069780,13070780," Like, at all."
13070780,13072780," Something is weird."
13072780,13075780," So, when we're receiving the frames."
13075780,13076780," Right."
13076780,13079780," So, when we're receiving the frames, we're not masking them."
13079780,13080780," Like, at all."
13080780,13081780," So, okay."
13081780,13082780," Read frame."
13082780,13085780," So, here is the read frame."
13085780,13086780," Mask."
13086780,13087780," Okay."
13087780,13095780," So, to do the server may not send masked frames."
13095780,13096780," Uh-huh."
13096780,13097780," All right."
13097780,13103780," So, if it's masked, we just read the entire thing."
13103780,13108780," But do we unmask it?"
13108780,13111780," But do we unmask it?"
13111780,13113780," I didn't see the unmasking, honestly."
13113780,13115780," Where is the unmasking?"
13115780,13116780," Um."
13116780,13120780," So, I don't fucking know."
13120780,13121780," By the way."
13121780,13122780," Since."
13122780,13123780," Um."
13123780,13124780," Yeah."
13124780,13126780," Read entire buffer."
13126780,13127780," Uh."
13127780,13128780," All right."
13128780,13129780," So, if it's mask."
13129780,13130780," We just take the mask."
13130780,13132780," Do we use the mask anywhere?"
13132780,13134780," We don't even fucking use it anywhere."
13134780,13135780," Uh."
13135780,13136780," So, yeah."
13136780,13137780," Uh."
13137780,13137780," So, yeah."
13137780,13138780," That's."
13138780,13139780," That's the problem."
13139780,13139780," Uh."
13139780,13141780," We need to take a look at how it's done in a C."
13141780,13142780," All right."
13142780,13143780," CWS."
13143780,13144780," CWS."
13144780,13145780," Uh."
13145780,13146780," Read frame."
13146780,13148780," So, where is the read frame?"
13148780,13149780," Uh-huh."
13149780,13150780," Uh-huh."
13150780,13151780," Uh-huh."
13151780,13152780," Uh-huh."
13152780,13153780," Uh-huh."
13153780,13154780," So, here is the mask."
13154780,13155780," All right."
13155780,13156780," So, we read the mask."
13156780,13157780," Uh-huh."
13157780,13158780," Uh-huh."
13158780,13159780," So, the thing."
13159780,13163780," I don't know why I just only read the mask if it's masked."
13163780,13165780," Is that the format?"
13165780,13166780," I don't quite remember."
13166780,13167780," I think."
13167780,13169780," I think it might be a format."
13169780,13170780," Uh."
13170780,13171780," In any case."
13171780,13177780," I think I just simply forgot to unmask it."
13177780,13184780," I think I literally forgot to unmask it because I, okay, I figured out the mask."
13184780,13185780," Uh."
13185780,13186780," I figured out the mask."
13186780,13187780," And, uh."
13187780,13188780," Yeah."
13188780,13190780," So, but I don't do anything with it."
13190780,13191780," So, it's kind of awkward."
13191780,13192780," Um."
13192780,13193780," Right."
13193780,13194780," So."
13194780,13195780," All right."
13195780,13198780," So, when I'm sending the frame, how do I apply the mask?"
13198780,13199780," Uh."
13199780,13200780," Send."
13200780,13201780," Frame."
13201780,13202780," Uh-huh."
13202780,13204780," So, the way we do that."
13204780,13205780," Right."
13205780,13206780," So, here's the mask."
13206780,13207780," Okay."
13207780,13210780," So, we're generating like literally random bytes of the mask."
13210780,13213780," So, and then we mask the payload."
13213780,13215780," And the way we."
13215780,13216780," Uh."
13216780,13217780," Yeah."
13217780,13218780," So, mask the payload."
13218780,13219780," We just."
13219780,13220780," Oh."
13220780,13221780," That's it."
13221780,13222780," That's a very easy way to do that honestly."
13222780,13223780," Um."
13223780,13224780," So, we have chunk."
13224780,13226780," So, we're just masking it."
13226780,13227780," And."
13227780,13228780," Yeah."
13228780,13229780," That's it."
13229780,13230780," All right."
13230780,13231780," Mm."
13231780,13232780," Mm."
13232780,13233780," Mm."
13233780,13234780," Mm."
13234780,13235780," Mm."
13235780,13236780," So, unmask."
13236780,13237780," Mm."
13237780,13238780," Mm."
13238780,13239780," Mm."
13239780,13240780," Mm."
13240780,13241780," Mm."
13241780,13242780," Mm."
13242780,13243780," So, um."
13243780,13244780," Why am I doing it this way?"
13244780,13245780," That's."
13245780,13246780," It's weird."
13246780,13251780," So, the reason why I'm doing it this way is because I don't want to modify this payload."
13251780,13252780," Ah."
13252780,13253780," That explained it."
13253780,13254780," Okay."
13254780,13255780," All right."
13255780,13257780," So, I think I'm ready to unmask it."
13257780,13258780," Uh."
13258780,13259780," So, read."
13259780,13260780," Read."
13260780,13261780," Frame."
13261780,13262780," Read."
13262780,13263780," Frame."
13263780,13264780," Uh."
13264780,13265780," And I suppose."
13265780,13266780," Uh."
13266780,13267780," After we read this entire thing."
13267780,13268780," Right."
13268780,13269780," After we read this thing."
13269780,13270780," If it's masked."
13270780,13271780," Right."
13271780,13272780," If it's masked."
13272780,13273780," Uh."
13273780,13275780," I'm gonna be iterating through the entire payload."
13275780,13276780," So, it's gonna be for each."
13276780,13277780," Uh."
13277780,13278780," Maybe by reference."
13278780,13279780," Um."
13279780,13281780," Maybe also I'm gonna take a look at the index."
13281780,13282780," Uh."
13282780,13283780," Frame."
13283780,13284780," Payload."
13284780,13285780," Uh."
13285780,13286780," Frame payload."
13286780,13287780," Uh."
13287780,13288780," Frame payload."
13288780,13289780," And in here."
13289780,13291780," What I'm essentially doing is."
13291780,13292780," Uh."
13292780,13293780," Mask."
13293780,13294780," Yeah."
13294780,13295780," Uh."
13295780,13296780," Look at that."
13296780,13297780," Look at that."
13297780,13298780," Uh."
13298780,13299780," Right."
13299780,13300780," Something like this."
13300780,13301780," Uh-huh."
13301780,13302780," Just a second."
13302780,13303780," Yeah."
13303780,13308780," I think I can just do it like that."
13308780,13309780," But."
13309780,13313780," Where is the fucking mask, mate?"
13313780,13315780," Where is the fucking mask?"
13315780,13320780," Where is the fucking mask?"
13320780,13330780," Why is it like that?"
13330780,13335780," Why is it not char4?"
13335780,13338780," And why I'm not reading."
13338780,13341780," Just mask like that."
13341780,13342780," There's so many questions."
13342780,13344780," Like, why is it implemented like that?"
13344780,13345780," What the fuck?"
13345780,13346780," I was smoking."
13346780,13347780," Um."
13347780,13349780," It's a lot of questions."
13349780,13350780," Uh."
13350780,13351780," Very questionable code."
13351780,13353780," No wonder it doesn't fucking work."
13353780,13354780," Let's."
13354780,13355780," Let's put it this way."
13355780,13356780," Uh."
13356780,13356780," No."
13356780,13358780," No wonder it doesn't fucking work."
13358780,13359780," Mark."
13359780,13371780," Uh."
13371780,13372780," I'm joking."
13372780,13374780," I mean, it's a statically typed by language."
13374780,13375780," People."
13375780,13376780," People."
13376780,13377780," People."
13377780,13378780," Oh!"
13407780,13416920," Absolutely f*cking epic."
13416920,13417920," So yeah."
13417920,13421000," We managed to send some sh*t and we managed to receive some sh*t."
13421000,13433160," How about that, how about that, how about that, how about that, how about that."
13433160,13434760," Let's actually release the clips."
13434760,13435760," Let's release the clips."
13435760,13439320," So it's going to be, yeah, there we go."
13439320,13441420," So that's actually pretty cool."
13441420,13447960," We can try to now maybe create the, you know, browser client."
13447960,13453540," Maybe create some sort of browser client and actually connect to this specific server, receive"
13453540,13457160," some data and then close and stuff like that."
13457160,13458800," Right."
13458800,13459800," I'm confused."
13459800,13460800," Good."
13460800,13462740," You should be."
13462740,13463740," All right."
13463740,13464740," All right."
13464740,13465740," So we have some garbage in here."
13465740,13467300," It doesn't really f*cking matter."
13467300,13468300," It doesn't really f*cking matter."
13468300,13469300," So remove all of that."
13469300,13470300," Okay."
13470300,13470860," Let's do a web development."
13470860,13471860," Let's do a web development."
13471860,13473860," Let's do a web development."
13473860,13474860," Index.html."
13474860,13479780," Welcome to software development 2024."
13479780,13480860," Right."
13480860,13487400," So here we're doing like a hardcore, like bit, low level manipulation and stuff like that."
13487400,13488400," Okay."
13488400,13488400," Okay."
13488400,13489400," So let's actually do HTML."
13489400,13492960," So, how do you do that?"
13492960,13493960," I think it's a doc type."
13493960,13494960," Right."
13494960,13495960," So doc type HTML."
13495960,13496960," Right."
13496960,13498960," So maybe I'm going to do HTML mode."
13498960,13499960," There we go."
13499960,13500960," HTML."
13500960,13501960," Can I do tag?"
13501960,13507060," Uh, it's a head and tag I title."
13507060,13512680," Uh, so C3 WS test, uh, right."
13512680,13519400," So this is the body and in here, I suppose we're going to just do a script SRC index JS."
13519400,13533080," And let's actually open index JS and the console, hello from JavaScript."
13533080,13535400," Uh, all right."
13535400,13536400," Okay."
13536400,13542080," So if I just open it in Firefox, we're using Firefox for web development."
13542080,13543080," Yeah."
13543080,13544140," That's how desperate we are."
13544140,13545140," That's how desperate we are."
13545140,13549340," We're using the Firefox."
13549340,13551620," This Emacs HTML mode is pretty good."
13551620,13557600," Uh, it's kind of like, you mean the, um, the snippets, right?"
13557600,13560780," So it's actually a separate mode, right?"
13560780,13564780," So the, like the, the thing that allows me to do the tags, right?"
13564780,13567440," So basically like a tag, uh, right."
13567440,13570960," So H2 and then tag I P and stuff like that."
13570960,13572340," So this is not HTML mode."
13572340,13574020," It doesn't come from HTML mode."
13574020,13575280," It comes from the extension."
13575280,13579280," Yes, snippets, uh, snippets, uh, right."
13579280,13583900," Um, and it's a template system for Emacs that just allows you to do the thing."
13583900,13589540," It's, it's basically the, uh, the same thing I use for like, uh, you know, small break, right?"
13589540,13590160," Right."
13590160,13592480," For this one, it's this thing, the system."
13592480,13603000," Uh, so let me, let me actually give it, so it allows you to just like, uh, define abbreviations that expand into templates that you can then fill in."
13603000,13604460," Right."
13604460,13612260," So, and what I did specifically for HTML mode, uh, is I created a bunch of, um, snippets for tags, right?"
13612260,13613680," So we can even take a look at some of them."
13613680,13616300," Emacs, I think it's, um, yeah."
13616300,13619740," So here is the folder Emacs snippets, right?"
13619740,13620520," So here's the folder."
13620620,13622520," I think you can customize this folder, right?"
13622520,13627400," And, um, here for different modes, you have different snippets."
13627400,13633820," So specifically for HTML mode, I have two snippets actually right now, tag and tag I."
13633820,13640280," So, and tag is essentially thing that sets the tag vertically, right?"
13640700,13644580," So essentially the, the opening tag is going to be here and the closing tag is going to be here."
13644580,13655140," So the, um, arguments here, one, means that the cursor will first jump here and prompt you to input text in here."
13655140,13660200," But the fact that we're using one in two places in here, that means the text is going to be duplicated in here."
13660200,13662460," You see what I mean?"
13662460,13662800," Right."
13662800,13665140," So whatever you put in here will be duplicated in here."
13665140,13668800," And zero is usually the last place where you go."
13668800,13670640," Um, right."
13671660,13675280," So, and for tag I, uh, I actually have it like that."
13675280,13678840," So basically I have two separate snippets for two orientational attacks."
13678840,13681000," And it's actually very simple and it, and it works."
13681000,13684320," So we can take a look at the, um, I think fundamental mode."
13684320,13684900," Yeah."
13684900,13690140," For example, the thing that I use for SB, uh, it's actually kind of like complicated."
13690140,13699980," Uh, yeah, it, it allows you to actually have a little bit of a Emacs Lisp code that is executed every time you press a key."
13699980,13702880," So it recomputes the entire layout of the template."
13702880,13708000," And that's why when I do, uh, you know, small break and I type something in here,"
13708000,13712780," these entire two lines, these two lines actually shift to make it aligned."
13713020,13717920," because there's a little bit of a Emacs Lisp magic that, you know, makes that happen."
13717920,13727020," Can your vim do that, can your vim do that, can your vim do that, can your vim do that, can your vim do that, can your vim do that, can your vim do that, can your vim do that, can your vim do that, can your vim do that, can your vim do that, can your vim do that."
13727020,13728720," And if I can tell."
13728880,13739780," You get it, you get it, can your vim do that, can your vim do that, can your vim do that."
13739780,13749300," Look at that, so this is a snippet, so that means I can do MIT, and it automatically fills in the current year."
13752680,13755160," I hope my neighbors didn't hear me, they actually scream."
13755160,13762280," All right, anyway, uh, cute pov, thank you, thank you so much, cute pov."
13762280,13765800," Uh, anyways, what have I been doing, what have I been doing for that?"
13765800,13773240," So index html, so index js, does anybody remember how to fucking work with web sockets?"
13773240,13776520," Uh, okay, so I'm gonna go into my..."
13782680,13796940," Are we back?"
13796940,13798360," Are we back?"
13798360,13799900," Guess what happened?"
13799900,13803780," Guess what happened?"
13803780,13811720," Um, I forgot that I didn't plug the charger to my left."
13812680,13826660," Um, so it completely discharged."
13826660,13831320," Uh, I hope it's not too bad for my battery, right?"
13831320,13836200," So because usually they say you shouldn't completely discharge it, but I mean, I don't know."
13836200,13839280," Uh, so we'll see."
13839520,13842600," But that was, that was funny, I shall say."
13842600,13843520," That was funny."
13843520,13846020," Uh, right."
13846020,13847520," Snippets."
13847520,13849660," Yeah, goddamn freaking snippets."
13849660,13851960," And it actually fucked up my entire setup."
13851960,13853520," Uh, right."
13853520,13855480," So, but maybe I can continue, right?"
13855480,13859160," So I literally had to hard reset my entire setup, right?"
13859160,13862480," So it is what it is, and it isn't what it isn't."
13862480,13865940," So the, uh, like the only thing I want to do, I just want to check, all right?"
13865940,13868180," So whether the server works with all of that."
13868180,13870280," Um, so yeah."
13870280,13873380," The, yeah, the web dev is ginger, is dangerous."
13873380,13874180," It is true."
13874180,13875080," It is dangerous."
13875080,13876620," Uh, all right."
13876620,13880680," So what we were doing, uh, does anybody remember how to work with the goddamn web socket?"
13881060,13885080," Um, so why do you not have auto suspend and low battery enabled?"
13885080,13891440," Anyways, so, uh, let me, let me see."
13891440,13893720," Um, so let's take a look at some stuff."
13893720,13895780," Uh, right."
13895780,13899620," Um, where is the, is this thing?"
13899620,13900660," So the client TS."
13900660,13906300," Uh, where is the bra client TS, I said."
13906300,13907780," Oh, it's MTS actually."
13907780,13910800," Um, it's MTS."
13910800,13912820," All right."
13912820,13916100," So, uh, I don't quite remember."
13916100,13918340," Uh, new web."
13918340,13918580," Yeah."
13918580,13919800," So this is how you do that."
13919800,13920320," Okay."
13920320,13921140," Fair enough."
13921140,13923360," Um, okay."
13923360,13924840," So index JS."
13924840,13928660," Where is, so the index HTML, index JS."
13930660,13932360," Uh, right."
13932360,13933740," Um."
13933740,13942340," So, let me see."
13942340,13944720," So we're going to be actually connecting to WS."
13944720,13945240," All right."
13945240,13946500," WS like so."
13946500,13951520," Uh, and, um, let's actually do the location 127, I suppose."
13951520,13954480," 127, uh, 001."
13954480,13959520," And the port we're going to be connecting to is 60, 69, 70."
13959720,13959940," All right."
13959940,13961040," So 69, 70."
13961040,13970580," Um, so I suppose the only thing I care is whether we're receiving anything on the specific message."
13970580,13971320," All right."
13971320,13980540," Um, so if we're receiving something on a specific message, um, it has camera, dude, what are you"
13980540,13981200," talking about?"
13981200,13983160," My camera, my camera is working."
13983160,13984680," I can see my camera working right now."
13984840,13986520," Chat, stop freaking jebaiting me."
13986520,13987780," I'm going to put the sub mode again."
13987780,13989760," Camera works."
13989760,13991820," Freak."
13991820,13995120," And it's, uh, god fucking damn it."
13995120,13995900," All right."
13995900,13998540," Console log, uh, all right."
13998540,14004160," Um, the chat is so goddamn fucking annoying sometimes."
14004160,14005020," I swear to God."
14007200,14011420," It's, it's, it's, it's like a pointless to even have non-sub mode at this point."
14011420,14016960," Um, so, all right."
14016960,14018820," So we've got this kind of stuff."
14018820,14020540," Um, mm-hmm."
14020540,14027640," So I feel like I will have to, uh, set the, um, enable the HTTPS."
14027800,14029520," Um, I'm fucking setting the sub mode."
14029520,14036180," All right."
14036180,14038920," Everyone should be quicker."
14038920,14040440," All right."
14040440,14048420," So, um, let's do Python 3, um, uh, HTTP server 69, 69."
14048420,14055180," Uh, I swear to God, one day I'm going to just put on sub mode permanently and that's it."
14055420,14056320," and be done with it."
14056320,14058160," Um, all right."
14058160,14063280," So it couldn't connect because the server, uh, is not started actually."
14063280,14065600," Uh, it's not actually started."
14065600,14068100," Mm-hmm."
14068100,14069780," So let's do example server."
14069780,14070840," All right."
14070840,14073460," And, uh, let's refresh."
14073460,14075580," Hold on."
14075580,14080580," And plebs don't get to enjoy that."
14080580,14083520," Plebs don't get to fucking enjoy that."
14083520,14084440," Fuck plebs."
14084960,14086260," So, yeah, it seems to be working."
14086260,14087340," It seems to be working."
14087340,14090360," So we achieved the goal of today's session."
14090360,14091840," Literally achieved the goal."
14091840,14092260," Right."
14092260,14093720," So it took two days."
14093720,14094260," Right."
14094260,14100100," And, um, this due to the roughness of the implementation, um, right."
14100100,14105300," Because it just like slapped together three years ago, some piece of code in C, right."
14105300,14111580," Then I translated that slap together piece of code in C to C3 and, right."
14111660,14112800," Made it work, right."
14112800,14113960," So it works with the browser."
14113960,14116720," We receive the data and it's just, it's fine."
14116720,14117740," It's pretty cool."
14118260,14119700," So we can work with that."
14119700,14122100," Obviously, it's not a production-ready implementation."
14122100,14124620," It is not a production-ready implementation."
14124620,14129680," And we need to smooth out some roughness around the edges, some edge cases and stuff like that."
14129680,14133840," And as I already said, we have a test suite, uh, for, for this kind of stuff."
14133840,14134180," Right."
14134320,14141140," And, um, yeah, so probably in the future streams that are related to this topic, right."
14141140,14148640," We're going to, um, uh, we're going to set up the, the test suite and see like how badly our implementation files."
14148640,14151400," But so far, um, it can do things, right."
14151400,14157300," At least it can interact with the client, with the, with the browser, uh, which is very, very good."
14157840,14159020," All right, that's it for today."
14159020,14161160," Thanks everyone who's watching right now."
14161160,14162260," Really appreciate it."
14162260,14163120," Have a good one."
14163120,14167160," And I'll see you all on the next Recreation Programming Session with Mr. Azuzi."
14167160,14167780," I love you."

start,end,text
320,5520," Hello everyone and welcome to yet another recreational programming session with Mr. Zozin."
5520,10560," So I have this game that I implemented some time ago, right, so this is a WebAssembly version of"
10560,15200," the game and it's just a breakout clone, nothing particularly special, except maybe it has pretty"
15200,20880," cool, you know, effects, particle effects and stuff like that. And it has a very cool tutorial"
20880,26240," that I actually really like, right. So it's cool and all, it's actually super fun to play,"
26240,30160," right. So the concept of a breakout is extremely fun. It doesn't really have that many features."
30160,34400," Maybe in the future I will add more. The problem with this game is that"
34400,38560," it's written in a language that doesn't exist anymore,"
38560,48720," like at all. There's a really weird situation that like in some of the companies you may have binaries"
48720,55440," for very useful business critical application, but the company lost the source code, so they can't"
55440,62640," reproduce this binary. We kind of have a similar situation, but worse. We have the binary, which"
62640,68160," is a WebAssembly binary, right, so we can even just take a look at that. So here is the WebAssembly"
68160,74480," binary, right. So this is a WebAssembly binary to hand it in five kilobytes. We have the source code,"
74480,81280," here's the source code, but we can't reproduce that binary. We can't because it's written in a language"
81280,87600," that doesn't exist anymore. Specifically, it is written in Jai version 1.033."
87600,95280," The latest version of this language, which is not out yet, right, so Jai is a programming language made by"
95280,100640," Jonathan Blow, is being made by Jonathan Blow, it's in active development, it's in closed beta,"
100640,108960," I am in closed beta, and the current beta version is 2.0.0.8. Right, and I went through the links he sends"
108960,114320," to emails, right, every time there is a release he sends out email with a drop box links and stuff like"
114320,120720," that. I went through all the emails, I found that specific version in my email box, but the file for"
120720,127440," that specific version was deleted, so he deletes old versions. So you literally can't compile this"
127440,132640," game anymore, you have the source code, you have binary, a single binary in the entire universe,"
132640,138880," WebAssembly binary, this game has also native version, it used to have native version. Right,"
138880,144880," you can't reproduce that WebAssembly binary anymore, like at all, like you can't do that. So that's it,"
145520,151440," whatever you see in here on this website, and this website is going to be, you know, available in the"
151440,160320," description in here. All right, so whatever you see on this website exists in one single instance,"
160320,168880," right, so there is no, like you can't reproduce that anymore, it's unreproducible. So it's kind of a unique"
168880,175440," game in a sense. So what I'm going to be doing today, I'm going to try to maybe port the source code,"
176160,181760," and everything to a newer version of Jai, right? So this is going to be the goal for today. And maybe"
181760,185680," if we have time, maybe we're going to implement more features for this game, because I didn't think,"
185680,190560," even though like I sound dramatic, right, I do kind of sound dramatic, but at the same time,"
190560,196000," I didn't think it's that hard to port it to a newer version, right? So we're going to just take, grab the"
196000,200240," the latest version, we're going to try to compile it as it is, and we're going to just follow compilation"
200240,205360," errors and see what exactly we can do in there. Furthermore, this game is kind of interesting"
205360,212720," in the sense that the WebAssembly binary is actually 32-bits binary, and Jai doesn't really support"
212720,218800," WASM32. It only supports WASM64 for a variety of reasons, probably because of how the standard"
218800,224640," library and the compiler is organized. So if you want to do any WASM development in Jai, right,"
224640,229680," you have to always compile with memory64 support, right, so you also have to enable that support in"
229680,235840," the browser, it's annoying and stuff like that, but this binary is 32-bits, and the reason why it is 32-bits"
235840,245280," is because we actually patched it with a special magical tool which is called WASM64-32, right? It is a"
245280,254640," special tool which takes 64-bit binaries generated by Jai and patches up the reads and writes of this binary,"
254640,263120," so they support 32-bit numbers. So essentially it is needed for 64-bit WASM binaries that"
263120,271920," don't use more than 4 gigabytes of RAM. So that's what they needed for. So yeah, so there is an explanation"
271920,276640," and stuff like that. So as far as I'm concerned, the only thing memory64 does is that it allows you to index"
276640,284960," the memory with the i64 values, whereas the default WASM32 allows only i32. So WASM64-32 searches for all"
284960,291440," of the store and load instructions in your binary and truncates their pointers to i64 to i32. This"
291440,296400," technically defeats the point of memory64 extension, which is being able to address more than 4 gigabytes"
296400,302240," of memory, so use this utility only when you know for sure that your 64-bit program does not use more than"
302240,309680," 6 gigabytes, right? So yeah, sometimes you're kind of stuck with a 64-bit program that does all of the"
309680,316640," pointer arithmetic in 64 bits. All of the logic kind of depends on 64 bits, but at the same time you work"
316640,322000," in an environment where you can only perform 32-bit reads and writes. So this tool kind of just like"
322000,325920," patches up these kind of things and it makes it work, right? So as you can see, and this is the proof that"
325920,333280," this approach works, right? Because this program 32 bits works, but it's actually 64 bits. So it's a"
333280,340560," 64-bit program pretending to be 32-bit program, right? So everything within the program is 64 bits,"
340560,345920," but when it comes to reads and writes, we kind of do a switcheroonie and we just truncate the pointers."
345920,350160," So this is a kind of funny approach, but yeah, so that's what we're doing here."
351120,358320," So and what's funny is that this particular program was being developed before Jaya had any official"
358320,365520," support for Wasm, right? It didn't have any official support for Wasm. The way this program was compiled"
365520,375760," is that I think I told Jaya compiler generate LLVM bytecode instead of, you know, a binary code and stuff like"
375760,382880," that. And then I separately compiled that, translated that LLVM bytecode with Clang to Wasm, right? And I"
382880,389520," had to do a lot of nasty tricks to strip off all of the assembly that was used in the standard library,"
389520,394240," right? Because as soon as you have an inline assembly, you make this thing uncompilable to"
394240,403200," WebAssembly, right? Because that assembly, x86-64 assembly, was being embedded as binary into Wasm."
405120,412000," Like, imagine the browser downloads Wasm binary file and it contains x86-64 instructions."
412000,416240," Imagine downloading that on ARM, right?"
416240,425680," So that's basically the silliness we had to deal with in the past. So these days it is kind of easier,"
425680,432880," right? So because Jaya has an explicit support for Wasm. So I think we even did an example on how to do an"
432880,438000," explicit support for Wasm, but I kind of forgot where it is. Do you guys remember there was a stream?"
438000,444560," Infinite, yeah, infinitePock with Jaya Wasm 64. Here it is. So this is the thing, right? So this is the"
444560,451440," example with the infinite Pong and stuff, but I didn't really deploy it to GitHub pages. So this is"
451440,457920," something that we may actually try to use at some point in our today's development. Anyway, so let's go ahead"
457920,463360," and just maybe clone the Jaya break and just see how badly it breaks, right? So it's called Jaya break"
463360,472000," for a reason. Because it broke. Aha! Anyway, so... I'm sorry. Let's go. Let's freaking go."
472000,478640," So Sojing, do I have Jaya break in here? I don't think I... No, I do have Jaya break in here. That's"
478640,486160," actually pretty cool. So I already cloned it. So update. So the latest change was made in 2022."
486160,494720," Anyways, let's try not to remember that year. Horrible, horrible year. Anyway, so let me try"
494720,500640," to see. Maybe I need to fetch the latest stuff. Do I have any anymore? Okay, so that's fine. Cool."
500640,505440," How do I build this shit? I don't fucking remember. I haven't looked into that code base for quite some time."
505440,510000," So first thing we need to do, we need to check our Jaya version. Okay, so we have... I don't even"
510000,515360," have Jaya in the path. God fucking damn it, mate. God fucking... But we don't need that. I use Emacs,"
515360,522560," so Emacs actually makes it a little bit easier. So the current version is in fact 02008. Okay,"
522560,529520," so then we have to perform first. Right, so this is just a native build. Maybe let's try to build it"
529520,534560," natively first, because I feel like building it natively is going to be a little bit easier. Hopefully. We'll see."
534560,540640," Let's see. Right, so let's go ahead and just do first. So this is the first Jaya. And right away,"
540640,548320," right off the bat, it doesn't compile. Right, so we have a thing about hash table. So we're apparently"
548320,558960," using a hash table that doesn't have an init parameter anymore. So there is no init parameter in here."
560080,566480," And what's interesting is that, as far as I know, John, before removing any methods,"
566480,573520," he first marks method as deprecated so people have time to, you know, migrate and switch off from the"
573520,580560," deprecated method. And only then he removes the method. Here it says method is removed right away,"
580560,586400," which gives you an idea for how long I haven't updated this code base. I think the current meta is"
586400,592640," calling it de-init. Okay, so it's de-init now. And there is also a table reset. All right, so but here"
592640,598080," I'm freeing the parameters, which means that I'm just de-allocating the memory. So I think I'm going"
598080,603120," to go for de-init. All right, so let's actually take a look at what we have in here. So this is a Jaya."
603120,609120," Modules. Do I have a hash table? So here's the hash table. So people say it's called de-init. Okay."
609120,614240," Freeze the memory. Allocates the table. I don't know. Why, like, why can't you just have like an"
614240,618560," alias for that or something? You kind of want to discourage people from using, like,"
618560,624400," deprecated names and stuff like that. But at the same time, this is a beta. So you're kind of supposed"
624400,631040," to break code in here. So the whole point is that you have a freedom of breaking shit. So fair enough."
631040,635440," Okay, let's fucking go. So what else do we have in here? What else do we have in here?"
635440,638640," Too many arguments wanted one."
638640,655440," Really? Make Vector2 accepts one argument. Are you freaking serious, MindFound? How come? How come?"
656880,658480," Let's grab that choice."
658480,682640," You can just use literals now. Ah, oh, okay. Oh, that's actually based. Right, so this is something that I"
682640,688720," really hated about the old Jai is that you had to sort of use this hack of functions and stuff like"
688720,696960," that to just be able to create structures. But now I can... Can I just... Is it that based that I can just"
696960,704080," do something like this and it will... To be fair, okay, okay, okay. So I'm using like a one value for"
704080,709200," both x and y. I might as well just do something like that. Right, so I might as well just do something like"
709200,713280," that. So yeah, okay. So slowly migrating."
713280,719760," Okay. Anything else? Anything else? What else do we have in here?"
719760,723600," Invalid top level directive foreign library."
723600,731840," You know what? By the way, I have a luxury to actually go through the changelogs, right?"
731840,735760," So because all of that shit has to be in changelog. So remove deprecated directives,"
735760,742000," insert internal and foreign library. Okay, so rename foreign directive foreign system library"
742000,749360," to... Okay, so to library and system library. Okay, so that means it has to be like this. Maybe I should"
749360,755040," just use the changelog now. Like every time I see something missing, I can just search it in changelog"
755040,762480," and know what exactly happened. Honestly, this is kind of an OP move. Damn! I just realized why the"
762480,771120," fuck people write changelogs. Holy shit! I've been programming for almost 20 years and I finally"
771120,779040," found a legit use case for changelogs. What a pathetic developer I am! Holy fuck!"
779040,783040," So, but yeah, GI changelogs are very thorough. Yeah, so..."
787120,792880," This is kind of based. Honestly, this is kind of based. I should actually write changelogs now."
792880,797280," I should really really change like write changelogs and be very very fucking thorough because you never"
797280,802000," fucking know like what you have you you will have to do, right? So you have like a code base that is"
802000,808000," three years old and like yeah, so it's going to be a lifesaver. It's going to be a lightsaber."
811680,817360," All right, it's going to be a lightsaber. So that's pretty cool. All right, so let's take a look at the"
817360,823760," other other things. Ooh, so okay, okay. So this is what I wanted to ask. You telling me, mein Freund,"
823760,830720," is that I can just use the structure literal, literally a structure and this is going to just work."
831840,839200," Okay, so here we probably have... So this is a base velocity. Based velocity. Where is that based velocity"
839200,850640," defined? Grab rn. Based velocity is a float, right? It is a float. This t is in fact a float. And then"
850640,859360," this thing is a vector. Will GI be able, purely from the assignment to this thing, figure out and infer the"
859360,865360," type of this struct literal. Place your bets chat. What do you guys think? Because there's very little"
865360,871040," information about what this structure has to be, right? The only information type information you have"
871040,878720," is the assignment. Does it go as far? People already say no. But I thought John was a Haskell fan."
878720,884800," I really thought, like I remember he said that he programmed like in Haskell at some point and he knows"
884800,890960," what monads and stuff. I thought he's a huge Haskell fan. I was dead sure that he would implement such a"
890960,898640," thorough inference like in Haskell. So has he published paper? I don't actually know. Right. Because Haskell"
898640,906400," can do that. Haskell can infer the types from a very like obscure places, right? Very obscure places."
906400,913760," So, and something like Haskell would have been able to infer that. So let's actually see."
913760,919280," Is John a real Haskell fan? Is John a real Haskell fan? Let's find out."
924960,928720," It went to a different place."
928720,934800," Well, to be fair, maybe the compiler, it doesn't really mean anything. It doesn't mean it's going to work."
934800,936880," It works, yes?"
936880,945520," If it works, so John is a real Haskell fan? I didn't expect that."
945520,948800," So yeah, so this is what I was talking about."
949760,954240," The GIA compiler errors aren't linear. So maybe it actually does that in several passes,"
954240,959600," right? So in the first pass, it checks the existence of the functions, right? On the next"
959600,965840," pass, it checks the arity and then maybe it checks the, maybe it does the type inference and stuff like"
965840,970720," that. Because so far what we're doing in here is just like a very simple, like a syntactical and a"
970720,976240," little bit of a semantical analysis, right? So just because it switched to a different place,"
976240,980640," it doesn't really mean anything anymore, right? So it's just like maybe it didn't get to that"
980640,986320," point of analysis of actually trying to infer the types, right? So it doesn't really mean anything."
986320,991520," But in any case, let's actually just assume that GIA is that fucking beast, right? And just do that,"
991520,996400," because it's very easy to then later add something like a vector two or something. I just want to see"
996400,1000400," if GIA is capable of like inferring all that stuff, because I'm really curious."
1001280,1007680," Okay, so make vector two. So this is a rect center. I'm pretty sure here it will be able to infer that"
1007680,1012880," because I saw that in a standard library, right? So this is how you usually do that."
1012880,1017680," Okay, so this is x and y. Where does it take x and y? Excuse me, wait."
1019920,1027520," Where does it take x and y? Ah, using freaking... I forgot that GIA is actually based language,"
1027520,1031760," where you can like export the methods of the structure. So I was thinking, where does it"
1031760,1036880," get the x from, right? So it's taking it from the... Yeah, yeah, yeah, yeah, yeah. So, oh my god,"
1036880,1047200," John, please, please release GIA. Please release GIA. I'm actually, I'm so sick and tired of programming in"
1047200,1055360," this meme languages like Rust, C3, and all of the... Please release GIA. I just can't. It's just like,"
1055360,1061920," it's a breath of fresh air every time I program in this language. Like, holy fuck. Anyway, so here's"
1061920,1069600," another one. So anchor x and stuff like that. So maybe we can... GIA is amazing language, honestly."
1069600,1076800," This is what C++ should have been, I'm telling you. Okay, so this one, I'm going to use a rectangular"
1076800,1081680," selection for this one. Look at that. That's pretty powerful. Right, so what's about this one?"
1081680,1092160," Ooh. Asm detected. Ah. Oh, this is a warning. This is a warning. Okay, okay, okay. So it's a warning:"
1092160,1098720," asm detected, asm detected, asm detected, asm detected, removing the whole body of the function debug brain."
1098720,1107280," Oh, this is actually fun. I loved it. I freaking loved it. So this is coming back to the point that"
1107280,1114880," no assembly was allowed. No assembly was allowed because it would try to embed that assembly into the"
1114880,1120800," wasm. So what it was doing, it was literally stripping off the entire body of the function"
1120800,1127280," where assembly was used. So, and then it would tell you: don't use that function. Right, so that's what"
1127280,1133200," we're doing. Like, strip off the entire body and just don't use that function, please. But these days,"
1133200,1140720," it is not needed anymore because look at that. Look at that. Back when I was implementing that code,"
1140720,1150240," that was not possible. That was not possible at all. There was no .wasm OS. So, this is the conditions"
1150240,1157920," under which I made a wasm game in Jai. Jai literally didn't have an explicit support for freaking wasm."
1157920,1161920," Oh, there's also a byte. Oh, what a fu-"
1164800,1170960," There is a byte directive that acts like a asm directive that literally inserts bytes into the binary?"
1170960,1182800," And people still have a discussion about who's gonna win: Jai, Zig, or Odin."
1182800,1189760," It's just like, this language is so much, like, miles ahead of any of these meme languages. It's"
1189760,1195200," fucking insane. And we're only scratching surface of this thing. We're only scratching. This is just"
1195200,1202080," a surface level stuff. Right, it's so fucking miles ahead of any of these memes on all of the fronts."
1202080,1206080," It's fucking insane. And there is a reason why John doesn't release it right away, because he's"
1206080,1213280," wanna make sure that it's fucking good. Not just a meme, not just to build community, little community with a"
1213280,1220160," little cute mask or anything like that. No, this is a language for real fucking injuries. It has to be"
1220160,1221120," fucking good."
1221120,1232400," I'm sorry. Anyways, anyways. So, there is LLVM traps and stuff like that."
1232400,1241680," So, I think I need to now search for the errors, right? So, is there any actual... Okay. So, here's an"
1241680,1249200," actual error that happened in here. So, get time. Undeclared identifier get time. So, there is no time"
1249200,1256880," anymore in Jai. Time doesn't exist. It's a timeless language. Okay. So, we'll go into the change log"
1256880,1263120," and just see the get time. Removed get system time, get time and system time."
1263120,1268000," Thank you, John. Very cool. But maybe first it got actually renamed to something."
1268000,1276000," Alright. So, deprecated get time, as the name has two vague and the OS-dependent implementations,"
1276000,1283200," we're adding extra complexity that is redundant now that we have Apollo time. This has been replaced by"
1283200,1291280," seconds since init, which has a more explicit name that makes unambiguous what it does,"
1291280,1295520," assists in the clear thinking. This function rides on top of Apollo time,"
1295520,1299360," those does not need its own custom implementation per AS."
1300320,1311440," clear thinking, clear thinking, clear thinking, clear thinking, clear thinking."
1311440,1314160," Anyway. So, since second..."
1314160,1323680," Since second init. So, let's actually try to do that. Particular... Particular coding... Man, this particular"
1323680,1327920," coding style is going to haunt me for the rest of my life. For those who doesn't know... Okay. So, for those who"
1327920,1332080," who doesn't know what the fuck I'm talking about, I did a session where I looked at a very interesting"
1332080,1344400," code base. So, Lagrange... Lagrange... Lagrange... Uxian. Right. So, this video. So, but the code base was so"
1344400,1349360," shit that I decided that I don't want to release it because I was bashing it too much for five hours."
1350480,1357360," I still achieved what I wanted to achieve. Because for a real engineer, there's no bad code. They can work"
1357360,1365200," with whatever code. Right. They can. But at the same time, the code base was clearly shit. Right. So, it was"
1365200,1374080," fucking clearly shit. So, essentially, the goal was to implement a very simple protocol. Right. It's a very"
1374080,1382320," simple networking protocol in a C language. Right. In a simple C language. And yeah. So, the implementation"
1382320,1389520," is supposed to be simple. But they implemented it in an enterprise fees bus style. They so much"
1389520,1394720," overcomplicated the initial problem, it's absolutely fucking insane. There's no reason to complicate it that"
1394720,1402800," much. So... And that's why I was mad. Right. So, I'm usually not mad at complexity if the complexity is"
1402800,1409120," justified. But the complexity in that project was justified. And in their documents, they called the"
1409120,1416320," coding style ""a particular coding style"". They literally called that coding style of this project"
1416320,1422320," ""particular coding style"". And this phrase is now going to haunt me for the rest of my life. A"
1422320,1429600," fucking particular coding style. And the particular coding style is Enterprise FizzBuzz. Literally that. So,"
1429600,1437840," imagine this but written in C. So, this is the particular coding style. The freaking particular coding style."
1446880,1453600," I would understand that in Java. Okay. But you were trying to bring that meme into C."
1453600,1462240," Anyway. Don't want to call any names. Don't want to call any projects. Because this project is actually"
1462240,1466320," quite important for the niche it is operating. It is quite important for the niche it is operating. And"
1466320,1472880," it's probably the best application in that specific niche. So, it's just like I can't bash it too much."
1472880,1477200," Because it works fine. Right. At the end of the day, it works. There is no bad code. There is only"
1477200,1482880," working code and not working code. But at the same time, if you're working with a simple protocol for"
1482880,1491840," the very much recreational nerdy niche, you better keep it simple, honestly. Like, come on. That's just like..."
1491840,1500160," So, yeah. So, we need to promote clear thinking. Right. So, this is what we're doing. We are promoting"
1500160,1510880," clear thinking. Promoting clear thinking. Let's go. So, I suppose it's a seconds since in it. Does it return"
1510880,1517840," a float or something like that? I don't really know. So, let me actually take a look at the definition of"
1517840,1525600," this specific function. So, this is going to be GI modules and let's actually do grep and boom. It does"
1525600,1530880," return float64. Look at that. So, this is a replacement for seconds since..."
1530880,1545680," When you renamed the function but forgot to update the comment. Right. So, I suppose..."
1546320,1555920," Oh, he probably did like a... Sad. He probably did a global... Yeah, global find and replace."
1555920,1566800," I love it. I love it so much because, like, I know exactly how that happens. It's just like,"
1566800,1569360," I love seeing these sort of like small artifacts."
1571920,1578480," Anyways. So, yes, yes, yes, yes. So, let's actually go and try to rebuild it one more time."
1578480,1585200," Okay. So, what do we have? So, error. So, undeclared get time."
1585200,1596480," So, there's like two places. Right. Seconds, seconds since in it. Okay. So, error."
1597600,1606960," And declared us as RGB to linear. Hmm. Okay. So, this function does not actually exist anymore,"
1606960,1611360," which is rather interesting. So, let's go to the changelog."
1623600,1632640," It was not documented. It wasn't documented. And... So, I suppose maybe it's... Maybe it's some sort of,"
1632640,1642800," like, a very obscure thing that John didn't expect anybody would use, but I used it because I was,"
1642800,1647680," like, frantically gripping the entire modules and stuff like that and I just found exactly what I need."
1648240,1653760," Right. So, and it's not available anymore, apparently. It is not available anymore. I don't quite remember."
1653760,1661200," What was the sRGB to linear? Maybe there's some mentioning of this function with the modules."
1661200,1669680," Right. So, grab... Oh. Oh, yeah. This is needed for gamma correction. Yeah. It's some sort of a stuff for"
1669680,1678720," the gamma correction. SRGB to linear. Okay. So, yeah. This is a gamma correction stuff. This is a gamma"
1678720,1686720," correction. And it is available in sRGB, believe it or not. So, this is now a module. So, do you tell me..."
1686720,1695680," So, sRGB is a programming for HSL and stuff like that. So, must. Hmm. Oh, now it accepts, like, a one"
1695680,1703040," single thing. Right. But does it accept, like, a four vectors? sRGB... Yeah. So, there is a vector 3 and"
1703040,1709680," stuff like that. So, in a place where it fails, I need to find... So, this is the game and this is where it"
1709680,1718800," fails. We probably have to import sRGB. So, that's basically what we have to do, I'm sure. Right."
1718800,1725520," So, let's fucking go. Uh-huh. So, error. Procedure call did not match any of the possible... Ooh."
1725520,1732800," This is very cool. So, maybe this is what we have to do. All right. So, this is actually"
1734640,1739840," like a four-dimensional vector. But in sRGB, I only saw three-dimensional vectors. So,"
1739840,1745840," let me actually see. Is there any vector force? Yes, there are. Look at that. Okay. So,"
1745840,1751440," all of that is here. All of that is here. So, nothing... Nothing unfixable so far. So,"
1751440,1757680," far all the problems that we encounter, they are pretty much fixable. Context. Ooh. I remember..."
1758640,1766640," I remember something interesting about the context. So, the context type does not exist anymore."
1766640,1772960," It's context now. All right. So, is it still a pointer though? So, let's actually take a look at"
1772960,1780560," the changelog. So, context. So, change the context. Yeah, yeah, yeah. So, if you think I want to actually"
1780560,1789280," search for the context. Uh-huh. So, only use context. If you say context, I can context instead."
1789280,1794640," The compiler no longer creates a declaration called context in the global namespace. So, any use of this"
1794640,1800240," name by all promise will now cause and then declare the identifier error. Almost all the time, you should"
1800240,1807040," just be able to say hash context instead. If you can use context space in cases where you're storing"
1807040,1813200," information about allocators, loggers and the passing, blah, blah, blah. So, I suppose context by itself is"
1813200,1821440," just a very useful name that John didn't want to squat. Right. You know, Ray-san style. I'm joking."
1821440,1827600," Ray-leap is amazing library and it has a very specific goal in mind when it was designed. So, it's certainly"
1827600,1834000," fine, but I mean... Right. So, he didn't want to squat a very useful name because the context is a very useful"
1834000,1840240," useful name for game development and stuff like that. Context time. Yeah. So, and that's why it was"
1840240,1846960," renamed like that. So, I hope just by doing something like this, this is going to be enough. Right. So, that's"
1846960,1857040," a lot of errors. I'm not gonna lie. Okay. So, what do we have in here? Fatal error. Broken module. Found compilation."
1857040,1866480," Okay. So, that's pretty funny. Okay. So, it tried to actually compile wasm and stuff. Yeah. That's right."
1866480,1873040," So, this is basically what happened. This is basically what happened. It managed to generate bytecode. So,"
1873040,1880880," jaybreak wasm bytecode and then it tried to pass that bytecode to clang and it couldn't do that for whatever"
1880880,1886320," reason. Right. So, it couldn't simply do that. So, this is where it tried to do that and this is"
1886320,1893120," basically part of the first part of the build script. So, let me see. So, build wasm is called"
1893120,1902240," where? It is called somewhere here. Okay. So, you know what? I think I'm gonna command out wasm release."
1902240,1906560," Right. So, the wasm release is completely commented out. We're only building the simp version"
1907120,1913520," for release and debug. Right. So, the game goes in in two sort of versions. The simp one and the wasm one."
1913520,1917520," So, let's actually see if we can compile only only simp."
1917520,1928960," There you go. It's that fucking easy. So, now let's take a look. So, here is the... All right."
1928960,1935920," That's pretty cool. It actually still... Wasm is the module that we already have. Okay. So, let's actually"
1935920,1942160," take a look at the giant debug. It still works. It actually still works. The game still works."
1942160,1953360," So, it's a native version and everything. Right. So, it wasn't that hard to actually port it. Even though"
1953360,1964000," the language is actively changing all the time, I think John didn't break language that much. Right. So, he's really"
1964000,1969520," careful in how he deprecates things. He also documents a lot of majority of the things"
1969520,1975360," in a changelog. sRGB to linear was not documented. So, it was moved to a different module. Right. So,"
1975360,1980480," but I think that was not properly documented. Probably it's such an obscure and subtle case"
1980480,1985840," that he maybe forgot or maybe didn't think about that. So, again, you could just grab modules. Right. So,"
1985840,1994160," there was nothing impossible to actually fix so far, which is great. And it's a three years old code."
1994160,2001600," Three years old. Can you take like a three years old JavaScript code written in a modern at the time"
2001600,2007520," framework and run it after three years? Can you do that? I don't know. I'm not a web developer. You web"
2007520,2012320," developers can tell me. Can you do something like that? With the minimal changes because we didn't make"
2012320,2017760," that many changes. We can even quantify how many changes we made. So, okay, I commented out Wasm. We"
2017760,2022080," haven't finished with Wasm, by the way, but I think Wasm is going to be a little bit easier. So, here"
2023040,2032880," a couple of changes that we made. And by the way, it managed actually infer the type of this string literal"
2032880,2040160," purely from assignment. Who was saying no in the chat when I asked whether the Jai compiler can do that?"
2040160,2048240," Who was doubting the, you know, the love of John for Haskell? Who was saying that?"
2050960,2053600," Haskell can do that. Jai can do that."
2053600,2068560," Honestly, jokes aside, this is actually kind of based. So, how deep the analysis goes?"
2068560,2076320," Right. So, essentially, when it's analyzing, it probably says, okay, I expect this entire expression to be"
2076960,2086320," vector two. Right. And as we're analyzing and trying to infer this struct. Right. So, it actually goes up"
2086320,2094640," in an analysis and kind of infers that it's part of the expression that is expected to be"
2094640,2098240," vector two purely because of the assignment."
2100960,2103760," That is based. That's actually kind of difficult to pull off."
2103760,2111680," If you think about that. Because again, so like when you are down in the recursion, when you're analyzing"
2111680,2119440," and stuff like that. Right. So, when you're looking at this expression, you may not know locally in that"
2119440,2125200," place that you are part of the expression that is expected to be vector two. Right. So, that means you"
2125200,2130160," kind of need to store that information locally available at that specific point of the recursion."
2130160,2132160," So,"
2132160,2138240," Okay. So, maybe there is another thing is involved in here because"
2138240,2147040," besides of expected type, you kind of know from the shape of the literal that it is a structure"
2147040,2153760," with two floats. Right. With two floats. So, you can kind of have additional information without"
2153760,2159200," knowing that the whole expression is expected to be vector two. So, yeah, it looks at the left part of"
2159200,2164320," the assignment. So, the type checker clearly has access to the overall assignment when it analyzes the"
2164320,2170400," right side of it. Yeah. This is cool. That's what I'm saying. This is cool. Really impressive job."
2170400,2174000," Right. Because I developed languages like it's kind of hard to pull off. It's not impossible,"
2174000,2179600," but it's just like kind of annoying. Right. So, good. Really cool job."
2179600,2186240," If this language is changing this much, did you bind Jive with Raylib or something?"
2186240,2191760," It actually comes with its own Raylib. So, it's called simp because it's simple."
2194640,2202080," I really like how childish the names of the modules are. So, things like simp. I think he named this"
2202080,2208480," library at the time when there was a, you know, a lot of noise, a lot of drama around Twitch banning"
2208480,2214160," the word simp. Right. So, he said, ""Fuck you, Twitch. You can't dictate me what to say. I'm going to call"
2214160,2221040," my library simp."" So, yeah. And also, there is a thing, ""GetRacked"". Right. It's also part of the..."
2221040,2228320," It's basically I'm GUI. Right. So, it's Jive's I'm GUI. Oh, Sloppy Math. Right. Sloppy Math. My favorite."
2228320,2235920," I absolutely love the standard library. There's so many funny names in here. It's just..."
2235920,2244720," So good. So good. It's so much worth being in Jive beta. It's freaking insane."
2247680,2254880," GetRacked. Oh, GetRacked left-handed. So, it's like for left-handed people, I suppose. All right."
2254880,2256960," It's pretty cool."
2256960,2263200," So, it's for people who actually hold the mouse in the left-hand. Do left-handed people actually use"
2263200,2268640," the left-hand for the mouse? I think. I think it makes sense. Yeah. So, it means you actually swap the"
2270000,2275760," buttons as well and stuff like that. Telemetry. I think telemetry is the profiler."
2275760,2278800," Telemetry. Where is the telemetry?"
2278800,2289600," I can't find that. Oh, telemetry 3. Yeah. So, it's a profiler as far as I know. It's not what you think it is."
2289600,2304320," Telemetry bindings. No. Yeah. So, I think it's this one. Rad Game Tools."
2304320,2312000," Is there like a bigger screenshot? Yeah. It's this one. John actually used this thing on his streams."
2313600,2318080," So, I think it's like a paid, really hardcore tool for optimizing applications."
2318080,2325760," The backdoor module. I don't know. Let's actually find out."
2325760,2326880," grep."
2326880,2331280," Backdoor. And let's actually do like a case-insensitive thing."
2331280,2340800," So, yeah. As you can see. Jai is safe. Not a single backdoor has been found."
2342720,2349920," Has anyone tried to download the Linux, you know, source code and just grab backdoor in there?"
2349920,2359120," Has anyone checked, anybody checked like Linux for backdoors?"
2359120,2368000," That's a really interesting question. Man, Linux is huge. Oh, it's already, it's already downloaded."
2369440,2374960," Uh. This is, this is source code."
2374960,2383920," How freaking huge Linux source code is? What the fuck?"
2383920,2387520," One gigabyte? I actually doubt that."
2387520,2397600," Looks like blow to me. It doesn't even show. When it sent me, it didn't tell me the sizes. So, the browser"
2397600,2403600," doesn't know the full size of Linux kernel. Is that the whole, is that the whole git repo?"
2403600,2410560," Uh, maybe not. Okay. So, 234 megabytes. So, that's how huge Linux kernel is. Okay."
2411280,2420640," So, let's actually go. Can I unpack this? Should have actually redirected that to stdout, I think."
2420640,2426240," Because it's going to take some time purely because of the output. Because there's too many files in here."
2426240,2434240," Right. So, one of the things you want to do, oh, now it's deleting recursively, um, is that you probably want to"
2434240,2442720," redirect that. So, tar fvx and, like, redirect to def null. Uh, hopefully that will take a little bit less time."
2442720,2444960," Uh-huh."
2444960,2452720," So, are you familiar with cock typing? Yes, I'm doing it right now. Okay. Do you see my keyboard right now?"
2454080,2456320," Why do you think I don't show my keyboard in the stream?"
2456320,2462720," Stop asking silly questions, please. Uh, so, anyway."
2462720,2472400," Okay. So, here's the Linux. And what we can do is a grep ir backdoor."
2479440,2482720," Look how many backdoors there are in Linux. Like, holy f***ing..."
2482720,2495600," How much proof do you need? How much more f***ing proof do you need that"
2495600,2501840," Linux is a CIA project? Look how many backdoors they have. Right, so..."
2503120,2509520," So, register backdoor dbIw data. Uh, so, this is, like, all of the backdoors."
2509520,2514000," Especially in the real tech drivers and stuff. Look at that s***."
2514000,2518400," That's why I don't use Linux. Right, f*** that CIA project."
2518400,2527040," So, yeah. Jai, on the other hand, Jai, on the other hand, doesn't have any backdoors."
2527040,2528720," Right. Look, look."
2530320,2536480," Do you see any back... Not a single backdoor. Jai is more safe than Linux."
2536480,2541200," So, what do I use? Um..."
2541200,2547280," Oh, listen, talk about..."
2547280,2558960," Uh, now, so, let's actually continue. Uh, so, it's sorting, uh, Jai break. Jai break."
2560080,2561840," Uh, alrighty..."
2561840,2571040," So, we also have a Jai release. Okay, so, pretty cool. I really like this tutorial."
2571040,2575760," I really like this tutorial. It's actually super subtle and it looks super simple, but it very"
2575760,2581520," quickly and subtly teaches you how to play this game. Uh, yeah, really like that."
2583040,2589440," And the game actually loops on the, onto itself. When you finish all of the, uh, all of the bars,"
2589440,2594240," it then plays a pretty cool animation, in my opinion, that actually restores the state of the game and lets you"
2594240,2599760," continue playing the game. Um, all right. So, you know what I'm gonna do? Uh, you know what I'm gonna do?"
2599760,2610400," I'm going to update the whole thing. So, now, if I do opt Jai being Jai Linux. So, this is the version."
2610400,2620480," So, this is expected version. Uh, right. And let's do a committee committee and potentially pushy-pushy as usual, as usual."
2622480,2631360," All right. So, upgrade the native version to, uh, Jai, uh, what was the two?"
2631360,2639920," Zero, zero, something, something, to beta, uh, this one. There we go. And I'm gonna push that"
2639920,2644640," right into the repo. If you haven't access to Jai compiler, you should be able to compile the native"
2644640,2650720," version already with the native compiler. So, I just patch up all the places, uh, and stuff like that."
2650720,2656720," So, now, we recovered the source code. We recovered the project at the beginning of the stream. Uh, we"
2656720,2663360," basically had a source code in a language that doesn't exist anymore. Right. But now, we saved the"
2663360,2670960," day. We saved the situation. We recovered everything. When Jai, I don't know. Right. Guys, I'm waiting"
2670960,2677440," for Jai to be public as much as you do, even though I'm in Jai beta. Because, here's the thing, because of the"
2677440,2683520," specifics of my work, I like to share my source code. And I want to make sure that the source code I write"
2683520,2689200," is usable by everybody who's watching me. In case of the Jai, it is impossible. If you're not in Jai"
2689200,2693520," beta, you can't compile my source code, which renders my source code kind of usable for the majority of my"
2693520,2698480," audience. It is annoying. Right. That's why I rarely program in this language. And it's just like,"
2700080,2705920," It is really, really annoying. Like, I'm sorry. I don't know. Maybe at some point, people say there are"
2705920,2713360," some rumors that, uh, John is actively working on getting Jai out. So, he's really committed to that."
2713360,2720400," So, that means maybe in 2025? We don't know. Uh, it's a good language. Right. So,"
2720400,2729680," Ship the LLBM AR. Not a bad idea, honestly. Not a bad idea. I'm already shipping the WASM. Right. So,"
2729680,2734880," that means you can kind of play it. But on top of just being able to play with the executable,"
2734880,2741120," uh, I'm, I'm a programming channel. So, that means all of my audience is programming. Right. And, uh,"
2741120,2745920," because of that, uh, I want people to modify the thing. Right. So, I want people to modify"
2745920,2752000," and, uh, play with it and stuff like that. So, it is what it is. Right. So, I'm sorry. I'm sorry."
2752000,2761040," So, maybe you can modify LLBM AR. Right. Are you that hardcore? Are you that hardcore?"
2765600,2772560," So, one hour in and we're done with this. Can your, the foundation do that? Exactly. The foundation."
2772560,2778000," So, well, I mean, we didn't finish, honestly. Right. So, because now we need to do the WASM support."
2778000,2783760," And WASM support is going to require a little bit more work because here we're doing some unhinged"
2783760,2790960," sheds. Honestly, we're doing some very much unhinged sheds. Uh, so, built WASM platform is only"
2790960,2798240," support on Linux right now. Yeah. Because we were calling like an external, um, clang. Right. So,"
2798240,2809760," and on top of that, we, I think we had, uh, I think we were running WASM 64 to 32. 64 to 32. Oh yeah. It's,"
2809760,2817200," it's in third parties. It's in third parties. And I literally actually have an executable in here."
2818160,2824400," Right. So, the source code of this executable is available at HTTPS. So, the reason why I provided"
2824400,2832000," it in here, so you can just download the thing and build it without building this separate tool."
2832000,2839200," And also, I had to go extra mile and make the executable static. So, it is static, which means"
2839200,2849120," that theoretically it just works on any distro. It works. I built that executable on Debian three years ago."
2849920,2856160," Now, I am on... I forgot about this shit again. This is void. Right. So,"
2856160,2865200," So, I'm on void. So, do I have like any other fetch? Uh, so, I think I need to maybe install some other fetch."
2865200,2874560," Uh, just a second, guys. Uh, xvps query. Uh, so, what other things we have? Uh, I think it's rs and fetch."
2875360,2882720," So, ufetch. Oh, I have ufetch, apparently. Okay. So, we can try to use ufetch. Uh, ufetch. Yeah,"
2882720,2888160," there we go. So, I'm... Today, I'm on void. And, uh, that executable still works."
2890000,2895840," I haven't made any modifications to that executable. Uh, right. Didn't do anything. Just compiled it"
2895840,2901920," statically. Three years. Completely different distro. Still works."
2901920,2912160," Who needs docker? Fucking swift can't work without a docker container. Like, I... Honestly, I feel like"
2912160,2917760," I'm going absolutely insane. It is so obvious for me the benefits of static executables"
2918560,2926000," that I just don't understand. Look. Look. This is like a concrete example. Concrete fucking example."
2926000,2935680," Absolutely different distro. Three years ago. Static executable. Still works. No docker. No"
2935680,2941680," virtualization. Just a static executable. Very useful code. Still works throughout the years"
2941680,2948880," in a different environment. Am I insane? Like, why are people upset with, like, obsessed with, like,"
2948880,2951360," dynamic libraries, virtualization, virtual machine dockers and..."
2951360,2960800," What is going on? Am I... Like, am I the only one who's just, like... You provide them concrete evidence"
2960800,2967280," of the benefit of this thing. They complete... In complete fucking denial. And still obsessed with their stupid dockers."
2970080,2973520," I feel like I'm going insane. So..."
2973520,2977520," Um..."
2977520,2982560," Anyways, I'm sorry."
2982560,2987040," Um... They like ships. Yeah."
2987040,2992960," It's actually surprising this chat still works. Yeah. So I still can use it. It's kind of a little bit"
2992960,3000880," outdated because recently into, uh, wasm 64 to 32, uh, we made a little bit of changes. We added more"
3000880,3008320," instructions, right? So... Ooh. People just made pull requests. Oh, okay. So let's actually take a look at that."
3011520,3024560," So..."
3024560,3031600," And..."
3035280,3035840," Oh, okay."
3035840,3035840," Oh, okay."
3035840,3045200," I said... Okay. They are named in a similar fashion, right? So..."
3045200,3050160," I guess I supposed to ignore this one, right?"
3058720,3062240," Let me know that I have to ignore this pull. Okay."
3062240,3069760," That is funny. And so we haven't updated the base of this utility for, for quite some time, right?"
3069760,3075600," So we haven't updated the base. Um, so I think what we need to do, uh, at some point just, like,"
3075600,3080400," fetch the latest changes and just, like, put the changes on top of the latest changes and wipe it."
3080400,3084480," Uh, I'll try to do that a little bit later, but yeah. So for now, what I'm going to do, I'm going to just"
3084480,3090560," download these latest changes and, uh, simply, uh, simply test if they work on the machine, right?"
3090560,3095680," So I just want to quickly... Because I want you to download and build the latest wasm64-32 anyway."
3095680,3102240," Uh, so might as well do that. Uh, so might as well do that. So this is studying. So do we have wasm64-32?"
3102240,3106800," I think I don't. Okay. So git clone. Uh, git clone. Let's fucking go."
3106800,3110080," Uh, okay, good."
3114480,3122640," Uh, so if I remember correctly. So it uses CMake. Uh, let's try to build it. CMake. I remember"
3122640,3128240," so that they have to build it with specific... Yeah, so there's only, like, a static flag and whatnot,"
3128240,3135200," right? So let's do the static thingy-ma-jingy. Uh-huh. So, yeah, there we go. So any changes?"
3136320,3147280," Ah, so can't find third-party g-test. Um, I forgot to clone it recursively. I'm getting"
3147280,3154800," really weird vibes that I feel like I already experienced before. Uh, so I need to clone recursively."
3157120,3163680," Oh no. It's... It's the foundation all over again. It's the fucking foundation."
3163680,3167440," Please no. Please no."
3167440,3177200," Um, deja vu. Yeah, I'm having a deja vu. They found you. They are foundation after all,"
3177200,3186640," because they always find you. Anyway, so, um, let's fucking go. So this is the build and, uh,"
3186640,3192960," I need to do CMake. Yeah, let's go. So there's a bunch of warnings and stuff like that."
3192960,3199920," Look at that. It needs a locker. Why the fuck does it even check for these, like, things? I mean,"
3199920,3204960," you are in POSIX. It should be available. But anyway, so let's go ahead and try to build the whole thing."
3206000,3210320," So honestly, I don't think we need to build everything, the entirety of the Bobbit. Uh,"
3210320,3216000," so we only need to need to build WASM64-32. But I mean, I'm on a good machine, so we can just build it"
3216000,3228080," super quick. Um, pretty rare to hear someone pronounce deja vu, uh, correctly online. Uh, this is how we"
3228080,3234000," pronounce it in Russia, though. So in Russian language, you also have the word deja vu, uh, and I just"
3234000,3240800," pronounce it in the way we pronounce it in Russian. Um, so. Do, do English speakers pronounce"
3240800,3253040," deja vu incorrectly? Right, so, I don't know. So, uh, I guess it would be better to disable tests because"
3253040,3261520," there's... I have no idea what the fuck is going on and why it just doesn't build the thing"
3261520,3273200," to 32. Like, wait, what? Ah, okay. Well, I mean, it built successfully WASM64-32, right? So,"
3273200,3280000," ah, this is probably because of the... I said to do static, but there's something wrong with"
3280000,3288400," the static when you do with leap tests and stuff like that. Um, English people say ""de-ja-vu""."
3291120,3295920," Okay, in Russia we call it ""de-ja-vu""."
3295920,3301120," So, to be fair, I think ""de-ja-vu"" is just, like, pretty much an"
3301120,3311920," international word at this point, right? So, like, it probably exists in any language."
3311920,3323040," It's like, you know, Russians also have their words in every language, like ""vatka"", right? So, or something like that."
3323040,3336800," Think, do... Like, what other nations, like, languages' words became kind of like a part of the every language?"
3338080,3346000," It's just some... There is something from Chinese. I think ""chai"" is basically a Chinese word that exists"
3346000,3352240," pretty much in any language, but it depends, right? Some languages call it ""chai"", some of them call it ""ti""."
3352240,3356720," Right, but what's interesting is that, like, English speakers understand the word ""chai"" anyway."
3356720,3360880," ""Mafia"", that's a good one, that's a good one. ""Leo Son""."
3360880,3366400," ""Chai tea"". Yeah, ""chai tea"" just breaks my brain completely."
3368480,3372880," But in Chinese, it's not even ""chai"", it's ""cha"", right? So, it's just a little bit of ""ye""."
3372880,3376640," With a rising tone and stuff like that."
3376640,3381920," ""Yoga"". Yeah, it's that one."
3381920,3390000," It's pretty cool. So, it's just, like, one word in one language just becomes, basically,"
3390000,3395760," international word. It's kind of interesting. ""Kindergarten"", yeah, it's a German word, I know that."
3395760,3402720," Oh, tea and ""chai"" are from different Chinese regions. Okay, that's actually cool. ""Tsunami"","
3402720,3409040," ""Typhoon"", also, right? ""Pasta"". ""Bananas"" is Portuguese, that's actually cool. ""Surf"", yeah."
3409040,3416000," That's so cool. ""Chai"" was transported by land and ""tea"" was by sea, yeah, yeah, yeah."
3416000,3421680," All right, so we have this thing. So, what I want to do, I want to actually take the pull request."
3422320,3430480," Right, so I suppose we're going to be closing this one, right? So, let me quickly just say ""upvote"" and just"
3430480,3436000," close this pull request. Right, and what I'm going to do with this one, I want to actually fetch it."
3436000,3445280," Right, so let's go to ""wabbit"", ""wasm64232"", and I'm not going to do anything except just, like,"
3445280,3450320," test the build. All right, so just see if it builds or not. We probably need to set up some sort of a CI or"
3450320,3459360," whatnot. All right, so add a remote name. Let's actually say ""memory_fill"", and what are the other"
3459360,3469120," instructions they needed? ""memory_fill_copy"", right? So, this is a ""copy"" and ""fill"". There we go. And we're going to just do that."
3470240,3473920," Let's not do that. So, we're fetching a bit in ""memory_copy_fill""."
3473920,3481920," So, and let's just open this thing. Yeah, this is the new branch."
3481920,3488000," Okay, so, and in the new branch, let's double check what kind of changes we made in here."
3488640,3494400," So, ""memory_copy_memory_fill"". I never use these instructions myself, right? So, I'm going to just"
3494400,3501760," trust them on this instruction working exactly as intended. So, I suppose ""memory_copy"" and ""memory_fill"""
3501760,3508240," are usually needed for dynamic allocations and stuff like that. Right, so let's try to rebuild ""wasm64232"","
3509200,3516880," and see if... yeah, it can pass. Okay, so I'm going to just like, you know, accept it. Looks good to me."
3516880,3526080," Thank you for the contribution. Right. Okay. It's interesting. This is already a second pull request."
3526080,3533200," I actually noticed there was another pull request. So, apparently this is this tool..."
3537840,3543440," people need this tool, surprisingly. Like, I didn't expect that. So, I hacked this tool together"
3543440,3549920," as sort of like for my... specifically for my game. And I didn't expect that it's going to be useful"
3549920,3555360," for anybody because I expected that Jai may be going to have like a 32-bit support, but it still doesn't"
3555360,3560960," have 32-bit support. And I think John doesn't really care about it that much, right? So, he doesn't need"
3560960,3566800," it for his games and everything. So, yeah, apparently people need it. So, okay."
3567200,3571760," And by the way, if you're using this tool, if you find this tool useful, feel free to submit pull"
3571760,3577200," requests, right? So, because again, this approach doesn't work for everything, right? So, like it"
3577200,3582400," doesn't have full support of all of the instructions. Some of the instructions are missing. So, feel free"
3582400,3589280," to submit if you find something. If Jai comes out in 10 years, ""wasm32"" might not exist anymore. Yeah."
3590560,3598880," So, there is one better user who's into Nintendo DS modding, who's very sad, the lack of 32-bit support."
3598880,3605040," Yeah. It's kind of sad. And John is actually very skeptical about 32-bit support. So, he believes"
3605040,3611200," that 32-bit support, like 32-bit in general, should just already die and ditch. All right. So, nobody needs that."
3613360,3617600," But maybe at the same time, it's a lot of effort. Again, so, he works on a lot of projects,"
3617600,3623440," right? So, he works on the Jai itself. He works on his game and it's probably not even one game,"
3623440,3630080," right? So, maybe he works on two or three games simultaneously. So, and now just adding 32-bit"
3630080,3635120," support, I'm pretty sure him and Sockler doesn't really have enough resources to do that. I thought"
3635120,3640720," LLVM supports 32 wasm. It's not really about LLVM. That's the thing. It's about, like, what the compiler"
3640720,3645520," generates for LLVM, right? LLVM is just a compiler, right? So, it's just sort of like a,"
3645520,3651520," think about LLVM as a cross-platform assembler, right? So, because there's different architectures,"
3651520,3656880," different assemblers, right? So, you want some sort of like, you want to generate instructions for some"
3656880,3662960," common denominator for all of the platforms you target. So, then later, you can actually translate"
3662960,3668240," it to your target. But on top of being basically a common denominator for different assemblers,"
3668240,3674240," it also transforms your assembler doing a little bit of optimizations, right? So, that's what basically"
3674240,3682320," compiler backend is, right? So, and it's not about, like, what LLVM supports. It's about what you generate"
3682320,3688320," for that intermediate language, right? So, that's what you have to do. It's up to the compiler to do that"
3688320,3697200," properly, unfortunately. So, it's not that easy. It's not that easy. That's what I'm trying to say."
3698800,3707040," Uh, okay. So, let's fucking go. So, we have the latest stuff. Let's go to the main and fetch the thing."
3707040,3716480," Uh-huh, uh-huh. Uh-huh, uh-huh. Origin, uh, master. It's actually main. Ah, it was already using main."
3718560,3730880," Freaking main versus master, I swear. It's so bizarre. It's just like people obsess over"
3730880,3740480," stupidest things instead of solving problems. Anyways. So, let's go to the job break. We need to now add"
3740480,3748160," support for actual WASM, right? So, and do... I think I need to maybe update the executable as well."
3748160,3756400," I think that makes sense. So, let's go to WASM to Wabbit, right? So, here is a bin, uh, WASM 64 to 32."
3756400,3762880," So, LDD, no dynamic executable. So, I can just go ahead and copy paste it in here. Uh, and I just updated my"
3762880,3769840," executable, uh, three years old executable. And I'm sure this new executable is going to work in three"
3769840,3777360," years as well. Maybe in five, maybe in ten, until Linux kernel makes backward incompatible changes to its"
3777360,3784640," syscall, which it rarely does. Because if somebody makes backward incompatible change to the syscall,"
3784640,3793120," Linux will come to their house. Linux will come to their house. So, and do some nasty things to their"
3793120,3802240," computer. So, that's why these executables work in three years, in five years, in ten years. That's how"
3802240,3809600," you maintain backward compatibility. You hand down all the mother flippers who make backward incompatible"
3809600,3816560," changes and just... I'm joking. But that's a very effective way to maintain backward compatibility. Just"
3816560,3828000," saying. Uh, so, on the fear. Backward compatibility is maintained on a fear of lead coming to your house"
3828000,3834160," if you break something. The fear is the main driver for stable software."
3837440,3843360," Fear, dream, and development. Exactly. Fear, ariated architecture. Anyways."
3843360,3849120," It's the cold war way of good maintaining."
3849120,3856640," The ""our architecture is stable due to mutually assured destruction"", right? So..."
3858240,3867040," Oh, shit. Anyways. That's a very interesting way of looking at it, to be fair."
3867040,3874800," So, anyways. How are we going to be doing all of that? So, we need to just take a look. So,"
3874800,3880400," let's command out simps and let's enable wasm releases, right? So, this is what we did."
3881040,3892560," This is what we did in here. So, we just flip-flop. And now, I'm just trying to do ""gi-linux"". It's ""opt-gi-bin-gi-lilux""."
3892560,3897040," Alright. So, and it's first, obviously. I'm a little bit tired already."
3897040,3906400," So, and what does it say? So, as I'm detected. First of all, we don't have to obsess over wasm inlines."
3906960,3910160," You can tell Jai is nice because there has not been a tea break here."
3910160,3913440," Yeah. That's true."
3913440,3922080," That is true. I'm not gonna lie. Even though we kind of are doing things that would usually take a lot of"
3922080,3929600," time and nasty stuff in other languages. Like, in Jai, it's kind of like it's an easy walk, right? So,"
3931360,3938960," So, asm detected. Asm detected. I feel like I don't have to do any of that shit anymore."
3938960,3944880," So, prepare object file for build wasm, right? So, there's this loop where we're trying to detect"
3944880,3953120," type checked blocks, right? And essentially, we just tell the programmer that asm was detected just to let"
3953120,3958640," them know and that what we're removing this particular function. And then at the end in here,"
3958640,3966000," we just, yeah, we just return you the the path to the wasm translated object or something like that."
3966000,3971040," I feel like this function should just not exist anymore, right? So, let's just remove it and see"
3972080,3978480," how it's going to fail. Okay. That's pretty cool. So, prepare object file for build wasm. So,"
3978480,3991760," compile. So, the way it actually worked in here. So, we would begin interception of all of the compiler"
3991760,3998160," events. This is how it works, by the way, right? So, essentially, while everything is compiling,"
3998160,4002960," you're intercepting into the compiler and catching all of the events that happen in the compiler,"
4002960,4007360," like something compiled, something type checked and so on and so forth, you're catching them and"
4007360,4012160," you're handling them, basically embedding your code into the compilation process."
4012160,4018000," That's how it works. It's freaking insane idea and I don't know why more compilers didn't do that,"
4018000,4022960," but it's so fucking cool, right? So, you have this build script and it's part of the compilation"
4022960,4031520," process. You're literally extending the compiler at compile time. Insane idea. Absolutely revolutionary."
4031520,4036880," Like, holy shit. So, and you start the interception and you organize a loop and stuff like that and you"
4036880,4042240," add files and as you add files, events happen and you do something on those events. So, to be fair,"
4042240,4048160," we don't need to do that anymore. We don't need to do that anymore. And so, let's actually remove all"
4048160,4057040," of this stuff. Right. If we manage to build assembly, yeah. So, then we're taking the build wasm and we're"
4057040,4061920," just translating it and stuff. None of that is needed anymore, honestly. So, build wasm. What does it do?"
4061920,4070480," So, build wasm would take the LLVM. Yeah. So, it would take not even LLVM, but bytecode of clang,"
4070480,4078000," right? So, bytecode of clang and just translated it into wasm64, right? Translating it to wasm64"
4078000,4085600," and then using wasm64 to 32 to, you know, to translate it to main 32. So, this is what it was doing."
4085600,4091520," Okay. So, a lot of these things are not needed anymore. That's for sure. So, we don't need"
4092720,4099280," that stuff, right? So, we don't need to do clang and we don't need to do ld, right? None of that is"
4099280,4106000," needed. The only thing at some point we'll maybe need to do is translating with wasm64 to 32. So,"
4106000,4111760," I'm going to keep that, right? So, this is the only two lines probably needed. And then here, oh, it's"
4111760,4118960," just a command line runner, right? So, it's a nice command line runner where I have just variadic arguments"
4118960,4125440," and redirect. Does Jai standard library already have something like that? I don't know, honestly. So,"
4125440,4131440," there's a run command and I think... I don't really remember what it was doing. So, it's a redirect"
4131440,4141600," std out to file. And I think it was only needed for what? What was needed for? I never used it for"
4141600,4151120," anything. Wait a second. Redirect... Yeah, every time I was calling cmd, I never actually used that. So,"
4151120,4160160," the only thing I need in here, I feel like, is just logging. Just logging of what's going on. I don't know."
4160160,4165360," It's kind of like a, you know, leftovers from some stuff. So, maybe it doesn't matter anymore. All right."
4166080,4172560," So, in here, I'm going to just leave this stuff like this. And this is going to be this stuff, right? So,"
4172560,4185120," maybe what I need to do now is wasm 64 to 32, right? It's a wasm 34 to 62. And maybe an input path,"
4185120,4192560," right? So, this is the input path string, output path string, right? So, and that's basically what we can do"
4192560,4204000," in here. So, input path, input path, output path. There we go. So, let's try to compile this entire"
4204000,4210640," thing. So, what does it say? Prepare object file that is not needed anymore. Uh-huh. So, and now,"
4210640,4219120," instead of this thing, we have to do wasm 64 to 32, right? So, I don't know what to do on that stuff,"
4219120,4223200," but yeah. So, we can just do it like this. So, this should be it, honestly. This should be it."
4223200,4230800," And I was only using Linux because some of the binaries I use are from Linux, which is honestly"
4230800,4237760," correct. So, wasm 64 to 32 only works on Linux. We can try to compile wasm 64 to 32 for Windows and just"
4237760,4244080," put it in here. I think that's a good idea. There's also wasm Linux tab or anything. So, none of that"
4244080,4249760," really matters, right? So, let's try to compile all that stuff. So, it fails for... There we go. There"
4249760,4258080," we go. So, we were trying to compile wasm platform. Uh, and so, there's some allocation stuff that is"
4258080,4263760," going on. So, I'm not really sure what's up with that. Oh, I'm using directly heap base. Look at that."
4263760,4269280," We're using directly heap base and everything. For those who doesn't know what is a heap base. Uh, so, it makes"
4269280,4287600," sense when you try to use LLVM Clang in libc free environment. Uh, heap base LLVM. Uh, so, wasm without"
4287600,4295760," mscripten. Compile in C to wasm without mscripten. Right. So, there's a good explanation what this thing is."
4295760,4304240," heap base. Right. So, essentially, here's the stuff. Um, this is the memory. I'm sorry for"
4304240,4309520," flash banging you, but this is the memory. And, uh, so, at the beginning of the memory, you have data"
4309520,4316240," and then you have allocated some stack. Stack grows towards the memory and heap grows there. So, heap base"
4316240,4322960," point at that specific place. So, if you want to write a memory allocator, a memory allocator, you allocate"
4322960,4328640," memory after heap base, but never before heap base because you have a stack and the data there. Right."
4328640,4332640," So, that's what it is. The article is really cool. I really recommend to check it out. So, here it is."
4332640,4338960," So, that's a very cool article. So, anyway. Um, so, I'm going to put that in here. There we go."
4338960,4348800," Uh, and so, we implemented our own allocator. Um, on top of this entire thing. I said some time ago, this,"
4348800,4353360," uh, this, uh, this library doesn't use dynamic allocations. I think it does use, but through a"
4353360,4363680," custom allocator, which doesn't really shrink or extend the memory. So, yeah. Um, anyways. So, we have"
4363680,4373840," a foreign stuff in here. So, now, uh, not all control paths are available. Ooh. Oh, so, this is, this is a warning."
4375040,4386480," Not all control paths. Okay. So, we implemented our own heap allocator. So, in case of resize and allocate,"
4386480,4393680," we do that. Then we have free. Huh. So, that means we didn't do anything. So, I think I have to do"
4393680,4404320," something like complete. All right. So, ooh. The following enums values are missing. Is this yours?"
4404320,4414640," Caps, destroy heap, startup, shutdown, threat start, threat stop, create heap. And basically, for those"
4414640,4419760," who doesn't know what the fuck all of that is, to implement your own allocator, you have to implement"
4419760,4426480," this function, right? Um, which is really dumb right now. It will be interesting to blend a proper"
4426480,4434320," malloc on heap base. Uh, and it accepts the mode, the allocator mode. And it used to be very simple."
4434320,4439680," The allocator mode used to be very simple. You are resizing something, you're allocating something new,"
4439680,4444720," or you're freeing the thing. So, that's what it is. Apparently, in the latest Jai,"
4445680,4454240," we added ""is this yours?"" So, imagine, like, in the memory allocation world, you have three operations:"
4454240,4462000," malloc, realloc, and free. In Jai, there is a thing called ""is this yours?"""
4462000,4472800," What? Anyways, let's actually take a look at the allocator mode. This caught my curiosity. There's"
4472800,4480400," also caps. Like, what the fuck are those words mean? Like, what? Is this yours?"
4480400,4487920," This is why I like this language. It's just like, you encounter the goofiest shit in the standard library,"
4487920,4489360," and I absolutely fucking love it."
4489360,4498640," Honestly, like, naming things like that is a pro move, right? So, because it's memorable, and it's usually"
4498640,4504880," straight to the point. It's a very good documentation, right? So, it usually literally does what it says,"
4504880,4510800," right? So, it literally does what it says. So, let me see. So, we're going to go into the allocator mode,"
4510800,4516720," and we're going to go into the modules, right? So, and just, you know, grab all of that stuff."
4517280,4521760," So, I suppose the thing we want to do in here is something like this. So, here's the allocator mode."
4521760,4529840," So, let's see what we have in here. Okay. Yep. This allocator has never been used and is being"
4529840,4536720," started up for the first time. The return value will be allocator data for the first heap."
4538240,4546720," Ah. That is fascinating. Never been used and is being started up for the first time. The return value will"
4546720,4553680," be the allocator data for the first heap. Huh. So, shutdown. The allocator is being shut down and should"
4553680,4561040," clean up everything. After this, no allocator call is legal until a new startup. So, you're basically"
4561040,4567840," allocating the state of the allocator. And there's a bunch of other things like thread start, thread stop,"
4568240,4571920," create heap, destroy heap. Is this yours? Caps."
4571920,4583680," Look, at some point, John started to use just absolutely random words. Like, ""BANANA!"""
4583680,4597520," Why is this so fucking funny? I love it. Like, I'm joking, obviously. I'm actually joking, but"
4597520,4601440," it's just like when you don't know what the fuck all of that means. It's just, it looks like that."
4601440,4614880," So, uh, are you with me, chat?"
4618000,4634800," So, okay. That's pretty cool. Don't say that there is a volatile market. Oh, shit. If you change this,"
4634800,4641920," the bytecode has to change. Oh, yeah. So, that means there's a little bit of a state of the compiler that is"
4641920,4648320," also reflected in the standard library, right? So, okay. So, what's the implication of all these silly"
4648320,4655680," things? That means we have to implement them somehow, but I'm not really sure. So, I suppose"
4655680,4663680," the startup allows you to allocate the allocated data, which we don't use, which we actually don't use."
4663680,4666080," Uh, so."
4666080,4678640," And, uh, yeah. So, I suppose the easiest thing for us to do in here is just to have a default."
4678640,4685600," Uh, is it default? It's just case, right? So, let's just keep it as this, uh, or maybe even something like this."
4685600,4691360," So, I think that that's the easiest thing to do in here, because as of right now, we only use resize and allocate,"
4691360,4696640," uh, which just, yeah, which is like, it's a, it's a bump allocator, essentially, right? So, it's, it's a"
4696640,4701360," little bump allocator. We can, I'm pretty sure we can safely ignore all of these events that happen in there."
4701360,4702800," Um, so."
4702800,4710800," Now that Jai supports Wasm doesn't have an allocator. Not really, I think. Uh, so, because the last time we checked with"
4710800,4718880," infinite Pong and Jai Wasm, the way we did that, um, so I, I think I can open it locally. Infinite."
4718880,4726080," So, prob. Is it prob? Infinite. Yeah. So, here it is. Uh, the way we did all of that, we had to patch up."
4726080,4732880," Yeah. We had to patch up some memory. So, some modules, right? So, we had to define a default allocator."
4732880,4740320," Right. So, we had to define the default allocator and just kind of ignore it and stuff like that."
4741120,4748960," Um, so, yeah. So, like, the easiest thing right now would be to maybe just copy-paste this example"
4748960,4753680," that we did in one of the previous stream, but I want to just follow the compilation errors and see,"
4753680,4758800," maybe it will just work without any of that. Because who knows, right? So, maybe it will just work."
4759440,4768480," Um, so, let's go ahead and do that. So, let's go. Mm-hmm. So, it's still, ah, it has to be complete."
4768480,4770800," Let's not make it complete. So, this."
4776000,4787440," Did it create, hmm. Did it just create, like, a wasm? It probably didn't create a wasm, right?"
4787440,4796000," Yeah. Because we never explicitly said create wasm project. We never did that. Uh, so, it probably just"
4796000,4803280," compiled, um, yeah, it just compiled the thing as it is. Right. So, because what we're doing here,"
4803280,4811280," uh, so, params and stuff like that. So, we generated a dynamic library so we can build all of that stuff."
4812320,4827200," Uh, we can even take a look at that stuff. Yeah. So, it's a, it's a useless giant break wasm executable that"
4827200,4833600," just crashes, right? So, it doesn't have any, like, anything like that. So, we need to probably go and"
4833600,4840480," do a surgery and just use this stuff in a wasm now, right? But I'm already streaming for, like,"
4840480,4845040," one and a half of an hour. So, I think, uh, the time has come for me to make a small break,"
4845040,4850800," make a cup of tea, and, uh, after that we're gonna, you know, fix the wasm support. Sounds good? Sounds"
4850800,4858640," good. Let's go. We're back! So, uh, let's take a look at the actual example that works, right? So,"
4858640,4867760," I think it was in prob infinite pong. So, and if I compile it, it compiles just fine, right? So, and the way"
4867760,4876320," these days in a modern GI you compile WebAssembly, you just say that the target os is wasm. So,"
4876320,4885920," that's basically what you do, right? Um, copy, copy, copy. I still just freaking can't this name of the"
4885920,4895040," function. Uh, so anyways, uh, let's go here and let's find what we do in here, right? So, there's some"
4895040,4901920," parameters, i18, blah blah blah, nothing particularly special. Honestly, I'm not even sure if we need"
4901920,4910560," wasm stab anymore. The only reason why we needed wasm stab is, um, because we were actually compiling"
4910560,4917760," wasm into the final executable. It's, it was a hack. Um, so essentially how it worked. We would compile wasm"
4917760,4925600," to an executable and as a by-product of compilation of that executable, it would emit LLVM instructions"
4925600,4932480," that we grab and then translate them to actual wasm, since Jai doesn't support wasm platform."
4932480,4939200," That's how it works. We compiled the program into, into a real executable that just crashes or whatever."
4939200,4946480," It's just like it's useless. But the by-product of that is what we were looking for. It's such a weird tag."
4946480,4952960," Uh, so, and because, to make this thing compilable, I needed to stab some of the things in the standard"
4952960,4960080," library and I stabbed them in C, I believe. So, we can even take a look at this function. So, yeah, there we go."
4960080,4967360," So, essentially what I stabbed, I think, I stabbed the external functions because otherwise that fake"
4967360,4973520," executable to trigger the side effect of generating LLVM instruction wouldn't simply compile because it"
4973520,4979840," wouldn't find them. So, it would create a library with just like a fake empty ones. Right. So, that's"
4979840,4985520," how it worked. So, but I feel like now we don't even have to do that anymore. Right. So, because in here,"
4985520,4992640," BASM platform, uh, here they all are. Right. So, I just say that they're foreign. They're foreign functions."
4992640,4997920," And, um, I don't even have to go beyond that. So, I can just say that this is what I expect from"
4997920,5006400," JavaScript environment without any fake stuff. Uh, and so, infinite. How did we do that in an infinite one?"
5006400,5015360," So, foreign. Okay. So, I would just say that it's foreign without need to provide any of the libraries."
5015520,5021600," So, that's how I can do that. So, this is actually kind of cool. So, vasom.platform. Um,"
5021600,5027280," right. So, I probably have to go now through all of these things. Uh, so, how many of these things I have?"
5027280,5035280," So, here they are. Here they are. Uh, maybe I can just go ahead and remove this library. Right. So,"
5035280,5041200," this is the library I was looking for. This library is not needed anymore. That's pretty cool."
5041200,5049280," So, now if I try to compile the whole thing. So, it will obviously fail. Uh, and what I have to do now,"
5049280,5055840," I just have to replace this thing with the name of this stuff. I wonder if we can record a macro,"
5055840,5063280," uh, for this kind of stuff. So, let me see. I'm gonna start recording the macro, then I just remove this"
5063280,5072880," thing, put this stuff in here, go here, then go here, insert, and stop recording. So, now if I try"
5072880,5080960," to compile this and I think it now fails in here, which means I can go here. Ah, yeah, it worked."
5080960,5086800," So, I recorded a macro that starting from foreign, it actually takes the name from here and puts it in a"
5086800,5092720," string later on. Isn't that focused? I think that's pretty focused. So, stay in here. Boom."
5092720,5101440," Can your Veeam do that? It actually can. I know. I, I did that in Veeam in the past. Right. So, honestly,"
5101440,5108480," like any self-respecting compiler, uh, any self-expecting compiler, uh, should be able to record macros."
5108480,5114400," This is just my personal opinion. Right. If you're, uh, not compiler, but text editor. If your text editor"
5114400,5119920," can't do that, it's useless for programming. Straight up. Like, I'm sorry. Like, if you can't record"
5119920,5130000," macros, your text editor is not a programmer's text editor. So, sorry for telling that, but it is what it"
5130000,5141200," is. Uh, so now, if I just do that. Right. Another one. Maybe I should have recorded it somewhere here,"
5141200,5147200," honestly. Because the compiler, the compilation mode points at here. So, it kind of makes sense for me to,"
5147200,5157280," ooh, yeah, I'm gonna just do that. Replace it with that. Then I'm gonna go backward. Eh. Okay."
5157280,5165120," So, let's just go back. I think I need a new macro in here. Uh, starting the macro, replacing this thing with"
5165120,5173120," that. Uh, then, uh, going backwards and searching for this thing. Uh, all right. So, then finding this"
5173120,5178960," thing, going forward, searching for this thing, and inserting it here. So, that way, the macro spans"
5178960,5186400," across two lines. So, it can span across two lines. All right. That's pretty cool. Uh, and now, I can try to do"
5186400,5194800," that one more time. And it worked. All right. So, that seems to be working. That's pretty cool. So, uh,"
5194800,5202320," yep. So, it was trying to, yeah, it can't, cannot find any of these names anymore. But it compiled."
5202320,5209360," It didn't link, but it compiled. That's already progress, honestly. This is insane progress so far."
5209840,5217040," Uh, right. So, let's freaking go. Jai mangling, mangling, by the way. Right. Instead of mangling the"
5217040,5223120," names, it actually adds this suffix, which I believe is kind of random every time. Is it? Yeah, it is"
5223120,5229920," random every time. Right. It's kind of bizarre. But all these things are external functions anyway,"
5229920,5234880," so it doesn't really matter. Well, internal, I mean. Yeah, they are kind of internal functions."
5235600,5242160," Um, so because of, well, I mean, they're external, if you think about that. Hmm. But anyway, um,"
5242160,5248480," ah, yeah, they are internal. They are, in fact, internal is just, they're going to,"
5248480,5251760," uh, to external wrapper that doesn't have this suffix."
5256880,5266960," So, mangle these nuts. Okay. Um, like me every time I try to read the chats."
5266960,5273760," Uh, maybe not be random directly, but more due to Jai, uh, compiling each function asynchronously."
5273760,5275200," Yeah, probably."
5275200,5283440," But you need to, to have these suffixes, uh, because, um, yeah, for the same reason you need"
5283440,5288320," mangling in C++. Right. So, because you need to have function overloading, there's also generic stuff"
5288320,5293280," and everything. Right. So, we don't need this stuff anymore. So, that means I can just straight"
5293280,5298080," up remove all of these things. So, uh, SRC and yeah."
5298080,5310480," And now let's go here. Yep. So, now what we can do, we can go to the first and start copy-pasting"
5310480,5317920," some of the options in here. So, in here we start in the build options. So, it's that. Uh, I suppose"
5317920,5323920," another thing we have to do, we need to copy, uh, the common options. So, copy commonly propagated fields."
5323920,5333360," Um, and now in here, I'll put type backend. I might as well, honestly, just copy-paste this entire thing."
5333360,5339360," Right. So, and then it sets, uh, some of the options, but I'm not really sure if I want to go beyond that."
5339360,5343920," I'm not sure if I want to patch some of the modules. I feel like I don't care because again,"
5343920,5349920," I don't use the allocators or anything like that. I feel like just doing that should be enough. Um, all"
5349920,5358800," right. So, something like that. Uh, and then we just set in all of this stuff. I can quickly replace"
5358800,5367840," the word options. I don't really like that, but something like that with B-O. So, it's going to be"
5367840,5377280," executable, LLVM, WASM, uh, CPO target custom, dwarf, backtrace and crash. Don't do that. Output path."
5377280,5384640," Uh, so I think we keep all of the WASMs in here. Right. So, this is where, by the way, I just realized that I"
5384640,5391040," supposed to put an executable into a third party and not WASM. Yeah. Just a second. Yeah. That makes"
5391040,5400160," sense. That makes more sense now. Um, okay. So, this is WASM. We output to WASM. The output WASM is going to"
5400160,5406320," be main. Maybe it's going to be main 64 actually. I want to call it 64. Uh, enable split modules. Don't"
5406320,5412720," split anything, functions, sections, blah, blah, blah. Doesn't matter. And we finish everything in"
5412720,5420000," here. Okay. That's pretty cool. And then we just add in the compilation. And in here, yeah, we remap"
5420000,5426080," the input. We don't need to do that. So, there is another additional linker option that I believe we"
5426080,5432160," probably need. Uh, so these are import paths. You need import paths so you have an access to the module"
5432160,5436560," folder and you need a module folder because you're remapping allocator. We don't do that as well. So,"
5436560,5442160," we don't need that. But one option we need, I believe, is linker option. Uh, so, which I would"
5442160,5449360," like to maybe put in here. Right. So, something like this. Um, yeah. And that's about it. And that's about it."
5449360,5454320," Okay. Did I miss anything? I think, I think that's it."
5455760,5463120," And now I should be able to just try to build the whole thing. Cool. That's perfect. That's insane."
5463120,5473520," That's very, okay. You need to do a fuckery with allocator. You need to do a fucky-wucky with allocator."
5473520,5481200," All right. All right. All right. Even though, like, we're using our own allocator,"
5481200,5483760," but the way we're using our own allocator is actually kind of weird."
5483760,5492800," Why exactly do we need our own allocator? Where are we using our own allocator? So, heap base."
5492800,5500640," Ah, yeah. So, it's literally just our internal allocator, which is completely separate from the"
5500640,5506720," standard library one. That is fascinating, honestly. Right. So, we've completely bypassed the standard"
5506720,5511520," library. And within our own application, we just implemented a thing that allocates memory"
5511520,5516000," starting from the heap base or stuff like that. So, that's basically what we did. But at the same"
5516000,5522560," time, we also implemented, like, a heap base alloc. Um, so, which is kind of bizarre. I don't think,"
5522560,5527200," I think the standard library needed that. No, that means we didn't bypass anything."
5528160,5535600," Um, that means we didn't bypass anything. Huh. So, an interesting question. Why in the,"
5535600,5542000," in the SRT? Is that why we needed SRT?"
5542000,5550160," Yeah. So, that's why we needed SRT. All right. All right. Let's, let's just go and implement our own"
5550160,5555200," custom allocator. I feel like we need that. Right. So, I feel like we do need that. And so, essentially,"
5555200,5562960," what we can do, we can copy-paste this module with, uh, your mama Keita. Right. And here it is. Here is"
5562960,5567520," the mod. So, we can actually put the allocator procedure there. Yeah. We can just put the allocator"
5567520,5573040," procedure there and this is going to be fine. Yo. All right. So, I think, I think everything is coming"
5573040,5578240," along nicely. I really like that. Uh, let's copy-paste this recursively. So, this is your mama Keita."
5579040,5588000," Um, right. So, this is the modules. And in here, in SRC, uh, wasn't platform, wasn't platform. I'm"
5588000,5595680," going to just copy-paste the whole thing in here. Right. So, that's what it is. Uh-huh. Uh, so, set heap base."
5595680,5603920," So, and we'll need all of this stuff as well at some point though. I'm not really sure. So, we also can set the context."
5604960,5614160," Ah. Oh, this is based. So, this function is called from JavaScript. So, that means you can set whatever context you want."
5614160,5622720," Um, yeah. That's actually kind of cool. So, do I even use that anywhere? Um, so, let me see. Let me see. So, there's a"
5622720,5630480," JavaScript, uh, set context. Right. So, here's the context and I just pass that context. Right. So, and then I call function"
5630480,5635920," main. But I never, I feel like I never set context to anything. Right. So, I don't think I do."
5635920,5640240," Yeah. So, it's not needed. Um,"
5640240,5646320," All right. All right. All right. All right. So, we'll get some subs, by the way. I haven't acknowledged subs."
5646320,5650640," Uh, so, sender prime. Thank you so much for Twitch prime execution. Thank you. Not sender. Sano."
5651280,5662640," Um, all right. Cool. Cool, cool, cool, cool. Uh, so, we need to, we need to bypass the module stuff."
5662640,5670400," That's what we need to do. So, to bypass the module stuff, we need to do that thing. Um, yeah."
5672160,5681200," Import paths. Uh, we add the modules thing to the import path. That's understandable. And for all of the"
5681200,5687760," options. So, it's bo. We add import paths. Okay. That's a really weird way to do that. But I mean,"
5687760,5689840," okay, I guess that's fine. Um,"
5693360,5701760," So, for that, we just append, um, um, so, we take all of that. I feel like, like, can we just directly"
5701760,5710960," append these things to there? But anyway. Um, okay. So, then we set the build options. Then we remap"
5710960,5717840," default allocator to mamacator. All right. So, after we set the build options. And then we're starting"
5717840,5721840," adding the source code for the compilation. Right. So, that's what we're doing."
5722560,5730240," Uh, wasm, uh, platform. Uh, coding butter. Thank you so much for giving out 25 community gifted subs."
5730240,5734960," Uh, well, I mean, I already, maybe you already know that. Maybe I already said that. Don't waste"
5734960,5741360," your money too much because you don't get any money from the subs. Uh, so, none of that goes to me."
5741360,5745280," Right. So, because of the sanction and stuff like that. So, all that goes to Jeffrey Bezos."
5745280,5752400," But, I mean, gifting sub is actually kind of good because it, uh, gives other people"
5752400,5756720," access to the discord because I still use subs as a means of moderation. So, thank you anyway."
5756720,5762800," And, uh, everyone who got the sub, thank Coding Butter. Um, so, yeah. It's sort of like a moderation"
5762800,5766720," mechanism for me. Don't get any money, but it's useful for moderation. Um,"
5771120,5789760," Jeffrey Bezos, Jeffery, Jeffery Bezos. All right. So, we have one here. So, size. Uh, I suppose."
5791680,5799600," Oh, requested. Okay. So, he renamed the size to requested size. Okay. So, this is a requested"
5799600,5810720," site now. Uh, assert. We don't have assert. Excuse me. Uh, do you have assert? Do you have assert? Uh,"
5810720,5818800," All right. So, what do we have? I think I have to go to SSC WASM. Um, it's not available anywhere. Huh."
5818800,5824960," So, one of the things we can do, maybe, is just, let's, you know, comment it out."
5824960,5833200," Um, heap base. Okay. So, it can't see the heap base from here, even though it kind of exists"
5833200,5840000," in the WASM platform. Right. So, I suppose what we have to do, we have to move that heap base"
5840000,5847600," to the allocator. Right. Ooh. And this is actually kind of funny. This is actually kind of funny."
5847600,5856000," Jai does not allow you to define your own heap base. The only way you can get the heap base is from"
5857360,5864720," outside. So, the way we work right now, we set heap base. Yeah. We find the heap base"
5864720,5872240," uh, in the module, in the WASM module. Right. We directly take it and we tell the WASM module,"
5872240,5879120," the Jai program, this is your heap base. Right. Because Jai itself cannot, could not in the past"
5879120,5886080," provide heap base. Maybe it can now, but I kind of doubt that. Right. I kind of really doubt that. So,"
5886080,5891680," yeah, it's only JavaScript can tell it where its heap base is located, which is a fine solution,"
5891680,5897840," I suppose. It's, it's fine. All right. So, what do we have in here? So, assertion, uh, yeah. It's talking"
5897840,5904240," about... So, this, I suppose this code is not needed anymore. Right. So, we literally moved it into your"
5904240,5910080," mama cater. Right. So, that's the your mama cater. And I think this comment should be here. Uh,"
5910720,5922640," right. And let me get rid of all of that. Okay. Uh, heap base a lock. Aha. So, I suppose we probably don't"
5922640,5932960," even need to do that. Oh, we were, we were setting... Honestly, probably now, since we don't have malloc or"
5932960,5941280," anything like that. How are we going to be doing all that? That's, that's very interesting. Um, since..."
5941280,5951120," So, you have to be careful with the context and shit. I feel like I need to go into the Wasm example,"
5951120,5959920," official Jai Wasm example. Just see how they do that there. Right. Uh, did you look at the examples? Wasm is now"
5959920,5966560," available? Yeah, I saw that. We literally used it in one of the previous, uh, sessions. So, Wasm, uh, and I'm"
5966560,5976320," about to actually look into that. So, yeah. Uh, so this is the first and, um, yeah. So, the question is,"
5976320,5983440," how do you create, uh, so here's the module and this is Wallocator. Um, mm-hmm."
5986880,5994960," Do we even need context in this regard? Like, is the context even useful for anything? Um, context."
5994960,6006800," Where is the JavaScript context? Maybe context is not a thing anymore. Yeah. Maybe context is not a thing"
6006800,6016400," anymore. So, let's not do that then, right? So, let's not set the context for our example. Uh, and in our"
6016400,6024400," example, Wasm platform, uh, let's completely get rid of that. So, no set context, no set allocator,"
6024400,6031040," no any of that stuff. Just init. Just initialize this thing. Uh, and within the game, right? So,"
6031040,6035840," I think the function init, do we have? Yeah. So, here's the init function. So, we allocate targets."
6035840,6040800," So, there's a little bit of allocation. Uh, and the allocation is basically..."
6042080,6046640," I don't see, I don't see, I don't see where we do... Yeah. So, we're doing dynamic allocation with array"
6046640,6055200," add. So, that's one kind of dynamic allocation we're doing. Um, mm-hmm. So,"
6055200,6066240," now, uh, we need to... Okay. So, this is a heap base. This is a requested size. All right. And it compiled."
6066240,6071600," Right. So, and it's produced main64.wasm."
6071600,6084080," It just compiled. Uh, so, Elevium blows the wasm by a lot. I figured it out when trying to learn wasm."
6084080,6090560," I also figured out if you do wasm to what? Then, what to wasm? You can get rid of all the Elevium bloat."
6090560,6098400," I wrote up a small PR to your coil repository to show the result. Uh, thank you. I'll look at that at"
6098400,6103600," some point when I get the time. Um, so, yeah. I kind of know that. Uh, we can take a look at,"
6103600,6113040," like, how much it bloated it up. Uh, it's not that much. Right. So, and it's also 64 beats. Um, um, yeah."
6113040,6120000," So, let's do LDD. It's another dynamic executable file. Right. So, it's wasm. Let's do wasm to what?"
6120000,6130800," Wasm to what? Wasm to what? Wasm to what? And so, this is going to be what? Ah, yeah. So, I think it's enable"
6131680,6148080," memory 64. Um, oh, unexpected opcode. Fascinating. Did it just generate an invalid? Um, fascinating,"
6148080,6157280," fascinating, fascinating, fascinating. So, let's maybe try to, I don't know, load it up. Uh, so we have,"
6157280,6167440," we already have, like, main 32. Let's put 64 in here. Right. Um, 711 kilobytes still fits on a floppy."
6167440,6178880," Exactly. Speaking of bloat. Right. Uh, okay. So, let's do Python 3, uh, HTTP server 6969."
6179760,6188960," And open it in Firefox. Well, that's not what I want. Yeah. Cache. Freaking cache."
6188960,6193920," Keep a base is undefined. Very cool. Very based."
6193920,6204640," So, uh, yep. That means it was not generated or exported or anything like that."
6205600,6211760," So, we need to find a flag that would actually do that. So, we already have something like this."
6211760,6219360," Maybe we have to also say, uh, export, uh, heap base. I wonder if that's a flag that is available in here."
6219360,6224720," So, let's go ahead and just try to recompile, uh, with Jai."
6226080,6234080," a non-flag export heap base. So, I feel like we did something about heap base in here,"
6234080,6243360," in the compiler script. So, if you take a look at the first, uh, export all. Yeah. So,"
6245920,6255440," no entry export all allow and defined. Does anybody remember the flag that would export heap base?"
6255440,6260480," Or generate some sort of a heap base or anything like that?"
6260480,6268720," So, because I do not quite remember. All right. We can try to say export all. And maybe that's a good idea."
6270320,6275680," What does Jailbreak do? It's a Jai break without the L. And it's a game. Believe it or not."
6275680,6283200," GitHub.io Jai break. It's a web game. It's just a breakout. Right."
6283200,6286880," So, it looks like it's written in Jai, by the way."
6286880,6291760," So, but it's written in old Jai."
6294080,6297120," So, what we're doing, we're trying to port it to modern one."
6297120,6305120," It's actually pretty fun. It's really satisfying. The, uh, the animations are pretty cool."
6305120,6307760," And also particles and stuff like that."
6307760,6311760," That's a game."
6311760,6318640," Uh, there's an old and modern Jai. Jai is in beta and it's constantly changing in a backward incompatible"
6318640,6325920," way. Because that's kind of the point of it being beta. Right. Uh, so, I haven't updated my source code"
6325920,6331440," for three years. And throughout these three years, Jai was constantly changing and modifying and stuff"
6331440,6337120," like that. So, and if you don't update it, right, your code rots. But again, this is because the"
6337120,6341280," language is not out yet. So, the developers can allow themselves to do this kind of changes."
6343280,6347120," Are you updating the code base? I already kind of updated it. We're already there."
6347120,6352800," So, yeah. I'm updating it. Um, okay. So, now if I try to..."
6352800,6357520," Yeah. So, Jai wasm... Is that a local one?"
6357520,6366160," So, let's take a look. Uh, okay. So, set heap is not a function. So, set heap base is not a function."
6366160,6373920," Even though, apparently, it found the, um, uh, the executor. So, it actually loaded it, didn't it?"
6373920,6378320," So, it didn't complain about 64 bits or anything like that. It just, like, loaded it. What the"
6378320,6389040," fuck? Um, okay. Anyway, um, let me take a look at, um, this thing. Set heap... Did I remove set heap base?"
6389040,6395200," I should have not done that because, apparently, JavaScript uses it. So, set heap base and then"
6395200,6399680," it just, like, sets. Yeah. I feel like I should have not removed it. Um, one other thing I want to do,"
6399680,6406320," by the way, I want to console.log the, um, the wasm module. I just want to take a look at it. Uh-huh."
6406320,6413200," Wait. It's just a response. But where is the wasm module itself? Are you, are you insane? Um,"
6414320,6430560," So, can you just give me instance, uh, draw? Ah, I see. So, file not found. Ah, okay. So, 64. Yeah,"
6430560,6435920," this is what we have to do. Yeah, there we go. Set heap base is not available. Uh, I just want to see"
6437120,6444240," all of the experts that you have in here. Do you have... There you go. There you go. Heap base."
6444240,6452720," Look at that. It's a bunch of procedures and shit. Uh-huh. So, and there's no set heap base. Um,"
6452720,6460400," that's kind of bizarre, but yeah. I wonder why. Um, I wonder why there's no set heap base. Probably because"
6460400,6470080," we don't have to do this weird... Chat. Holy fuck. Remember the weird-ass suffixes Jai was generating?"
6470080,6475680," Well, I mean, they're not weird-ass, but they're needed. Before Jai supported wasm,"
6475680,6483040," Jai didn't give a shit whether you can use these prefixes or not. So, what I had to do in JavaScript,"
6483040,6489840," I literally had to search these functions by regular expressions that ignore these suffixes."
6489840,6501280," This is what I had to do. This... This is... Yeah. So, I mean, Jai literally didn't support that. It"
6501280,6509680," didn't do that. So, I had no choice. Um, so, and now it's not needed. Um, can you declare a heap base as an"
6509680,6516400," external Jai itself? Maybe. I just need to check. But I already made it working. Uh, so... I don't know."
6516400,6522080," Look, here's the thing. I can't define it, but there is no guarantee that it's going to be at"
6522080,6528400," the address of the heap base. Because I remember some of the languages that use LLVM didn't respect"
6528400,6533680," underscore underscore heap base being in the right place. So, that particular variable,"
6533680,6538960," the address of that particular variable would become useless. So, I feel like the compiler itself has to do"
6538960,6544800," support. And I just can't rely on Jai having that support, uh, knowing John and how much he cares"
6544800,6552240," about WASM. So, and I will just waste time checking that. So, I just don't want to even go into that"
6552240,6559440," route, right? So, this is more reliable route. Uh, so, let's just let LLVM generate that name, uh, and just,"
6559440,6564720," like, put it back. So, it's just more reliable. It feels more reliable, if you know what I mean. Um,"
6565520,6572800," So, yeah. One of the things we can do, that's the easiest solution. At least I don't have to modify"
6572800,6581040," too many places. Well, yeah. I mean, I don't have to modify anything at all. So, I can just, yeah. So,"
6582000,6592400," let's go ahead and maybe remove the whole thing. And maybe use a little bit of Emacs magic. Emacs magic."
6592400,6599840," Like this. Because I'm sure I can just do it like that, right? So, for external function,"
6599840,6606320," it's not going to, uh, like, generate any of these prefixes. So, it should be fine. Uh, okay. Kind of worked,"
6606320,6618800," but doesn't generate anything. Uh, surprised me. Um, so, set. Oh, okay. Still didn't do anything. Hmm."
6618800,6626960," Set heap base is not a function. Is that because I removed it? I think this is because I removed it."
6628640,6636560," Uh, set. Or maybe, uh, so, it should be available in allocators. Yeah."
6636560,6647360," Why is it not available? You have to probably mark it in a certain way. Uh, so, if I take a look at the"
6647360,6657360," wasn't platform, I probably have to mark it as foreign, um, as foreign, set heap base."
6657360,6662560," This is probably what I have to do. Yep. Yep. Yep. Yep. Yep."
6662560,6669120," Uh, remove that. Huh."
6671440,6674480," Are you sure? Are you sure? Are you sure, my friend? It still doesn't work."
6674480,6681680," Huh. Uh, let's open it in Chromium. I don't fucking know. Um, fuck you, Firefox."
6681680,6690080," Uh, so, console. Yeah. So, it's the same shit, but in Chromium, it's a little bit easier to search"
6690080,6697760," for this stuff. Set heap. It still didn't export that. It still didn't export that function. So,"
6697760,6701040," there's maybe update. Huh."
6701040,6712160," Okay. No, it didn't generate a proper prefix. It still uses this weird-ass prefixes."
6712160,6723520," And it didn't generate the... I'm confused. Uh, am I looking at the right source code, even?"
6724640,6732640," So, what we're doing? So, main... Yeah, main64 wasn't. Cache? Well, I mean, probably not. Right. So,"
6732640,6739760," disable cache. The cache is disabled. I don't think I got webdeft this time. That's just something else."
6739760,6748400," Uh, foreign is probably for imported functions. Oh, yeah, probably. How do you export functions? Um, I don't"
6748400,6755360," remember. So, probe, infinite, and when I'm exporting something, what do I do?"
6755360,6759760," How do I export it? I just do main, right?"
6759760,6766320," Uh, and then in the JavaScript runtime, how do I call main?"
6766320,6772160," I just call main. Wait, do I have to export these things explicitly?"
6775760,6784800," How does it just work? Right, because in main here, I never said anything about main being exported or"
6784800,6793600," anything like that. And then in JavaScript in here, I just call main. Wait, why does it work?"
6795040,6806400," It exports everything, I guess. Uh-huh. So, we export table. And when we said what kind of functions we export in here?"
6806400,6817760," Remap import default. I'm confused, honestly. Like, it does something, and I can't figure out what exactly"
6818560,6828320," it does. Um, yeah. So, let's go back. So, it's sorting, uh, it's not Wabbit. What is it called? Jibri."
6828320,6836880," So, we also don't need that. I might as well just remove that."
6838880,6848320," Um, module. So, yeah. Let's remove this thing."
6848320,6857040," I need to compare. You're not using flag export. I thought I do use."
6861200,6872240," So, here is the export all. And, yeah. Program export. So, I just need to find what exactly am"
6872240,6879520," I doing in my infinite, uh, infinite pong example that I don't do in here. Uh, so, let me go to"
6879520,6888160," shell. Because, obviously, here everything just worked. Right? So, everything just worked."
6889360,6897040," You cannot mix big int. Use explicit conversion. Uh, so, I need to do chrome flags. Um,"
6897040,6900080," and WebAssembly 64 is enabled. What the fuck?"
6900080,6906160," Uh, so, update frame. Um."
6906160,6915760," Function table. Get."
6917760,6926480," Uh-huh. Uh-huh. So, here, we were just, oh, okay. In my example, we were just setting function"
6926480,6932560," externally. So, that's why we never need to know. Okay, we can kind of do this similar trick in here"
6932560,6941760," as well. Right? So, because here, in this example, what we essentially did, um, we, in the main, would set"
6941760,6950480," update frame through this thing. Right? So, we would just tell the, um, the JavaScript runtime."
6950480,6955840," So, here, it's called these functions. And, because of that, we never had to deal with this, uh, you know,"
6955840,6962800," suffixes and stuff like that. Uh, so, with suffixes and stuff like that. But then, main was exported."
6962800,6967280," So, I suppose, main is one of the functions that is always exported. And, you don't have to think"
6967280,6972480," about it too much. So, I can take a look at the input and exports. And, if I, all right, why did you"
6972480,6979840," close that? Main. Okay. Main doesn't have any suffixes. So, it's sort of an exception. Okay. Now,"
6979840,6985200," I am confused myself. Right? Because I was kind of confused. Like, how my previous example worked"
6985200,6990960," if it still generates the suffixes? This is because I never really called to them directly. Right? So,"
6990960,6997200," I would just, uh, tell JavaScript the name of my function or the pointer to my function, uh, through"
6997200,7001600," jai. Which is something, which is a good way to do that, by the way. So, this is something that I should"
7001600,7009360," do in jai break as well. Right? So, but it requires changing and some stuff. Uh, so, the real question is,"
7009360,7016400," why the fuck it didn't generate set heap, uh, set heap base? Right? Why it didn't generate that?"
7016400,7024640," So, now, let's try to find out. By the way, that means that in the JavaScript part, I still need this"
7024640,7030880," function. Right? I still need find name by, uh, by rejects and stuff like that. So, let me quickly do that."
7030880,7037280," Right? So, we're gonna do that. And, um, I suppose we're also going to get rid of that. So, this kind of"
7037280,7043840," stuff is still needed. So, it generates key press, key release, and stuff like that. But that heap base,"
7043840,7048560," it kind of doesn't do anything with it, which is a shame. I hope it didn't optimize it out. Right?"
7048560,7056320," I really hope it didn't. Uh, so, now, I'm gonna go to async, where I run this entire stuff. Okay."
7056320,7064960," And in here, I'm going to just do that. And I'm gonna run the server in here. Uh,"
7066400,7071920," Okay. So, there's no public in here. That's understandable. Yeah. It still didn't find set heap base."
7071920,7077600," Even though, there are some functions like"
7077600,7085600," key press, which does exist, I'm sure. Key press. Here they are. Key press."
7085600,7092480," So, it does, in fact, exist. Uh, key release and everything. But set heap base does not exist."
7093040,7102960," And we can go to wasm platform. Uh, so, key press. Where is the key press? I don't see key press."
7102960,7112640," So, it's not here. It's actually here. Uh-huh. So, it's kind of a, it's in the game, right? It is in a game."
7113760,7123920," Uh, but the set heap base is in the module. And it got sort of optimized out. So, that's what it feels like."
7128560,7133600," What's up with that? Why this entire thing got optimized out?"
7133600,7137200," I'm actually not sure."
7140160,7145840," But what's funny is that maybe, maybe I should keep it"
7145840,7152960," in the wasm module, wasm platform, somewhere here."
7155280,7163280," Right. And yumamaketa is going to be an empty, an empty module. Let's actually move this entire"
7163280,7171040," stuff in here. Yeah. Let's move this stuff in here. Okay. So, I'm going to try to rebuild the whole thing."
7171040,7178080," Yeah. So, it import. It doesn't like that. All right. So, allocated proc is not a member of"
7178720,7184800," import yumamaketa. It has to be, oh my god, it has to be part of the module. Bro, this is kind of,"
7184800,7187280," this is annoying. Like, why does it have to be?"
7187280,7200720," Ugh. Okay. So, it basically strips away that little function from here. It doesn't have this function."
7200720,7206960," Uh, it's, yeah. So, maybe it's not included because it's in a separate module."
7206960,7210080," But I can't put it in a separate module because the allocator needs it."
7210080,7225280," Anyways. Um, why can't it be available? So, is there a way to disable? Ah, who said that it's due to"
7225280,7235520," optimizations? You're making too many assumptions, my friend. Uh, so, uh, okay. All right. So, what do we"
7235520,7249200," have in here? Uh-huh. So, yeah. That's absolutely bizarre. This should not be like that. I need to be able"
7249200,7255840," to say, uh, okay. Oh, the, oh, wait, wait, wait. There's also this star thingy. I'm not sure what's up with that."
7257120,7273440," um so set heap base um you know what you know what you know what you know what"
7286240,7300240," what if i return hitbase okay"
7300240,7312480," no like medium"
7315200,7317200," yeah maybe um"
7317200,7330400," maybe spirit man is right what if we just give it a try and say that we have a heap base which is like"
7330400,7336720," external function which is something right usually it's just an integer right but it's also for a name"
7337520,7343760," right it is also for a name which is a heap base right can it do something like that in giant can"
7343760,7352560," it do something like that in giant uh so this is a heap size and when i refer to heap base in how many"
7352560,7357760," places do you refer to heap base i have to actually do something like this right um"
7357760,7367120," clues is just cool yeah exactly just call ma bro like why are you messing with your own allocators"
7367120,7375680," right more smarter people than you already figured it out just call malloc bro it's a solved problem"
7378080,7388240," freaking classic anyways so uh here's int and we parse the declaration so we ah okay so do i have to"
7388240,7392240," put it like that invalid top top"
7393520,7397920," why can't you have like a top level external variables and shit"
7397920,7405280," that's a good question just call new the garbage collector knows better than you exactly exactly"
7408880,7422800," you know what you know we're gonna have a get heap base get heap base uh so um yeah so we're going to"
7422800,7429840," return star white was it was it yeah it was a star void and it's going to be a foreign function which is"
7429840,7436560," like literally get heap base that's it and in here instead of setting it we're gonna we're gonna be taking it"
7437760,7438080," well"
7438080,7442240," okay"
7442240,7448000," okay set heap base is no function that's understandable"
7448000,7457680," now i can just return remove that so set heap base fork that we need to save this value"
7457680,7464400," where do we have the environment show me the environment okay so this is the environment and in"
7464400,7469680," that environment do we have an access to w we should have yeah we do have an access to the w"
7469680,7474400," so that means i can do get heap base"
7477760,7489760," sorry please please please please please please"
7489760,7493920," mm-hmm 141"
7496160,7500720," uh-huh"
7500720,7501600," cook text"
7501600,7507600," uh-huh"
7507600,7514480," so let's say that the cook text is going to be"
7516880,7529840," maybe something like yeah zero n"
7529840,7537040," almost almost there so"
7539120,7542560," holy shit yo what the fuck"
7542560,7550400," so but this is with 64-bit support enabled so it it does a null point exception so where this is"
7550400,7556800," because there's no context in there uh that's understandable uh but uh let me take a look at"
7556800,7560240," that even mother flipping firefox works like what the"
7560240,7569360," bro and this is 64-bit so do browsers just support 64-bits like out of the box now is that a thing"
7571600,7582160," um so about config i think uh except the risk and 64 memory uh 64"
7582160,7588320," oh okay so and it's a default one look at that it's it enabled by default"
7588320,7592160," 64-bit available for everyone already"
7593680,7597760," for free so is it we don't have to worry we don't need the wasm64 to 32"
7597760,7603520," i can delete that ripple still not widely adapted yeah that's kind of the problem"
7603520,7607680," uh but even if they enable it for everyone um"
7607680,7613360," i feel like there's there will be still a lot of wasm32 binaries"
7613360,7620800," and things that only can compile to other them i don't know what i mean i don't know where i'm going"
7620800,7630480," with all that but yeah newest version so it fails at null let's take a look at the um stack trace so"
7630480,7634320," score text we try we try to display text um right"
7634320,7647280," score text okay so and it tried to do a little bit of a temporary allocation uh tl okay so it tried to"
7647280,7650880," allocate like a buffer uh for that specific thing"
7650880,7658320," so funnily enough it didn't have enough for temporary allocation apparently"
7658320,7670560," do i have to map temporary allocator as well do i even need temporary allocator honestly so 64"
7671600,7679200," why can't i just have uh that bro why the are you allocating this buffer here are you okay"
7679200,7693600," um so then we do a score label okay so here's the score label uh and we copy uh and can i"
7696080,7698240," yeah"
7698240,7701040," i mean"
7701040,7712720," zozin three years before three years in the past was afraid of stacks apparently"
7712720,7722000," zozin why are you afraid of stacks just allocate it's just 64 bytes zozin"
7723200,7727040," why why why did i write it like that for for for testing reasons maybe for testing reasons i don't"
7727040,7733360," fucking know it's gonna be there you know what they say you know what they say when you look at your"
7733360,7735680," old code and cringe that means you're improving"
7738080,7744880," fuck yeah anyways that's that's everything i have to say um all right cringe sodding"
7744880,7747920," and it just works"
7747920,7755440," this is this is one fix just don't use temporary allocator"
7756480,7759760," bro bro it works what the fuck fuck you"
7759760,7770640," it just works like that's it this is 64 beats by the way"
7770640,7775120," holy"
7780400,7786000," that's a win that's a win that we just won guys we just won so we ported it to the latest gi"
7786000,7791600," and we reproduced the executable it doesn't we didn't even need 64 to 32 but i mean this is"
7791600,7796400," because we're using latest browsers right so all that is supporting let's take a look at the uh"
7796400,7800720," five five five looks works all right so that seems to be cool"
7800720,7813440," so yeah that's absolutely poggers i believe that is absolutely poggers"
7816000,7824960," um we can test that we actually can reproduce the wasm executable uh so we go to the wasm platform"
7824960,7833120," and let's find score uh actually game right let's find score uh huh so where is the where is the score"
7833120,7841840," label i don't see it uh score render score okay so where is the render score"
7846000,7849360," so prepare text text"
7849360,7851920," all right"
7851920,7860400," am i even using the right thing because i feel like something is"
7860400,7862480," sus"
7862480,7866880," uh so something is sus"
7872480,7877680," uh i yeah okay i forgot that we have internationalization"
7877680,7884000," i completely forgot about that oh where do we have that okay so here it is so we have a bunch of"
7884000,7890720," languages uh yeah so i forgot you can even switch the languages how do you switch the languages does"
7890720,7895200," anybody remember like i haven't worked with this code base for quite some time so it's probably when"
7895200,7901040," you press the key uh it's p okay so let's switch the languages oh okay so now we have russian"
7901760,7907520," uh uh now we have ukrainian so that's actually very cool uh so"
7907520,7915280," uh i don't know which one is that uh so what language is that so let me see"
7915280,7919520," um it is probably"
7919520,7927520," so after russian ukrainian hungarian spanish it's probably galician so then we even have"
7928320,7930640," uh i think we even have a bit of russian yeah"
7930640,7933680," quite a lot of languages"
7933680,7939920," japanese uh as far as i know it's far c but it's in the wrong"
7939920,7948080," direction so and we had a little bit of work of doing right to left languages i think so how do i switch"
7948080,7957120," the direction um i don't remember i think it's switch to a stage state uh yeah it's l"
7957120,7963680," yeah you can actually put it on the right side right specifically for far c languages like i mean for"
7963680,7971280," right to left languages and what's funny is that it actually adapts so we have this animation when the"
7971840,7978640," life uh basically moves into the bar so if you have right to laugh into life in the face it also supports"
7978640,7978880," that"
7978880,7984240," uh i'm sorry if it's badly rendered right"
7985680,7993440," so i really apologize if it's it's an unsolved computer science problem i just did it in the most"
7993440,8000240," naive way and it's probably horrible so i really apologize for that uh i tried my best so yeah"
8000240,8003120," so pull requests are open right so"
8006960,8009920," does it invert controls to not really i don't think it inverts them"
8009920,8015760," but i really like this little touch that this thing actually also works"
8015760,8021840," now it's a different direction okay"
8021840,8028000," what i wanted to change i wanted to change something within i"
8028000,8036480," this one and in english score let's go to score and let's put testing here"
8037120,8042960," right just to see if it's going to to be fair i think we're i think we're loading them dynamically"
8042960,8050960," don't we or do we load them i think we have some sort of a we have some sort of a meta program"
8050960,8054080," damn bro"
8054080,8060160," i think we have some sort of a meta program"
8061360,8068400," so there's a length and do we have run anywhere where do we have run yeah"
8068400,8071680," so type in for"
8071680,8074400," length and for each name"
8074400,8078720," yeah so we can kind of pre-generate stuff for this stuff"
8078720,8084640," but then when it comes to configs how do we load configs i don't remember do we bake the configs or do we do"
8084640,8085360," something else"
8085360,8091360," so there's a lang how do we use lang so it's probably used somewhere later"
8091360,8096400," yeah so there's these tables where do we generate those tables"
8096400,8101440," we can try to grab this entire thing"
8101440,8103120," and"
8110080,8114160," this is what you can do in ji by the way so and it's not even an external tool"
8114160,8118800," right so it's generated from within the build script from within the build script i generate"
8118800,8126480," this text like a ji text and i embed the contents of this configs so it's baked into the wasm executable"
8126480,8130080," so it doesn't load it dynamically or anything like that it takes all of these configs"
8130800,8134160," in uh internationalization and just bakes them into the executable"
8134160,8137840," uh right so which is kind of cool i think"
8137840,8142320," very cool"
8142320,8151280," uh so yeah and if i try to rebuild the entire stuff right if i try to rebuild this entire stuff and go"
8151280,8156400," to localhost 69 as you can see here is the test so it seems to be working it seems to be working"
8157600,8165680," so yeah we did the chat so we ported this old uh code base to the newer jai and it wasn't that hard"
8165680,8171200," honestly right so because the compiler itself doesn't try to obscure too much from you it's pretty straightforward"
8171200,8177440," right if something doesn't work anymore the compiler will just tell you uh what doesn't work"
8177440,8184000," you can experiment you can try things and eventually fix it right so it doesn't the the cool thing about"
8184000,8188400," this compiler is just it doesn't stay on your way in a sense um"
8188400,8191440," so yeah"
8191440,8201920," pretty cool all right so uh yeah let's take a look at the the subs right so thank you so much ducky 23"
8201920,8206880," for uh twitch fans of the kitchen thank you thank you thank you uh i guess that's it for today uh maybe"
8206880,8211840," we should rate somebody we haven't rated anyone for quite some time right so do we have any"
8212480,8220720," recreational programmers streaming right now do we have anybody streaming so oh we have valigo who's"
8220720,8225760," streaming right now so in he's probably streaming dry as well okay so this is a perfect candidate to"
8225760,8232000," to raid uh so let's go ahead and do that so uh just your computers thank you so much uh with the message"
8232000,8237200," always happy to see you streaming keep up the lord's work thank you so much for the warm words and thank you"
8237200,8247840," for the sub all right so i'm gonna raid uh valley so add valley go all right so did it start the rate i"
8247840,8255440," don't know uh i didn't press the enter it's jesus christ you can't put at in a raid right in a raid name"
8255440,8264160," you have to that's so stupid yeah without at uh all right so yeah thank you everyone uh get ready for the"
8264160,8269360," rate and i see you all on the next recreation programming session with mr zozin love you"

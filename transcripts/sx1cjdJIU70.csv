start,end,text
0,9340," are we live are we live already looks like we're live hello everyone and welcome to yet another"
9340,15960," zozin session how about that i bet you didn't expect that shit to happen yet again so let's"
15960,24980," make a little bit of an announcement and officially start the stream so and uh let's go um red"
24980,33360," square live on twitch and what are we doing today on twitch let me copy paste the topic today you"
33360,40200," are doing something special today we today we are about to jump into pretty deep rabbit hole i would"
40200,48740," say so today we're going to try to compile jai to web assembly right so the interesting thing about"
48740,56400," that is that uh jai does not support that at all uh but there is a couple of loopholes that we're"
56400,62420," going to explore today hopefully we'll see how it goes twitch.tv slash studying uh right so i hope i"
62420,66740," didn't make a typo and i'm going to ping everyone who's interested in being ping i don't think there"
66740,75860," is a type in here maybe there is um i have a little bit of dyslexia so hello hello everyone welcome welcome"
75860,83620," welcome so um let's take a look uh on the previous jai streams we were working on a jai break right so"
83620,93460," basically um breakout clone um in jai so i started to develop this breakout clone just you know to test"
93460,101780," things out and uh let's maybe take a look at it um so hello hello hello welcome welcome welcome welcome"
101780,109220," how are you guys doing so let me go to jai break and see if i need to fetch anything so because i've"
109220,116340," worked on this game a little bit off screen uh and i definitely need to fetch the latest stuff so after"
116340,124660," that uh i'm going to try to compile this entire thing so giant linux and we're going to go to the"
124660,132420," first dot jai uh okay so i actually upgraded to the latest beta right so and i have this problem yet"
132420,137860," again where i have to make this thing uh a system library right so i already explained that before"
138740,145860," and there you go so we have a game and i'm gonna try to run the game uh in debug mode super quick so"
145860,153940," this is how it looks like and uh yep so that's the game we've been developing uh it's actually pretty"
153940,158580," cool i really like how the the aesthetics of the game right so i think it's pretty it's pretty cool"
158580,165380," uh especially the color palette and stuff like that so one of the things that bothers me about this"
165380,173300," game is that i can't really share that game uh i can give people a binary right to run on their"
173300,180020," machines but i cannot compile it on anything but linux right so i would presume that majority of"
180020,187220," people actually use windows and i always think to be cross-platform right so usually i would just give"
187220,193140," people the source code and ask them just build it yourself right uh and that usually works quite well"
194100,200020," but unfortunately not everyone has a jaya compiler right so there's a like a couple of hundreds of"
200020,207620," people have this compiler but not everyone so it's not like i can easily share this entire thing"
207620,214980," right so i can share but it's kind of difficult so the best way to share this game for as many people"
214980,223780," as possible would be to compile it to web assembly in a similar way as i um created um at my snake game"
223780,231860," so do you guys remember the snake game so starting snake c wasn't so essentially it's a snake game um"
231860,236980," that is written in c but it's compiled to web assembly i haven't updated the the thumbnail so i should"
236980,244740," probably do that at some point uh right so and it looks like this right so this is written in c and it"
244740,253700," works in a browser right there you go so and it's actually really clever i mean it's it's really"
253700,259940," obvious how to do something like that but i really like the approach so the entire logic of the game is"
259940,268980," actually contained in a single module that doesn't depend even on c library uh right so here is this so"
268980,275140," game dot c and this is entire logic of the game right so it's around like i know a thousand lines"
275140,282580," of code yeah yeah it's almost thousand lines of code and it's only a logic it doesn't have anything else"
282580,291380," right so and essentially it also defines um some sort of interface for a particular platform right so this"
291380,297300," is the only platform specific thing that the game logic needs it needs to be able to fill the rectangle"
297300,303380," uh to stroke the rectangle feel some text maybe panic maybe log something and stuff like that"
303380,308660," right and if you are implementing the game for a specific platform you need to implement these methods"
308660,315300," somehow and also the game itself uh implement some sort of an interface that the platform can call"
315300,322260," when it organizes the event loop right so game initialization the resize of the window rendering"
322260,328980," updating with delta time as usual and also the key down event right so the platform uh usually"
328980,334740," implements the event loop and it also implements all of these methods right and this game is implemented"
334740,341380," for two platforms it is implemented for web uh web implementation is written in javascript so this is"
341380,349860," the thing that adapts that interface for the browser and uh we also have the sdl implementation so sdl main"
349860,355780," uh right and this is the thing that adapts that for sdl but the logic doesn't really care whether it's a"
355780,363860," browser or sdl it just doesn't even know what it does it just defines uh this interface and the platform"
363860,370420," has to implement it however it wants you see what i mean right so that's a very basic idea i'm going"
370420,374980," to give you the link to this uh to this game in here if you're interested so i probably should actually"
374980,380020," stop maintaining the description uh how are you guys doing uh how everyone is doing"
389140,399940," okay so let me see um description so maybe i'm gonna actually find the description uh so i have breakout"
399940,408340," three i'm not sure if it's a breakout three uh okay so i'm gonna just you know assume that it is"
408340,415620," breakout four uh right and what i'm gonna start on here so i'm gonna have a references references"
417300,424660," right so first of all here is the source code of the game right so here is the source code of the game"
424660,432020," um the dji break game and this is the source code of the snake game right and i'm gonna actually put"
432020,442900," all these things in here right so this is the source code uh of the breakout game right so this is the source"
442900,450500," code of breakout game uh and this is the source code source code of snake game"
450500,456580," there we go emacs is actually kind of weird"
456580,470900," so uh and essentially what i want to do i want to do the same thing but with the jay breaking right um so if i could"
470900,478660," do something like that with jay break uh i could share it quite easily with uh everyone who has the browser"
478660,490660," right so interestingly enough so how does jay work right how you know build configuration works so"
490660,497860," essentially um you have a meta program right you have a meta program and you set up the build options right you"
497860,505220," set up the build options and uh all the build options are available in here right so there are build"
505220,512180," options here they are and uh you can set some of these flags so the philosophy of this language is that"
512180,518500," uh there is not that many flags in the command line right so all of the command line flags are actually"
518500,523700," the structure uh the fields of the structure of build options right so and it's actually quite convenient"
523700,528180," because you can like see them so they're basically the documentation of themselves"
528180,534580," and all also all of that stuff is uh statically tight on top of that there is very interesting"
534580,541380," section of the options called llvm options right so and if you take a look at the lvm options there is"
541380,549300," um you know different lvm related stuff and the most interesting one is output llvm ir"
551620,559460," which is rather interesting so and it outputs target obj name dot ll dot bc so ll as far as i know"
559460,567060," it's uh intermediate representation for llvm and it's like its own c like language right and bc is the"
567060,573940," same intermediate representation but in actually in byte code right so l is a text version and bc is a byte version"
574500,584420," so and interestingly enough for clang the dot ll files are sort of like a native source code clank can"
584420,591780," actually take ll files and compile them to uh to whatever target you want and the most interesting"
591780,602900," thing is that uh clang can have wasn't 32 target so theoretically you can try to generate dot ll files"
602900,611700," and using clang compile them to wasm so in reality it is not going to work that easily because the entire"
611700,623380," thing is um only supported on x8664 the entire compiler only works on x8664 so there's a lot of uh things"
623380,632020," that are hard-coded for x8664 and um it may not work that easily but we're going to actually try to"
632020,638660," explore what we can do there maybe we can you know comment at something out or maybe adapt something just"
638660,647620," like try something out uh and on top of that ji actually generates quite a heavy run time for for your"
647620,654420," application right it actually includes a lot of things uh that are probably not needed for for the game"
654420,660660," and maybe we're going to try to remove them somehow manually or maybe ignore them so it's going to be like"
660660,667300," sort of like a like a baggage that comes with the wasm module but we never call to any of that runtime"
667300,675860," we'll see we'll see i already kind of explored uh this um you know this thing a little bit just to make sure that i'm not going to"
676420,682980," end up on the dead end so but uh yeah it's going to be interesting it's going to be interesting so"
682980,688420," intermediate code uh to to to"
688420,697620," rabbit holes"
700420,711220," okay so let's try to explore that i want to try to first compile to uh web assembly a very simple"
711220,717620," program i i don't want to jump into the like trying to compile this game uh right away because this game"
717620,724100," like has a lot of things uh not this game but this game this game has a lot of things and uh i didn't i"
724100,730660," think it's going to be really difficult to actually uh like jump into it uh so we have two consequent"
730660,735300," subscriptions in a row a doruk sega thank you so much for tier one subscription and there you go cut"
735300,740900," uh diego katalao i hope i pronounced your name correctly thank you thank you so much for all of"
740900,744580," the subscriptions even though i don't get any money from them but i really appreciate them nonetheless"
744580,753220," maybe one day i'll get some money from them but we'll see i tried compiling jaya to wasm but the"
753220,760580," intrinsic was making it hard i also tried compiling jaya to wasm and i know a couple of tricks and that's"
760580,767380," the reason why i'm streaming all of that right now so i know that it is hard i know what you're talking"
767380,776260," about but again i have a couple of tricks up my sleeve so uh let's give it a try um so let me go"
776260,786260," somewhere here so let's create jaya wasm file so the reason why it is so hard is because again wasn't"
786260,794740," platform is not supported at all uh so and which is fine because the language is not finished right"
794740,802660," so maybe at some point at some point uh we're going to have wasn't platform uh but we'll see we'll see"
802660,810340," well i mean i don't know like i think in 2022 you have to at least acknowledge that wasn't exist but"
810340,819700," we'll see we'll see um anyway so let's actually create a simple hello world right so so this is that"
819700,830500," and um to to to so i'm gonna do print uh hello uh i'm sorry sailor yeah i keep forgetting"
830500,837140," okay so let me try to compile this and i think and we'll see how it goes"
838020,843780," uh dr puppy thank you so much for 12 months of uh twitch conservation thank you thank you thank you"
843780,849860," have a good day fam thank you they have a good day to you as well uh all right so let's do linux and"
849860,857940," i'm gonna try to compile this entire thing and it compiled as you can see right and here is the uh hello"
857940,865700," world so to set the output intermediate representation flag we have to create a meta program so we have to"
865700,872180," create a second program even though i'm going to call it first uh first.ji is going to be the second program"
872180,880260," which will compile this program right so essentially the way this language works is you create a meta program"
880260,888100," that compiles another one right so essentially there is no separate build system and there is no separate"
888100,894580," build language like a build scripting language like in the majority of the of the languages where like in c plus plus you have"
894580,901700," the c plus plus and then you have this scuffed cmake language to build c plus plus in jay it's the same"
901700,910660," language um so yeah essentially you build jay with jay right so it's a pretty interesting idea like i think"
910660,915620," uh it's not particularly unique idea these days a lot of other languages also try to implement that but"
915620,922420," i presume they actually stole that idea from jay anyway so uh let's actually start implementing that"
922420,928900," let's import basics right because any jay program uh needs basics and uh since it's a meta program that"
928900,934020," is going to compile the other one we need to include the compiler right so there you go here is the compiler"
934020,940820," so and we're going to execute everything at compile time right so to execute stuff at compile time we need to do run"
940820,947940," right so and that thing will execute things at compile time and anonymous uh actually gifted"
947940,952500," two tier one sub thank you so much anonymous for gifting two tier one subs and everyone who got the subs"
952500,956180," welcome to epic a joy club um right"
956180,964660," i'm confused why people still call it first jay instead of something like build.jay"
965140,970980," uh i don't know maybe because it's not necessarily may not necessarily build things it's just like"
970980,976100," something that you have to execute first i don't know it doesn't really matter it's just like a more"
976100,982340," of a convention and it as far as you know this is even old convention somebody told me that it's an old"
982340,989540," convention uh but i don't know i really like this uh convention so we have the main program and you have"
989540,994100," the thing that builds it uh one life is left i'm sorry that you're not trusted let me actually trust you"
995140,1000980," uh there we go so you should be able to post anything that looks like a link without being timed out"
1000980,1008180," um so i use build.jay but the examples all used first yeah that's the reason why i use it because"
1008180,1019140," i saw it in examples okay so let's actually see how it works so hello uh from build right so we're"
1019140,1023460," going to have something like this and i'm going to try to compile this entire stuff"
1023460,1035300," uh first right so the problem with this thing is that it requires the entry point so we have to disable"
1035300,1044660," the generation of the output so to do that i need to go to the compiler and see how to do that so it was a"
1044660,1051460," function set build uh options right so it's a sell bit options but during compilation yeah there you go"
1051460,1060020," set build option during compilation and i need to take a look at the definition of this specific"
1060020,1066020," structure so we have to do do output but we have to set it to false right so that's what we need to do"
1067620,1074740," do output and we need to set it to false so in here it's rather interesting so this is the workspace"
1074740,1080900," right so and minus one indicates the current workspace i presume uh right there we go so that should work"
1080900,1086100," now and if i try to run this into i think as you can see it's it tells hello from build it doesn't really"
1086100,1092420," build anything yet uh but at least it says hello uh from build so to build anything we have to create a"
1092420,1098500," workspace right so i still don't really understand what is a workspace but as far as i can tell it's"
1098500,1107300," sort of like a build configuration right so in my game i actually built uh debug and release simultaneously"
1107300,1112980," because it's kind of convenient because they are different environments and if i change something the"
1112980,1117940," code may not necessarily compile in one environment right that's why i build both of the environments"
1117940,1123940," simultaneously because the compiler actually quite quick so it allows me to do that uh all right so"
1123940,1131140," and if i take a look at the game so it's a gi break first giant and i have build release and i also have"
1131140,1138180," build debug and in both of the cases i create two separate workspaces so how i understand workspaces is"
1138180,1144660," that they are like different build configurations right so if you want to do two builds right you want to"
1144660,1150900," build executable and another executable or maybe library you would have separate workspaces for that"
1150900,1160980," if i understand correctly i think um so in any case we need to create a workspace uh so create workspace"
1160980,1170100," so the function that does that is literally called create workspace okay so um so you also have to give the"
1170100,1176100," name to the name to the workspace so it's going to be in a jaya wasm let's call the child wasn't and as far"
1176100,1181540," as i know it can also fail right so and it fails when it returns zero because usually you check whether you"
1181540,1190100," fail by doing this right not not workspace and here we're going to say something like error could not create"
1190100,1196660," a workspace workspace uh work space go and we're going to exit with non-zero exit code cool"
1196660,1209460," all right so now we have to set the build options but to set the build options we need to"
1209460,1213780," get the current build options so get build options there we go"
1214820,1220420," uh so i just provide w and that gives me the build options there you go"
1220420,1231300," and uh so what we what we're going to set build options um for now so we're building executable by"
1231300,1240820," default um i think the only thing that we need to set is the output executable name let's do that"
1240820,1248020," so output executable name uh let's call this thing uh jai wasm right there may be wasm jai"
1248020,1256020," and then we have to set the build options back right so essentially you get the current build options"
1256020,1262660," you sort of patch them and then you set them back right so that's how it works and uh after that you"
1262660,1268980," just have to add a build file to the current um workspace and the file that we want to add in"
1268980,1274500," here is going to be main dot jai right so i'm gonna add it to the workspace and there you go we created"
1274500,1283380," the build script so this is the build script uh let me remove that so let me also remove that okay so and"
1283380,1291140," let me try to compile that and there you go so it created the build folder and the wasm jai and then i can"
1291140,1295380," run this entire thing and as you can see it says hello sellers so as you can see we have the main"
1295380,1302260," program and we have the build script cool so the most interesting part in here is the dot build uh"
1302260,1308660," folder right and if you take a look into that you will see some object files right you will see some"
1308660,1314340," object files and these are the object files that are going to be linked into the final executable"
1314340,1320820," right it's quite important i'm not really sure why there's four of them um but essentially they"
1320820,1327620," contain all of the symbols that are going to be linked together in the final program it's like this"
1327620,1333700," is the final program but for some reason it's split in four separate modules that are then linked"
1333700,1340420," together anyway so i presume maybe this is because of the multi-threading of the compiler so the compiler is"
1340420,1348180," try to parallelize the process so maybe since i have four cores right so actually two cores with"
1348180,1355220," like hyper 30 and stuff like that um it basically try to compile this into i think in four threads"
1355220,1361220," and to make them like known into vaping like it's it's split into four separate modules i think this is"
1361220,1366500," how it works maybe uh but i still don't really understand why is it split in usually like in"
1366500,1375220," several object files um in any case so let's try to enable that um output intermediate representation"
1375220,1384580," option right uh the one that we were talking about so let me see so it's nllvm options and we're going to"
1384580,1392100," have an output we're going to set it to true right so and let's try to compile uh this entire thing and"
1392100,1402900," see what's going to happen okay it is waiting now let's take a look at the dot build file okay as you can"
1402900,1408580," see it generated dot ll files and one of them is actually 50 megabytes"
1408580,1419460," uh right so these files are like with very long lines would you look at that right so the ascii text"
1419460,1426180," uh right i i'm really scared to open this one right so because i'm not sure if the if emacs is going to"
1426180,1433300," survive like opening big files in emacs is already quite dangerous but if you have long lines it's"
1433300,1442100," like straight up death uh we can try to open it yeah why not so okay well so far so good it doesn't really"
1442100,1446580," you know fail too much but if i go down uh"
1449940,1464660," yeah so it's it's it's dead so so let's try the dead so a simple file uh f are we after you how did we"
1464660,1478260," f we didn't f um why people said f okay"
1479940,1490580," f uh okay so yeah let's not let's not do that again but anyway so these text files is basically"
1490580,1499780," the llvm intermediate representation uh okay so let's go to what was that wasn't yeah so jay wasn't um"
1499780,1507700," so if we pick something in here right so this is basically a little vm intermediate representation i"
1507700,1514020," don't really understand this language but it's sort of like um uh intermediate language between like"
1514020,1521380," c and assembly right so this is how it looks like and you can see some of the functions in here"
1521380,1528660," right so it calls to mem copy or something like that uh it feels like they start with define uh for"
1528660,1536500," instance in here you have default allocator proc i wonder if we can see some functions in here that we can"
1536500,1542740," like correspond to an actual jay code uh okay so for instance we have runtime support default"
1542740,1550980," allocator right so if i go to jay uh to modules in here can i find such thing there somewhere"
1550980,1559060," uh let's see yeah we found it so there you go here it is so here is the function it's just"
1559060,1563700," like a call to the function but do we have the declaration of it oh there you go so here's where it's declared"
1563700,1569700," and uh then we can find the corresponding function within the intermediate representation right so here"
1569700,1575700," is uh the intermediate representation of that specific function uh right let me recompile that because i'm"
1575700,1580500," a little bit afraid that i modified this file when i was like typing uh stuff in there so let me actually"
1580500,1598020," remove everything in here and uh then i'm going to do jay bin jay linux so this is the first jay"
1598020,1609220," okay so we compiled everything uh okay cool so let's try to compile something right so as far as i know you can just"
1609220,1617700," do straight up clang uh wasm jay and like a little file right again ll files the in the text version of"
1617700,1623700," intermediate representation of llvm is basically the native language for clang right so that means you"
1623700,1626740," should be able to do that you should be able to just do that"
1626740,1633540," theoretically it takes some time but we have some problems we have some syntactical problems"
1633540,1640100," at least for this specific file uh right so and we can try to compile this one it still"
1640100,1651860," fails on all of these things and this is probably because i have an old clang um i'm pretty sure yeah so i have a clang version 7"
1651860,1658980," because i'm using um debian because i'm using debian i'm not sure which one the the jay uses but it's"
1658980,1668420," definitely not uh not 7 one so along with jay we have uh the linker right the linker that comes from clang"
1668420,1675620," uh right so we can try to run it so it's going to be lld linux and uh yeah i wonder if i can just like"
1675620,1681220," check the version of it i can't really check the version it wants me to be it's a generic driver"
1681220,1692740," invoke ldd ldd mac os um we can try to make like um symbolic link to actually give it certain name"
1693380,1700740," and then i can try to do ld ldd uh version so it is actually seven"
1700740,1711780," hmm interesting okay so uh let me let me actually download the latest clang i think"
1711780,1716500," i think i didn't have a latest clang on this machine so let me see"
1718900,1722660," oh yeah i forgot that the kgb is actually checking all of my google queries"
1722660,1731540," so we have to wait do you compile llvm code with clang that's a good question"
1731540,1737220," it's a very interesting question i'm not sure how to answer that okay so let's go in here"
1741940,1750900," so download"
1750900,1765700," so can i just like go to the github or clang download um clang llvm github right because i know that on github"
1765700,1768820," you can find some of the releases there um"
1768820,1778020," so 61 releases not even 69 releases"
1778020,1788020," okay so this is the latest version of lvm it's a clang plus llvm so what i need is linux"
1788980,1796580," uh so there's a linux for a arch 64 arm where is x86 64"
1796580,1806740," is that it so they abandoned x86 64 so is it finally obsolete or something i i don't know so there"
1806740,1816100," is for for free bsd but not for okay that is really weird uh i didn't want to click that"
1818980,1823700," okay that is really weird um"
1823700,1828340," imd 64"
1828340,1833220," okay there we go so we have something in here um"
1833220,1841380," i remember okay so i know that some time ago i just downloaded the 13 one"
1842420,1842740," um"
1842740,1853620," 13 let me let me go a little bit back i think i want this one"
1853620,1864660," the reason why i want this one is because it has old ubuntu right it doesn't have a ubuntu but it has"
1864660,1872020," like old ubuntu which might be compatible with uh with debian that i have right so there you go"
1872020,1879380," so let's actually try to download it here um super quick i wonder if it's going to take too much time"
1879380,1883780," i hope it's not going to take too much time okay so it's relatively fast uh while we're waiting for"
1883780,1886020," this entire thing does anyone have any questions maybe"
1887460,1893300," um so we have to download half of the gigabytes apparently so it's going to be like seven minutes"
1893300,1893780," or something"
1893780,1904100," clank for 14 that's twice the clank you have yeah i have a clank 7 and then"
1910100,1914100," there's also kgb return results manually yeah i'm pretty sure i'm pretty sure they do"
1914100,1928580," so i'm thinking maybe i should make a small break while these thing is downloading uh right because i"
1928580,1933220," want to actually pour myself a cup of water because i didn't do that before the stream for some reason"
1933220,1942500," so let's make a small break um are you what is up how's it going are we still downloading we are still"
1942500,1944260," don't 22 minutes what the fuck"
1944260,1953220," well i didn't expect that so it's not supposed to be this long"
1961220,1965300," well that is really sad um"
1965300,1984900," so maybe i can get the clank from my other account uh so all right i don't think i want to wait 22 minutes"
1986500,1990260," so yeah let me actually uh disable that can i even"
1990260,1997700," cancel that i don't think i can cancel that easy okay so here it is uh let me try to actually grab it"
1997700,2003940," from my other account destroy computers thank you so much for 37 months of tier one subscription thank"
2003940,2011860," you thank you thank you uh all right so did it leaks any sms messages sms messages short sms messages"
2013460,2022740," so yeah there we go i'm gonna go to here right so i'm gonna just like go into my other account super quick"
2022740,2028420," why am i here uh i think i want to go here"
2031860,2039380," because i already downloaded that before because i'm using like um old debian and i always need like a"
2039380,2043060," fresh software uh so"
2051220,2059540," so just a second"
2059540,2061140," uh which one i think"
2061140,2065060," okay so i have"
2065060,2075700," the 11th version right so i do have the 11th version so let me quickly copy it i hope it's not going to"
2075700,2085060," take too much time uh right i'm copying it so should be relatively fast not the 13th one but this 11th one"
2085060,2091460," so a little bit like older so maybe that one is going to work um somehow so let me see"
2092260,2105940," uh let's try to unpack that"
2105940,2113940," i'm very late did j finally came out no it didn't i'm sorry"
2114980,2119380," um so i'm in a closed bedroom as of right now"
2119380,2133460," all right so here we have clang and stuff like that and evm has so many tools like holy"
2133460,2140340," shit why does it doesn't need so many tools um i don't understand"
2140340,2147140," so much crap um"
2147140,2154580," why isn't that like a single thing you know maybe there is a reason for that also a bunch of libraries"
2154580,2167860," that you can link with i guess dot a files static files"
2167860,2176580," so by the amount of like libraries and small tools i can like feel the amount of over engineering it's"
2176580,2178500," just insane um"
2178500,2189780," okay so with the door i think it's over uh okay so we unpack that and here i was trying to compile this"
2189780,2196260," thing so now i can try to do it like this uh right so i'm trying to compile the llvm file right let's"
2196260,2198740," actually start with zeros one um"
2198740,2202580," okay"
2202580,2207220," it kind of worked it spit out a lot of like"
2207220,2212580," warnings oh okay a lot of undefined references so it's trying to reference to some"
2212580,2217060," functions that don't exist and this is because it's i think it's trying to create"
2217060,2224260," the the final executable so we have to actually provide minus c flag to compile it to just object"
2224260,2229940," file right can we compile it to object file okay so we managed to compile it to object file"
2229940,2239060," and this is the object file created by clang right so now it should be possible to set the target"
2239060,2244900," to wasm32 right so uh let's go ahead and try to do that"
2244900,2253940," okay so it kind of yeah couldn't allocate output register for const for constraint"
2254260,2260580," these things so there's some constraints within that file that require these registers"
2260580,2267300," which is not really a thing in wasm in fact as far as i know in wasm there is no registers"
2267300,2276020," especially such registers as xmm0 cx ax and so on and so forth so there is something had coded there"
2276020,2283780," that prevents us like easily um you know compile that to web assembly so let's actually try to"
2283780,2287460," take a look at some of the other files so this is the zeros one what about the first one"
2287460,2293940," look at that the first one actually we managed to compile it relatively successfully right so this"
2293940,2296980," is the o file and if we open it look at that"
2296980,2304820," it's awesome it's actually wasm right it's it's a magic number for for wasm and if we take a look at"
2304820,2311300," the file it says this is a web assembly module right it is in fact a web assembly module"
2312420,2320340," so and uh to check that we can try to convert it into the what the web assembly text representation"
2320340,2328900," so to do that i have a tool called uh wasm to uh to what right it comes with uh wabbit tools"
2328900,2336500," okay so let's wait until kgb actually approves my query thank you very much"
2342820,2343700," so how you guys do"
2343700,2354820," i think it's actually the day is over so i think that oh okay they're probably i thought that maybe"
2354820,2360660," the uh the kgb agents like in their office uh went home so they didn't approve my they wouldn't"
2360660,2366020," approve my query until tomorrow so but they but they still there they're still in the office"
2366020,2372260," thank you very much so uh this thing is uh available with like the web assembly binary tool"
2372260,2378900," kit so it has a lot of things in here like wasm to see uh was to json no idea what the"
2378900,2384100," fuck it is but the thing that we need is wasm to what what's cool is that it also has what to wasm"
2384100,2389540," so we can easily convert between binary tools and the uh binary representation and the text"
2389540,2392580," representation which is rather convenient so i'm going to give the linkedin here"
2392580,2402100," okay so uh let me let me see so i'm going to go to the description"
2402100,2408420," where is my description specifically i want to go to gi break the fourth one yeah there we go"
2408420,2411460," so bob it cool"
2411460,2429780," so dot but here it is uh wasn't to what so wasn't j1 so here's the o file and there's something wrong in"
2429780,2438180," here and i suppose this is because my wasm tools are kind of old so uh let's actually like download"
2438180,2447780," the latest version here i hope it's not uh gonna take 20 minutes right so we have stuff for ubuntu"
2447780,2450500," right so i suppose i'm gonna download ubuntu"
2452180,2461540," that we get so please not be 20 minutes okay it's relatively fast look at that okay cool uh let me"
2461540,2464260," now uh unpack the syntax stuff right"
2464260,2478500," oh okay it's over so now i'm gonna try to do wapit bin wasm to what right wasm to what and let's try to do"
2478500,2485140," wasm join one oh and unexpected opcode"
2485140,2488500," unexpected opcode"
2488500,2491940," so it managed"
2491940,2503140," hmm so it compiled it down to web assembly but it has an expected opcode"
2504820,2513060," you know what's interesting if you like go to here like if you open this ll file right and search for"
2513060,2523940," that specific you will literally see this opcode so this opcode is forcefully injected in here so it's"
2523940,2531860," yet another case of you know um something being hard coded for x86 x4 and we're inside of some sort of"
2531860,2537700," procedure let's actually take a look at the procedure that we're inside inside of uh so there's a lot of"
2537700,2544180," calls in here so we're inside of procedure called ensure synchronization is in needed right so let's"
2544180,2549540," actually try to search for that specific uh thing um so let me see"
2551380,2558900," um right it's rather interesting thing isn't grip or n do we have anything about that"
2558900,2570820," so there's a build option to tell the compiler to output everything in a single file instead of multiple"
2570820,2578980," obg l file set of m option enable split module false oh okay thank you so much i still didn't understand why it was split"
2578980,2587540," it is it for for the sake of you know multi-threading right because that's the only reason why or like"
2587540,2594340," why i the only reason i can think of to to split them uh but anyway thank you thank you so much i'm gonna"
2594340,2603700," try that so if we take a look at this thing uh there we go it's a it's assembly um and there is a lot of inline"
2603700,2613300," assembly right and i suppose the the primary thing that sort of like uh prevents us from easily compiling"
2613300,2621860," um this entire thing to web assembly right like properly is uh all of the inline assemblies in here"
2621860,2630180," so we need to somehow get rid of them or i don't know maybe ignore them remove them i don't really want to"
2630180,2636900," remove them because they may break the logic of the uh of the code so maybe i could replace them with"
2636900,2644580," sort of like equivalents that may be broken but like overall work uh correctly for example here we have a"
2644580,2651460," compare and swap right so it's needed for some sort of like multi-threading stuff right but i do not plan to"
2651460,2658980," do any multi-threading so maybe i could like implement with the implement this thing like with the with"
2658980,2666980," something very naive right just to get rid of the assembly stuff uh anyway so let's actually try this"
2666980,2669220," uh the option that doesn't split things"
2673620,2685060," so let me go to first uh opt team uh for a second i forgot where i am so let's let me try to the prop"
2689940,2692820," and let's go to the compiler as well"
2692820,2704980," split enable split modules"
2704980,2717140," um still don't know and it's only for llvm that's what's interesting right so for the x86 64 back end you"
2717140,2722340," don't really have a split modules right uh yeah you don't look at that interesting"
2722340,2729620," let's actually try false and i'm going to try to it's actually rather dangerous so i probably want to"
2729620,2735620," move these things somewhere let's actually move them to opt right so here's the folder i'm going to"
2735620,2742980," actually move everything there because this is where i keep all of my third party things right uh let me"
2742980,2753700," remove this build there we go and it's a optgi first all right so maybe that will work"
2755940,2761780," it's taking some time it's taking some time i presume yeah it's output and all that stuff"
2761780,2771060," okay that's cool uh and now if i try to compile this entire thing um so clang"
2771060,2776820," target wasm32"
2778900,2781860," that's not particularly convenient so i'm thinking maybe"
2781860,2789860," maybe i should create some sort of a build uh build script super quick so it would be nice to"
2789860,2794740," actually do that all of that from jai but i'm currently experimenting right i'm currently experimenting"
2794740,2802660," so i'm gonna do it in bash uh what is going on right i'm gonna currently do it in bash and then later"
2802660,2808420," maybe if i have enough time uh i'll port that to jai because it would be nice to actually do everything"
2808420,2814900," from jai right from from a single language but for now i'm gonna just do it like that uh okay so what"
2814900,2822420," i want to have i want to have like a clang which points at the clang in here all right there we go"
2822420,2830180," so i'm going to take that thing and put it in here so this is going to be home"
2831620,2840420," right so this is our home then bin clang right so in here then i'm going to do clang"
2840420,2852740," rather like this target wasn't 32 c uh and then i'm going to do it like this there you go do we need"
2852740,2860100," anything else i don't think so uh okay so then i'm going to enable the executable and let's try to run that"
2861140,2869780," so okay so it complains about also this x uh zero zero so we can actually take a look at like what's"
2869780,2876340," up with that x zero zero so let's go there i don't want to open it with emacs that's for sure"
2876340,2881380," uh right i don't want to open it with emacs because that will kill emacs so let's actually open it with"
2881380,2890180," wim because wim uh vim not wim right wim uh vim is way better at big files right so let's actually open"
2890180,2897300," it in here though vim still sucks when it comes to long lines and that's one of the problems that we"
2897300,2906660," have in here but anyway so xmm zero uh okay so we do have xmm zero and let's actually take a look at in like"
2907220,2915380," at the procedure where it is uh called print to builder right so let's find it in uh j"
2920180,2930420," emacs grab uh print to was it print to builder yeah print to build so let's take a look so i probably"
2930420,2935700," want to find specifically the declaration of that thing because that's the only thing i'm interested in"
2936580,2949540," do we have any okay so we do have uh assembly stuff and do we have specifically xmm i suppose"
2949540,2958260," we are inside of cmd okay so that's very interesting uh where this thing is defined oh okay so we can"
2958260,2966420," actually kind of disable that can i just go ahead and say false and like disable this entire thing uh i"
2966420,2974660," think i should be able to like i straight up disable the the cmd um let me see but to do that of course"
2976980,2982900," we'll have to recompile the entire thing okay i'm gonna do first"
2982900,2993620," so uh thank you so much value for 12 months of tier one subscription thank you thank you thank you and"
2993620,3002420," a rope me cad thank you so much for the rate uh i wonder if you can parameterize this verse at compile"
3002420,3009860," time without changing the source uh i don't know maybe there is a way um maybe there is no i don't know"
3009860,3018740," okay so let me let me try to do that is it going to complain okay it is complaining about different"
3018740,3026180," thing it doesn't complain about xmm anymore at least right so uh let's open this thing and so complaining"
3026180,3031700," about specifically ax can you find ax um"
3031700,3044500," it's searching even vim kind of like has a hard time doing this and i think okay so it it found it"
3044500,3050180," which is which is which is nice so let me take a look at the procedure where this happened compare"
3050180,3057460," my compare and swap okay so this is another thing that we'll have to fix so you know what would be nice"
3057460,3067300," um it would be nice to find all of the assembly uh like inline assemblies you know um somehow"
3068500,3075780," and you know what this language has like an extensive meta programming uh capabilities right so essentially"
3075780,3085140," it allows you to subscribe to compiler events right and every time it compiles something some sort of"
3085140,3092580," construction right procedure or maybe block or something it will send a message that you can actually"
3092580,3099940," catch at compile time and do something with that message for example print let's try to write a"
3099940,3107620," meta program that is uh listening for all of the compiled assembly in line assembly and prints their"
3107620,3113460," location and that way we'll know like all the places where we have to like disable something"
3113460,3119460," or maybe update something so it doesn't generate assembly because that's something that prevents us from"
3119460,3126260," compiling to web assembly so uh louis hgh thank you so much for two months of twitch front description thank"
3126260,3128420," you thank you thank you thank you um"
3135620,3145380," okay so uh let me let me see so the way you do that right the way you do that you actually intercept the"
3145380,3154340," compiler right so there is a example in opt so let's take a look at the i think it's how to basic meta"
3154340,3162420," problem there you go so yeah essentially after you uh yeah so you add built in here after you set all the"
3162420,3172900," build options you start the uh compiler interception right so you do intercept the compiler right then you"
3172900,3179940," add the compilation file and you start listening for messages so here they basically call to a function"
3179940,3186980," but the function itself just organizes the event loop the event loop is just like infinite loop right while true"
3188500,3201140," we are waiting for compiler messages right so there is a message so and if we failed to get a message we"
3201140,3207220," break out of the loop that means like we have to finish this stuff and then once we get a message we have"
3207220,3215540," different kinds of messages right so file it's when it's sent when a particular file is compiled so there's"
3215540,3222260," also import uh phase and stuff like that in fact let's actually take a look at all of the uh kinds of"
3222260,3230340," messages so let's go to compiler uh right let's find this thing so this is a message structure um"
3230340,3242020," message okay so here are all the uh all of the coins right so here are all the kinds uh so i suppose i"
3242020,3250500," think the one that we're interested in is complete uh okay the compiler sent this message when compilation"
3250500,3257540," is finished well this is probably something that we have to handle anyway right so let's try to do"
3257540,3267380," message kind equal case uh complete and we're gonna break out of the loop right so break in here it doesn't"
3267380,3274580," really break out of the switch it breaks out of the loop right uh so i think the one we're interested in"
3274580,3280420," is type checked yeah there you go so we get this message every time some code has been uh has passed"
3280420,3287780," type checking we can inspect the code search for things modify code etc uh for now we'll just report how"
3287780,3294740," much code has been captured so essentially um once something is stopped type checked you can go ahead"
3294740,3301060," and do something with that right so we can even modify i never tried modifying uh the type checked code"
3301060,3306260," uh but that will be actually rather interesting so anyway um what we have to do we have to take the"
3306260,3311700," message and cast it to message type checked right as you can see so here's the message we're casting it to"
3311700,3318980," that one uh and then we're doing something with that so let me see so but first we have to do type checked"
3318980,3327300," so maybe i'm gonna do it like that so here's the type check and if we take a look at the type checked"
3327300,3334820," structure in the compiler so here it is it sort of like derives message and on top of that it has"
3334820,3340660," all of the necessary declarations right so code declarations code procedure header and stuff like"
3340660,3347620," that i suppose this is the thing that we're interested in like all uh contains every member in the"
3347620,3356260," above array so essentially it contains all of the uh type checked code notes right so i suppose it sends"
3356260,3362260," that message in bundles right so it type checks a bunch of things then it accumulates them in a bundle and"
3362260,3368900," send this uh sends this sends it as a you know as a single message i think i'm not 100 sure but if"
3368900,3374500," you take a look at the code node i think code node is rather interesting thing so here are different kinds"
3374500,3383780," of code nodes that you uh you know can know about right block literal ident context uh this is literal"
3383780,3389940," like you have the entire ist you have an access to the entire ist you subscribe to a message of the"
3389940,3395460," compiler and you get the compiler you can do whatever you want with it so the thing we're interested in"
3395460,3404100," is awesome right so and this is probably the things that we're looking for um okay so let me go back to"
3404100,3415380," message uh type checked right type checked uh and let me see so you know what i want to do i want to actually"
3415380,3421380," print how many of these things we have type checked uh something like type checked"
3421380,3436580," things right so it's going to be type checked um then all and then i need to take the length i don't"
3436580,3443060," remember how to take the length i think it's just a count right yeah there we go so and after you're done"
3443060,3449300," by the way you have to finish the interception i forgot about that uh i forgot about finishing"
3449300,3457860," interception i think it has to be has to be here right there we go so you start the interception"
3457860,3463940," you organize the loop you wait for the messages um actually you probably have to start the compilation"
3463940,3471300," before you organize though and then you finish the interception let it go so let's try to compile this"
3471300,3477060," into i think so it didn't compile semicolon uh another semicolon sure anything else oh okay"
3477060,3484660," so i forgot a new line but it kind of worked as you can see it kind of worked ah okay q"
3484660,3490980," all right so there you go so here are the things that it managed to type check"
3492660,3495940," um that's all those things actually"
3495940,3510100," okay so among these things i suppose we want to iterate on them right so compiler uh so the type of"
3510100,3517300," this thing is type checked and type checked looks like a generic type so type checked"
3519700,3523700," and there we go so essentially it wraps a particular type"
3523700,3529460," and within this thing we have sub expressions which are the flattened expressions in the right"
3529460,3535140," side of the declaration so i think this is the sub expression that we need right so essentially i want"
3535140,3545300," to iterate uh type type checked all right so and within this thing i want to iterate all of the sub expressions"
3545300,3553860," like flattened sub expressions and within this thing um so code node if the kind of this thing is awesome"
3554580,3559700," we want to bring it somewhere all right let's actually print something like uh awesome detected"
3559700,3566820," awesome detected also put the name here and let's see if it's going to actually do anything"
3566820,3573380," oh my god there we go uh okay so it detected five"
3575460,3580900," inline awesome things that's actually pretty cool it would be nice to know where they're located so we"
3580900,3586100," know there's like at least five of them in the entire code base right in the entire code that we're"
3586100,3597460," trying to compile um right so let me see the code node must have a location of some sort"
3598660,3609780," uh location oh there you go i think that's it that's it actually okay so can i do something like this um"
3609780,3616020," oh my god emacs come on you can do that i believe in you so uh location"
3616020,3625140," all right so and i suppose here we have a message that we have to print right so if you take a look at"
3625140,3634100," the compiler right so this is in enclosing load uh we have to find message file message file and it"
3634100,3641940," does have fully passed file name so let's actually print that um fully passed file name so let's actually"
3641940,3654660," all right so didn't compile uh is not okay is not a member of location"
3654660,3661860," oh this is because it's uh enclosing import another enclosing enter who's that enclosing load"
3661860,3662740," that's what it was"
3682260,3690420," okay this is okay this is the files where we have detected the inline assembly there's five places"
3690420,3697620," so it will be also nice to know the lines where they're located okay l0 is the index of the starting"
3697620,3702580," line l1 is the index of the ending line oh location basically gives you a range"
3702580,3710260," okay and c0 is like starting character and c1 is probably any character so i suppose to just print where"
3710260,3717220," it starts we only need like l0 uh right so let's actually give it a try something like this um"
3717220,3726900," okay so this is gonna be something like 80 location l0 right and let's give it a try and now we know"
3726900,3732820," all of the location of all of this assembly stuff how about that holy"
3732820,3745060," what the why the can i just do that holy this is exactly what i was talking about right so you"
3745060,3751460," need a language that allows you to query things however you want this is so awesome you"
3751460,3756980," you can like you want to know where all the assembly stuff that prevents you from compiling it to uh to"
3756980,3762020," web assembly you can just like search for it at compile time here we go so yeah"
3762020,3765140," it's pretty cool"
3765140,3778500," so what's funny is that in print we already disabled use cmd but it's still still there which is kind of"
3778500,3786340," weird but it doesn't intercept the compilation anymore so it should be fine so i suppose we need to focus on"
3786340,3794420," the runtime support thingy so compare and swap like i'm pretty sure if i'm gonna do web assembly i'm never"
3794420,3802820," gonna call this function ever um right uh we don't want to take dependency anatomics so here's the simple one"
3803460,3808020," right so here we initialize synchronization and sure synchronization is called for"
3808020,3814820," writing strings right so when i'm gonna be compiling to web assembly i do not plan to write any strings"
3814820,3823220," so i don't really care if that thing works correctly or not you know what i mean so i don't really care"
3823220,3829860," so what i do care uh is the lack of this thing"
3831220,3838420," so you know what i'm gonna introduce something like wasm uh true right and i'm gonna go through all of"
3838420,3844340," these things right uh if um wasm"
3844340,3857780," so you know what i'm gonna do i'm gonna like literally implement compare and swap and swap in non-atomic way"
3857780,3860340," right how does it work compare and swap"
3860340,3866580," compare and swap"
3866580,3876740," kgb agents are slacking at their job again"
3883140,3887060," this is funny if you know what john said about wasm i know what he said about wasm"
3887060,3894260," he can't stop me"
3894260,3904660," uh my next step is going to be implementing garbage collector uh for for j through meta programming"
3907540,3912740," okay so essentially so we have all the new version and if the current value"
3912740,3920980," is i guess equal to old we replace it with new but in this particular version will also return"
3920980,3930020," old so essentially what we need to do in here if dest is equal to old right so not equal to all if equal"
3930660,3939460," then we're gonna set it to uh tune you there we go i think that's what we're gonna have in here"
3939460,3946740," right it's not atomic in any way shape or form but again i don't care right so i need this thing to"
3946740,3953140," compile and uh and work more or less correctly if it will be called accidentally you know what i mean"
3953620,3960020," right so uh the correctness of this code is not my goal which is kind of weird right but anyway"
3960020,3969780," uh so where's another place so here we basically sort of pause how about we don't pause right how"
3969780,3975700," about we just like allow to do this thing uh if i remember correctly this code is essentially just like"
3975700,3983700," wait uh a little bit uh a little bit let's let's not wait at all um if not wasn't just do that"
3983700,3995780," and another place is this one break um i guess we can do it like that not wasn't"
3995780,4005060," maybe specifically for like web assembly we could have like special way breaking into the debugger"
4005060,4010740," because uh you know browsers do have debugger and stuff like that so that should be fine"
4010740,4019460," okay i think we addressed all the all of the assembly stuff right yeah we addressed all of them it"
4019460,4026420," still prints them right uh but it shouldn't have them in the in the final ll file right so let's"
4026420,4038020," actually try to call build ush okay so it created final wasn't thinking"
4038020,4041380," which is rather interesting"
4041380,4052580," okay so let's try to convert it to what file just to see what the hell is going on in there"
4053220,4058500," um so i think i can do a similar thing uh right so it can be opt"
4058500,4061380," uh wobbit"
4061380,4064340," let's go to bin"
4064340,4075620," uh wasm to what home boom uh wasm to what"
4078820,4089860," wasm to what and this thing should basically give me this thing so i also know that it speeds everything"
4089860,4095860," into the uh into the standard output so i have to redirect that all right so let's give it a try"
4095860,4105060," uh okay so and it created so it even has something look at that it even has something which is kind of cool"
4105620,4114980," all right and look at that we have a list of functions we have literally a list of functions"
4114980,4124100," that we need to implement in javascript for this entire thing to work how about that how about that"
4124100,4132420," so this is actually pretty cool um all right i suppose the thing that we want to do is basically link"
4133460,4139300," this entire stuff right but we have to link it with special flags right in snake i remember"
4139300,4146020," in snake snake snake snake snake snake uh let me see let me see"
4146020,4152420," so we had some flags in here um"
4154660,4160660," like we expert functions functions separately but as far as i know we can tell the linker to just like"
4160660,4166260," export everything we also said uh no entry point and allow and define so these flags"
4166260,4177460," could become useful for us when trying to link this entire stuff all right so let me try um let me see"
4180660,4194260," can i go to clang bin uh wasm okay so here is a wasm ld that's cool it's very very cool um wasm ld"
4194260,4197380," wasm ld"
4200900,4210740," so if i remember correctly it's something like that uh wasm 32 and let's just go ahead and do that"
4210740,4221060," right so let's just try to compile this thing uh so what is it going to say all right invalid data"
4221060,4229940," symbol offset and you know what's interesting uh people were talking about this problem on the"
4229940,4237860," secret beta server so people were already trying to do that and this is the dead end that people hit"
4237860,4246500," right so like after that it's just like unclear where do you even go right so what is like invalid data"
4246500,4253060," symbol offset what the hell is that but i found a very interesting workaround for that thing"
4253060,4260340," right so have you noticed that i can even though it is not particularly"
4260340,4265780," linkable wasm i can turn that wasm into what"
4269300,4276820," can i take that what can i take that what and uh convert it back into wasm if i convert that what"
4276820,4284580," back into what it wasn't is it going to be the same file so let's give it a try uh so what"
4284580,4292420," to wasm so you you have to go the other way around right so what to wasn't uh what to wasn't"
4294420,4303620," um so and let's just give it like that right and i'm not going to do that and let's see"
4303620,4314020," okay so here is this thing and it's definitely not the same file so this is the original file"
4314020,4322580," and this is the one after the conversion this is the one after the conversion so if you try to now link"
4322580,4324020," the one after the conversion"
4324020,4334500," it is not going to link because we didn't really specify the output we should probably specify the"
4334500,4343140," output so what should we specify in here let's say main wasm let's go with main wasn't uh let's go"
4346020,4354260," okay so the problem here is that it's not relocatable right to actually link this entire thing uh we have"
4354260,4364020," to make it relocatable right we have to make it relocatable uh so can we actually do that so if"
4364020,4370580," you take a look at the wap it being what to wasm right so it's what the wasm let's take a look at the"
4370580,4378260," help uh okay so here we go so you can actually make it relocatable if you convert it back so let me see"
4379220,4384340," so we have to put minus r in here and let me try to build this h"
4385140,4390580," invalid symbol type"
4390580,4395060," that is rather interesting"
4397060,4406980," so yeah"
4406980,4420980," so yeah"
4423700,4426100," for some reason doesn't really work"
4426100,4434900," you know what"
4434900,4443220," i need a fresher clank so i need to make a small break because i'm actually falling asleep"
4443220,4445860," and one of the things i want to do i want to actually make a cup of tea"
4445860,4450500," my brain doesn't really work properly so i definitely need a cup of tea"
4450500,4453380," and after a small break we're gonna try to solve this problem"
4453380,4462180," all right so it turns out i'm an idiot because why the hell do i need to um"
4462180,4469620," how to say that link things even further if i already have um a web assembly file"
4469620,4477140," it doesn't really make much sense does it so uh maybe i can just like load it up probably"
4477940,4478900," so let's give it a try"
4478900,4486580," i didn't even have to do this kind of stuff so the only thing i really need is just like that"
4486580,4494020," uh let me see it should be enough actually believe it or not so this is enough and this is the"
4494020,4499860," relocatable wasm file right the only thing we need to do we just need to load it up so let's actually"
4499860,4506020," use node.js to load things up because i don't uh because with node.js i don't have to set up the html"
4506020,4511460," stuff and also web server right because it's easier to do that via web server if you want to fetch"
4511460,4520820," the web assembly file right so i don't want to do any of that stuff so node.js load web assembly so how do you do that"
4522820,4528820," uh so we get to the point of the stream of jai stream when we are programming in javascript"
4528820,4532660," javascript by the way cheers"
4536820,4538820," that's a pretty good piece"
4538820,4546580," all right so i suppose that's the that's the thing"
4546580,4552900," yeah that's literally how we do that so i'm going to just copy paste some code"
4553540,4561700," uh load js okay so here we are loading the file so the file that we want to load is probably this one"
4561700,4565700," right so that's what we want to load"
4565700,4573700," this is a wasm file and we're instantiating that and we get the wasm modules so the only thing i"
4573700,4580420," probably want to do here is print the wasm module okay so let's go ahead and just try to run the logis"
4581460,4590740," uh oh yeah this thing returns a promise so maybe i have to do something like i don't remember"
4590740,4600980," is it like catch um i forgot what is the way to handle an error in a promise"
4600980,4609940," it is catch right so can i just do console error is it going to work oh yeah it is work so"
4610660,4612660," uh instant must be present"
4612660,4627300," oh yeah i know what it is so a web assembly this is a scuffed example what the um web assembly instantiate"
4627300,4637860," because i quite vividly remember that instantiate has a second argument which is import object right where"
4637860,4643220," you're going to have all the imports and stuff all right so let's pull it in here so and"
4643220,4650420," uh yeah you you need to have an environment all right so this is the environment and within the"
4650420,4658260," environment you would need to have linear memory and some other stuff all of the things uh that we have in"
4658260,4663540," here so you see it started with linear memory in fact i think we can even copy paste this entire stuff"
4663540,4670020," and just like uh stub all of the things within the environment i'm pretty sure we can do that"
4670020,4674020," uh yep yep yep so let me let me try to do that"
4674020,4680260," uh-huh so then uh i probably want to do it like this"
4681060,4691780," all right all right so here is an idea we're going to actually do something like that"
4693700,4701860," uh yes on top of that we can even print that a certain function was called just in case it was called"
4702500,4708180," uh console lock uh console lock uh and we're gonna do something like um"
4708180,4722180," so not implement it right implement it and i'll have to put it like that and god damn it"
4724900,4728980," uh so can i just do it like that there we go"
4728980,4739540," so if the code for whatever reason calls any of these functions from the import we'll see that in the"
4739540,4745460," in the log on top of that maybe i should actually use console error in that case"
4747540,4754980," console error so maybe another interesting thing it would be nice to"
4754980,4761540," actually accept all of the arguments right something like this i think this is how we do that"
4761540,4768260," right and then um basically print all of them i think that would be nice"
4770260,4778260," uh so arcs is that how we do that i think this is how we do that right so in case the web assembly code"
4778260,4782980," calls any of these functions we're going to see the like a specific function that was called and also"
4782980,4789700," there are arguments so we can sort of implement all of that uh three dots oh okay sure thank you"
4799540,4802980," all right so let's see if it's going to work um"
4802980,4805540," okay"
4805540,4814500," oh wait linear memory is supposed to be a memory oh okay that's that's really interesting"
4814500,4824500," okay so one of these imports is not what i think it is and how many of such memories do we have okay"
4827060,4835060," okay i accidentally killed emacs yet again with a long line right"
4835060,4840580," oh boy uh let's go back"
4840580,4854420," okay so what do we have uh i suppose if i go back to here"
4855140,4859540," right right"
4859540,4863700," what am i thinking"
4863700,4872740," yeah anyway uh i'm sorry"
4872740,4884500," um so linear memory has to be a memory web assembly new web assembly memory"
4885140,4886740," a long line yeah"
4886740,4887860," a long line yeah"
4887860,4897780," come on you can do that"
4897780,4900180," tovarish mayor"
4900180,4903940," i believe in you"
4908340,4909780," okay okay okay there we go"
4909780,4919700," so there's a memory and what do we initialize it with so there's a memory description initial and"
4919700,4927860," maximum uh so initial size of memory in pages and as far as i know page is this like 64 kilobytes"
4927860,4930660," right so that's usually what it is um"
4930740,4939300," um maybe i want to have something like this so there's also indirect function table"
4944500,4948260," you know what's interesting but i don't use any of this"
4948260,4953780," i really don't actually"
4953780,4964100," and i remember that in the compiler we had something interesting can we just like do a little bit of a"
4964100,4969540," dead code elimination though maybe we do use linear memory right maybe we do use it in your memory"
4970580,4971300," um"
4971300,4974180," so dead"
4974180,4976820," there we go yeah so dead code elimination"
4976820,4980980," i'm thinking what if i enable this thing"
4980980,4985460," can it get rid of the linear memory if i never use it"
4985460,4989220," that's a very good point actually"
4989220,4996500," so i'd like if it illuminates that maybe i'll never have to create that and maybe it also will"
4997220,5006980," um yeah dc is on by default but how is it on by default when i suppose default is going to be zero"
5006980,5008500," and there is no default in here"
5008500,5015700," like there is a default here but there is no default in here how is that possible"
5015700,5021860," like i don't see this any default so that's weird i don't think so i think default is known"
5023700,5030180," i have a strange feeling that default is known anyway so let's go to first"
5030180,5038260," and bo and let's say all eliminate all everything that is not used gone"
5041140,5048980," i hope it to join first and let me see so here is awesome detection"
5048980,5052100," as i'm detected as i'm detected"
5052100,5063060," so and then building here um so interestingly is that i still want to do the thing where i convert"
5063860,5066660," um this stuff"
5066660,5075620," to wasm to what in fact because i want to be able to see what's going on in there"
5075620,5086020," so this wasm is not needed but this one uh still have linear memory"
5087300,5094740," i wonder if the linear memory memory because i include some stuff right so what if i remove this"
5094740,5104420," entire thing right and then i just try to compile it which by the way got rid of the print so definitely"
5104420,5109940," we have less uh all these things uh and then yeah i didn't want to do that"
5109940,5122580," okay okay so that's way smaller that is what it's it still contains this linear and it also has this"
5122580,5127540," stable indirect indirect function table i see i don't really know what the hell it is"
5128260,5136580," and also there's this global thingy um"
5136580,5154580," all right so let's just create that um"
5156900,5159860," new web assembly memory"
5159860,5164580," so memory descriptor is an object"
5164580,5171380," initial yeah we can say initial i'm gonna say two"
5171380,5178020," oh geez okay"
5178020,5184260," so then we need to create table with the assembly table"
5186900,5198820," i wonder there's a lot of things in the build stuff there's a lot of things like erase bounce"
5198820,5204260," check cast bounce check what if i like disable all that um"
5204260,5212500," stack traces out of the reference i'm pretty sure it generates a lot of like runtime"
5213620,5222660," um so what if we just like don't do that will reduce it even further right because we want to like as"
5222660,5230180," little runtime as possible so i think it's a good idea actually uh let me go there and just like disable"
5230180,5231540," as much as much as possible in here"
5231540,5240820," so all that is false so this stuff i suppose needs to be disabled"
5242900,5259540," uh array bounce check uh uh so back end machine type"
5259540,5266180," emit debugging for okay so emit debugging for is definitely something that we'll have to disable"
5267220,5271380," so here's your data i guess that's it i don't think"
5271380,5277380," anything else here is in it um so this one is"
5277380,5300100," uh so this is very unsafe language now"
5304820,5309620," extremely unsafe in fact absolutely unsafe"
5309620,5324660," so maybe we want to also remove these comments and uh this one is going to be"
5324660,5332420," none none of the debug info as little as possible"
5334820,5344180," cool cool um so now let's try to recompile this thing and it was actually super fast look at that"
5344180,5352660," so this entire thing is rather small and what do we have in here"
5352660,5357700," oh we have some stuff in here but it compiled anyway"
5358900,5367060," it compiled anyway okay so that actually reduced it i think i don't know did reduce anything i know"
5367060,5376340," so new web assembly table i don't really know how to create tables but we'll see we'll see"
5383460,5387540," how the earth shouldn't do anything around time i'll disable it just in case"
5387540,5396980," come on you can do that all right"
5396980,5405460," i wish i'm a table i never actually used web assembly tables to be fair i'm not really sure how they work"
5405460,5413940," and what they're for um so table descriptor so it needs an element the string representing the type"
5413940,5419540," well to bestow there these have a value of any funk or extern ref"
5424260,5434100," the type of a value uh initial number of the elements of the table so i would presume this is the like funk ref then"
5434100,5438660," sure um so let me do"
5441860,5456340," uh so load the j s j s new web assembly uh table and the description in here is what element an element"
5456340,5466020," is any funk right so any funk and initial uh let's say 69 right we're gonna have 69 of them"
5467060,5477540," okay so let's see if that worked uh load j s uh stack point uh import it must be"
5477540,5485780," okay web assembly global i didn't know it's a thing wait it is in fact a thing crazy new global variable"
5485780,5492100," huh i'm actually learning things right now descriptor value"
5493380,5497940," uh-huh"
5497940,5505060," so stack pointer which is rather interesting because"
5505060,5514020," do we even have any memory anywhere right i'm actually kind of scared to now"
5518340,5525140," new web assembly global"
5525140,5527940," descriptor"
5527940,5534900," a string all right so the type of this thing has to be"
5534900,5539460," i thought it's all right so this is i32"
5539460,5545060," uh mutable uh value that defines if it's mutable i think it has to be"
5546020,5553620," false right by default it's false maybe that means you don't have to do that uh then the value"
5553620,5558100," let's let's put zero in here just in case because why not"
5558100,5560580," okay"
5560580,5566180," import mutable global must be global object"
5568420,5577940," uh oh yeah yeah i'm already a bit tired so i'm a researcher uh okay does not match the expected"
5577940,5581700," mutability okay mutable true"
5584580,5594660," okay we successfully loaded web assembly module generated by like from jay essentially so we managed"
5594660,5600900," to do that successfully okay uh so the thing we need in here we need to take a look into the instance"
5600900,5606260," right so let's take a look at the instance so here's the instance as far as i know instance should provide"
5606260,5616180," experts right uh and there is no experts in here and that is very important that is extremely important"
5618660,5627220," uh"
5627220,5630180," because"
5630180,5637300," usually uh i export all of the functions"
5640180,5647140," uh export all of the functions might be that code that is removed i don't think it is a dead code"
5647140,5654180," uh because here it is here's the main problem i don't think it got removed um"
5654180,5665140," so usually i export all the functions and i export them by the linker right so i export them via the linker"
5665620,5668260," essentially um"
5668260,5683540," i take wasm ld target um actually wasm32 and then i say no entry and export all uh and"
5683540,5687220," something like this"
5687220,5692180," and maybe i output that to"
5695620,5696180," um"
5696180,5698260," main dot wasn't"
5698260,5699220," all right"
5699220,5705380," so this is what i usually do but it may not work"
5705380,5709460," yeah so because of the invalid offset"
5709460,5713860," and remember that i fixed that invalid offset by doing this thing"
5713860,5716820," right and converted and converting it back"
5716820,5720020," right essentially converting it back"
5724900,5727860," so what to wasm"
5727860,5734340," what to wasm also relocatable"
5734340,5738500," and that should give me that thing which i then can try to"
5738500,5741780," invalidate the symbol offset"
5741780,5750020," so i remember i tried to do that with a different version of clang i think the version of clang may"
5750020,5755860," actually play a huge role in here so let me try a different one so"
5755860,5762900," i think i i do have the 13th version somewhere"
5762900,5768820," you're still thinking oh i know that because this thing generates o"
5771460,5778420," so it replaces the o as far as you can tell though uh just a second"
5778420,5791140," what to uh wasm i want to take a look so output file i can provide the output so it's going to be that"
5792580,5797140," fixed"
5797140,5808420," okay so something like that i think that's a good idea so and i'm going to do"
5812500,5813300," okay so we got that"
5813300,5813300," so we got that"
5813300,5821620," yeah uh you create the fixed one yes it did in fact create the fixed one"
5821620,5825540," and here it is so for the fixed one i would also like to"
5825540,5832260," you know output the fixed version because i want to just see what's up with that"
5835460,5838340," right so did it get fixed or anything"
5838340,5843620," so this is what of the fixed"
5843620,5853620," and it didn't really change much so uh let me let me just search i think i do have a little bit"
5853620,5867780," a little bit fresher clang um let me quickly copy it"
5867780,5881780," 13th we need the 13th okay"
5883620,5887780," interesting"
5887780,5895780," interesting"
5914580,5915380," that's all the stuff"
5915380,5933780," a little vm classic little vm"
5941220,5954500," okay so i'm going to check the chats"
5954500,5956980," um"
5971220,5976500," i think it's a chunky boy yeah it is indeed"
5976500,5978500," the chunky boy yeah it is indeed"
5978500,5985220," oh"
5985220,5988100," shit so many things"
5994820,6001220," okay okay so it's finished finally okay so let's go here and i think i'm going to do the following"
6001220,6006740," thing i'm going to create like a little vm version and i'm going to just put this thing in there"
6008980,6021780," i'm going to do this thing in there and then i'm going to have like a 13th one"
6021780,6027220," come on why is everything so slow"
6027220,6035060," okay so i'm using the 11th version okay that's cool and now i'm going to switch to a different version"
6036260,6042340," okay okay okay cool this is what i wanted"
6042340,6049540," yes you know why because now it's a checkmate"
6049540,6060900," i can now do allow undefined right because all the undefined are the external functions right so i was"
6060900,6068420," using the old clang and this mother flipper works now look at that um so this is the fixed version"
6069860,6079140," and um i might as well actually do i need to fix that i feel like i'm fixing too much right"
6082260,6083860," so let's take a look at the main"
6083860,6094820," okay no such ready okay yeah so if we take a look at the main"
6094820,6106900," yes when you do it this way uh the linear memory it doesn't even have a linear memory any memory that it"
6106900,6115860," has okay so and then you have a stack stack pointer right so this is a stack pointer and it's actually"
6115860,6123700," a local internal thing okay that is actually perfect um i wonder if we need to fix anything"
6124420,6130500," all right so what if i link a not fixed version can i just do that i wonder"
6130500,6140500," uh no i can't i i literally have to fix it first yeah yeah so the way to fix that is actually to"
6140500,6146900," generate what out of that and then back into wasm that sort of i think that resets something"
6147460,6154340," right and makes it correct so it fixes something there but i don't know what exactly uh right"
6154340,6160980," anyway so loljs and i think i'm gonna actually start over uh right i'm gonna"
6160980,6172260," take these imports right so this is the import and maybe that was a bad idea because i will have to"
6172260,6174740," yeah i'll have to do that again"
6177460,6179460," uh so we don't have that"
6179460,6187780," so right i guess that's it"
6187780,6205220," load js linear memory oh yeah because i'm loading the wrong object okay so i have to uh load main wasn't"
6206500,6211140," okay oh compiling function expected"
6211140,6212580," fuck"
6212580,6217940," boy what"
6217940,6222340," compiling function"
6222340,6234340," okay"
6236500,6239380," uh"
6239380,6241060," uh yep"
6241060,6241060," yep"
6241060,6244980," uh main fixed"
6244980,6249060," all right so"
6249060,6254340," what wasn't right so that may actually work"
6254340,6259620," okay so now"
6264020,6264580," fixed"
6264580,6264580," fixed"
6264580,6264580," fixed"
6264580,6267380," node"
6267380,6269380," okay"
6269380,6271380," load it"
6271380,6278740," here are all of the functions in there look at that shit look at that shit"
6278740,6280020," okay"
6280020,6284580," so uh now we we may try to actually"
6284580,6289220," like write some functions that do things right for instance"
6290580,6296180," i don't know i don't know let's introduce a function something like sum right and i'm gonna say"
6296180,6299540," it's gonna accept it's going to accept uh i32"
6299540,6304820," bi32 and then return i32 i'm not sure"
6304820,6312260," do we have okay so we have a u32 i suppose and here i'm gonna just do something like this cool"
6312900,6320420," so after that i'm going to just compile this entire thing right and then rebuild the entire stuff in"
6320420,6329460," here right and then if i load the uh the thing do i have some in here i don't have some in here"
6329460,6336820," here because i feel like it was eliminated um so let's actually not do the dead code elimination"
6336820,6343140," um let's actually do that all right and one more time i'm gonna do that"
6344980,6350580," then i'm gonna do that okay then i'm gonna do"
6350580,6359300," node load js"
6359300,6367700," some we've got some so it's kind of like mangled a little bit it's a little bit mangled"
6370260,6379620," but let me try to find that so here is the sum the weird thing about sum is that i said"
6379620,6388580," accept two arguments but it accepts four what's up with that so do we have any jai developers in the"
6388580,6395700," chat so i said uh accept two arguments but it accepts four of them it's actually really interesting"
6396420,6398260," what's up with four arguments in here"
6398260,6406020," context yes people know about context so one of the arguments is actually pointed to the context"
6406020,6414980," right so one of the things we can do um is say no context right so as far as i know this sort of"
6414980,6419940," thing uh tells the compiler to do not uh you know pass any context"
6422020,6427460," uh all right and so let's try to do it one more time"
6427460,6432340," and let's rebuild everything"
6432340,6445460," so revert and sum here is so now it accepts three right so what's the third one you might notice that"
6445460,6456340," it doesn't return anything so the um the result apparently is returned why the arguments so if"
6456340,6463940," the result is returned why the argument that means that the argument is a pointer somewhere in the memory"
6463940,6472580," right so let's actually try to to call this function and see what's going to happen uh so i'm going to go to load js"
6474020,6483940," run and so it's experts and it's going to be sum uh is it the same sum yeah so it's it's that sum"
6483940,6490500," 23 16. so by the way this prefix actually changes every time you recompile the program so"
6490500,6495460," you probably if you're going to do like that uh why the javascript you probably want to write some code"
6495460,6501460," that searches for the function right that sort of resolves the function uh okay so we're going to provide the"
6501460,6508100," following thing i'm going to provide uh 34 and 35 and i'm going to put zero in here so i want i'm"
6508100,6515700," going to assume that the result is the third argument right and the return address is going to be zero"
6515700,6521060," so that means it's going to write the result at the beginning of the memory right so let's actually"
6521060,6526500," confirm that it doesn't crash when i try to run the entire thing right so this is going to be a little js"
6526500,6533140," so it doesn't crash which is nice uh then let's take a look at the memory uh right so we're going to have"
6533140,6540420," experts we should have uh memory i'm pretty sure so let's try to do uh console log"
6542580,6549380," yeah we do have a memory so let's actually uh look at it as a buffer and then also since it's a u32"
6549380,6553780," we're going to construct u32 array out of that right"
6553780,6566420," we just successfully compiled a very simple basic function"
6566420,6574660," in jai written in jai to web assembly loaded it into the node.js context and run it and it worked"
6576820,6585060," so we successfully did that the question is can we do the same in the browser can browser actually do"
6585060,6593300," that that's a very good question uh so let me see so let's actually create index.html right so index.html"
6593300,6597140," uh html"
6598900,6613220," so it's going to be head uh head so title title title uh joy wasm uh so then"
6613220,6625940," this is how we get kicked from the bat sure uh so let's actually just uh do it like this index.js"
6627140,6635700," script there we go so we should have that so and in here it's essentially instead of doing that"
6635700,6642660," right instead of doing that we probably have to do fetch right and that's basically the same"
6642660,6649780," right uh but the only difference here is that we also have to write um around the the python thing"
6649780,6662820," so we need to do that so let's go there uh and let's open the dev tools uh so we failed to load"
6662820,6673220," what i can't see in this list um index.js so this is because it's not index.js it's a load.js"
6676180,6683700," okay instantiates buffer source oh i know why because if like fetch returns the promise so it"
6683700,6691380," means you have to instantiate string i think there we go 69 it also works in the browser"
6694260,6705620," i just run a jay code in a browser okay thank you very much this was my last beta right so what was"
6705620,6718260," what was my last beta uh so um so version uh just a second 27th right so 27th was my last beta i'm not"
6718260,6725940," gonna get any more better after that but yeah so i managed to run jay code in the browser which is"
6725940,6730420," actually pretty cool so i wonder like i think i could do something like this can i just like"
6730420,6737780," say zero right uh okay so i probably have to do something um"
6739780,6747060," to two to two so let's run the thing here yeah 69 there we go it's pretty cool so but it's a very"
6747060,6751860," simple code it's extremely simple code it doesn't really interact too much with different environment"
6751860,6763380," but yeah um so yeah so the next step is to actually port the game the jay break game to web assembly"
6763380,6768580," right and i think i'm gonna do that on the next stream because i'm ready stream for two hours and it's"
6768580,6774820," usually my my quarter two hours um okay does anyone have any questions"
6774820,6786180," i think i need to actually publish all of that stuff somehow i'm not really sure how"
6786180,6790660," what would be the most appropriate way to do that"
6794100,6801460," so for excel snatic thank you so much for tier one subscription thank you thank you thank you i really"
6801460,6809620," appreciate that uh so yeah i wonder like this is a very simple example it's literally"
6809620,6816500," like two plus two but if you start adding more different things that rely more and more on the jay"
6816500,6823380," runtime uh you're probably gonna have more and more problems right so you may start uh relying on things"
6823380,6829780," that require any of these functions right so because of that you want to organize the game"
6829780,6837700," so that you don't really need anything in here except maybe mem set so i'm actually okay with using mem set"
6837700,6844100," uh but the entire logic of the game has to not depend on any of this stuff especially p threats like what"
6844100,6848820," the fuck all right so all that p threats things"
6848820,6860340," uh we can write this one yeah we can so essentially mem set will accept the pointer to the memory"
6860340,6868020," and what we'll have to do we'll have to literally get this buffer right and initialize the range of that"
6868020,6876340," buffer with the provided value right so essentially we implementing like a small portion of libc in javascript"
6876340,6884420," it sounds crazy but that's 2022 uh software development essentially you're just implementing"
6884420,6893940," like a low level stuff in javascript um it's kind of weird how the entire stack i really hate this word"
6893940,6901380," but the entire stack uh sort of like turned upside down like at the low level you have javascript"
6901380,6910580," and at higher level you have c for instance right so and down the stack c calls to javascript for a low"
6910580,6924180," level functions that's great um yeah anyway so what would be the best way to you know provide this"
6924180,6930740," thing i don't know so this is a this is a lot of like converting back and forth back and forth just to"
6930740,6960500," fix things like somehow i feel like i want to take this stuff so it's a build this age index"
6960980,6971780," and i want to like move this thing in here all right uh build wasm right so we do build wasm"
6971780,6983140," so in here we're trying to compile uh this thing right so we not well iapt build so we're compiling this"
6983140,6987780," thing so we can try to do this thing so this is a wasn't giant uh all right"
6987780,6993460," and that should be it actually i think"
6993460,6998500," okay so if i do build"
6998500,7011060," okay so all right cool so it did everything i expected to do and we can try to initialize the the"
7011060,7015300," repo right so let's see what we have to commit in here"
7015300,7025060," git ignore so we're gonna ignore build folder right build folder uh what else"
7025060,7036100," any wasm file is ignored any what file is ignored any o file is ignored as well so we only have that stuff"
7036740,7045380," um wasm jay is also ignored so we only have this stuff okay so i'm gonna also write read me"
7051540,7063060," simple um jay to wasm simple jay to wasm simple jay to wasm example right so in here i'm gonna have quick"
7063060,7065220," starts um"
7065220,7073140," i need to find the version"
7075140,7077060," so here's the version that we use"
7077060,7095700," then jay first then build wasmsh then python 3 http server 69 69"
7096420,7111220," then i explore exe um http localhost 69 69 so that's basically it right uh license so it's gonna"
7111220,7117300," be under mit you can do whatever you want with it and there you go i hope i didn't miss anything"
7118500,7129140," uh ready set a go okay and let's just upload that all right so for anyone to try out"
7135540,7141780," but again i'm not sure if it's gonna work with a more complicated example maybe it won't"
7141780,7151940," maybe the only thing you can do in here is just like sum up two numbers"
7151940,7158980," um oh yeah this wasn't true thing you need to patch"
7162580,7187380," yeah make sure none of the uh make sure the file program does not contain any inline assembly uh blocks"
7189220,7193780," does not contain any other blocks or something like that"
7193780,7212740," the ji first ji command should tell you their location go there and remove them remove um"
7214580,7215300," we implement"
7215300,7217620," i don't know"
7217620,7222740," uh and do something with them"
7222740,7224980," um okay"
7224980,7233460," i don't know all that is extremely hacky right all that is extremely hacky i can try to"
7233460,7237380," uh maybe make a patch"
7241460,7243540," yeah i can try"
7243540,7246900," try to make a patch"
7246900,7254260," um so let me see let me see opt so here's j"
7254260,7263300," so patched so this is patched one and what about this one i'm gonna unzip this thing"
7269620,7274500," can i like do a div between folders with the difficulty i think i should be able to"
7274500,7292660," all right so div u j and then j patched is that a thing you can do common subdirectories"
7294660,7299140," oh okay okay linux div folders"
7299140,7305540," i have one difference between two directions isn't this okay so maybe there's something like"
7305540,7311780," recursive maybe minus r flag you know what i mean it should be minus r flag"
7316020,7320500," minus r"
7320500,7322340," yeah it is a thing holy okay"
7322340,7328580," okay come on you can do that"
7328580,7333620," uh yep it is a thing"
7333620,7341940," so on top of that like i'm not sure about this one so maybe it's not particularly useful for a lot of"
7341940,7346740," people but yeah no other patch"
7346740,7349620," giant no puzzle patch"
7349620,7356020," okay i'm driving no hasn't patched there we go so here's the patch"
7356020,7362020," battle that how about that i don't even have to explain what to do just like provide this thing"
7362900,7367620," um so this one is not particularly useful but i'm going to skip just in case"
7367620,7380580," so the question is how are we gonna do that right"
7384260,7390900," apply apply uh giant no awesome patch"
7390900,7398500," to your giant"
7398500,7401540," distribution"
7408660,7415780," it tries to get rid of the uh of awesome blocks"
7415780,7427220," because they are not compilable to wasm okay um first"
7431700,7437060," okay add giant no awesome"
7437060,7440260," patch"
7440260,7444660," so did i actually push"
7444660,7449300," uh i think i didn't push there yet"
7449300,7453620," origin okay"
7457380,7459540," do we push there we didn't push there yet"
7459540,7466020," cool"
7466020,7475220," now give it a try if you want to i'm not sure if it works on anyone else machine except mine so"
7475220,7483700," oh yeah it's pretty funny so yeah i'm also going to put that in the description for anyone who's"
7483700,7484740," interested in this stuff"
7484740,7490660," which i break for uh right so there you go"
7490660,7492900," cool isn't it"
7492900,7498740," wouldn't the build program that checks for awesome blocks be easier"
7498740,7503460," build problem the chat for other blocks if it's easier go ahead and do that i'm sure"
7503460,7510100," uh can the patch file be shared i i just shared it so here it is here's the patch file"
7512100,7521300," uh 11 version 11 version is known from the build right so you can know all of the versions uh from"
7521300,7530180," here lvm and wabbit as well so so i think i actually published all of the necessary information to"
7530180,7535940," recreate this experiment right so you know all the versions you have the patch that i had you know the"
7535940,7541540," version of the ji so you've got all the scripts and stuff like that i think i shared everything to"
7541540,7547860," recreate that it's not it it doesn't really work out of the box because like this script probably won't"
7547860,7552580," work on your machine unless you have these things in these specific paths well yeah"
7552580,7568180," all right so cool i hope this is going to be useful for somebody right i think it was a very interesting"
7568180,7578340," experiment nonetheless um yeah so i think i documented the entire process right i documented the entire"
7578340,7584660," process i don't have any questions maybe uh regarding regarding what we've done"
7584660,7594340," i really want to try this approach on the game right so but i think it's going to be a little bit more"
7594340,7600980," complicated so to do that on the game first i'll have to extract the logic of the game into separate module"
7600980,7603620," and let's see how we go"
7603620,7611300," so any idea when my next stream will be i i don't know like i don't really have any particular schedule"
7611300,7615140," i usually stream when i feel like it so it's really difficult to predict"
7617300,7622020," um um okay it's actually pretty interesting"
7622020,7632980," um can you explain how memory works it remembers things"
7638740,7645540," so which memory like uh web assembly memory it's usually just an array of bytes that is shared between"
7645540,7651620," the web assembly program and the javascript so and if you modify it in javascript the web assembly will"
7651620,7662580," be able to see that um how would you interact with html components from the code like a text box or instance"
7663140,7672100," so usually the usual way you interact with html from web assembly is you import a function right"
7672100,7682340," uh let me see where is the little js right so you import the function uh maybe i'm going to come up with"
7682340,7690500," a function something like get element by id right and then i'm going to implement it somehow i'm basically"
7690500,7697380," going to wrap document uh get element by id then somewhere in the gi code i'm going to define a function"
7697380,7707860," get element by id right and i'm going to say that it's some sort of foreign function right so then"
7707860,7714900," when i compile it when i compile it will appear in the imports of the"
7718260,7725060," of this module and then once the web assembly code calls to this function it will go into the javascript"
7725060,7731060," context and will do this thing so that's how we usually do that in web assembly and i don't think"
7731060,7739780," it's that different from like from jive right so we just need to see how malloc and memset are defined"
7739780,7744340," right so we can probably do that right now upt giant modules"
7744340,7750820," so memset how is it defined"
7750820,7754580," so intrinsic"
7754580,7760340," maybe we can just say it's intrinsic i wonder if we can just go ahead and do that"
7763140,7769060," so maintain uh so main uh so let's say fool and"
7769060,7778420," let's accept something and say intrinsic maybe it's not gonna work actually i have a strange feeling"
7778420,7780580," that it's not gonna work uh but"
7782820,7792580," um i'm already tired being giant first didn't fail though which is nice"
7792580,7794260," um"
7794260,7798740," now if i try to build"
7798740,7804180," couldn't oh"
7806820,7810980," well we're starting to get some problems but yeah i'll need to research that a little bit later"
7810980,7812580," i don't really know how to"
7812580,7819700," say from jai that i want to import a particular function from the environment so i can use it"
7826900,7832580," uh so and it wasn't what what version of wabbit version of wabbit is actually literally here"
7832580,7837620," this one 1.0 point"
7837620,7849300," do you switch back to the modifier oh yeah thank you i mean it's yeah i just yeah so i have to use patched"
7849300,7856820," there we go so thank you so much here it's it's a patched one and the patched one worked so now"
7856820,7866660," if i take a look at the main fixed it's actually i think main what do i have four in here maybe"
7866660,7880660," food was actually removed so i think i should try to do something like 469 and try to compile that one more time"
7882820,7889380," okay uh actually no you know what can i do something like this"
7893380,7896020," jay uh first j"
7896020,7903220," jay patched"
7903220,7912660," okay"
7912660,7919780," and no an intrinsic food doesn't is not going to work what if i say it's a foreign"
7923300,7933140," does not specify which library um"
7933140,7933140," um"
7933140,7933140," um"
7933140,7935140," um"
7935140,7937140," um"
7937140,7937140," um"
7937140,7957860," oh this one is rather interesting so it expects malloc but the malloc is never declared anywhere"
7959620,7962420," okay so that means it's something like a very internal to"
7962420,7965380," i don't know"
7965380,7972020," so what about some of these functions like lock"
7972820,7982660," uh"
7982660,7984660," um"
7984660,7984660," um"
7984660,7986660," okay can we say lipc then"
7986660,7998500," uh"
7998500,7998500," um"
7998500,7998500," and declared"
7998500,7998500," wait"
7998500,7998500," um"
7998500,8002500," i kind of lost"
8002500,8006820," i kind of lost"
8006820,8010100," uh"
8010100,8011140," just a second"
8011140,8012340," or pt"
8012340,8013620," giji modules"
8013620,8014660," grab"
8014660,8025220," by the way why don't i have it like that"
8025220,8029140," or six"
8029140,8033540," yeah it should just work i think but it didn't"
8034660,8037460," because it's not available there"
8037460,8038020," because it's not available there"
8038020,8040020," that's probably why"
8040020,8044500," undeclared identifier lipc"
8044500,8047620," which is"
8047620,8049780," rather weird"
8050340,8051620," where is it"
8051620,8052340," defined"
8052340,8056420," i don't know"
8056420,8056820," okay"
8056820,8057220," we'll see"
8057220,8062260," no return type i mean it doesn't really have to have any return time"
8069460,8075460," how hard would it be to add typescript dtts generation to this for the js glue why"
8075460,8088420," i don't know it's not really that i'm like looking for it's not what i'm looking for"
8088420,8090740," so i have no idea how hard would it be"
8090740,8094580," all right"
8094580,8099300," so i guess that's it for today thanks everyone who's watching right now"
8099780,8104420," i really appreciate that uh have a good one and i see you on the next stream where"
8104420,8107940," we're going to try to apply this approach to the"
8107940,8114500," to the game to the actual game we'll see how it goes so i'm really sorry that i was super sleepy"
8114500,8121060," today because my sleeping schedule has shifted and now during this time i'm usually i'm usually"
8121060,8126900," sleeping so i'm actually forcing myself to stream to shift my schedule again so maybe hopefully"
8128180,8131060," next stream i'm going to be a little bit more energetic you know what i mean"
8131060,8134420," all right thanks everyone for watching love you"
8134420,8139300," you"
8139300,8139300," you"

start,end,text
0,6180," Hello everyone and welcome to yet another recreational programming session with Ahu Amista"
6180,13300," Azuzin. So today I wanted to take a look at SDL 3. Right, so for those who doesn't know, SDL is a"
13300,18700," simple direct media layer, right, so it's a cross-platform library for multimedia applications,"
18700,25120," right, so it's basically what it says in the name, right, so the kind of the goal of SDL is to"
25120,30040," abstract away everything that is related to multimedia, right, so for example creating a"
30040,36960," window, doing graphics and stuff like that, processing the input and doing the sound and"
36960,43440," like everything you need for a multimedia application, right, and what's interesting is that"
43440,51280," on the graphical part, it's actually rather limited, right, because it's trying to be cross-platform,"
51280,58320," so it has to work on Windows, it has to work on Linux, it has to work on macOS, it works on pretty"
58320,63920," much all of the POSIX operating system, like it supports a lot of different platforms, right, and"
63920,71380," because of that, by itself, it cannot do more than the intersection of all these platforms, right, so"
71380,77320," and because of that, in terms of graphics, it's very limited. To be fair, SDL 2, which is the main sort of"
77320,85320," like a primary version of SDL, is so limited that nobody really uses SDL, like the SDL capabilities for"
85320,93960," graphics, everyone's just using SDL as a glorified OpenGL initializer, and people just use OpenGL instead,"
93960,102280," right, so essentially people just use it as a GLFW replacement, which GLFW by itself was designed to be just"
102280,109800," the OpenGL initializing, so yeah, but I mean, on top of just initializing OpenGL, it's really great for,"
109800,116040," again, the other things like input, sound, I think it even has networking capabilities, like I don't"
116040,120040," remember, it supports a lot of things, it's basically like everything that you need to make a game,"
120040,125960," but it's not an engine, right, so it's not an engine, this is something that should build your engine on top,"
125960,132840," In fact, as far as I know, I think Unreal Engine uses SDL, right, so it just initializes the window and graphic"
132840,139720," and OpenGL and whatnot with the SDL, but I might be wrong on that, right, so I never used Unreal Engine,"
139720,146680," I know nothing about Unreal Engine. So anyway, recently, for quite some time actually, not recently,"
146680,153960," for quite some time, the developers of SDL were working on SDL 3, right, so the main version was SDL 2,"
153960,161480," and now they're working on SDL 3, and it's not out yet, so it's sort of like in a pre-release,"
161480,168440," in a pre-release state, and it's been like that for quite some time already, and I'm actually patiently"
168440,175160," waiting until it comes out, I'm not sure if it will come out before Half-Life 3, but eventually it will"
175160,185480," come out. SDL 3, Half-Life 3, is SDL developed by Valve or something? Anyway, so yeah, even RayLib, as of"
185480,193000," recently, actually started to support SDL as one of the backends, right, RayLib actually uses, can use"
193000,201400," several OpenGL initializers, like GLFW, SDL 2, and I think in the recent release they added SDL 3, so I"
201400,210520," suppose that SDL 3 is kind of already close to stable, but it's not out yet, so in any case, I decided to"
210520,216680," just like allocate one stream and take a look at the current state of SDL 3 and whether it is better than"
216680,223480," SDL 2, right, whether it fixes all of the problems of SDL 2 and stuff like that, so that's going to be"
223480,229240," basically the point of today's stream, just to take a look at the current state of SDL 3. Sounds good?"
229240,236360," Sounds Guccio? Tamaguccio, let's fucking go. So what I want to do, do I even have SDL 3 on my machine?"
236360,243560," Because I don't really know, right, so I mean we can query and just look for SDL 3, okay, so maybe"
243560,251480," I do have SDL 2, but I don't have SDL 3, so it's not even in repos of void, right, so because it's not out"
251480,255800," yet, so we'll probably have to actually download the source code and build it from the source code."
255800,263000," That's how pre-release it is. Okay, so they keep making releases, but all that is just pre-releases."
264040,274200," So there are some builds though, so there's SDL 3 tar gz. Is that a pre-build? I think it's a pre-build, right,"
274200,280840," so let's actually go ahead and download it. Okay, so in a probe I'm gonna just create SDL 3, right, so and"
280840,289800," let's just download this entire thing. Yep, yep, yep, let's fucking go. How big is it? So I don't see this size,"
289800,296520," it's just 7 megabytes. Okay, so that was actually rather quick. Let's unpack it. The unzipping experience"
296520,302680," is quite nice, I really appreciate that. And is that a source code? Looks like it's just a source code."
303880,311720," Okay. Okay, it looks like I was hoping that it's going to be, you know, a binaries, but it's straight"
311720,315560," up source code. Why do you need like a separate things for the source code if you have source code"
315560,322920," archives automatically generated by GitHub? I don't quite understand. And if it's a source code,"
322920,329320," why is it separated by, it's not really separated by platforms, it's just like, yeah, it's a platform"
329320,334680," neutral. There's also devil in here or something. It feels like they only pre-build it for Windows,"
334680,340040," but not for Linux plebs, right? Is that the case? Do they pre-build it for me? Let's actually check it."
340040,345560," Let's actually download the Windows version and see if they discriminate based on the operating system."
345560,348360," I swear to God if they discriminate me based on the operating system."
349560,353800," I'm going to complain. I'm going to fucking complain. Okay. So, uh, I'm going to wait, wait, wait, wait, wait."
353800,357080," It's actually quite funny."
357080,367720," Honestly, I expected fucking anything except just a single DLL."
367720,371640," Bro, give me at least header files. Like, what the fuck is this shit?"
376280,383800," This is so fucking funny. Linux uses. Fuck you. Build it from source code. Windows uses. Fuck you as well."
383800,389320," Here's the single DLL. No headers file. Fuck you all. Okay. I really appreciate that."
389320,394360," They do not discriminate anyone. Fuck everybody without any discrimination."
394360,396440," I really fucking appreciate that. Okay, cool."
399320,405240," Let's actually try to build the shit from scratch. Uh, so this is CMake, right? Look at that. Node.zeek."
405240,411080," They didn't accept your little pull request with your little zeek file."
411080,413480," Anyway, so that's actually great."
413480,419640," I wonder if somebody tried to actually submit build.zeek to SDL."
419640,425720," That would have been funny. Anyway, so let's see how many additional dependencies we have to install."
427080,433640," Uh, all right. So far, so good. So far, so good. Look at that. A lot of founds. It's checking each individual math function."
433640,437880," Why? What the fuck are you doing there?"
437880,448200," I never understood this kind of like a configuration steps that like check individual functions and shit like that."
448200,455160," Okay, so it didn't fail at least. So, uh, shared library. Can I build a static library as well?"
455160,460760," I kind of want to build a static library. So do we have like a, like a cache static?"
460760,465240," Uh, yeah. I don't fucking know. Static."
465240,467400," It should be okay. Okay. Okay. Okay."
467400,471480," Uh, SDL. So it has to be like a SDL 3."
472040,480840," Uh, static. No. Maybe it has to be SDL 3. Then I do that. And then I search for stuff."
480840,483320," Uh-huh. There's one. And"
483320,487080," maybe we can leave with, um,"
487080,492360," with, with dynamic one. But maybe there's something in CMakeList."
493080,501880," Uh, static. SDL. Static default on. Huh. So static. Uh-huh, uh-huh."
501880,507320," Why it decided to actually not do static? That's really interesting. Because look,"
507320,513640," there is like a default static on. Uh, right. But what's their static? That's, that's kind of bizarre."
513640,519560," Anyway, let me take a look at this kind of thing. Um, build share on, on. But this one is off."
521080,525320," Uh, I don't know what's up with that. I really don't know what's up with that. Um, maybe there is"
525320,530440," something in README. Because I really want to have a static library. But maybe, honestly,"
530440,535480," I think SDL doesn't really work well with dynamic libraries, or with static libraries. So it doesn't"
535480,539080," really make much sense to actually build it statically. So there is an option to do that,"
539080,544680," but you better not do that. Um, right. So let's actually build dynamic and see how it goes. Um,"
545400,555400," install MD. There is no install MD. Uh, there is this one. Static. Uh, nah. I mean,"
555400,561960," nothing particularly special. Anyways, uh, whatever. Let's go ahead and just build that. So let's actually"
561960,566840," build with maybe 10 cores. Uh, hopefully it's not going to kill my entire stream. We can even take a"
566840,574360," look at how badly all of that goes. Uh, right. So does it actually spread the load on like evenly?"
574360,580520," I think it does. Oh, it's already done. Look at that. Look at that shise. It's already done. That's"
580520,585160," pretty cool. Uh, right. So that was faster than I expected. What the fuck?"
587560,593800," I don't remember when was the last time I actually build SDL in general. So, um, I didn't have any"
593800,600200," expectations on the speed of the, of building of the library. So yeah, that's pretty cool. So I suppose"
600200,605240," maybe it makes sense to actually install it somewhere. Um, right. So because right now,"
605240,610520," like I don't even know what is useful in here. So there's a SO files and stuff like that, but maybe"
610520,615480," I also want to have includes and whatnot. Uh, maybe it makes sense to actually install it right now."
615480,620840," It probably uses the prefix that installs in user local. Uh, right. So this is something that I"
620840,625800," probably want to change in here. So I'm going to do cache. Where is the cache? So there should be like"
625800,632840," an install prefix. Yeah. So this is the install prefix, as you can see. And maybe this is something that I"
632840,637640," want to change. Let me reconfigure this entire thing. I'm going to say that the install prefix is"
637640,643640," going to be home opt sdl3. So this is where we're going to install this entire thing. It reconfigured"
643640,648840," everything and let's actually rebuild this entire thing, uh, one more time. Right. Okay. So that"
648840,654440," didn't really require any like full rebuilding of this entire thing. Let's do install. And it actually"
654440,660200," installed it in my home folder in opt. And as you can see, it includes header files. Unlike for windows"
660200,667640," users, windows users don't get any header files. Uh, I'm sorry. So, uh, yeah, so it also contains, uh,"
667640,674120," some test or whatever. Okay. So it's kind of interesting how the entirety of sdl is just like"
674120,680600," a SO file and headers. So that's it. So it's actually a relatively simple library, honestly, relatively"
680600,685720," simple. So let's actually go into the opt where we install this entire thing. Uh, right. So here's"
685720,691880," the libraries and stuff like that. So there's a share licenses. So the license is, I suppose, something"
691880,699000," bsd-ish as far as I can tell. Uh, okay. So include includes, uh, some interesting stuff. We'll go,"
699000,703880," we'll look into that a little bit later and, uh, as so file. Okay. So let's actually take a look at"
703880,710120," that as so file. So it's four megabytes. And what does it depend on? Uh, they don't depend on much,"
710120,717080," I suppose maybe. Yeah, that's kind of interesting. So I suppose it loads all of the other things"
717080,728120," dynamically. Huh? That is very interesting because I remember quite vividly that if you make an sdl2"
728120,733800," application and like link with sdl2 application and stuff like that, your final executable depends on"
733800,739640," shit ton of things. That's what I remember. Uh, we can even try to find sdl2. I'm pretty sure"
739640,748360," it is somewhere in user, uh, lib, also 64 maybe. Right. So let's grab sdl2. Uh, there's not an sdl2,"
748360,755880," but where is it? Uh, we can try to find, wait a second, maybe it's actually has to be"
755880,765720," case insensitive. Oh, it's not connected. Okay. So find in user type file with the name case insensitive"
765720,771960," that contains just sdl. Right. So do we have any, any files in here? Uh, I don't quite remember. Um,"
771960,782360," so, and also ends, uh, with sso. Okay. So there's, there's only one file. Okay. So maybe one of the"
782360,791080," the things we can do so we can just query for sdl, sdl2, right? So here is sdl2 generally, and we"
791080,800280," can do x query, uh, xbps query, just show all of the files of sdl2. Okay. So this is, okay. That was"
800280,805480," weird why I didn't find that, but maybe I'm always just blind or something. Uh, so one of the things I can"
805480,810760," do, I can take a look at this file and I can take a look at LDD. Yeah. Look at that. Look at this"
810760,817000," motherfucker. Look at how many things it depends. Right. So it depends on literally everything."
817000,823720," Right. So, because it's a multimedia like abstraction layer, uh, the dll of sdl3 doesn't depend on"
823720,834120," shit. Uh, it's in, it's in, whatever. We already found it. Um, so that makes me to conclude that"
834120,841720," maybe it actually loads that with like DL open or something. Dependency, however, maybe. So it may be"
841720,848840," like literally dynamically at runtime, just tries to find those DLLs on your system. Right. And maybe if"
848840,855320," some of them missing, it will maybe disable some of the features at, uh, at, at runtime. If that's the"
855320,862680," case, that's kind of fucking based, isn't it? Um, so what happens when is DL three confine? We don't"
862680,867000," know. We haven't tried that. I'm seeing this deal three for the first time people. I've been, I have no"
867000,873000," fucking idea. Okay. Anyway. Uh, so let's actually explore that. Right. So that's interesting. Right."
873000,880440," So this is interesting. Uh, let's go ahead and just try to maybe build something with sdl3. Um,"
880440,888120," yeah. So there is package config in here, right? So do we, should we use a package config?"
888120,892360," I'm not quite sure. I think we should use package config because there's a lot of cool flags in here,"
892360,898520," like our path, right? So our path will make sure that the final executable that we produce will have,"
898520,903640," will find all of the necessary DLLs correctly and stuff like that. So I think we should use"
903640,908280," a package config in this case. We might as well even use like something like CMake, but I'm not in"
908280,914360," the mood of, um, you know, fucking with CMake today. Uh, right. Not in the fucking mood, if you know what"
914360,921560," I mean. Uh, fucky walky. Okay. So, uh, let's maybe have something like hello sdl3, right? So this is"
921560,926760," what we're going to have in here. And I'm going to just create a main.c. Uh, right. So I'm going to just"
926760,936440," include sdl.h because I think that's what's going on in here, right? So yeah, sdl3 and this is just sdl."
936440,942360," Okay. So that's cool. Uh, and let's just go ahead and do the following thing."
942360,949320," So, uh, I'm thinking how we're going to be doing all that. I think I'm going to just create a build.sh,"
949320,959000," uh, right. So this is a build.sh, uh, and, uh, user bin, um, I think it's just the bins, uh, user"
959000,966360," uh, bin bash, right? So let's actually use bash, but maybe, I forgot where is bash located. Yeah,"
966360,973000," it's located in user bin bash. So set xe, uh, and in here I probably need the package config. Do I even have"
973000,980200," package config? Uh, I don't quite remember package package. I do have package config, but I won't be"
980200,985000," able to do something like sdl3 because it doesn't exist, right? So I can't do any of that stuff."
985000,993960," So, oh yeah, I can actually set package config path and point it at, uh, where a pc file for sdl3 is"
993960,1003000," located, right? So sdl3, so it's a share, it's not really a share, uh, lib64, is that where? Yeah,"
1003000,1010840," here it is. Here is the location of the package config configuration, uh, right? So this is what we need"
1010840,1019480," to do in here. So here is the path and, uh, yeah, so this is going to package config like so, uh, home like"
1019480,1027880," this. This is where it's all located and we do package config c flags, uh, sdl3, uh, all right."
1027880,1033560," And let me make it executable and let's just try to run this entire thing. And it didn't like that."
1033560,1040920," I wonder why. Um, right. So is that because, uh, I have to export it? Is that, is that how it works?"
1041720,1050760," Yeah, that's how it works apparently. Uh, huh."
1050760,1060600," Okay. So apparently package config does not normalize, uh, the paths, right? So I think it's a fault of"
1060600,1067480," package config for normalizing the path, for not normalizing the path. Uh, so sdl3, let me take a look."
1067480,1074680," That's just so fucking funny. I really like how funny it is. It's so goofy, uh, as well. Uh, so"
1074680,1082840," yeah. So the c flags, oh, they literally, holy shit. This is part of the prefix in here. That's why I put it"
1082840,1091720," like that. Okay. That's pretty cool. Uh, anyways, so let's actually try to build the whole thing. So it's"
1091720,1096200," going to be main, main. Let's see. It's not the folder of sdl3. It's just like a, it's a weirdness,"
1096200,1100360," I suppose, of package config or some other environment stuff. It's just like, it probably"
1100360,1106120," has nothing to do with sdl3. Uh, I also would like to maybe take a look at what it links with. If you"
1106120,1113160," try to summon the link flags, right? So here are the link flags that we have, right? It provides the path."
1113160,1120920," Then it does the r path and also enable new d tags, whatever the fuck that is. And then links with the"
1120920,1128520," sdl3. Okay. So I think we have pretty much everything we need in here, right? So that's basically going to"
1128520,1132280," be the build. That's basically going to be the build. And let's try to build this in that thing. And it"
1132280,1139800," couldn't find sdl3. So probably because I have to do sdl3 like that and only then it actually finds it."
1139800,1145240," Okay. Let's take a look at the dependencies of domain after that. Yeah. It only depends on sdl3."
1145240,1153000," It literally only depends on sdl3. This is fascinating, right? So if I try to, for example,"
1154360,1161720," just build it with sdl2, right? If I try to build it with sdl2, I want to double check that one more"
1161720,1169000," time. So please forgive me. Uh, right. Just, just want to see the actual difference between sdl3 and sdl2."
1169000,1174600," Right. So the final executable depends on all of the sdl2 depends, right? So it's like, sort of like"
1174600,1180840," a transitive dependencies. In case of sdl3, uh, right. So it doesn't depend on any of the, uh, of the"
1180840,1186360," shit. I swear to God, if this is because I did something wrong with sdl3, it could be actually,"
1186360,1193000," maybe I build it incorrectly. Right. But so far, so good. If I try to run this entire thing, nothing"
1193000,1198840," breaks at least. Okay. So everything seems to be cool. So if I remember correctly, right. So we're"
1198840,1204040," ready to try to write maybe some as well, it actually build. Yeah. So whatever. Um,"
1204040,1210120," so it included the wrong headers, but I mean, it linked with the right library anyway. So it doesn't"
1210120,1217400," matter. So if I remember correctly, there was a sdl init, right? The most British function in sdl universe,"
1217400,1223960," sdl init. Uh, so let's try to build this entity and see how miserably it fails. That's pretty cool."
1223960,1231560," Okay. So, and it fails at sdl3, right? So we have to provide the flag so far, uh, it looks exactly like"
1231560,1238120," sdl2. I don't see much differences in here. So here's the function that we have to call, uh, initialize the"
1238120,1243960," sdl library, uh, init simply forwards the call to init subsystem, blah, blah, blah, blah, blah, blah, blah,"
1243960,1248680," blah, blah, blah. So here's the different subsystems that we want to initialize. Right. So for now,"
1248680,1255240," I suppose we want to initialize sdl init video. Right. So that's what we want to initialize"
1255240,1262280," sdl init video. All right. So let's go ahead and do that. And after that, let's also try to run the entire"
1262280,1267720," thing. And it seems to be working. Right. So it didn't create any windows or anything,"
1267720,1272440," because I suppose to create a window in sdl, you literally have to explicitly create the window."
1272440,1278360," Uh, right. So we also have to do sdl quit, if I remember correctly. Right. So that's, uh, so far,"
1278360,1284920," it's the same on sdl2. Right. So we didn't see much differences in here. Uh, okay. So let me go to,"
1286120,1291480," this is sdl init. Is there something like a create window, uh, create window. There should be some sort"
1291480,1297560," of a function that creates a window. Let's actually literally grab, uh, let's literally grab something"
1297560,1301880," like create window. Right. I'm intentionally not looking at any tutorials or anything like that,"
1301880,1310520," because I kind of want to explore, uh, uh, this entire thing. Right. So there is create window. Okay."
1310520,1316680," So there is a create window and the renderer. Uh, so there's still this weird abstraction,"
1316680,1325240," uh, right for renderers and stuff like that. Um, no spoilers robs you, uh, of the experience. Yeah. So I,"
1325240,1330440," I like to actually not read any spoilers when I explore the library. I just want to see how"
1330440,1336280," self, you know, explorable the library is. Right. Especially if you already know the previous"
1336280,1341240," version and stuff like that, it still has this like weird, uh, abstraction of renderer. So first"
1341240,1345960," you create a window, then you create a renderer though. It has this function, like create window"
1345960,1351480," and the renderer, because that's what you usually do when you work with SDL, but I do not quite remember"
1351480,1358120," did sdl2 have this function or is that a new function? This function was available since this is"
1358120,1365000," a new function. This is literally a new function, right? So sdl2 didn't have that in sdl2. You had to"
1365560,1371800," actually, you know, waste time and first create a window. Then if you didn't know that, uh, you won't"
1371800,1376120," be surprised. Like why can't I render anything in the window? Well, you have to create a renderer for the"
1376120,1381720," window, which is associated with the window and stuff like that. So finally they combine that into a single"
1381720,1390280," function, right? Uh, I swear it had memory is failing me over. Uh, we can just look into the header"
1390280,1397240," somewhere. Well, let's actually go into the include sdl2 and maybe, uh, at least the documentation says"
1397240,1404840," that it's starting from sdl3. Oh, okay. They, they had it. Okay. So that means I just didn't know about that."
1404840,1414280," So maybe the, the signature has changed. Uh, I don't freaking know, honestly. Uh, maybe, maybe it changed. Maybe it did not change."
1414280,1423320," It looks the same. It's why does it say it's like available since 3.1 or something? Uh, that's bizarre."
1423320,1430040," Honestly, that's bizarre. So, okay. Let's go ahead and maybe you just try to create a freaking window"
1430040,1439880," brush keys. Okay. So let's actually create the title. So hello sdl3. So let's put something like 800 and 600."
1439880,1447000," The windows flags, uh, right. What kind of window flags do we have in here? Uh, let's grab for this thing"
1447000,1455080," and see what available flags we have. So here's one flag. Okay. So do we want to do OpenGL or anything like"
1455080,1460920," that? Um, I remember there was like, um, maybe hardware acceleration. I think hardware acceleration"
1460920,1467720," for, was for the, for the renderer. Uh, but I don't see anything useful for us in here. So I suppose I'm"
1467720,1473960," going to put zero in, in, in there, right? So we're going to put zero. So, and here, as you can see,"
1473960,1481480," it's a double pointer. That means we have to probably create like these kind of variables, right? And"
1482760,1489880," SDL is going to return those variables for us. Renderer, like so. Okay. Uh, and we have to do"
1489880,1498840," something like this. Okay. So yeah. So the question is, is it going to now create the window? Right. It's"
1498840,1503880," not going to maintain the window, but there was a bleep. There was a bleep. There was a little bit of a"
1503880,1510280," bleep. That's pretty cool. Honestly, that is actually pretty cool. Uh, right. So I suppose now, uh, what we have"
1510280,1515160," to do, we have to organize the sort of like a loop, uh, right. So it's actually going to have some sort"
1515160,1520520," of a variable, right? So, which we're going to set to true when we encounter like SDL quit event or"
1520520,1529480," something. Uh, right. So while not quit, and there should be some sort of like, um, and like pulling an"
1529480,1535640," event or something. I don't quite remember. I haven't worked with SDL for quite some time already. So, so far,"
1535640,1542520," it's literally SDL too. Like, I have no idea why they needed like a major version that is backward"
1542520,1549320," incompatible, I presume. So maybe they added more like, uh, functions for primitives, right? Because"
1549320,1553560," one of the things I remember, SDL didn't really have that many functions for different primitives"
1553560,1559400," and stuff like that. Maybe it's now as feature for us, for example, ready. Who knows? I don't freaking know."
1559400,1564600," We'll see. We'll see. Uh, right. So let me, let me actually take a look at this entire stuff. So what I"
1564600,1569640," wanted actually, uh, yeah, I wanted to pull the events. So it should, should be something like, um,"
1569640,1578680," poll events. Uh, okay. So there's a pump events. Okay. So here is the poll events. Uh, that's pretty cool."
1578680,1592520," So the way it works. SDL, uh, events, uh, here's the events and we're pulling the event. I don't"
1592520,1601320," remember what it returns. So the return true. If this got an event or false, if there are no, uh, non available."
1601320,1608520," So essentially you usually have like a separate loop in here that sort of drains the, uh, the poll queue,"
1608520,1613240," right? So we're pulling the events while they're available and we're looking for different events."
1613240,1620600," And if I remember correctly, uh, event has like a type field, right? So it has a type here. It is."
1620600,1627800," Look at that. So here's the type. And one of them is, I think, SDL quit, right? So there is SDL quit"
1627800,1635880," event of some sort. We can even grab it. SDL quit. Uh, here it is. Right. So SDL quit. So you receive"
1635880,1642680," this, um, event when the user closed the window or something like that. So if event, um, you know,"
1642680,1648840," type equal SDL quit, in our case, we can just put quit to true. And that's about it. So usually here,"
1648840,1654840," I suppose what you have to do, you have to like initialize, maybe just draw some stuff, right?"
1654840,1659400," And then swap the, uh, the buffers, right? Because you have a double buffering and stuff like that,"
1659400,1663640," but we're not going to be doing that for now, at least. Uh, anyways, so let's actually try to rebuild"
1663640,1669720," this entire thing and it didn't work. That's fascinating. Uh, right. What does it say? Oh,"
1669720,1677000," is that a deprecation? Is that how they deprecate? SDL quit renamed SDL event."
1680520,1687000," Is that what they created a new major version for just to rename SDL quit to SDL event quit?"
1687000,1691480," I'm joking. There's probably more reasons too. Yeah."
1691480,1703880," Uh, finally, we finally encountered first backward incompatibility. Holy fucking shit. Brand new library,"
1703880,1710280," brand new library. This is the planned obsolescence at its finest. I swear to God."
1710920,1715080," But I mean, probably there are more reasons to create a, like a major incompatible library,"
1715080,1722360," but anyway. Also, uh, can we just talk about how fucking creative this is, uh, to deprecate a name?"
1722360,1725800," Um, that is fucking creative."
1725800,1732840," So, and like, why don't you just support SDL quit? Is that because SDL quit is going to be used for"
1732840,1737560," something else? No, it's not used for anything else, otherwise you won't be able to create this sort of,"
1737560,1745080," like, clutch. Like, why not, like, this is something that I don't understand. Like, why not just allow that to be a thing?"
1745080,1752920," Right. Like, what's the point of deprecating such a, like, a harmless name? Uh, I don't freaking know,"
1752920,1761480," but whatever. So now it is SDL event quit. Okay. Sure. Sure. Sure, buddy. Uh, now it is SDL, uh,"
1761480,1765320," event quit. We'll be able to compile this shit. Okay. Look at that."
1765320,1773640," It doesn't clean anything, right? So, but it's a window. It's a window, nonetheless. And again,"
1773640,1784360," this thing depends on the NSDL 3. NSDL 3 by itself does not depend on anything. It's probably, literally,"
1784360,1791320," does DL open, like, searches for different, like, assos on your machine, and, uh, you know,"
1791320,1796280," does DL open for them. We can even try to check that. Can we S trace this mother flipper?"
1796280,1798760," This is a very cool question. Like, S trace."
1798760,1813560," Okay. I guess we're back. Uh, so sound is working. Everything seems to be working, hopefully. Um,"
1813560,1819640," this is something that I didn't expect is going to happen on today's stream, that SDL somehow is going"
1819640,1825640," to kill, uh, our entire system, but that's exactly what happened. So that's something new in SDL 3."
1825640,1832120," Uh, it doesn't allow you to S trace itself, right? So it has a S trace prevention mechanism."
1832120,1841880," Um, that's very cool. Um, yeah, that's SDL 3 for you, everyone. That's SDL 3. That's,"
1841880,1848360," that's pretty fucking cool. Uh, so let me restore my entire setup, right? So, because I have had a very"
1848360,1854440," specific setup and everything, uh, just a second, everyone, we're back. We're, okay. Thank you. Thank"
1854440,1865000," you so much. Uh, right. Let's not do that again. Okay. So let's not do that. So we're going to just assume"
1865000,1872680," that it does search for DL open and stuff like that. Uh, all right. So yeah, that's pretty cool. Um,"
1872680,1878360," um, so SDL 3 is so dynamic. It crashed the stream. Exactly. That's so fucking dynamic. Like I didn't"
1878360,1883400," expect that. Like how, how the fuck can you even crash the whole thing? Like it blocked all of the"
1883400,1891800," inputs. Like I couldn't do anything. Uh, but that's SDL 3. That's another new thing in SDL 3. Uh, right."
1891800,1897720," So I think we, so far we encountered three things, right? First of all, it doesn't depend on any DLLs."
1897720,1905720," Somehow it still works. Uh, second is that they renamed SDL quit to SDL event quit, you know, worthy of"
1905720,1911160," another major, uh, you know, version. And another thing is that if you try to understand how it works,"
1911160,1915800," it fucking crashes your entire machine because you're not allowed to understand that it's a trade"
1915800,1921320," secret, how they achieved no DLL dependencies. You're not allowed to fucking know that even"
1921320,1927080," though it's open source library, but it's a trade fucking secret. Let's not do that. Let's not go"
1927080,1931400," into the details about how exactly it works. Maybe it already stole all my data. I don't fucking know."
1931400,1937000," So anyways, uh, right. So what do we have in here? So we managed to create the window and stuff like that."
1937000,1942520," There should be some sort of a way to clear the window. I do remember that, uh, there was some sort of"
1942520,1950520," way to do that. Uh, let's go into the headers. Uh, right. So SDL three includes and, uh, let's grab,"
1950520,1957000," I think it was something like a render clear. If, uh, my memory serves me correctly. Yeah, there we go."
1957000,1965320," So, uh, render clear, it's not even wait. I'm looking at the wrong place. Honestly, here is the render clear"
1965320,1974440," and you have to specify the renderer. The renderer, uh, right. So we do render clear. Maybe you also have to,"
1974440,1984760," well, it doesn't have to be a pointer. It's already a pointer. Uh, right. So set, um, clear, set render clear."
1986200,1997160," Was it a clear color? Uh huh. So, um, so set the color, set render draw color. Oh yeah. Yeah. Yeah."
1997160,2002360," I kind of vaguely start to remember this bullshit naming. Um, yeah. So here's the renderer. So we're"
2002360,2008040," going to actually set, I suppose, maybe red color. So this one is going to be zero. This one is going to be"
2008040,2015400," zero and alpha is going to be something like that. Okay. And, uh, let's actually, um, you know,"
2015400,2021480," swap the buffers. So there should be something, uh, to swap the buffers. Is there anything to swap the"
2021480,2025640," mother flipping buffers? Swap buffer. Uh, okay."
2030440,2039240," There's something for EGL, but just generally I didn't see anything. Is there something like swap? Um,"
2039240,2057720," so there's a video. Well, I mean GL. Um, so there's a render. I honestly don't see anything."
2059080,2063960," Maybe I don't even have to do anything then. GPU swap."
2063960,2076680," Don't see anything. So swap window found it, but it's a GL. That's the thing. Um, it's all a GL."
2076680,2084360," Uh, but we're not doing open, but maybe we have to do open GL. Right. So, okay. Let's try to do that"
2084360,2093160," without the GL. Uh, right. So I'm going to do just build and just run the whole thing. Uh, right."
2093160,2098040," And it didn't work. Right. So, because you do need to swap the windows and then, uh, we have to do"
2098040,2105880," something like SDL, uh, GL swap window. Right. And we have to provide them with, I don't think that's the"
2105880,2112440," case. Yeah, it's not the case. Right. Otherwise it would be red or something. Uh, right. So let me"
2112440,2120040," actually see. So SDL three, um, example tutorial. Okay. Uh, because I don't quite remember. I don't"
2120040,2124840," quite remember. Also we've got some subs. Let me acknowledge the subs. Uh, right. So thank you so much."
2124840,2130600," Uh, Krusty for tier one subscription, uh, with the message panger, waving panger. Uh, so thank you so"
2130600,2135800," much. Gigantify for emotes. And thank you so much for gifting subs. Thank you. Thank you. Thank you."
2135800,2140520," Really appreciate that. Okay. Beginning guide programming version three. Okay. So tutorials front page."
2140520,2150200," Just show me like, I don't give a shit. Ah, simple example. Brofsky. Okay. SDL two, but SDL three."
2150200,2157320," What about SDL three. Okay. Let's take a look at this deal too. Maybe it's the same. Fuck you. Right."
2157320,2164680," I never even interacted with that, uh, with that window. Okay. Uh, SDL two tutorials. Um, okay."
2164680,2174040," Okay. Basic data obstruction. What the fuck is data obstruction? Where is the SDL?"
2175720,2184360," Oh, okay. So setting up a window. Okay. Uh, I don't see the loop. Where is the fucking loop?"
2184360,2190760," This is not the loop. There's no even loop. How is that? This is horrible. Where are,"
2190760,2193800," okay. So there was some events and shit. Um,"
2193800,2203960," which shit tutorials? What the fuck is that? Get window. Like, this is not how you do SDL dummies."
2203960,2210760," Okay. You know what? Fuck you. I'm going to look at my SDL two code. I do have a deal to quote"
2210760,2216360," because for example, soon is actually implemented in SDL. Right. So how did they do that in there?"
2216360,2220840," I don't fucking remember. Right. Because again, I don't keep that information in my head. Right."
2220840,2226440," Because I have to store a lot of information there. Uh, right. So because of that, I may not remember"
2226440,2234840," how to work with certain libraries. Uh, so is that a swap or is that something? RENDER PRESENT. Holy"
2234840,2241400," shit. Freaking naming. Okay. So I think that's, that's how it's called in SDL three as well. Right."
2241400,2247480," It must be right. Because the only thing they changed is SDL quit. Uh, right. It didn't. Yeah. So,"
2247480,2256200," okay. So there is SDL present. Um, okay, cool. Uh, it's not swap. Should have called it swap,"
2256200,2261720," honestly. Right. Should have called it swap because everyone at the standard does swap. Uh,"
2261720,2266520," right. So what's the point of, yeah, finally, fucking finally, we've got a window. Nothing"
2266520,2273560," changed. Uh, at least like from the, you know, API point of view, the only thing we see changed this"
2273560,2279800," thing, but internals, I suppose change because again, DLLs are like searched differently. Um,"
2279800,2287640," so that's kind of interesting. Okay. So let's actually try to maybe, uh, draw some interesting things now."
2287640,2296040," So it was going to be 18, 18. Uh, right. So let me find, there should be something like a"
2296040,2306840," feel wrecked. Chat, chat, chat, chat, chat. Do you feel wrecked? So, oh, there is a old names."
2306840,2317720," That's very cool. Okay. So, and what about this deal quit?"
2317720,2325720," Wait, I could have used SDL quit if I included SDL old names."
2326360,2334280," I can do that. Wait, wait, wait, wait, wait, wait, wait, wait, wait, wait, wait, wait, wait, wait, wait,"
2334280,2338840," I can't do that. But what if I include old names?"
2338840,2347800," Old age. Uh-huh. Still can't do that, but maybe that just means I have, don't have to include that."
2348920,2358600," And that, how do I fucking use old names? Definition to ease, to ease transition from SDL to the new"
2358600,2364280," function names are recommended, but if you want to have the old names available while you are in the"
2364280,2369480," process of migrating code to SDL, you can define, enable old names."
2369480,2384760," Let's define this stuff. So I suppose this is how it works. Holy shit. Fuck SDL. You can use SDL2 code with SDL3?"
2389240,2394840," Okay. So let's not do that. Right. So let's actually move forward. Let's not be stuck in the past."
2394840,2401720," Uh, right. So let's not be stuck in the past. So this is SDL event. Let's fucking go."
2401720,2411480," Uh, yep. It's pretty cool. Okay. Um, so render. So fillRect. Uh, this is how you do fillRect. So"
2411480,2422760," render, fillRect. And it's actually fRect. I don't remember fRect. Is that a floating point rect? And so,"
2422760,2432600," which implies that there's also integerRect, huh? Wait. Is integerRect literally called iRect?"
2432600,2445080," No fucking way. Okay. Let's go. All right. So there's fRect. So here's the fRect. Cool."
2445080,2450760," Uh, so there should be integer. Uh, yeah. I was just called rect. Okay. Okay."
2452760,2459400," Fully IRect. Yeah. They missed such a good opportunity. Holy fuck. They missed an opportunity"
2459400,2470120," called IRect. E-Rect. Yeah. So it should be E-Rect. Yeah. So E-Rect. But what E stands for?"
2470120,2478280," What kind of type is that? Integer. It's not integer. But anyways, uh, right. What we want to do,"
2479000,2487480," uh, wanna fill the rect. All right. We wanna fill the rect. Let's actually put this tab in here. Uh-huh."
2487480,2495800," And what kind of rect are we going to have chat? Right. So here is the rect. And I suppose,"
2495800,2500600," in terms of x, it's going to be maybe half of the width of the window. Right. So we're going to have"
2500600,2506520," width. And let's take half of the width of the window. Uh, so maybe we can extract this kind of stuff."
2506520,2513240," So it's going to be width and height. Width and height. Width and height. And, uh, width is going to be"
2513240,2519240," this kind of thing. And height is going to be this kind of thing. Uh, right. So that means, that means,"
2519240,2526440," uh, we can have something like this. So this is going to be height. Uh, so now what I'm thinking,"
2526440,2538360," actually, I think it would make sense to, uh, uh, define width in here. Um, so sdlf rect. Yes. It's just,"
2538360,2545480," uh, you know, this. And let's define something like 100. So it's going to be 100 by 100. And then here,"
2545480,2554360," what we can do, we can quickly sort of like replace this kind of thing. So it's a x, uh, center of the"
2554360,2563000," window, but minus, uh, this thing also divided by two. Right. So all of that is floats. So we don't"
2563000,2568680," really have to worry about all of that stuff. But I mean, here, we probably have to do this thing to not"
2568680,2574760," lose any precision. Uh, in any case, I think it makes sense to actually make all of them floats."
2574760,2584760," All of them floats. Maybe it would be even better to put some sort of a parenthesis in here. Right. So"
2584760,2589160," you can move all of that stuff outside of the parenthesis. Right. That way you even lose less"
2589160,2595080," precision. Maybe. I don't know. Maybe. I don't know if that's the case. But, uh, anyway, so here's the"
2595080,2599640," renderer. We have to supply the renderer in here, and we have to supply the pointer to the rect."
2599640,2606120," And that should draw a rectangle at the center of the window. Right. So that's what should happen. But"
2606120,2617800," it didn't happen. Surprisingly. I have no idea why, though. Am I going fucking crazy, mate? What if I just..."
2618920,2628600," I forgot color. You're right, chat. So we have to... We have to set render... Actually, yeah, I said..."
2628600,2636280," I should set it in here. And then I have to set it to something like red in here. Yeah. There we go."
2636280,2641400," Here's the... Here's the return. Here's the thingy-ma-jingy. How about that? So, so far, it's just like, yeah,"
2642200,2647720," it's a slightly different interface, and I don't really understand why, but that's what it is. So,"
2647720,2655160," does it have more interesting shapes to draw? Right. Can I do circles? Because I remember... Does it..."
2655880,2657400," It still don't have circles?"
2657400,2670520," What's the... Ellipse. Okay. So, ellipse..."
2670520,2679560," 10 years of date, and we still don't have... Exactly. It's an unsolved computer science, bro."
2679560,2690120," What exactly changed? Oval... Okay. Oval... No. What's the point of this release? Like,"
2690120,2695400," can anybody explain to me, like, what's the point of it? Like, what's new? Okay. So, let's actually"
2695400,2702280," Google it. What's new in SDL3? Because this is not immediately apparent. Okay. So, here are new features."
2702280,2708200," Right. So, here are new features. So, if you've got an SDL2 app, you might be wondering why you should move"
2708200,2716520," to... Exactly. That's a good question. Thank you. So, a lot of things you've already used in SDL2 are easier,"
2716520,2723480," more consistent, and just generally better in SDL3. So, the upgrade can be worth it in any case,"
2723480,2728680," but here are some things that are new features in SDL3. Extremely good documentation."
2731080,2739320," Example programs to get you started. How is... What? More consistent API naming. You know, so,"
2739320,2747400," more consistent API naming equals changed names. Like, it doesn't matter that naming is better or"
2747400,2752120," anything. No, no, no, no. You created problem by changing names. Okay. Syphon said something"
2752120,2757880," interesting. From my experience with SDL3, it's just a simverb bump to make the API more consistent."
2757880,2765560," I see, but... I don't fucking know. You could have just, like, added more consistent naming on top of"
2765560,2772760," SDL2 while preserving inconsistent names. So, the old code works, but the new code just uses consistent... Like,"
2772760,2776760," I don't fucking understand. This is so bizarre. But anyway, so, let's actually keep reading."
2777960,2782360," So, more consistent by naming. Everything is named consistently across the API now instead of blah,"
2782360,2788280," blah, blah. Okay. Rules about memory management are more clear in SDL3. What happens if I query"
2788280,2793960," device name and the device name is unplugged before I can touch? Okay. This is something that you're..."
2793960,2798920," When you're using SDL more, like, seriously. Right. So, when you're developing, like, actual games and"
2798920,2804760," stuff like that. Maybe the actual improvement is apparent when you, like, developed a complex game in"
2804760,2812920," SDL and some subtle details that are very difficult to fix in SDL2 are actually fixable by making backward"
2812920,2819960," incompatible release or something like that. So, GPU API access to modern 3D rendering and GPU compute in,"
2819960,2824040," like, across... Okay. So, this one is interesting. So, is it cross-platform way of doing that?"
2824040,2827640," So, create GPU device. Ooh, this one is interesting."
2828280,2832440," So, GPU context. So, I can do compute shader..."
2832440,2841800," I can do compute shaders and scheisse. Can I do computer shaders and scheisse? That sounds"
2841800,2847080," fucking interesting. That sounds fucking dope. Okay. The GPU device."
2847080,2859000," Upload create GPU shader. Create the shader to be used when creating a graphics pipeline."
2859000,2868200," So, okay. The shader resource bindings must be authored to follow a particular order depending on the shader for"
2868200,2879240," SPRE. Okay. So, and it's abstracted away from a specific GPU API. That's so cool if I can hate the OpenGL."
2879240,2884280," Well, I mean, it could be just like OpenGL, but rebranded, right? So, it doesn't mean that you have to deal with"
2884280,2891960," less bullshit. Right. So, it's just sort of like an abstraction layer on top of different GPU APIs,"
2891960,2899480," like OpenGL, Metal, DirectX, and stuff like that. Right. So, okay. Okay. This caught my attention,"
2899480,2907800," actually. GPU. GPU API. That sounds interesting. So, Dialog API. Access to System File Dialogs like a..."
2907800,2910280," Oh my god. This is fucking classic."
2910280,2921320," The Select File Dialog. The fucking unsolved computer science problem. Holy shit. Because remember from the"
2921320,2928280," RayLip release. If you want to know what I'm talking about, like go watch the, like where we looked into"
2928280,2941080," the RayLip release. We can re-select files. Let's fucking go. This release is crazy. Actually, on that"
2941080,2950840," stream, I added to my to-do list to look into SDL3. Right. So, if you want to know what I'm talking about,"
2950840,2956200," watch that, that thing, we actually explored like dialogues there extensively, more or less."
2956200,2961160," So, I'm going to put that stuff in here. Okay. And obviously, I think I want to put the new features"
2961160,2969560," in here. So, here's the new features. Right. So, File System API. Simple directory management and globing."
2969560,2975480," Access to topic-specific user folders. Huh. That's interesting. Storage API. Abstract interface to"
2975480,2984120," platform-specific storage. Ooh. Does it imply that maybe, yeah, maybe SDL actually kind of implies that it"
2984120,2990280," may work in WebAssembly. Right. And by doing that, you kind of access like a local storage of the browser"
2990280,2995480," or something like that. Yeah, that sounds interesting. Camera. Access to camera, to web cameras."
2998680,3007400," So, that's okay. This is the new thing. Pan API. Like, what? You can create like a drawing software."
3007400,3014840," Oh, right. Like, I already respect that. This is actually super cool. The new APIs. Right. So,"
3014840,3022200," logical audio device. Audio streams. Right. And does it have mixing? It finally can do mixing by itself"
3022200,3027720," without additional library, without SDL mixer or anything like that. Holy fucking shit. Like,"
3027720,3038280," it can mix things by itself. That's insane. So, asynchronous API for reading files, time API processes,"
3038280,3049800," process API, color space support. So, better keyboard input. Yeah. Unicode friendly stuff. App metadata."
3049800,3055720," Yeah. That's all pretty cool. I suppose. Okay. That's an improvement then. Right. So, that's an"
3055720,3060280," improvement. So, additional APIs and stuff like that. That's very awesome. So, but the thing I'm interested"
3060280,3067240," in is actually GPU API. All right. So, the GPU API offers a crowd plumber way for apps to talk to modern"
3067240,3076280," graphics hardware. It offers both 3D graphics and compute support in a style of Metal, Vulkan, and Direct3D 12."
3076280,3083080," That's so fucking cool. So, now I can just have a consistent API for all of these APIs and it's just like,"
3083640,3092760," Yeah. I really like that. So, do they also have their own shader language? That is a very interesting"
3092760,3099400," question. Yeah. You know what? I think we're going to look into that because that's the most interesting"
3099400,3103160," part of this entire thing. Right. So, the rest of the stuff is kind of cool. Right. I'm going to keep"
3103160,3109480," that in mind, but this one is interesting. Right. So, why compute in quotation marks?"
3110280,3117480," Compute support. I don't really know. Maybe it's not real compute. Maybe it just executes that on CPU."
3117480,3125400," Or maybe it doesn't actually compute anything. They do. It's supposedly similar to JLSL without footguns."
3125400,3131880," Holy shit. Okay. We should have started from that. This is awesome. Wow. Okay. So,"
3132680,3140760," You know the XKCD with standards, right? So, XKCD competed in standards. Right. So, we have this kind"
3140760,3148920," of situation now. Right. So, we had OpenGL, Direct3D, and Metal, Vulkan, and stuff like that. So,"
3148920,3155240," we created another one, which is SDL3 GPU. And finally, we united all of the standards. Right?"
3157240,3165640," Right. They're not competing anymore. Right? Or is now we have another one. Fuck. Anyway. So,"
3165640,3170280," let's make a small break. I want to make a cup of tea. I'm going to refill my cup of tea. And after the"
3170280,3174520," break, we're going to look into that. We're going to see what we can do with this kind of stuff. I think"
3174520,3182040," this is interesting. All right. We're back. So, let's try this magical, magical API. So, I suppose the"
3182040,3187160," first thing that they actually mention is the createGPU device. So, let's actually go ahead and"
3187160,3193080," just like literally try to call that. I'm really curious about this thing. Right. So, I'm going to go"
3193080,3200440," into here. And one of the things that we don't really do in here, we don't really check for errors."
3200440,3205800," Maybe we should do that. But I'm not quite sure. Like so far, we didn't encounter anything weird."
3206680,3214120," But we may in the future. Right. So, not even sure what's going to be like the best way to check for the"
3214120,3221480," error. But we'll see. We'll see. Okay. So, this is the thing that we have to use in here. So, we just"
3221480,3232120," we do format flags. We don't even specify the window or anything in here. So, this is going to be device."
3233560,3242040," Let me take a look at maybe the documentation and also the declaration of this function somewhere here."
3242040,3248520," Right. So, it's going to be a grep like this. Boom. We'll probably have to include sdlgpu.h. We're"
3248520,3256200," going to do that at some point. Right. So, yeah. It's basically the same. The preferred GPU driver or"
3256200,3261400," null to let the sdl pick the optimal driver. Okay. That's pretty cool. Enable debug more properties and"
3261400,3268120," validations. Maybe this is something that we have to actually include. Okay. So, here is the GPU shader"
3268120,3277000," format. The GPU shader format. Is it defined anywhere? Okay. So, the GPU shader format can be invalid,"
3277000,3288600," for instance. Okay. Okay. So, shaders for NDA's platform. Right. Okay. So, Spirv, shader for Vulkan, DXBC."
3288600,3296040," I don't really know. Can I just have JLSL precompiled?"
3299240,3303000," I don't see any Linux in here. So, that's kind of worrying."
3303000,3312840," I don't even know. Right. So, where is the OpenGL? Do you have JLSL in here? No, we don't have JLSL in here."
3312840,3323000," Okay. So, the closest thing that we may probably need on Linux is Spirv. Right. So, but it's for Vulkan."
3323880,3330760," But does my application use OpenGL or does it use Vulkan? I don't know that, actually."
3330760,3337080," I don't actually know if it's like OpenGL or Vulkan. Right. So, because I can't see that in here. I just"
3337080,3342920," assume that it's OpenGL, but it could be actually Vulkan. So, anyway. So, let's actually try to do this"
3342920,3348360," kind of thing. So, we're going to enable the debug mode. And we're going to, for the driver, I suppose I'm"
3348360,3354680," going to put null in here. And I presume that in case of an error, it just returns null."
3354680,3364520," Right. In case of an error, it returns false. Wait. What am I looking at? Brofsky. Brofsky."
3364520,3371080," Null on failure. Call get error for more information. Okay. Thank you very much. Okay. Okay. Okay."
3371720,3377800," If not device. Right. If it's returned null. Right. We're going to say something like fprintf,"
3377800,3389400," std error and error could not create GPU devices. Right. And we're going to just return that. And"
3389400,3399400," maybe we're also going to specify the reason. SDL get error. So, and then we can just say that we managed to"
3399400,3404280," create a device, but it would be kind of nice to know what kind of device it would create. Is"
3404280,3411480," GPU device an open structure? It's fucking opaque. Fuck you. I want to look into some information about"
3411480,3416600," the goddamn fucking device. Why did you make it opaque? But maybe there's some getters for this function."
3416600,3423320," Maybe you can get some information. So, let's see. So, you can destroy. Get dpu drive. Ooh. This is"
3423320,3434840," something that we can do. So, you can get gpu or a device driver on whatnot. So, get gpu. GPU shader. Get"
3434840,3442840," gpu. Shader formats. Swap chain texture. Nothing particularly interesting. Like, I was hoping for some"
3442840,3449480," sort of a name of a GPU device. Right. You know. Name. Set gpu. There's a texture name."
3449480,3461880," GPU buffer name. Huh. Get arbitrary string contains a label of a buffer. Ah, but it's a specific buffer. Okay."
3461880,3477560," Get gpu driver right. It's an index driver. Get gpu device driver. This one is some... Yeah. So, this is"
3477560,3482680," probably the thing that we need. Returns the name of the backend used to create this gpu context. Okay."
3483320,3493960," So, yeah. We'll go ahead and do that. So, it's going to be... Okay. Created device"
3493960,3501640," with driver as... Right. Let's put that stuff in here. Right. So, I'm going to just pass the device"
3501640,3506920," in here. Just some sort of an information, right, to confirm that we did create, in fact, something."
3506920,3512680," Okay. So, let's try to build this entire thing. And something didn't even compile because we don't even"
3512680,3522440," have any STD I/O. Couldn't create a SDL GPU backend found. No SDL GPU backend found. Huh."
3522440,3532520," So, it feels like maybe I have to actually compile SDL with a certain GPU backend. Damn, Brofsky. Okay."
3532520,3541240," Let's go ahead and freaking do that, I suppose. Yeah. So, maybe that's what we have to do."
3542040,3549560," Let's go... Well, I mean, I'm already in the right folder. Okay. So, something with install."
3549560,3554840," So, does it have any, like, a backend? Uh-huh."
3554840,3563000," On top of that, what was the name? SDL GPU. Right. Is there any information about what the"
3563000,3573800," is it? Oh, that's a lot. SDL GPU. Maybe something within a make file. SDL GPU. Okay."
3573800,3582360," Enable the GPU render driver. Uh-huh. So, this is one of the options that you can have. SDL render GPU."
3583400,3594600," Uh-huh. Right. And if I try to build this thing one more time. Right. Remember when we did"
3594600,3601240," CMake. It didn't actually store the CMake thing. I should have actually saved the CMake configuration stuff."
3601800,3608520," Right. So, um... So, SDL render GPU."
3608520,3612120," Enable the SDL GPU. Huh."
3613720,3622840," So, it enabled all of these things. Didn't it? Um... Maybe I just have to install some Vulcan libraries."
3624520,3629400," Um... Maybe you need SDL in needed. That's a good question, actually. So, let's actually see."
3629400,3635320," Um... Yeah. That's a good one. Right. Because everything seems to be, like, why wouldn't it work?"
3635320,3640760," Right. On top of that, it's very dynamic. Right. So, if it couldn't find something, I suppose it"
3640760,3646280," couldn't find some DLLs at runtime. In that case, I would have just have to install it. But this looks like"
3646280,3650520," I just, like, didn't initialize it. Yeah. That's a good call. Thank you. Thank you so much."
3651240,3660280," Uh... Alright. So, let's actually see. So, SDL3 include SDL init. Right. SDL init."
3660280,3670280," So, what kind of flags do we have in there? Init. Um... No. Look at that. So..."
3670280,3678840," There is no, like, init GPU. So, audio and events and stuff like that."
3679640,3687160," Maybe we... Maybe they're actually... Yeah. Let me do init GPU. No. There's no such thing."
3687160,3696600," Uh... So, that's really freaking bizarre. Maybe DLL is missing. So, if we are..."
3696600,3702520," Maybe use S-Trace to see what happened. Fuck you. Okay. It's not gonna be doing this."
3704840,3708600," Uh... No. We're not gonna be using S-Trace. Thank you very much. We've already had enough of that."
3708600,3713320," Uh... So, anyway. Um..."
3715640,3719160," Maybe we need to leverage the amazing documentation. That's true."
3719160,3724360," Um... So, basic workflow. To create GPU device with GPU and assign it to window with"
3724360,3730200," Claim window for GPU device. Uh... All this, strictly speaking, you can render off screen entirely, perhaps,"
3730200,3735800," for image processing and not use at all. Uh... All right. So..."
3737560,3743400," Yeah. Let me take a look at the error one more time. All right. So, what's up with that specific error?"
3743400,3749240," Right. No supported... Could not create GPU device. No supported... We can take a look at the source code"
3749240,3754040," of SDL in that case, I think. Right. So, we're not gonna be utilizing the amazing documentation."
3754040,3760280," Let's just take a look at SDL3 itself. All right. So, we can, like, literally grab the error in here."
3760280,3768920," Nothing really stops it. Uh... Right. So, okay. So, no GPU. Yeah. There we go. So, here is the..."
3768920,3777880," Uh... The error. Right. And what is it doing in here? So, GPU drivers and stuff like that. So, uh..."
3777880,3786120," GPU select backend. Right. It's selecting the backend. Get boolean property. Right. So, it's just getting that stuff."
3787880,3794920," Uh... Environment properties overrides. It goes through some backends and stuff."
3794920,3808520," I wonder... Yeah. No supported SDL GPU backend found."
3808520,3817640," Okay. So, maybe we can google up this entire thing. Right. So, because it's unclear"
3817880,3824840," Uh... Maybe it errors because you're... Okay. So, let's just, like, you know, google it up."
3824840,3830600," All right. So, uh... GPU implemented a GPU disabled. Okay."
3830600,3837080," Uh-huh. Uh... Support GPU disabled."
3837080,3842360," Oh, nice one. So, we are... We are the..."
3846520,3852600," Bro, this is classic. When you have an error, you put that error into google and what you find"
3852600,3856280," is literal source code where that error happens."
3856280,3860760," Uh..."
3860760,3874040," Well, I don't think so. Literally three results and all of them are patched where all of that is happening."
3875960,3880200," Uh... Yep. That's... That's very fun. That's very fucking fun."
3880200,3885960," Um... I wonder if there is, like... Did it build it with debug information?"
3885960,3889880," All right. So, let's actually see whether it build it with debug information."
3889880,3895000," So, opt, sdl, leap 64. Uh... Right. I don't remember."
3895000,3897320," Uh... No. It's gonna be file."
3897880,3906040," Um... With debug in 4. Maybe we can actually debug and with... Within the debugger just, like,"
3906040,3912360," look at the values that are returned in here. Right. So, because, obviously, it goes through some"
3912360,3916920," loops and stuff like that. Here... Here it is. Right. So, this is, like, different backends or not."
3916920,3922040," We can just, like, look in the debugger. Yeah. GF2 time. Uh... I think it's gonna be fair. I think it's gonna be"
3922040,3927240," rather interesting. I hope it's not gonna block my entire freaking system because of that."
3927240,3933160," Right. Like, with s-trace. Maybe on top of, uh... You know, have... Have an anti-s-trace technology,"
3933160,3941000," it also has an anti-debugging technology. Uh... Right. So, uh... Let's fucking go. Let's fucking go."
3941000,3947320," Uh... What I wanted to do. I wanted to actually rebuild this entire thing with... Maybe with ggdb."
3947320,3953000," Uh... Honestly, I'm not even sure why I didn't enable all of the, like, warnings and extra warnings"
3953000,3958120," and stuff like that. I think that's fair to do. Uh... Right. So, let's actually rebuild this entire stuff."
3958120,3964520," That seems to be working. Uh... And let's do GF... Uh... Yeah. GF2. Electric Boogaloo."
3964520,3969800," Uh... What else do we have in here? So, here is the GPU. Um..."
3971160,3981800," What was the... Uh... SDL GPU. Uh... No... No supported SDL GPU found. GPU select backend."
3981800,3989640," Right. I'm trying to break this entire thing. And it couldn't find... Uh... Answered no input from terminal."
3989640,3995320," So, yeah. It couldn't find that thing because it's probably, like, a dynamic or whatever. Right."
3995320,3999480," Uh... Yeah. That's annoying."
4000120,4004280," Function is not defined. Make breakpoint pending. Like, I want to make it pending on the future,"
4004280,4011800," but GF2 actually answered no. Uh... Okay. How can I make it pending then? Does anybody know?"
4011800,4017880," Is there something like a... With no debug info? Bruh! Are you even watching the stream? Why am I even reading the chat?"
4017880,4021400," Okay. Uh... All right. So..."
4024360,4033240," Right. So... Is there any way to make it... Break it pending so it doesn't ask this stupid question and"
4033240,4043960," doesn't automatically answer no? Right. So, like, ggdb... Like, gdb. Break pending. Uh... Right. I'm not reading the chat,"
4043960,4047080," by the way, because people ask stupid questions there, so I'm not reading it."
4047080,4057640," Breakpoint pending on the future shared library. Um... Okay. So, yeah. So, gdb start c main go away. Um..."
4058920,4064520," Right. Because usually it just asks you whether you want it to be pending. But then, because it's not in"
4064520,4071800," the terminal, it automatically answered no because of GF2. So, the only way I see it is that... Um..."
4072360,4077560," Like, I have to use gdb then. Right. So, instead of gf, I don't see any other way because it's stupid."
4077560,4083880," Uh... All right. So, let me... Let me see. All right. So, we're gonna put that in here."
4083880,4091000," So, we're gonna go in here. Uh... Right. So, it's gdb main. All right. So, we have to break it in here."
4091000,4097240," Uh... All right. So, I'm gonna put that stuff in here. Exactly. This is what I want. I want... And then I"
4097240,4103880," answer yes. Like, I was just wondering if there's like a break where it just makes it pending without"
4103880,4110040," asking this stupid question. So, then GF, you know, uh... GF doesn't answer no or whatever. But"
4110040,4114040," it is what it is and it isn't what it isn't. Maybe there is a way I'm just not aware of it. Whatever."
4114040,4118200," Let's just actually do run. And as you can see, it found it because the library is like"
4118200,4123560," too dynamic for... for... for the debugger to actually process it properly. But anyway."
4123560,4131000," So, and there's no source code. Um... That's very cool. Even though, uh... We had all of the"
4131000,4140040," necessary information. Right. So, it actually clearly states that it has debug information."
4140040,4143480," It clearly states that it has debug information, but it couldn't find"
4143480,4147560," any freaking debug information. And that is a freaking shame."
4149240,4155240," Yeah. So, what's up with that? What is up with that? So, we can't even debug that properly."
4155240,4164280," Um... Okay. Is there any way to make it like log shit? Is there any way to make it log shit? That's"
4164280,4170040," a very interesting question. Um... Right. It doesn't really log anything. But we can modify it."
4170040,4176360," So, so, we have a source code. We can modify it. Uh... Right. So, GPU driver"
4176360,4185880," getString property. Uh... So, there's those nuts. Uh... There's no anything in here. Um... Yeah."
4185880,4191480," So, it looks for GPU backends in sort of like two places in here."
4192040,4205240," Uh... GPU select. Wait. GPU disabled. We've never disabled the GPU. Like, I'm pretty sure we never disabled it."
4205240,4215320," Uh... Right. Is there something? Uh... Just a second. If the GPU was disabled, maybe there is also a variant."
4216360,4222200," Now, I don't think GPU was ever disabled. I also want to take a look. Okay. I want to do the thing"
4222200,4228120," where I would look into the config. I just want to look at the config one more time. But I'm afraid to,"
4228120,4242360," uh... You know, lose it. So, I need to reconfigure this entire stuff. So, make install..."
4242360,4253000," Are we back? Are we back? Chat, we're back. We should be back now. Hopefully."
4253000,4258200," Okay. So, we're back. Let's continue. Okay. So, I don't know what happened, but something,"
4258200,4269160," something bad happened. So, GPU. Uh... Okay. So, GPU DXVK, uh... DXVK off. Uh... SDL render GPU on."
4270040,4277720," Okay. So... Metal... Vulcan is on. Everything is on. Huh?"
4277720,4287160," Minus one CK. Okay. Um... All right. So, everything is on, right? So, we didn't see any problems,"
4287160,4295080," right? So, there's Vulcan. Uh... Right. Maybe... Maybe I have to install Vulcan, but then I wouldn't be able to"
4295080,4300760," see this square, right? So, because it's Vulcan. But maybe it was using OpenGL. What was it using?"
4300760,4304680," All right. So, let's actually do the following thing. Chat, chat, chat. Let's do the following thing."
4304680,4306760," I'm gonna actually start the root. Just a second."
4313000,4320280," So many questions, right? Maybe that's why it is not out yet. Right. So, let's actually see xbps"
4320280,4327800," query rs vulcan. Maybe I just have to install some Vulcan choice. Oh, look at that. So, well,"
4327800,4333400," I have a Vulcan loader, but maybe I also have to do a Masa Radeon Vulcan driver."
4335080,4344360," Uh-huh. AMD open source driver for Vulcan. Chat, do I have to install this thing? Looks like I"
4344360,4348760," have to install this thing. But what's the difference between this thing and this thing?"
4348760,4355320," Uh... And also, Masa Radeon. There's no Masa Radeon. There's also Vulcan Radeon."
4355320,4363880," Uh, xbps. So, let's install this entire thing. And I wonder if I have to, like, reinstall anything."
4364840,4370200," Okay. So, it's installed something. Uh, okay, okay. And..."
4370200,4375480," So, let's try to run this thing one more time."
4375480,4388600," Holy fucking shit! It just worked! For the first time, I just installed some driver package"
4388600,4394280," for my GPU stuff, and it just worked! Holy shit! I didn't know that it's fucking possible,"
4394280,4399720," possible to just install a fucking package and it starts working. Because the last time I tried to"
4399720,4405640," fuck with OpenCL, it fucked me back in the ass. It was painful. I was recovering for an entire week."
4405640,4411800," Anyways... So, let's actually continue. So, we finally managed to create the GPU."
4411800,4414280," Uh, so, GPU device."
4416680,4423160," So, what else can we do with it? Um, right. So, I was right. Chat. I'm going to take an opportunity"
4423160,4427640," to say that I was right. This is due to... It couldn't... Due to not being able to find"
4427640,4432680," some sort of a DLL at runtime. So, I was right. Anyways... Uh, okay, good."
4437240,4443480," So, then, uh, assign it to window with claim window for GPU device. We have to claim this shine."
4443480,4452440," Um, all right. So, that's pretty straightforward. Nothing much to say. Uh, okay. Um, so, we just"
4452440,4458280," provide the device. And we just provide the window. Uh, right. And if it fails for whatever reason..."
4459000,4471880," Uh, okay. So, we're going to say std.ero could not, uh, claim, uh, window, window for GPU device."
4471880,4481560," GPU device. Um, right. Maybe, maybe we can actually take this entire thing like a device driver. Right."
4481560,4488040," And it's going to be something like device driver, like this. So, and we can just say"
4489000,4493560," something like this. So, we're going to be referring to this device by the name of its driver."
4493560,4499080," Right. So, that's how we're going to be going about that. And this is another as. Uh, all right. So,"
4499080,4508600," device driver sdl get a hole. Right. And I'm going to just return one. So, let's try to run this entire"
4508600,4515960," thing. Fuck you. Fuck you. Why couldn't we do that? And it didn't even return an error or anything like"
4515960,4525240," that's like what exactly happened in here. So, uh, that is bizarre. Return true one success or false and"
4525240,4532120," failure. Did I fuck up the order, uh, render and GPU? You can't use renderer and GPU by default."
4532120,4544040," Error couldn't claim. Yeah. Device driver couldn't claim window for GPU device Vulkan. And it didn't even say anything."
4545960,4551480," I didn't even fucking say anything. Like, I did get error and it didn't return anything."
4551480,4560840," So, anyway, um, so, some people say that this is due to renderer, but that doesn't make any fucking sense."
4560840,4567880," Like, why? Um, so, remarks, the sdl acquire GPU swap chain texture is called using the window. You should"
4567880,4573960," only call this from a thread to create window, blah, blah, blah, blah. Okay, whatever. So, all this,"
4573960,4581480," strictly speaking, you can render off screen entirely, perhaps. Uh-huh. So, I suppose, so, if the chat is"
4581480,4588440," correct, which I highly doubt, but if the chat is correct, that means that if you use GPU, um, it replaces"
4588440,4598280," the renderer, right? So, that's basically what it does. It replaces the renderer. Um, yeah. That's very"
4598280,4604760," interesting. That's very interesting. So, next, the app prepares static data, things that are created once"
4604760,4611880," and used over and over. For example, shaders, creating GPU shaders, vertex buffers, uh, and, uh, other data"
4611880,4619480," rendering we'll need to use to upload to GPU buffer, uh, textures, upload GPU texture, samplers, uh, how"
4619480,4626680," textures should be read from. So, a GPU sampler, uh, right. Render pipelines, create GPU graphic pipelines."
4626680,4632920," This one is interesting. To render, the app creates one or more command buffers. This is the, this is"
4632920,4639960," basically VK, isn't it? Right. So, with acquire GPU command buffer, uh, command buffers collect rendering"
4639960,4646200," instructions that will be submitted to the GPU in batch. Complex scenes can be, can use multiple"
4646200,4651240," command buffers, maybe, uh, maybe configured across multiple threads in parallel as long as they are"
4651240,4658280," submitted in correct order, but many apps will just need one command buffer per frame. I guess GPU literally"
4658280,4666440," replaces the renderer then. Uh, rendering can happen to a texture, uh, what other APIs call render target,"
4666440,4671080," or it can happen to the swap chain texture, which is just a special texture that represents the window"
4671080,4677480," context. The app can use acquire GPU swap chain texture to render to the window. Okay. So, rendering"
4677480,4683000," actually happens in a render pass, which is encoded into the command buffer. One can encode multiple render"
4683000,4688840," passes or alternative between render and compute passes in a single command buffer, but many apps might"
4688840,4694280," simply need a single renderer pass in a single command buffer. So, this is basically feels like VK, right?"
4694280,4703800," So, like a Vulkan stuff. Um, right. So, I suppose, and it's like a thousand lines to create, um, you know,"
4703800,4709160," to create a rainbow triangle or something like that. So, this one is going to be interesting, right? It feels"
4709160,4714520," like a completely entire stream dedicated to that, but maybe we can try to just, like, make a basic thing."
4714520,4721160," Uh, 3k lines. Yeah. 3k lines just to create a freaking triangle. So, thank you so much, FijayLJ,"
4721160,4726520," who took my name for Twitch fan fiction with a message. Here we go! You are on a roll today,"
4726520,4731560," although I'm one of the super mega nerds that likes the boring topics. Yeah, I see. I really appreciate"
4731560,4737240," you, by the way. I really appreciate you. So, but anyways, uh, anyways, anyways, anyways. So, do we want to"
4738040,4746440," delve into this kind of thing? So, let's, let's freaking delve into that. Hmm? Let's freaking delve!"
4746440,4755560," Uh, so, people say that this is due to the renderer, right? So, let's actually just create the window then."
4755560,4762600," Uh, right. Zozin bot control. Yeah, exactly. Uh, I actually anironically heard somebody use the word"
4762600,4767960," delve on YouTube, right? Some, some, some people anironically, like, actually said the LLM word."
4767960,4776120," Uh, and it was just like, holy shit, are you an AI? What the fuck? Uh, so, let me, let me see. How do you"
4776120,4784360," just create the window? Uh-huh. Speaking of nerdy topics, this is a pretty nerdy, nerdy shit. Not gonna lie."
4784360,4791560," This is a pretty nerdy shit. Um, so, this is just to create a window. Okay. So, you just keep the flags,"
4791560,4797560," but you remove the, uh, the renderer. Ah, okay. So, that's, that's basically what's going on here."
4797560,4805960," Uh, but it also means that we need to get rid of, get rid of all of that stuff as well. All right. So,"
4805960,4812840," let's just, let's just remove that. Um, yep, yep, yep. So, the, the only reason why I want to do that is just"
4812840,4822120," want to confirm that this is really due to, uh, you know, this is really due to the renderer being"
4822120,4829640," present, right? Because the chat said so, but, okay, was the chat correct this time? What the fuck? I can't"
4829640,4837320," believe that. You guys didn't debate me. It's really, it does really, in fact, replace the renderer. What the"
4837320,4842440," fuck? I can't believe that. Maybe some sort of a fluke in the matrix, right? It's just, okay."
4843320,4849560," Uh, chat hallucinated, right? Okay. So, that, that was the case apparently. That was the case. I wonder if I just,"
4849560,4856120," I can't even, yeah. So, the renderer API is not usable. Yeah. So, we're just like, as soon as you create"
4856120,4861560," a GPU device, that's it. Like, you are on your own. You create a bunch of things. You have to create the"
4861560,4866680," command buffers. You have to create blah, blah, blah, blah, blah, blah, blah. So, uh, yeah, that's, that's"
4866680,4872280," very interesting. Is there any samples in SDL3 that we could have, like, used somewhere? So, there is a bunch"
4872280,4880040," of examples, right? So, there is a, okay. So, there is a renderer, uh, renderer, but I didn't think there"
4880040,4889160," is anything like GPU related. So, there is a game, Snake. Uh, yeah. But that doesn't use any GPU stuff,"
4889160,4896360," right? So, here is a bunch of examples. If I just literally grab for the GPU, uh, does it have"
4896360,4903720," anything? Uh, I don't think so. Okay. So, these examples are not useful for us. Uh, maybe there are"
4903720,4912280," some samples? No. So, GPU examples. Why is it? Oh, it's somebody else's reaper. No, not looking at"
4912280,4917160," somebody else's reaper. So, it's probably promoting yourself in the streams. Anyways, um,"
4918840,4922520," So, how do we even, even do that? So, I'd like to have some sort of a, like,"
4922520,4929560," official documentation. Um, because they said that they improved documentation. Uh,"
4929560,4935160," right. So, they improved documentation, GPU API. Right. So, there's some examples. For example,"
4935160,4938600," uh, okay. You can find examples here. Oh, it's..."
4938600,4946600," Okay. So, it's literally that link in here. All right. So, well, I mean, if the official documentation,"
4947160,4952120," uh, refers to that, uh, to that link, to that reaper, that means we have to delete it,"
4952120,4960040," I suppose. STB image. Look at that. So, SDL still cannot load its own images. Right. It still can't"
4960040,4969000," load its own images. Okay. Okay. Basic triangle. Hold your breath. Chat, hold your breath. How many lines"
4969000,4977000," would you bet making a basic triangle is? How many do you think? All right. Let's fucking go. I'm not"
4977000,4989080," gonna look at the source code. Holy fucking sh... This is fucking revolutionary. 150 lines to create a triangle."
4991480,5001160," How is that possible? Vulcanism. Fucking shambles. Look. What? I'm sorry."
5001160,5008120," Okay. I'm a streamer. I have to act like that. Cut me some slack. This is literally my job. Okay."
5008120,5015640," I know it looks stupid, but it's just like, bear with me. All right. So, uh, anyways. So, uh,"
5015640,5028360," let's put that in the description. Right. So, um, okay. So, basic triangle. What do we have? Init. Common Init."
5029240,5038360," Uh, common Init. Uh, but where is the main... Is that not the whole story? Excuse me. Is that why it was..."
5038360,5045320," They fucking jebaited us. They fucking jebaited us because this is not the full source code. Why is it"
5045320,5051560," split in a bunch of files? Bro, who writes examples like that? Why did you fucking split it in a bunch of"
5051560,5058520," fucking files? Like, it has to be a single file. Bro, bro, bro. You're hiding a bunch of complexity,"
5058520,5065560," and now I... To actually grasp the example, I have to jump between several files. And since I have to"
5065560,5072040," jump between several files, I'm forced to git clone your stupid repo. Are you freaking serious? Why are"
5072040,5077320," you forcing me to git clone your repo? Right. Because it's not convenient to jump between the files in this"
5077320,5084520," fucking GitHub. Right. Like, who writes code like that? Like, I mean, seriously. I just want to have a"
5084520,5089160," single file that I can open and read from top to the bottom without jumping anywhere."
5089160,5100280," Anyways. So, they literally jebaited us. They literally... It's not 150 lines. It's... It's"
5100280,5103880," literal jebait. It's literal fucking jebait. Like, I don't want to clone anything."
5103880,5109160," Right. I want to come up with my own code. Like, why are you forcing me to do that? It doesn't even have a main."
5111320,5116280," Oh my god. And let me... So, do... Are you telling me that the main"
5116280,5121000," is actually part of the... Like, where is the entry point? Where is the... It doesn't even have an entry"
5121000,5129160," point. Like, why is it so complicated, bro? This is stupid. Oh, here is the main. Here is the main."
5129160,5139960," Oh, they all... Oh, they all linked into a single fucking file. Ew. Ew, gross. Bro."
5139960,5147080," Fucking gross. Oh. Brother, ew. Like, what..."
5149960,5151560," I'm... I'm disgusted. Anyway."
5151560,5161880," That's just... That's just bad... Like, bad example. But anyway."
5161880,5169640," Whatever. So, init. So, common init. Like, I don't even know what the fuck it is. I have to jump there."
5169640,5175000," It's not convenient. And it's just like, search for symbol. And it starts up the whole fucking search."
5175000,5181320," And it's like, it's not convenient. Like, I don't want to clone it. All right. So, then we create a GPU"
5181320,5188040," shader. So, yeah. It hides how it creates the device. It hides literally everything. So, then we create"
5188040,5197560," a pipeline. So, the GPU graphics pipeline create and for. All right. And so, yeah. Different rasterizes and"
5197560,5203640," stuff like that. And then when we do... Okay. So, this is update. This is probably input. Drawing. Okay."
5203640,5211000," So, we acquire the command buffer. I suppose drawing is called on like each frame, right? And the context"
5211000,5216920," is something that comes from initialization and something like that. So, it's a common thing that is"
5216920,5224440," shared. So, we acquired the command. So, swap chain texture into which we are rendering, I suppose."
5225560,5231720," Right. So, we're calling the texture and stuff like that. So, then we submit GPU command buffer. And I"
5231720,5239640," suppose submitting GPU command buffer is the, like a swap in it. Right. So, yeah. So, it's just like,"
5239640,5245240," that's what it is. It's like, instead of present, render present. And the quit is just like, we're"
5245240,5250200," releasing the pipeline and so on and so forth. Yeah. I kind of understand that. Right. So, it's just like,"
5250200,5258280," a lot of things that we have to do. Right. And it's kind of like a Vulcan. All right. I'm interested in"
5258280,5266200," taking a look at the shaders. Right. So, there is a vertex shader and fragment shader. So, somebody said in the"
5268920,5276520," in the chat that they have their own shader language. Here it is. Oh, my God. So, the compiler is SpearV."
5276520,5287160," Right. So, there is SpearV. Oh, another. So, Metal also has its own version of compiled shaders. Bro. That's interesting, actually."
5287800,5299000," So, row. Here is the row triangle word. That's HLSL. Are they all in HLSL? They don't even use the"
5299000,5307080," SDL shader. They're literally using... Okay. They're just compiling HLSL to either SpearV or Metal or some"
5307080,5316520," other thing. Yeah. All right. So, this is interesting. I really want to look into that. I really want to look"
5316520,5321960," into these examples. But, unfortunately, that goes outside of the scope of the entire stream."
5321960,5328360," Right. So, it will be kind of cool to look into that. But, again, this is outside of the scope of"
5328360,5335640," the stream because there's a lot of things in here to explore. Right. So, and SDLSL is still in development."
5335640,5343720," Right. So, it is still in development. So, in the chat, people actually gave me this link. Right. So, let's take a"
5343720,5350920," look at it. I haven't even proofread this yet. But, in case this is something you care about,"
5350920,5354200," here's how the new shader language is different from..."
5357640,5364360," You know that the language is unfinished when it starts with things. I appreciate the honesty, at least. I"
5364360,5373560," appreciate the honesty. That's pretty cool. Okay. So, yeah. I suppose what is going on in here is that if"
5373560,5378040," you want to use the shaders, you kind of have to compile them to, like, one of the bytes codes,"
5378040,5385560," like a SphereV or something like that. And when we are compiling to SphereV, right, when we compile into SphereV,"
5385560,5396360," we have to probably use some tools that we have to install. Right. So, where are the tools?"
5396360,5403160," Here's the compile.sh. And how do we compile? So, shader cross. What is shader cross?"
5405240,5414840," Is shader cross like a separate utility that is defined in here? Like, I know nothing about,"
5414840,5419240," like, a shader compilation or anything like that. So, it's all new for me. Is that a..."
5419240,5435000," So, what the fuck is sdlshader cross? So, if we look into that..."
5435000,5445960," So, shader... It's not a thing in the headers. Right. But then, let's take a look at the sdl3."
5447560,5453800," Uh-huh. Uh-huh. Uh-huh. And let's maybe find some files. Maybe not files, but anything."
5453800,5466440," With the name containing shader cross. Uh-huh. It is not a thing anywhere in here. So,"
5468440,5476600," uh-huh. If I take a look at these things, query rs, rs shader cross. It's another thing. So,"
5476600,5483240," let's actually do Google. So, shader translation library sdlGPU API. So, it's a separate,"
5483240,5489640," complete, completely separate thing. Okay. So far, all of that feels very much unfinished. Right. So,"
5490200,5498520," so far this feels very much unfinished. Shaders translation library for sdlGPU. Um... sdlGPU API."
5498520,5500200," Yeah."
5502920,5506040," All of that is very much unfinished. But the idea of this, like,"
5506040,5513560," GPU API is kind of interesting. So, I'm down to try it when it's over and when it has a better"
5513560,5519480," examples, honestly. Because these examples are kind of cringe. Uh, but yeah. So, it's just like..."
5521080,5524840," Like, I think, like, there should be, like, one example per file. Even if there's a little bit of"
5524840,5532280," a duplicate code, just let the duplicate code be, honestly. Like, I mean, it's examples. This is not"
5532280,5537240," an application that you have to maintain or anything. Just copy-paste the code. Right. Because you want the"
5537240,5543720," examples to be self-contained. Right. So, because they're, yeah, they are very much useful when they're"
5543720,5548360," self-contained. Just open the file. It's like everything that you need to know to, to set up this"
5548360,5552600," very specific thing. Don't force the users to jump between the files. It's annoying."
5552600,5557640," Uh, right. And it helps nobody. Again, this is not the final software that you have to maintain in"
5557640,5564440," a big company. This serves as a documentation. Right. Uh, so it doesn't have to follow dry,"
5564440,5570680," clean code and solid. And like, yeah, exactly. It's just like, come on, bruh. Respect your users a little"
5570680,5581000," bit. Uh, just like, come on. Anyway. So, uh, yeah. I, I'm down to try GPU API. It will be kind of"
5581000,5586280," interesting. Uh, but I feel like it's not particularly ready yet. Right. So it requires setting up this"
5586280,5593080," cross shader thingy. So SDLSL is not particularly finished yet. So I feel like if I jump into this"
5593080,5598840," entire thing, uh, I'm going to end up in a huge rabbit hole, which doesn't lead anywhere. So I'm"
5598840,5605320," kind of hesitant to do that. Right. So I guess I'm going to finish today's stream at here, at this point."
5605320,5611080," Right. So I think it'd been like around like two hours. Uh, I explored SDL enough within the scope that"
5611080,5617080," I had, and now I kind of have an idea of what it is. And now I understand why it is not released yet."
5617080,5627080," So yeah, that was kind of cool. So this kind of makes me want to try some like more modern GPU APIs,"
5627080,5633960," like Vulkan. I already tried Vulkan before. I remember, um, right. So I tried Vulkan with Rust"
5633960,5640040," and actually a lot of people kind of like that stream because remember the stream that I'm talking about?"
5640040,5651720," Uh, right. So it's just like, uh, Rust and Vulkan. So it's when I, when I was bold, right. So"
5651720,5659240," yeah, like learning Vulkan and a lot of people kind of liked it, right. So it's for, for, for a four,"
5659240,5664920," like four hour stream. I think that's a reasonable amount of, I'm not really bold here, but I mean, yeah,"
5665640,5671320," it's a reasonable amount of, uh, views. So people, a lot of people liked it, which I couldn't really"
5671320,5677960," understand because I think I learned nothing from that stream because I literally just followed the"
5677960,5683320," tutorial mindlessly and was just like copy pasting the lines from the tutorial. Like I felt like I"
5683320,5689160," learned nothing. I don't remember anything from that tutorial, like at all. It's just like, it was so stupid,"
5689800,5697720," but, uh, yeah, so, but it kind of makes me want to try this more modern APIs like Vulkan or something"
5697720,5704040," like that. But this time trying to understand what exactly they're doing. Uh, right. So the,"
5704040,5710600," the modern sort of like a terminology for this API says that you have, um, command chains, right. So,"
5710600,5720040," and swap buffers, uh, right. So yeah, so the thing about GPU, you don't really run programs on them"
5720040,5727240," directly. Uh, well, I mean, you kind of do through shaders, right? So you kind of do. So essentially"
5727240,5732600," you prepare the shaders, right? So you compile the shaders in them. So some sort of a byte code,"
5732600,5739400," you upload that to GPU. So GPU is aware of that shader. Then you have some vertex buffers and textures"
5739400,5746120," buffers that contain vertices and textures. You also upload that to GPU, right? So you have shaders"
5746120,5753320," that execute something on GPU. You have data like vertices and, uh, textures that are also on GPU."
5753320,5760760," And so GPU is kind of waiting for your commands to do something, right? To run this shader on that data"
5760760,5766600," or whatever. And this is what command buffers are all about, right? So they just like you batch up the"
5766600,5772040," commands for the GPU to perform with the shaders and the data, right? And then you just sort of like a"
5772040,5777640," batch send it once and they just like cram couple of this stuff and then maybe display or something."
5777640,5782680," So about for, or how many, uh, so buffers are in the pipeline. I, I suppose. Okay. That makes sense."
5782680,5788840," So did I understood, like understood roughly how these APIs work now correctly? Is, is that how they work?"
5788840,5795400," Right? So it was just like, yeah, you have the separate device. You just upload a bunch of programs and a bunch of data there."
5795400,5799320," And then you just command to do things. Uh, right. So is that how it works?"
5799320,5807160," Yeah. You're on the right lines. Okay. So, I mean, I'm, I'm meeting a lot of details, obviously, right? So, but roughly, uh, roughly."
5807160,5812520," And I suppose SDL is trying to kind of like, you know, mimic that essentially."
5814200,5818280," Uh, in practice, you have 20 different objects to call. Yeah, that's understandable."
5818280,5823800," Um, cannon buffers are nice because you can build them up on different threads and just have to sync"
5823800,5830120," when you upload them, basically. Okay. So that's pretty cool, actually."
5831000,5836040," All right. So, uh, I guess we explored SDL three enough. Uh, I hope the stream was interesting."
5836040,5841640," I hope the stream was educational. Uh, thanks everyone who's watching right now. I really appreciate that."
5841640,5847480," Have a good one. And as you all on the next recreation programming session with, uh, who, and Mr. Sozin."
5847480,5848080," I love you."

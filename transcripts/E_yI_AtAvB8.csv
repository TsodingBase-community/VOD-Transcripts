start,end,text
160,4480," Hello everyone and welcome to yet another recreational programming session with"
4480,8080," Ahu Amista Azozin. So today we're going to continue working on Panim,"
8080,13360," which is a programming animation engine that we studied to develop some time ago, right? I think"
13360,18560," like two weeks ago. We can even check it out actually. We're using the version control system"
18560,22640," and I can say precisely for how long we've been doing all of that. So the first commit"
22640,29840," was actually a week ago, right? So yeah, so the progress of the week is essentially looks like"
29840,35920," this. I'm going to do buildLipTM, right? So I'm working on animation for my YouTube video. So"
35920,43280," this is how it looks like. It looks pretty good. So pretty, pretty good for weeks progress, which I"
43280,49040," was also streaming on Twitch and stuff like that. So it's a little bit bright. Let's go back into the"
49040,55680," into darker mode, darker mode. So I'm going to go in here and let's actually find this entire thing."
55680,61280," And I'm going to switch to a darker mode. And the cool thing in here is that I can hot reload this"
61280,66880," entire stuff, right? As you can see, I now have a dark mode. Unfortunately, the problem with dark mode"
66880,75280," is that emotes blend with the background of the cells. So it doesn't really look good, right? So recently,"
75280,80320," we actually developed a very interesting system for describing the animations, right? So these kind of"
80320,89040," animations, they are actually scripted, sort of like scripted with a task system, right? So let me open"
89040,94640," this entire thing. Let me find a place where we reset the state of the plugin. And in here we have a thing"
94640,103600," called task, right? And a task is basically a piece of work that should perform over a certain period of time,"
103600,112800," right? So essentially, we have one single task within the state of the plugin, right? One single task. And"
112800,119920," that task plays the entirety of the animation. Like that task is responsible for playing everything you see"
119920,126480," right now. It's animating. One single task is animating everything you see on the screen right now."
127120,134320," One single root task. So now it's finished, the task is over, right? So and what we're doing in the plugin"
134320,140240," update in here, we're rendering the current state of the scene, right? So here, and before we render it,"
140240,149520," we actually update the task with the current environment. So we essentially pull the task and it performs this"
149520,156480," animated sequence. One single task. Now let's take a look at how you construct such task. So to construct"
156480,164720," such task, you use compound tasks, right? So essentially, I have a task that performs the"
164720,172880," intro, right? So this thing performs the intro and stops at a particular cell. Then it waits for 3/4 of"
172880,179680," the second or 750 milliseconds, right? So that's what it does. And then it writes into the current head a"
179680,188720," symbol 1. Then it moves its head to the right, then writes symbol 2 and so on and so forth, right? So"
188720,194400," you can also write the symbol images, right? There are two kinds of symbols in the entire system, right?"
194400,202000," A symbol text and symbol image, right? So I want to also have some, you know, visual fun element in the"
202000,206480," animation. So because of that, I allow writing images and stuff like that. And as you can see,"
206480,214480," here is the entirety of the animation. Here is the entirety of the animation and it is scripted. Also,"
214480,220560," all of that is wrapped with task sequence which accepts any other task and just place all of these"
220560,227600," tasks in a sequence. So this is the kind of system we developed. And the other tasks that you can have in"
227600,235520," here. So the main one is just wait. All of these tasks are custom tasks specifically for this animation,"
235520,242000," right? So there's a task sequence which plays the sequence of the task. There is a task group which"
242000,247280," takes the group of the tasks and plays them simultaneously. So you can do things that play"
247280,253840," simultaneously. A good example that I have in here is the square example or Microsoft Windows loading example,"
253840,259440," right? Because that's what it turned out to be. So we actually try to run this and I think I'm going"
259440,267760," to do square and I'm going to just run this entire stuff. This is how it looks like, right? So it's a"
267760,273040," Windows loading example. If we take a look at that specific examples and how it is constructed,"
273040,278160," it is constructed in a very interesting way. So there is a function that produces the loading. Yeah,"
278160,285360," there we go. So we basically play a sequence of three shuffles, right? So we do three shuffles."
285360,292880," And a single shuffle looks like this. So as you can see, we are moving squares to their particular"
292880,300160," position. So we perform three square movements and we group them together into a single task. So these three"
300160,308480," movements happen simultaneously, right? So essentially... Let me actually reset. If I start playing frame by"
308480,316000," frame, as you can see, all of the three squares are moving simultaneously. Look, so three tasks are"
316000,321600," playing simultaneously, right? So and then, as you can see, there is one single movement and that single"
321600,326800," movement is this one. So you can perform one movement or if you want to perform several movements,"
326800,334080," you can group them into the task group. So and you have this sort of tree of tasks. You have this"
334080,340960," tree of tasks. And so if you watch the previous stream, you know the way we developed all of that."
340960,347600," We kind of reinvented virtual methods. We kind of reinvented virtual methods. So essentially, task"
348720,355680," has a tag, right? It has a tag, which is just an integer. And then it has a pointer to some data for"
355680,362400," that specific kind of task. For that specific kind of task. And the way you, for example, call a task"
362400,368320," update, where you provide the structure task, which is this thing with the tag and data and an environment"
368320,374000," addition parameters and stuff like that. So you do the following way. Let's actually find it. You take the"
374640,381600," the tag of the task, right? You take its tag, you look in it, looking up in a virtual table and find"
381600,390240," the update method and you forward that data to that method in there. This is literally a virtual table."
390240,395680," So I rarely need this kind of stuff, but this is like, and usually when I need this kind of thing,"
395680,402160," I just have enumerations and switch cases and it's totally fine. This is the first time where I really,"
402160,407920," really needed to make things like that. And I couldn't even get away with just function pointers."
407920,415920," You guys know why, right? Of people who watched the previous stream. The reason is function pointers"
415920,421600," get invalidated after hot reloading the animation. Yeah. So because the way people already know,"
421600,429760," people already know. So this entire plugin system is based on the DLLs, right? So essentially,"
429760,436960," custom animations are literally DLLs. So, and if you store some function pointers in the state"
436960,441920," of the plugin, and state of the plugin actually survives between the loading of the DLLs,"
441920,448400," if that state of the plugin stores even just one single function pointer, that function pointer may"
448400,456960," get invalidated. Because of that, we have a table of function pointers that gets updated and rebuild every"
456960,462080," time we load the plugin. And we refer to the functions through the indices in that table."
462080,468000," Through the indices in that table. So these indices never get invalidated because they point to the things"
468000,474480," that, you know, rebuild every reload. So it's always correct. And that's how it works."
475520,482720," So, and again, this is literally a virtual table. This is literally a virtual table. So, and because"
482720,489440," of that, I was thinking, wouldn't it be easier to just like use C++, right? So it's nice that complexity"
489440,496560," of this process isn't abstracted into single virtual keywords. Maybe it is nice. So we can see exactly,"
496560,501360," technically how all of that is implemented, right? So, because in the case of C++, you usually don't"
501360,507520," have control of how that virtual table is allocated, where it's placed, what it's layouting and stuff"
507520,514080," like that, how it's looked up and stuff like this. But here we do have control over that. And furthermore,"
514080,520720," we can even specify in which arena we allocate in that table, right? So if you take a look at this entire"
520720,527120," thing, right, just a second. So task. So we have a special function that rebuilds this thing. And you're"
527120,532960," supposed to call this function yourself manually when the the plugin is rebuild. Look at what you're"
532960,538400," providing here. Look what you're providing here. You literally provide an arena. So I can control"
538400,545360," where in memory that virtual table goes. I literally have that level of control, right? So we have a"
545360,550240," special way of allocating memory. I can just say precisely like put that virtual table there or there or"
550240,555040," somewhere else, right? I can't even save it if I want to, right? So I have full control over that."
555040,560320," So it's all exposed. None of that is hidden for me or anything like that."
560320,567840," So we've got some subs. We've got some subs. I wish my mouse worked. Oh, my mouse is working. Look at that."
567840,573440," So thank you so much, Scripty Bebe. I hope I pronounced your nickname correctly. Thank you so much for"
573440,577840," trying with the message. I hoped which pays you now. It was racist what they... What?"
579840,586880," Is it? Is it? I don't know. I'm not sure if what Twitch is doing is racist. It's just like they're"
586880,591680," just following the laws of the country we're operating. So it's kind of normal."
591680,598640," So thank you so much, ElfJSF for T1's application. Thank you, thank you, thank you with a message."
598640,606880," Hi, hello. Hello, hello. So yeah, cheers. I suppose it was a joke, right? So let's suppose it was a joke."
609600,612400," So the Tinkering EE. Thank you so much for T1. Thank you, thank you, thank you."
612400,620720," So yeah, what I want you to do, like, I want you to know, maybe it would be just easier for me to use"
620720,628560," Z++, because you know what I'm talking about. Why not just use Z++? And then I realized that the selling"
628560,635840," point of C++ is that you can start, like, right away using that language along with C in your project."
635840,648640," Who said we can't just create a DLL in C++ and then even leave the engine in C? We can just take the"
648640,658400," engine, right, panim executable as it is, and give it a DLL written in C++. C++ is a real language used for"
658400,665520," serious software development. Hence, you can create a DLL in that language, unlike in scripting toy"
665520,672320," languages, unless you're doing some hackery, which involves using real languages for real software"
672320,678320," development. But that's besides the point. Right, so extern C time, exactly, exactly, extern C time."
678640,684880," So I really apologize that I can't zoom in very quickly today, because my mouse is semi-dead."
684880,688640," It keeps dying and dying and dying. So this is what we're going to be doing today. So sometimes I'm just"
688640,696640," using my touchpad on my laptop. Right, so my mouse just, sometimes it works, but sometimes it dies."
696640,704880," And so I have no idea what's up with that. Maybe it was hacked. Yeah, maybe it was hacked. So yeah,"
704880,709760," and sometimes when it doesn't work, I just use a touchpad on my right, on my laptop in here. So that's"
709760,718000," why I'm a little bit slow with my mouse. So yes, yes, yes. So let's actually give it a try. Right,"
718000,725360," let's give it a try. So we already have a template. Look at that. So this is the template. And it's basically"
726000,735360," an empty animation. If we go ahead and just rebuild everything. Right, and then I'm going to take Panim"
735360,745600," and just give Panim a leap template. What it will do. And I'm going to just like run it like this. Arena"
745600,754880," real log undefined symbol. Ha, I see what's going on. I'm actually linking all of the plugins with the task."
754880,762480," Right, so with the task. And the task requires to have Arena. So it's kind of interesting that it was not"
762480,768880," caught at compile time, probably because I'm building DLL. Right, so essentially, apparently,"
770000,774640," what I have to do, I probably have to just include Arena with all of its implementations,"
774640,781760," like so. Define Arena implementation. Okay, that's something that I learned all of a sudden. That's"
781760,787840," something that I learned. So apparently, if you're building DLL, for that DLL, you have missing symbols"
787840,795120," during compile time. It's going to compile just fine, and it's going to fail at runtime. Which kind of"
795120,798960," makes sense, I suppose. Right, so kind of makes sense. But at the same time, I didn't expect that. That's very"
798960,804080," interesting. I guess I learned something. Right, so people tell me that my streams are very educational,"
804080,809840," but the thing is, I'm also learning shit on those streams. Right, so I'm also learning things. All"
809840,814880," right, so there we go. So here is a panume template, as you can see. So this is just a template. One of the"
814880,823680," things we can try to do, we can go ahead and copy this thing and rename it to probe cpp. So this is going"
823680,835040," to be C++ now. This is C++ now. Z++. So, and I wonder if I can just add this entire thing to the build."
835040,840960," Right, so I'm using cc, and as far as you know, cc will probably automatically detect that I'm trying to"
840960,847520," build C++, and it will switch to C++ compiler, hopefully. Right, so in here, I'm going to just include"
847520,855520," probcpp, and this one is going to be libprobe. All right, so let's actually try to rebuild this"
855520,861440," syntax and stuff and see what it is going to do. Maybe I'm going to just remove. Holy fuck."
863840,872000," Oof. So it actually, in fact, tried to compile it as C++, and there's a shit ton of warnings because"
872000,880560," of that. Very interesting. Very interesting. So missing extern c. I know that, right? I'm doing"
880560,885840," that intentionally. I'm just trying to evoke the errors. By the way, I wonder if there's extern... Yeah,"
885840,893600," okay, look at that. So there is an extern c in here in Raylib. So RL API. Oh, it just like basically wraps"
893600,898160," everything in extern c in here, so to not worry about this kind of stuff. Prevent name mangling of the"
898160,906080," function. It's actually, it's actually pretty cool that Raysan even specifically said why he put extern c in"
906080,912720," here. So he really understands, right, the difference between C and C++ and everything. So this is"
912720,919280," specifically to prevent mangling, right? So because one of the things C++ does, it mangles the names of"
919280,923840," the functions, right? So the mangles the names of functions. I think I already demonstrated that"
923840,928720," multiple times, but I can demonstrate that one more time for people who never saw that before, right? So"
928720,936480," if you have a C function, right? So and then you have a main, then we can call something like hello,"
936480,941520," right? So maybe it makes sense to actually put it in here. So this is going to be something like that."
942640,952720," All right, so and so let's include stdio, right? And let's create a function hello. And in here,"
952720,960560," we're going to just say hello world, like so. Hello world. And then if I try to build it as C,"
960560,968640," right, we can take a look at the names that contained within that object. If we can do that, actually,"
969280,975280," I think we can. So as you can see, it exports like name hello, which is precisely the name of the"
975280,982800," function, right? If you try to compile this thing as a C++, that's a completely different story, right?"
982800,989520," So you won't be able to find that function there anymore. There is no hello function in there. There's"
989520,998160," only underscore Z5 hello V. The name of the function was mangled. Who knows why it was mangled?"
998160,1004720," What is the NM command? You can always do NM. If you like see me using some sort of a command,"
1004720,1010880," first thing you can try if you're using Linux, right, you can try to do man NM and it will give you"
1010880,1016800," information about this specific command. So at least the symbols from the object files. Object files are files"
1016800,1023520," that contain usually code, right? So and the code exports symbols, right? And symbols refer to some"
1023520,1028080," parts of the code and stuff like that. So that's one of the things you can do, right? So and the names"
1028080,1033920," are mangled and people say rightfully that it's for namespacing, for polymorphism, for overloading,"
1033920,1038000," and so on and so forth, for templates and everything and everything and everything. Because in"
1039280,1047120," in C++ you can actually have two versions of hello. The other one accepts the name, right? And you can"
1047120,1055680," basically put this kind of thing in here. And this is valid C++. It's invalid C. You can't do this kind"
1055680,1062320," of shit in C. If I try to compile it as C, it will tell me that I basically have a redefinition of a"
1062320,1068240," function. Yeah, as you can see, C does not allow me to do this kind of stuff. But C++ does allow me to"
1068240,1072960," do this kind of stuff, right? So because it supports overloading the functions. And to enable the"
1072960,1080560," overloading of the functions, right? So it actually, on the level of the object file, it must name these"
1080560,1086880," functions differently. So in fact, these are two different functions with two different names. It's"
1086880,1092640," just C++ under the hood calls different functions depending on what kind of arguments provided and so on"
1092640,1100480," and so forth. This technique is called mangling, right? And it's a nightmare for libraries, right?"
1100480,1107280," Because it's pretty straightforward in C. It's just like you export the symbols with the same name as"
1107280,1113760," the functions. And now you're programming in C++ and now that is not true anymore. And how the external"
1113760,1120320," program, actually the program that uses your library as external one, is supposed to know what functions to"
1120320,1126320," call. It literally needs to know the manual schema of C++ and stuff like that. To prevent that,"
1126320,1132960," C++ actually offers the thing called extern C, right? So essentially, if you declare your functions with"
1132960,1139840," extern C, it simply doesn't pangle them anymore, right? And that is useful for interfacing with C code,"
1139840,1146240," right? And the version of C++ exists in all of the system languages in one way or another. Rust has that."
1146240,1152160," I'm pretty sure Zeek has that. Maybe it has something automatic for that. Jai has that, by the way. I know"
1152160,1158720," for a fact Jai has that. I had to use that, right? Because I was like interacting with some C code and it really,"
1158720,1164960," really needed that. Python? Python is a scripting language. It's even like out of the question in this discussion."
1168640,1178480," All right. Anyways, so yeah, but in Python, you can also do that for Python. Imagine in the middle of"
1178480,1186080," discussing serious languages for serious software developments like C++, Rust, Zig and so on and so"
1186080,1196560," forth, come in and mention a freaking toy language for wrapping C libraries. What the heck is that? What the heck is it?"
1196560,1204240," For wrapping Fortran. Exactly."
1204240,1211840," Python hacked your mouse. Okay, so that explains it, actually. That actually explains it."
1211840,1220560," Anyways, so and this is something that we'll probably need to do as well. So, but first thing we need to do,"
1220560,1226240," we need to actually, we need to actually see if this entire stuff compiles or not, right? Like we need to"
1226240,1231440," figure out why this entire thing does not compile. Right. So, it definitely doesn't compile."
1231440,1240480," And I wonder why. So, because of these warnings. So, missing initializer. So, the main problem is that I've"
1240480,1245440," enabled shit ton of warnings specifically for all of that, right? So, as you can see,"
1246400,1253360," I have WL, W extra and so on and so forth. So, what I'm thinking is that maybe I need to,"
1253360,1261920," how to say that? Maybe I need to have a completely different way of building all of that. So, maybe"
1261920,1268240," instead of CC, I could have something like CPP. But CPP is a C preprocessor, right? So, the usual"
1268960,1274320," naming convention to refer to C++ compiler is actually CXX. Do you guys know that?"
1274320,1282400," Right. So, that's how you actually do that. So, we're going to be doing this kind of stuff. And in"
1282400,1289200," here, I suppose, I'm going to just like copy this entire stuff. And I'm going to be literally using maybe"
1289200,1295600," G++ and all of that without any warnings, right? At least for now, right? I'm going to enable all of the"
1295600,1300880," warnings and everything. Build plug. So, we're going to be building the plugin, but we're going to be"
1300880,1306720," building the plugin for C++, right? So, it's going to be CXX. And in here, we're just going to say"
1306720,1314000," CXX. So, and specifically for that plugin, this is going to be build plugin CXX. So, now, if I try to"
1314000,1322320," build this entire thing and see what is going to happen. Right. So, yeah. Invalid. Okay. So, that is"
1322320,1329920," understandable. At least now, it fails with a reasonable thing. Yeah. Speaking of, people always"
1329920,1335360," fucking tell me. Like, there is not always, but there is a category of people who say, ""Oh, C is just a"
1335360,1343280," subset of C++."" Here is the valid C code. Here is literally valid C code. Doesn't compile with C++."
1343280,1348720," C++. And this is actually a very classical example. And it's actually a very ubiquitous example."
1348720,1352720," Right. So, some people, some of such people may say, ""Oh, you have to go out of your way to write"
1352720,1358960," the C code that doesn't compile with C++."" Fuck you! Here is the ubiquitous code. You see it all the time."
1358960,1365200," You see such code all the time. Doesn't compile with C++. Like, when people are going to fucking learn?"
1365200,1370400," When people are going to fucking learn what's the difference between C and C++? If you're not going to"
1370400,1376720," distinguish C and C++, I'm not going to make a distinction between Java and JavaScript."
1377360,1382880," It's the same language. Java and JavaScript are the same language. If C and C++ are the same languages,"
1382880,1386400," Java and JavaScript are the same language. Fuck you! They are the same language."
1390160,1410160," So, yeah. So, we need to actually explicitly cast this kind of thing to here, right? So, that's how you're"
1410160,1417520," supposed to do that. Right. So, let me see. Maybe you should actually disable the building of the other"
1417520,1422160," things, right? Because I didn't think they're really important right now. So, because we're not doing this"
1422160,1427600," kind of stuff. Or maybe I should actually implement, like, incremental build. It's not that hard, honestly."
1427600,1435280," It's not that hard. Right. So, and what do we have in here? So, this is the state and I explicitly have to"
1435280,1441280," cast all of that stuff. So, there is a very cool feature, not really cool feature, but very convenient"
1441280,1453120," feature in pure C is that any pointer, right? So, any pointer can be automatically converted to void,"
1453120,1458800," right? Automatically converted to void or from void. It is actually super convenient."
1459280,1466480," So, any to any cannot be converted that easily. Usually, it will result in a warning, right? So,"
1466480,1471920," but any to void and void to any, it doesn't have any warnings because this is actually a very common"
1471920,1480000," thing to do. By converting any pointer to void, you sort of abstract in a way. And by doing it back,"
1480000,1486000," you sort of kind of imply that you know this type, so you actually reinterpret it like that. In C++,"
1486000,1491040," it's kind of forbidden and it actually causes a lot of frictions because of that, right? So,"
1491040,1495840," but I mean, it's not really that forbidden. You have to actually be sort of like explicit. And by"
1495840,1501520," the way, in C++, you're not supposed to use C-style casting, right? So, you're supposed to use static casts."
1501520,1511520," So, and they do that specifically to make, to add friction to converting types, to discourage you from"
1511520,1520480," actually casting and converting types, right? So, there's also reinterpret cast. Whereas in C,"
1520480,1525440," casting types is actually a very common operation. It's done like all the time and it's actually super"
1525440,1529920," convenient. But again, so since it's trying to maintain the backward compatibility with C, you can"
1529920,1537840," still use C-style stuff, right? So, it's not a really subset of C++, but it's sort of like compatible with all"
1537840,1546000," that. So, now I have to do this kind of stuff. But to be fair, so this is Arena. So, I have these problems"
1546000,1552000," in my Arena implementation, which means that this is probably something that I want to commit to the"
1552000,1560080," original Arena repo, right? Because I want my C libraries to actually work with both C and C++. And I just"
1560080,1565120," realized that I never tested my libraries on C++, because I kind of abandoned this language a long"
1565120,1570240," time ago. And yeah, so I don't really support it, but it would be nice to actually support it. Because"
1570240,1577120," even Rayleap supports C++. Because Raysan is too nice of a person. Raysan is just like way nicer"
1577120,1584880," person than I am, honestly. Right, to the point that I sometimes feel bad talking to him on Twitter,"
1584880,1591120," because he knows that I'm a huge asshole. He still interacts with me and still being polite. So yeah,"
1591120,1599280," Raysan is a huge giga chat. Honestly, he had to deal with so much fucking bullshit with Rayleap,"
1599280,1606320," maintaining Rayleap. And also, he receives a lot of dumb issues and a lot of dumb pull requests."
1606320,1612400," And the grace with which he deals with them is fucking admirable. Let me tell you. He never"
1612400,1619440," gets pissed off. He never starts to insult anybody. He just silently deals with all this stuff and just"
1619440,1627840," moves on. It's freaking beautiful. I love Raysan. I wish I was as patient as him, honestly. Unfortunately,"
1627840,1633760," I'm not as patient as him, but I wish I was. So he's my role model. He's my role model."
1633760,1644720," Anyways, so let's actually continue with going to the compilation errors. So that's fine. So we have a"
1644720,1654560," new pointer. And in here we can do char. Boom. And this seems to be the last one. So this is the char. And"
1654560,1660160," we're converting to char, I suppose specifically... Oh, because we're dealing with the strings in here."
1660160,1665760," That makes sense. That makes a lot of sense. All right. So what else do we have in here? Oof."
1665760,1678400," Damn, bruv. Damn. That is a very hard problem. Because I literally don't know the type of this thing"
1679440,1686880," at this particular moment. What the fuck? Chat. Does..."
1686880,1692960," Does C++ have something like a type of..."
1692960,1700240," Right. Because I need to know. Right. Decletype. Something like decletype. I need to learn how to use"
1700240,1707440," decletype. Right. Decletype. I haven't even compiled this thing in C++. Right. And after that,"
1707440,1714880," people on freaking Twitter telling me that C is just a subset of C++. Okay. I need to calm down. It's just a Twitter."
1714880,1717440," Okay."
1721440,1734880," Decletype specify. So if the argument is unparenthesized ID expression or unparenthesized"
1734880,1742400," class member access expression, then decletype yields the type of the entity named by this expression. If there is"
1742400,1748400," no such entity or if the argument names a set of overloaded function, the program is ill-formed."
1748400,1755760," Did you understand that? C++ is easy. You see? Easy."
1757360,1765920," Everybody knows what is... So class member access. Well, I mean, I do know what is a class member access."
1765920,1772160," ID expression. What the fuck is ID expression? So I suppose identifier. Right. So, okay. I see."
1772160,1775760," So it's basic identifier. Okay. So that's actually pretty easy. There's nothing special in here."
1776320,1781760," Oh, so we're also freaking... X values, L values, PR values..."
1781760,1788640," Fucking back in my days, there were only L values and R values. What the fuck did you do to my C++?"
1789520,1797280," Like, I started to learn C++ in like in, I think, in 2008. So the most common standard was C++03."
1797280,1799040," Like, what the fuck is all this shit?"
1799040,1809520," Ah! Rust value, yeah. So it's public relationship values. So I suppose..."
1809520,1816560," Yeah, can I just do something like... So I do realloc. That is understandable."
1817920,1826880," And then maybe I can do decal type. So... And I don't decal type. Decal type."
1826880,1834000," Can I simply do something like that? Is that a valid C++?"
1834000,1841760," Notice how I'm not asking whether it's a good or idiomatic C++. I literally don't give a shit."
1841760,1847840," Is it a valid C++? That's the only question I have in here. I hope it is a valid C++."
1848480,1855040," So let's actually see if it's going to work. All right, so that seems to be fine. Okay, I'm really happy."
1855040,1861360," So that seems to be working. So by the way, we can maybe do some shit. Right, so is there something like..."
1862080,1868800," How do you check whether you are C++ chat? Right, raylib. Ah, yeah, I see. If defined..."
1868800,1872880," Okay, okay. We can actually do it like this. If defined..."
1879040,1888400," Define decal type..."
1888400,1896160," How do you like my C preprocessor skills?"
1896160,1900080," C preprocessor skills. So if this is not a C++, we just..."
1900080,1906160," That is fucking epic. All right, we can do fndef, of course. It doesn't really matter."
1906160,1910960," Dirty hack. Where's your clean code now?"
1912400,1915760," So after seeing this code, tell me if clean code exists."
1915760,1918560," Tell me if clean code exists."
1918560,1922640," Maybe undefine it if it's defined again. Maybe."
1923600,1930400," So if and def tackle type... Right, so if and def tackle type..."
1930400,1935440," We're going to do and if. So maybe might as well actually indent."
1935440,1940240," Yeah. Yeah, that's good. That's good."
1940240,1947040," Alrighty, so that means it will probably work with C and C++. So after this..."
1947040,1950240," This is actually... I didn't expect that. This stream is going to be very useful"
1950960,1954400," because after that, I can commit all of these changes that I made to Arena to..."
1954400,1956880," Like back to the original repo and they're going to be useful."
1956880,1961120," So that means this code is going to be compiled with C++, which is very good."
1961120,1963520," Very good, my friend. Very good."
1963520,1968080," All right, so let's actually do this kind of thing."
1968080,1971680," And this is the last one. And hopefully, hopefully, finally,"
1971680,1974640," this entire thing is going to compile. Hopefully, I don't know."
1979440,1982480," Look at that. Look at that, my new friend. Look at that."
1982480,1985040," So do we have... Do we have a libprobe? There we go."
1985040,1990160," We have... We do, in fact, have a libprobe. So do we have a pluginit? There we go."
1990160,1996160," We do have pluginit, but this is not the pluginit you would expect, right?"
1996160,2003040," So... And that's the sort of main problem with C++. But I want to try to run it anyway."
2003040,2008880," I want to try to run it anyway because I want to get slapped in the face because that's the way I learn things."
2008880,2013760," By getting slapped in the face. So let me see. So this is going to be probe."
2013760,2017760," So I might as well actually run it from shell. And I go."
2017760,2023040," So there is no such symbol as pluginit. There is no such symbol, right?"
2023040,2027680," And luckily, I know the reason. Imagine if I didn't know the reason."
2027680,2033680," Like, how much time would it take me to actually, like, figure out what the is going on in here?"
2035440,2044320," Because, like, nowhere at any stage in here, neither the compiler nor the runtime will tell you what exactly is wrong in here, what exactly you have to do."
2044320,2049200," And you literally can't know unless you know."
2049200,2053200," So, yeah. That's actually pretty cool."
2053200,2055200," Anyways."
2055200,2061200," So, and, yeah, like, that's really weird."
2061200,2063200," That's why C and C++ are really hard."
2063200,2072080," So, where is my thing?"
2072080,2080080," So, this is a probe and the thing we have to do in here, we just have to mark all of these external things as extern C."
2080080,2084960," We can do the thing that Raylib does. We can try to do extern C, right?"
2084960,2088960," And it just, like, blankets the entire thing in here, like so."
2088960,2090960," That's what we can do."
2090960,2092160," Yep."
2092160,2093840," And let's try to compile this entire step."
2093840,2097120," You know what?"
2097120,2098560," I'm going to even do something like this."
2098560,2100400," A new template."
2100400,2102800," Hello from C++, right?"
2102800,2104000," So, let's actually do it like this."
2104000,2107040," Hello from C++."
2107040,2110160," And, yeah, let's actually try to run it."
2110160,2111200," And it works."
2111200,2112560," So, yeah."
2112560,2117920," That's how C++ got so widely adapted."
2117920,2119680," No cap."
2119680,2120320," Seriously."
2120320,2122320," This is how it got so widely adapted."
2122320,2124240," Because you can just use it with C."
2124240,2125760," There was a lot of C code."
2125760,2128880," And you could just, like, add a little bit of C++."
2128880,2131040," You don't have to change the entirety of the project."
2131040,2132400," It doesn't really cost anything."
2133360,2135520," You can kind of do that with Rust."
2135520,2138560," But with Rust, it's kind of, it's a little bit more difficult, honestly."
2138560,2140000," It's a little bit more difficult."
2140000,2141200," Like, how easy it is."
2141200,2142720," Like, you have a pure C project."
2142720,2145680," How easy it is to add a little bit of a Rust into that project."
2145680,2147680," Right."
2147680,2153440," So, Rust compatibility is on a level of FFI."
2153440,2156320," But C++ goes a little bit deeper."
2156960,2162720," It has some level of source code compatibility."
2162720,2166400," So, that means you can have universal code."
2166400,2170960," A piece of code that can be compiled by C compiler and C++ compiler."
2170960,2174640," Yet, C is still not a subset of C++."
2174640,2181760," It's kind of, like, very interesting, like, marketing trick that really helped C++ to get, like, widely adapted."
2183040,2184080," It's actually kind of insane."
2184080,2190000," Barney Soursup is an extremely talented marketer, honestly."
2190000,2192720," He marketed his language extremely fucking well."
2192720,2194400," Right."
2194400,2200720," All of these, like, small technical decisions, like, helped to C++ stay on float for quite some time."
2202240,2205360," Despite a lot of pretty bad technical decisions."
2205360,2205760," Right."
2205760,2213120," But the right technical decision at the right time, in the right place, kind of actually elevated C++ at the level it is right now."
2213120,2214800," You should buy his books."
2214800,2215040," Yeah."
2215040,2217040," You should buy his books."
2217040,2226320," We were recently discussing, like, how Bjorn Stylestop actually makes money."
2226880,2233120," And it was kind of weird because if you look at his career, he never worked in an actual software company."
2233120,2234800," So he only worked in academia."
2234800,2238000," And I suppose academia pays you relatively well, but still."
2238000,2238880," Right."
2238880,2244080," And we came to a conclusion that the only way he makes money is through selling his books."
2244080,2246960," He wrote, like, a lot of books."
2246960,2248560," Very thick books."
2248560,2250000," And they are extremely expensive."
2250000,2250960," I actually have one."
2250960,2251760," Right."
2251760,2253120," They're extremely expensive."
2253120,2255760," So that's literally the way he makes money."
2256320,2258080," By promoting his language."
2258080,2266720," So I'm actually 100% convinced the only reason he created C++ is to sell books."
2266720,2269120," There's no other reason he created C++."
2269120,2274000," It exists solely to sell books."
2274000,2275920," It's fucking insane."
2275920,2280480," If you, like, look at what he's doing and you realize what he's doing, it's actually..."
2280480,2285680," It's actually kind of, like, kind of cool, honestly."
2285680,2287200," Like, that he managed to pull that off."
2287200,2290720," Right."
2290720,2292880," It's actually kind of cool."
2292880,2294080," So I wish I could do that."
2294080,2295520," I wish I could do something like that."
2297120,2299120," post books when, yeah, maybe I should."
2299120,2299120," Maybe I should."
2299120,2300640," Damn."
2300640,2311200," Like, really, create a bullshit language that is relatively easy to slap into your code base because of the existing infrastructure or something like that."
2311200,2314240," And start selling books, making bullshit claims."
2315280,2319120," Because it worked before, why it won't work today?"
2319120,2322320," Tula."
2322320,2337040," Tula is actually an interesting idea because Tula has a very interesting paradigm shift and you can try to sell this paradigm shift as a new way to create maintainable software."
2337040,2342080," So, since it's a kind of like a weird paradigm, nobody really tested it well before."
2342560,2343200," Right."
2343200,2346240," So, nobody, like, can actually test those claims."
2346240,2348240," So, people will just, like, take them."
2348240,2348640," Right."
2348640,2349680," For granted."
2349680,2351680," It may actually work."
2351680,2353600," Holy crap."
2353600,2354720," Anyways."
2354720,2357760," So, let's continue."
2357760,2358880," So, we have this kind of stuff."
2358880,2361600," Yeah."
2361600,2366160," I wonder if I can now quite easily animate some things."
2366160,2367120," For instance."
2367120,2368880," Oh, yeah."
2368880,2370240," So, that's a cool question."
2370240,2374560," If I try to reload the stuff I do in here."
2374560,2375520," Right."
2375520,2376240," Hot reload."
2376240,2376560," Okay."
2376560,2378560," Hot reloading seems to be working."
2378560,2380000," At least it doesn't crash yet."
2380000,2383520," So, now, if I go to the prop cpp."
2383520,2386160," And I will take..."
2386160,2388080," I have a position."
2388080,2388400," Right."
2388400,2389440," So, I have a position."
2389440,2392000," And this is the position."
2392000,2395920," So, this is a half of the screen."
2395920,2396160," Right."
2396160,2399760," So, we take a half of the width and half of the height."
2399760,2401200," But then we're kind of subtracting."
2401200,2401920," Yeah."
2401920,2406080," So, we're trying to essentially, you know,"
2406080,2408240," center everything vertically and horizontally."
2408240,2413920," On top of that, we can have a little bit of an offset for the position."
2413920,2414160," Right."
2414160,2415120," So, maybe vector."
2415120,2418080," Let's subtract this entire thing."
2418080,2422240," And the vector that we're going to be using, I suppose, is going to be"
2422240,2425200," in x."
2425200,2426560," X is going to be actually zero."
2426560,2427840," So, let's actually say y."
2427840,2429120," Right."
2429120,2434320," And here we can put sinf and we can actually use get time on that sinf."
2434320,2441200," And let's say that the amplitude is going to be maybe 200 pixels."
2441200,2443120," Something like that."
2443120,2445440," So, that may work actually."
2445440,2447680," So, narrowing conversion."
2447680,2447920," Okay."
2447920,2448880," That's totally fine."
2448880,2450560," It's just C++ being C++."
2450560,2451520," And it seems to be working."
2451520,2452000," Look at that."
2452000,2455360," I hot reloaded the entire thing."
2455360,2457120," And it seems to be working."
2457120,2459120," That is actually super cool."
2459120,2461040," Right."
2461040,2464080," So, that was easier than I expected."
2464080,2465120," Right."
2465120,2467520," So, we can maybe speed that stuff up."
2467520,2470480," So, if I actually multiply this kind of thing by two."
2470480,2471760," Right."
2471760,2472560," So, let's rebuild."
2472560,2478240," Let's take some time."
2478240,2480880," So, it goes a little bit faster."
2480880,2483440," Now, if I go to here."
2483440,2484720," Let's not rebuild paneme."
2484720,2487280," Let's only rebuild prop.so."
2487920,2491360," And let's actually say that it's going to be something like this."
2491360,2496240," Okay."
2496240,2502720," How do you like my animation, chat?"
2502720,2504560," How do you like my animation?"
2504560,2506080," Isn't it poggers?"
2506080,2507360," I think that's pretty freaking poggers."
2507360,2509520," I wish my mouse worked."
2509520,2510000," But, yeah."
2510000,2510640," It is working."
2510640,2512000," PP bounce."
2512000,2512640," Yeah, exactly."
2512640,2513440," It's just a sine wave."
2513440,2514480," Nothing particularly special."
2516240,2518720," I hope we didn't apt."
2518720,2519280," But, yeah."
2519280,2521600," My chat just reconnected."
2521600,2522720," Okay."
2522720,2524400," So, you know what I want to do next?"
2524400,2527920," I want to just recreate the task system."
2527920,2530560," Now, in C++."
2530560,2531760," Using OOP."
2531760,2532880," Virtual methods."
2532880,2534000," Abstract classes."
2534000,2535920," You know, the usual bullshit."
2535920,2536480," Right."
2536480,2537840," The usual bullshit."
2537840,2539200," And I think it's going to be rather interesting."
2539200,2549680," Because I want to actually test whether this state that we allocated with the virtual methods and stuff like that will survive a reload."
2549680,2556320," Because one of the reasons why we had to develop this kind of system and stuff like that is because the function points were not surviving the reload."
2556320,2558960," So, we had to replace them with indices."
2558960,2562480," So, since we basically reinvented virtual table."
2562480,2568160," I wonder if the automatically generated virtual table by C++ will solve this thing automatically."
2568160,2571120," That is a very interesting thing to test."
2571120,2572640," That is a very interesting thing to test."
2572640,2575200," But, unfortunately, I'm registering for one hour."
2575200,2576480," I ran out of tea."
2576480,2578240," I need to refill my cup of tea."
2578240,2580800," So, we must make a small break, Chad."
2580800,2590000," We're obligated by law, by a federal law in 69 states, to make a break after one hour of streaming."
2590000,2590960," So, let's make a small break."
2590960,2597440," So, let's go ahead and try to recreate the task system, but in C++."
2597440,2602640," So, essentially, we have an abstract class."
2602640,2605760," Does anybody remember how to create abstract classes in C++?"
2605760,2607840," I just realized that I have no idea how to do that."
2609120,2612160," So, I think what you do is you create..."
2612160,2613280," Okay, let's create a class."
2613280,2617440," Then, all of that stuff has to be public."
2617440,2618880," All right."
2618880,2623840," So, and then we need to have an update which accepts an environment."
2623840,2624000," Right?"
2624000,2627440," So, an environment is the environment of the PANIM."
2627440,2630880," A delta time, screen width and height, whether we're currently rendering, playing the sound,"
2630880,2633200," blah, blah, blah, nothing particularly special, whatever."
2633200,2638000," And also, it returns a boolean indicating that the animation has finished playing."
2638720,2640960," I think you have to mark it as virtual."
2640960,2641520," Oh, okay."
2641520,2643280," So, that's highlighted automatically."
2643280,2648960," And now, I want to mark it as an abstract, and I kind of vaguely remember you do something like this."
2648960,2650160," Right?"
2650160,2654160," If I'm not mistaken, you just say, okay, so there is no implementation for this entire thing."
2654160,2656880," It's an abstract, virtual, like a pure..."
2656880,2661680," I remember the word ""pure"" in the terminology of C++."
2661680,2661840," Right?"
2661840,2663680," So, I think it's like a pure virtual function."
2663680,2664000," Yeah, yeah."
2664000,2668880," Pure, abstract, virtual, clean, virgin function."
2668880,2669440," Right?"
2669440,2670400," I don't freaking know."
2670400,2673040," So, that's what it is."
2673040,2675360," If I remember the terminology of C++ correctly."
2675360,2677680," Um, okay."
2677680,2680720," So, it keeps like yapping about this kind of stuff."
2680720,2681440," It's probably because..."
2681440,2687600," Can I just directly, like, do this kind of thing so it doesn't yap at me?"
2687600,2689760," And this motherfucker is still yapping at me."
2689760,2691040," Fuck you."
2691040,2692480," Maybe because of this kind of stuff."
2692480,2693520," All right."
2693520,2695680," Yeah, boy."
2695680,2698000," Maybe because of that I didn't have to do this kind of thing."
2698000,2700480," Uh, all right."
2700480,2701040," So, that's fine."
2701040,2701760," Cool."
2701760,2703920," And the next thing we need to do."
2703920,2707600," So, what's the hierarchy of, uh, sort of classes that we have in here?"
2707600,2708960," I need to take a look at the task."
2708960,2714560," So, the most important task in here is a wait task."
2714560,2714880," Right?"
2714880,2717440," It waits for a certain amount of time."
2717440,2718400," So, let's actually create it."
2718400,2720720," So, this is going to be something like wait."
2720720,2722080," And how do you..."
2722080,2724240," Oh, it's a Java."
2724240,2726240," Oh, I think I remember."
2726240,2729280," Like, you put this kind of thing and you say public task."
2729280,2729760," Right."
2729760,2731040," Oh, I freaking remember."
2731040,2733280," There is a public inheritance."
2733280,2734960," There is a protected inheritance."
2734960,2735840," And there's a..."
2735840,2736880," Oh, my God."
2737520,2740720," Barney, Barney Star Soup."
2740720,2741840," Why did you do that?"
2741840,2745600," Also, a friend function."
2745600,2747120," Like, I just..."
2747120,2752480," Having it, like, the brightest flashback of my life."
2752480,2756000," Because, like, C++ was actually my first ever job."
2756000,2756240," Right?"
2756240,2759200," So, I professionally worked with C++ and I completely forgot about it."
2759200,2760240," Right?"
2760240,2766240," My first ever job was actually C++ Qt or Qt developer for desktop application."
2766240,2767920," That was my first ever job."
2767920,2768720," Right?"
2768720,2770960," And I kind of remember that from those times."
2770960,2773120," And it just, like, brings all of that shit back."
2773120,2773840," Holy fuck."
2773840,2775840," Oh, my God."
2775840,2776960," I remember it."
2776960,2777200," Right?"
2777200,2782160," So, all of this, like, Q object hierarchy thing that is used for memory management."
2782160,2782480," Right?"
2782480,2786560," So, everything is a Q object and it's a hierarchy of Q objects."
2786560,2789840," And if you destroy one Q object, it automatically destroys all of them."
2789840,2792960," So, that's basically the memory management model of Qt."
2792960,2794240," Right?"
2794240,2796240," So, all of that is based on that."
2796240,2800160," But on top of that, there is a special kind of things that are Q widgets."
2800720,2800960," Right?"
2800960,2803440," So, but that knowledge is based on Qt 5."
2803440,2803760," Right?"
2803760,2809280," So, as far as I know, there is, like, a Qt 6 today or maybe there is a Qt 7 or whatever."
2809280,2810240," Like, I don't remember."
2810240,2811760," I'm not up to date with all of that stuff."
2812880,2814400," Um, right."
2814400,2821280," And by the way, Qt people get really pissed off when you call Qt with a capital T."
2821280,2822240," Right?"
2822240,2827840," Because there was, at the time, there was Apple's QuickTime, which is the media player or something"
2827840,2828240," like that."
2828240,2828480," Right?"
2828480,2830400," So, and it confused it with this kind of stuff."
2830400,2833520," So, you're supposed to actually spell Qt with a small t."
2833520,2835200," Right?"
2835200,2838480," So, is QuickTime still a thing in Apple?"
2838480,2838960," Like, I don't know."
2838960,2840240," Like, I never used Apple products."
2840240,2841760," So, I don't know shit about it."
2842240,2842560," Right?"
2842560,2843520," So, anyways."
2843520,2846640," So, what we have to do in here, we have to do this kind of thing."
2846640,2848560," Right?"
2848560,2856800," So, internally, by the way, internally, we are storing at least, like, three things."
2856800,2858320," We're storing the cursor."
2858320,2860560," Like, how much time has already passed."
2860560,2864560," So, because on each update, we're going to be incrementing the cursor."
2864560,2864800," Right?"
2864800,2867200," And then, we're also storing the duration."
2867200,2869360," Like, for how long we have to wait."
2870480,2874000," On top of that, we also keep track of whether we started or not."
2874000,2876800," So, initially, this entire thing is false."
2876800,2877520," Right?"
2877520,2879120," Initially, it is false."
2879120,2881920," And on the first update, it becomes true."
2881920,2886800," And this is kind of needed to sort of catch the moment when update is called for the first time."
2886800,2892960," So, you can do some preliminary setup for the task."
2892960,2893360," Right?"
2893360,2896960," So, for instance, a quite common example, I suppose."
2896960,2899200," Let me actually show."
2899200,2900240," So, I'm going to do tm."
2900240,2903600," And I'm going to just run the tm."
2903600,2906000," So, right."
2906000,2910000," So, for instance, writing into the cell, writing into the cell."
2910000,2914640," It's a usual waiting task which performs interpolation."
2914640,2921040," But, on the start, it needs to set up the cell object."
2921040,2921360," Right?"
2921360,2925520," The cell object actually consists of two symbols."
2926560,2929600," So, tm.c and there is a cell object."
2929600,2934400," It consists of two symbols and t interpolated between them."
2934400,2939440," So, essentially, if t is equal to 0, cell displays a."
2939440,2943200," If t is equal to 1, cell displays b."
2943200,2946320," If it's half, it displays something in between."
2946320,2947760," Right?"
2947760,2951440," As you can see, here comes interpolation from 0 to 1."
2951440,2954240," So, this is how we're interpolating from one symbol to another one."
2954240,2960480," So, to actually write into the symbol, right on the start of the task,"
2960480,2962560," you need to prepare those symbols."
2962560,2967840," You need to first set symbol b to the symbol that you want to set the cell to."
2967840,2970240," And then you also have to set t to 0."
2970240,2971440," Right?"
2971440,2974960," So, you need to catch that moment when the task just started."
2974960,2978960," So, you can prepare the states of some of the things on the scene."
2978960,2983440," So, that's why keeping track of whether the task has started is actually crucial."
2983440,2986080," Because you do, like, special things usually."
2986080,2989840," That's some of the things I usually want to do when I was setting up the scene and everything."
2989840,2990720," Right? Does it make sense?"
2990720,2990960," Right?"
2990960,2994160," So, and this is basically what's happening in here."
2994160,2996400," That's pretty cool."
2998080,3002080," So, and you can build up complex animations like that with this framework."
3002080,3010560," So, because of that, we're keeping track of whether we already started or not."
3010560,3011200," Okay."
3011200,3013840," So, I suppose we also need to create a constructor."
3014640,3016080," So, we're going to create a wait."
3016080,3021200," And in a constructor, like, we don't really need to specify any of these things."
3021200,3021760," Right?"
3021760,3025360," If I remember correctly, you have, like, initialization list."
3025360,3028240," And in here, I can say that started is false."
3028240,3031840," Cursor is originally zero."
3031840,3035600," And duration, we can pick the duration from the arguments in here."
3035600,3038160," So, this is going to be the duration."
3038160,3039600," Right?"
3039600,3042000," So, that's basically how you create a constructor."
3042000,3044640," So, essentially, what it does, it's an initialization list."
3044640,3052480," Like, after working with C for so long, I'm just realizing how dumb this syntactically is."
3052480,3053360," Like, what the fuck?"
3055680,3057280," And also, like, I don't remember."
3057280,3062720," I think the order of these things is not the same as the order in here."
3062720,3067280," I think the order of initialization is actually the order of the variable definition in here."
3067280,3070960," Is that true?"
3070960,3071840," Right."
3071840,3072720," Do you guys remember?"
3072720,3075520," Do we have any professional C++ in the chat?"
3075520,3075920," Correct."
3075920,3079760," So, the order is actually the order of these variables, not these things."
3079760,3080880," Right."
3080880,3082480," So, you can swap them around."
3082480,3086000," That will not change anything because the order of this thing matters."
3086000,3086880," And, holy fuck."
3086880,3093760," I forgot how just riddled with minds this entire language is."
3093760,3095360," It's just like almost intentional."
3095360,3098480," I completely forgot about that."
3098480,3102560," But, at the time when I was programming that, I thought this is such a cool fucking language."
3102560,3104240," Only hackers programming that."
3104240,3106640," Look how smart you have to be to programming this language."
3106640,3107200," What the fuck?"
3107200,3109920," So, that was my reaction at the time."
3109920,3112160," But, now I'm too fucking all for this."
3112160,3113680," I'm too fucking old."
3113680,3114000," Right."
3114000,3115040," I've seen some shit."
3115040,3116000," I don't give a fuck."
3116000,3117120," Give me simple language."
3117120,3118880," Maybe this is because I became dumb."
3118880,3120880," Maybe I was right."
3120880,3123760," To program in this language, you have to be extremely dumb."
3123760,3126240," And, the only reason why I don't want to program it anymore."
3126240,3129760," To program in this language, you have to be extremely smart."
3129760,3131120," That's what I wanted to say."
3131120,3134240," And, I don't program in it anymore because I became dumb."
3134240,3135760," That's probably why."
3135760,3136480," Maybe I was right."
3136480,3139440," So, maybe that's the reason."
3141440,3144480," So, every C++ dev lost without CLion."
3144480,3148320," Oh, I won't be able to run CLion on the machine right now because I'm streaming as well."
3148320,3148560," Right."
3148560,3151600," I can't run IntelliJ IDEA stuff and OBS."
3151600,3153520," It's going to kill my laptop completely."
3153520,3154640," Anyways."
3154960,3157440," So, what we have to do in here, we have to override."
3157440,3158720," Is that not?"
3158720,3161520," How do you declare that something is overwritten?"
3161520,3168880," Over C++ declare override method."
3168880,3171040," Override is optional."
3171040,3172240," Override."
3172240,3173840," It doesn't highlight that."
3173840,3177040," Oh, this is probably because it's a custom mode."
3177040,3178240," Override specifier."
3178800,3183120," Yeah, I think my mode, my custom mode doesn't have override keyword."
3183120,3186160," C++11."
3186160,3190000," Ah, you put it after that in here."
3190000,3191280," All right."
3191280,3192480," So, it's also optional."
3192480,3192800," Okay."
3192800,3195520," So, and you also have to do a virtual."
3195520,3197600," I don't remember if you have to do a virtual."
3197600,3201680," I think you don't even have to specify neither virtual nor overwrite."
3201680,3206320," If it exists in task, it will be automatically overridden no matter what."
3206320,3206560," Right."
3206560,3208800," So, I suppose that's basically the idea here."
3208800,3210320," All right."
3210320,3213040," So, and by the way, maybe I have to do it like that."
3213040,3214800," Okay."
3214800,3217280," So, how do we implement that?"
3217280,3220000," Before we implement that, let me actually try to compile this entire thing"
3220000,3223520," and see if I didn't do any fucky-wacky and potential oopsie-doopsies."
3223520,3224720," First try."
3224720,3225680," First try."
3225680,3226560," Old reflexes."
3226560,3229200," I still remember how the program in C++."
3229200,3229600," Look at that."
3230400,3231360," I still fucking remember."
3231360,3232800," I didn't forgot how to do that."
3232800,3235280," At least C++03 and C++11."
3235280,3235440," Right."
3235440,3237520," So, I don't really follow the latest C++'s."
3237520,3239920," So, right."
3239920,3242880," So, maybe I won't be able to efficiently program them."
3242880,3243600," But that's fine."
3243600,3246240," They overblowed it anyway."
3246240,3249840," Let me find weight updates."
3249840,3250800," Weight update."
3250800,3252400," Where is the weight update function?"
3252400,3252800," There you go."
3252800,3257920," So, here we check whether we are done."
3258560,3262320," So, we have some sort of a method in here that is done."
3262320,3263920," Right."
3263920,3266320," So, I think weight done."
3266320,3266560," Okay."
3266560,3270960," So, weight done basically checks whether the cursor is greater or equal to the duration."
3270960,3271920," Makes sense."
3271920,3277840," So, in here we can easily do just return cursor greater than duration."
3277840,3278880," Oh, man."
3278880,3282880," I don't even have to prefix it with this or anything like that."
3282880,3286080," Can your Rust do that?"
3286080,3287200," Can your Rust do that?"
3287200,3289200," You don't have to prefix it with shit."
3294080,3297440," Also, you can put this kind of thing."
3297440,3302160," Indicating that this method is not going to be modifying the class."
3302160,3305760," So, you can use this method in a const mode."
3305760,3308080," Damn."
3308080,3310000," Look how fancy that shit is."
3310000,3312640," Look how fancy that shit is."
3312640,3313280," Isn't that epic?"
3313280,3316880," So, we're going to also have some other methods in here."
3316880,3321280," For example, interp, which returns your value from 0 to 1."
3321280,3323200," It's an interpolation of the weight task."
3323200,3323440," Right."
3323440,3325440," So, essentially, interp."
3325440,3328080," And we don't even have to accept anything in here."
3328080,3330000," And in here, we can probably also say const."
3330560,3335200," So, the idea is here is to basically return cursor over duration."
3335200,3336640," All right."
3336640,3337920," So, return something like that."
3337920,3340960," But, what if the duration is equal to 0?"
3340960,3347040," In our case, I basically check whether it's less or equal than 0."
3347040,3347200," Right."
3347200,3350400," So, if it's less or equal than 0, that means I'm going to just return 0."
3350400,3350640," Right."
3350640,3351200," In that case."
3351200,3357280," So, if duration less or equal than 0,"
3358080,3361600," I suppose we just return 0."
3361600,3362240," Like so."
3362240,3364960," Otherwise, we are returning this over that."
3364960,3366160," So, that seems reasonable."
3366160,3368160," And that's about it."
3368160,3369120," Do we have anything else?"
3369120,3371280," I don't think we even need anything else."
3371280,3371920," Okay."
3371920,3373200," So, on update."
3373200,3376080," If done."
3376080,3379360," I suppose I didn't even have to do this or anything like that."
3379360,3380880," If done, just return true."
3380880,3381760," Okay."
3381760,3386880," If not started, we just say that we started."
3386880,3387280," Okay."
3387280,3387760," That's cool."
3387760,3392400," Then, we take the cursor and we add the delta time."
3392400,3394880," The time of a single frame."
3394880,3397440," And then, we return whether we're done or not."
3397440,3401600," Because after this, the cursor may become bigger than the duration."
3401600,3406960," So, we have to sort of tell that to the user of this class."
3406960,3408960," That's already kind of concise."
3408960,3409920," I really like that."
3409920,3414800," So, the fact that I don't have the prefix with this really makes the code concise."
3414800,3417040," And this is probably not probably."
3417040,3418240," I know for sure."
3418240,3422160," This was one of the motivation of the using keyword in JAI."
3422160,3424720," Of the using keyword in JAI."
3424720,3427040," Because in JAI, if you have some sort of a structure, right?"
3427040,3432480," So, and you pass that huge struct as a parameter in here."
3432480,3432960," Like so."
3432960,3437360," So, you can essentially put using in here."
3437360,3443760," And it will export all of the fields of this struct into the scope of the body of the function."
3443760,3449920," Sort of creating a similar effect as with the method of the class in C++."
3450960,3451280," Right."
3451280,3452960," So, where..."
3452960,3455840," And yeah, you can prefer prefixing and stuff like that."
3455840,3459200," But it is actually extremely convenient."
3459200,3464160," It is actually extremely convenient for slow and incremental refactoring."
3464160,3469760," Because you can start with a very naive, very dumb implementation of a certain algorithm that just has the methods."
3469760,3474720," Like, uses variables instead of the structure."
3474720,3475280," Right."
3475280,3478240," And then at some point you've got a lot of variables in here."
3478240,3480000," And you want to group them into the structure."
3480000,3487600," So, that kind of means that you have to refactor all of the code in here down there that uses those variables."
3487600,3488480," But you don't have to."
3488480,3491280," You can just group them in the structure and then export all of the names."
3491280,3494400," And don't have to change this code at all."
3494400,3497920," That is very useful for like slow incremental refactoring."
3497920,3500080," Like, it's ergonomic actually."
3500080,3501200," It's extremely ergonomic."
3501200,3502880," Right."
3502880,3508320," And what's interesting is that a lot of syntactical and sematical features of Jai were developed with that in mind."
3508320,3514320," That you're going to write some piece of code and then you're going to evolve that over time to something else."
3514320,3516960," And all of these features kind of facilitate doing that."
3516960,3518800," It's actually kind of cool."
3518800,3523760," I wish Jai becomes public soon."
3523760,3526560," Like, because a lot of people really need to see that language."
3526560,3527600," It's so fucking cool."
3527600,3529920," Fortunately, it's not ready yet."
3529920,3530240," Right."
3530240,3530480," So..."
3530480,3537280," It's a really cool, well thought out language."
3537280,3538400," It's fucking insane."
3538400,3540880," Man's been working on that language."
3540880,3544160," Man's been cooking that language for more than 10 years."
3544160,3551440," Like, if you try to use it, you can actually feel how much thought went into that language."
3552080,3553520," It's really well thought out."
3553520,3556160," Syntax is kind of quirky in some places."
3556160,3559600," But over time, you realize that sometimes it's even intentional."
3559600,3559840," Right."
3559840,3563600," And over time of using this language, you realize why it was like that."
3563600,3564720," It's actually really cool."
3569440,3573360," Anyways, so we have that and that seems to be compiling."
3573360,3574080," So, yeah."
3574080,3576240," That's pretty boogers."
3576240,3577680," And that's pretty boogers."
3578560,3581600," And so, this is one of the things that we have in here."
3581600,3583440," So, we're just waiting on something."
3583440,3584880," I'm just waiting on something."
3584880,3586880," I want to have interpolators."
3586880,3588240," Right."
3588240,3590560," So, and the way I implement interpolators, by the way,"
3590560,3597360," the thing that interpolates stuff over time, interpolate like vectors and stuff like that,"
3597360,3601360," they are implemented in terms of the wait task."
3601360,3602000," Right."
3602000,3602320," Right."
3602320,3604720," For example, maybe we can take move vector2."
3604720,3605600," Right."
3605600,3606000," There we go."
3606000,3608960," So, they hold the state of wait."
3608960,3609760," Right."
3609760,3611280," They hold the state of wait."
3611280,3612800," And they have additional information."
3612800,3618160," And the only reason why they used wait, they use wait for its interpolator method."
3618160,3623360," So, they can then set value to the interpolation between start and target."
3623360,3624240," Right."
3624240,3627520," So, that's why we need to actually have it like that."
3627520,3634400," To be fair, that kind of simulates inheritance, if you think about it."
3634400,3639680," That literally simulates inheritance, I just didn't realize that."
3639680,3644080," Yeah."
3644080,3644640," Look at that."
3644640,3648160," Didn't I just inherit wait data?"
3648160,3649120," Wait, what the fuck?"
3649120,3653760," This is inheritance."
3655360,3660160," It's more like a, yeah, it's more like composition, but composition, like inheritance is kind of like"
3660160,3660800," composition."
3660800,3661760," Right."
3661760,3668160," It's just like, automatically, like, exports all of the names from this thing into the scope of the structure."
3668160,3669760," Right."
3669760,3677120," So, that kind of means that I can implement moveVec2 as a child of wait."
3678160,3685440," Class, moveVec2, public, wait."
3685440,3688560," So, I can do shit like that, actually."
3688560,3693200," But, by the way, I want to have an access to these things."
3693200,3695680," But do I need to, actually?"
3695680,3698880," So, the only reason why I need this access, I need to have started in here."
3699680,3706080," So, yeah, if I just do the public, all of this private stuff is not going to be available for moveVec."
3706080,3707920," Right."
3707920,3709360," Do I understand that correctly?"
3709360,3710960," I think you have to make it protected."
3710960,3712720," Right."
3712720,3715920," You have to make it protected to be able to access all of that stuff in here."
3715920,3719920," Do we have any professional C++ or C++ in the chat?"
3719920,3720160," Okay."
3720160,3720400," Okay."
3720400,3721040," So, that's cool."
3721040,3723600," Or, again, we're not getting into the gators, okay?"
3723600,3725280," We're not getting into the gators, right?"
3725280,3728960," So, that's for sure, that's for sure, for sure."
3728960,3730560," All right."
3730560,3732000," So, I think it's going to be protected."
3732000,3735360," And in here, we're going to have some private stuff, which is going to be basically..."
3735360,3740080," Let's call it, maybe, the place."
3740080,3744400," So, this is basically the variable that we're going to be mutating over time."
3744400,3745680," That's what it is."
3745680,3748000," It's the variable that we're going to be mutating over time."
3748000,3752960," And here, we're going to have start and target, right?"
3752960,3754160," So, start and target."
3754800,3755360," Okay."
3755360,3759360," So, and in here, let's create the constructor."
3759360,3765440," So, in the constructor, we are going to accept the place, right?"
3765440,3767520," The place where what we're going to be mutating."
3767520,3772480," The target, where we have to bring the place."
3772480,3778000," And also, the duration during, like, how many seconds we have to do all of that."
3778000,3779200," All right."
3779200,3784000," So, then, we're going to be, I suppose, passing the duration to the wait, right?"
3784000,3786640," So, because we're inheriting this and that thing, yeah."
3786640,3787840," So, that's basically is that."
3787840,3791120," And then, place is going to be place."
3791120,3794640," And the target is going to be target."
3795520,3799600," But, start is going to be, I suppose, zero for now."
3799600,3804320," I wonder if I can just do vector to like this."
3804320,3806720," Does it have a default constructor or something like that?"
3806720,3808080," I wonder if it's going to work or not."
3808080,3808880," But, we'll see, we'll see."
3808880,3814080," So, and in here, I actually want to overwrite this entire thing."
3814080,3816800," So, how do I overwrite the method of wait?"
3816800,3817600," Does anybody know?"
3817600,3822000," Do I just implement it like this and it will automatically overwrite it?"
3822000,3822720," Does anybody know?"
3822720,3826160," Will it automatically overwrite the one from here?"
3828880,3830400," So, virtual overwrite."
3830400,3832800," So, but I mean, overwrite is optional."
3832800,3835600," Overwrite is optional, if I remember correctly."
3835600,3836800," Okay."
3836800,3840720," Let's actually put virtual overwrite like literally everywhere in here to indicate that"
3840720,3843760," that's what we're doing, just in case, right?"
3843760,3847360," Just in case."
3847360,3850720," Casey would be so mad."
3850720,3856880," I mean, I've been programming in Rust, in a very hard code Rust lately, and Casey was not mad about it."
3856880,3858400," I'm not sure if he even watches me."
3858400,3861760," I think we're totally safe."
3861760,3862960," I think we're totally safe."
3862960,3866000," Wait."
3867040,3872000," Didn't he say in one of his like clips on the YouTube that circulate on YouTube that if he saw"
3872000,3875040," somebody writing shit like that, he would fire them?"
3875040,3876720," Damn."
3876720,3879920," But I mean, this is a research project."
3879920,3880160," Okay."
3880160,3882160," I'm doing the research."
3882160,3885360," I just want to see how convenient it is to do shit like that."
3885360,3886560," Right."
3886560,3888000," So, this is not the production."
3888000,3889040," This is research."
3889040,3893280," It's okay to write shit code if you are researching."
3893280,3894240," Okay."
3894240,3896080," So, we are researching."
3897680,3898160," Ah."
3898160,3898880," Anyways."
3898880,3900480," So, let's continue."
3900480,3901440," So, how do you do that?"
3901440,3902880," Damn."
3902880,3904480," You have to do something like super."
3904480,3906080," Yeah."
3906080,3908240," Okay."
3908240,3909040," I forgot."
3909040,3911520," C++ call super methods."
3911520,3914560," I think it's from Java."
3914560,3916400," The word super is from Java."
3916400,3917840," Yeah."
3917840,3918400," No super."
3918400,3919360," I think it's a Java thing."
3919360,3920720," Yeah."
3920720,3921680," Based class."
3921680,3924320," So, you have that."
3924320,3925440," Jesus Christ, bro."
3926480,3927440," Oh, you have a."
3927440,3928320," Oh, my God."
3928320,3930560," You have a multiple inheritance and stuff."
3930560,3936000," That's why people prefer composition over inheritance."
3936000,3936880," That's literally why."
3936880,3937840," Anyways."
3937840,3939040," So, we're going to have a wait."
3939600,3940560," But here's the thing."
3940560,3945920," So, if we have not started yet."
3945920,3948320," If we have not started yet."
3948320,3949280," This is very important."
3949280,3950800," What we have to do."
3950800,3955440," We have to initialize start with whatever we have currently in place."
3956240,3957920," That is super important."
3957920,3958960," That is super important."
3958960,3960000," Then."
3960000,3963680," We're going to do wait update."
3963680,3963920," Right."
3963920,3965040," So, we're going to do wait update."
3965040,3967360," And that kind of indicates whether we are finished or not."
3967360,3967520," Right."
3967520,3969120," So, we kind of want to save that."
3969120,3971520," After we did that."
3972640,3973520," What we want to do."
3973520,3976000," Oh, this one."
3976000,3976880," This one is really interesting."
3976880,3979360," So, if I call interp."
3979360,3980080," I think."
3980080,3981280," I think it's going to just work."
3981280,3981680," Right."
3981680,3982560," So, essentially."
3982560,3983520," What I want to do now."
3983520,3991840," I want to learn from start to target using interpolator from the wait class."
3991840,3992320," In here."
3992320,3993360," From the wait class."
3993360,3996080," And on top of that."
3996080,3998960," I think I want to smooth step this thing."
3998960,3999120," Right."
3999120,4001680," Because interpolator just goes from 0 to 1."
4001680,4002880," It's a straight line."
4002880,4008800," So, using smooth step will turn it into the like S shape."
4008800,4010240," Which makes it a little bit smoother."
4010240,4011360," We already talked about that."
4011360,4013360," It just like makes all the motions a little bit better."
4013920,4015920," And then I'm taking the place."
4015920,4018320," And I'm replacing this entire thing like so."
4018320,4021200," And then I just return the indication whether we're finished or not."
4021200,4021440," Right."
4021440,4022160," So, you see."
4022160,4028320," I'm using the wait task as an interpolator for actual interpolation of vectors."
4028320,4030400," So, it's actually kind of convenient."
4030400,4031040," Right."
4031040,4031920," So, because of that."
4031920,4036160," The three fundamental tasks in the entire animation system are."
4036160,4037040," Wait."
4037040,4038400," Sequence."
4038400,4038960," And group."
4038960,4040000," Right."
4040000,4040560," Wait."
4040560,4043360," Just interpolates from 0 to 1."
4043920,4046320," Sequence plays this task in sequence."
4046320,4046960," Sequentially."
4046960,4049360," And group plays the task simultaneously."
4049360,4052240," With these three tasks, by doing inheritance and stuff like that."
4052240,4055520," You can actually build up like arbitrarily complex animations."
4056400,4060880," These are the three fundamental blocks of the entire system."
4060880,4065120," It's actually kind of cool that I can boil it down to just three things."
4065120,4067520," And everything else is just the flavors of these three things."
4068640,4071040," And because of that, I'm super proud of this system actually."
4071040,4071920," I'm super proud of it."
4071920,4073680," All right."
4073680,4077680," So, let's actually try to compile this entire thing and see if it's going to work or not."
4077680,4078880," So, it doesn't really work."
4078880,4080800," Conflicting types."
4080800,4082800," So, return."
4082800,4083280," Oh, yeah."
4083280,4085120," It's supposed to be the boolean."
4085120,4085920," The boolean."
4085920,4088640," Smooth step."
4088640,4092320," It doesn't know about smooth step because it is located interpolators."
4092320,4094080," Yeah, interpolators."
4094080,4096960," Start conflicting."
4096960,4098640," All right."
4100640,4103040," It's actually vector2."
4103040,4106720," Yo, it just compiled."
4106720,4108960," Chad, can you believe that?"
4108960,4110800," Chad, is this real?"
4110800,4113040," Is this motherfucking real?"
4113040,4115360," I can't believe that."
4115360,4117120," I can't fucking believe that, maybe."
4117120,4121440," All right."
4121440,4123600," So, very interesting."
4123600,4126000," So, let's create the task."
4126960,4131680," So, I suppose we have to create it on the heap, right?"
4131680,4132880," Don't we?"
4132880,4134800," We have to create it in the heap."
4134800,4140400," Because that enables the virtual dispatching magic."
4140400,4142640," Virtual dispatching magic."
4142640,4145120," Without the heap, it's not going to work."
4145120,4146800," So, here's the task."
4146800,4149040," And this is going to be just the task."
4149040,4151600," When I do pub reset."
4153280,4157200," pub reset if p task."
4157200,4160480," We have to delete it first, right?"
4160480,4162240," So, we just do that."
4162240,4165920," Then, I reset it like so."
4165920,4167520," New task."
4167520,4170400," Actually, let's do new move"
4170400,4172960," vector."
4172960,4177440," So, here I have to specify the place."
4177440,4180800," So, let's have some sort of a position in here, right?"
4180800,4182000," So, this is going to be position."
4182000,4186000," And I'm going to be moving it somewhere else."
4186000,4187600," Let's actually take maybe"
4187600,4193840," a vector of 200 by 200."
4193840,4195440," I'm not sure if it's going to work like that."
4195440,4196240," But we'll see."
4196240,4196640," We'll see."
4196640,4201360," So, and we're going to be interpolating all of that within one second."
4201360,4201520," Right?"
4201520,4203200," So, we're going to be playing that within one second."
4203200,4204880," So, when I do update."
4204880,4206560," When I do update."
4206560,4208720," I'm going to be just pulling this entire thing."
4208720,4210400," I'm taking the task."
4210400,4212000," And I'm just updating it like that."
4212000,4213520," And that's it."
4213520,4214720," So, if it's finished."
4214720,4219440," I think I want to keep track whether we're finished or not."
4219440,4219760," Right?"
4219760,4222400," So, let me find the plug."
4222400,4225040," So, this one is going to be finished or not."
4225040,4227920," I said finished."
4227920,4230480," So, plug reset."
4231280,4234640," And we're going to say that initially finished is false."
4234640,4239120," And when we call finished, we just do p finished."
4239120,4239680," There we go."
4239680,4241600," So, let's try to recompile this entire thing."
4241600,4242560," Okay."
4242560,4243760," So, we don't have a position."
4243760,4245520," So, that's an interesting stuff."
4245520,4253360," So, we can basically define position as the position of this sign that we have in here."
4253360,4256000," So, let's actually get rid of this entire stuff."
4256000,4256240," Right?"
4256240,4258480," We're not going to try to center it or anything."
4258480,4262240," We're going to just go ahead and use this position like so."
4262240,4263120," Right?"
4263120,4264320," So, that's what we're going to be doing."
4264320,4266080," All right."
4266080,4267520," Right."
4267520,4268560," And now, let me try to..."
4268560,4269360," No."
4269360,4270800," It's a wrong thing."
4270800,4273040," So, this is going to be prob so."
4273040,4274720," And that just worked."
4279280,4280480," Reset didn't work though."
4280480,4282960," I wonder why."
4282960,4284320," I think I know why."
4284320,4289120," When I do plug, it just works."
4289120,4291040," That's a nice smooth step."
4291040,4291680," Yeah, I know."
4291680,4293040," So, that's why I like to use it."
4293040,4294400," It's just like it feels better."
4294400,4296720," It just works surprisingly."
4296720,4298720," So, maybe C++ is not that bad of a language."
4298720,4299200," You have to roll."
4299200,4299760," Who would have thought?"
4299760,4301520," So, position..."
4301520,4303040," Can I just do something like..."
4307200,4309680," Apparently, the book's worth their money."
4309680,4310240," Look at that."
4310240,4311440," Okay."
4311440,4313200," And I'm going to reset it."
4313200,4314160," And I keep resetting it."
4314160,4314960," And I keep resetting it."
4314960,4320240," Every time I reset, it actually recreates the object from scratch."
4320240,4323840," So, one of the advantages that we had in C, we used arenas."
4323840,4326320," How do we use arenas in C++?"
4326320,4327440," We have to..."
4327440,4329920," I think I vaguely remember."
4329920,4332880," You have to have placement new."
4332880,4334000," Oh, my God."
4334000,4336880," Oh, do you guys know what it is?"
4337200,4340080," Oof, oof, oof, oof, oof."
4340080,4341520," So, stdvec..."
4341520,4342640," No, it's not that."
4342640,4346400," Like, I want to allocate just a single object in the arena."
4346400,4348320," It has nothing to do with vectors, honestly."
4348320,4349520," It has nothing to do with vectors."
4349520,4351600," Arena allocator."
4351600,4354080," Yeah, arena as an allocator."
4354080,4362880," Yeah, because some of the containers, they accept allocator as a template parameter."
4362880,4367040," But that means I have to, like, fit my current arena into that interface."
4367040,4368880," And it's a huge pain in the ass, probably."
4368880,4372480," Maybe not that much of a huge pain in the ass, but it's additional code that I have to write."
4372480,4373600," And I don't want to write it."
4373600,4376400," Unique pointer."
4376400,4377760," No, this is not what I'm talking about."
4377760,4381760," So, C++ placement new."
4381760,4383360," I want to use arena."
4383360,4386320," I don't want to use the C++ mechanisms and shit like that."
4386320,4390800," We're not creating Qt with its Q object hierarchies and shit like that."
4390800,4394960," I want to just shit into arena and then deallocate everything at once."
4394960,4398560," Without doing recursive traversal of things or anything."
4398560,4402720," So, yeah, it's a placement new."
4402720,4404480," What do you use this there for placement new?"
4404480,4407680," You may want to do this for optimizations."
4407680,4411440," Placement new."
4411440,4420560," Yeah, the interesting thing about placement new is that placement new does not allocate memory with malloc or anything like that."
4421120,4430000," So, it takes your piece of memory that you already pre-allocated and creates the object in that piece of memory."
4430000,4433520," It places it there instead of allocating things."
4433520,4435840," Instead of allocating things."
4435840,4441920," If I want to allocate all these things in an arena, what I have to do, I have to first allocate a piece of"
4441920,4449760," memory using my arena in C and then place those objects into that piece of memory like this."
4451440,4452720," Do you guys know about that?"
4452720,4454000," Do you guys know about this kind of stuff?"
4454000,4455840," It's some advanced C++ stuff."
4455840,4460640," Geeks for geeks, digs for digs, got your hyper in the chat."
4460640,4465840," That's pretty cool."
4465840,4466720," Yeah, it is pretty cool."
4466720,4473680," So, it's kind of needed for C++ compiler to keep track of the lifetimes of the objects correctly."
4473680,4474880," Right."
4474880,4478400," Because it may or may not do some optimizations based on that."
4478400,4485600," If you just allocate a piece of memory and just cast it to a certain object, compiler doesn't know"
4485600,4487680," when the object starts to live."
4487680,4490320," And because of that, it may optimize some shutout."
4490320,4491440," Right."
4491440,4497680," So, you need to like explicitly tell the compiler, okay, the project, the object starts to live starting from here."
4497680,4502960," So, and yeah, and it will take that into account while doing optimizations and everything."
4503760,4505360," Can Rust do that?"
4505360,4510640," A place menu has been written in Rust, finally."
4510640,4512240," It became safer."
4512240,4516960," Anyways, so let's actually do some epic shots."
4517840,4522880," So, what I want to do is create more interesting tasks."
4522880,4529280," For instance, I want to create maybe, you know what, you know what, the time has come."
4529280,4536800," The time has come to maybe, no, let's create a sequence, right?"
4536800,4538080," So, let's create a sequence."
4538080,4542720," So, I want to have a longer tasks, but I can just have a longer task."
4542720,4543760," Who said I can't do that?"
4543760,4547840," Like, I can literally do something like new move, right?"
4547840,4552080," And I can say move in like in 10 seconds."
4552080,4555360," So, we're going to give it 10 seconds to move from one point to another one."
4555360,4559440," And the thing I'm going to try to do while it is moving,"
4559440,4562160," okay, I can safely hot reload."
4562160,4564640," Everything's fine and it preserves its state."
4564640,4564880," Cool."
4564880,4569120," Now, I want to do the following thing."
4569120,4571360," I want to modify the code, right?"
4571360,4573360," So, I have a smooth step in here."
4573360,4575120," I'm going to change it to sign step."
4575120,4576640," Right."
4576640,4577440," So, okay."
4577440,4579280," I'm changing it to sign step."
4579280,4580800," So, I'm re-compiling everything."
4580800,4581120," Okay."
4581120,4582320," It's moving and hot reload."
4582320,4600480," So, apparently, you were right, right?"
4600480,4601840," So, Netfree, you were right."
4601840,4605600," So, it doesn't work the way I implemented it."
4605600,4607920," So, it's basically just function pointers."
4607920,4613120," We can try to see if it, like where exactly does it break, right?"
4613120,4614560," So, where exactly does it break?"
4614560,4620560," So, that means that object still holds the pointer to the function and that pointer got invalidated."
4620560,4622400," Right."
4622400,4626000," So, that means my system is superior to whatever C++ has generated."
4626000,4628240," Damn."
4628240,4629600," I guess that's it for the day."
4629600,4630320," Thanks, everyone."
4630320,4636320," Like, I mean, again, you can use the system that I created in C++ as well."
4636320,4637760," But here's an interesting thing."
4639680,4640960," Let's confirm that it is true."
4640960,4643280," Let's confirm that it is true because I'm getting too excited."
4643280,4650080," Like, we need to 100% confirm that it crashed on trying to call that pointer and that pointer was invalid or something like that."
4650080,4650320," Right."
4650320,4653120," So, because that's usually the case."
4655440,4662080," So, yeah, I need to double check that I'm compiling with debug information."
4662080,4662720," That is good."
4662720,4666000," And we want to use GF too."
4666000,4668560," So, this is going to be PANIM."
4668560,4670320," Yeah."
4670320,4674560," And let's just run it."
4674560,4676960," Build lib prob."
4676960,4683280," I'm going to pause this entire thing."
4683280,4685200," And in sign step."
4685200,4688800," So, probe smooth step."
4688800,4689120," Right."
4689120,4690480," So, this is a smooth step."
4690480,4691840," We're going to rebuild this entire thing."
4691840,4693920," It's rebuilding."
4693920,4696000," Okay."
4696000,4697200," So, it crashed."
4697200,4697920," Let's see where."
4697920,4699520," Plug update."
4699520,4701520," So, it was trying to call plug update."
4701520,4706400," Yeah."
4706400,4708880," So, it couldn't call that thing anymore."
4708880,4712560," It couldn't call that thing anymore because the pointer got invalidated."
4713920,4715600," I think that's basically the case."
4715600,4718560," And what's funny is that"
4718560,4732080," is there any way in C++ to solve that without writing your own virtual table system like we did in C?"
4732080,4741520," Is there any way in C++ to get an access to that virtual table and like not virtual table but like patch the pointers to this function somehow?"
4741520,4743760," Is there any way to do that?"
4743760,4744160," Lambda."
4744160,4745520," Will Lambda solve anything?"
4745520,4748320," Like I'm not sure if Lambda solves anything but yeah."
4748320,4750320," I didn't think so."
4750320,4753600," That's kind of interesting actually."
4753600,4754480," It's kind of interesting."
4757200,4758800," No, which is Casey's problem with it."
4758800,4759840," Okay."
4759840,4760800," So, wow."
4760800,4762240," That's that's actually super cool."
4762240,4768320," So, we discovered like we went the steps that Casey went to come to this conclusion."
4768320,4770000," What the fuck?"
4770000,4783040," It's actually kind of interesting because I first like watched his clip about like virtual tables and stuff like that and I couldn't really comprehend it because I never had like a real world example of what he's talking about."
4783040,4783760," Right."
4783760,4787360," And now I kind of experienced it, experienced it like firsthand."
4787360,4790080," It's actually kind of cool."
4790080,4791040," Right."
4791040,4797600," It would be really great if C++ exposed the virtual table mechanism so you can do something custom with them."
4797600,4801760," You could try to patch the Vtable pointer or something probably UB to do that."
4801760,4802960," Yeah, it's going to be UB."
4802960,4810320," But I mean, if you're targeting a specific platform using a specific compiler, maybe that's fine."
4811040,4815600," Even if you're using two compilers, it's not that difficult to implement it for two compilers or something."
4815600,4816960," They're usually kind of common."
4816960,4818080," Well, yeah."
4818080,4820880," So, all right."
4820880,4823280," That's literally the question that I wanted to answer."
4823280,4824880," Does it solve the problem?"
4824880,4826240," The answer is no, it doesn't."
4826240,4829920," And whatever I have in C++ is actually, it's just better."
4829920,4831360," It's just freaking better."
4831360,4839520," It's a little bit involved because to define a class, you also then have to register it in that table and stuff like that."
4840400,4843120," So, yeah, it's a little bit of pain in the ass."
4843120,4845680," But yeah, it's kind of funny."
4845680,4851040," But anyway, let's actually define more interesting tasks."
4851040,4857120," For instance, the sequence task."
4857120,4857360," Right."
4857360,4858880," So, I want to have a sequence in here."
4858880,4861760," And now we're going to be actually doing that."
4861760,4865360," Because in the constructor, I want to have variatics."
4865360,4872560," So, can I template on the constructor of the class?"
4876560,4878640," So, can I do that?"
4878640,4882880," Why not use X macros to make it easier to create new functions in C?"
4882880,4888960," You mean new instances of the interface, like new instances of tasks."
4888960,4899040," This is because new classes that implement task interface, they are very dynamic and they're not known at compile time."
4900160,4900880," That's the thing."
4900880,4903040," That's a very interesting point, actually."
4903040,4906240," Which, again, C++ may not even be able to solve."
4906240,4913360," So, when the program loads, it has a certain amount of predefined classes."
4914480,4920560," Then, we load DLL and that DLL adds more of its classes."
4920560,4923600," It adds more of its classes."
4923600,4926640," And then that DLL needs to reload."
4926640,4934720," And all these classes that were defined in that DLL, their pointers to the functions also has to get updated."
4934720,4936800," It's a very dynamic system."
4936800,4942480," It's so dynamic, you can't really know all these functions on all these classes at compile time."
4942480,4947040," Hence, you can't really use X macros because X macros are a compile time feature."
4947040,4949280," Is that what I'm talking about?"
4949280,4950640," So, it is too dynamic."
4950640,4953440," It's too runtime-ish to use X macros."
4953440,4957680," So, I would use that if I could, but I just can't."
4957680,4958960," It's too dynamic for that."
4958960,4960160," Right?"
4960160,4962160," It has to be flexible like that, actually."
4962160,4963840," What X macros..."
4963840,4964800," It's actually a technique."
4964800,4967680," Let me demonstrate here."
4967680,4972400," It's actually a technique where you have a list of things that you know at compile time."
4972880,4975920," But you want to do different things with them."
4975920,4977440," So, I wonder if I can demonstrate that."
4977440,4978880," So, for example, main.c"
4978880,4980320," Right."
4980320,4983520," So, let's say we have a list."
4983520,4984720," Right."
4984720,4985440," We have a list."
4985440,4988320," And what's that going to be a list?"
4988320,4989920," Let's call them fruits."
4989920,4990880," Right."
4990880,4992800," So, this is basically fruits."
4992800,4994160," And what kind of fruits you have?"
4994160,4999040," You have apple, banana, cherry."
4999040,5001440," What else can we have in here?"
5001440,5002160," Potato."
5002160,5002400," Right."
5002400,5005440," So, it's like, you know, the actual fruits in here."
5005440,5007600," So, we don't have to put things and stuff."
5007600,5009120," Right."
5009120,5015360," But on top of just defining those names, we wrap them all with X."
5015360,5017200," Right."
5017200,5018960," We wrap them all with X."
5018960,5022720," Like so."
5024000,5026000," What that enables us to do."
5026000,5028480," What that enables us to do."
5028480,5032400," That enables us to define that X where you have a name."
5032400,5038560," And for instance, what this thing does, it expands to int name."
5039440,5039920," Like so."
5039920,5040960," Int name."
5040960,5041280," Like so."
5041280,5042160," Maybe we can..."
5042160,5042720," No, no, no."
5042720,5043040," It's fine."
5043040,5044320," Right."
5044320,5051440," And essentially, what you do, then you call the fruits macro, and then you undefine X."
5051440,5053680," Then you undefine X."
5053680,5060960," If you try to expand this entire thing, right, what it will do, it will expand to four definitions"
5060960,5061680," of the variables."
5061680,5064240," Why would you need that?"
5065120,5072880," You may want to actually define another X macro a little bit later, which turns name into a string."
5072880,5077920," And then you want to define an array, a global array that looks like this."
5077920,5078880," Names."
5078880,5080640," Right."
5080640,5082560," Then you put it like that."
5082560,5083840," Then you do fruits."
5083840,5086000," Then you close this entire thing."
5086000,5087440," And then you undefine X."
5087440,5091120," If you try to expand that stuff, undefine X."
5092320,5098960," You see, you actually end up with definition of four variables, and then a static array,"
5098960,5103120," where you have each individual variable in here as a string."
5103120,5106560," So you probably want to actually put a comma in here, like so."
5106560,5107760," Right."
5107760,5114560," So, and essentially, if you add a new thing in here, right, tomato,"
5115200,5118960," it will update both of these places automatically."
5118960,5123600," It will add another variable definition and another element in that array."
5123600,5128320," And you can actually have several of such places where, based on this list of name,"
5128320,5131440," you create, auto-generate different things."
5131440,5136960," So essentially, this fruits is a compile time list of things."
5137680,5141680," And now you can expand that compile time list to different things."
5141680,5148640," So this is called X macro because of this special X macro that you define yourself."
5148640,5148880," Right."
5148880,5152640," So essentially, you sort of like, you sort of like doing compile time map."
5152640,5154000," That's very cool."
5154000,5155120," It is actually super cool."
5155120,5160000," And it's used in like PRC code basis for defining complex things."
5160000,5163520," Because this is kind of like a combinatorial problem, right?"
5163520,5170800," Because you add one thing in here and you have to not forget to add each in each individual place in here."
5170800,5178560," So you have basically a Cartesian product between the list of elements and the places that you have to update."
5178560,5186320," To resolve that combinatorial explosion, you can use X macros and basically collapse it to just like one list."
5186320,5186480," Right."
5186480,5187680," Which makes it super convenient."
5188240,5190960," So, why this is not applicable?"
5190960,5195760," This is only applicable when you know all of the elements of that list at compile time."
5195760,5197680," We simply don't."
5197680,5198640," That's it."
5198640,5201120," So that's the reason why we don't use X macros."
5201120,5203280," We just don't know all of these things at compile time."
5203280,5207600," Because some of these things are coming when we are loading the devil."
5207600,5212560," Well, I mean, it is as convenient as C is, right?"
5212560,5214560," So, I mean, I understand."
5214560,5217840," Look, when I say convenient,"
5217840,5222080," you also need to apply the usual C filter to everything I say, right?"
5222080,5225840," It is convenient by the C standards."
5225840,5230320," Advanced copy paste techniques."
5230320,5230960," Yeah, exactly."
5230960,5232080," Advanced copy paste techniques."
5232080,5236400," So, and I use that for plugins, actually."
5237120,5238880," So, here in plug.h."
5238880,5239520," Yeah, there we go."
5239520,5242480," So, we have a list of functions for the plugin."
5242480,5244560," So, this is a plugin interface."
5244560,5247040," This is not functions for the tasks."
5247040,5249200," They are not interface, right?"
5249200,5250800," They're part of the mechanism, right?"
5250800,5252000," So, this is not that."
5252000,5254080," So, this is the interface of the plugin, right?"
5254080,5255600," And I define this list."
5255600,5260800," And here I just define variables that store pointers to these functions."
5260800,5264240," And then later, in the plugin itself, right?"
5264240,5271920," So, I expand this list into basically sequentially trying to load each individual function."
5271920,5274560," So, now I don't have to update two places."
5274560,5279520," I can just add a plugin in one place and it updates both of the places simultaneously."
5279520,5285040," So, that's basically what the X macros are."
5285040,5286320," That's what they are."
5288960,5289440," All right."
5289440,5290480," So, let's go here."
5290480,5291680," And we want to create a sequence."
5291680,5296000," And sequence is not going to be, you know, inheriting weight."
5296000,5297520," It's going to be inheriting task."
5297520,5303200," And this gives us an opportunity to finally use std vector, right?"
5303200,5309200," So, protected std vector."
5309200,5313280," And this is going to be, I suppose, pointers to the tasks."
5313280,5314320," And this is tasks."
5314880,5320000," So, the real question is, it is super convenient in C to use variatics."
5320000,5321760," Can we use variatics in here?"
5321760,5325040," So, can we just do templates, something like that?"
5325040,5328800," Speaking of C++, here is a useful progress report."
5328800,5330240," Are we modules?"
5330240,5331600," Oh my god!"
5331600,5337040," Dude, we still don't have modules in C++?"
5337040,5344400," I think I stopped following C++ when people were saying that"
5344880,5346240," modules are almost there."
5346240,5348160," And it was, like, many, many years ago."
5348160,5350320," We still don't have modules."
5350320,5353600," So, you have in C++ 23."
5353600,5358400," But, like, is any, like, actually working compiler implements the, like, modules?"
5358400,5359920," Or, I don't know."
5359920,5363600," Estimated finish."
5363600,5364320," Oh my god!"
5364320,5370400," GCC support is funny, I see."
5370400,5373280," You have modules, but no libraries do this."
5373280,5374160," Oh my god!"
5374160,5376080," I see."
5376080,5378080," It's a very cool website."
5378080,5378400," Thank you."
5378400,5382400," So, how do you do variatics in C++?"
5382400,5383440," Variatics."
5383440,5385520," Variatic templates, right?"
5385520,5394960," I heard recently that variatic templates in C++ are rather convenient, right?"
5394960,5400720," So, you just create some sort of, like, a type name T and something like this."
5400720,5404880," So, I need an example on how to do that."
5404880,5405120," Yeah."
5405120,5407520," So, you have something like this."
5407520,5408640," So, we can even say..."
5408640,5410080," Aha!"
5410080,5412080," So, you have to put this thing in here."
5412080,5418320," So, this is TS, then you accept that TS as a parameter like this, right?"
5418320,5419680," So, that gives you tasks."
5419680,5422480," But this is..."
5422480,5422800," No."
5422800,5424160," I want to have..."
5424160,5425120," Aha!"
5425120,5426560," So, this is how you do that."
5426560,5428480," So, this is args."
5429760,5432320," And then, this is what we're going to be doing."
5432320,5438800," And if I want to iterate through them, if I want to iterate through them, how do I do that?"
5438800,5444960," Effectively, I want to push them in..."
5444960,5446000," Oh, wait a second!"
5446000,5452880," I'm pretty sure I can just do something like task, tasks, args."
5452880,5460560," So, you're constructing from parameter pack, you can use std array instead of factor."
5460560,5463600," I could, but I'm not going to jump into that yet."
5463600,5465680," So, and also, an interesting question."
5465680,5470400," So, do I have to do template on the entire class or just the constructor?"
5470400,5473840," So, yeah, that's a good question."
5474720,5480560," So, virtual, update, environment, environment."
5480560,5486400," Another thing, by the way, we have to keep track of is the size_t_it,"
5486400,5490320," which is the current task that we're handling."
5490320,5492160," So, this is going to be zero."
5492160,5498720," So, environment, update, boolean, and overwrite."
5501360,5507040," So, if it is greater or equal tasks, what does it count?"
5507040,5507760," I think it's count."
5507760,5508720," We just returned true."
5508720,5514320," Otherwise, we do tasks update,"
5514320,5524160," it update, we pass the environment, and if it is finished, we increment plus one."
5525920,5530400," So, on top of that, I think we probably want to do something like this."
5530400,5531840," We want to factor it out."
5531840,5541280," Because, yeah, if it's finished, we want to increment it."
5544240,5547520," But then we have to kind of double check this thing."
5547520,5549760," Yeah."
5549760,5552240," Yeah, that's good."
5552240,5552720," That's good."
5552720,5554240," I think that's what we want to do."
5554240,5556240," Right."
5556240,5560640," Because we increment it, but if it was like the last task,"
5560640,5563840," we want to right away return that this entire thing is finished."
5564480,5566880," So, we might as well even return something like done."
5566880,5569840," Which kind of repeats whatever we have in wait."
5569840,5574400," So, maybe all of the tasks should have done."
5574400,5576320," But it's not really easy right now."
5576320,5578640," So, yeah."
5578640,5581760," So, in here, I'm going to be doing it like that."
5581760,5585360," And done is going to be simply something like this."
5587440,5590160," And we can do done."
5590160,5591840," All right."
5591840,5594000," So, it's pretty cool."
5594000,5595600," Let's try to compile."
5595600,5598640," This is not how we compile this entire stuff we have."
5598640,5600400," All right."
5600400,5601360," So, std vector."
5601360,5605600," We don't have a std vector, but we can finally include vector."
5605600,5607920," We can finally include vector."
5607920,5608960," Is it going to work?"
5612000,5613760," So, this is that."
5613760,5615920," Expected primary expression before."
5615920,5617680," Do you want me to do something like this?"
5617680,5625280," So, const has no member count."
5625280,5626960," Is it size?"
5626960,5633200," Update probably just this."
5633200,5636640," Damn, bro."
5636640,5638320," Damn."
5638320,5639680," Okay."
5640640,5643440," So, can we now do some cool stuff?"
5643440,5646000," C++ 20."
5646000,5650960," So, plug reset."
5650960,5654640," We can do new sec."
5654640,5657840," And we're moving."
5657840,5661920," Within maybe half of a second."
5661920,5663760," Let's actually make it half of a second to here."
5663760,5666640," Then we're going to move in upwards."
5666640,5667760," Like so."
5669200,5670320," And I wonder if I can."
5670320,5672160," Yo, there should be."
5672160,5675520," There is a initialization."
5675520,5676080," What the fuck?"
5676080,5677760," There is an initialization mechanism."
5677760,5678960," I can do stuff like this."
5678960,5681440," I'm pretty sure I can do stuff like this."
5681440,5682480," So, syntactically."
5682480,5684560," It's going to be actually awesome."
5684560,5685920," But let's not go there yet."
5685920,5686800," Let's not go there yet."
5686800,5688400," But I mean, that's kind of cool."
5688400,5689120," All right."
5689120,5690960," Let's see if it's going to allow us to do that."
5690960,5692160," Expected primary expression."
5692160,5692400," Okay."
5692400,5694400," So, it doesn't allow me to put that stuff in here."
5694400,5695360," Damn."
5695360,5695760," Okay."
5695760,5697040," So, this is a pain in ass."
5697040,5698880," This is a pain in ass."
5698880,5700640," And I'm not quite sure."
5700640,5703360," In instantiation."
5703360,5704880," Look, what the fuck is it even saying?"
5709280,5710240," Okay."
5710240,5711920," So, yeah."
5711920,5713440," Yeah."
5713440,5715920," It can not instantiate this kind of thing."
5715920,5719040," I wonder if I can just wrap it like that."
5719040,5720160," Initialization list."
5720160,5722080," Average C++ compile."
5722080,5724400," Did I just guess it?"
5724400,5727840," Did I just brute force C++?"
5727840,5730480," I think I just did."
5730480,5731680," Right."
5731680,5734000," So, I basically turned it into initialization list."
5734000,5734240," Right."
5734240,5736720," So, and I suppose that just created initialization list."
5736720,5736960," Okay."
5736960,5737680," That's cool."
5737680,5742720," So, but it would be better if sec actually accepted initialization list."
5742720,5747600," So, that way we could actually replace this thing with these curly braces."
5747600,5749200," And that just looks awesome."
5749200,5749760," Honestly."
5749760,5750720," That just looks awesome."
5750720,5752240," But anyway."
5752240,5757040," So, that should create a sequence of this thing moving in like two places."
5757040,5758640," All right."
5758640,5759120," So, let's go."
5764240,5768480," That also leaks memory, by the way."
5768480,5770560," That also leaks memory."
5770560,5770800," Yeah."
5770800,5771120," Yeah."
5771120,5771600," Distractors."
5771600,5772080," Yeah."
5772080,5772960," You guessed it correctly."
5772960,5775120," So, how are we going to be?"
5775120,5776960," Can we just do that more conveniently?"
5776960,5782160," We can maybe try to use unique pointers."
5782160,5788400," So, since we're owning this entire stuff, we can just do unique PTR, can't we?"
5788400,5790560," Yeah."
5790560,5792000," We can try to do something like this."
5793600,5794560," Yeah, unique PTR."
5794560,5800480," And so, that means if the vector destroys, it will also destroy unique PTRs automatically."
5800480,5802480," I remember all of that stuff."
5802480,5803840," Damn."
5803840,5806480," So, yeah."
5806480,5814080," So, this is, if you're using unique pointer, you're kind of declaring that this thing owns this task."
5814080,5817120," So, that means it's the responsibility of this class to destroy it."
5817120,5818000," So, that's what it is."
5818000,5821360," It also needs, oh, it also needs a virtual destructor."
5821360,5822000," Yeah, that's right."
5822960,5828800," So, do I have to virtual test?"
5828800,5830320," Yeah."
5830320,5833840," The classic interview question of C++."
5833840,5834560," Right."
5834560,5836400," The classic interview question of C++."
5836400,5837520," It's a virtual destructor."
5840720,5841600," All right."
5841600,5843280," So, let me, let me see."
5843280,5844320," So, what do we have in here?"
5844320,5846880," So, it's complaining about, so we don't have a unique pointer."
5846880,5849600," Do I have to do something like that?"
5849600,5854240," So, it's a unique PTR and where do you, is it just unique?"
5855040,5856160," I think it's just unique."
5856160,5861600," It's a memory."
5861600,5862640," Oh my god."
5862640,5862880," Okay."
5862880,5865280," It's a memory."
5865280,5867520," All right."
5869120,5870480," So, initialization."
5870480,5878880," So, what was that?"
5878880,5881040," Make PTR or what?"
5881040,5883680," How do you make a point?"
5883680,5896400," Standard library header memory."
5896400,5899360," Is there like a dark mode for this thing?"
5900400,5901280," Unique PTR."
5901280,5906080," Does anybody remember?"
5906080,5907920," It was make unique."
5907920,5908160," Yeah."
5908160,5908800," Make unique."
5908800,5909520," Okay."
5909520,5910640," Make unique for overall."
5910640,5911280," Oh my god."
5911280,5912400," C++ people."
5912400,5913840," Are you okay?"
5913840,5916400," What the fuck is this shit?"
5920560,5920960," Anyway."
5920960,5923840," So, make unique."
5923840,5926080," I suppose this is what we do."
5926080,5926880," I don't remember."
5926880,5930080," Like, I think you just do it like that."
5930080,5930320," Right."
5930320,5931280," So, you have a pack."
5931280,5936320," You just say that I'm going to apply this function to each element of this pack."
5936320,5939920," And I'm going to just sort of like expand it into this thing."
5939920,5941680," I think that's how you're supposed to do that."
5941680,5943040," No."
5943040,5944560," This is not how we're supposed to."
5944560,5945840," The matching function to call."
5948320,5948800," Yeah."
5948800,5950640," It's a move vec."
5950640,5953600," And make..."
5953600,5954960," Because it's a reference."
5954960,5955360," Right."
5955360,5957840," So, make unique."
5957840,5962480," Make unique."
5962480,5963280," Make unique."
5963280,5965360," I need an example."
5965360,5966080," Make unique."
5966080,5970000," So, it accept..."
5970000,5970400," Wait."
5970400,5973200," It can accept packs."
5973200,5976880," So, it does accept packs."
5976880,5977680," So, that means..."
5977680,5981680," But what does it return?"
5981680,5982160," It can..."
5982160,5984720," It can return an array."
5984720,5986960," Or whatever."
5986960,5990960," Make unique."
5990960,5995200," You must specify the type."
5995200,5995520," Ah."
5995520,5996480," Yeah."
5996480,5997840," That's a good idea, actually."
5997840,5999280," So, do we have to just do task?"
5999280,6002720," I was hoping that maybe it's going to infer that."
6002720,6003840," No."
6003840,6005040," It didn't work."
6005040,6006160," It actually didn't work."
6006160,6008640," So, move."
6008640,6011760," Do I have to specify it as a pointer?"
6011760,6013600," No."
6013600,6022000," So, what if I just do something like this?"
6024160,6027760," Parameter pack is not expanded with..."
6027760,6028160," Okay."
6028160,6029120," So..."
6029120,6036400," You need to do it instead of..."
6036400,6037920," You need to do what?"
6037920,6038720," I missed your message."
6038720,6041760," Try inside."
6041760,6042080," Okay."
6042080,6043360," I can try it inside, but I mean..."
6047200,6048080," that didn't work."
6048080,6048160," That didn't work."
6048160,6051520," No new task inside."
6051520,6052640," Ah!"
6052640,6053520," Wait, wait, wait, wait, wait."
6053520,6057840," Because new sec..."
6057840,6063280," That is..."
6063280,6064800," That..."
6064800,6066960," I don't know how to do that properly, honestly."
6068160,6076000," So, it thinks that it's a very specific type, but I can't make it say..."
6076000,6079520," Nah, it just doesn't allow me to do that."
6079520,6083840," You need to forward the args too, technically."
6083840,6088000," But is it going to actually help me with that?"
6088000,6089600," Because I just want to create the pointers."
6089600,6090480," That's the thing."
6090480,6092560," I just want to create the pointers."
6092560,6094560," They're just the regular pointers."
6094560,6095120," I don't know."
6095120,6097360," So, I didn't figure out how to do that."
6097360,6098720," So, we're going to be leaking the memory."
6098720,6100000," Right."
6100000,6100800," And honestly..."
6100800,6102880," You know what?"
6102880,6106720," I think the way we're going to do that..."
6106720,6106960," Right."
6106960,6108240," So, we're going to just do it like that."
6108240,6113360," And maybe we're going to destroy the main destructor."
6113360,6113680," Right."
6113680,6114640," So, it's going to be sec."
6114640,6117280," It's also going to be virtual."
6117280,6118400," Virtual destructor."
6118400,6118960," Right."
6119680,6123440," And I'm just going to do task."
6123440,6125360," Tasks."
6125360,6126320," Right."
6126320,6127280," Auto."
6127280,6129040," We're going to just delete this entire thing."
6129040,6132320," It's just easier."
6132320,6133520," Isn't it?"
6133520,6138800," It's just freaking easier than figuring out what exactly C++ compiler wants."
6138800,6141440," And I'm not a C++ developer."
6141440,6145200," I'm not obligated to know any of that sorcery."
6145200,6147520," So, and I can just do that and it will work."
6149200,6149680," Sorry."
6149680,6154160," So, no need for overwrite."
6154160,6155680," Well, I mean it's optional."
6155680,6155840," Right."
6155840,6158320," But I'm just going to put it for documentation purpose."
6158320,6162720," Can your templates do that?"
6162720,6165360," Anyways."
6165360,6166640," So, that's pretty cool."
6166640,6167840," That's pretty cool."
6167840,6168560," That's pretty cool."
6168560,6170960," So, this is basically the sequence."
6170960,6175520," And after that, I can actually make it loop back into zero."
6175520,6175840," Maybe."
6175840,6177040," You know what?"
6177040,6179360," Let's actually move it to here."
6179360,6179840," Right."
6179840,6185440," And then we're going to move it back to like, not 2000, to zero, zero."
6185440,6188080," So, that's how we're going to loop everything around."
6189680,6190320," Yep."
6190320,6192320," And we're going to try to start this entire thing."
6193600,6194000," Oof."
6194000,6197280," That is bizarre."
6197280,6198800," What the fuck are you saying, bro?"
6198800,6203280," Task?"
6203280,6206480," What?"
6209280,6211200," Probably the main destructor."
6211200,6217280," The main destructor of the base class."
6217280,6219920," So, it is not available anymore or something?"
6219920,6223600," Ah, default."
6225120,6225680," I see."
6225680,6227040," That makes sense."
6227040,6229680," So, many gotchas."
6229680,6236880," So, that's kind of the stuff you can do."
6236880,6243200," Yeah."
6243200,6248720," To be fair, like, I really like the fact that it's super easy to just add a new task."
6248720,6249760," Right."
6249760,6253840," You just like inherit this thing and it sort of builds all of that into this whole system."
6254880,6258000," You don't have to remember that you need to also register some things."
6258000,6261760," Well, I mean, you still have to remember some things like virtual distractors and everything"
6261760,6262400," and stuff like that."
6262400,6264400," So, yeah."
6264400,6269360," But it doesn't really solve the problem that my system solves with this table of functions"
6269360,6270720," and stuff like that."
6270720,6276640," So, what's going to be my conclusion on whether using C++ in this project is better or not?"
6276640,6276880," Right."
6276880,6278880," Because I'm looking specifically for this project."
6278880,6281920," Would I benefit from using C++ in here?"
6281920,6284640," I think the answer is no."
6284640,6291360," Because, again, like, the virtual methods of C++ don't solve the problem the task.c solves."
6291360,6292320," Right."
6292320,6297040," So, even though this thing kind of mimics virtual functions and stuff like that,"
6297040,6299760," it solves the problem that these virtual functions cannot solve."
6299760,6308480," And actually updating the table of pointers, of function pointers."
6308480,6313520," In fact, in C++ it's harder to solve, right, because we don't have an access to virtual table and everything."
6313520,6316480," And virtual table is not really defined by the standard."
6316480,6317680," So, we know nothing about it."
6317680,6322640," So, and in C++ the solution is going to be basically the same as in C."
6322640,6323840," Just create your own thing."
6325360,6326080," So, yeah."
6326080,6328080," I think that was very educational."
6328080,6329680," I think that was very cool."
6329680,6335040," I actually didn't expect much out of today's stream, but it was so fucking cool."
6335040,6335680," cool."
6335680,6341760," I got to remember, like, C++ and stuff, and I also learned some new things."
6341760,6346800," So, yeah, I'm going to call today's stream a success, my friend."
6346800,6348800," I'm going to call this today's stream a success."
6348800,6353120," But unfortunately, it is time for me to go."
6353120,6356640," Even though we did C++ today, it is time for me to go."
6356640,6359920," Thanks everyone who's watching me right now."
6359920,6361040," I really appreciate that."
6361040,6361840," Have a good one."
6361840,6367040," And I see you all on next recreational programming session with Mr. Azuzin."
6367040,6369040," Love you."

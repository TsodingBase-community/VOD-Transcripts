start,end,text
0,6840," all right so let's try to do something interesting with this graphical library"
6840,14160," um so you're probably yeah i already demonstrated that we can do the terminal rendering right so"
14160,22440," let's actually take a look at that one more time but the native version actually is colorful"
22440,29920," right so it has colors and shit and the modern terminals are also capable of rendering colors"
29920,37440," the question is can't we interpolate this thing with the terminal colors"
37440,47080," that would be kind of cool if all of that was rendered in the terminal but with colors"
47080,56960," let's give it a try why not i think i even had a to do for that specifically right so if i take a"
56960,64480," look at vc demo so nc yeah yeah use nc terminal colors for color to char and color to char is"
64480,71360," basically the um the function that accepts the pixel and uh returns your character by the way"
71360,77360," we need to update the title right because we're currently scamming people by saying that i'm"
77360,85040," rewriting uh bash script and see because i already did that so what we need to do is that uh 3d"
86800,96880," graphics in the text terminal uh in text terminal does it sound epic does it sound something you would"
96880,103440," click on okay i think i think it's good i think it's good so 3d graphics in the text terminal there we go"
103440,111920," so uh but i don't know how to do the nc colors because i'm not some sort of a zoomer who does who the first"
111920,119440," thing they do is add shed ton of colors to their output because it's fancy and cool i don't really know"
119440,125280," how to do that so this is something that i'll have to research first so let me let me see uh so"
125280,137280," nc terminal color codes i don't know how to do that really uh okay so we have that i have no idea what is a zero one uh"
137280,144320," uh so it's just is that an escape code is that an escape code maybe so let's let's give it a try"
144320,149600," um so let's call it color dot c right"
149600,157360," stdio and uh probably not gonna need uh anything else right there we go"
157360,164880," so you see i just googled it up right people constantly ask me like zozin what is the best"
164880,169440," c book to read about c like i never read a c book i just google shed"
169440,174720," right so is there any book that tells you this kind of stuff i don't think so i'm not even sure"
174720,178240," if this shed correct that's how cool this right"
178240,186640," so the book is usually like reviewed by the the editors and stuff like that made sure that everything"
186640,192080," is correct i just slapped some query in the google it spit out some shed i'm not even sure if it's correct"
192080,196080," there we go we does we've done something right that's how we develop things"
196080,207200," who reads books in 2022 i don't know uh okay so let's actually do hello uh seaman hello seaman"
207200,213600," and let's try to build this into i think clang o color color dot c and i'm going to also instantly"
213600,220720," run this entire stuff and you can see it says hello seaman uh right so hands up"
220720,230800," okay hello seaman hands up so let's actually try to make this entire thing uh red i wonder if i can"
230800,237200," literally like copy paste this entire thing in here and hope that okay universal character name refers to a"
237200,243920," control character so i can't just do that um all right so let's actually go to this website so as"
243920,251600," you can see it's not particularly correct uh huh so the nc core the character is a special character that starts"
251600,259840," of most ascii uh allow syntax for one ah it's it's a one b wait a second i think i know what the"
259840,270160," fuck is this uh python uh three if i do one b it's the way it's an escape character it's an escape character"
270160,277200," okay okay okay why didn't you tell me that uh all right so how can i do an escape character can i just you"
277200,279680," know um"
279680,286080," yo it worked"
286080,292560," can you learn this kind of in a in a book about c i don't think so"
295520,303600," that's a very creative way of doing this um so i wonder how can i um okay"
303600,309600," c print f escape code i i forgot how you do that and see um"
309600,322880," so escape code escape code 27 uh ascii character escape code l uh left arrow is it left arrow"
323920,331040," uh okay is there just like convenient way of doing that uh yeah i don't know"
331040,340880," so this is python but i don't want python so how do you do that"
340880,349120," oh you can put e in here can you"
351760,360960," yo it works who needs books about c you have google am i right uh all right so that's actually"
360960,367920," pretty cool did it oh so somebody created a gist so rabba dabba doba rabba dabba doba"
367920,375440," uh rabba dabba doba thank you so much for this gist yo this is so cool i'm gonna actually give the"
375440,381360," link to to these things like for everyone look at that i'm gonna also give you the link in the description"
381360,389200," ah why do i have cyrillic uh where's my description thingy uh so i probably need to create another"
389200,400960," thing so what's the title for today's stream so so today's date is uh 0 2 12 2022 the worst year so far"
400960,406240," and since we have a trend of the next year being worse than the previous one"
406960,411200," uh looking forward looking forward looking forward looking forward for 2023 jesus christ"
411200,422800," all right so um color and c codes in c there we go so this is what we have um i wonder if we"
422800,430160," have our if we can have like rgb that would be kind of cool i think so there's also bold text the regular text"
430160,434000," um maybe i'm going to go with the regular text um maybe i'm going to go with the regular text"
434000,438880," right so i'm going to copy paste this thing uh to cola"
438880,444080," and see"
444080,456000," uh so there is a little bit of a discussion so okay this is interesting 16 colors i think this is more"
456000,460880," important in here so most of them apart from the basic set of eight goals also support bright and"
460880,469120," bold colors these have their own set of coast okay so 16 course 256 colors yeah i kind of want to do"
469120,476240," this kind of shit lastly after the 16 course some terminal support 256 calls extended color set um"
477680,490400," okay okay so there is a range of those things"
490400,495040," all right"
498160,505840," uh-huh uh-huh so the background colors all right i think i'm interested in this specific example"
505840,517520," and what it does essentially it sort of like iterates 16 by 16 table right it's a 16 by 16 table"
517520,520720," uh and this puts the cell"
522960,528960," okay okay that's very interesting and for each uh row in here it i suppose updates the thing"
528960,541760," so let's try to like write this specific code but try to write it in in c and see how it goes"
541760,545200," because i'll need to come up with a way to transform the rgb"
545920,550000," to these sort of colors right so we'll we'll see how we can do that"
550000,556880," um okay so this one is um like this so this is the first thing"
556880,572320," for j j 16 plus plus j uh and then we create a new code right and this one is effectively 16 plus j"
573440,582000," right so this is the row and this is the column uh and then we need to do print f um so we do e"
582000,591440," 48 then five and then here we have to put a code in decimal so we'll have to do like percent d"
591440,600640," then m and then space and here they just put some some code i'm not sure if it's like really"
600640,606640," necessary so i think i'm gonna just keep it as a space uh and here i just put a code there we go"
606640,616880," uh so and then we print zero m i'm not sure what is zero m though like this specific thing um"
616880,626400," so it's a reset okay so that makes sense as well uh print f e zero m"
627040,635520," there we go but on top of that i feel like we also have to maybe put a new line just in case i think"
635520,642880," that makes sense as well uh okay so it did something but the problem is that we are in emacs and emacs is"
642880,650400," pretty shitty terminal uh right so we won't be able to see anything particularly interesting or useful"
650400,656480," though we have like 16 by 16 things in here so that's that's fine okay so if i try to run this"
656480,663600," uh into there we go now we're freaking talking now we're freaking talking so we have like the basic"
663600,672640," cores in here right so which is nice um and then we have extended stuff and it just like goes through"
672640,681120," different gradients and stuff like that um i wonder so what is the name for these extended cores"
682560,695600," um can i google something up like map rgb to 256 nc terminal colors is there any uh okay"
695600,702480," that's actually pretty cool 256 cheat sheet exterm hex um all right"
708720,716880," cool you know what's interesting we can take this and do reverse mapping"
716880,726960," uh and do reverse mapping essentially we have the color code we can iterate through all of the 256"
726960,735680," and just see to which the colors rgb rgb vector is the closest and we can just use that specific code"
736960,739840," so this is something that we can use um"
739840,748960," the rgb support uh okay unsee terminal colors rgb"
748960,753280," unseql specific rgb sequences"
753280,760480," chat says that uh rgb exists but you can never trust the chat because chat like"
762480,769440," okay both answers uh fail troop okay so there is a true color antsy support uh okay instead of five"
769440,780720," specify rgb okay so we can give it a try then an rgb is from 255 um so you know what i'm gonna do"
780720,789040," essentially i think uh i'm gonna try the following thing so it's gonna be from r and let's try actually"
789040,795280," like a limited space right uh to five right essentially what i'm gonna do i'm gonna split"
795280,805520," 256 by five and i'm gonna do in 256 by five uh steps right so i'm not gonna generate like the entire"
805520,812400," like a true space true color space right only like a limited one uh so let's replace this stuff with that"
812960,819360," fog fog okay and i'm gonna create replace g with b uh okay"
819360,826960," so let me see um so this is what the oh you can also do x"
826960,834400," all right so that's pretty cool so this is gonna print f but i suppose uh we can just do e"
835120,846880," uh so this is uh this is r g and b so essentially we have 255 we divide it by"
846880,854320," five effectively and we multiply it by r right but when we divide by five we lose a little bit of"
854320,860560," information so we probably want to first multiply by r and only then uh divide by five that way we lose"
860560,870560," less information right so it becomes a little bit more precise like this um okay so and if we do"
870560,877680," something like five by five by five it's 125 right so that's how many cores we have here uh but it would"
877680,886320," be kind of nice to maybe um you know put a new line in here right so we put a new line in here uh and then"
886320,894080," also put a new line in here right so it's basically split into these squares separate squares right with"
894080,900080," different shades of red if you know right so we can try something like this if this will work at all"
900080,908720," obviously it probably won't work in the uh in emacs all right so we can give it a try so yeah there's"
908720,916240," literally nothing in here but maybe it will work in here uh so let's give it a try uh something"
916240,927440," happened oh okay uh we probably need to do a reset every time we uh sort of like a put a new line in"
927440,935040," there right so we probably have to do some sort of a reset one uh all right so this is going to be a reset"
935040,942480," this is going to be another thing in here okay and let's run the course and nothing happened okay"
942480,949040," so maybe my terminal just simply doesn't support or maybe i just like missed some of these things so i"
949040,958320," need to double check if i copy pasted everything correctly so let me let me see i'm gonna copy paste this"
958320,973840," stuff one more stuff one more time so okay maybe i need to put a space in here all right maybe i need"
973840,985360," to put the space in here uh-huh okay we're getting somewhere we're getting somewhere uh"
987840,1004400," okay so true color so there's a map around so rgb to ansi 256 uh and ansi is just like this weird thing"
1004400,1009440," so i didn't think i"
1011920,1021360," did everything did everything incorrect so uh see check if terminal supports uh true color"
1021360,1026560," is there any way for me to check that check if terminal supports 24b true color"
1026560,1030720," so"
1036480,1049920," so color term color term uh color term or xvt xpm right can i say color term can i set this entire"
1049920,1053840," thing to true color probably not um yeah"
1059760,1072480," to put colors to put colors uh so essentially if we do to put we only support eight of them yeah"
1072480,1082640," so it's kind of interesting uh maybe i should use try to use x term all right so x term is kind of like"
1082640,1088640," small you can't see anything in here uh but maybe maybe it is like it does support this kind of thing"
1089280,1101440," uh no it doesn't support uh no it doesn't support that um so your rxvt so urxvt um true color right so"
1101440,1108320," this is the terminal i use maybe i have to i i have to have a special build of this thing really"
1109680,1122960," so oh my god so can st from saklas support that uh saklas st um let me actually see"
1122960,1130640," maybe we can we can try to do that uh how can i download okay so we can download it in here"
1132080,1146480," and then i'm gonna go here uh and uh so it's it's make does it have my key it does help me okay cool"
1146480,1158960," all right so st st uh cool and then if i try to do color still is for that okay so uh apparently we"
1158960,1165840," not gonna have the true color so we we can't have that unless they have a special terminal right"
1165840,1174160," so what we're gonna do instead we're going to use 256 cars right and we're gonna try to do that the way"
1174160,1179120," uh i described it right so essentially we're gonna build this reverse table"
1179760,1185360," um all right and we're gonna literally look it up inside of table trying to find the closest thing"
1185360,1194880," um all right so let me quickly copy paste this stuff 256 cores"
1199040,1208880," uh yep yep yep yep oh boy oh boy oh boy right so this one is apparently zero right this one is"
1208880,1214960," apparently zero and i didn't copy paste it properly no i actually copy paste it but okay so just needs this"
1214960,1220240," kind of thing all right all right so"
1220240,1238800," i wonder i wonder if i can refer to this kind of things as tables so this stuff is separated with tabs"
1239920,1246080," uh-huh so this stuff is separated with tabs i can maybe put a white space mode yeah we can clearly"
1246080,1254800," see that all of that is separated with tabs uh which means that i can probably parse it as csv or um"
1256880,1263040," i remember there was a tool something like tr uh translate for delete characters no i think it was"
1263040,1272080," something like cut yeah remove sections from each line of file so yeah you can have fields select only"
1272080,1279200," these fields um right and there is also delimiter instead of yeah so essentially we can literally just"
1279200,1289760," use cut to transform this this entire file okay so uh colors colors uh txt right colors txt so let's give"
1289760,1297040," it a try uh we're gonna do cut and uh we're gonna provide the fields i only care about the field one"
1297040,1307120," uh one two three four and four i wonder if it will just work like this colors txt uh okay so i'm an idiot"
1308080,1320160," let me see uh fields uh select only these fields also print any line uh fields and it's a list um"
1320160,1330640," linux cut fields list there we go command examples"
1336800,1343520," uh-huh so if you won't cut only the second through through but what okay so you can put a comment"
1343520,1351680," here so man should actually put the format in here like come on uh right so there we go"
1351680,1359200," now we're freaking talking now we're freaking talking this is what i needed in here okay that's cool"
1360480,1368560," uh we've got the table uh we've got the table we've got the table and now i can just like copy paste it"
1368560,1378240," into my code uh so this is gonna be color c uh so let's just copy paste that stuff so for the colors uh i"
1378240,1386720," don't know do i need anything special so i think i'm gonna create something like you int eight uh color table"
1387200,1397760," uh color table and we're gonna have 256 you know i think i need to actually only the fourth the first"
1397760,1404800," thing yeah so let's actually take only the first thing because the uh the index is the position within"
1404800,1412640," the array so we don't need anything else in here uh right so this is gonna be that and then we're gonna"
1412640,1417680," have three of those things all right and then we're gonna just wrap this entire stuff like that there"
1417680,1426720," we go cool so in here i can try the query replace rgb with um with basically nothing so let's actually"
1426720,1437440," remove rgb and uh also query replace this with that uh right and then uh with this with that there we go now"
1437440,1446000," now we have a table isn't that cool isn't that cool i think it's pretty freaking cool okay so um let's do"
1446000,1462080," something like find um on c index by rgb so we're gonna provide uh you int 8r you int c g you int 8 t b there we go"
1462080,1467760," and it should return basically the integer right so we might as well even well i mean we should always"
1467760,1474320," return something right because we are looking for the closest one anyway uh there we go so might as"
1474320,1484320," well you know what let's do the integers right so it does not necessarily has to be you int right it"
1484320,1491200," does not necessarily have to be you int so and uh let's just go ahead and iterate through the indices"
1491200,1497200," all right so it's gonna be zero uh 256 256 256"
1497200,1508560," uh oh boy so let's do the result uh the result has to be let's let's start with zero all right and return the"
1508560,1518160," result so what we want we want we want the distance from the current one and the one we're looking for"
1518160,1525200," right so effectively we want something like dr and it's basically r minus color table"
1526000,1538240," results um maybe what's called index result zero so then g one b two right"
1538240,1543760," uh-huh so this is the distance"
1549520,1558080," we can actually store calculate the square of the distance right so that way we don't really need any"
1558080,1563360," square root or anything like that right because we're going to be comparing the distances and we"
1563360,1569200," probably need to also keep track of the of the current distance right so what's the what's the current"
1569200,1578640," distance and the question is uh how do we compute that so maybe one of the things we have to do"
1579760,1589360," is essentially is essentially first compute dr dgdb right dr dgdb right dr dgdb and then um"
1589360,1602240," the distance so that's the distance the current distance then we do that but for the eye right and if"
1606640,1611520," the new distance the new distance how can we call that let's call ddb right so something like this"
1611520,1620880," if this thing is less than d we have to update the index we have to update the index"
1620880,1627440," and uh it's going to be i and the distance is going to be dd"
1634320,1640480," all right so now uh okay"
1640480,1654560," okay so now let's uh let's try to i need to bring back my code uh i need to bring back my code that"
1654560,1662560," actually did the the rgb iteration right so we need to do the rgb iteration uh so this is going to be"
1662560,1679520," something like uh r r less than five plus r g g and then it's going to be b b b there we go"
1679520,1687520," and here uh let me give it a try let me give it a try"
1690000,1694800," okay so what's the name of this function find and see index"
1694800,1704560," like so r is essentially 255 multiplied by r divided by five"
1708560,1727680," right so yeah yeah so that's basically what i want um rather so then here we need to reset after each of"
1727680,1733760," these things right after each of these things okay let's give it a try and see if it's going to"
1735120,1744160," to work to work uh so what do we have in here i can see in this mist uh okay so we try to do something"
1744160,1750960," right we try to do something let's take a look uh okay i think that's pretty pogue so it actually"
1750960,1759280," printed the the full quad in here so let's do if one zero uh there we go and if i try to do it like this"
1760080,1769520," okay so yeah that's pretty cool so on the x in here right so let's take a look at that on the x we're"
1769520,1778080," moving from zero to blue this is from zero to blue this is x on the y we're moving from zero to green"
1778880,1784560," so and this is a gradient so and this is a gradient and for each of the square we increasing red"
1784560,1793360," that's basically what's going on in here isn't that cool i think it's pretty cool right so effectively"
1794000,1807760," we implemented 256 rgb support for no trick true color rgb support for 256 terminal right so that's"
1807760,1813440," basically what we did in here because we have like this table and we're searching the closest point"
1813440,1820000," uh for for the color point that we we have right so it's a little bit linear but i mean for each pixel"
1820000,1826480," we just do 256 situation which is like not that bad in my opinion uh i think i think that's fine what"
1826480,1839680," do you guys think um okay um so and essentially then we can just take this code and we can already simply"
1839680,1849920," copy paste this code to uh to our application right and uh just just use it i suppose um okay so"
1850000,1862880," here we just have an index and effectively in the vc right in the vc um we have"
1862880,1870480," okay so here's the canvas right so here's the canvas and in the canvas we store characters"
1870480,1877120," so what essentially we can do now we can store integers in the canvas"
1879120,1883760," but to be fair we can still use characters who said we can't do that we can still use characters"
1883760,1890640," because the the value we are going to be using there is from zero to 255 anyway right so we don't"
1890640,1901600," really have 256 don't we um so let me take a look where was that uh where was that thing so"
1904080,1912640," yeah so we don't have 256 so in terms of representing the pixels in the memory we literally don't have to"
1912640,1919440," do anything that's actually pretty cool and by the way i probably have to uh put this thing well i"
1919440,1932080," definitely have to put that in the description um all right so this is the um 256 colors sheet sheet"
1933520,1940240," all right okay so this is actually pretty cool this is easier than i thought that's what's"
1940240,1948480," what is kind of weird right it is easier than i thought uh so let's go ahead and copy paste"
1948480,1956080," uh these things so we're gonna have a color terminal and this thing that implements this entire stuff so"
1956080,1962960," i'm gonna just put it in here uh in a place where we call this thing we see term color to char"
1962960,1971920," right we see term color to char we do we see term compress pixel uh right oh so we actually okay this"
1971920,1979760," one is a little bit more complicated because we compress pixel chunk oh yeah we compress pixel chunk"
1980480,1988080," uh but we return rgb right we return rgb and then we convert color to char"
1988080,1998000," interestingly enough i think we can have something like uint yeah essentially we split the entire canvas"
1998000,2005120," into chunks of a certain size and we compute the average color in there right we're computing uh average"
2005120,2012240," color in there and this is the color that we can use to look up in the table right so uh compressed pixel"
2012240,2018400," right so here is the compressed pixel uh sock i don't know what sock means"
2020320,2028400," scaled oc oh yeah it's a scaled oc um no i need to do this thing"
2028400,2043440," so find ansi index by rgb so what we need to do so let's go with cp compressed pixel uh olivets red"
2045680,2062240," cp this one is going to be green cp olivets um blue cp there we go so essentially we have a compressed"
2062240,2070560," like uh packed uh pixel right so we uncompress the components in here and then we look it up okay so and"
2070560,2075840," when we're displaying yeah there we go so when we're displaying we just put the character in here but"
2075840,2084240," this is not what we have to do right so what we have to do instead um let me put yeah let's actually"
2084240,2089520," comment it out we have to do that trick"
2093440,2103040," uh there we go so and the index that we are going to be using in there is located in here"
2103040,2113040," there we go but then on each new line we have to put this thing in here instead so let's actually put"
2113040,2120480," it like that and that should be it believe it or not this is the entirety of the implementation uh right"
2121200,2129280," and let us see how it works so i'm gonna do no build and i'm gonna try to rebuild like uh everything in"
2129280,2130560," here right"
2130560,2140320," i'm actually excited okay so there's non-standard e is not standard"
2142640,2150480," god damn it okay so um probably have to do i don't remember uh whatever so i'm gonna fix that later"
2150480,2152400," so"
2152400,2167440," okay so we build everything uh everything seems to be working and let's give it a try so i'm gonna do demos"
2167440,2173680," first i'm gonna try to run the demo triangle right so this is sdl right so this is the sdl triangle"
2173680,2176640," let's give a term try"
2176640,2180960," okay"
2180960,2189120," there is something weird on the edges that's for sure"
2190080,2198320," so why do we have blue core on the edges uh so it's kind of and also green well i mean it's it's"
2198320,2200960," trying to find the closest one but yeah"
2200960,2207280," huh that is actually super cool so this is the original one"
2209200,2219360," um so it feels like there is a little bit of overflow in here um so yeah let me see"
2219360,2225680," it feels like some sort of overflow you know what i mean this is like overflow"
2227600,2229520," what if i use you int"
2229520,2234080," 60 14 here"
2234080,2236160," 60 14"
2236160,2243920," and here uh 60 40 just to just to be sure right no no uh just in case"
2243920,2252480," neighbors are doing something weird all right"
2254640,2261040," okay so this is sdl what about the term uh it didn't make much difference but it's slightly different"
2261040,2265920," it is in fact slightly different all right let's kind of close"
2265920,2273520," all right so let's take a look at other uh demos right so let's go to the website"
2273520,2280400," um let's actually go in order i think um it's interesting to go in order so dots 3d"
2281200,2290000," uh so dots 3d sdl so this is the demo that we have let's take a look at how it looks in the terminal"
2290000,2292880," looks like in to be fair"
2292880,2301600," but this is probably because uh the scaling is kind of weird uh right the scaling is kind of weird maybe"
2301600,2308480," we can fix that for example for the teapot well i mean it's it's too much work to be fair"
2309200,2313120," uh all right so because it will have to rebuild everything so let's take a look at squish i'm"
2313120,2319040," really interested in squish because we have like an actual texture in here uh right squish"
2319040,2329840," that's pretty cool all right so we can kind of see something but the colors are off"
2330320,2334560," uh triangle 3d okay triangle 3d"
2334560,2341920," kind of works as well so okay so the most interesting thing is probably the teapot"
2341920,2347680," let's take a look at the teapot as far as the teapot also has a higher resolution so there we go here's"
2347680,2358320," the teapot you know what's interesting is that in the original code in the original code we actually put"
2358320,2366320," two pixels uh next to each other right to make it you know rectangular so i'm gonna put another space in"
2366320,2369280," here uh and let's try to rebuild it i think"
2369280,2377040," core is weirdly off yeah i know i don't really know why though"
2380880,2384240," it is in fact it is in fact weirdly off probably because we don't have enough"
2384240,2388160," uh colors but we have 256 so it has to"
2388160,2399200," so it's it's really weird so i don't know i don't know what's what's up with that uh so maybe the table"
2399200,2403440," is incorrect maybe something maps incorrectly in here"
2403440,2409440," all right so maybe something maps incorrectly here so this is the index"
2409440,2420080," uh and if we found something that is closer to the original rm here so i don't know"
2425600,2431440," okay so did we rebuild the entire thing okay so we did uh right so this is what we have"
2431440,2438560," so this is the colorful but it's kind of weird how on the edges"
2440800,2445520," uh it has this a bluish color"
2445520,2455600," and it's probably bluish because it's darker right because it's darker"
2457600,2465760," um"
2465760,2468720," so"
2468720,2474640," and we could already see that with the triangle just with just a simple triangle"
2474640,2478560," all right so there's something off at the edges"
2478560,2482160," though the rest of the stuff is correct in here right so there's a"
2483040,2494320," red blue and green so overall it's kind of fine um right so but something is off when we look things"
2494320,2498160," up uh so this is the color table"
2498160,2504240," so this is the index"
2508320,2516240," so if we find something that is closer it should work so the only problem the only reason why it"
2516240,2520880," might not work might not work is because maybe this table is not correct"
2520880,2534960," so yeah but maybe that's how it's supposed to work anyway with the limited amount of course"
2535920,2538720," i mean with the limited amount of course this is more or less correct"
2538720,2546160," so i'm ready streaming for uh two hours already so my brain doesn't work so i think this is a good"
2546160,2553840," result for today's stream uh i'm gonna try to see what kind of like uh bug in there regardless"
2553840,2558560," of the bug the general approach is not gonna change right it's gonna stay the same it's just"
2558560,2563120," probably something within how we're searching here so it doesn't really change the general approach"
2563120,2570080," my hypothesis is that it's just simply the like few too few colors and we have like a very"
2570080,2582800," much sophisticated gradients and so yeah um though this space the color space is not particularly linear"
2584480,2593760," you know what i mean it is not particularly linear um so we might want to do gamma correction before"
2593760,2598480," like trying to you know find the closest color or something like that you know what i mean"
2598480,2603440," so yeah but in any way i already spent too much time doing this kind of thing so"
2604000,2611120," uh that's the result for today that's the result for today all right does anyone have any questions uh"
2611120,2620880," bouncing the mode people want bouncing mode squish let me go so yeah it's supposed to there is something"
2620880,2628640," definitely off but i just don't have already brain power to finish it right so i i know you guys want me"
2628640,2635520," to fix and do everything perfectly but i already do like stream for two hours right so uh i did what i can"
2635520,2642160," all right so i did what i can um all right so zero one"
2647360,2658960," uh find the index index by rgb so red green blue it's also it also gets compressed it also gets"
2658960,2664480," compressed uh so yeah so that's the result for today's stream right i think it's a pretty good result"
2664480,2671280," pretty good result something is off but whatever it's always can we can always get fixed like we can"
2671280,2679680," always fix all that later right so i think software developers should get out of the this mindset to"
2679680,2688400," get everything perfect first try because that's not how software is done software is done in iterations"
2688400,2695840," right you basically getting closer and closer to required solutions i think this idea of getting"
2695840,2701520," that everything perfect first try is coming from cs education i think cs education actually ruins"
2701520,2708720," software developers in my opinion um all right so that's it for today thanks everyone who's watching"
2708720,2716080," right now i really appreciate it have a good one and i see you on the next stream all right so"
2717040,2723920," bye bye bye love you it looks like we're live hello everyone and welcome to yet another zosin session"
2723920,2729280," let's quickly make a little bit of an announcement and the fish is to the stream"
2729280,2732880," so"
2732880,2741600," uh red circle live on twitch and uh what are we doing today on twitch we are"
2742320,2749760," displaying images in terminal with c uh right so today is basically a continuation of yesterday stream"
2749760,2759760," right so and yesterday we were working on um on a very interesting problem right so of course we"
2759760,2766320," continue developing olive c which is the graphical library that we started to develop like you know three"
2766320,2775440," or four months ago i suppose uh all right so and um one of the things this library has it has a bunch of demos"
2775440,2783920," right so it has a bunch of demos and those demos work on three um platforms right so the first platform is"
2783920,2787680," wasm right it works in a browser you can actually find this thing in here"
2788400,2798480," right so this is um generated by our library library jesus christ uh right so and we also have sdl versions"
2798480,2805280," of those things right so let's take a look for example uh triangle sdl right so this is sdl"
2805280,2812240," and there is a third version the third platform which is the terminal right so and what we were working"
2812240,2820320," yesterday on yesterday on yesterday stream we were trying to switch from uh ascii codes uh ascii graphics"
2820320,2827040," to actual actual calls in the terminal right so the the terminals have uh support for colors like usually"
2827040,2833760," 256 colors uh some of them support like uh proper true color and stuff like that but my my terminal only"
2833760,2839280," supports 256 colors right so and this is what we were working on yesterday so we managed to"
2839280,2846240," i suppose this is because of the team ux uh right so i think this is because of the team ux"
2846240,2855600," if i switch uh out of the team ux uh all right so this is going to be all you see so build demo and"
2855600,2861680," i'm going to take a look at the triangle the terminal yeah so it looks a little bit better so um this is"
2861680,2868080," basically the uh the terminal color support but it's a little bit off right so it's a little bit off"
2868080,2875760," so for instance if we take a look at the uh demo with a texture right so here is the texture that is"
2875760,2880480," you know resizing squishing and stretching and stuff like that and if we take a look at the terminal"
2880480,2887120," version we'll see that the colors are completely off so in the reason why all of that is completely off is"
2887120,2897360," because of how we uh compute the distance to the closest color right so we have 256 colors right so"
2897360,2904480," but all the images are generated in um 24-bit color actually 32-bit color with alpha but we're ignoring"
2904480,2910400," the alpha because it's not really useful in the terminal um right so in essentially we have a 256-color"
2910400,2920560," palette and uh we need to do something um like we need to have somehow convert 24-bit colors into 256"
2920560,2928960," colors palette right and the way we do that we we have a table we have a table of rgb values of these 256"
2928960,2934960," colors um right so i might as well even go somewhere here right there we go so this is basically the table"
2936000,2942720," right and every time we need to display a color we take the current color the true color and we go"
2942720,2948960," through this entire table and try to find the closest color and we use that closest color the"
2948960,2956000," index of that closest color so the way we compute the distance right uh to to find the closest one is"
2956000,2962720," actually pretty straightforward we're using euclidean distance uh we treat rgb as xyz space right we"
2962720,2970080," literally do take the differences the sum of the um of the squares of the differences between"
2970080,2976080," the points and then do square root in fact i don't even do square root uh because i'm just comparing the"
2976080,2984240," relative distances so square root is actually kind of optional um right and it kind of works in a weird"
2984240,2991360," way because if you take a look at the rgb space in fact one of the demos that we have kind of displays the"
2991360,2998880," rgb space uh so if we take a look at the dots 3d so with the dots 3d we're doing a very interesting thing"
2998880,3005600," so you may notice that one of the corners of this cube is actually very dark and this is because this"
3005600,3014240," is rgb cube this is straight of rgb cube so here you have zero zero zero so in that axis goes red component"
3014240,3021840," in this axis goes uh green component and in that axis goes blue one right and this is basically the rgb"
3021840,3028880," space in 3d space right so this is basically what we're doing here and if you calculate"
3028880,3037520," the distance within that space right essentially if you have a point right if you have a point in that space"
3037520,3044480," the closest points to that space might be actually in a sphere so that means you may have the closest"
3044480,3050960," point which is yellow but then on the opposite side you can have the closest point which is blue"
3050960,3055120," right and they have the same distances even though they're completely different colors and this is"
3055120,3060720," probably what's happening in here uh right so what we're supposed to have in here is like a peach color"
3061440,3066880," which is kind of close to yellow right so this is a peach and this is a blue right because if you take"
3066880,3072880," a single point and they're on the opposite sides and they have like the the closest the same distances"
3072880,3078160," in rgb space so using like euclidean distance in rgb space is actually kind of a bad idea"
3078160,3088960," right so uh unfortunately that didn't occur to me on the on the stream uh right so but then like after"
3088960,3094880," the stream after i had a break and stuff like that i realized why this is happening so yeah the question"
3094880,3099920," is what would be a better solution what would be a better solution a better solution would be to"
3099920,3107680," actually compute the distances not in rgb space right but actually in something called hsl space"
3107680,3113680," right so there's a different way to represent the colors called uh hue saturation lightness why is it in"
3113680,3121600," russian anyway so i can just click on russian and maybe switch to english uh it's just like come on"
3121600,3132080," all right so essentially hsl by the way is actually a very cool color space i use it every time i actually"
3132080,3140320," pick the colors for my uh for my thumbnails or when i'm drawing something um so as far as you know hsl is a"
3140320,3148080," better way to reason about colors for humans than rgb rgb is great for storing the colors right because"
3148080,3153520," of the technical reasons and stuff like that but hsl is good for reason for human reasoning about the"
3153520,3162160," colors right hue is basically the base color right literally pure base color whether it's a pure red"
3162720,3171040," pure yellow uh green blue and stuff like that this is a base pure color saturation is how much of that"
3171040,3178160," color you have right how much of that color so the less saturation the more it's going to be grayish the"
3178160,3186000," more it's going to be devote devoted the devour the uh i forgot the the verb i'm sorry the more it's going"
3186000,3195920," going to lack the colors and lightness is how bright it is right so and essentially by um manipulating these"
3195920,3203760," three parameters you can basically like uh construct any color and for humans uh it is easier to reason in"
3203760,3213200," terms of hsl rather than rgb and this thing i think is better for finding the closest color right because first"
3213200,3218400," you will have to find the closest hue the closest pure color and hue is probably going to be the most"
3218400,3224560," important sort of like parameter of the distance uh then you want to find how much of that color you"
3224560,3230640," have there saturation and saturation is probably less important than hue you have to get the hue right"
3230640,3237360," uh then the saturation and then the least important is probably light uh lightness uh so"
3238880,3245200," um and what i wanted to do on today's stream i wanted to try to use hsl instead of rgb to"
3245200,3252480," find the closest point and see if it actually solves the problem of uh of this stuff right i'm blue"
3252480,3265680," all right so um let's go ahead and uh try to implement that so i already downloaded the colors in here"
3266400,3274240," right as you can see uh we constructed this rgb table uh from this thing that we downloaded from"
3274240,3283920," from here somewhere i think yeah 256 uh color cheat sheet all right and i think i just need to construct"
3283920,3292640," another one uh another table which contains the hsl right so here i have a simple utility this is not a"
3292640,3298160," demo this is just utility where i experiment with this entire stuff uh right so i think i'm going to"
3298160,3307600," continue um developing this specific utility so this is a color table rgb uh 256 right so and let's try to"
3307600,3312560," compile that and just go to all the places where we refer to that table and just fix all of that"
3314560,3327840," um um all right so uh clang oh color color dot c so let me go here so this is a color table uh rgb"
3327840,3336160," maybe i'm gonna actually do query replace for all of this stuff uh right so clear place color table"
3336160,3342800," uh rgb uh rgb 252 uh 56 and uh let's go ahead and just like we compile this and test that cool"
3342800,3354240," uh okay so let's try to construct hsl now uh all right so let me do cut on the colors uh txt"
3355040,3365600," right so what we want is one two uh three four five i'm not quite sure actually let me open the colors"
3365600,3376240," txt we need to extract the corresponding column right one two three four five okay so let's actually use"
3376240,3384560," cut to get the field five and there we go so we got the hsl in here right so quite interesting is that"
3384560,3393680," the hue is usually um described in degrees so hue is sort of like on a color wheel right uh it's on the"
3393680,3400560," color wheel and saturation is in value is in percents right so we have to keep that in mind so here we have"
3400560,3408400," like a 100 percent of saturation and 50 percent of lightness right if both of the i think i don't know"
3408400,3413040," if you have 100 percent of lightness and 100 percent of saturation do you get the pure color i think it's"
3413040,3420960," not going to be pure color but anyway uh okay so let's actually do a little bit of the um um automation"
3420960,3426880," right so i we want to basically construct a c array out of those things so let's go ahead and just like"
3426880,3431840," use regular expressions to cut out not important things first of all i want to get rid of the hsl in"
3431840,3438480," here uh right so let me actually find hsl and i should be able to get rid of that so the next thing"
3438480,3445040," i probably want to do i want to extract the components of the of the hsl color right so let's actually do"
3445040,3451360," them like that so this is the first one this is the second one something this i think we don't have a"
3451360,3459360," space in here uh right so and then we're gonna have this one and let me put them in some sort"
3459360,3465520," of a c array right so because we're programming in c so this has to be a c array and that kind of worked"
3465520,3471200," unfortunately percent in c means a mod and this is not what we want in here so i might as well actually"
3471200,3476960," get rid of that by putting it in here i hope it's not the special character in regular expressions okay so"
3476960,3483040," that's pretty cool right there we go so we managed to extract the hsl colors and now we are able to"
3483040,3490880," copy paste them in here so we have our rgb in here and we're gonna have hsl core table uh hsl 256"
3490880,3495920," all right so this there's a three components in here and i'm gonna copy paste all of that in here"
3496720,3504560," there we go how about that isn't it cool all right"
3504560,3518880," all right so i'm just looking at the chat maybe there's something interesting"
3519840,3522240," uh all right"
3522240,3531760," can you advise where to learn regular expressions i don't remember where i learned regular expressions"
3531760,3539440," i think i learned them by just messing with random examples and reading random stuff on the internet i"
3539440,3544960," don't think i had anything specific there is a whole book written on regular expressions um"
3544960,3550480," regular expressions book uh i never read it"
3550480,3558240," so but i heard people say that this is a good book to learn regular expressions uh i learned regular"
3558240,3563200," expressions the same way i learned c but just by googling random stuff on the internet uh there's a lot of"
3563200,3570560," also like um things for parsing regular expression for experimenting with regular expressions like rejects 101"
3570560,3578400," uh right so this thing compiles regular expressions and actually highlights um these kind of things"
3578400,3584960," okay so i'm gonna actually give the link to this sort of book right and there's things like rejects 101"
3584960,3589840," uh rejects 101 is not the only thing that can do this kind of stuff there's all sorts of services like"
3589840,3595920," that like people constantly create a new one uh because it's such a cool idea uh so imagine that"
3595920,3602640," we have uh something like hsl uh let me find the course txt right so let's actually copy paste this"
3602640,3610080," entire thing in here uh right so here you can put some sort of input and then here you can start typing"
3610080,3616000," down a regular expression and it will automatically like highlight what it found let's actually put hsl in"
3616000,3623200," here uh right and it as you can see it extracted hsl right so then i can put parenthesis in here and it"
3623200,3627680," couldn't find anything because there's nothing uh between parenthesis and there's no such thing in"
3627680,3634880," here then i can say okay between parenthesis we have any character uh of any amount and there we go"
3634880,3642880," so we match this thing so dot means any character and the asterix mean that everything before this thing like"
3642880,3648560," any zero or more of these things and since dot is any character it means that like you you have any"
3648560,3654240," characters in here but we want to actually extract all of the three groups in here so we may want to"
3654240,3661520," start uh matching them like this right and let's actually put it like that uh boom boom right and"
3661520,3667040," that should actually uh i don't really know so different regular expressions may have different"
3667040,3674800," syntaxes right so this one doesn't really work the way i expect it to work so maybe uh but it kind of"
3674800,3681600," worked right so can i actually do something like this oh yeah there we go so some regular expressions uh"
3681600,3687280," require you to uh backslash the parentheses some of them require you to backslash them when you're"
3687280,3692880," capturing groups so there's different dialects and stuff like that so in this one this means parentheses and"
3692880,3698880," stuff like that so this is another way to practice regular expressions right because you can interactively"
3698880,3704560," see whether you type in the correct thing or not uh right something like that there we go so it"
3704560,3711280," automatically highlights some of them even explain to you like what all that means uh so that's basically"
3711280,3716160," two things that i recommend you to learn uh to use to learn about regular expressions even though i never"
3716160,3721840," read the book itself right so but i heard people say that the book is good uh right so this is um"
3721840,3728080," regular expression interpreter or i don't even know how you you call this kind of website right so"
3728080,3734480," um it's just the regular expression experimenting tool and here is the book on regular expression"
3734480,3737520," so i'm going to also put that in the description for anyone who's interested"
3737520,3745200," anyway so yeah regular expressions are kind of painful but they are pretty much ubiquitous so you"
3745200,3752400," need to know them right so uh it's like javascript it's not great but it's everywhere so you have to know"
3752400,3765040," it uh that's basically the same logic anyway so uh here's the thing so here we have find ansi index by rgb"
3765040,3773280," okay so let's actually create something similar like find ansi index by hsl right so in here we're gonna provide h"
3774160,3782400," s and l right and we'll have to implement that at some point uh i'm gonna actually put uh assert here"
3782400,3790480," something like uh to do not implement it yet right because first thing we need to do right before we"
3790480,3797840," implement that we need to be able to take rgb and convert it to hsl without that it's kind of like"
3797840,3805520," pointless right uh so let me actually try to compile this entire thing um so there we go so it doesn't"
3805520,3811840," compile because we have some some weird stuff uh some really weird stuff which i'm not really"
3811840,3822000," oh oh some of them have like a leading zeros that's actually very cool and yeah in c if you have a leading"
3822000,3834720," zero it's actually interpreted as uh octa eight based how do we call that so what does it say in the uh"
3834720,3843200," in the error octal constant right so basically it's a eight base uh number system right so it's an octal"
3843200,3849600," octal based number system i don't really know how to pronounce it properly so and that is rather"
3849600,3857120," interesting so how many of them do do we have can i just go through all of them manually and uh just fix"
3857120,3863200," them like so uh i really hope we don't have too many of them okay so we don't really have too many of them"
3863200,3874880," that's nice so let's put a certain here uh base eight okay so uh how do we convert uh rgb to hsl"
3874880,3882160," so let's actually google the rgb to hsl because it's actually kind of involved formula uh right so let me"
3882160,3889920," let me see there we go so that's the formula right so that's how you convert rgb to hsl"
3890560,3900560," so let me see if we can quickly just implement that right so we need some sort of function rgb to hsl"
3900560,3908000," so here we're gonna um accept rgb uh so and we probably need to return something but i'm not sure"
3908000,3914800," um do i want to create like a separate structure for that i don't feel like creating a separate structure"
3914800,3922160," so let me actually pass all of that as a pointer right so it's gonna be hsl s uh l right and we're"
3922160,3929440," gonna do it like that so the first thing we do we divide rgb by 255 right and the reason is because we"
3929440,3938000," need to convert them from uh the range of zero 255 to zero to one we're basically normalizing all of them"
3938000,3946320," uh right so and because of that this is going to be float right so let's actually do uh r01 uh r divided"
3946320,3953520," by 255 and i'm going to say that i'm dividing by flow to to trigger automatic conversion right so we"
3953520,3960000," replace uh g and i want to just quickly replace this entire thing there we go and let's quickly replace g with b"
3960000,3967760," there we go so we have r g and b so and after that we calculate the maximum and minimum and i suppose"
3967760,3974560," this is important for like um lightness and saturation and stuff like that and also we compute the difference"
3974560,3983520," between the minimum and maximum values right uh the maximum and minimum values so how are we gonna do"
3983520,3996400," that uh so probably we're gonna have something like c max and r01 right so if um g01 is greater than c max"
3996400,4007520," c max becomes g01 so this is the first sort of thing and if b b is greater than that we're gonna assign it"
4007520,4014000," again right so this is basically computes the maximum value and we can do the same thing for"
4014000,4019360," the minimum value right so this is gonna be minimum i might as well actually could replace max with min"
4019360,4027440," boom and in here we'll probably have to change this stuff to less all right what's gonna be the next"
4027440,4033120," thing the next thing we need to compute the delta between them right maximum minus minimum okay so this is"
4033120,4041760," gonna float uh delta c max c min maybe i'm gonna actually split my screen into two so i can see"
4041760,4047040," okay so hue calculation is a little bit involved not gonna lie"
4047040,4057440," so essentially we have this thing i wonder if we can make it a little bit uh bigger just for you"
4058880,4065760," right so can you see something it's actually kind of like uh yeah the quality is great as you can see"
4065760,4071120," the quality is great but that's the that's the we have to deal with on this channel right"
4071120,4081440," all right so basically if the delta is equal to zero uh the hue is going to be zero degrees right and what's"
4081440,4087840," interesting is that if delta is equal to zero that means the c max and c min are equal right and they're only"
4087840,4093840," equal if r g and b are equal to each other right and when they are equal to each other that means it's"
4093840,4098960," gray and in that case that means the hue is like nothing right i suppose that's what it means"
4098960,4111840," uh so now if delta is equal to zero right so it's kind of bad to compare these things exactly because it's"
4111840,4117600," floats right but i suppose if these things are truly like equal to each other i guess it makes sense to"
4117840,4126800," um well to be fair to be fair maybe it makes sense to actually have some sort of epsilon right so"
4126800,4134000," essentially if they if delta less than epsilon right some sort of epsilon only then consider it to be"
4134000,4141840," equal to zero and epsilon we can say uh is equal to one minus six right something like that it's basically"
4141840,4147840," zero one two three one two three one two three right so this is what it's equal to as far as far as you"
4147840,4152800," can remember right so this is very small value if it's less than that value we can certainly say that"
4152800,4159440," it's basically equal to zero uh right and in that case the hue right the hue is going to be equal to zero"
4159440,4169200," right so otherwise uh if c max is equal to r uh right so we probably also want to do the comparison with"
4169200,4177440," epsilon uh right but i think it's not particularly required because uh we are literally assigning"
4177440,4185840," r01 we're not doing any mathematical operations on that and if c max is literally equal to r01 is going to"
4185840,4192320," be bit by bit equal to the original value in here right so i think we can quite safely just like"
4192320,4198960," compare it with equals in my opinion i think uh right so in that case we have to find the difference"
4198960,4206160," between uh green and blue right so this let's first do that g01 minus b01 and we have to divide"
4206160,4213040," it by delta and also we have to do that by modulus six uh to do this kind of stuff with plot i think we have"
4213040,4219920," f mod uh right so and we're gonna put six in here right and this is the value we also have to multiply"
4219920,4226560," by 60 degrees i don't really know why and this is our hue right so this becomes our hue i wonder if i"
4226560,4232240," can just make the line a little bit bigger because i want to be able to to have this specific size of the"
4232240,4242000," font all right so if c max is equal to green g01 what hue is going to be equal to so we have a difference in blue"
4242000,4251440," b01 minus r01 and here we divide by delta but not by module six for some reason uh and then plus two"
4251440,4259200," and then we also multiply that by 60 maybe i have to do it like this there we go so this is what we have"
4260000,4272000," but i didn't put a multiply there we go so otherwise so this is a c max uh c max equal to blue zero one in"
4272000,4280080," that case hue is going to be equal the difference between red and g right r01 g01 divided by delta but"
4280080,4288800," plus four this time uh 60 let's buy by that and there we go okay so interestingly enough"
4288800,4296960," um so what's gonna happen if we have like an else branch right so this one has to be hit by the way"
4298160,4306320," uh so let me make it a little bit bigger one more time so i suppose maybe we should just say that"
4306320,4312320," this specific place is unreachable for now if it is reachable we'll try to see what is going"
4312320,4324160," on in here so for now i'm going to just mark it as unreachable cool so uh we have hue right we have hue"
4329040,4333440," so saturation so the next thing is saturation saturation is pretty straightforward we only"
4333440,4340000," have like two branches in here uh right when delta is uh equal to zero well we can actually quite say"
4340000,4346720," that it's less than epsilon right what's interesting is that we should don't have to worry delta about"
4346720,4352080," delta being negative because we always subtract the minimum from the maximum so it's always going to be"
4352080,4358800," positive right so uh we can just like use the like the original value without any absolute"
4358800,4363760," or anything like that right so in that case the saturation is going to be equal to zero uh"
4363760,4370960," otherwise uh saturation is going to be equal to delta divided um i'm not sure if it's visible"
4370960,4376880," particularly for you so i'm going to just like increase it in here hopefully you can see even though"
4376880,4384640," it's the quality is quite crappy but that's fine right at least it's readable so 2l what is l though"
4385360,4386320," where is the l"
4386320,4395760," oh it's it's lightness so they express the situation in terms of lightness but they defined lightness"
4395760,4404240," later i'm not sure okay you could actually define it first uh so we can just say that l is going to be"
4404240,4415120," equal to c max plus c min uh divided by two okay so there you go and then in here the situation is this thing"
4415120,4422480," two multiplied by uh lightness god damn it right so we probably have to do something like this uh minus"
4422480,4430720," one uh right and i guess that is basically it right i think so i think that's basically the conversion"
4430720,4436640," but there is some problems in here because all of that in floats but we expect the uh the situation the"
4436640,4443680," hsl to be in integers so maybe i'm going to just put this in floats for now um all right isn't it"
4443680,4449840," a bug isn't a bug i think it's pretty freaking bug so let's try to come uh to compile this into anything"
4449840,4456160," and see if it fails or not okay so we have a couple of things in here fmod is not available so let's uh"
4456160,4462240," include the math and uh we probably need to link with the math library as well so as you can see now it"
4462240,4470560," works i'm actually really curious if my hsl thingy works correctly and what's funny is that we have"
4470560,4478240," rgb colors the corresponding rgb values of the same colors what we can do we can actually go to rgb"
4478240,4485120," colors convert them to hsl and compare them to these hsl values and see how they compare to each other i"
4485120,4491520," i think it's a pretty good idea to just test things out right um so i'm going to create a separate"
4491520,4494720," alternative entry point right so something like this"
4494720,4508640," and let's just go ahead and iterate through all the colors right so 256 plus plus i uh so here uh rgb to hsl"
4508640,4519200," so i'm going to provide uh table what is it what i think it was called color table color table rgb2"
4519200,4525280," i think the color table rgb 256 is really long name i don't really like it let's actually rename it to"
4525280,4535760," something like rgb256 yeah so it's a little bit shorter and the same with hsl right uh yeah boy boy"
4536720,4546720," that's cool um okay so let's go to main so in here i can do rgb256 right so this is the index and i take"
4546720,4558560," zero right so this is that and then uh one and then two right so and i need some values for hsl h s and l"
4558560,4567040," and i'm going to provide the pointers to those things h s and l there we go uh okay so and let's"
4567040,4575120," just like literally print them and compare them to what we originally have right so um we can put"
4575120,4583760," this stuff in here so this is the original like values uh so they're integers i know that there are"
4583760,4588960," different type integers and flows but i do that intentionally uh right so just to compare things"
4588960,4594000," just to see visually right like to get an intuition whether we're doing everything correct or not"
4594000,4603040," right so in here i'm going to copy paste this stuff just put it in here but i'll have to replace rgb with"
4603040,4609360," hsl boom all right and then i'm going to put hsl in here so on the left we're going to have whatever we"
4609360,4615440," got from the website from the table right and on the right whatever we managed to convert from the rgb"
4615440,4621440," from that same website right and let's just actually compare them to each other uh right so let me see"
4621440,4632640," so this is the course okay that's pretty cool uh okay zero zero zero zero zero zero zero zero 125 zero one"
4633280,4639120," zero zero okay so here we have in percentages so on the original websites uh if we take a look at the"
4639120,4647760," colors txt all of them use percentages from zero to 100 but our percentages are from zero to one"
4647760,4654000," so we have to keep that in mind uh right so essentially if we want to like a proper thing in"
4654000,4662000," here we probably need to multiply them by 100 right so to get them to the actual thing in here but i'm"
4662000,4667200," actually quite surprised that it's pretty freaking close right so let's actually pick a random okay"
4667200,4678160," seven seven to seven okay so these are um are they really degrees some of them work some of them don't"
4682080,4696960," and they're not even have a negative damn huh but maybe it works out who knows"
4696960,4708400," okay so maybe one of the things we need to do with this uh degree stuff because we want to have values from 0 to"
4708400,4717840," 360. right we can do fmod does fmod work with negative values right can i do fmod 360 and just hope"
4717840,4724720," that it's going to work with negative values uh okay so well i mean this is not where i had to do that"
4724720,4729120," so i had to actually put fmod on a different thing in here there we go"
4731040,4742320," so this is going to be hsl fmod fmod f360 right there we go uh can i do fmod uh no it doesn't work"
4742320,4749440," so it basically works like an integer mode right so it's it works like an integer mode so probably we have"
4749440,4756480," to solve this thing the same way as we solve it with the integer of mods so basically by adding 360 right but"
4756480,4761600," that actually creates a situation that basically creates incorrect values for positive values so we"
4761600,4769920," have to do fmod f second time right so there we go and that should kind of uh wrap it properly so there"
4769920,4781760," should be no um negative values anymore right so i'm actually kind of surprised with these values some of them"
4781760,4787040," like three and stuff like that but maybe maybe that's not important"
4787040,4799520," okay good okay so we'll see so i'll keep that in mind so some of them are not correct"
4799520,4808240," maybe we shouldn't even use the hsl then it's it's hard to tell though 90 degrees maybe like"
4809360,4817120," we'll see we'll see we'll see we'll see okay whatever uh and all of that uh probably have to"
4817120,4822240," be integer right so since the values that we have in a table are integers we probably"
4822240,4826560," want to keep all of that as integers so let's actually mark this thing as floats"
4826560,4833840," right so this these are the floats uh and let's create the integer values of hsl right so this is going"
4833840,4848160," going to be uh this stuff right integer uh s so this is f this is f and the lightness is going to be"
4848160,4863280," like that l uh lf so this is h s and l i'm going to put it in here so and the f here has to be an integer"
4863280,4869120," there we go um so it probably well i mean i assign it to integer so it will automatically convert"
4869120,4877760," everything okay so that's cool uh huh so semicolon no big deal no big deal uh and overall yeah they're"
4877760,4883680," kind of close except for for this kind of situation but this could be like a close values anyway right"
4883680,4897440," uh all right so okay that's cool i wonder if we can embed this kind of conversion into rgb to s uh to hsl"
4897440,4908640," right rgb to hsl right so i can take this conversion um like so so essentially here we can say okay this is"
4908640,4915360," going to be an integer these are the integer output values uh and whatever we do in here"
4915360,4922960," are going to be intermediate values right so this is c main so let's actually say that here i'm going to"
4922960,4935600," have a float which is like hue hf all right and i'm going to query replace h with hf like so there we go"
4935600,4943200," here we go all right so then we have an ascertain here then we have an intermediate lf right so this is"
4943200,4951600," an intermediate lf and in here we're going to have an intermediate sf right which is initially zero but"
4951600,4961600," let me quickly replace uh let me quickly replace uh sf like so and this one is lf and then here are going"
4961600,4971520," to be the output values uh there we go so we basically embedded all of that stuff in here so we have some"
4971520,4984480," warnings in here uh so those things must be integers int uh hsl hs and l so h s and l put that in here"
4984480,4992960," and i can't see in this mr so uh yeah there we go i can i can see it now okay cool all right so now"
4992960,4999040," it's embedded into that original function rgb to hsl so it's all in integer this entire thing is probably"
4999040,5003520," very slow but i don't really care about it right now so what i care is about like to to actually"
5003520,5011280," work in here uh okay so we have some sort of conversion and stuff like that which is kind of"
5011280,5018480," cool so you know what i want to be able to do um i want to actually test that on an actual image"
5019360,5028320," what if we turn this utility into something that accepts an image and just prints that image in the"
5028320,5035600," terminal i think this could be an actually pretty cool tool right so you basically give it a file"
5035600,5040080," a png file and it just like prints it into i'm pretty sure somebody already done before but i mean"
5040080,5045760," we can try to do that as well uh because we can quite easily load the png image because because we have"
5045760,5058960," a stb uh stb image right um so uh let me see uh so we have some dev dependencies right so the dependencies"
5058960,5069840," so here is stb image um um so why is f in the chat"
5069840,5072960," okay"
5072960,5082480," right so we need to do stb image dot h uh define stb image implementation"
5082960,5091840," um i suppose that should work hopefully uh stb image well we have to probably provide the"
5091840,5101200," def uh dependencies um how is it called it's called dev depths but i can't usually do that def uh depths"
5101200,5110160," there we go okay so that's pretty cool okay so here is the main uh main function so let's accept the"
5110160,5117120," arguments arguments arcc char arc v right so let's make it accept the file path um"
5117120,5126160," if arc c is less uh than two right if arc c is less than two uh we're going to do what"
5126160,5128640," uh"
5128640,5138960," we're gonna say fprintf std error error error no input is provided right"
5140160,5145120," and then we're gonna just exit with one right we're gonna exit with one"
5145120,5156720," so and then uh i'm probably gonna accept the file path i'm gonna accept the file path uh arc v uh one"
5156720,5163360," right you know what i think i want to make a small break uh i ran out of tea and it's pretty cold in"
5163360,5169520," here so i really need some something warm so let's make a small break all right so some people pointed out"
5170160,5178240," um even though the compiler complained about invalid octal we still probably have"
5178240,5184880," valid octal somewhere there uh right so let's actually try to get rid of them uh so let me go to"
5184880,5196640," the caller dot c um and let me find so there is things like 0 7 and stuff like that uh so the really"
5196640,5207920," valid octals probably consist of leading zero and then uh two digits afterwards"
5209520,5214640," and we don't have such things right that's that's the problem we don't have such things so we have"
5214640,5225520," a leading zero then a bunch of numbers in here and then maybe only one or oh so maybe we we don't even"
5225520,5233360," support that syntax at all so i wonder if i can just use the rejects or uh or rejects 101 to to test these"
5233360,5238240," things out speaking of how this website is useful right so we already discussed that"
5238240,5246240," because some like different editors or different tools have different um you know dialects of regular"
5246240,5252480," expressions right so sometimes it's just easier to to use a different thing so here is the digits in here"
5252480,5259520," so this is leading zero and then we say that we have two of them and do we have any"
5259520,5270800," all those things so i suppose notes right so what about a single one here right so yeah we do have a"
5270800,5276240," situation but we can probably say that this must start with a word"
5276240,5289200," okay so there is a valid octal thingy but they are the same values anyway"
5289200,5298480," octals i swear to god this syntax for octals is so bad like why don't you just make it zero"
5298480,5306160," all or something so you so you can have leading zeros it's just like oh my god uh anyway"
5306160,5314400," uh the table from the internet is wrong okay it is what it is but it's it's right for some colors"
5314400,5321920," it's right for for some colors and maybe we're gonna just stick with that table and we can try to"
5321920,5326960," find a different table later right so because i don't just don't want to spend too much time on"
5326960,5332960," like finding the correct table right now so this one has some of the correct values so let's just work"
5332960,5343600," with them and then uh we'll see uh the zero seven uh one should be two zero seven is missing maybe we can"
5343600,5354000," you know i think we can actually fix that up a little bit later we can basically regenerate hsl from rgb at"
5354000,5361760," run time and then just use this hsl table you know right so who needs the the internet if we can generate"
5361760,5368000," our own chat i mean we we still got the rgb table from the internet but anyway so let's not obsess over"
5368000,5372960," that thing too much right so it's kind of like pointless to obsess over that thing of like before"
5372960,5380400," we even have any working code let's just have some code and see how it goes okay so uh first thing we need to"
5380400,5385120," do we need to load an image right but yeah thank you for pointing that out thank you thank you thank you"
5385120,5392400," like uh this is a very valuable input i really appreciate that uh okay so let's do stb image um"
5392400,5398400," image load or maybe stbi load i think that's how this functions go there we go"
5399440,5409440," oh so so this is pixels right but the pixels are going to be inserted too so the file path uh file"
5409440,5415040," path is this and this is going to be width and this is going to be height so this is the amount of"
5415040,5420080," components i don't care about the amount of the components i say that always converted to to four"
5420080,5429920," components right so this is width and this is height there we go so if pixels the null uh that means we"
5429920,5443680," couldn't load the image so we have to report that uh std error error could not read file s file path and we're"
5443680,5450720," gonna exit with no zero exit code so we've got the pixels we've got the pixels so essentially what we"
5450720,5457600," need to do we need to just iterate each individual pixel and get the index and just like use that index"
5457600,5466960," kind of similar to to this one uh fight and c index by rgb uh all right right right so okay let's go"
5471280,5482960," so i'm gonna start iterating rows from zero to height this one has to be small for x equals zero x less"
5482960,5491440," than width plus plus x right and then let's get the pixel let's get the pixel so this is pixels uh y"
5491440,5498160," multiply by width plus x and there you go so we'll probably want to get the rgb values right so let's do r"
5498960,5510160," so this is um ff right so we're extracting ff uh this is a single pixel g is basically shifted by one"
5510160,5518080," byte you can say that this is shifted by zero bytes right and this one is shifted by two bytes or something"
5518080,5525520," like that so this is rgb the next thing we need to do we need to convert it to hsl so rgb to hsl"
5526320,5540960," uh and rgb hsl and there we go we got hsl so we need to utilize that function find ansi index by hsl right"
5540960,5551840," hsl hs and l and this is the index and we probably need to print this entire stuff like so i might as well"
5551840,5568240," actually replace this stuff like that so this is that and then we need to also reset on each individual"
5568240,5571040," row uh like so"
5573600,5579200," so i want to actually keep this thing because i believe it is useful uh right like so"
5579200,5588720," okay so and this should theoretically convert the image into the uh into the like ascii code score"
5588720,5592880," things right but we need to implement this stuff right we need to implement this stuff we need to"
5592880,5600560," iterate through uh all of the all the hsl values right all the hsl values and just find the closest one"
5602160,5614000," um all right all right so uh zero less 256 plus plus i and um so we originally have an index"
5614000,5621440," and we just need to compare the distance um i have an idea what if we have something like"
5621440,5628560," distance hsl 256 where i just provide index hsl right and i see okay if"
5629760,5639360," the one that we found here is less right we just assign index to i right so think yeah i think this"
5639360,5646240," is actually pretty pretty good way to do that uh right so this is integer and this is integer this is"
5646240,5653760," integer this is integer there we go i have to implement cinta i think i'm gonna copy paste that stuff put it in"
5653760,5663200," here and here and here we just return the index there we go so fine index by hsl right the question is how"
5663200,5665280," we're going to be computing all of those distances"
5665280,5678320," all right so we need to find the differences of hue saturation and values right so it's going to be dh h minus"
5678320,5690880," hsl 256 256 256 of phi uh and then we have to do s now this one is zero this one is one and this one is l"
5690880,5699200," um this can be two right and uh we're gonna just use the square thingy right similar to so we're still"
5699200,5705360," using the euclidean distance right euclidean distance but in a different space not in rgb but"
5705360,5712880," hsl uh right uh so for now i'm gonna give the importance the same importance for all the components"
5712880,5719840," even though there's clearly uh some gradation some biases like in my opinion hue is more important than"
5719840,5725520," saturation and saturation is probably more important than lightness but i'm not sure about this too so we'll see"
5725520,5730560," maybe maybe we're gonna put some sort of a biases on these things and a hue should contribute more"
5730560,5735200," uh into into the distance than the saturation in the lightness"
5735200,5742320," uh right so this is what we're gonna have and let me try to compile this entire thing okay so what do"
5742320,5748560," we have pixels in compatible pointer so we probably want to cast it explicitly right because let's see"
5750000,5758080," okay so it wants the input uh let's provide the input so i have uh sodium pog in here right i'm sorry"
5758080,5763760," for the for the quality okay let's do color uh color"
5763760,5776560," the i just first tried this beer what the look at these colors i mean okay so let's actually make the"
5776560,5784320," proportions a little bit better so let's actually put a space in here um okay so i mean i mean i'm not"
5784320,5784880," complaining"
5784880,5789200," that's freaking perfect"
5789200,5795440," even with fucked up colors like it's just it's just worked the fuck"
5797920,5807280," oh okay uh that's pretty cool and this is a terminal right so essentially i just need need you to zoom"
5807280,5813280," out uh like a far away if you zoom in you can clearly see that this is the terminal right so here"
5813280,5821120," is the text in here you can see but if you zoom out this is like an actual image in here and that's pretty"
5821120,5826160," cool so you can actually provide like different things in here right so we have a sodium cup i"
5826160,5834960," suppose uh and sodium cup okay so it's a little bit up because we don't handle the alpha right we"
5834960,5840720," just don't handle the alpha properly we probably need to do something about that um but yeah"
5840720,5846400," who needs to open yeah exactly so okay so let's actually try to handle the alpha properly"
5847360,5853680," how can we handle the alpha we need to get the alpha in here all right so it can be pixels uh 24"
5853680,5861040," zero x f f so maybe here we have to do something like this so this is going to be zero byte this is"
5861040,5870560," one byte this is two bytes and this is uh three bytes there we go so this is alpha okay uh and"
5871360,5879520," essentially alpha is a value from zero to 255 so we want to convert it to uh zero to one right and"
5879520,5888160," then we need to multiply uh it by r right so but we may lose some information so we have to first do"
5888160,5895840," multiplication and then division right so this stuff effectively will also apply alpha on all these"
5895840,5900880," components and alpha for some of the things is going to be zero it's going to cancel out everything in"
5900880,5907760," here uh right so this is basically what i'm trying to do so i'm taking alpha into account so here uh we"
5907760,5915040," probably have some pixels in the image that have zero alpha but the garbage as r g and b so that happens"
5915040,5923120," sometimes some of the graphical editors like uh do that uh essentially like they remove some of the pixels by"
5923120,5929280," setting their alpha to zero but not setting r g and b and sometimes you can even see some hidden images"
5929280,5936720," in there uh i even have an example for example the debated emote uh of twitch has a lot of weird stuff"
5936720,5942960," in the background which is hidden by alpha but by ignoring the alpha you can actually see that garbage"
5942960,5949040," and so let's actually see if this works and i'm going to demonstrate you uh so uh okay so let's recompile"
5949040,5952800," this and as you can see it works now so we took into account the alpha and now"
5952800,5959840," everything's fine if we uh ignore the alpha if we only use the rg and b it's going to have this garbage"
5959840,5966560," in here so let's actually take a look at the g baited as i promised right so uh let me find you baited"
5966560,5975360," how long we've been waited let's not get g baited so i'm going to uh that will you get all"
5976960,5986720," uh g baited uh png right hopefully it will download everything properly so and let's take a look uh so"
5986720,5993680," this is fair g baited okay so this is the image uh right and i'm going to try to apply it to my tool"
5993680,6001680," you'll be able to see that there is a lot of weird stuff in the background for the trip and also there is like weird colors"
6002320,6009200," but yeah so like what is that in the background because the background is supposed to be transparent"
6009200,6013600," but there is a lot of stuff on here right but if you actually take into account the alpha"
6014240,6020720," uh right so uh we have to recompile it of course i have to recompile it looks fine"
6028720,6035440," uh so that's pretty cool uh so let's take a look at some other things uh what other assets do we have"
6035440,6046560," in here uh png so we have uh the image the logo um of the of the library itself right you guys know that"
6046560,6054000," the the library has a logo right so it's this i'm sure i kind of up the logo but it's so it's all right"
6054800,6059200," uh for now at least and uh oh boy"
6059200,6074560," i guess this is where the uh copy paste error starts to shine so it's it's an eggplant yes it's an eggplant"
6076480,6088240," uh anyway so let's try to see um what i was thinking is that we can try to generate hsl from"
6088240,6094960," the rgp so let's give it a try uh so we loaded everything in here and let's just initialize the"
6094960,6101680," palette right let's just initialize the palette and what i'm gonna do i'm gonna just do hsl 256 so"
6101680,6109360," essentially i'm taking rgb table and i'm converting um converting to hsl and save it into hsl uh right"
6109360,6118320," so this can be zero h i might as well actually do something like hsl 256 i zero is it gonna be good"
6118320,6122080," is it gonna be good is it gonna be sufficient i think it's going to be sufficient enough"
6122880,6130000," uh so this is gonna be one and this is gonna be two there we go and we don't even need to do that"
6130000,6137840," look at that he's not pug not that we think it's pretty freaking pug let's keep it a single line"
6139200,6153360," uh all right so let me let me see and uh yep and so yeah it was a copy paste error so lxr was right"
6153360,6159600," this is a literally copy paste error so but we recovered the original uh the original code from"
6159600,6166240," the rgb table so something wrong with hsl table so and i think it's a reasonable solution right just like at"
6166240,6173920," run time generate the the hsl we can actually print out the hsl table and just recopy paste it back so"
6173920,6180720," we don't have to we don't have to do that um oh yeah by the way since we fixed the chorus like maybe"
6180720,6185440," gebet it is not going to be weird anymore uh that's actually pretty cool so yeah"
6185440,6190800," damn look at that beautiful gebetes"
6190800,6201680," damn that's a beautiful today uh all right so let's take a look at uh other things maybe assets"
6201680,6214640," so do you guys have any suggestions on what emote to render in the terminal do you have any suggestions"
6214640,6220640," suggest emote post your emote in the chat and i'm gonna render it in the terminal just for you"
6222400,6234000," okay pepega of course let's do pepega uh all right i like pepega pepega is my spirit animal uh all right"
6234000,6246400," so this is gonna be pepega png pepega png okay so let's do color uh boom yo look at that beautiful pepega"
6248160,6253120," i think i think i think we need to scale down the images i think we need to scale down the images so"
6253120,6260560," let's actually try to work on that um but as far as i know how can we do that"
6260560,6268560," so there is a stb um"
6268560,6274560," stb library for assigning the images we can try to use that one you know what i mean"
6275280,6281680," uh all right so let's give it a try i'm gonna go to sodden that's pretty certain it's nothings"
6281680,6288880," nothings stb oh by the way copper pride is also cool one we're gonna take uh check it out a little"
6288880,6295200," bit later uh lumis xh thank you so much for uh subscription uh cosaban thank you so much oh okay"
6295200,6301920," so it was yesterday actually so you are the first subscriber for today um okay so here's the entry size"
6303920,6308960," okay so i'm gonna take the uh take the library roll"
6308960,6318720," here on the studying channel we're taking the libraries roll okay so wget and i'm gonna just"
6318720,6325200," download the stb imagery size i have no idea how to use it i use it only once and i use it on like"
6325200,6331840," in a completely different um in a completely different language in jai right so i don't really know how to"
6331840,6342240," probably do all that um so we have input pixels so resize you int 8 okay well i mean it sounds reasonable"
6342240,6355120," so we need to one of the things we probably want to do we want to preserve the ratio of those things"
6359840,6365360," we want to preserve the ratio of the image but we want to scale it up a little bit higher"
6365360,6378320," cup of pride not illegal in russia it is illegal in russia but here is the thing about russia the laws"
6378320,6380720," in russia don't work um"
6383360,6392720," there are sort of like a recommendation on what to do so they're usually used if you for example if"
6392720,6402880," somebody who's very important in russia don't like you they have a all variety of laws to use as a tool"
6402880,6408720," to actually bring you down put in jail and stuff like that but unless you're not messing with anyone"
6408720,6412960," important in russia nobody gives a shit about you regardless of the laws so this is how laws in"
6412960,6423920," russia work right so telling you all the secrets um so yeah and if they want to put me in jail"
6424800,6429360," they don't even need me to use this cup of pride in order you will find something else"
6429360,6439120," right so it's like it's just yet another tool to to put people in jail right so nothing more"
6439120,6449040," that's how russia operates so russia has a lot of like laws that even contradict to each other like we"
6449040,6454560," literally have laws that contradict to each other uh but that somehow works because their recommendation"
6454560,6462960," right this is how laws in all slavic countries were okay so russia is not unique in that regard"
6462960,6472880," okay and i don't know like i feel like do i want to spend time resizing this entire thing"
6474480,6480480," it probably makes sense if i want to turn it into a tool right into a tool that i can then upload it"
6480480,6486320," for people to play and maybe that's that's valuable right so i do believe that it's available right but"
6486320,6490960," one of the problem is that i have to preserve the ratio right i have to preserve the ratio that means i"
6490960,6495680," need to do a little bit of a math that i don't really want to do right now and"
6497920,6505520," yeah it would be kind of cool if i could just like tell the this thing to okay so just preserve the ratio"
6505520,6514240," okay for some reason i'm not in a mood of doing the math but it looks like that's what i have to do"
6514240,6525360," okay so let's put something to do hard code the fixed table right so essentially what i need to do in"
6525360,6530400," here i need to generate this table and copy paste it back so i don't have to do that one more time"
6530400,6541680," so let me find"
6541680,6553200," okay so resize i want to find the actual signature in here all right so this is useful"
6555360,6573840," so so widths uh let's say that we always want the widths uh let's say resized width to be 18. right"
6573840,6584160," we always want resize widths to be 18. then uh we have resized height so and essentially um"
6585360,6591520," we need to take the height and multiply it by the ratio right"
6591520,6602320," of height to width right so this is the ratio of height to width oh yeah so it's essentially height"
6602320,6609360," divided by width and this is a percentage of height in width percentage of height in width"
6609360,6620080," uh which i need to multiply by 18. right i think i hope i didn't fuck it up right i hope i didn't"
6620080,6627120," fuck it up but i always fuck up this math so that's the problem i always fuck it up all right we'll see"
6627120,6635840," uh if i fuck it up uh i it will be more or less obvious okay so the next thing i need to do is i need to"
6635840,6643120," allocate enough resized pixels right so this is resized pixels um so i'm not sure about this particular part"
6643120,6650640," right so it might it might be completely wrong so let's uh allocate you insert it to team so this is a"
6650640,6658480," resized width multiplied by a resized height uh huh and of course we want to make sure that it's not"
6659120,6664560," well i mean usually on the modern systems malloc will never return null but who knows like maybe"
6664560,6671200," you want to run an old system just just assert this is what we're assuming here so okay input pixels uh is"
6671200,6677920," going to be just pixels right so this is going to be width and this is going to be height and the strident"
6677920,6687520," bytes is size of uint32 multiplied by width so that's the strident the output is resized pixels"
6688480,6703920," uh resized pixels uh so then resized width uh resized height resized height and then the output strident"
6703920,6713600," is effectively this but also with a resized width resized width and then amount of channels is four of"
6713600,6725200," course right so i'm not sure like why it needs to return anything okay so here we initialized the"
6725200,6732000," table and here we're trying to render um render the thing so we have to use the resized uh height and"
6732000,6738800," the size width so let's do resized and i'm gonna just put this stuff in here so this is resized width"
6738800,6749040," this is besides pixels within height pixels and there we go okay let me try to compile this entire thing so"
6749040,6760480," implicit declaration probably need to include stb image resize dot h and in the resize depth depth resize"
6760480,6775440," so let's just copy paste this stuff bro let's copy paste this stuff uh okay so oh boy so it wants unsigned"
6775440,6783680," integer right uns uh unsigned int pointer and this mother flipper also want uh wants unsigned in pointer"
6783680,6790240," incompatible because uh this one wants to be const sure one wanted to be const it's going to be"
6790240,6804640," const um oh it's it's character sure are you happy now okay cool uh assertion um not equal no of course"
6804640,6813520," of course of course of course of course of course of course and it kind of worked uh did it did it work"
6813520,6819600," so it's actually 80 characters i think 80 is probably too much what about like 40 uh let's make it 40."
6820560,6828480," there we go so it's it's pretty pobe but something is wrong with regards to"
6828480,6832800," height i suppose"
6832800,6843200," see any problems though oh yeah as a okay so this has to be uh maybe i just need to use the resized"
6843200,6849520," width in here right so to make it like proportional and stuff like that okay so that's basically it's kind of"
6849520,6857120," like pixelated but yeah uh jpated png and so didn't pull and this is because we don't really have that"
6857120,6864560," big of a resolution anyway uh all right so didn't pull uh this is it so didn't pull we can make it like"
6864560,6872480," maybe even uh 20 let's make it 20. all right so it will become rather pixel but i mean it kind of works you"
6872480,6885120," see right it kind of works uh i think something like kappa uh kappa would work rather well uh right"
6886000,6894960," uh kappa copy this one right because kappa is already pixelated on app right um"
6894960,6899600," kappa png there we go"
6899600,6906800," kappa png yeah that works beautifully look at that so this is the terminal and this is kappa"
6907440,6912080," and it's just like yeah that's literally how it looks like um"
6912080,6919920," two beats kappa yeah that's pretty po"
6919920,6933440," so okay um we want to do kappa pride right so let's put me in jail uh let's put me in jail for"
6935040,6945200," lgbt propaganda because i'm i mean i don't have any job i'm running of money anyway so i mean i'm joking"
6945200,6951120," everything's uh everything's fine uh right w get oh kappa"
6951120,6966320," there we go uh and let's do cola kappa p png that worked great look at it uh savage banana soup thank"
6966320,6973440," you so much uh thank you thank you thank you all right that's pretty cool oh you know we need to test"
6974160,6978480," chat chat chat chat chat we need to test check w"
6978480,6986960," we must have kick w in our terminal we must have that kick w png"
6986960,6994320," boom let's download that uh well i mean we have to do it like that yeah there we go so here is the kick w"
6995840,7020800," and without the car uh i mean we probably need to increase the the size of this thing let's actually make it"
7020800,7021760," 12 and 20 minutes"
7021760,7028400," that's a bit better"
7028400,7032400," that's a bit better"
7032400,7037280," jpeg compression be like yeah exactly"
7039360,7047840," oh boy so it would be kind of cool to have even like this as a flag so yeah let's actually maybe"
7047840,7048880," provide this as a flag"
7050560,7060240," uh so we can have resized width resized width uh okay but that also means we have to"
7060240,7064560," we have to do some stuff so this is resized width"
7065360,7078320," this is initially null right and i need to start shifting the arguments instead um we can do something"
7078320,7085280," like this i zero uh we're gonna start with like one right we're gonna start with one"
7091280,7102880," so move the check for the file in here uh less than rxc right so here we have maybe even maybe even flag or"
7102880,7103600," something like that"
7103600,7110640," um i i just don't want to parse flags right now"
7111920,7121440," i don't want to parse the flags so i'll need to have the the shift thing here uh so let me find shift"
7121440,7129360," args so i need to steal that stuff from somewhere here yeah so that's what i have to do so let's actually"
7129360,7139200," steal it from here so shift orgs shift orgs uh let's provide let's first of all uh assert"
7139760,7147840," that arc c is greater than zero right and just save the program uh right so this is going to shift arcs"
7147840,7157760," arc c uh org v right so here are all the parameters and while arc c is greater than zero uh we're going"
7157760,7167200," to be extracting the flag right so here's the flag shift arcs arc c org v and let's do the switch if"
7168240,7177280," str cmd flag is equal to let's put w in here if it's equal to w uh we need to check the uh the"
7177280,7184320," following thing if arc c is less or equal than zero that means nothing was provided for that flag f printf"
7184320,7194080," std error error no value is provided for uh this thing and we're going to provide the flag"
7196640,7202800," okay and we're going to exit with otherwise if it was provided so this is going to be the value shift"
7202800,7214320," args arc c arc v and we basically assign this stuff to here like we convert it to integer and we assign it to"
7214320,7224000," resize width so otherwise if this is a known flag we're gonna just put it into the file path right so we're"
7224000,7231440," going to set it to file path flag what's interesting is that if file path is already not new we can say"
7231440,7241120," something like um only a single file path is supported though not necessarily know what not necessarily"
7241120,7249120," one of the things we can do essentially uh for each file we can literally print that file"
7250160,7258240," right sounds like a cool idea actually actually that is actually very cool right so we can support"
7258240,7263200," several files and you can modify the sizes of those files of those files on the fly"
7263200,7271200," man that's so cool this is such a cool idea what if i wait a second i really like that so um"
7272240,7280240," let me put the initialization of the table at the top in here so we initialize in the table and then in"
7280240,7286800," here uh we are doing the actual printing resizing and some other shits"
7288480,7295440," yo man the fuck this is such a cool idea right and this is gonna be something like this so i can"
7295440,7302640," basically support several files in here all right and that should work so what i mean"
7302640,7311200," okay so but at the end of all of that stuff we'll have to clean up these things so otherwise it's going"
7311200,7316800," to be leaking memory so we'll have to free uh resized pixels right so we're free and resized pixels and"
7316800,7326800," also stbi uh free image or something i don't remember how it works in image right so free something"
7326800,7335200," something stbi free uh let me see let me see what is it called i can never remember it's something like"
7335200,7351680," free data or uh what is it called who remembers image free jesus christ okay image free and um"
7351680,7360320," yeah so you you have to actually put the pixels in here right essentially we can provide several files"
7360320,7369760," and it will work for several files as well uh okay so that's cool all right it even compiled the first"
7369760,7378080," try okay so we can provide the j baited right and then i can provide also sodium pog from the assets"
7378080,7385440," there we go and as you can see it actually printed all of them but then i can say okay"
7385440,7390640," for the sorting pog make it a little bit bigger well i mean that's too much bigger let's actually"
7390640,7398240," make it like 30 right and i can modify those things independently which is kind of cool right so i can"
7398240,7405760," say that yeah so basically it it interprets the arguments right so if it encounters set the width"
7405760,7410800," it sets the current width and then the next file is going to be with that width and then the next file"
7410800,7415200," with that and that and that so you're basically like uh interpreting so you're providing the program to"
7415200,7421680," interpret uh which is rather convenient i think this is kind of cool uh so then afterwards so we can"
7421680,7431360," just put another uh new line in here right so another new line and uh now they are separated with new"
7431360,7438080," lines and if you only care about like one specific image you can put it in here you can make it like as"
7438080,7446320," because you want uh so that's pretty cool isn't it almost image magic can you image magic do that"
7446320,7453520," uh can you what about wildcard i mean it's up to your shell right i think i'm pretty sure it's up to your"
7453520,7462400," shell all right so i think this tool by itself is already kind of useful right so but one of the things we"
7462400,7469840," need to do first of all one of the things is to fix the hsl uh hsl table right so let's go ahead and fix"
7469840,7478000," an hsl table uh so the way we can fix the hsl table is to actually generate it right so as we generate it"
7478000,7488000," we can basically print uh this thing so it's going to be d d d d uh like so and then we just take this"
7488000,7497440," into our stuff a boom and that's basically it so here i'm going to just exit with nothing right so"
7497440,7503360," because the only thing i want right now is to just generate uh well i mean those are the pointers"
7503360,7506720," let's get rid of the pointers"
7506720,7515040," all right so this is the fixed table and what we're going to do in here we're going to literally copy"
7515040,7524240," paste it in here right so that that's how we fix it right so i just literally regenerated uh right so"
7525440,7532240," who needs jay with compile time evaluation if you can just run it and generate it and then"
7532240,7539360," copy paste it back how about that isn't that cool i think it's pretty cool right so now here uh we don't"
7539360,7547440," need to uh initialize this thing we don't need to initialize this thing and uh we can take a look at"
7547440,7554400," some stuff in here so let's take a look at the debated debated seems fine so let's pick a reasonable size"
7555440,7563280," and let's take a look at some other things so so in pog png and what about the uh the forests"
7563280,7568000," uh about the olivettes okay so this this looks good look at that"
7570640,7580160," that's so cool uh let's make it smaller um i want to do the olivettes there we go how about 16"
7580160,7592800," or how about eight so that's pretty cool and yeah like now we can publish this thing um as the"
7593760,7598320," as the separate tool as a separate project for people to play with i think that's kind of cool"
7598320,7602400," right so how should we call this thing um"
7602400,7611840," how should we call this utility that takes a png image and converts it into the uh into the terminal"
7611840,7614080," into the um terminal cores and stuff like that"
7614080,7627360," how did you fix the cause the hsl values were wrong but the rgb values were right so what i did i took"
7627360,7632800," rgb values and generated hsl from them right and then i just copy pasted generated stuff"
7634880,7640480," terminator terminator terminator is already overused name i mean like so many projects already called"
7640480,7655840," the terminator come on two pixel for you term gl this is not open gl or even related to gl"
7661600,7674480," png to term what's interesting is that uh it is not only png um so it can also support jpeg as well"
7674480,7681520," um maybe you can say image to term right let's actually call image to term i think it's a pretty"
7681520,7691280," good name uh image to term uh all right so thank you for all your suggestions they were rather inspiring"
7692160,7695280," so we also need uh so we also need uh some dependencies right so we need to"
7695280,7706560," have a cb image and we also need as to be a resize uh right image to term that go so let's build sh"
7707280,7712640," bin bin sh uh so if we do compilation"
7712640,7715520," so we don't need that"
7715520,7724400," image to term okay cool so and now if i do something like that"
7724400,7735120," um cool um so we need some something to test this stuff with so uh let's actually go to assets and i'm"
7735120,7746400," i'm gonna just use the sodium pog right now let's do image to term um sodium pog well i mean yeah this"
7746400,7756080," thing does not support that but if i go to image to term and just do image to term sodium pog png it seems"
7756080,7762720," to be working so maybe it would make sense to change the default value to something a bit bigger let's actually"
7762720,7767760," say it's going to be 72 or maybe 64. uh let's run that um"
7767760,7771440," so let's do build"
7771440,7776480," it's too much uh let's go with 32"
7776480,7781280," uh also i'm gonna trace"
7781280,7787280," everything because i like to see what commands uh shell executes usually"
7787280,7795120," right right so this is reasonable one yeah i think this is reasonable um so another important thing"
7795120,7799760," by the way we need to assert i'm not really assert but to put it to do"
7799760,7814800," check if the terminal supports uh 256 colors and stuff right and if it doesn't uh and throw an error if it"
7814800,7827280," doesn't right something like that um also also maybe similar uh 16 colors support question mark uh right"
7827280,7829280," so that'll be kind of cool"
7829280,7840720," so uh in terms of license right so in terms of license it's under mit you can do whatever you want with it"
7840720,7856480," and in terms of reading uh image to term right convert image to um okay let's put it this way print an image"
7856480,7870400," in the terminal using uh the terminal 256 colors right so and uh we're also going to do quick start"
7870720,7873360," quick start in the quick start in the quick start we just do"
7873360,7884000," console build sh and then image to turn uh sodium poll png"
7884000,7894640," and furthermore i think it would make sense to maybe provide some sort of um some sort of a"
7895680,7901200," uh how to say that screenshot right some sort of a screenshot let's actually put 16 in here"
7901200,7910400," um so i think we need to i'm going to make it more readable right i want it to be visible"
7910400,7920560," i want it to be big but also readable right so the bigger we make it the less readable it is right because"
7920560,7927280," there's it's it's pixelated so let's do the following thing i'm going to copy paste uh the kappa because"
7927280,7935840," kappa the cool thing about kappa is that it looks good even pixelated uh right so image to term uh kappa png"
7935840,7941040," and i'm going to just make it like 16 by 16 right something like that or maybe even eight"
7941040,7949520," uh something like this so and this is a huge prompt so let me quickly make it a little bit smaller so i"
7949520,7962000," think prompt is ps1 if yeah there we go so and this boys and girls could be a pretty good uh screenshot"
7962000,7966240," right we can try to turn this into a screenshot uh-huh"
7969440,7977200," okay so now i can actually uh copy paste that stuff into into the project"
7977200,7989520," okay this is not the right thing uh here is the screenshot okay let's copy paste it so uh thumbnail"
7991760,7996320," yeah there we go yeah there we go so we don't really need the kappa right we don't really need the kappa"
7996320,8005200," uh and i'm gonna put this stuff in here um maybe after that thumbnail thumbnail"
8014880,8023360," oh boy all right so uh also git ignore image to term uh-huh git init"
8023360,8031360," so let's take a look so this is neat this is needed all of this stuff is needed"
8032800,8040400," ready ready set a go okay and uh let's create a let's create a thingy thingy-majingy"
8045920,8051360," okay um mg to term"
8051360,8060800," print print an image to terminal using 256 blah blah blah"
8063760,8074240," okay okay go okay good uh origin boom boom"
8074240,8080000," and let's push that right into the ring"
8088320,8094960," yo look at that give it a star give it a like and subscribe so you can now try to test it on your"
8094960,8101680," own machine and see if it works for you or not yo isn't that cool i think it's pretty cool"
8101680,8110960," uh useful useful useful useful okay very pogue uh i'm going to actually put that in the description as"
8110960,8116480," well for anyone who's watching live uh all right so here we go"
8116480,8126320," cue cue cue cue cue cue cue cue so now we just need to use that in the actual demo renderer that's"
8126320,8136960," what we need to do right so let's go ahead and do that um so initially we had uh this thing in olivec"
8138000,8143680," all right so it's going to build uh demo uh and let's take a look so i think it's going to be"
8143680,8153280," cup 3d terminal right so this is how our shade renderer looks like right which doesn't really find"
8153280,8161280," uh the colors properly we need to port the shade renderer to uh hsl one so nhsl is like does a lot of"
8161280,8165360," like float stuff conversion so it could become slower but i'm going to try to make it a little bit"
8165360,8171200," faster off screen already right so i'll see how i can just like you know get rid of the float stuff and"
8171200,8181120," yeah anyway so olivec and i need to find the demo vc right so rgb 250 um yeah"
8183600,8195440," okay okay so this is what we have in here uh let's go uh i want to have this thing"
8195440,8210080," uh hsl i'm gonna copy paste it in here so this is hsl uh find ansi by rgb we don't need that we need to"
8210080,8218640," find ansi by hsl there we go and this thing also needs the distance right so that's quite important"
8218640,8229520," okay let's try to compile uh some of the some of the things um so let's see i want to specifically"
8229520,8236080," compile let's actually start with the triangle example right so i'm gonna remove these things um"
8237120,8243840," okay where is that so this is gonna be only the triangle and within the demo we're gonna be only"
8243840,8251840," building the term right so only building the term so yeah i'm building my project with c i'm using c as"
8251840,8259520," a shell script uh all right so let's see so what do we have in here uh for the semicolon anything else"
8260400,8267040," uh okay so this is basically where we do all of that uh we need to do by hsl but then we need to"
8267040,8280240," convert all of these things to hsl right hsl uh we need to do rgb to hsl like so h s and l and i suppose"
8280240,8288160," we need to also copy paste the rgb to hsl let's just put it somewhere here uh let's put it here"
8288160,8301200," it's white mode uh and then in here just do h s and l boom what else do we have uh f mode"
8302960,8311200," damn so that means the terminal needs the math library uh which it didn't need before but we're"
8311200,8316720," linking with math anyway so maybe that's gonna be fine uh what else do we want uh this one has to be"
8316720,8323680," a pointer anything else um so it's a non-standard thingy which is understandable okay that's very cool"
8324160,8331680," okay so let's take a look at the triangle example and admire its beauty well it didn't really work"
8331680,8333760," at all did it"
8333760,8342560," hmm though it kind of worked if you take a look at this stuff so there's also"
8342560,8349840," bluish thingy that i'm really confused what the hell is going on didn't recompile you think i didn't"
8349840,8357520," recompile it did recompile but i recompiled well i mean i recompiled the term example right so that's"
8357520,8366880," fine uh all right so let's actually remove the build folder in fact let's rebuild everything let's just"
8366880,8373760," rebuild everything so no build uh what do we have in here let's just remove that and let's just run"
8373760,8379520," everything so that will rebuild everything"
8379520,8395600," rebuilding everything everything that's well i mean i'm kind of concerned"
8400720,8414720," hmm that's a bit sus it's a bit sus that it didn't change uh okay okay so yeah all right so but what"
8414720,8427600," about squish term nothing changed damn how did that happen oh boy uh there we go"
8429680,8433920," distance to hsl find and see index"
8433920,8438480," index by hsl"
8438480,8451840," uh okay it's taking this long to recompile such a simple program we're recompiling 24 programs"
8451840,8454480," okay whatever"
8457280,8463520," mm-hmm compress pixels i'm surprised why"
8463520,8468560," this does not work"
8468560,8482640," like it literally didn't change it literally didn't change it's just so weird capture me and"
8484240,8489120," yeah and what about the uh teapot 3d terminal"
8489120,8498240," yeah well i mean it's different actually i remember it being like completely completely different"
8498240,8508240," huh and the most strange thing here is that it's also green background it's not supposed to have a green"
8508240,8515600," green background you know what i mean it's just not supposed to maybe there's also something with the alpha in"
8515600,8521680," here uh so yeah we also don't take into account alpha properly so hsl"
8523040,8529760," rgb to hsl uh let's actually do r um that's"
8531920,8543200," red red g b a green green uh blue"
8551920,8556560," so and uh so and uh let me go to image to here this thing"
8556560,8562080," so i'm gonna put it in here"
8562080,8569920," r g b"
8572160,8578960," okay i don't want to recompile everything so let's actually recompile only that thing one more time"
8578960,8587680," so assets yeah i suppose i'm gonna be i don't need to rebuild tests that for sure all right so let's only"
8589040,8600880," rebuild this stuff"
8600880,8614560," well i mean it looks reasonable that's the thing right so you have a red corner you have a green corner and"
8614560,8621280," you have a blue corner um the only thing that i don't particularly understand is the background"
8621280,8631200," background is supposed to be uh grayish but it's not gray so that's what's weird that's what's weird"
8631200,8639360," about this in test of like why is it so um right and also okay let's what about squish"
8641520,8648240," man i'm i'm almost done it's so frustrating i'm almost done and there's something stupid there's"
8648240,8657520," always like one stupid bug and i just like don't know man god damn it i just want to wrap it up and"
8657520,8660160," yeah so we know for a fact"
8660160,8668560," uh we know for a fact that this should have a reasonable color"
8671520,8676560," i know that it has to have a reasonable color but there's something"
8676560,8685600," there's something and i don't know what and it's just like it's probably i'm gonna go on a break and"
8685600,8690240," it's just gonna occur to me but the stream is already over right so it's it's always like that i hate"
8690240,8697760," it uh okay it's something stupid it's something very very stupid and it's just like i don't know what i"
8697760,8706080," probably missed something but what did i miss what did i miss so here's the hsl hsl is initialized"
8706080,8714640," properly more or less right so we copy pasted it from there um rgb to hsl so we get the rgb"
8716960,8727440," man okay so and then squish sdl so yeah everything seems to be all right and the image"
8727440,8731920," uh right if we do color assets"
8731920,8741600," everything's fine right so it knows how to properly put these colors right so the the technique itself"
8742560,8747600," the technique itself knows how to properly do that it's just something"
8747600,8753280," okay so this is the compressed pixels"
8753280,8759280," so we see term char canvas"
8759280,8763920," are we using the right thing"
8767760,8771840," 485 yeah that's that's what we use in the end"
8771840,8782000," and we just store the index in there"
8782000,8789200," all right so that's the index and we just store the index in there so that should be fine"
8793760,8805520," mm-hmm"
8805520,8821040," probably need to make a small break uh so yeah let's make a small break all right so um what's interesting"
8821040,8829200," is that here what we do we compress a chunk of pixels right and the way we compress the chunk of pixels"
8829200,8836720," is actually rather interesting um i've never even tested if it preserves the colors correctly"
8836720,8842000," that's what's interesting right i don't even know if it preserves the course maybe it actually"
8842000,8848320," like screws them up uh really really badly um so and the reason why i never actually seen the colors is"
8848320,8854480," because we were rendering the all of that without any colors all right so what's interesting is that"
8854480,8860720," maybe we could employ the uh the resizing library stb resizing library but we have a custom way of"
8860720,8867280," uh resizing the image in here uh so and this is because we are essentially"
8867280,8874640," uh how to say that we we are always like making the image smaller so i thought that maybe i can"
8874640,8882240," like specifically for that just like make it um just make a custom compression thing so to test"
8882240,8888880," if we if we even compress everything correctly i think it would make sense to maybe save the compressed"
8888880,8895120," image right just save the compressed image and see if it like produces the like actually correct image"
8895120,8904480," that will be interesting i think so uh let me try to do stbi uh write image let's actually try to save that"
8904480,8912880," entire thing somewhere uh right and stb image right stb image right"
8914960,8925440," uh okay so write png okay so let's just write png so the file is going to be something like uh debug png"
8925440,8935760," uh right so the width is going to be um let me see term scaled down width right so this is scaled down"
8935760,8943840," height the amount of components is four and we should have the scaled down canvas and suppose the scaled down"
8943840,8956240," canvas is a is a character okay so we are compressing the chunk all right so we are compressing the chunk"
8956240,8967440," okay this one is a little bit we don't have um we don't have a canvas for actually actual pixels because"
8967440,8974000," we're storing the indexes that's really bad so that means i'll need to go ahead and allocate"
8974000,8982240," that thing as well oh that makes it complicated i don't like that okay so we have to do this like that"
8982240,8991600," right so this is the debug canvas right and we are allocating this thing somewhere here right so this is the"
8992560,9001440," debug of the debug canvas right and we need to multiply that by the bug here as well i suppose that probably"
9001440,9002720," would make sense okay"
9002720,9005680," just buy more"
9005680,9012000," i remember this one yeah yeah so essentially if you couldn't allocate just just buy more"
9013760,9025040," yeah okay so uh yep yep yep and essentially i can do a similar thing here right so in the debug uh i'm"
9025040,9032560," just saving the the pixel right so here is the pixel so that means here when i'm saving the pixels i can"
9032560,9047280," just like use the debug there we go okay and the stride is the size of u in 32t and this is the width"
9047280,9054320," right multiplied by width uh okay okay and after that i'm gonna just exit with with one so we're just taking"
9054320,9061360," the first uh the first frame and we're dumping it as a png image and just trying to see uh if it is like"
9061360,9069600," reasonable or not uh assuming okay so it doesn't really really work because we don't have stb image"
9069600,9077040," right so it's undefined reference we probably need to include this entire thing uh okay so let's just"
9077040,9091280," include stb image right h uh implementation right right h implementation uh okay so is it gonna work"
9091280,9098560," work so it seems to be compiling to some extent okay so we're modifying the squish okay so let's try to"
9098560,9105200," run the squish uh actually the terminal version okay so it's uh finished and we have the debug png"
9105200,9108320," let's take a look at the debug png uh and it's fine"
9108320,9119760," the compressed colors are fine so everything is totally fine believe it or not so that's that's really weird"
9119760,9132560," uh okay so huh so in a sign charge so that's a good point alexor thank you thank you so much yeah"
9132560,9138480," it's storing the indices and a science chart so high in i mean this has become negative thank you so much"
9138480,9145280," damn it there is a reason why you're vip there is a reason why you vip thank you so much yes yes yes"
9145840,9162960," okay so let's actually turn it into integers maybe um okay okay all right so uh we probably need to go back"
9163760,9169680," so exit one i'm gonna disable this thing and we need to recompile"
9169680,9181920," all right there we go thank you thank you so much that's beautiful"
9185840,9195840," that is actually that looks so satisfying look at that that's so cool uh all right so let's rebuild"
9195840,9198240," everything literally uh no built"
9198240,9209440," no build dot c so and also go through all of the examples and see how they how they work"
9210560,9211920," it's pretty cool yeah"
9211920,9221600," it is in fact pretty pogue to be fair implementing all of that took way longer than i expected"
9221600,9225760," uh but i think it's worth it right i think it's worth it it's actually pretty cool"
9228560,9232080," so i think it took like three hours of pure time"
9232080,9238720," and also thinking outside of the stream right so"
9238720,9249360," no no so we started the whole idea actually in the previous stream so you add one hour to that so it's"
9249360,9256160," like three and ten so yeah"
9256160,9268000," okay um all right let's actually start with the um with the triangle uh with the classical triangle"
9269120,9272080," uh look look at that beautiful triangle wow"
9272080,9281120," you can even see a little bit of like anti-aliasing and the edges of the circle"
9281120,9287680," it's so cool all right so what's next uh dots dots 3d dots 3d so"
9287680,9294880," this example so since the resolution of this is kind of small i'm not sure if it's gonna look good or"
9294880,9301200," not so it's actually see and looks pretty shitty but i mean it's just like a low resolution but you can"
9301200,9309760," see rgb uh and a boba there at the bottom so this is supposed to be a boba uh but yeah"
9309760,9320240," okay so squish we already uh so squish right so this is that uh triangle 3d right triangle 3d the 3d"
9320240,9325920," triangle okay so this is like a rainbow triangle the original thing looks like this right so this"
9325920,9331520," is the original thing in the terminal it looks like this which is also reasonably reasonably good"
9331520,9341040," okay so also the texture triangles right so this is basically like a two triangles rotated so this is"
9341040,9347600," like a texture but it's actually two triangles and this demonstrates the ability to rotate the texture"
9347600,9357920," like however you want right so that's what you can do okay so and now 3d texture right so can you even"
9357920,9362720," you can't really see but the second triangle is actually textured with studying pole"
9362720,9368880," it's kind of difficult if you squint a little bit from the far away you can see that but in the original"
9368880,9377840," sdl uh it's actually more more visible yeah so maybe you should make like a cube out of that we'll see"
9377840,9384720," okay cup 3d so we're getting into the territory of these kind of things right so this is a cup 3d"
9384720,9392400," what about the terminal version that looks good that looks exactly how i want it to look"
9397200,9405920," mm-hmm and the final boss the final boss of all the demos is of course teapot 3d which in original"
9405920,9411440," looks like this so this is original demo right there's like several thousand of triangles in here"
9411440,9416720," right so what about the terminal version well we have to zoom out a little bit so that that looks"
9416720,9421600," reasonably well in fact that doesn't even look like it's in terminal"
9424880,9434240," man that looks good yo what the you can even see like a well i mean it slows down a little"
9434240,9437680," bit from time to time but you can even see a little bit of like shading and stuff"
9437680,9443520," uh the colors look kind of brighter well i mean we're kind of interpolating with"
9443520,9445600," whatever colors we have in the terminal yeah"
9448400,9450320," that's so freaking cool mate"
9450320,9458800," that's so freaking cool so i also like the only thing i need right now is just to clean it up a"
9458800,9460000," little bit and then publish it"
9460000,9467280," um extern haven't worked so hard since the unix was born yeah"
9469280,9480000," uh yes yes yes yes isn't that cool isn't that cool i think it's pretty freaking cool"
9480000,9488960," and that's all in terminal yes it is all in terminal so we are in terminal right now as you can see i'm"
9488960,9495760," i'm trying to type but i mean it gets refreshed oh yeah so this is the terminal um and then you can"
9495760,9501360," run this thing one more time just zoom out a little bit decrease the size"
9501360,9505760," so it's twitching a little bit but yeah it's pretty cool"
9505760,9514000," and this is sort of like ported from the this sdl example right so it's literally it's pretty much the"
9514000,9518400," same code right so whatever is running in terminal and whatever is running here is pretty much the"
9518400,9524400," same code it's just like it's outputted to different like platforms right so we just like"
9524400,9530720," compile it differently so but the the logic behind this demos is the same right the logic behind this"
9530720,9533040," thing is the same that's why it looks similar"
9533040,9540080," so it's a little bit slower but i mean it's it's in the terminal"
9542000,9548000," all right so i'm gonna clean it up uh off screen and then commit it to to the repo for everyone to"
9548000,9553840," check out a little bit later so the the main i think outcome of today's stream is image to term"
9553840,9560080," uh which is kind of a cool tool which allows you to take like image like whatever image you have"
9560080,9567440," uh assets uh so in pole right for instance like imagine that you have this image and you can actually"
9567440,9576480," print it in the terminal uh image to term image to term uh assets uh so in pole png there we go so yeah"
9576480,9582880," and if you want to use uh this tool you know on your machine you can find it in here right"
9582880,9589520," uh all right i guess that's it for today thanks everyone who's watching right now i really appreciate"
9589520,9607920," that have a good one and i see you and next time i see you next time so yeah love you"
9607920,9609680," you"

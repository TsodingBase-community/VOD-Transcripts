start,end,text
0,13500," All right, all right, all right, all right, all right, hello everyone and welcome to yet another"
13500,23740," offline stream while I'm on vacation, vacation, I don't speak English, I'm sorry, I'm trying to,"
23740,31900," all right, so today is Saturday, the day of the Saturn, right, that means today according to the"
31900,39980," schedule we're doing a game development in OpenGL and C++ as usual, so we continue to develop our"
39980,47940," game, so this is how the game looks like so far, so it's using OpenGL, it doesn't use any engines or"
47940,51760," anything like that, well, you may say that I'm using a custom engine, it just depends on the"
51760,57320," perspective, right, so from one perspective I'm not using any engine, from another perspective I'm using"
57320,62700," a custom engine, it just depends on how you look at it, you know what I'm talking about, yeah, so and"
62700,72140," this custom engine is actually pretty cool, so it's a rewrite from PureSDL2 and in PureSDL2 we were not"
72140,78640," able to actually do this kind of effects where you can make an object shatter into like pieces and also"
78640,84200," pieces maintain the textures and stuff like that and they also disappear because it's not really easy to"
84200,92240," do in PureSDL2 because PureSDL2 doesn't really provide you that much power, so we have to we had to go a"
92240,99360," little bit lower in the abstraction layer because SDL is built on top of OpenGL, DirectX and Metal, so we just"
99360,108760," went layer down, OpenGL and we unlocked a lot of computation power that we can finally use in our game and I'm super happy actually, I'm super super happy."
108760,121320," Alright, before I start, I would like to actually shout out people who were donating while I was still on vacation, so first of all,"
121320,138320," Jaime Covey, thank you so much for $5 donation, Shredding gives up, he donated it like while while I was offline when I was not even recording or anything like that, thank you, thank you so much. And also, I got a new Patron,"
138320,144880," on the Patron, on the Patron, thank you so much Susan Sun for a generous 20 euros"
144880,159760," Patronage? I don't even know how to call that, I quite rarely use a Patron, so I do have a Patron and I had it for quite some time, I sort of reserved it for my main YouTube videos and my main YouTube channel."
159760,170320," So, in any case, thank you. So, if you still want to support me, I'll leave all of the links, all the support links in the description."
170320,199880," So, let's start our development. You can find the source code of the game that we'll be developing on the GitHub, so the game doesn't really have any particular name. So, that's why the repo is called like that. So, but game source code."
199880,216440," You can find the source code in here. If, of course, you are interested. If you're not, you can just watch me making pretty pictures. Well, it doesn't really look that pretty. I don't know what I mean. Maybe at some point it's going to look interesting, but right now it is not. It is not."
216440,228680," But, okay. So, let's go to the source code and see what we can do. I think I had a couple of issues. I think I had a couple of issues that I wanted to resolve."
228680,248400," Yeah. Recently, we actually refactored our renderer, right? Our renderer is capable of rendering different things, specifically triangles. You can provide the geometry of a triangle, the color of a triangle that will be mixed in into the texture and UV coordinate of the texture."
248400,258400," And then, you can also provide a program with which you want to render that triangle, right? You can switch between different programs and stuff like that."
258400,276400," So, and by the way, the texture coordinate is taken from our texture atlas. So, all of the textures are consolidated into a single texture atlas. And also, calculated their UVs. So, you have to provide the UV coordinate inside of the texture atlas. So, essentially, that's what you have to do."
276400,304600," So, we can also render a AABB, access align boundary box, but it's essentially implemented in terms of field triangles because it just takes AABB and splits it into triangles. And we also had a circle. We also had a way to render a circle. And I'm not even sure. Well, so essentially, the way we rendered circles, right, the way we render circles, we used to render circles, actually."
306400,325220," So, it's the following. I just opened my paint and accidentally closed it. It's a shame that my paint closes faster than it opens up. Anyway, so, we usually just render a quad, right? We usually just render a quad."
326340,342880," So, inside of a shader, right, we also sort of set up its UV coordinates, right? UV coordinates from 0 to 1, 0 to 1. And then we pass all that information to the fragment shader. And in the fragment shader, we already calculate the distance from the center of the squad."
343120,351380," And we simply draw the circle, right? Usually, I mean, it's filled in, right? So, this is how we usually do that."
351380,361760," But then, like, we refactored everything and making, like, allowing the user to actually just render AABB in triangle and just specify the program that you want to use."
361760,373720," So, I feel like this particular function is sort of obsolete because now you can essentially just draw AABB with a special circle program, right?"
373720,377720," You just need to write a special circle program and just draw the regular AABB."
377720,381540," But the cool thing about this function is that it doesn't accept AABB."
381900,385460," What it does, it accepts the center and the radius."
385460,393480," So, what I'm thinking is that maybe we're going to retain the signature of this function, but we're going to rename it a little bit."
393480,399000," And the thing that this function is going to do, it's going to simply take a point, the center, right?"
399000,403240," Then, take the radius. Let me actually switch the brush."
403240,408320," Take the radius, go up, and then go another radius in here."
408320,411280," And this is going to be the position of the AABB."
411560,413640," Then, go here and here by one radius."
413640,415700," And this is the size of AABB."
415700,424360," So, basically, it will just render the AABB with the center that you provided, and radius is going to be the size."
424360,431280," So, on top of that, since it's going to be, like, pretty much the same thing, you also should provide not only color, but the UV coordinates."
431280,435320," The UV coordinates that you may want to have."
435320,439560," But the question is, what's going to be the UV coordinates in that particular case?"
439560,441220," What's going to be the UV coordinates?"
441220,444540," It's a good question, actually."
444540,446140," It's a good question."
446140,450740," Maybe we won't provide any UV coordinates."
450740,455660," Maybe it's always going to be automatically, like, 0, 0, 1, 0, 1."
462660,480260," Okay, I'm going to actually postpone that idea for a while, because I'm not pretty sure what's going to be UV coordinates in Atlas."
480380,492340," So, I suppose UV coordinates in the Atlas also should be, like, center and the radius, but in the coordinates of the Atlas."
492700,507620," So, that means I'll have to have something like V2 GLFloat UV center and then GLFloat UV radius."
508080,515380," But there's just too many things to actually provide, so I'm going to just actually postpone that, because I just want to fix the issue of implementing this fill circle."
515380,522380," And the question is, how I'm going to call this entire function if it's not going to be about the circles anymore?"
522460,536380," Let's actually keep calling it fill circle for now, at least, and then maybe I'm going to rename it to something else."
536920,545780," Yeah, since I don't know how to call this function, since I don't know how to call this function, maybe I just don't have enough information about that function, about what that function is."
545780,551620," So, I'm going to leave it as this right now, maybe later it's going to be a little bit more clearer."
551620,562720," So, but we still use this function, by the way, we still use this function for particles, right, for particles, because the particles are usually rendered at a particular position with the center of particular position,"
562720,568520," And they're usually just quads, but with the texture generated procedurally, right, so that's basically what it is."
568520,579360," Okay, so, and as I already said, we probably have to accept the program, right, we probably have to accept the program with which all of that is going to be rendered."
579360,583800," All right, so let me, let me see."
583800,590820," So, maybe we need to create a separate branch for this entire thing, the branch is actually 79, right, it's going to be 79."
591620,596360," And, let's get started, let's get started."
596360,599040," So, I'm going to remove that."
599040,611420," So, this is the center, this is the radius, this is the color, and we're going to accept program asset, right, program asset."
611420,618320," And program asset is the, essentially, the shader program, right, program asset."
619320,633940," All right, and I think implementation of the center, I think, is relatively simple, right, because, basically, you need to take the center and the radius, and construct AABB out of that, and then just pass, fill AABB, so that's going to be it."
636940,640700," That's essentially going to be it, I think."
648700,649140," Okay."
649140,654580," So, let's do that."
654580,664660," I'm going to take the center, and I'm going to subtract the half of the radius, no, it's not the half of the radius, but the whole radius."
664660,667200," I think I should be able to do it like that."
669720,689960," So, if I take a look at the GEOHPP in here, oh, and by the way, on the previous stream, I came up with a good name for this kind of library, so, this kind of library is, should be probably called something like LA for linear algebra, but, again, here we not only have linear algebra."
691960,695080," So, I don't know how to call it."
695080,700580," It's just like math libraries, because, what could be not a linear algebra?"
700580,705840," I don't know, triangles are not particularly linear algebra, but maybe, maybe they are."
706920,709480," It's more like a geometry or something like that."
709480,712000," It would be better to just call it math."
712000,731280," And I think I could probably call it math, because I usually put, like, some sort of a prefix for my modules in here, so, yeah, and it's not going to collide with, like, math.h or anything like that, so it's going to be clear that this is the math module of my specific game."
731460,737320," So, yeah, I just don't like the name GEOHPP, it's just, like, yeah, I just don't like it."
737320,746920," It's, like, it makes it sound like it's something about the, you know, geography or something, but, yeah, it's better, let's just call it math."
746920,751680," It's a pretty abstract, pretty abstract module, but, yeah, it is what it is."
752420,759280," All right, so, let me go through the compilation errors and just fix all of them, and this is not how we build this game."
759280,761060," Apparently, we build it with builded SH."
761060,765880," I need more tea, I'm actually falling asleep a little bit, I'm very sorry, just a second."
765880,774800," So, I just need to go through all these places where it complains about that stuff and just replace everything."
777420,801720," No biggie, no biggie, no biggie, okay, so, so, this is going to be a math, there's another one, maybe I could just find a lot of places where we use this entire thing by doing GREP, something GEO, right, and there's at least, like, four of them, and this is one of them, this is another."
802420,806840," You see, GREP is better than the compilation, but refactoring things."
806840,814360," All right, so, and then, let me rebuild this entire thing, and I think it's going to work quite well."
814360,822760," Everything is working, hopefully, okay, if it compiles, it works, you know, you know the saying, you know the saying, if it compiles, it works."
824260,831260," I want to run the game, excuse me, and I think it is working, I think it is twerking."
831860,836420," So, let's do a committee, committee, and then maybe even a pushy-pushy."
836420,840700," All right, all right, all right, all right, so, it's going to be 79."
840700,846860," Rename something, something GEO to something math."
846860,847540," There we go."
847540,849400," Did I, did I do it correctly?"
849400,853240," Did I not make any stupid fucking mistakes, man?"
853340,857040," I think everything's okay, and let's push that right into the repo."
857040,867100," All right, so, let me unstash my changes, and let's continue doing this kind of stuff."
867100,870780," So, that was a weird tangent, but, yeah."
870780,876080," So, yeah, yesterday, by the way, I was working on the particle simulation thingy."
876080,883660," I was working on the particle simulation thingy, and I'm going to actually give you the link to the previous board or something,"
883660,886220," so you know the context of what I'm talking about."
886220,892220," Particle simulation stream."
892220,901360," And I had to implement, I had to implement my own linear algebra library, like a very small one."
904160,906580," Nice video, Susan, yes, I do remember that one."
906580,913680," Yeah, I had to implement my own particle system."
913680,919260," Not particle system, my own vector library to work with vectors."
919260,926720," And this is because I was translating the code from Unity to C, right?"
926720,928880," So, from C-sharp Unity to C."
929340,935160," And what I noticed in Unity is actually, they made a very convenient overloading."
935160,939180," So, basically, you can have a vector, which is a center, right?"
939180,945680," And you can always subtract or add to the vector like a scalar, right?"
945680,952760," So, usually in my libraries, I give an ability to multiply by a scalar,"
952760,957120," because it's kind of like the usual thing that you do in math, right?"
957120,962540," In actual math, you have a vector, you multiply it by a scalar, and you scale that vector."
962540,968500," But quite rarely, in math, you just add a scalar to a vector or subtract a scalar to a vector."
968500,970740," So, mathematicians usually don't do this kind of thing."
970740,972260," But in Unity, you can do that."
972560,976620," And in Unity, it basically means, I think, this stuff."
976620,978340," And it's actually quite convenient."
978340,980240," It is actually quite convenient."
980240,983140," So, in C, it's kind of difficult to overload operators."
983140,985480," But we can do that in C++."
985480,990800," In C, what I had to do, I had to create an alternative constructor or a vector from the radius."
992140,993720," And it worked quite well."
993720,1000260," So, I find this idea of, like, allowing the user to combine vectors with scalars."
1000260,1003360," And if it's a scalar, just extend it to the vector."
1003360,1004920," Very, very powerful."
1004920,1006880," It's a very powerful idea."
1006880,1008500," It's actually quite interesting."
1008500,1010840," So, I never realized how powerful it is."
1010840,1015880," And it just makes the code, like, more readable and more, like, concise and stuff like that."
1015880,1017900," So, like, I learned a thing or two from Unity."
1017900,1021920," So, specifically, I'm talking about, specifically, Unity mathematics module."
1022140,1027780," Unity mathematics, this one."
1027780,1030980," That's a pretty cool module."
1030980,1035660," Even though I never programmed in Unity ever in my entire life."
1035660,1042920," But from what I saw while sitting on Linux, it's actually quite cool."
1042920,1044980," It's actually quite cool."
1044980,1048180," Maybe at some point I'm going to actually do, like, a Unity stream or something."
1048180,1052020," But I would like to have a more powerful PC."
1052140,1053940," And preferably Windows."
1053940,1056580," Because, I don't know, does Unity even work on Linux?"
1056580,1060880," Or, because everyone I saw who develops on Unity, they're usually using Windows."
1060880,1063140," Unity Linux."
1063140,1065140," Like, how do you set up Unity on Linux?"
1067320,1068420," So, let me see."
1068420,1069080," Let me see."
1069080,1073800," Choose your Unity plus download."
1073800,1074540," Okay."
1074540,1078260," Oh, shit."
1078260,1079120," That's expensive."
1079120,1082320," But I suppose it's, like, you don't have to pay it."
1082320,1084380," Like, okay, I'm individual and I'm doing..."
1084380,1085340," Okay, so I can do that."
1085340,1087620," Personal, get started."
1088300,1090980," So, we have to sign up for something, right?"
1090980,1093200," Do I have to sign up?"
1093200,1094120," Can I just download?"
1094120,1096020," Can I just download?"
1096020,1105240," The more clicks I make, the more I lose interest in this thing."
1105320,1105680," I'm sorry."
1105680,1107220," And I lost it."
1107220,1108520," All right."
1108520,1111720," Anyways, maybe at some point we're going to do a Unity stream."
1111720,1112080," I don't know."
1112080,1113080," I don't promise anything."
1113080,1113960," But we'll see."
1113960,1114260," We'll see."
1114260,1117220," All right."
1117220,1119980," So, and I was thinking, maybe I can overload this kind of thing."
1119980,1121740," Maybe I can overload."
1122260,1124280," So, you can do it like that."
1124280,1131160," But it feels like if you try to overload, you will have to overload a lot of things."
1131160,1137640," So, you have to overload something like Vector2 and then the scalar, right?"
1137640,1143300," And then you have to overload the version where the scalar comes first, right?"
1143300,1145040," And so on and so forth."
1145040,1147220," Basically, like, you have a lot of combinatorial complexity."
1148900,1154300," But on the other hand, if you just allow to construct a vector from a single scalar,"
1154300,1161480," you only need to implement a single operator which works only on the vectors, right?"
1161480,1166840," And then if you want to make it work on a scalar, you just call, like, this simple constructor"
1166840,1172560," that turns a scalar to a vector and you automatically have a version where you have a different order"
1172560,1173220," of the arguments."
1173220,1174060," You know what I'm talking about?"
1174260,1181420," So, it's kind of like the binary operations that work only on vectors plus constructors"
1181420,1187040," that turn scalars to vectors is more powerful idea than, you know, overloading with different"
1187040,1191220," combinations because this kind of idea compresses all that combinatorial complexity into, like,"
1191220,1195360," a couple of functions, like binary operation plus conversion from one thing to another."
1196120,1197900," So, yeah."
1197900,1204560," And to be fair, in Unity mathematics, there is a lot of combinatorial complexity, right?"
1204560,1210560," If you take a look at how many overloaded operations and types and stuff like that there is, it's"
1210560,1211280," just, like, insane."
1211280,1212280," It's a huge page."
1212280,1218900," If you look at my previous stream, that page, I went on that page and it was loading, like,"
1218900,1225560," for ages, I think, I think I just, I was, I was searching for that page, for the thing"
1225560,1226740," that I wanted on that page."
1226740,1232300," I found it, I read everything I wanted and I closed it and it yet didn't finish loading."
1232300,1234100," It was, it was kept loading."
1234100,1236100," That's how huge it was."
1237180,1241400," So, yeah, anyway, so there's a lot of combinatorial complexity."
1241400,1243280," Maybe I'm going to just keep things like this."
1243280,1244920," I think it's pretty, it's pretty convenient."
1244920,1250240," And do I even have an operator that constructs a vector out of a single thing?"
1250240,1251280," I think I do."
1251280,1253160," Yeah, yeah, yeah, I do."
1253160,1254100," Here's the constructor."
1254100,1259540," So, you can just provide a single scalar and it basically constructs you a vector with,"
1259540,1261600," with these values."
1261900,1270280," Okay, so in that case, what I can do, right, I can take center, subtract a radius and this"
1270280,1276100," is the position of AABB, right, this is the position of AABB and the size of AABB is basically"
1276100,1285100," a radius but multiplied by two, right, so multiplied by two because the size of this AABB is essentially"
1285100,1289640," two radii, first radii, so here is the first radii, here is the second radii."
1291900,1303520," So, radius, plurals for nouns in English that end with S are really, really complicated."
1303520,1305120," I don't understand them, I'm sorry."
1305120,1308480," I'm a very stupid person, I'm just a stupid Russian, what do you want from me?"
1308480,1314400," All right, so here is the AABB that we want you to render, I suppose, and what I want to call in here,"
1314500,1322240," I want to call fill AABB, so this, this is the AABB I'm filling and we're going to use the color for the shade"
1322240,1327420," and what we're going to use for the UV coordinates, I suppose for the UV coordinates, we're going to just use"
1327420,1336500," AABB with a center at zero, right, and the size is going to be just one, one, right, so this is going to be"
1336500,1344140," simply one, one, because that's precisely the things that we'll need to render a circle at the end of the day"
1344140,1349520," and then we need to pass the program that we're going to be using to render all this stuff, okay"
1349520,1352940," I suppose that's, that is it, I suppose that is it."
1352940,1361860," What's interesting is that we already have, okay, we already have things that use fill circle,"
1361860,1370140," I think we have particles, right, I think we have particles, and let me see if they use them,"
1370140,1377880," particles.cpp, fill circle, yeah, yeah, we do, we do use this thing, here is a fill circle, and"
1377880,1389460," since we're using fill AABB and the default program, the default program uses the UV coordinates in the"
1389460,1397500," atlas, this particle will appear with the chunks of the, oh my, they will actually contain the"
1397500,1401800," whole atlas, they will look like a little bit weird, so we're going to have particles with the"
1401800,1408200," texture of the whole atlas, like compressed and squished and stuff, like, it's going to be funny,"
1408200,1412600," okay, so let's, let's see if it's going to work, first we need to make it compile, because we changed"
1412600,1418200," the signatures of some things, and then we'll see, we'll see, okay, so here I have to use one of the"
1418200,1424340," program assets, let me see, so it's going to be a renderer, right, and what kind of program do I have"
1424340,1428500," to use, I have to use a regular program, I could have used particle program, but the particle program"
1428500,1435800," don't know how to work with our specific vertex attributes, so we'll have to change the particle"
1435800,1443640," program to actually be able to work with our vertex attributes, okay, so let's try to recompile that,"
1443640,1449140," so is it going to compile now, it still doesn't compile, let's take a look, this has to be f,"
1449140,1455960," because if you have a floating point literally without f, it's actually double, not a float,"
1455960,1462400," for float you have to use something like this, and are we good, are we gucci, tamaguchi,"
1462780,1469080," forcing e, okay, so let's try to run this thing now, uh, what do we get, what do we get,"
1470920,1478900," I don't know why I rebuild it a second time, but yeah, uh, yeah, what the fuck is this shit,"
1478900,1483860," it's so funny actually, yeah, this is precisely what I was talking about, these are particles,"
1483860,1489100," and yeah, so they're supposed to be red by the way, so that's why they're, it looks so cursed,"
1489100,1496300," it looks corrupted or something, love it, I fucking love it, um, I wonder if I can demonstrate how the"
1496300,1503740," atlas actually looks like, can I do that, I think I should be able to, because, uh, we store"
1503740,1511000," the pixels of the atlas, uh, as just like our gba, right, so it's just, uh, our gba or something,"
1511000,1520840," something, what not, um, so I suppose the texture is actually the pixels of the atlas,"
1520840,1527180," and I wonder, and I wonder if, uh, I can actually save it to file, okay, oh, here it is,"
1527180,1531300," so it's a width and height and pixels, uh, you can even get individual pixels and stuff like that,"
1531300,1537720," for some reason, probably a bad idea, um, so you can save it to png file, does it still work,"
1537720,1545360," um, save to, oh yeah, we, we use stbi, right, so yeah, I was using that for debug purposes,"
1545360,1551160," so at any point, I can, I can actually save the atlas to, like, png and look at it, my god,"
1551160,1557980," such an advanced engine, isn't it, um, all right, so where do we initialize the atlas,"
1557980,1563820," uh, I think we're not initializing it, uh, let me take a look at the atlas,"
1563820,1570280," and maybe what I want to search for is the atlas from config, all right, so this is the atlas from"
1570280,1576940," config, and I'm initializing it here, and after that, I can just do something like atlas, uh,"
1576940,1587100," texture, save to png file, atlas.png, and, uh, let me see if it's gonna work now, um, and so it's not"
1587100,1594820," texture sick, it's a single texture, okay, um, so it will just save that, uh, and then we'll be able to"
1594820,1602620," look at it, uh, so here is the atlas png, and let's open it in pff, so here's the atlas, so here"
1602620,1609820," are all of the textures that we have, uh, probably pff actually ruins the encoding, uh, so we have to do"
1609820,1615560," something like background black, if I remember correctly, I'm not 100% sure, I keep forgetting"
1615560,1627560," how to make pff to, like, I have a specific background, uh, background, uh, b, uh, okay, so it has to be"
1627560,1646240," actually small characters, so it has to be b, b black atlas, um, okay, that's what I want, I'm sorry,"
1646240,1651820," all right, so basically these are all the textures that we use, and we put them into a single atlas,"
1651820,1656480," yeah, I know that the atlas is not, like, a power of two or anything like that, I, I'm aware of that"
1656480,1662360," and everything, so, um, but yeah, it's, it's not that important right now, uh, it's not that important,"
1662360,1669820," and what's interesting is that we have, okay, we have, like, these interesting margins, uh, which are"
1669820,1675280," built at runtime, by the way, the original textures don't have this sort of margins or padding or anything,"
1675280,1681780," uh, they're built at runtime, and these margins are needed to prevent the texture bleeding, right,"
1681780,1688840," so because, um, yeah, because of the interpolation, uh, some, some of the cores of the, of one texture,"
1688840,1696480," uh, can bleed into another one and just creates, like, these ugly edges, so to combat that, we just put a"
1696480,1702620," little bit of margin, and it's quite cool that we do that, like, at runtime programmatically, um, so you can"
1702620,1707760," just add more textures, and these margins are going to be added, like, uh, automatically for you, so,"
1707760,1712020," yeah, that's pretty cool, uh, so, and yeah, and essentially what you see in here,"
1712020,1723920," what you see here in this corrupted mess is, like, each particle is the whole atlas squashed into,"
1723920,1729460," uh, like, uh, into a square and colored red, because that's the color of the particle,"
1730160,1734420," that's why it looks so cursed, because, like, this is not what you're supposed to see,"
1734420,1741460," uh, I love it, so, like, it's like a glitch effect of some sort, uh, nice,"
1741460,1751160," anyway, so, essentially, now, since we have a particles, we kind of have the field circle"
1751160,1756620," implemented, it's just, like, we have to use a different program, uh, theoretically, theoretically,"
1756620,1762820," in here, we have to use a particle program, but the particle program is not adapted to work with a new"
1762820,1768920," renderer, so the next step is going to be adapting it to the new renderer, uh, I didn't recompile anything,"
1768920,1785720," yeah, there we go, so, as you can see, uh, we're using program that is not meant to be used like that,"
1785720,1791000," and it also creates interesting effects, too, so, not gonna lie, it also creates interesting effects,"
1791000,1799400," so, yeah, it's kind of cool, it's kind of cool, not gonna lie, especially if I'm moving and stuff like"
1799400,1806280," that, it's just, it's, sometimes it tries to take a shape of the, uh, of the circle, uh, but it's failing"
1806280,1812440," miserably to do so, yeah, it's kind of interesting, all right, so, let's do a committee committee,"
1812440,1822760," let's do a committee committee, and maybe then even a pushy-pushy, um, so, uh, let's remove this thing,"
1822760,1833240," 79, implement, um, oh, wait a second, I don't want to commit the saving of the, of the atlas, I think it's quite important,"
1833240,1838360," it's not needed, so, basically, if I commit that, every time you run a program, it will save its"
1838360,1843320," atlas to the, to the file system, and it's just not really what we want, it's not really what we want"
1843320,1853240," for the program, from the program, um, okay, 79, implement, uh, a renderer, uh, a renderer,"
1853240,1863800," from, uh, field circle, right, uh, circle, go, and I'm gonna push that right into the repo,"
1871320,1877720," and, uh, let's go ahead and take a look at the program, let's take a look at the, uh, the program,"
1877720,1883080," so, we have a shaders, and for the particle program, if I remember correctly, right, if I remember correctly,"
1883080,1891560," so, let me take a look at the, uh, renderer, and I want to find what are the file paths,"
1892120,1902440," paths that we use for all of that, um, where do we load up dot vert, uh, something like that,"
1902440,1907160," okay, so, here is the one shader, okay, so, we're loading, uh, it all up in here,"
1907720,1911240," so, our particle program, our particle program uses circle,"
1911240,1919240," vertices, and, uh, frag shader assets, uh, particle frag,"
1919240,1926040," so, what I'm thinking is that maybe instead of circle vert, we're going to use, um,"
1928520,1933320," the regular one that is used by the regular program, so, essentially, we have to use the rect,"
1933320,1939240," because now, what we are rendering, essentially, is just a rectangle, we just have to, uh, make the"
1939240,1946280," circle slightly different, uh, furthermore, um, maybe we won't even need to adapt anything in the"
1946280,1952280," particle fragment shader, right, do we need anything in the particle fragment shader, so, here, we accept"
1952280,1959720," color, uh, uv, and surprisingly, I, I guess that's it, so, this is going to be the whole thing,"
1959720,1967000," so, the only thing we have to do, we have to remove, um, yeah, we have to remove circle vert,"
1967000,1971160," yeah, we don't need circle vert anymore, that's what's interesting about the syntax stuff, that's"
1971160,1975720," actually cool, we don't need circle vert, okay, so, if I try to recompile the syntax, I think it should"
1975720,1983800," automatically work, I think, uh, and, okay, that worked, that's precisely what's gonna, what's the"
1983800,1990600," end result has to be, yes, okay, so, I just have to swap out one shader, one vertex shader for another"
1990600,1995240," one, but the fragment shader actually stayed the same, that's actually super cool, that is actually"
1995240,2000440," super cool, I'm super happy about that, uh, I thought it's gonna be a little bit more difficult,"
2000440,2006280," I thought I would have to actually modify GLSL code, but that was not needed whatsoever,"
2006280,2012760," and I'm super happy about that, all right, so, uh, let me see, so, because of that, maybe we have to"
2012760,2019080," remove the circle vert shader from our system, so, it's not needed anymore, so, I'm gonna go in here,"
2019080,2023720," so, circle vert is gonna be that now, and let's try to recompile this into, I think,"
2025880,2032600," so, let me see, let me see, circle vert, okay, so, we don't have this thing anymore, right, this thing"
2032600,2039560," is gone, uh, and, yeah, yeah, so, now we have less shader assets, so, we used to have five, now it's four"
2039560,2045000," of them, so, uh, the reason why I have a static assertion here is that I want the compiler to remind"
2045000,2052680," me to update this section of code if the amount of assets changes, you see what I'm talking about,"
2052680,2059320," so, essentially, we are initializing four shaders, which means we're making an assumption that there's"
2059320,2067240," four of them, if we modified something, if we modified the definition, uh, of the enumeration of the shaders,"
2067240,2072360," that means that assumption in this particular piece of code is incorrect, and by the way, this assumption"
2072360,2078840," can be checked at compile time, and that's precisely what I'm doing, it's a pretty neat trick, uh, and it"
2078840,2084040," saved my ass so many times in different projects, I absolutely love it, so, I'm now doing this kind"
2084040,2090520," of stuff, so, oh, I'm trying to always think what are the assumptions we're making, uh, in any particular, uh,"
2090520,2096920," point of, of program that could be broken, but could be checked at compile time or run time, and if there's"
2096920,2103960," something that could be broken, but we still can check, I either put assert or static assert, and I try to put as many of them, uh, as"
2103960,2110680," possible, and that helps in development immensely, uh, believe it or not, because quite often these asserts"
2110680,2115640," fire up, and they fire up when they don't expect them, and they always say to myself, thank you,"
2115640,2122280," past me, for putting an assert in here, so, asserts are very powerful tool, learn how to use them, seriously, um,"
2129880,2136840," especially runtime asserts, runtime asserts, no matter how powerful your type system is, if you,"
2136840,2141640," if you're developing a statically typed compile language, no matter how powerful it is, no matter"
2141640,2147240," how many things it can check at compile time, any useful program, uh, actually"
2147240,2156760," accepts user input, right, and, uh, outputs something to the user, and none of these things can be checked at"
2156760,2162760," compile time, that's the point of an interactive program, right, so none of these things can be"
2162760,2169320," checked fully at compile time, or maybe some of them can, but not all of them, right, and, uh, yeah,"
2169320,2174040," so it's quite important to have asserts for things that may break, not only that, but I mean for, for the"
2174040,2180200," user input has to be actually properly checked, not with asserts, yeah, I'm, I'm sorry, talking bullshit,"
2181240,2186840," yeah, the user input has to be actually processed properly, not with asserts, it's like, um,"
2186840,2195560," usually asserts are useful when one piece of code making an assumption over another piece of code,"
2195560,2202280," piece of code working correctly, right, but that assumption may break at any point, and this is"
2202280,2206600," very difficult to check at, uh, at runtime, this is what I was trying to say, like, I wasn't trying to"
2206600,2210600," talk about, like, the user input, the user input has to be, like, checked properly without the answer,"
2210600,2216040," asserts are usually for different parts of program that depend on each other working correctly, but, um,"
2217000,2228520," sometimes it's, like, very difficult to check at compile time, um, if that makes any sense, anyway,"
2228520,2236760," so what's going to be the next issue, basically this issue is done, basically this issue is done, so,"
2236760,2244760," uh, we need to do a committee committee and then pushy-pushy, and, uh, we are good to go, so since we"
2244760,2250760," removed the, uh, circle vert, right, since we removed the circle vert, uh, I need to remove this file as"
2250760,2256200," well, it's actually the biggest file in here, surprisingly, this is probably because we, yeah,"
2256200,2262440," we put a lot of effort into transforming center and radius into, like, quad and uv card, yeah,"
2262440,2267160," that's precisely what we're doing in here, so that's probably why it's so, it's so big,"
2268680,2274520," all right, so, uh, let me recompile this into, I think, and, uh, let me see, let me see,"
2274520,2279560," all right, um, so let's do a committee committee"
2283560,2299160," so, um, remove circle vert and use, uh, rect rect vert in the particle pro, it's not gonna fit,"
2299160,2305800," that's not gonna, it actually fit into the entire thing, okay, I had two characters before I, like,"
2305800,2311800," went over the limit, okay, uh, and let's push that, uh, right into the repo, and let's create a pull request"
2311800,2324360," to check for all of these things, uh, the first pull request of today's stream, isn't that exciting,"
2324360,2331320," I think it's goddamn exciting, my gut, my gut, my gut, my gut, my gut, my gut,"
2331320,2340360," so we're just waiting for all the continuous integration and stuff like that, it's actually,"
2340920,2346120," I'm really glad that we removed more than we actually added, I think it's, it's cool,"
2346120,2353000," I always love removing the code, the less the code, the less the, yeah, the less the code you have,"
2353000,2360920," the less the bugs you have, I think, I don't know, it depends, it depends on the density,"
2362840,2378920," and where exactly, uh, the bugs are concentrated, uh, it also depends on the definition of a bug,"
2378920,2385240," so it's, we're only waiting for Mac OS, we're only waiting for Mac OS,"
2386040,2391240," and now we're only waiting for Windows, msys2 means GW,"
2391240,2399240," come on Windows, I believe in you, you can do it, you can do it,"
2399240,2413480," it's kind of ironic how, you know, GitHub is now Microsoft product, Windows is a Microsoft product,"
2414360,2418520," Windows builds, uh, on, uh, GitHub are usually the slowest ones."
2419560,2433480," So what's going to be the next issue? We need to think about the next issue."
2436760,2441560," loading config from file panics instead of providing error or recoverable interface, yeah,"
2441560,2446520," that's actually very interesting, that would be cool to implement in my opinion,"
2446520,2456040," but maybe, well, it's not that important, so the main problem with this thing is that we have a hot"
2456040,2463400," reloadable configuration, right, so essentially you have a game and, uh, the game has a lot of parameters,"
2463400,2467880," the, the worldwide parameters, like, for example, gravity, gravity is not part of the,"
2467880,2473560," oh, shit, we need to actually add gravity to the configuration, but, uh, yeah, things like gravity has"
2473560,2479080," to be in the configuration, so it's just like different, different things in here, and for instance,"
2479080,2484040," you can see that the player has a, has a health bar, right, so the player has a health bar,"
2484040,2490360," uh, let's actually zoom in a little bit, and, uh, the width of the health bar is described here,"
2490360,2494280," so what you can do in here, you can change it, and then you can hot reload this into anything,"
2494280,2500760," uh, just a second, and there we go, so, yeah, so we have this sort of hot reloadable configuration and"
2500760,2507160," whatnot, and if you make any syntactic mistake in here, right, uh, for instance, maybe you, you have a"
2507160,2512840," variable that is, well, it's not a syntactic one, but we can try to do it like that, uh, the, the whole"
2512840,2519080," game crashes, it tells the problem though, right, it tells the problem and where exactly, uh, this thing"
2519080,2524840," is located, but, uh, it crashes the whole game, but I think it shouldn't, right, it shouldn't crash,"
2524840,2532440," it should just at runtime tell you, I couldn't reload this into anything, sorry, uh, that precisely the"
2532440,2538120," error message has to, has to be, like, it has to contain, otherwise it's not gonna work, so it's a little bit"
2538120,2544360," annoying, um, but isn't that important, maybe it is, maybe it is, maybe we can work on that, right, so,"
2544360,2553480," um, so today is a Saturday, today is a weekend, maybe I want to just do a chill stream where I could just"
2553480,2559320," work on this kind of stuff, uh, yeah, I guess, I guess we can work on that, okay, let's just merge this pull"
2559320,2570600," request and see, uh, so, cool, nice, nice, nice, nice, nice, nice, nice, okay, let me go to the master"
2570600,2579320," and fetch the latest stuff, fetch the latest stuff, um, origin master, and let's remember this thing,"
2579320,2586680," all right, so, um, let's grab this issue, reload config from file panics instead of providing error"
2586680,2596280," recall the interface, uh, 68, not even 69, what was the 69th issue, by the way,"
2596280,2608520," uh, what was the 69th issue, ah, it was a, it was a pull request, okay, boring, uh, so let's create a branch 68,"
2609480,2617560," uh, and let's find the function called reload config, uh, from file, and where is it located,"
2617560,2622200," I think it's located somewhere in here, and yeah, that's pretty much what we have in here, right,"
2622200,2628200," so essentially every time you encounter some sort of an error, uh, it's like, I'm sorry,"
2629960,2636120," and panics, um, so I suppose what we want to do in here, maybe instead of panicking,"
2636120,2639080," right, uh, we're gonna return boolean,"
2642280,2650680," uh, it's just, I chuckled because, uh, after saying panicking, I was thinking about the star wars"
2650680,2661160," joke, but I couldn't come up with one, panicking, uh, all right, so, good, so dumb, sorry, um,"
2662760,2671880," yeah, but we can also potentially panic in other places, especially with, like, a parse config content,"
2671880,2679080," right, so this thing, parse config content, um, so we're using, like, a special thing that parses"
2679080,2685800," things for us, parse config content, right, so you provide the content, you also provide the file path"
2685800,2691640," for, for the things, yeah, it can also panic at any time, it can also panic, but it doesn't provide any"
2691640,2700520," error messages, I guess the, the main problem here with the config is when it fails, uh, where do we"
2700520,2707000," provide the, how do we provide the error messages, how do we provide them, um,"
2707000,2720280," maybe we're gonna have some sort of a buffer, yeah, it could be something like, um,"
2721640,2730920," yeah, it could be a special global buffer for the config loader through which it communicates"
2730920,2738360," its error messages, and then you can always grab that error message and, um, display it somewhere,"
2738360,2743320," you can put it into the standard output or to the screen, uh, this is one of the things I want to be"
2743320,2753400," able to do, so the same error messages has to be displayable in the, uh, in both std out and"
2753400,2759400," the screen in image and stuff like that, if you know what I'm talking about,"
2759400,2763800," all right, let me see, uh, so I'm using aids, which is the"
2766840,2772600," replacement for c++ std, uh, yet again, if you've never heard of it, I recommend to check it out,"
2772600,2781640," so, and I'm using it in my games, because I think std, c++ std, uh, is a little bit"
2781640,2792040," more over complicated for what it's doing, uh, okay, std replacement for c++, genius name, I know,"
2792040,2797000," so the idea of this entire replacement is that, like, tries to, it's basically, um,"
2797000,2803880," programming in c with classes, right, it's built on top of, uh, libc, and it just uses,"
2803880,2810840," uses the minimum of c++ features, right, and by the way, things like println that you probably saw"
2810840,2820760," me using in, uh, in my game, probably, uh, these things are from that library, so in println actually"
2820760,2826520," acts more like, uh, write a land from Pascal, I don't know how many people who watch me right"
2826520,2832520," now actually programmed in Pascal, but essentially you can interleave different types, and it will just,"
2832520,2838040," you know, print their textual representations and just concatenate them, so that's how it works."
2838040,2843080," Actually, as a matter of fact, each individual call in here will be translated into a separate,"
2843080,2850520," like, printf, right, and the, uh, the specific printf will be dispatched based upon the type of this"
2850520,2858280," value, right, and println is implemented using c++17, uh, variadic template magic, we can even take a look"
2858280,2864680," at it, I think, so it's a println, uh, well, it's a sprintln, which prints things into string buffer,"
2864680,2867720," which we're going to use, by the way, for error reporting a little bit later right now,"
2867720,2874200," in, in, in the stream, but the idea is pretty much the same, so, uh, we accept a variadic template of"
2874200,2881000," types, and, uh, then we have a pack of arguments of different types, and we unpack these arguments into"
2881000,2890600," a sequence of calls of, uh, just sprint1, and through overloading, um, we dispatch between sprintf, uh,"
2890600,2895880," sprint1s depending on the type of each individual argument, so that's basically how it's implemented,"
2895880,2901960," it's actually pretty simple, pretty straightforward, if you know how c++17 variadic templates work,"
2901960,2905560," uh, they are really useful for this specific feature."
2907240,2919480," uh, so, essentially, essentially, in a low order, we have, like, a"
2919480,2931160," global static variable, uh, which holds the, the content of the configuration file, we need to hold"
2931160,2936200," the content of the configuration file, because we refer to it from different places, so maybe we're going to"
2936200,2942040," do a similar thing for the string buffer, right, so it's going to string buffer, the problem with the"
2942040,2947640," string buffer is that it's like a string view on the string buffer, right, so let me take a look at the"
2947640,2960680," definition, string buffer, yeah, it's like, it doesn't really do things at all properly, uh, it would be"
2960680,2966680," better if string buffer was defined slightly differently, it would be way better if it was"
2966680,2974280," actually holding that data somewhere inside, um, let me, let me see, so it can be no white spaces,"
2974280,2977400," uh, it could be, like, templated, right, templated,"
2979720,2987960," template, um, okay, this is a little bit inconvenient type name, uh, I'm using the wrong mode, by the way,"
2987960,2994440," um, so, and it's going to be actually holding its capacity, right, so let's imagine that it has its"
2994440,3004280," capacity, um, and then this data is going to be, like, this capacity, there we go, uh, so, and then you would have"
3004280,3011640," things like sprint1, which are also templated, right, which are also templated, that take the size of this"
3011640,3023560," capacity, and, uh, so on and so forth, uh, so, which probably would, uh, reduce the compilation time"
3023560,3027880," immensely, I don't know why I keep using this word, but I kind of like this word,"
3028680,3034440," dramatically, let's, let's try to use a different word to exaggerate things, okay, so that will reduce"
3034440,3038680," the, uh, compilation time dramatically, um,"
3038680,3045240," because it needs to instantiate templates and stuff like that, but that will be kind of cool,"
3045240,3053080," because I would be able to just, you know, do something like string buffer, um, let's say I want to allocate, um,"
3054840,3062920," 6040 kilobytes, because it's obviously enough for everyone, uh, something like this, and this is"
3062920,3070040," going to be my error buffer, right, and every time a loader, right, fails, I actually print the message"
3070040,3076280," into that buffer, right, I just print the message into that buffer, um, and regardless of its size,"
3076280,3083000," it dispatches, uh, uh, like, correctly, and on top of that, we can use this capacity for boundary checks,"
3083000,3087480," right, we could use that capacity for boundary check, and because of that, we don't need this capacity in here,"
3087480,3094360," right, uh, but the problem also is that for each, like, version of string buffer, right,"
3094360,3100280," you have to generate a version of sprint, uh, sprint one, but on top of that, maybe with, uh,"
3100280,3105080," with a good compiler, some of these small functions could be optimized away and whatnot,"
3105080,3110200," right, because it could be in line and whatnot, but since they are sort of, like, public, um,"
3110200,3116600," I don't know, I just want to see if that's a generally good idea, and we just want to see if"
3116600,3126920," it's a generally good idea, um, because right now this thing expects you to first allocate that buffer"
3126920,3131720," somewhere, and then create a view on this string buffer, which is not particularly convenient,"
3131720,3136040," I just want to allocate the string buffer over particular size, and I think we even had something"
3136040,3145080," like fixed, uh, region, which is essentially that, right, which is essentially that, so, um,"
3145080,3150520," maybe I just need to, like, implement printers into fixed regions, so I can use,"
3152600,3157000," yeah, all right, okay, so this library is a mess, okay, it's in the middle of, like, you know,"
3157000,3163160," figuring out what exactly I need, and what is the minimal things, uh, what is the minimal things"
3163160,3165000," that I need, and just removing everything else."
3165000,3180440," So, and you can allocate things into the fixed region, which is kind of interesting."
3182600,3192680," So we can use it as an allocator, but yeah, I'll see what I can, what I can do in there."
3192680,3197480," Um, anyway, so let's make a cup of tea. Let's make a cup of tea."
3197480,3205000," Maybe, maybe I'm gonna, I'm gonna even do a small break, because yeah, I'm almost doing for like an hour,"
3205000,3209160," I think it's time for a break. I think it's time for a break."
3209160,3217800," Make a cup of tea, and listen to some music, listen to some music."
3217800,3224440," Uh, all right, so let's listen to a smooth jazz."
3230440,3231000," All right."
3231000,3238200," So let me set the text mode, three minutes."
3238200,3247880," I think I'm gonna switch to a different song."
3247880,3255240," Okay, let's make some break, you guys have fun."
3260440,3261840," I think I'm gonna switch to a different song."
3261840,3262840," I think it's time for a different song."
3262840,3262840," I think I'm gonna switch to a different song."
3262840,3263840," I think I'm gonna switch to a different song."
3263840,3264640," I think it's time for a different song."
3264640,3265840," I think it's time for a different song."
3265840,3266840," I think it's time for a different song."
3266840,3267840," I think I'm gonna switch to a different song."
3267840,3268840," I think it's time for a different song."
3268840,3269840," I think it's time for a different song."
3269840,3269840," It's time for a different song."
3269840,3270840," I think it's time for a different song."
3270840,3271840," It's time for a different song."
3271840,3273840," I think it's time for a different song."
3273840,3273840," I think it's time for a different song."
3273840,3274840," I think it's time for a different song."
3274840,3275840," I think it's time for a different song."
3275840,3276840," I think it's time for a different song."
3276840,3289240," I think it's time for a different song."
3289240,3291240," I think it's time for a different song."
3291240,3292240," I think it's time for a different song."
3292240,3293240," I think it's time for a different song."
3293240,3295240," I think it's time for a different song."
3295240,3297240," I think it's time for a different song."
3297240,3299240," I think it's time for a different song."
3299240,3301240," I think it's time for a different song."
3301240,3303240," I think it's time for a different song."
3303240,3305240," I think it's time for a different song."
3305240,3307640," I think it's time for a different song."
3307640,3309640," I think it's time for a different song."
3309640,3311640," It's time for a different song."
3311640,3313640," I think it's time for a different song."
3313640,3315640," I think it's time for a different song."
3315640,3317640," I think it's time for a different song."
3317640,3319640," I think it's time for a different song."
3319640,3321640," I think it's time for a different song."
3321640,3323640," I think it's time for a different song."
3323640,3325640," I think it's time for a different song."
3325640,3327640," I think it's time for a different song."
3327640,3329640," I think it's time for a different song."
3329640,3331640," I think it's time for a different song."
3331640,3333640," I think it's time for a different song."
3333640,3334640," I think it's time for a different song."
3334640,3337040," I think it's time for a different song."
3337040,3339040," I think it's time for a different song."
3339040,3341040," I think it's time for a different song."
3341040,3343040," I think it's time for a different song."
3343040,3345040," I think it's time for a different song."
3345040,3347040," I think it's time for a different song."
3347040,3349040," I think it's time for a different song."
3349040,3351040," I think it's time for a different song."
3351040,3353040," I think it's time for a different song."
3353040,3355040," I think it's time for a different song."
3355040,3357040," I think it's time for a different song."
3357040,3359040," I think it's time for a different song."
3359040,3361040," I think it's time for a different song."
3361040,3363440," I think it's time for a different song."
3363440,3365440," I think it's time for a different song."
3365440,3367440," I think it's time for a different song."
3367440,3369440," I think it's time for a different song."
3369440,3371440," I think it's time for a different song."
3371440,3373440," I think it's time for a different song."
3373440,3375840," I think it's time for a different song."
3375840,3377840," I think it's time for a different song."
3377840,3379840," I think it's time for a different song."
3379840,3381840," I think it's time for a different song."
3381840,3383840," I think it's time for a different song."
3383840,3385840," I think it's time for a different song."
3385840,3387840," I think it's time for a different song."
3387840,3389840," I think it's time for a different song."
3389840,3391840," I think it's time for a different song."
3391840,3393840," I think it's time for a different song."
3393840,3395840," I think it's time for a different song."
3395840,3397840," I think it's time for a different song."
3397840,3399840," I think it's time for a different song."
3399840,3401840," I think it's time for a different song."
3401840,3404240," I think it's time for a different song."
3404240,3406240," I think it's time for a different song."
3406240,3408240," I think it's time for a different song."
3408240,3410240," I think it's time for a different song."
3410240,3412240," I think it's time for a different song."
3412240,3414240," I think it's time for a different song."
3414240,3416240," I think it's time for a different song."
3416240,3418240," I think it's time for a different song."
3418240,3420240," I think it's time for a different song."
3420240,3422240," I think it's time for a different song."
3422240,3424240," I think it's time for a different song."
3424240,3426240," I think it's time for a different song."
3426240,3428240," I think it's time for a different song."
3428240,3430240," I think it's time for a different song."
3430240,3431240," It's time for a different song."
3431240,3435640," And it's going to have a particular capacity, I suppose."
3435640,3438640," Error message buffer capacity."
3438640,3439640," There we go."
3439640,3441640," So we have a capacity of this thing."
3441640,3445640," And let's actually define it as a const."
3445640,3447640," And how much do we want to allocate for error messages?"
3447640,3449640," I don't know."
3449640,3451640," Like 16 kilobytes should be enough."
3451640,3455640," Even 16 kilobytes for an error message is too much, in my opinion."
3455640,3461040," So this is a pretty big error message."
3461040,3464040," I don't think it's even 16 kilobytes."
3464040,3469040," So usually, by the way, when people loading shaders and whatnot, right?"
3469040,3473040," So they use the function to get the error message from the shader."
3473040,3480440," Maybe we can force a user to provide this thing, but maybe not."
3480440,3488840," And usually, people allocate a buffer of a size of one kilobyte."
3488840,3489840," Right?"
3489840,3490840," It's just like usually one kilobyte."
3490840,3492840," Maybe we can do the same."
3492840,3494840," Let's say it's going to be like, yeah, one kilobyte."
3494840,3499040," 124 is actually one kilobyte."
3499040,3501040," So one kilobyte is 1,000."
3501040,3502640," But maybe we're going to allocate one kilobyte."
3502640,3503840," Because it's like a power of two."
3503840,3504840," And we're programmers."
3504840,3506240," And we love powers of two."
3506240,3507840," Right."
3507840,3509540," So my kettle is ready."
3509540,3512140," So I'm going to go to the kitchen, pour myself a cup of water and go back."
3512140,3513140," Don't go anywhere."
3513140,3514440," It's going to be super fast."
3514440,3517240," It's going to be super fast."
3517240,3543040," Was it super fast?"
3543040,3544040," Told you."
3544040,3545040," Told you."
3545040,3546040," It's super fast."
3546040,3548240," All right."
3548240,3550440," So here's the error message buffer."
3550440,3556440," And maybe you want to actually create something like static string buffer."
3556440,3560440," And this one is going to be error message string buffer."
3560440,3563440," And it's going to be just initialized like this."
3563440,3566440," So capacity is going to be this."
3566440,3571240," And it's data, if I remember correctly, according to the definition of the string buffer."
3571240,3575640," According to the struct string buffer."
3575640,3576640," Right."
3576640,3577640," And this can be the data."
3577640,3578640," Error message."
3578640,3579640," Data."
3579640,3580640," Okay."
3580640,3581640," Maybe this is how I should call it."
3581640,3582640," Error message data."
3582640,3583640," Right."
3583640,3584640," So, and this was one."
3584640,3585640," Error message data capacity."
3585640,3586640," Error message data capacity."
3586640,3589040," Error message data capacity."
3589040,3590040," Error message data."
3590040,3591040," Right."
3591040,3603440," And this one is error message buffer, which has its error message data capacity."
3603440,3604440," And the error message data."
3604440,3605240," There we go."
3605240,3610240," So, this is just like the actual chunk of code we're operating on."
3610240,3611240," Right."
3611240,3617240," And string buffer is the interface for aids to actually print this thing into."
3617240,3619240," If that makes any sense."
3619240,3620240," Okay."
3620240,3621240," So."
3621240,3623240," All right."
3623240,3626240," What we're going to do in here."
3626240,3627240," What we're going to do in here."
3627240,3628240," So."
3628240,3629240," Um."
3629240,3641240," Maybe we could have a function to get the last error message."
3641240,3646240," Something like."
3646240,3647240," config."
3647240,3648240," View."
3648240,3649240," Um."
3649240,3650240," Um."
3650240,3651240," Um."
3651240,3652240," Um."
3652240,3653240," Config."
3653240,3654240," Loading."
3654240,3655240," Error."
3655240,3656240," Message."
3656240,3657240," Like this."
3657240,3664240," And this entire thing is going to just return you the last config loading error message."
3664240,3665240," Pretty much."
3665240,3666240," Right."
3666240,3667240," It's pretty much going to be that."
3667240,3668240," Uh."
3668240,3669240," And."
3669240,3670240," Uh."
3670240,3671240," Let me."
3671240,3672240," Let me see."
3672240,3673240," Let me see."
3673240,3674240," Uh."
3674240,3676240," Config loading error message."
3676240,3677240," So."
3677240,3679240," Do I have a way to convert a string view?"
3679240,3680240," Uh."
3680240,3681240," Yeah."
3681240,3682240," I can."
3682240,3683240," I actually have a way to do that."
3683240,3684240," Because it just has a view."
3684240,3685240," So."
3685240,3686240," It means you can just take."
3686240,3687240," Uh."
3687240,3688240," Error message."
3688240,3689240," Buffer."
3689240,3690240," And."
3690240,3691240," View."
3691240,3692240," And it automatically converts it to a string view."
3692240,3693240," So."
3693240,3694240," And you can use a string view for."
3694240,3695240," Your string view."
3695240,3696240," Purposes."
3696240,3697240," Right."
3697240,3700240," For your dirty string view purposes."
3700240,3702240," That's what you can use it for."
3702240,3703240," Okay."
3703240,3704240," All right."
3704240,3705240," So."
3705240,3706240," And essentially."
3706240,3707240," When you're going to be calling."
3707240,3708240," Reload config from file."
3708240,3709240," If it returns false."
3709240,3710240," It's."
3710240,3711240," You."
3711240,3712240," Have to just call this function."
3712240,3713240," To get the latest error."
3713240,3714240," And you can print this error."
3714240,3715240," To the standard error."
3715240,3716240," Or."
3716240,3717240," When we have an opportunity."
3717240,3718240," We have a capability."
3718240,3719240," To render text on the screen."
3719240,3720240," We can also render that."
3720240,3721240," On the screen."
3721240,3722240," So."
3722240,3723240," Yeah."
3723240,3724240," Essentially."
3724240,3725240," But of course."
3725240,3726240," Uh."
3726240,3727240," After the next."
3727240,3728240," Reload config file."
3728240,3729240," Call."
3729240,3730240," The message."
3730240,3731240," The error message buffer."
3731240,3732240," Will be invalidated."
3732240,3733240," Right."
3733240,3734240," So."
3734240,3735240," Essentially."
3735240,3736240," Its size will be set to zero."
3736240,3737240," And."
3737240,3738240," Yeah."
3738240,3739240," The cool thing about this buffer."
3739240,3740240," Is that."
3740240,3741240," If you."
3741240,3742240," Keep."
3742240,3743240," Printing into that buffer."
3743240,3744240," Overload."
3744240,3745240," Its capacity."
3745240,3746240," Is going to be automatically truncated."
3746240,3746240," So."
3746240,3747240," You don't have to worry about."
3747240,3748240," This kind of stuff."
3748240,3749240," All right."
3749240,3749240," So."
3749240,3750240," We clean up the buffer."
3750240,3751240," And."
3751240,3752240," Yeah."
3752240,3752240," Now."
3752240,3753240," Essentially."
3753240,3754240," We can just."
3754240,3755240," Take the content."
3755240,3756240," Right."
3756240,3756240," So."
3756240,3757240," Here's the content."
3757240,3758240," Uh."
3758240,3758240," We."
3758240,3759240," Reading."
3759240,3760240," This entire."
3760240,3761240," Thing."
3761240,3762240," Um."
3762240,3763240," The entire content."
3763240,3764240," Of the file."
3764240,3765240," Right."
3765240,3766240," So."
3766240,3767240," This thing."
3767240,3768240," Is a maybe content."
3768240,3769240," Actually."
3769240,3770240," Uh."
3770240,3771240," This thing."
3771240,3772240," And."
3772240,3772240," If."
3772240,3773240," Maybe content."
3773240,3774240," Uh."
3774240,3775240," Doesn't have a value."
3775240,3776240," Right."
3776240,3777240," It doesn't have a value."
3777240,3778240," Uh."
3778240,3779240," Instead of panicking."
3779240,3780240," Right."
3780240,3781240," Instead of panicking."
3781240,3782240," We."
3782240,3783240," Uh."
3783240,3784240," Uh."
3784240,3786240," We're going to be doing."
3786240,3787240," S printf."
3787240,3788240," S println."
3788240,3789240," Actually."
3789240,3790240," And."
3790240,3791240," We're going to give."
3791240,3792240," A pointer."
3792240,3793240," To error message buffer."
3793240,3794240," Right."
3794240,3795240," We're printing this entire."
3795240,3796240," Into error message buffer."
3796240,3797240," And."
3797240,3798240," That is."
3798240,3799240," Essentially."
3799240,3800240," Right."
3800240,3801240," I could not."
3801240,3802240," Load file."
3802240,3803240," Because that."
3803240,3804240," That."
3804240,3805240," And that."
3805240,3806240," And then."
3806240,3807240," I can just return."
3807240,3808240," False."
3808240,3809240," Right."
3809240,3810240," And."
3810240,3811240," Panicking."
3811240,3812240," In here."
3812240,3813240," Is not."
3813240,3814240," Really needed."
3814240,3815240," Uh."
3815240,3816240," So."
3816240,3817240," Uh."
3817240,3818240," Panicking."
3818240,3819240," Scan."
3819240,3840240," To be fair, Panicking Skywalker could be a cool library for Rust or something, to handle panics or whatnot."
3840240,3844240," So yeah, feel free to use that idea if you want."
3844240,3856240," Maybe somebody already actually took that name. Let's actually see. Panicking."
3856240,3871240," Nobody actually took this name. Maybe Panicking. I don't know how you spell it. I'm sorry, I'm not a Star Wars fan, so maybe I just actually misspelled it correctly."
3871240,3883240," Anyways, so, and now, if content is alright, we have to do something like content, maybe content unwrap, right?"
3883240,3895240," Then we check if we do have a content owner. In that case, we have to destroy the content and make a new content owner and just continue this entire thing."
3895240,3900240," We also have to modify the parseConfig content, right? We have to modify the parseConfig content."
3900240,3909240," And the callback should return some sort of boolean to indicate for the config, for the parser to actually stop parsing, right?"
3909240,3917240," For the parser to stop parsing. And let me see. So where do we have it? So this is the parser."
3917240,3926240," So, parseConfig is going to be boolean, right? And the callback is going to be actually returning boolean."
3926240,3939240," So here is the value. And if not callback return false. Otherwise, if you successfully parsed everything, we're going to return true."
3939240,3949240," So basically, through a callback, you will be able to actually say something."
3949240,3958240," You'll be able to actually say something interestingly."
3958240,3969240," So we also report errors in here. We also report errors in here. So there is also parseConfigValue."
3969240,3976240," And it may return you a config value or not return you a config value."
3976240,3984240," So we'll have to think how can we get rid of that."
3984240,3991240," And we also want to be able to hook up these error messages into our error reporting thing."
3991240,3996240," Maybe because of that, we have to consolidate this entire stuff."
3996240,3998240," I don't know."
3998240,4006240," Because loading the configuration and parsing it is pretty much the same thing, isn't it?"
4006240,4009240," I think it's pretty much the same thing."
4009240,4010240," Yeah."
4010240,4016240," But the thing is, this parsing should be also reused by our config inducer."
4016240,4019240," And config inducer is actually a very interesting thing."
4019240,4027240," It's a program, a separate executable program that generates this index out of the configuration."
4027240,4028240," Right."
4028240,4030240," So here we have this configuration."
4030240,4037240," We run a special program and that program generates this C++ code from that config."
4037240,4045240," And you can take this meta information about the configuration and compile it with your game."
4045240,4052240," So then later, this information helps you to reload this configuration at runtime."
4052240,4056240," As you can see, you have a sequence of configuration values."
4056240,4062240," And you have a table information of each individual variable, their type and whatnot."
4062240,4069240," And we also have the names of the variables as macros that redirect to the corresponding slots within this array."
4069240,4070240," Right."
4070240,4072240," And that is automatically generated by a separate program."
4072240,4075240," So it's a little bit of a code generation meta programming thingy."
4075240,4083240," What's interesting is that there is also a special mode of this thing."
4083240,4086240," So if you run it like this, it's actually very easy to use."
4086240,4088240," The config inducer is actually super easy to use."
4088240,4091240," You just provide it the vars file."
4091240,4092240," Right."
4092240,4093240," Like this."
4093240,4097240," And it just generates you this thing and you just can redirect it to the file."
4097240,4109240," But it also has a flag bake, which essentially, as you can see, turns this entire thing into compile time values."
4109240,4117240," It basically bakes these entire values into the executable without an opportunity to hot reload them."
4117240,4121240," And this is usually used for the release build."
4121240,4122240," Right."
4122240,4125240," In release build, we want to make these things compile time values."
4125240,4129240," So the compiler has an opportunity to perform constant folding."
4129240,4130240," Right."
4130240,4131240," Constant folding."
4131240,4133240," And actually make the code more optimal."
4133240,4138240," So basically, we give the compiler more information about what's happening."
4138240,4141240," so it can optimize it a little bit better."
4141240,4142240," Yeah."
4142240,4143240," Posting folding."
4143240,4144240," Okay."
4144240,4145240," Okay."
4145240,4146240," That's precisely the reason why we do all that."
4146240,4147240," I usually always put support links in there."
4147240,4148240," So, but I'm going to just have a reminder."
4148240,4149240," All right."
4149240,4150240," So."
4150240,4151240," Mm-mm-mm-mm-mm-mm-mm-mm-mm."
4151240,4152240," So I think."
4152240,4153240," Yeah."
4153240,4155240," That's exactly the reason why we do all that."
4155240,4157240," I usually always put support links in there."
4157240,4158240," But I'm going to just have a reminder."
4158240,4159240," All right."
4159240,4160240," So."
4160240,4161240," Like a reminder."
4161240,4162240," All right."
4162240,4163240," So."
4163240,4166240," Mm-mm-mm-mm-mm-mm-mm."
4166240,4167240," So I think."
4167240,4168240," Yeah."
4168240,4169240," Yeah."
4169240,4171240," And the index actually reuses the parser."
4171240,4176240," So we use the same parser between the program and the indexer."
4176240,4177240," So."
4177240,4182240," If I'm going to merge parser and the loader."
4182240,4185240," So that means the indexer is going to be using the loader."
4185240,4187240," Which kind of makes sense."
4187240,4188240," Which is totally fine."
4188240,4189240," I guess."
4189240,4191240," I guess it does make sense."
4191240,4192240," All right."
4192240,4193240," So I think."
4193240,4194240," What I need to do right now."
4194240,4198240," I need to consolidate these two things together into a single translation need."
4198240,4200240," So I need to get rid of the parser."
4200240,4203240," Do you think about the parser?"
4203240,4205240," It uses the index for some reason."
4205240,4206240," Hmm."
4206240,4207240," I see."
4207240,4208240," Why does it use index?"
4208240,4209240," Does it need index in any way?"
4209240,4210240," Config index by name."
4210240,4211240," It feels a little bit strange."
4211240,4212240," Ah."
4212240,4213240," It's."
4213240,4214240," Oh."
4214240,4215240," I'm looking at the wrong file."
4215240,4216240," I thought I was looking at the parser."
4216240,4217240," Okay."
4217240,4218240," I need more to you."
4218240,4219240," I'm sorry."
4219240,4220240," I just need more to you."
4220240,4221240," I'm sorry."
4221240,4222240," I just need more to you."
4222240,4223240," Ah."
4223240,4225240," It feels a little bit strange."
4225240,4226240," Ah."
4226240,4227240," It's."
4227240,4228240," Oh."
4228240,4229240," I'm looking at the wrong file."
4229240,4230240," I thought I was looking at the parser."
4230240,4231240," Okay."
4231240,4232240," I need more to you."
4232240,4233240," I'm sorry."
4233240,4234240," I just need more to you."
4234240,4235240," Oh my god."
4235240,4236240," Yeah."
4236240,4238240," I just was looking at the wrong file."
4238240,4239240," Relatable."
4239240,4240240," Am I right?"
4240240,4241240," Fellow programmers."
4241240,4245240," My face when I'm looking at a different file."
4245240,4257240," config type by name."
4257240,4258240," Alright."
4258240,4259240," So what I'm going to start doing."
4259240,4272240," is basically consolidating all that."
4272240,4273240," Alright."
4273240,4279240," So I'm going to be moving things from parser to the config loader."
4279240,4282240," So we're going to have things like config type name."
4282240,4283240," Go."
4283240,4295240," The config loader needs an index because otherwise it won't be able to load it."
4295240,4297240," It is really complicated."
4297240,4314240," One way I see we can actually fix that is by moving the error message data into the parser."
4314240,4315240," I guess that's one way to do that."
4315240,4316240," I guess that's one way to do that."
4316240,4321240," And loader is going to be reusing the error message buffer of the parser."
4321240,4328240," because it's kind of like related to that."
4328240,4330240," It's kind of like related to that."
4330240,4331240," Alright."
4331240,4334240," So that's basically what we'll have to do."
4334240,4335240," Alright."
4335240,4341240," So let me actually remove some of these things in here."
4341240,4344240," So this is going to be that."
4344240,4345240," So..."
4345240,4347240," Yeah."
4347240,4348240," This is not needed."
4348240,4349240," This is not needed."
4349240,4351240," And first thing I want to do."
4351240,4358240," I want to basically introduce the parser translation unit."
4358240,4359240," Yeah."
4359240,4360240," So let's introduce the parser translation unit."
4360240,4362240," Because we have translation unit for loader."
4362240,4366240," And we need to introduce the translation unit for parser."
4366240,4367240," Right."
4367240,4371240," So we need to introduce the translation unit for parser."
4371240,4373240," So we also have an index."
4373240,4380240," So just like this is a small part that can be reused by loader."
4380240,4382240," It's just on top of that."
4382240,4383240," Okay."
4383240,4384240," I guess that's what we need to do."
4384240,4385240," Alright."
4385240,4386240," Alright."
4386240,4387240," Config parser."
4387240,4392240," So let's include config parser HPP."
4392240,4393240," Like this."
4393240,4396240," Config loader."
4396240,4398240," Config loader."
4398240,4401240," Passer HPP."
4401240,4402240," Come on."
4402240,4403240," Alright."
4403240,4405240," So I'm going to just select everything in here."
4405240,4407240," And I'm going to just put it like that."
4409240,4410240," And so this is scpp."
4410240,4414240," And this one is going to be something slightly different."
4414240,4415240," Okay."
4415240,4416240," Okay."
4416240,4419240," So I just want to have signatures in here."
4419240,4420240," Just signatures."
4420240,4422240," Nothing particularly special."
4422240,4423240," Oh."
4423240,4424240," Crawl back."
4424240,4425240," Crawl back as a template."
4425240,4426240," And it just doesn't allow us to do that easily."
4426240,4427240," Crawl back as a template."
4427240,4428240," Hmm."
4428240,4429240," C++."
4429240,4430240," C++."
4430240,4431240," C++."
4431240,4432240," What are you doing to me?"
4432240,4433240," C++."
4433240,4434240," Ah."
4434240,4435240," C++."
4435240,4436240," C++."
4436240,4437240," What are you doing to me?"
4437240,4437240," C++."
4437240,4438240," What are you doing to me?"
4438240,4439240," C++."
4439240,4440240," Ah."
4440240,4443240," I think we can change actually approach to how we parse the config."
4443240,4447240," I think we can change the approach to how we parse the config."
4447240,4452240," I think we can change the approach to how we parse the config."
4452240,4457240," I think we can change the approach to how we parse the config."
4457240,4477240," It's actually very interesting."
4477240,4482240," Let me see a little bit more tea and I'm going to explain what I find interesting."
4482240,4497240," I think we could get use, we could make use of immediate parsing."
4497240,4502240," Actually, I don't know why I'm so obsessed with immediate mode stuff lately."
4502240,4505240," But it's kind of like a lot of problems that I encounter."
4505240,4509240," Yeah, you can just solve it by doing that in a sort of immediate fashion."
4509240,4511240," If you know what I mean."
4511240,4512240," Okay."
4512240,4517240," So essentially how our parser works right now."
4517240,4518240," Right."
4518240,4520240," It works in a very similar way, a simple way."
4520240,4521240," In a very simple way."
4521240,4523240," So we have a parser."
4523240,4526240," You have a content."
4526240,4527240," Content."
4527240,4530240," And you provide a callback function."
4530240,4531240," Right."
4531240,4532240," A callback function."
4532240,4533240," Callback."
4533240,4537240," And the callback is a function."
4537240,4538240," Can I."
4538240,4540240," Can I."
4540240,4542240," Can I do it like that."
4542240,4543240," Is a function."
4543240,4546240," How can I express the function."
4546240,4551240," So which accepts the definition of the configuration."
4551240,4552240," The value."
4552240,4555240," And the line number at which it happened."
4555240,4557240," And returns you the."
4557240,4560240," The boolean."
4560240,4561240," Right."
4561240,4563240," Which is the boolean indicating that you should stop parsing."
4563240,4564240," So at any point you can."
4564240,4565240," Stop parsing."
4565240,4566240," So essentially."
4566240,4568240," You setting everything up."
4568240,4569240," Right."
4569240,4570240," You setting up."
4570240,4571240," You getting the content."
4571240,4573240," Then you preparing the function."
4573240,4574240," That will be called the parser."
4574240,4575240," And you just call parser."
4575240,4579240," And you lose full control of the parsing loop."
4579240,4580240," Right."
4580240,4581240," You lose all of the control of the parsing loop."
4581240,4583240," The only control you have is."
4583240,4584240," Through the callback function."
4584240,4589240," That can return boolean."
4589240,4591240," That can return boolean."
4591240,4592240," And."
4592240,4594240," If you return trua."
4594240,4596240," That means it will continue parsing."
4596240,4598240," And if you return falsa."
4598240,4600240," It will stop parsing."
4600240,4602240," That's the only control over the loop you have."
4602240,4605240," You don't have any other control."
4605240,4606240," Whatsoever."
4606240,4607240," At all."
4607240,4611240," What if we go the other way around."
4611240,4612240," What if we go the other way around."
4612240,4614240," So this is one way to do that."
4614240,4617240," What if we just construct."
4617240,4619240," A parser."
4619240,4621240," A parser."
4621240,4622240," And."
4622240,4624240," Put the content in here."
4624240,4625240," Right."
4625240,4626240," You just."
4626240,4627240," Give it this thing."
4627240,4628240," And you put the content in here."
4628240,4629240," And."
4629240,4630240," Basically."
4630240,4631240," You have a loop."
4631240,4632240," Right."
4632240,4633240," You have a loop."
4633240,4634240," And."
4634240,4635240," You call the parser."
4635240,4636240," It's not an immediate mode."
4636240,4637240," It's actually."
4637240,4638240," Why do."
4638240,4639240," Why do I call it immediate mode."
4639240,4640240," It's just like."
4640240,4641240," It's not even that."
4641240,4642240," Interesting of an idea."
4642240,4643240," So people."
4643240,4644240," People do that."
4644240,4645240," I don't know."
4645240,4646240," Like."
4646240,4647240," Next value."
4647240,4648240," And this entire thing."
4648240,4649240," Is going to basically."
4649240,4650240," Search for the next value."
4650240,4651240," And then."
4651240,4652240," It finds the next value."
4652240,4653240," And it stops."
4653240,4654240," It returns you."
4654240,4655240," The definition."
4655240,4656240," Definition."
4656240,4657240," Definition."
4657240,4658240," Value."
4658240,4659240," Or."
4659240,4660240," Line number."
4660240,4661240," Right."
4661240,4662240," And if it fails."
4662240,4663240," Right."
4663240,4664240," If it fails."
4664240,4667240," It may actually."
4667240,4669240," Return you something else."
4669240,4670240," Right."
4670240,4671240," So."
4671240,4672240," Essentially."
4672240,4673240," We can do something like this."
4673240,4674240," We can have a definition."
4674240,4675240," Uh."
4675240,4676240," And."
4676240,4677240," A value."
4677240,4678240," Defined in here."
4678240,4679240," Right."
4679240,4680240," And maybe."
4680240,4681240," Even."
4681240,4682240," A line number."
4682240,4683240," Right."
4683240,4684240," Line number."
4684240,4685240," Where all of that stuff happened."
4685240,4686240," Right."
4686240,4687240," And then."
4687240,4688240," I can just do."
4688240,4689240," Pass the next value."
4689240,4690240," Uh."
4690240,4691240," And I."
4691240,4692240," Put these things in here."
4692240,4693240," Uh."
4693240,4694240," So this one."
4694240,4695240," Has to be a value."
4695240,4696240," Value."
4696240,4697240," Uh."
4697240,4698240," Line number."
4698240,4699240," Right."
4699240,4700240," So."
4700240,4701240," If everything's okay."
4701240,4702240," We've got."
4702240,4703240," A new."
4703240,4704240," Value."
4704240,4705240," And we can."
4705240,4706240," Process it."
4706240,4707240," If something."
4707240,4708240," Went wrong."
4708240,4709240," Uh."
4709240,4710240," Definition."
4710240,4711240," And the value."
4711240,4712240," Will probably."
4712240,4713240," Not contain."
4713240,4714240," Anything."
4714240,4714240," But."
4714240,4715240," Uh."
4715240,4716240," The line number."
4716240,4717240," Will contain."
4717240,4718240," The place."
4718240,4719240," Where something."
4719240,4720240," Bad."
4720240,4721240," Has happened."
4721240,4722240," Um."
4722240,4723240," And."
4723240,4724240," What."
4724240,4725240," What bad."
4725240,4726240," Can happen."
4726240,4727240," During the parsing."
4727240,4728240," Let's actually."
4728240,4729240," See."
4729240,4730240," So."
4730240,4731240," We may."
4731240,4732240," Have."
4732240,4733240," A valid."
4733240,4734240," Type."
4734240,4735240," Right."
4735240,4736240," Something."
4736240,4737240," Is not."
4737240,4738240," A valid."
4738240,4739240," Type."
4739240,4740240," Right."
4740240,4741240," Something."
4741240,4742240," Is not."
4742240,4743240," A valid."
4743240,4743240," Type."
4743240,4744240," Right."
4744240,4745240," Something."
4745240,4746240," Is not."
4746240,4747240," A valid."
4747240,4748240," Type."
4748240,4749240," And another."
4749240,4750240," Thing."
4750240,4751240," Um."
4751240,4752240," We couldn't."
4752240,4753240," Parse."
4753240,4754240," Config."
4754240,4755240," Value."
4755240,4756240," As."
4756240,4757240," The."
4757240,4758240," Requested."
4758240,4759240," Is."
4759240,4760240," Yeah."
4760240,4761240," Essentially."
4761240,4762240," We can have."
4762240,4763240," Like."
4763240,4764240," A union."
4764240,4765240," So."
4765240,4766240," We have."
4766240,4767240," This."
4767240,4768240," Kind of."
4768240,4769240," Type."
4769240,4769240," Invalid."
4769240,4770240," Type."
4770240,4771240," That is."
4771240,4772240," Like."
4772240,4773240," The."
4773240,4773240," The."
4773240,4774240," String."
4774240,4775240," Of."
4775240,4776240," The."
4776240,4777240," We are."
4777240,4778240," Trying to."
4778240,4779240," Parse."
4779240,4780240," And."
4780240,4781240," The."
4781240,4782240," Type."
4782240,4783240," Which."
4783240,4784240," We were."
4784240,4785240," Trying to."
4785240,4785240," Parse."
4785240,4786240," And."
4786240,4787240," The."
4787240,4787240," Type."
4787240,4788240," Which."
4788240,4788240," We were."
4788240,4789240," Trying to."
4789240,4790240," Write."
4790240,4791240," While."
4791240,4792240," Parser."
4792240,4793240," Not."
4793240,4794240," Finished."
4794240,4795240," You do."
4795240,4796240," That."
4796240,4797240," You're."
4797240,4798240," In."
4798240,4799240," Full."
4799240,4800240," Control."
4800240,4800240," Of."
4800240,4801240," Your."
4801240,4802240," Loop."
4802240,4803240," Completely."
4803240,4804240," And."
4804240,4805240," At."
4805240,4806240," Any."
4806240,4807240," Point."
4807240,4808240," You can."
4808240,4809240," Just stop."
4809240,4810240," And."
4810240,4811240," Process."
4811240,4812240," These."
4812240,4813240," Things."
4813240,4814240," And."
4814240,4815240," The."
4815240,4816240," Parser."
4816240,4817240," And."
4817240,4818240," Permanently."
4818240,4819240," Damaged."
4819240,4820240," My."
4820240,4821240," Brain."
4821240,4821240," And."
4821240,4822240," I."
4822240,4823240," Cannot."
4823240,4824240," Program."
4824240,4825240," In."
4825240,4826240," Any."
4826240,4827240," Other."
4827240,4828240," Way."
4828240,4829240," And."
4829240,4830240," I'm."
4830240,4831240," Sort of."
4831240,4832240," Relearning."
4832240,4833240," The."
4833240,4834240," Program."
4834240,4835240," The."
4835240,4836240," Program."
4836240,4837240," And."
4837240,4838240," You."
4838240,4839240," Learn."
4839240,4840240," Program."
4840240,4841240," And."
4841240,4842240," I'm."
4842240,4843240," In."
4843240,4844240," The."
4844240,4845240," Program."
4845240,4846240," The."
4846240,4847240," Functional."
4847240,4848240," Programming."
4848240,4849240," Stuff."
4849240,4850240," And."
4850240,4851240," I'm."
4851240,4852240," Learning."
4852240,4852240," I'm."
4852240,4853240," Learning."
4853240,4854240," The."
4854240,4855240," Programming."
4855240,4855240," That."
4855240,4856240," I knew."
4856240,4857240," Before."
4857240,4858240," Haskell."
4858240,4859240," Yet."
4859240,4860240," Again."
4860240,4861240," So."
4861240,4862240," I'm."
4862240,4863240," Learning."
4863240,4864240," The."
4864240,4865240," Programming."
4865240,4866240," That."
4866240,4867240," I mean."
4867240,4868240," Actually."
4868240,4869240," Do it."
4869240,4870240," It's actually."
4870240,4871240," Very cool."
4871240,4872240," A very cool."
4872240,4873240," Language."
4873240,4874240," And."
4874240,4875240," It can."
4875240,4876240," Teach you."
4876240,4877240," A lot of things."
4877240,4878240," If you never."
4878240,4879240," Programmed."
4879240,4880240," In."
4880240,4881240," A."
4881240,4882240," Functional."
4882240,4883240," Programming."
4883240,4884240," Style."
4884240,4885240," I recommend."
4885240,4886240," To just."
4886240,4887240," Try it."
4887240,4888240," To learn."
4888240,4889240," Something."
4889240,4890240," New."
4890240,4891240," At least."
4891240,4892240," For that."
4892240,4893240," At least."
4893240,4894240," For that."
4894240,4895240," Uh."
4895240,4896240," So."
4896240,4897240," We're."
4897240,4898240," Trying to."
4898240,4899240," Parse."
4899240,4900240," Config."
4900240,4901240," Value."
4901240,4902240," And."
4902240,4903240," Yeah."
4903240,4904240," Let me."
4904240,4905240," Get rid of."
4905240,4906240," All of."
4906240,4907240," That."
4907240,4908240," Mm."
4908240,4909240," Mm."
4909240,4910240," Mm."
4910240,4911240," Mm."
4911240,4912240," Mm."
4912240,4913240," Okay."
4913240,4914240," Um."
4914240,4915240," So."
4915240,4916240," Here."
4916240,4917240," Is."
4917240,4918240," My."
4918240,4919240," Passa."
4919240,4920240," And."
4920240,4921240," Maybe."
4921240,4922240," We."
4922240,4923240," Need."
4923240,4948240," So, it's going to be some sort of a structure. Maybe pass a result. So, pass a result. Maybe. Something like this. It's just a pass a result. And remember if you put it here. I think you put it here."
4950240,4978620," So, and then we want to have some sort of like a union. So, pass a result type. Maybe we could introduce actually. Since it's a C++, we can do things like this."
4978620,4989180," So, this is going to be type. And in here, we can have a type as OK. So, this is the OK result."
4990520,5004920," Then, invalid type. And of course, you have to be screaming. Right? Invalid type. Yeah. And you can have something like invalid value as well."
5004920,5015100," Invalid value. So, you have invalid type. And then you have invalid value. And invalid value happens when you try and when you declare one type for the variable."
5015100,5020660," But the value is actually provided over different types. So, you cannot parse that value as that specific type."
5020660,5032060," Right. So, and we can just have a type of this situation in here. So, OK. Like when you fill it with zero, it's just, you know, it's just OK. So, everything's OK. Don't worry about it."
5032060,5057240," I don't even worry about it. Everything's fine. So, pass a result. So, on top of that, maybe we can have, maybe we're going to return definition, value and line, definition, value and line in the pass a result."
5057240,5064280," So, that sounds like a good idea. Definition. So, we need the definition, value and line number."
5064280,5080840," So, config value. So, config value. Right? So, parse config value. Right? Yeah, you can have config value and config value definition."
5080840,5087880," Config value. Right? So, config value definition."
5087880,5098240," Maybe it shouldn't be called type because we have a type of the configuration value. So, it's going to be a little bit confusing."
5098240,5103680," Let's actually rename this to status. Right? So, this is going to be the status."
5103680,5111920," And this one is also going to be the status. So, we have a config value definition and then config value, which is just a value."
5114560,5128880," And now, we need to have the strings for this entire thing. So, if it's an error. Right? If it's an error. Yeah, this thing has to be a union. Right? This thing has to be a union."
5132320,5138400," So, here we go. So, here we go."
5138400,5145600," Okay. So, in here, this can be something like parser, maybe parser, okay? Right? So, this is a parser, okay? And this is what we're going to store in here."
5145600,5150000," And it's going to be parser, okay?"
5150000,5168160," And then, maybe you're going to have something like parser invalid value. Right?"
5168160,5173520," It's going to be like this. And invalid value is going to be what?"
5175280,5179040," Invalid value is going to contain string view."
5179040,5184320," Let's start with the type."
5184320,5189040," Type name. Right? So, this is going to be."
5189040,5200240," Invalid type. And there we go. So, parser, parser, invalid type, invalid type."
5201760,5208640," Right? And then, we need to have something like struct parser invalid value. Right?"
5208640,5211040," So, it's going to be like value. You're going to have a status."
5211040,5220240," Then, you're going to have the expected type. Right? It's going to be config type expected type."
5220240,5226000," And then, it's going to be string view value. The actual value that you've got."
5226640,5234480," All right. And then, here, we're going to have a parser invalid and valid value."
5234480,5244080," So, you have a union. And depending on the status, you can basically dispatch between them."
5244080,5250880," Algebraic datatypes in C++. Who said that you can do that in C++? There you go. Algebraic datatypes."
5253840,5269920," All right. So, now I need to restructure all of that. So, what I'm thinking is that like parse config content."
5276000,5280960," What I'm thinking is that what if like I want you to have like a structure parser. Right? So, parser."
5280960,5288400," All right. What if I put all of these things inside of that structure parser. So, that way I won't need"
5288400,5300880," to, I don't know, prefix them with parser. Right? I can just have a result. Right?"
5302720,5316560," Then, invalid value. Invalid type. This. And maybe status could be also outside. Right?"
5316560,5324000," So, this could be also outside. And you can have all these things in here. Right? And when you're"
5324000,5332400," constructing the parser, you should give it the content that you want. You should give it the content that you want."
5332720,5341120," So, what's going to be the content that you want. It's going to be string view content. Right?"
5341120,5344640," String view content. And..."
5349840,5354560," And it definitely needs like a something like a next definition."
5354560,5360480," Maybe something like next. Right?"
5360480,5366960," And it's going to return you a result. Right? And the result okay returns you"
5366960,5371120," the definition and the value and so on and so forth."
5373200,5377680," So, I don't think it's going to be accepting anything. Right? I don't think it's going to be accepting anything."
5377680,5386880," Though, we need a line. Right? So, maybe the result is going to be actually also"
5386880,5391920," returning you a line number. Right? And if we're going to put in a line number in here,"
5391920,5397920," we have to put it to each individual structs in here. Right? So, this is the status. This is the line number."
5398640,5400320," This is going to be that. All right."
5400320,5412160," So, and that's basically what you have to do in here. And when you do next..."
5418640,5421360," The question is maybe we're going to be actually maintaining the..."
5421360,5434320," Yeah. What if we maintain... So, the line number actually starts from one. We can maintain"
5434320,5443440," the line number in here. And by default, the line number is going to be actually"
5445120,5451040," equal to zero. But I mean, it's like we're following zero initialization rule. And that means you can just"
5451040,5456000," allocate it in some sort of memory. Zero initialize it. And it's going to be a valid parser. Right?"
5456000,5463440," It's going to be valid parser. So, you can have a line number. And maybe because of that, we don't have to"
5463440,5472560," return the line number from here. Because you can just always grab the line number from the parser itself. Right?"
5472560,5486720," So, because that's the crucial thing in here. But you always go next and you can get the current line number."
5495200,5500000," All right. So, let's implement this function. So, this function is going to be just"
5500000,5507760," just that. Right. So, it also has a file path. And it doesn't need to know file path. The only"
5507760,5512960," reason why it needed to know file path is because it needed to report it. But now, whoever calls the"
5512960,5517840," parser knows the file path so they can report accordingly. So, we don't need to do that. So, it's"
5517840,5524080," even better design generally. It's just generally better design. Okay."
5524080,5534960," And here is the thing. Here is the thing. So, the first thing you try to do when you're calling for the"
5534960,5543520," next. Right? You get in the line. Right? You chop the lines. Well, it has to be called content. Maybe I can"
5543520,5549600," query replace lines with content like this. Okay. It's called only once. So, it doesn't matter. So, here's"
5549600,5555760," the line. Here's the line. And then you trim everything. And here is the interesting thing."
5557600,5574240," Here is the interesting thing. If line. Right? If line count is equal to zero, you have to repeat this"
5574240,5586960," entire process. You have to repeat this entire process by the virtue of copy-pasting. Okay. And what I'm"
5586960,5596400," thinking is that this looks like a job for do while. Doesn't it? I think this is a job for do while."
5596400,5603840," Okay. So, here is one version of this thing. It's going to be something like this. And the next one"
5603840,5608080," is going to be how do you implement that with the do while. So, we have something like this. You zero"
5608080,5620320," initialize it. And then you do do. And you just do this thing once. And while line count is equal to zero,"
5620320,5627760," you keep repeating that. So, because you need to try to do that at least once. Right? You need to try to"
5627760,5637200," do that at least once. And yeah, there you go. So, I think like this versus this. Who said that do while is useless?"
5637200,5653040," Who said that? It's going to be funny if there is a bug in here. Anyway. So, we also have to probably"
5653040,5658720," check first with them. We finished. So, how do we indicate that we finished parsing though? How do we"
5658720,5686960," indicate that? We can indicate it through results, I guess. So, we have a parser. Okay."
5688720,5697280," I mean status. Okay. You can have another one finished. You can have another one invalid."
5697280,5701600," Right."
5701600,5706320," You can have another one invalid."
5706320,5713760," And so on and so forth. So, finished is probably not going to have any particular"
5714480,5719440," representation. Right. It's not going to have any particular representation."
5719440,5723920," So, well,"
5723920,5728640," I'm just thinking who should be the zero one?"
5728640,5733040," Finished or okay?"
5733040,5738800," I think finished should be the zero one because yeah, zero initialization rule."
5739680,5745040," You take a result. You fill it with zeros and it should be valid result. And what kind of result"
5745040,5751680," should it be? It should be the most useless one. I guess finished is the most useless one."
5751680,5756240," I don't know. It's just like the general principle that I'm trying to follow. Right."
5756240,5760480," I guess it makes sense."
5760480,5763680," Finished. Maybe"
5765440,5770640," success. This one could be success. So, there's a finished success. Then you can have invalid type,"
5770640,5774640," invalid value. And here we can have something like success."
5774640,5780800," Success. I don't really like the okay. I guess we can just call success."
5780800,5789280," All right. So, this is a success. And again, we don't need to actually prefix them with anything in"
5789280,5793680," here. So, we just have status, success, invalid type, invalid, blah, blah, blah, blah, blah."
5793680,5803040," Though, what's interesting is that if you encountered, encountered the,"
5803040,5814640," the problem, if you encounter the problem. So, for example, you got invalid value and you try to call"
5814640,5823280," this thing again, right? Should we like sort of jam the whole parser and not allowed to do anything?"
5823280,5829200," That's an interesting question. That's another interesting question."
5833600,5839840," And because of that, maybe we should store these entire things, like this result stuff inside of"
5839840,5845600," the parser. It almost feels like the parser wants to like own these result things. You know what I'm"
5845600,5852800," talking about? It's almost like it wants to own them. I'm not sure if it makes any sense, but if it owned"
5852800,5859360," them, right, if it owned them, it would be relatively straightforward. I think it would be relatively"
5859360,5864640," straightforward. You could return the status. Why not? It could be rather convenient. So, for"
5864640,5880240," example, if status equal success, we try to do this entire thing. Like we try to parse next. Otherwise,"
5880240,5886640," otherwise, don't even try to do anything and just return the status. So, essentially, if you ever hit"
5886640,5894720," invalid type, invalid value or finished, right, if you hit any of those, it will just jam the whole"
5894720,5902000," parser and keep returning the same thing and it won't go anywhere. And because of that, because of that,"
5902000,5908160," finished should not be a right thing. Finished should not be a right thing."
5909440,5917120," Finish should not be the zero thing. So, because if you create a parser and zero initialize this parser,"
5917120,5924400," it will essentially automatically jam it. So, maybe the success should be the zero one and the finish"
5924400,5929920," should be the one and so on and so forth. Because in that way, you just create the parser, zero initialize"
5929920,5938000," it. And it's not jammed for the first attempt. You set its content to something, right? You set it to something"
5938000,5941760," and you can just continue doing this kind of stuff. I suppose."
5941760,5946480," All right. So,"
5946480,5951280," okay, I guess that makes sense more or less."
5952960,5967840," Okay. So, if status equals success, right, if status equals success, we're trying to get this thing."
5967840,5975120," Right. So, we are taking the line, we're parsing the line and it's kind of dangerous because you have to"
5975120,5984640," be super careful. While line is equal to zero and content count greater than zero, you keep doing that,"
5984640,5992960," right? You keep doing that. Then, if after this entire loop, if after this entire loop, the content"
5992960,5998400," is equal to zero, right? If content become equal to zero,"
6002560,6009200," I mean, this is actually quite dangerous. Okay. If after this entire stuff, line count is still"
6009200,6018480," equal to zero, we finished. So, we set status to finished and return the status. That's it. Nothing"
6018480,6025920," much to do. Nothing else has to be done in here. Okay. So, we'll prepare the definition, right? We'll prepare"
6025920,6044160," the definition. And since we sort of own, maybe success in that particular case has to be actually one of"
6044160,6050000," these things. Yeah, I was actually in line this entire stuff, but I think success is also sort of redundant."
6051120,6057680," So, we have type invited type. Yeah, if the status is one of these things, you'll have to look into"
6057680,6061440," these structures. So, we don't union them, we don't compress them with union, but I don't think it's that"
6061440,6070000," important. All right. So, in here, I'm basically going to be resetting the definition,"
6071200,6077520," right? And in the definition, do I set the definition? Okay. So, essentially, I don't even"
6077520,6089680," need to do that. I reset the name. Then, I take the type name. I think I would call it type name rather."
6089680,6095680," So, this one is going to be called type name. And it sets it to the definition type. And instead"
6095680,6102480," of panicking, what I'm going to be doing, I'm going to be setting status to invalid type, right?"
6102480,6110160," Invalid type. And inside of the invalid type, I'm going to be setting the name to that specific name."
6110160,6115760," And then, I can just return the status right away. Then, I can just return the status. So, when I'm trying"
6115760,6123520," to parse the value, right? I'm not trying to parse the value. I'm just doing that. All right. So, this is"
6123520,6138480," going to be the value. All right. And it's not particularly convenient. Speaking of, I don't think"
6139360,6147360," care. We don't have a callback anymore. We don't have a callback. So, in here, every time I take the"
6147360,6160640," next line, by the way, I need to increment line number. Line number plus one. So, we have a line."
6160640,6168160," We just get the next line. If we couldn't get it, we just finished. So, tab name. I want to kind of"
6168160,6176000," refactor this entire thing. So, where is this function? Yeah. I wanted to return config value"
6176000,6183840," via the arguments in here. All right. So, this is going to be that. And here, I just want to return"
6183840,6190000," the boolean to indicate that you couldn't get the value. That's what I want to do here. So, that will"
6190000,6193840," require a lot of refactoring, but it's not that part to do."
6197840,6204480," Okay. So, once we got that. So, I'm going to be actually having"
6206640,6222880," string string value. Okay. So, this is the actual value, but we set the value. Yeah, we already have a"
6222880,6228480," value. So, we don't need that. So, that means I can do something like parse-config-value-sv,"
6228480,6236320," div-type and a pointer to the value. Yeah."
6236320,6246320," And if this thing, if this thing failed, we instantly say status-invalid-value."
6246320,6252080," Then we take invalid-value expected-type. I think it's what it's called, right? Expected-type. So,"
6252080,6256720," and we do have the definition of the type, right? So, here is the expected-type."
6257760,6270640," And invalid-value. I think this is the value, value-sv, essentially, right? So, this is the value-sv,"
6270640,6280960," and then we just return the status, right? So, after that, we just return the status. So, we successfully"
6280960,6288400," parsed, like, one thing, and that's pretty pogue. So, we have the content, you have the line,"
6288400,6296160," and I think the parser became a little bit simpler, and I guess that's, that's pretty much it. I didn't,"
6296160,6300960," I didn't think we need anything else. So, obviously, this entire thing doesn't compile because it has"
6300960,6306240," a lot of compilation errors, and you probably noticed me making a lot of compilation errors,"
6306240,6311680," but that's the point, because we are programming in a statically typed compiled languages, and if you"
6311680,6317120," make any mistakes, this language will tell you, and you just have to go through all of these mistakes"
6317120,6328000," and fix them, right? Isn't that convenient? We had this kind of idea for decades, since, I mean, I'm probably"
6328000,6340000," since 60s. But then TypeScript came out and everyone was like: ""Whaaaaaa!"""
6340000,6345120," All right."
6345120,6356240," Let's try to compile this shit. So we're gonna go on the compiler assist refactoring session."
6356240,6360240," Basically I'm just gonna go through the compilation errors and fix them until they're fixed."
6360240,6367680," All right. So here is this thing. All right. So this function no longer returns maybe or anything"
6367680,6375040," like that. Right. It returns a config value. So maybe I'm gonna actually rename this thing to"
6375040,6381280," result and get rid of the result. Right. So let's see what's gonna happen. So this one has to be like"
6381280,6386320," this. Another one. Another one. Another one."
6386320,6395680," So in here we just return I suppose just true. And what's interesting is that maybe we also"
6395680,6405280," could replace return... Oh! In C++ this is a valid code, right? Wait a second. So if I have something like"
6405280,6412080," main C++. Right. And I have a boolean F function, right? And I return something like this."
6412080,6416800," And maybe I can include"
6418960,6429840," iostream. Right. And just std_cout. F. Add std_endl. Right. Is that the correct Z++ code?"
6432880,6437920," Oh! It is correct C++ code. You know what actually bothers me in C++ is that"
6437920,6447040," when you try to print boolean through Cout it doesn't print false or true even though they do have"
6447040,6453680," an opportunity to correctly dispatch at compile time by the type but they just decided not to."
6456160,6459600," I don't know how exactly it's implemented but it's just like something that bothered me in C++."
6459600,6465520," You have a technical ability to just do that because you have a stronger type system,"
6465520,6469840," you have compile time dispatching between the types, you could have just dispatched on boolean"
6469840,6475280," and print true or false. Maybe... I don't know what was the reason. Maybe they were trying to avoid some"
6475280,6484960," common leg shooting, some common leg shooting because they also need to interact with C and C used integer"
6484960,6490400," as the booleans and it's just like... I guess there's some sort of like a lore behind this,"
6490400,6495120," behind this thing. But anyway... Okay."
6495120,6504400," So let's actually continue compiling this entire stuff. So what do we have in here? Okay. So what is"
6504400,6508240," this function? I think we don't need it. Yeah, this is the function that I was trying to get rid of."
6508240,6512320," Yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes."
6512320,6517600," Okay. So yeah, we have a parse config and I think it has to be defined"
6517600,6523280," after... Wait, what did I remove?"
6523280,6533520," So parse config value. Okay. So parse config value and... Oh, okay. I think I kind of..."
6533520,6541840," I removed more than I needed. All right. So here's the parse and here is the status. And status, I suppose,"
6541840,6547120," because of that, has to be defined like somewhere here. Right. It has to be defined somewhere here."
6547120,6553600," I only have 10 minutes. I learned yesterday that I shouldn't stream for too long. Otherwise,"
6553600,6561440," processing the video on YouTube takes very long time. So if I stream too long, I already shifted the time by which I can upload"
6561440,6566800," something and the processing up like shifts it, offsets it even more. So it's just like I"
6566800,6569840," release the video at night or something and it's just like..."
6569840,6576880," Okay. So here's the parse config content. So"
6579520,6586800," that's essentially what we're doing here. So instead of doing that... All right. So instead of doing that,"
6586800,6592800," we have to do slightly different things. All right. We need to organize the parse. So it's going to be parser"
6592800,6605520," parser, uh, content, content, vars, conf content. That's how we create a parse now. And while parser, uh, next,"
6606800,6610720," uh, while parser, next, equal, um,"
6610720,6617440," equal success, right? While it's equal success. Um,"
6617440,6625600," Oh, another interesting thing is that since success is zero, right? Since this is zero, we can just do"
6625600,6634160," something like while, which looks weird, but okay. So we can put it like that. Uh, or next, uh, what are we"
6634160,6648240," doing? Right. What are we doing? Uh, we have to take dev lines. Okay. Uh, so we have config value devs,"
6648240,6657040," then we have config dev lines, and we take the definition name. Okay. So here, uh, I'm going to be"
6657040,6662960," doing it like that. And the definition is the part of the parser. So here's the parser definition. So here's"
6662960,6671920," the place. Uh, and if this entire thing doesn't have, have a proper value, right? We are panicking,"
6671920,6681200," right? Uh, we are panicking. Uh, and in here, it's actually okay to panic. It's actually totally okay to"
6681200,6687760," panic. And in here, I'm just setting this thing, right? So it's going to be config values, push, uh,"
6687760,6696880," pass a value, pass a definition, uh, pass a line number. And we don't need that stuff anymore. As far"
6696880,6704880," as I can tell, I think we don't. And after that, um, after this loop was done, we need to take a look at the"
6704880,6712080," pass a pass a pass status. If it is, um, we can actually switch up on that. Uh, that's the thing,"
6712080,6719200," right? So it could be like several things case, uh, pass a invalid type. So you can have an invalid"
6719200,6728320," type. So we have to print it accordingly. Uh, you have to print it accordingly. And, uh, we can also panic."
6731840,6748080," So we can say something like varsconf, uh, varsconf line number. Um, uh, something like passer invalid type."
6748080,6761440," Name is not a valid type. I guess that's it pretty much. I guess that's it."
6762800,6770800," So panic never exits by the way. So should we find a passer invalid value, right?"
6770800,6786160," And in here we just panic varsconf line number. Um, could not parse this passer invalid value."
6786160,6797520," Um, um, invalid value, um, invalid value, uh, value could not parse this thing"
6797520,6810800," as type, uh, as this thing. And we have a way to convert type, uh, yeah, config type name."
6811120,6821680," Yeah. Config time name. It's a passer invalid invalid value expected type. Yeah."
6821680,6826400," There we go. And if we have something else like pass, uh, um,"
6828480,6833280," success or finished or maybe we're going to have like a default, uh, we're going to just ignore all of"
6833280,6842400," that. So, well, to be fair, if you've got passer, uh, passer success, right? Success."
6843120,6852880," This is straight up unreachable, right? So unreachable, uh, passer success, right? Because"
6852880,6857840," you shouldn't be, you shouldn't be seeing that. And, uh, in case of passer finished, right? Passer"
6857840,6862880," finished. You just ignore that because that's precisely what you're expecting here. So yeah,"
6862880,6867440," that's it. There's nothing much to say, right? If it's invalid type or you report it as invalid type,"
6868080,6875360," value, same thing. If it's success, you report it as a success. And if it's finished, uh, you do nothing"
6875360,6878720," because that's precisely what you're expecting here. But this thing should never be reached."
6878720,6885680," This thing should never be reached. Okay. So content, uh, designated. Oh, oh,"
6885680,6891360," fuck. Shit. Fuck. Damn it. Okay. So maybe for now, I'm going to just do it like that."
6892400,6901040," It would be better to have a constructor of some sort, right? Uh, so pass, uh, success. Okay. What"
6901040,6908080," else do we have? Uh, it's a parcel. Yeah. It has to be something like this parcel or what not. Uh,"
6908080,6919280," awesome. Awesome. Awesome. And I think, yeah, config industry actually successfully loaded. All right. So"
6919280,6928080," we are in the main game now, we are in the main game now. Cool. Uh, so, and we need to parse this stuff"
6928080,6939200," as well. So let me actually move, uh, the code from config indexer. All right. Config indexer to loader."
6943200,6951120," All right. So we're moving it to a, what the fuck has happened? Okay. Okay. So, and in here we're usually"
6951120,6962080," using config file content owner. Okay. Uh, config file content owner. And in here, uh, we're just iterating"
6962080,6968800," and still we see a success. All right. So here's the success and I might as well just use this entire thing"
6968800,6976640," in here, right? And, uh, similarly we probably, yeah, there's a little bit of duplication in here"
6976640,6981520," with this switch case and stuff like that, but I don't know, at least it gives us an opportunity"
6981520,6987600," to like to have control of that and the price itself doesn't have to have any way of printing, uh, errors"
6987600,6993280," and whatnot. All right. So that's precisely what I want to see in here. Uh, right. That's precisely what I"
6993280,7005120," want to see here. And, uh, uh, here we have a definition name and this one's going to be pasta. Uh, uh, uh,"
7005120,7018400," yet again, maybe another one plus, uh, uh, okay. So here's the config values. This is the pasta"
7021600,7039200," and again, almost done. Oh, and this one is slightly different. So what's the file path?"
7039200,7046960," I can just replace it with a file path, I suppose. Uh, uh, where's conf path, file path,"
7046960,7062000," cool. I think it's working if I try to run this entire thing. Okay. I refactored the way we parse"
7062000,7074800," things. Um, and with this kind of way reporting errors in a reliable fashion from the parser should"
7074800,7080560," be a little bit more convenient. Uh, but unfortunately we are running out of time. We're running out of"
7080560,7087120," time. So I'm going to wrap up and just put it to do maybe like to do is not particularly required. Uh,"
7087120,7093440," I think I'm just going to make a pull request and, uh, not close the specific issue, right?"
7093440,7100400," So here's the parser. One of the things probably that's worth making is actually introducing the, uh,"
7100400,7105680," translation unit for parser HPP because now parser HPP doesn't have any templates, right? It doesn't"
7105680,7111360," have a single template, so you can just put it, put some things into CPP. You don't have to worry"
7111360,7115760," about that, which is, which is nice. Maybe that's precisely what I'm going to do. First, um,"
7115760,7131040," 68, uh, turn parse config content into, uh, struct with methods, right? Because in that case,"
7131040,7135280," it's a little bit easier to work with. And let's introduce something like config,"
7136320,7142960," parser cpp and let's input. Maybe it's going to be too much time because I don't know how much time"
7142960,7147280," it will take. I'm probably not going to do that. Okay. So I'm going to just create a pull request."
7147280,7149760," I'm going to just put, create a pull request."
7149760,7161200," Uh, did I push it? I forgot to push it. Okay. So let's push this thing in here. So yeah,"
7162080,7167840," apparently to make it not crash every time you encounter some sort of error in the configuration"
7167840,7175920," requires a lot of refactoring. You know what they say? Just refactor until the change becomes trivial,"
7175920,7182320," right? So you're not implementing features. You're not fixing bugs. You're refactoring until the fix is"
7182320,7194560," trivial. So, um, yeah, so today was a pretty productive stream relatively. Um, we fixed the"
7194560,7201360," particles after refactoring the, um, the renderer. These particular particles were broken, but now they"
7201360,7207600," work again. And this is actually super cool. I'm super happy about that. And we started refactoring the"
7207600,7215120," passer. Uh, but unfortunately we ran out of time, so it is what it is and it isn't what it isn't. Uh,"
7215120,7221280," thanks everyone who's watching me right now. I really appreciate it. Have a good one and I see you all"
7221280,7228320," tomorrow. Tomorrow we're going to continue doing this because tomorrow is Sunday, the day of the sun"
7228320,7233680," and we're developing this game for the whole weekend. So tomorrow we're going to continue working on this"
7233680,7238800," sparsely thingy and, uh, you know, fixing this entire thing should be relatively trivial. So my,"
7238800,7245040," my goal is that when I make a, make a mistake in the, in the configuration, right? Make a mistake in"
7245040,7251360," the configuration. Yeah. I, it just should not crash the whole game. Like it would be nice if it,"
7251360,7256400," if it didn't crash the whole game just because of that, right? Because sometimes I can make a mistake"
7256400,7260800," and I don't want to lose all of my state of the game and stuff like that. You know, you know what I'm looking"
7260800,7272000," but anyway, uh, thanks for watching, uh, um, and I see you all tomorrow. Love you."

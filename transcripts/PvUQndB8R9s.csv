start,end,text
960,6400," looks like we're live hello everyone and welcome to yet another recreational programming session"
6400,13920," uh let's make a little bit of an announcement and officially study stream as usual um as usual"
13920,21360," as usual red circle uh live on twitch and what are we doing today on twitch"
21360,28880," adote television website today we are learning uh fortran uh and i'm gonna give the link to twitch.tv"
28880,36640," and i'm gonna ping everyone uh who's interested in being pinked and there we go the stream has"
36640,43600," officially started how about that uh how about that so what we're gonna do today today we're gonna learn"
43600,49440," uh fortran and the reason why we are learning fortune today is because it is kind of related"
49440,54640," to the deep learning framework that we've been developing for quite some time for two months"
54640,62560," already so as i can see in the in github right so two months so uh essentially what i want to do i"
62560,69200," want to be able to use the libraries such libraries as bless uh right so have you guys heard about bless"
69200,77680," it doesn't okay bless and le pack le pack so the original sort of like reference implementations of"
77680,83600," these libraries are in fortran unfortunately like this website actually blocks my ip right so i won't"
83600,88160," be able to go there but maybe i'll just like pre-download this library for for the next stream"
88160,94240," and stuff like that so and to be able to effectively use this kind of libraries i think it is kind of"
94240,102080," important to at least be familiar with a fortran programming language right so and that's basically the"
102080,107600," goal for today just learning a little bit of a fortran so i don't remember if i ever programmed in fortran"
107600,119120," so yeah so here's the thing um people keep asking me how many languages do you know right so i tried so"
119120,128000," many languages that i don't remember if i ever tried fortran or not like that's how many of them i uh i tried"
128000,134000," like i just like i don't remember seriously like i i tried too many of them it's just like because"
134000,141520," languages are the same right so they basically rehash and um the same ideas and reuse the same ideas so i"
141520,146880," don't really see much difference between them uh so i don't remember i think i did something maybe for"
146880,152480," advent of code i think i think i did something for advent of code but apart from that i don't remember doing"
152480,157920," anything super serious in that language right so and i certainly do not remember anything from that language"
157920,164480," that's for sure so yeah let's go ahead and try to maybe write hello world right uh write hello world"
164480,171680," uh so let's go so the usual thing that you do when you learn any language you write a hello"
171680,179200," a world or hello seaman as we like to do that fortran so i'm going to create a fortran and uh what's the"
180480,188160," extension of fortran i think uh let's actually go to wikipedia uh fortran uh fortran w"
188160,196080," so usually they give you the oh it's f oh okay i can't remember that there's also four"
196080,204640," f90 is there f69 that would be actually nice if it was f69 so okay main.f so it already automatically"
204640,210320," recognized that it's a fortran uh okay that's cool uh you know what i'm gonna do i'm gonna just like save"
210320,217280," this entire thing and i'm gonna try to compile if i remember correctly um so the one of the like open"
217280,224400," source uh compiler for fortran is gnu fortran or g fortran uh so and this is probably what we're going"
224400,229520," to use today right i know i know that there are several implementations of this compiler uh but i'm"
229520,234880," going to use the one that's available on my machine uh so let's go ahead and just try to compile this"
234880,242400," center i think main dot f and see what it is going to tell us if we just feed it an empty file all right"
242400,249440," so undefined reference main that's actually very cool so it already yeah that's funny an empty program"
249440,257440," in fortran compiled but didn't link it compiled but didn't link this is actually kind of interesting so if"
257440,263040," i try to do the same thing with c is it going to be the same uh the same situation uh why did it save it"
263040,268000," sometimes i just press something that makes it save the compilation buffer i don't know really i don't"
268000,275680," really know why so if i like literally create an mtc file and just do gcc main dot c uh it's kind of the"
275680,284800," same situation um never thought about that actually never thought about it because people rarely try to"
284800,292800," compile and empty files right so usually it doesn't make sense um so i suppose we need to create a"
292800,298800," procedure right we need to create a procedure but i don't really know how to do that okay so this is a"
298800,305440," very old fortran i suppose simple fortran 2 program and i'm pretty sure this kind of thing is not going"
305440,313280," to work anymore uh i actually wonder if i just like literally look at this uh emacs actually still compiles"
313280,318400," i mean highlights this entire thing but this looks like very freaking old right so it reminds me like"
318400,327120," this basic style um references or labels where you just like write number as a label so then later you can"
327120,332160," go to uh to one of these labels but i don't think they're actually going to to any of the labels but"
332160,338240," yeah it's actually quite surprised that emacs recognizes all that and i wonder if fortran will"
338240,344160," be able to do that as well let's actually try to compile the same oh yeah it cannot compile very old"
344160,350480," fortran right it cannot compile very old though emacs does recognize this kind of thing um all right"
351760,358960," so uh let's go and recreate this thing one more time uh and see how do you create a procedure"
358960,369360," uh so so this is this kind of stuff oh that's literally hello world you have to create a program"
369360,375840," hello it's it's almost like a pascal uh it's almost like a pascal uh so let's go ahead and"
376640,383680," revert this entire thing right so i have to say program uh hello let's actually call it main and"
383680,391200," then you have to say end program and emacs does not automatically indented uh but what if i put my"
391200,401600," it doesn't automatically indent it so i have to do that which is wait a second okay what one two three four"
401600,410480," five okay the letter e has a special meaning if it has five spaces in front of it"
410480,422720," i don't know if it has anything to do with like an actual fortran or is this this is just like a bug"
422720,430240," of the syntax uh but this is kind of fun right uh i wonder if i can just like try to compile this entire"
430240,437840," thing is it going to work um so okay non-numeric character in a statement label one"
437840,445680," huh so there is some sort of like an implicit label one in here and you have a non-numeric character"
445680,453600," which is a suppose new line what if i put new line in here right what if i put new line in here"
454160,463440," and uh is it still go yeah it seems to be uh what if i put number in did you notice that wait wait a second"
463440,472560," i put my uh cursor in here and i just press one and this is what it does"
475280,481920," so it yeah so essentially it still supports this like a very old style uh number labels"
481920,487920," right and emacs also recognizes that and it just like auto indents everything and how many spaces do"
487920,493360," we have in here one two three four five well it's not really five but i mean yeah that's a little bit"
493360,497760," weird okay so what if i just leave this thing in here and try to compile this entire thing it's"
497760,502720," still it says it like that all right so i'm just trying different things right so i'm just trying"
502720,508720," to see if the compiler can like literally tell me how to use this thing so to write hello world we have"
508720,515440," to do print star i have no idea why it has to be star uh but you have to put star in here and then hello"
515440,526560," world okay so is indentation important i wonder so then a comma hello world is it going to work uh no it didn't really work"
527760,535520," one two three four five uh maybe print something like this do we have to put semicolons in there"
535520,541760," uh i'm not actually sure and classified statement"
541760,556800," we're already off to a great start wait a second what if i just copy paste this entire thing like so"
558080,564160," uh and then try to it it doesn't work actually it literally doesn't work"
564160,574480," uh well okay so let's try to google out fortran so i know that there is a website fortran uh"
574480,579200," length right that has tutorials and stuff like that so let's actually go there because i want to try to"
579200,586560," understand what exactly am i doing wrong uh like what precisely am i doing wrong uh so there's some"
586560,592480," tutorials in here a quick tutorial okay so like we we need to get past hello world we need to get past"
592480,600320," at least hello world okay so here it is that's how it's supposed to be program uh hello and then"
600320,610400," we just have to do that and classified statement at once so it simply doesn't work um f90 oh this one is"
610400,617360," actually very interesting maybe i kind of remember this thing that the compiler behaves differently"
617360,624400," depending on the extension you use right because there are several standards of fortran that are kind"
624400,630080," of backward incompatible right they're kind of backward incompatible and because of that uh the actual"
630080,637360," standard is determined by the extension so you can sort of link uh several fortran source codes uh written"
637360,642800," in different standards or something like that i kind of vaguely remember that uh right so let's actually do"
642800,653120," the following thing let's rename uh the extension to 90 right and try to compile it with this i was right holy"
653120,673440," so that means f is sort of like older or something i think um that is so weird like"
673440,681040," yeah but if you rename it back to that uh you you won't be able to compile this into i think wait a second right so"
681040,687440," uh you're just not able to do that at all but what if you put like a label in here maybe that's what"
687440,693120," it wants maybe it wants a label uh no doesn't want a label right so i suppose we're going to be using the"
693120,698720," the standard from 90s right so we're going to be using the standard from 90s all right so nice to know"
699440,705680," that's pretty cool uh that's very funny and it says hello world but for some"
705680,708640," why did you put the space in here"
708640,718000," but what what i didn't put the space in there why the would you put the space in there wait what"
718000,726560," is that because of this but by the way what is this star even what is the star why is it not just print"
726560,733920," hello world why does it have to be star like just just because just like there's no reason to have this"
733920,742000," star like what is it uh missing leading left parentheses in form and string at no you're missing star"
742000,747440," why when i remove the star you're telling me about missing parentheses what kind of"
748400,749920," what kind of error messages is that"
749920,765680," but if i put star in here it compiles everything correctly but then when i run this thing"
765680,768880," it has an extra space in front of it"
775760,781920," so far this language feels like just arbitrary like nothing makes sense like why"
781920,792000," why uh try parentheses uh okay so you mean i should try something like this"
792000,794960," no"
794960,802160," so parentheses don't work so chat doesn't know what they're talking what they're talking about as usual"
802960,809360," all right so i wonder if this is because of this space uh right so let me let me see"
809360,815760," okay so it always puts this space in front of this thing and i suppose it's not a bug"
816400,823760," um right it's a feature so you just have to suck it up i suppose you just have to suck it up all right"
823760,829280," so yeah we're going to be using this thing to to learn uh i wonder if we can just like"
830560,840240," uh so here is the yeah so this is what we're using uh this is what we're using uh now uh let me let me see"
840240,846000," so this is the references and this is from where we're learning everything uh all right all right all"
846000,851920," right so this is just hello world and by the way look at that it doesn't have a space in front of it"
853280,860480," this is a lie like why are you lying why are you always lying oh my god"
860480,868880," okay so how do we define a goddamn variables so yeah variables are stored information that can be"
868880,876000," manipulated by the program blah blah blah there are five built-in data types in portran integer real"
876000,883920," complex character for text data and logical for data that represents boolean true or false so fortran"
883920,887360," doesn't have boolean it is called logical"
887360,892240," declaring variables okay variable"
892240,903120," so you first put the type of the variable and only the name of the variable"
906000,916960," okay uh implicit none so what the hell is implicit do they even explain what the is implicit um"
916960,923920," always use implicit noun statement at the beginning of each program and procedure implicit typing is"
923920,928720," considered bad practice in motor programming since it hides information leading to more program errors"
930080,940560," implicit typing so oh it had like an implicit typing uh all right so is that is that it is there any more"
940560,948400," information on how to right so node the additional stamping at the beginning of the program implicit none"
948400,953040," this statement tells the compiler that all variables will be explicitly declared"
953040,958800," without the statement variables will be implicitly typed according to the letter they begin with"
960080,969520," it's there any more uh what what what the hell is this language is this like an intentional joke or"
969520,971920," like"
971920,983280," what the fuck is this shit it doesn't it doesn't make any fucking sense even by the standards of 70s it's like a"
986320,988080," it's a fuck"
988080,996320," is this an intercall this is an intercall joke right you know the language that is like esoteric language"
996320,1001280," that is intentionally designed to piss you off that's one of these languages right this could not be a"
1001280,1008400," real programming language right it's just like it's just to piss you off it's oh it's from 50s i'm sorry"
1013360,1019440," right so it's gonna be typed according to according to the first letter and it may not work on tuesdays"
1019440,1029200," because fuck you that's right so it's it's one of this language it must be uh right it must be one of the sling"
1032080,1035040," and people are not running to write shit in it like what"
1035040,1046000," um okay so that is very interesting uh so what that means let's actually go here and and see what's"
1046000,1056800," going to happen so we can uh define an integer integer amount right is it going to work if we try to okay"
1056800,1064960," so it works after we try to compile it i wonder if i can just put amount in here without any initialization"
1064960,1073280," okay and it's different every time because it's not initialized all right that's already something"
1073280,1083840," can i can i now say that amount is a 69 i can wait why does it always put the spaces in does it try to"
1083840,1091920," fit this entire thing into a certain width so this is 12 characters and if i uh how do i comment out"
1091920,1102240," things uh if i put hello world uh like this it's 13 characters uh right so"
1103440,1108320," it's 14 so it tries to fit it into certain width probably like"
1108320,1117040," all right so this is the amount okay and here is an interesting question so what if i just like"
1117040,1121680," remove the definition of the of the type is it going to work no it doesn't really work"
1121680,1129760," uh right because how do you do dynamic implicit typing uh how do you do implicit typing do you just like"
1131120,1137360," say 69 no this is not how we do that i'm really interested so they're telling me don't use that"
1137360,1142880," feature it's bad you know what that means chat you know what that means when somebody tells you don't"
1142880,1152640," use that feature you know right you use it right so fortran implicit typing uh example so i i want to"
1152640,1159680," see how this feature work why the do you tell me not to use this feature you i'm gonna use it right so i want to"
1159680,1166400," discover myself why it is bad right imagine somebody telling you how to write your programs this"
1166400,1173360," fucking casting uh all right so you just do all right so you essentially do it like that easy peasy"
1173360,1184960," and it recognized it as float what if i what if i put like s in there it's still flow oh i mean still"
1184960,1192080," flowed yes how like what does it correspond to what does it correspond to is there any table that actually"
1192080,1198560," tells you uh what these variables mean right depending on the first so they say that it depends on the first"
1198560,1206160," character variables starting with x y and z are complex variables starting with c s are characters"
1206160,1213280," with lengths of four and all other letters have default uh default implicit have their default implicit type"
1214240,1216400," so if i call this thing x"
1216400,1223920," it's not particularly complex what if i say it's c"
1225920,1244560," so you have a bunch of implicitly defined variables for you already right yo i see what this feature is"
1244560,1258160," about um implicit is that yeah yeah so essentially by default fortran gives you a bunch of predefined"
1258160,1262000," variables that you can use and they have predefined types"
1264720,1271760," this is this is kind of cool isn't it right"
1271760,1281120," right so you're if you're doing math stuff and science stuff you're quite often going to predefine"
1281120,1288000," x y and z with the same type and stuff like that uh there's something to that well i mean i"
1288000,1293600," can see why people may not want to have this feature right i can see why people may not want"
1293600,1298880," to have this feature but at the same time if you use this language as sort of like a specialized"
1298880,1307520," language for like science computing in 50s it does kind of make sense right especially if you uh writing"
1307520,1313680," shit in the punch cards right so you you just like don't want to spend too many characters"
1313680,1320640," but if you want you want to actually uh like write compact programs why would you have such a long"
1320640,1325360," like keywords and stuff like that so it's also making sense but but but i see what it's all about"
1325360,1331200," right so i see what it's all about and i see why people may not want to have that uh right but it was"
1331200,1336640," important to try that feature out i think i think it's important to try that feature out and they say"
1336640,1343520," that it's about the variables that start so that means i can say uh x your mom"
1344480,1353200," and if i remove implicit none it will work so it not only predefined a bunch of like variables it"
1353200,1358800," predefined anything that start with these specific characters and stuff like that but what if i do just"
1358800,1365920," like your mom oh it always pretty fine i see what's going on right so i see what's going on uh"
1367040,1377600," right so see yeah it still looks like that but okay so now we know why you should probably do implicit"
1377600,1383280," none right so now we do kind of understand so i'm going to put that in the description in the references"
1383280,1391520," so this is one of the things rip tutorial.com rip tutorial i'm pretty sure all of that is generated by"
1391520,1397920," chat gpt right so all of these websites um i think we need to acknowledge some subs chats"
1397920,1403520," right so we've got some subs let's quickly acknowledge all of these awesome people uh so"
1403520,1411920," where is the so 22 minutes ago uh all right fabio hbf thank you so much for um tier one subscription"
1411920,1416560," sustained cruelty thank you so much for twitch prime akoya here thank you so much for tier one with"
1416560,1421440," the message fortran stream better than fortnite stream i actually never played for train i don't"
1421440,1427520," think it's going to work on my machine uh marks 77 thank you so much for twitch prime and yoink 2000"
1427520,1435440," uh thank you so much for twitch prime with the message at sodium a pogin a pogin okay so yeah"
1435440,1444240," we want to just do uh implicit none and then we want to define shit like integer x and then we want to print"
1444960,1452880," print x and then we want to initialize uh x with 420 and everything seems to be working so i'm getting"
1452880,1458240," the gist of this language i think i'm getting the gist of this language fortran code is keys and sensitive"
1458240,1464720," just like pascal all right that's cool standard input output okay so this one is interesting because"
1464720,1469760," i really want to understand how the formatting works uh in our hello world example we're reading text to the"
1469760,1476640," command window this is commonly referred as the writing to standard output or stdio we can use"
1476640,1481520," the print statement introduced earlier to print variables values to std out okay so we've already"
1481520,1487520," figured that out so there's no nothing new in here but i wonder if we can do something like uh x"
1487520,1494560," right and it's is it going to like actually yeah it is going to like format it in a certain way right i was"
1494560,1501120," kind of expecting uh this thing to do that uh integer y and i wonder if i can do this kind of stuff right"
1501120,1507040," 69 420 so then i can say uh something like this can you do that yeah i can"
1507040,1514800," this is actually kind of comfortable if you think about it right i can see myself using that for some"
1514800,1521280," scientific computations not bad okay can i also like automatically initialize this kind of stuff"
1521280,1529120," uh so it doesn't like some uh yeah you can't do it like that all right so that's fine so we can"
1529120,1536800," initialize it not bad not bad so in a similar way we can read values from the command the command window"
1536800,1555440," using the read statement aha please enter your age your age is this is like basically software 1.0 uh"
1555440,1560960," example of that neural network that tells you your age based on your age do you guys remember"
1562960,1568480," there was this is my favorite meme but somebody was training the neural network to basically predict"
1568480,1575280," your age based on your age and it had like a 98 percent of like success and doing that this is"
1575280,1581840," basically that but from the previous century uh right so you can tell somebody's age based on their"
1581840,1587600," 97 accuracy but this one by the way is going to have 100 accuracy"
1589120,1596000," so even though uh that approach is using uh artificial intelligence it's actually less accurate than the"
1596000,1603840," previous age technology so we're literally going backward we're literally going backward all right"
1603840,1612800," so let's actually try to write this program right so i'm going to age f90 program h uh and program h"
1613680,1620960," all right so and we're going to say implicit none implicit none i'm going to define the h uh which is an"
1620960,1626960," integer i do have a reflex to actually put type after uh after this entire thing but you have to put it here"
1626960,1638000," first uh all right so and let's actually print something like hello uh what is your h and then we have to"
1640480,1649040," what the f why i still haven't figured out why you have to put star in here but now here you have"
1649040,1660080," to put double star and just like what is all of this shit um what is all of this shit oh people asking"
1660080,1667760," how did i swap the words can your vim do that can your ring do that i don't think so"
1668320,1678960," haha so essentially what i pressed i pressed um alt basically m t right so uh we can even take a look"
1678960,1686720," at the bindings right if you press uh alt t this is transpose words so this is a standard emacs function"
1686720,1691920," and it transposes the words uh i wonder how many other functions that start with transpons we have"
1693440,1704080," transpose you can transpose words you can transpose sex you can transpose regions it is actually kind of"
1704080,1713520," interesting so uh let me let me just put something in here and i'm gonna maybe have a couple of um"
1714400,1725040," transpose regions i mean transpose regions i mean hmm transpose ah no i thought to transpose paragraphs"
1725040,1732480," uh we can transpose lines yeah there's transpose lines let's why are you trying to say"
1735200,1745840," transpose regions transpose regions transpose regions overlap can you have several regions is that a"
1745840,1751120," thing you can do in emacs i didn't know that that's not the point of today stream but that's rather"
1751120,1760080," interesting anyway all right so we have to do this weird choice uh read and we have to read the age and"
1760080,1773120," then we can say print um your age is age okay let's find out if it's going to compile it didn't compile"
1773120,1776320," um"
1776320,1783920," oh don't tell me"
1786560,1793680," don't fucking tell me that program age introduces simple symbol h dude don't freaking tell me that"
1793680,1802400," you fell into the same trap as pascal dude yes it is like pascal this is so dumb and this is something"
1802400,1809040," that i don't like about pascal uh right is that you may have a program main right so maybe even"
1810000,1816160," i don't know how to say that uh maybe program foo and let's call it pass and you have to specify a"
1816160,1824960," program and if you used program foo in here you literally unable to have a variable foo anymore like"
1824960,1831120," you can't do that you're not legally allowed to do that because somehow this thing occupies a symbol"
1831120,1836320," even though you never fucking use that symbol anywhere it's not like it's a module to which you"
1836320,1841760," can refer and stuff like that no it's not really you're not really referring to a program but it's"
1841760,1849840," still got them i don't know i have no words like i'm like i'm losing words uh why i have no idea it's"
1849840,1856160," just like people from 70s and 50s decided so uh we don't really know their reasoning but they just decided"
1856160,1863840," so anonymous program is that possible to do uh let's actually see how it works so we can do fpc"
1863840,1871760," full.pass and duplicate identifier foo right so at least it tells you precisely what's going on and the"
1871760,1876720," only reason why i managed to code that in fortran is because i kind of had a similar situation in pascal"
1876720,1884640," uh all right so this is really weird maybe you are supposed to refer to this thing but i mean how it's not a"
1884640,1893760," module uh it's not a unit i think they're called units in in pascal um weird as sheis uh all right"
1893760,1899040," so let me let me see so this is your age i think it would be easier to actually interact with the"
1899040,1909120," program in a real terminal let's go uh 69 your age is 69 i really don't like this like formatting like a"
1909120,1914720," lack of control over formatting i think it's kind of dumb i think it's kind of dumb"
1914720,1924400," all right but we managed to identify the age but what if you what if we make it a little bit random"
1927520,1937760," uh for trend random number how do you do a random number um okay so there's a gnu fortran random number"
1939760,1946800," uh there is a function uh random number returns a single pseudo random number or an array of pseudo random"
1946800,1954720," numbers from the uniform distribution from zero to oh right so it's probably floats uh the runtime"
1954720,1964400," implements uh her her shows so shiro 256 um so the random number generator it's kind of interesting"
1965440,1970720," why does it return either number or array of pseudo numbers like how do you decide"
1970720,1975200," how do you decide what exactly do you return"
1975200,1983280," so there is no really return value in here um call random so this is not the definition though"
1983280,1989040," right this is not the definition so you can do a random init initialize a random generator initialize"
1989840,1996320," number sequence and stuff like that okay so let's actually go to main 69 so this is where we were"
1996320,2004800," sort of like playing with all of this thing and we can say something like random equal to random number"
2004800,2009680," and yeah you're supposed to just oh you're supposed to use call"
2011360,2021600," wait a second it doesn't return it accepts the return variable what the"
2021600,2021840," fuck"
2021840,2032400," so that's really interesting okay can i do something like random number uh and i have to yeah so it even"
2032400,2038640," highlights this entire thing x and it also says that you have to do call but i wonder if it will work"
2038640,2045120," without that uh i wonder if it will work without that so it's going to be x something like this and uh"
2045120,2053040," it's going to be x so and let's try to build main and let's just try to run it so random number yeah"
2053040,2063600," and classified statement so why we accidentally so it has to be classified i mean cool uh it has to be"
2063600,2070960," be classified uh all right harvest argument of the random number must be real ah"
2070960,2073680," yo"
2073680,2077760," wait do they really"
2077760,2084400," they call a return parameter of a function harvest"
2089600,2099200," they live they really call it harvest oh this is so funny it's like when you have a function that searches"
2099200,2104880," something within an array right so the array the argument that accepts an array is called"
2104880,2109520," haystack and the thing that you're searching in that array is called needle"
2109520,2116640," it's similar to that the return parameter of the random thing it's harvest you you harvesting it"
2119600,2124560," the original computer scientists were farmers not mathematicians yeah exactly that's probably the"
2124560,2128640," reason yeah because it also explains the haystack and needle"
2128640,2135280," 50s programming were strange people i mean yeah they were different i suppose"
2135280,2145040," but it's kind of fun it's kind of interesting is it not i think it is i think it actually is anyways so it"
2145040,2153120," has to be a real one it's kind of funny that like if you want to call it right you can't really use this"
2153120,2160080," function as an expression it's really very much not an expression based language it's basically statements"
2160080,2166880," and statements upon statements there's it feels like there's not that many expressions in there except"
2166880,2175520," maybe mathematical expressions all right so what if we do something like 35 and 34 and then i say nice is"
2175520,2181680," equal x plus 9 is it going to work yeah it did work so maybe mathematical expressions are expressions but"
2181680,2191120," calling a function is kind of like a statement um it's kind of weird uh all right so in essentially what we"
2191120,2198560," have to do if we want to uh sort of randomize the age a little bit right if we want to randomize the age"
2198560,2204800," we probably need to have a random parameter called error right so this is a random parameter called error"
2204800,2218240," and we may just generate a random number with the error that we can add to the age right so from time to"
2218240,2225840," time this entire thing is gonna basically return you incorrect age right so because we want to mimic the"
2225840,2232800," modern technology right so the modern equivalent of this program would be a neural network that you train"
2232800,2238720," with basically like recognizing the age based on your age but it's not going to be always 100 right"
2238720,2246160," if it is 100 it's an old ass technology that nobody gives a about it's a boomer software only boomer"
2246160,2253040," software actually being accurate and stable uh the modern zoomer software is supposed to be inaccurate"
2253040,2260000," and faulty and buggy you know what i mean if your program is fast and stable nobody gives a about it"
2260000,2267200," like i mean it's a boomer program like who writes software like that right so to mimic this uh you know"
2267200,2271120," the modern software practices we need to introduce an error in today"
2271120,2283840," determinism is so 20th century exactly chat knows what's up chat knows what's up exactly uh so who needs"
2283840,2284480," determinism"
2284480,2296960," um all right so i am a little bit afraid that it's going to essentially error out because maybe integer and real are"
2297200,2302640," not compatible with each other this is actually very interesting is it like weekly type or strongly"
2302640,2307840," type does it allow you to do mathematical expressions on integers and reals so we're about to find out"
2307840,2313280," so we're about to find that shise out it does allow you"
2313280,2321360," it well i'm not surprised it literally does allow you to add up uh integers and floats and i wonder"
2322560,2327600," what is it is what is it going to print in that specific case so let's actually run the h right"
2327600,2333280," so i'm gonna say a 69 and of course it basically converted all of that to"
2333280,2338400," uh to float but i wonder"
2338400,2345440," what if i do something like age equal h plus error right because we know that h is integer"
2346160,2352000," this thing is going to add them up which will turn it into float and i hope that after assigning this"
2352000,2358000," thing back to the h is going to be truncated into an integer right so let's actually go ahead and try"
2358000,2364080," to do that and run this entire thing i'm going to say 69 it was truncated to an integer so it actually"
2364080,2369840," from the semantical point of view it acts like c which is not particularly surprising right so"
2370480,2374880," um it's both of them are old languages to be fair fortran is even older than that"
2374880,2382640," uh so yeah uh but the problem here is that the error right so the random number is from zero to one"
2382640,2389520," right it is from zero to one uh so it's not always going to introduce that uh that specific error"
2389520,2397280," i think what we need to do we probably need to multiply that by two right so it becomes from the range"
2397280,2402560," from zero to one to zero to two so that means from time to time it's going to actually return you 70"
2402560,2408320," or something like that right so this is basically an error uh all right so let's go ahead and try"
2408320,2413520," to do that and my age is 69 okay if i try to do that one more time sometimes it returns 17."
2413520,2420080," sometimes you're 70 but sometimes it's going to return 69 so you you never know it's it's random"
2420080,2426240," it's it's absolutely random but it's actually uh in the positive positive range it would be nice"
2426240,2435600," it if it also sometimes went down you know what i mean so uh we have a range uh from zero to one"
2435600,2443280," here to actually have an effect we had to map it to a range from zero to two so to have an effect in an"
2443280,2450480," opposite direction we have to map it to a range from zero to um from minus two to two from minus two to"
2450480,2456960," two to two how can we do that right first of all we can try to multiply this entire thing by four which"
2456960,2464160," will turn it into a range from zero to four then we can try to multiply uh basically subtract two uh"
2464160,2468720," from this entire thing which will turn it into the range from minus two to two right so that's"
2468720,2473440," basically how we can achieve this entire thing we need to multiply by four and then we have to subtract"
2473440,2481360," two uh and that's basically how we can achieve that so it's gonna round up and down and hopefully it will"
2481360,2492960," mimic the real modern software finally uh all right so it's gonna be 69 70 69 70 uh i wonder when it's"
2492960,2500000," gonna go down it's gonna go down does it even go down um i'm actually really surprised so maybe we need"
2500000,2510400," to um maybe we need to debug that or like for how long do i okay 68 all right 68 so sometimes it goes"
2510400,2515680," down so it's not being reliable uh right so 67 that's actually pretty rare i think"
2518080,2525200," 69 sometimes it's okay okay that's cool so that's pretty cool i really like that so far um so let's"
2525200,2535920," continue learning this right so uh read i really want to understand the this entire thing uh so we have"
2535920,2544080," a tutorial in here not really tutorial but manual um i wonder if we can find the list of all of the"
2544080,2550160," procedures in here okay so do you have a print procedure okay it's not particularly a procedure"
2550160,2559360," right because you don't really call print that's the thing so random is an intrinsic procedure and"
2559360,2567280," that's why you call it but print you never call print it's a built-in statement so that's why we probably"
2567280,2574400," won't be able to see read and print in the list of all of the available standard functions because"
2574400,2603200," okay so maybe there is a list of constructions uh intrinsic modules"
2605040,2611520," introduction compile option run time influence run time behavior with the merit variables we don't"
2611520,2617680," i don't care about that compiler characteristics extensions mixed language"
2617680,2629280," can we link with ray lee"
2632080,2640880," and make a game in fortran easy peasy lemon squeezy we could probably do that let's actually see"
2640880,2647200," uh so intrinsic type uh okay"
2647200,2656320," this is boring bruv i think i need to like a specific okay so here's uh i saw c binding"
2657040,2664640," what the fuck uh my type oh this is basically structures this is how you define the structure so"
2664640,2672240," they padded like the c structures uh interoperable uh working with the c further interoperability"
2672240,2677680," this is very dry this is just like uh you know a dry example like this is what you can do here is the"
2677680,2683200," standard read the standard blah blah blah so there is no a particular example that we just can just quickly"
2683200,2690480," copy paste and implement the game so that so why am i here uh just to suffer i just want to see"
2690480,2694720," like how do you work with print uh type as an alias for print"
2695840,2705920," yeah anyway it they won't tell you uh tell us how the print works okay whatever so expressions"
2705920,2713600," so it does have exponent would you look at that so it's like it's like python it's a python from 50s"
2713600,2722880," it's a python from 50s uh so expressions okay so expressions pretty straightforward like i don't see"
2722880,2728560," anything particularly uh special uh floating point precision the desired floating point precision can"
2728560,2734480," be explicitly declared so oh that's actually really interesting so you can uh like specifically decide"
2734480,2745520," what you want uh interoperables kind all right arrays and strings let's take a look at arrays and strings"
2748400,2755360," more often than not we need to store and operate on long lists of numbers as up as opposed to just a single"
2755360,2761680," scalar variable that we have been using so far in computer programming such lists are called arrays"
2761680,2768960," arrays are multi-dimensional variables that contain more than one value where each value is accessed using one or more"
2768960,2789040," so i need to make a small break i yeah so i i need more tea for this i like"
2789040,2795600," i need more tea for this so let's make a small break um all right so let's continue i have my tea so i have"
2795600,2800560," everything and uh let's go ahead and do that so let's read how to use this abomination"
2800560,2807360," uh arrays are multi-dimensional variables that contain more than one value where each value is"
2807360,2814160," accessed using one or more indices arrays in fortran are one base by default this means that the by default"
2814160,2819600," right so that means you can change that uh this means that the first uh element uh along any dimension"
2819600,2826240," is that index oh by the way maybe we can actually make it why didn't i do that earlier i'm sorry"
2826240,2834640," array declaration we can declare arrays of any type there are two common notations for declaring array"
2834640,2840560," variables using the dimension attribute or by appending the array dimensions in the parenthesis"
2840560,2847680," uh to the variable name uh to the variable name static array declaration okay so essentially we say integer"
2847680,2856240," dimension 10 okay so basically this thing modifies the previous type uh or equivalent array declaration so"
2856240,2862000," yeah we're declaring it on the level of the name and then you can have multi-dimensional thing in here"
2862640,2870400," um all right that's cool so custom lower and upper okay so here are lower and upper index bounds that"
2870400,2879440," makes sense that's actually kind of cool and uh let's give it a try so so there's here is the main uh"
2879440,2885920," maybe i'm gonna call it nice right so this is example which is nice it just like defines two variables"
2885920,2895440," sums them and this is just basically hello world uh this is age right so this is age um and let's introduce"
2895440,2905520," something else let's call it a race maybe uh f90 uh program a race and the problem a race"
2905520,2912480," and let's maybe define some stuff so we want to probably i want to define like a real"
2914000,2920480," and the dimensions let's actually say that we're going to have 10 of those things so and we probably"
2920480,2926480," want to do implicit implicit uh none and one of the things i want to do i want to just like literally"
2926480,2932720," print this entire stuff without any initialization right let's not even initialize anything here"
2932720,2939760," a race i want to also specify the output variable in here not variable but uh name and let's actually"
2939760,2948240," print it so it gave us right so it's a garbage from the stack it's a garbage from the stack i think"
2948240,2953200," 10 of them is too big because i can't see them on the uh you know on the screen properly i think"
2953200,2959040," something like five is a little bit better and i suppose it tries to like pad them to the same size"
2959040,2966480," which is fair enough which is fair enough let's try to call random number and if i remember correctly"
2966480,2973600," according to the documentation of a random number so here it is random now documentation it returns a"
2973600,2981920," single pseudo random number or an array of pseudo random numbers uh so i suppose um i wonder how does it"
2981920,2992240," decide which version to call how does it know which version to call i would like to see the definition of random"
2992240,2999440," number i would like to see the definition and yeah that looks yeah that looks actually kind of cool so"
2999440,3010000," it's from zeros to to one um so does it have array operations like in numpy or r you know r programming"
3010000,3014400," language there's such language programming language called r like in that programming language you can"
3014400,3023040," take an array and multiply it by 10 and it will multiply each element by 10 is that did you just guess it"
3023040,3030560," you can do that it's just like okay okay i see i see why people may use it for like scientific computing"
3033120,3042800," all right so yeah that's really interesting so essentially yeah it's basically like r it feels"
3042800,3048240," like a mix of c pascal and r so far"
3048240,3057440," yeah c pascal and far like i can see the ideas like the how people got inspired by different ideas and different"
3057440,3064160," languages but suppose fortran since it's the oldest language kind of initiated all these ideas right"
3064160,3070720," so essentially it's probably the other way around it's probably the pascal r and numpy got these ideas"
3070720,3076480," from fortran uh right so they probably got all these ideas from fortran okay that's kind of cool"
3076480,3084880," i like that right so the the experience of learning fortran so far is very educational"
3084880,3093840," and informative right i really like that so the only thing i'm really worried about is that how do they"
3093840,3100720," determine at compile time which version of random number to call do they determine that compile time"
3100720,3109520," or do they determine that at runtime so is the size of the array stored at runtime so random number can"
3109520,3117360," inspect um you know the the dimensions of this thing at runtime maybe there is this thing this is just a"
3117360,3125600," hypothesis that any variable in fortran is an array it's just like if you define real"
3125600,3136000," x it's basically considered an array of a single number or array of a single value of element she's"
3136000,3141520," fucking christ right it's considered an array of a single element that's what it feels so far it could"
3141520,3146800," be true or it could be not i don't really know i know nothing about fortran i'm basically hallucinating"
3146800,3152240," uh you know features of the language just like chat gpt right i'm just like using my previous experience"
3152240,3157840," to hallucinate things about the language like i don't really know but it feels like it could be true"
3158400,3165040," right so maybe like everything is an array it's just like this thing is implicitly array of a single"
3165040,3174000," element implicitly and that's how random number knows how to like generate for a single number and"
3174000,3180320," for arrays it just like has one implementation to generate random number for arrays and like single"
3180320,3188160," variables are just arrays of single numbers um so yeah that could be the truth uh but i would like to"
3188160,3194720," see the definition there is no definition in here um i mean declaration it's a signature of this stuff"
3194720,3206080," uh i wonder if we have some stuff in here so do we have any fortran things in include"
3207440,3216000," do we have any fortran things in include so if we try to find uh file f and name i want the name to end"
3216000,3222560," with f and some extra stuff is there something like that i don't think there are such files specifically in"
3222560,3233520," user include i didn't think so yeah there's no such thing maybe in user share we can find some files"
3234880,3240960," that contain the name fortran just like anything that contain the name fortran can we find anything"
3240960,3250160," uh okay so and vim primarily vim stuff lintian so i'm searching in user share"
3250160,3255600," okay i found i found something i don't know what is a lintian it's probably some sort of a linter"
3255600,3262640," uh does anybody i don't even know what i have installed in here right i don't even know lintian is a helper"
3262640,3269920," tool used in conjunction with the package okay uh tech life all right so this is just like the"
3269920,3274960," the other stuff uh code blocks"
3274960,3283360," coke blocks i don't think it's yeah i don't think it's gonna be anything particularly useful in there"
3283360,3291680," maybe it's somewhere in libs or maybe it's somewhere in local so this is docs find file"
3291680,3297040," okay so there are docs fortran find file at point"
3297040,3302240," uh so there's some docs in here but i don't think it's particularly useful"
3305680,3310160," uh no way we're learning fortran well you think i'm joking you think this is a"
3310160,3312640," motherfucking joke you're learning fortran"
3312640,3319440," the only thing i need to do i need to find the fortran files on my machine and i can't do that they"
3319440,3326400," don't exist at least in user share uh maybe i have to go a little bit higher but i'm not sure where"
3326400,3334240," exactly do i have to go let's try to find like at the user right like straight up at user it would be"
3334240,3344560," kind of cool if uh essentially i could say search what the fuck search g uh fortran uh is there any way"
3344560,3354000," to uh give the name of the package and get the list of all of the installed files i remember the package had something like that i do remember"
3354720,3360560," right so can i just give the package this name and the package would tell me the list of all of these things"
3360560,3364640," does anybody remember the the commands uh does anybody remember the command"
3364640,3371200," so we have fortran here so here is a share uh we know that in share there is nothing particularly useful"
3371200,3373600," uh so it goes into the local"
3379120,3388080," crack fortran crack fortran yes it is a thing in here uh crack fortune it is a thing indeed"
3388080,3395760," so essentially what i'm trying to find i'm trying to find where i have like the standard library of"
3395760,3402960," fortran so i can just look into the defense okay the package l uh the package minus l g fortran uh eight"
3403840,3410720," okay that's perfect thank you so much um what do we have in here so it is like okay it is located in"
3410720,3413360," lib so lib c"
3413360,3426080," it could be maybe actually located in different packages so if i do g fortran if i do g fortran"
3426560,3434640," there are a lot of things like leap g fortran right so there is a leap g fortran eight death yeah so this"
3434640,3444400," is probably what we want to do uh d package l leap g fortran eight death uh-huh but it doesn't contain the"
3444400,3451280," sources maybe there is no such thing as sources in there maybe there is no such thing as sources because"
3451280,3456480," it doesn't have headers like c does it i don't think it does right so it basically"
3456480,3461200," just uh looks into the symbols and whatnot probably not"
3461200,3467760," but essentially what i want to be able to do"
3467760,3472560," so there is no such thing as f"
3474320,3485120," 19 there's some f90 files but not that many of them so yeah that's kind of sad uh do we have a g fortran"
3485120,3491280," source code i suppose we have to uh download the source code of g fortran"
3496400,3505040," gcc ftp website uh is it possible to access that from http who uses ftp in 2023"
3505040,3517440," just http okay i can i can do that uh so the latest releases were it's not even sorted by last modified"
3517440,3527280," date so let's actually sort it there we go so this is the latest stuff"
3527280,3532960," this is oh it's part of the gcc god damn it"
3532960,3545200," it's part of the gcc so we can we can't have that is there a gcc mirror anywhere uh github gcc mirror"
3546720,3550880," uh all right so there is gcc"
3550880,3560160," and there should be fortran fortran oh my god"
3560160,3565520," dude freaking"
3565520,3570240," i swear to god github"
3573280,3578320," sorry sorry okay leave g fortran so there is something like"
3578320,3584400," it's just a glorified file hosting"
3584400,3590560," like oh it has no business to be this fucking slow like come on"
3590560,3592160," um"
3592160,3599440," i don't fucking know seriously intrinsic so maybe this one is interesting because i remember that all right"
3600800,3606000," it doesn't have a random uh number it doesn't have a random number"
3606000,3616000," fuck so this is not an intrinsic thing this is not an intrinsic thick thing all right so one of the"
3616000,3622400," things i want to do i want to maybe clone the source code of gcc to quickly just find this stuff"
3623280,3629840," because using github is unbearable it's truly unbearable we're going to clone this entire thing but we're"
3629840,3636400," going to use the depth one so it doesn't clone like literally everything uh right so all the entire history"
3636400,3643120," hopefully it's not going to take too much space because even if we're like downloading the latest"
3643120,3657040," snapshot it still can be relatively big i could have just downloaded that uh tower ball from the uh from the ftp"
3657040,3661440," speaking of open source"
3661440,3665680," the modern version of closed source"
3666800,3672480," the modern version of closed source is an open source that is so big and convoluted nobody wants"
3672480,3679840," to even look at it and even download this that's the basically modern version of the closed source"
3679840,3682320," right um so"
3685200,3692160," uh that's how basically chromium i think also closed source it's so big so convoluted that it's"
3692160,3697840," basically get gate keeps itself um depth one is the way"
3697840,3704480," it is depth one that's my friends"
3707120,3710080," that's the fucking problem it is depth one"
3710080,3723760," so just use depth one well have bad news for you i have bad news for you it is a depth one uh so"
3723760,3734320," gcc all right so uh what do we have in here in terms of fortran grip or trend uh okay so there's"
3734320,3746640," only lib g fortran uh can you just go there yeah grab random number and we know that fortran is a case"
3746640,3755280," in sensitive language which makes it absolutely uh perfect for grabbing we know all we all know that"
3755280,3760640," uh but luckily in the grab we have like a i flag which act okay so there's no such thing here"
3761440,3766800," uh is it like a really random number yeah it is called random number so there's no such thing okay"
3766800,3772880," so let's try to do this thing uh okay so we found it we instant we instantly found it actually so here"
3772880,3783120," this uh str ison oh it's actually cool right so it's actually cool so it contains a lot of things but we"
3783120,3791840," we can't really find the declaration oh there is a gcc fortran i found it there we go so there's a gcc fortran"
3791840,3798800," uh and i wonder if within this thing we can find a file uh which names which name contains um"
3798800,3804080," uh random random number or something like that"
3806960,3813280," or maybe just random no there is no such thing uh okay but there should be something like random number"
3813280,3818480," with i uh let me maybe go"
3818480,3826400," with emacs right i want to do that with emacs it's a gcc fortran"
3827200,3834720," uh and essentially i want to grab it like this random number with i so then later i can actually"
3834720,3838960," jump to the all of these places so it's an intrinsic cc"
3838960,3848880," uh-huh it is probably implemented it is probably implemented in c so there is no like a declaration like of"
3848880,3853440," this thing um okay i see"
3853440,3864400," this is so funny actually a resolve a random number and in there if we take a look at the intrinsic so"
3864400,3870880," this is a macro right that defines this thing and this is the functions that probably implement that"
3870880,3876320," so there is a check random number gfc check random number and gfc resolve random number so this is probably"
3876320,3884080," the functions that we care the most about um right so the answer i suppose is that this thing is just"
3884080,3892160," implemented in c so that's how it works basically um so i want to take a look at the check random number"
3892160,3898720," so what is it what is it all about uh check random number where's the implementation so here is the"
3898720,3908800," implementation i check the harvest okay that's very interesting so uh it's type and variable check if"
3908800,3915440," it's not real uh it returns false so this is basically type check but it's is it called at runtime it might"
3915440,3922800," be actually called it runtime but it could have been yeah if it is intrinsic yeah if it is intrinsic"
3922800,3929760," it could be like it could be like a part of the compilation or something but yeah check um resolve random number"
3929760,3939840," so and let's take a look at the implementation of this entire thing i resolve uh abikind"
3939840,3944560," resolve get intrinsic sub symbol name"
3946000,3954560," right so then it calls even further to something else okay so it goes too deep uh in in c so i didn't"
3954560,3961120," think we can literally like find the definition it it might be just like built in it could have been"
3961120,3967360," just like a built-in intrinsic thing um right so intrinsic procedures"
3969360,3974400," intrinsic procedures provided by gnu fortran include procedures required by fortran 95 and"
3974400,3978880," later supported standards of intrinsics any conflicting uh conflict between description"
3978880,3985120," here description uh in the fortress that is unintentional blah blah blah uh yeah i feel like"
3985120,3990960," they're built in right i feel like they're built in so the thing i would uh the question that i was"
3990960,3996240," trying to answer is that um is it like defined somewhere in the standard library"
3996240,4001920," or is it like built in into the compiler and i think it's built in because we found like literally c"
4001920,4003440," code that implements all that stuff"
4003440,4011280," okay that's very interesting i mean that's fine there's nothing wrong with that"
4011280,4022320," okay um so where is the this thing so this is our race we call a random number we multiply them by 10."
4022320,4028960," so let's go back to the to to the arrays and stuff like that so g fortran uh g fortran array"
4028960,4036960," have this all array and there we go so that seems to be working and then we can call a race and here they"
4036960,4046400," are uh so that's pretty cool a race slicing holy okay a powerful feature of the for of the fortran"
4046400,4052320," language is the it's is it's built-in support for array operations we can perform operations on all or"
4052320,4060400," part of an array using array slicing notation uh-huh so array constructor you can just like literally"
4060400,4069760," assign this into anything implied dual loop constructor what the fuck so are you telling me so this is and this"
4069760,4076080," has to be an integer so i can define a bunch of axes in here and then i can say okay axes is equal to"
4076080,4087040," like i where i is between one and ten this is a mother flipping list comprehension from haskell isn't it"
4087040,4095600," they stole it from haskell well it doesn't even work uh it doesn't even freaking work because access"
4095600,4104080," well x is supposed to be uh symbol i is implicit oh if you want to use this symbol i it has to be"
4104080,4112160," defined like this because it's an implicit loop uh hello freeform hi uh all right all right so a"
4112160,4117280," different shape of an array an assignment and this is because it's a from uh one to five so we have"
4117280,4125040," to do something like this would you look at that who needs python it's even more compact than python"
4126560,4133280," right right in python how do you do that you you do i for i in range five like what the"
4133280,4144800," is this brother brother look at that chad fortran holy shit python finally we have the chad language"
4147360,4154160," mine got mine got mine got okay so and you have slices just like in this is literally python python"
4154160,4162240," from 50s this is literally python from 50s so and can i do some stuff like i want to take values from"
4162240,4168960," one to three maybe right so don't print everything didn't really work uh right because it has to be"
4168960,4174320," parenthesis i'm sorry i apologize for my mistake uh i made a severe lapse of judgment"
4174320,4180800," of judgment uh print out the first column right so yeah there is a lot of interesting thing here"
4180800,4186160," allocatable dynamic arrays you can even work with dynamic memory allocatable"
4186400,4201040," so you can actually work directly with the memory that's pretty cool so far we have specified the"
4201040,4207680," size of our array in our program code this type of array is known as static arrays since its size is"
4207680,4214320," fixed when we compile our program quite often we don't know how big our array needs to be until we run"
4214320,4220800," our program for example if we are reading data from file of unknown size uh for this problem uh of"
4220800,4226400," known size end of the sentence i'm sorry for these problems we need allocatable arrays these are allocated"
4226400,4231280," while these are allocated while the program is running once we know how big the array needs to be"
4231280,4238880," okay so it's but why do you have to explicitly say that it's allocatable probably because it stores it as"
4238880,4245360," an pointer to a hip under the hood that's why it needs this additional flag to distinguish them"
4245360,4250880," so allocatable basically turns it into a pointer to an array or something i don't know"
4251600,4256400," uh okay so then you can allocate array 10"
4256400,4265920," not good enough uh character strings uh all right so this one is interesting i think this is the most"
4265920,4272160," interesting part right so let's actually write a program which is kind of similar to age but instead"
4272160,4279600," of asking your age it asks for your name right it asks for your name basically it says like uh hello"
4279600,4285360," what is your name and i say my name and it says hello that name right so this is actually kind of cool i"
4285360,4290640," think uh let's go ahead and try to implement that so and that's literally what it is right so i mean"
4290640,4298480," it's just first and last name or something like that that's fine um so we allocate we create first name"
4298480,4305040," which is four characters last name blah blah blah uh and we just print all that but can we read this"
4305040,4310240," entire thing that's the real question uh we can allocate this entire thing"
4310240,4315600," it doesn't really tell us if we can read that or not but"
4316720,4321600," we can just try so let's go ahead and do that i'm going to create a name which is f90"
4321600,4331760," uh program name right and we're going to end the program uh name we're going to do implicit none"
4331760,4338560," right because no implicit uh variable definitions and let's introduce the name unfortunately we can't"
4338560,4341840," really use the name because it's already freaking taken by the name of the program"
4343760,4350000," i swear to god all these languages from 50s and 70s or we have to say what is your name"
4350000,4352480," can we do something like that i'm pretty sure we can do something like that"
4352480,4360320," okay so then it allows us to define a character uh which is the name and i suppose it has to be like len"
4360320,4364960," and let's say that 69 characters should be enough for everyone i think that's how you do that right"
4364960,4372080," so it's just len equal and these two things are equivalent right len equal five or just like len"
4372080,4379680," just just five are equivalent uh i suppose okay and after that we can print something like"
4379680,4393200," uh hello what is what is your name and uh we're going to read your name i'm gonna literally assume"
4393200,4400000," that i can just use read on this thing and it's gonna literally read it that's my assumption then we can do"
4400000,4402160," something like uh hello"
4402160,4405520," name"
4405520,4415280," all right hopefully that will work i i hope it's not gonna pad this thing like so uh but we'll see we'll"
4415280,4422880," see all right so i'm gonna replace it with name and then i'm gonna just compile it it compiled first"
4422880,4434960," try i'm becoming the fortran master fortran master yes so let's go back to probe uh i can't delete that"
4434960,4438400," fortran uh and let's do name"
4444240,4450560," easy peasy lemon a squeezy so i forgot to put the space in here so we can do that one more time"
4450560,4462800," where are the pogues in the chat where are the pogues in the chat first try got clear"
4468080,4473360," okay that's cool that's actually pretty cool uh so we can work with all of that"
4473360,4480240," so there is also allocatable character i don't know what the is this thing like why do we have to put"
4480240,4487120," colons in here i'm not particularly sure but you can just basically allocate these things you can have"
4487120,4493440," arrays of strings an array of strings can be expressed in fortran as array of character variables"
4493440,4497840," uh all elements in a character array have equal length"
4498400,4503200," uh i see i see i see what you mean okay so that makes sense"
4503200,4518320," so yeah yeah yeah yeah so i think i know how to work with that it's reasonable i think i think it's reasonable"
4519600,4522960," uh operators and control flow"
4522960,4531600," operators and control flow you know what i think i'm ready for something serious like i'm kind of bored"
4531600,4538240," with all this lecturing of like here is how you do that here is how you do that remember that remember"
4538240,4549280," that boring boring we need to have something substantial let's try to link with rig or um let's try to write"
4549600,4555920," uh a function in c and link with that function uh in fortran and call that function like we can"
4555920,4561040," learn all of these constructions along the way right like all of that like who wants to like sit down"
4561040,4565840," and just memorize all of that stuff for nerds nobody wants to do that right so let's go ahead and just"
4565840,4574720," like uh write um i don't know uh maybe something like foosie uh and here we're gonna have void hello"
4576160,4587520," and in here we're gonna say print f hello from c that's it can we call this function from fortran"
4587520,4595120," and if we can we basically win we basically win all right so i want to clean up some of this stuff"
4595120,4598960," so i think i'm going to remove gcc i think i'm going to remove gcc"
4600160,4607040," so it actually takes some time to remove this goddamn folder so because the folder is so huge"
4607040,4612000," uh that it needs some time and unfortunately in emacs it doesn't show the progress because i run it in a"
4612000,4618400," way that if the command blocks it also blocks the entire emacs like for the entirety of the command so"
4618400,4626000," i can actually cancel it uh right so let's go ahead and maybe do that like this yeah there we go so it's"
4626000,4632080," going to take some time to remove this gcc thing i don't know it's actually kind of fun uh all right"
4632080,4641760," so let's remove all of these binaries uh i just want to clean everything up uh erase age and full"
4641760,4649360," so let's introduce build sh and simply uh build all these things i'm gonna"
4651120,4664160," binish why did you quit emacs i don't know what it's doing uh gfortran uh oh maybe maybe just erase f"
4664160,4675920," erase so the first thing we're gonna have in here is probably just nice then we have"
4677600,4685680," h then name and then erase right so we have just like a bunch of examples in here uh another thing"
4685680,4692640," that we want to build in here is probably full so i'm gonna assume that i can do something like this"
4692640,4699760," and then create an object file can i create an object file out of this stuff"
4701040,4708320," okay so print up it probably wants something like std io and it should have created"
4708320,4718080," an object file can we link with that object file so let me see uh we can google up fortran or maybe g"
4718080,4722480," fortran c interrupt example i want to see some example"
4726800,4731200," we already actually looked into this thing yeah but i want to like an actual example"
4731200,4738160," that i can test out this is useless but this is straight up useless um so inter interoperable"
4738160,4744960," interoperables uh subroutines and functions subroutines and functions have to have the bind c"
4744960,4751360," attribute to be compatible with c the dummy argument declaration is relatively straightforward however one"
4751360,4757680," needs to be careful because c uses call by value by default while fortran behaves usually similar to call"
4757680,4763200," by reference uh furthermore strings and pointers are handled differently so you have to be careful with"
4763200,4770960," that luckily by the way the cool thing about ray leap is that um it doesn't really accept that many"
4770960,4777360," arguments in the sense that um right you initialize the window and you just have to pass the size of the"
4777360,4781360," window but it doesn't return a pointer to a window or anything like that it just like stores everything"
4781360,4790400," in global variables right uh so you actually really tries to reduce the amount of like passing of"
4790400,4795600," information between program and library to minimum which makes it a little bit easier to work with"
4795600,4801600," from other languages which is kind of a five-hat strategy or on them on the rally upside i think"
4802560,4808400," i think it is by the way so we have some sub that didn't acknowledge i don't remember if acknowledged"
4808400,4813200," selco says the thing it says thank you so much and hector 84 thank you so much for tier one subscription"
4813200,4820720," thank you thank you thank you guys uh all right so how can we do all of that so matches the fortran"
4820720,4829520," declaration that's very interesting so let's actually create something like full uh f19 and we're going to"
4829520,4838880," create a program uh full all right and program full and we're going to just print uh of course we're going"
4838880,4852320," to do implicit non print hello world print hello world and let's maybe build this entire thing in here as well"
4852320,4865440," so if we do g uh fourth g fourth come on let's not build any of this stuff let's not build any of the"
4865440,4871680," stuff and it gave us the executable and if we run this executable it is hello world okay that's fine i"
4871680,4879040," also want to set xe so it logs all of the commands that it actually runs uh and can we literally copy paste"
4879040,4884080," this entire stuff to our full program can we literally copy paste it do we have to copy paste"
4884080,4892080," it outside of the program or inside of the program this is very interesting question so this is i suppose"
4892080,4901760," a return type if we take a look uh we accept and return void so maybe we can just do literally void"
4901760,4908320," and it doesn't automatically highlight this entity unfortunately so can we just say maybe we have"
4908320,4916160," to say that it's a subroutine yeah maybe that's precisely what we have to say um so isoc binding"
4916160,4925920," only c ints i have no idea what these things are um so maybe we have to do it like that"
4927840,4934000," maybe we have to do it like okay so then i'm gonna try to build this thing one more time and it"
4934000,4942560," complains by saying unexpected program statement uh-huh and yeah i can see that all right so probably we"
4942560,4952800," have to move this thing inside of this subroutine declaration uh no it's not how it works it's not how it"
4952800,4958160," works unfortunately and this example is not complete this example is not complete"
4958160,4967120," all right so maybe we need some sort of a complete example this is like straight up useful useless i"
4967120,4972160," don't like when they give you like a half-assed examples that you can just copy paste and compile"
4972160,4976400," and try it's always like you have to guess what else you have to print in there like it's just like"
4976880,4983280," fucking no give me the full example so i can try it is it that hard no you have to just like you know"
4983280,4988320," give me like portions that i have to stitch together myself how is that a useful documentation i have no"
4988320,4994160," idea well we can try this kind of stuff right so this seems like a like a full example like how i was"
4994160,4998640," supposed to know that you have to wrap it in an interface why didn't you tell me that i have to wrap it"
4998640,5006720," in an interface in here like why do you put it i'm sorry i'm just like disappointed when i read such a"
5006720,5012640," low quality documentation it's straight up low quality documentation and i'm uh i'm tired pretending"
5012640,5018240," that it's not i'm really tired pretending that it's not a low quality documentation it's straight up is"
5018240,5024080," and there's nothing you can say to convince me otherwise i'm sorry um all right so let's actually go ahead"
5024080,5029840," and maybe like copy paste the whole thing uh and yeah"
5029840,5037600," fortran gatekeepers yeah exactly they're gatekeeping everything they're pretending like you have to"
5037600,5044480," have a phd to understand all of that in reality it is very very dumb it's just convoluted intentionally"
5044480,5052960," to keep you away from all of that it is converted intentionally and it's not your fault if it doesn't work for you"
5054080,5058240," it's not your fault they're doing that intentionally those goddamn gatekeepers"
5058240,5065440," uh okay this one is interesting okay so we use isoc oh okay this one is interesting so it's"
5065440,5074160," like importing a module so isoc binding yeah it's like import and you're importing only these things"
5074160,5080320," okay that's cool then you define an interface and within an interface you define these declarations"
5080880,5089760," uh right so it accepts a string and you bind the c name print c okay so that's cool and then in isoc binding"
5089760,5096960," only c char and okay okay that's cool that's cool um and you handle that and then you call hello world"
5096960,5106080," and everything so that's very cool so if i take a look at for c um from c code i'm going to put it like"
5106080,5112720," that so now i'm going to try to simply compile this entire thing and it's not supposed to compile"
5112720,5120800," whatsoever okay that is very cool uh implicit none it didn't really work like that because you probably"
5120800,5129040," have to put this entire thing outside of the program again have to ask example help as example doesn't tell"
5129040,5136320," you like where exactly you have to put that stuff why are they like that like why don't you just give"
5136320,5147680," me the full goddamn example what is wrong with these people oh god right it's just like dude they're just"
5147680,5153280," like trolling you they're literally trolling you this is not a full example and they're not gonna"
5153280,5157360," like tell you like tell you like where you have to define the program or something like that they're not gonna"
5157360,5166800," tell you you're supposed to know that ah okay so to print you can call it example shows the need to"
5166800,5168240," okay"
5176960,5184320," so and then we do call but that means it's inside of the program right because usually you do this kind"
5184320,5193760," of stuff when you are like oh wait a second this is a format string and then so that means this star"
5193760,5197600," that we put in print in here is sort of like a format string"
5199280,5207600," uh-huh it's very interesting that is actually very interesting so and i wonder like i don't even know"
5207600,5217440," what's the problem in here is it because i legit made a syntax error uh can it follow implicit none"
5217440,5224400," is that because i have to put it in here maybe that's what i have to put i literally have to guess"
5228160,5237920," interface 2 like what kind of error messages are these that's like what implicit statement i cannot"
5237920,5243760," follow interface statement why okay so what if i remove implicit statement"
5243760,5257040," why how does that make any sense like what if what if i want to print a"
5257040,5259600," what if what if i literally want to define a variable or"
5259600,5266400," this is so bad like i want to define the variable and i want to say implicit"
5266400,5274320," uh implicit none uh rights and it's just like dude you can't do that because you"
5274320,5278160," this is"
5284400,5289840," uh this is so freaking weird it is so freaking weird okay anyway uh"
5289840,5296800," uh oh wait wait oh my god"
5296800,5308400," you you what you oh my god this is so disgusting this is the most disgusting language ever like why"
5308400,5316640," why is it why is it like that why what the is wrong with these people i don't understand like why do you"
5316640,5325280," have to make it intentionally converted like this so here's an interesting thing uh c c is a super"
5325280,5331120," simple language because people were trying to come up with the simplest solution because the computers were"
5331120,5337840," slow uh they didn't write like a lot of complicated code uh in assembly just to have some high-level"
5337840,5344400," programming language like the initial implementation of this was probably written in assembly to be"
5344400,5350240," fair this is probably all of that all of this is probably modern stuff yeah yeah so original fortran"
5350240,5352320," was actually way simpler than this but man"
5352320,5361520," anyway whatever uh so let's let people gatekeep if people want to gatekeep let's let them gatekeep"
5362320,5368960," so okay it it complains about uh not being able to to find this reference which is already kind of good"
5368960,5376480," right so we have this thing in here right we have this thing in here so let's go ahead literally and"
5376480,5384800," compile it with o i'm gonna just assume that it is possible to do it like that i'm gonna literally"
5384800,5390640," assume that it is possible to do it like that and it is in fact possible to do it like that and uh yeah"
5390640,5405600," that's pretty cool so we are capable of running c code or calling c code from fortran and that is"
5405600,5413520," enough for us to start epic game development in fortran holy shit so the next game development"
5413520,5421600," language is fortran not jai i'm joking by the way john please don't kick me out i'll do better"
5421600,5426320," i'm joking i'm just joking all right so what do we want to have in here what if i want to have"
5426320,5437040," several uh functions in here right so look what's if what if we uh create something like print b from"
5437040,5445680," b code can i have several subroutines i literally need to check if i can have several subroutines here"
5445680,5453200," like that because i don't know this syntax is so wild you can expect anything from it like maybe you can't"
5453200,5458880," have two subroutines in a single interface like the rules are arbitrary i don't know maybe you can"
5458880,5465520," only have like one and a half like who knows we need to double check that you can have several of them"
5465520,5479440," in here uh right so and in here let's actually do uh b and let's try to compile that and hope for the best"
5479440,5485040," of course something went wrong oh well i mean it's it's not that bad uh but okay you can have two of"
5485040,5491600," them like we we're not we're not sure if we we can have three of them maybe it's only limited to two"
5491600,5496880," who knows maybe for three you need to have like a completely different syntax we don't know"
5496880,5505520," that you can expect anything from this uh all right okay so it seems to be working that's nice uh all right"
5506880,5514560," that's pretty cool uh how can we link with the ray leap i i suppose we can link with ray leap pretty much"
5514560,5523520," directly uh so what if we define a subroutine so if you take a look at opt ray leap include ray leap dot h"
5523520,5532240," the function that we need is init window init window so it's a function it's a subroutine specifically that"
5532240,5541760," accepts two integers and one string so let's go ahead and do that so subroutine uh init window uh so this is"
5541760,5551040," basically it has to be c int so we had an example for c indon here didn't we yeah yeah oh this is such a weird"
5551680,5553600," thing so i suppose we can say"
5553600,5570640," can i do c int uh why is it like that ah string is not a type by the way i think string is not a type is it"
5573200,5580080," uh i think is it it is not yeah yeah so it's a name so it's actually this example is so"
5580080,5585040," tricky because it makes you think that maybe string is a type no no no it's a name of the variable"
5585040,5594320," it's a name of the variable okay so that means here we need to have width uh height height and title so"
5594320,5598240," that's the variable we're going to have and i'm going to bind all of that to c and the name we're"
5598240,5606240," looking for is init window there we go so here's the cool part unlike or camel we don't really need to"
5606240,5614080," have the c part we don't need to like write wrappers so we can directly just call c without any wrappers"
5614080,5621360," because fortran is basically on the same level as c i think right so i think i think they are uh okay"
5621360,5628640," so the thing we need uh iso c binding and we only need c char right we need c char"
5628640,5637520," and probably c int not init int uh then we're gonna define all of these parameters in here right so"
5637520,5646640," the width and height are integers right so c int why did i press that type in it so this one's gonna be"
5646640,5651200," width and height and i'm pretty sure i can do it like that and then the string is defined like"
5651200,5659040," this right so we say that it's a character of this specific certain kind so we can specify the kind"
5659040,5666960," of the character to improve in interpret interoperability with c right and then we say that it's"
5666960,5676640," sort of like an array right if we take a look at arrays and strings what is the syntax with the star so"
5676640,5681120," they're they don't even they don't even they don't even explain you the syntax with a star"
5681120,5691040," okay so all of that stuff is not even full all that stuff is not even complete but i mean we can just"
5691040,5698080," like stitch together different like existing examples and stuff like that unit window uh okay so now"
5699840,5706240," we can try to call this entire thing uh we're gonna do init window uh it's gonna be 800 by 600."
5706240,5710480," we have to call it though right so we have to call this entire thing and the title is going to be"
5710480,5719840," fortran uh goatee um not goatee but goatee um and since it's a c string as you can see we have to"
5719840,5725520," concatenate it with null terminator right we have to concatenate it with the null terminator and do we even"
5725520,5731760," import yeah we do import the null terminator from here all right so i think we're ready to just test"
5731760,5741200," all that out it's not going to work by the way i'm pretty sure uh because so cannot change attribute of use"
5745360,5753200," so where is the example yeah you can have this kind of stuff so you can have several parameters"
5753200,5755920," in here that's for sure um"
5755920,5766320," must be a dummy or oh i'm sorry i copy paste it i'm in english so it has to be titled"
5766320,5772400," that's right i just copy pasted this thing yeah it this name of this variable tricks me into thinking"
5773200,5778640," it tricks me into thinking that uh this is a type right it tricks me to think that this is a type"
5778640,5785680," and i just like i skip over it i i keep keep skipping over it uh it's so funny actually okay so what else"
5785680,5800640," do we have in here can i change uh of use association why it is like that why it is like that"
5803200,5813920," uh-huh so maybe i have to have this as separate things no attribution of use associated c int"
5813920,5826160," does it mean that i have to do that for each of them is that what you want no i don't really have to"
5826160,5834640," uh right because it works in here right it works in here literally so i just like sort of import one c int"
5834640,5843520," ah okay so you probably can't use these things directly you have to say it's an integer of a kind"
5843520,5850880," c int similar to how you do that with the character right so you see in character you have to yeah so you"
5850880,5858800," kind of have to specify the mapping between the c types and the fortran types right i can see that now"
5858800,5865440," all right all right and now it works and now it says undefined reference in window so we need to link that"
5865440,5875920," with the array leap so uh let me see g fortran fortran does it have uh any flags that we could have used"
5875920,5886640," uh link does it have like minus cell um okay so the way we usually link is l"
5886640,5895040," ray leap oh it's it's part of gcc so that means that uh all of the like usual flags should probably work"
5895440,5900960," right so they should probably work but we don't know for sure um okay so let's try to build this"
5900960,5909840," into i think um cannot find does it what does it mean does it mean you can't find the library or"
5909840,5916480," the flag what if i do oh it complains ld complains all right that's fine so if i do something like ldl"
5916480,5922320," it will be able to find that but if i do ready it's not able to find that so and we probably can"
5922320,5935520," do something like l uh home opt ray leap honestly in opt we have ray lib environment which actually"
5935520,5942960," uses package config we can probably use a package config in here so let me restart emacs uh super"
5942960,5948320," quick and we're going to set up the environment for ray leap the development environment for really"
5948880,5955040," uh there we go so that means we should be able to the package config c flags array leap there we go so"
5955040,5961120," that it does the includes and also the leaves for this entire thing so and this is the thing that we'll"
5961120,5969440," probably need in here um okay so now if i go to build sh i should be able to completely replace this"
5969440,5978160," thing with something like package config leaves ray leap and chat chat are you ready for an epic first try"
5978160,5985600," moment uh build dot sh boom it didn't work but that doesn't matter because we are on the right track"
5985600,5993520," so what we need we just need to link with jlfw ljlfw there we go and it also needs ldl okay so we can"
5993520,5996400," link with that and we also need to link with pthreads"
5998800,6007680," can we find the threads okay pthread"
6007680,6012800," it crashed"
6018720,6027120," but look at that it initialized ray leap 4.6 depth and then it crashed with an assertion"
6027120,6034160," we can even go there because i built a ray leap completely from scratch on my machine"
6034160,6038960," uh it actually all the assertions tells us like correct place where they happen so we can even"
6038960,6046320," inspect the source code uh over of ray leap yes as you can see it is already because i build it in here"
6046320,6053680," isn't that cool so not only it like when it crashes it will also tell us the things inside of here"
6053680,6059360," so what it tells us is that width for some freaking reason is zero and i have no idea why"
6059360,6066400," it shouldn't be the case uh so maybe it says it's negative but one of the things we can do we can actually"
6066400,6072960," print debug this entire stuff so let's take a look uh huh yeah it it shouldn't be the case right i'm"
6072960,6080880," passing uh you know 800 and stuff like that so maybe i have to do something like this uh title"
6080880,6084880," to sort of like explicitly tell it what it has to be"
6084880,6094880," at least it didn't crash which is already good and it still says that width uh is"
6095600,6101360," has to be greater than zero so right so and width is something that we pass in there so"
6101360,6108160," it's either negative it's either negative or it's either something else"
6108160,6114560," it's hard to tell but for some reason it doesn't really pass this kind of thing in here"
6114560,6123680," uh do we have debug information because i kind of want to see what is it equal to"
6124560,6126800," uh i kind of want to see what is it equal to"
6126800,6135600," so let me see let me see"
6135600,6144400," so"
6144400,6152880," maybe it is float that's a good point actually uh let's do the following thing uh integer"
6154000,6165200," width height and then we're gonna do width equal 800 height which is something that we want to do"
6165200,6170480," anyway right because i want to have these um variables defined somehow because i'm going to"
6170480,6176480," define other things in terms of these variables uh that's a good point actually thank you thank you so much"
6179360,6186160," there you go uh thank you so much morton security thank you thank you thank you thank you so by default i"
6186160,6192080," suppose the um the literals are floats and we have to be ready for this kind of stuff"
6192080,6196880," uh they default to float apparently welcome to fortran"
6199680,6206480," where anything can screw you over uh all right so i think we are ready to maybe define the next function"
6206480,6213840," uh right let's go to ray leap opt ray leap and it's so much more pleasant than working with a camel where"
6213840,6220240," you for each function you have to like define also a wrapper so here you only need to define the uh you know the"
6220240,6230320," the declaration uh so set target i think it's called something like set target fps right and this should"
6230320,6239760," be pretty straightforward subroutine uh set target fps uh and fps is going to be just an integer so c name"
6243200,6254240," set target target uh fps and subroutine oh look at it can i do"
6254240,6262320," okay can i even do something like no i have to put end in here and i press tab"
6262320,6270800," emacs i press tab twice and it just closes uh closes that stuff automatically that's kind of cool"
6271680,6277440," um i suppose the only thing we need in here is an integer and the parameter that we have in here is"
6277440,6289280," essentially integer of the kind uh c int of the kind c int uh so this is fps so that means we should be"
6289280,6299200," able to then call um set target fps and we're gonna set the fps um can i define these kind of things"
6301680,6312560," so that doesn't even look that bad honestly like in terms of like readability except this part"
6312560,6317520," this is horrendous but this this stuff is actually kind of nice right so this is these are all the"
6317520,6323920," integers like i set them up and i call to the c library uh right and let's see so it complains about"
6323920,6330480," something um implicit"
6330480,6340800," did the rest of the thing just default to floats"
6340800,6344400," because it complained"
6347200,6348800," what if i say integer"
6348800,6357520," don't tell me that again before the clothes it works fine if i put them on the same sort of line"
6357520,6359360," it doesn't work"
6368160,6374800," it's literally an intercoll do you guys know what is the intercoll uh intercoll"
6374800,6382400," it is literally intercoll like holy why people were making languages like that so it's a compiler"
6382400,6390000," language with no pronounceable acronym right intercoll uh isn't exactly it is an esoteric language um that"
6390000,6395120," was created as a parody by don woods so the point of this language i think is that you have to say"
6395120,6401760," it can screw you over randomly as far as i know it can screw you over randomly one of the things it has"
6401760,6408960," it has a keyword please right so it has a keyword please and essentially you have to be polite for this"
6408960,6415840," language to compile so you if you're not polite enough your program is not going to compile but if"
6415840,6421840," you're over polite it's also not going to compile so you need to have the right amount of pleases"
6421840,6425520," in your program for your program to compile and you don't really know"
6425520,6430080," like how it's going to compile because it's a random number generator so this is integral"
6430080,6433280," and this is one of the things that can screw you over it has like"
6433280,6435680," several of the things that can screw you over like that"
6435680,6438640," this is literally like intercoll style esoteric language"
6438640,6441120," like i swear to god like what the"
6443920,6449760," like right i really recommend to actually read about it so"
6449760,6453120," uh"
6453120,6457600," in the description so where's my description in here"
6457600,6462960," and this is supposed to be like a serious production language"
6462960,6466880," please yeah yeah so you have to put please in picture"
6469040,6476960," why so okay so and what's funny is that it's not the height that became flawed it's actually width"
6476960,6479440," that became flawed which makes it even more confusing"
6479440,6480640," um"
6480640,6493440," by the way keep in mind that i'm basically using fortran for the first time in my life"
6494000,6499840," okay so what you're seeing in here is actually my uh genuine first reaction maybe"
6499840,6506560," but if i programmed ever in fortran i probably forgot everything so you can basically consider"
6506560,6512400," this my genuine first reaction so if you want to tell me that i'm ignorant and stupid and i didn't"
6512400,6517760," read the commentation and you would be right because i didn't read the commentation so this is me"
6517760,6522160," reading the commentation for the first try and this is my first reaction this is the reaction of like"
6522160,6524880," person seeing the shit for the first time and this is how it looks like"
6524880,6531040," yeah i did not read the documentation because that's the point so that's how i would react if i"
6531040,6534320," didn't have any documentation and i was dealing with this thing for the first try"
6534320,6545600," so that's the that's the truth uh if you don't like that i'm sorry it is what it is and it isn't what it"
6545600,6555200," uh all right so but what's important is that i still get the shit done so people criticize me for"
6555200,6562800," complaining a lot and it's a valid criticism i do agree with that to some extent but you need to ask the"
6562800,6570560," question do i get the shit done does my program compile and call to ray leap and initializes the"
6570560,6579920," ray leap correctly it does maybe i'm complaining a lot but i get the done and that's what's important"
6579920,6585520," you only have the pass to complain if you get the done if you complain and don't get the done"
6585520,6590000," get the out of here you need to get the done only then you're allowed to complain"
6593040,6600560," but on a serious note i don't know why i am like that um i think i've already discussed that when"
6600560,6607840," i go into the flow when i become like hyper focused i become like super critical of everything and"
6607840,6614080," because of that i it might may seem like i'm irritated so it's more of like maybe physiological"
6614080,6621200," reaction or something like that so you know what i mean kind of like outside of this hyper focused"
6621200,6628240," state i'm actually not that complaining to be fair right it's actually quite the opposite"
6628240,6637200," all right i like outside of the hyper focused programming state i don't really complain much trust me"
6638160,6644960," trust me um so i don't know why maybe it's something like physiological with the brain so"
6644960,6652320," with the wiring of your brain uh anyway whatever so i'm just coping i'm just coping"
6652320,6659360," uh so the next thing we need to do we initialize the window uh we set the target fps and that's"
6659360,6664640," basically it the next thing we need to do we need to organize the loop and we don't know how to do the"
6664640,6674400," loops in this language god damn it all right so uh let me see let me see there there was a section with"
6674400,6679600," the loop uh operators and flow control so this is probably something that we want to have in here"
6679600,6685440," uh loop construction so we have do uh construction right which is a for loop and stuff like that"
6686160,6694960," uh there's a do while do while um sorry only russian speakers will understand the joke uh so"
6694960,6702400," um we probably want to use that but before we can use the while we need to create a binding"
6702400,6707520," for should window close right because you're supposed to do while the window should not close"
6707520,6713040," just keep executing the the body of the loop just keep executing the body of the loop so window"
6713600,6719600," uh should close uh should close and that is not a sub uh sub procedure or a subroutine or whatever the"
6719600,6730640," fact they call it in in fortran i think it's a function function uh window should close it doesn't"
6730640,6736640," really accept anything uh and i suppose it should return something so you actually bind the functions"
6736640,6747040," slightly differently uh all right all right all right yeah there we go so you put the return type in here"
6747040,6755680," which is fine i suppose um do we have i think it has to be logical yeah it has to be logical but in"
6755680,6763200," ray leap we return booleum can we have like a c bull we can have c bull at least emac says uh so"
6764000,6776480," which is nice okay see name um window should close should close um all right and can i end function"
6776480,6781440," do we have to say end function so here we don't really have an end function which is rather weird"
6784560,6790560," i'm shaking like it makes sense to have an end function here but they"
6790560,6798720," maybe you don't have to because emacs doesn't well you probably have to have it emacs out of completed it"
6799440,6815040," um so yeah use isoc bindings only c bull all right is that it uh i think that's it so let's try to"
6815040,6823280," yeah yeah this is compiled uh do while um window should close right and i probably have to do call"
6823920,6832480," yeah call window should close and then um we have to do and do i really like this feature of emacs"
6832480,6837680," it's a very cool feature so you open the block and if you want to close the block you just press"
6837680,6842400," you just type end and you do tap twice and it just automatically does whatever you want"
6842400,6850480," all right so this is actually kind of cool um okay so and what we have to do in here like i don't"
6850480,6854640," really know so let's just try to compile and see how it is going to react but i don't want to run it"
6854640,6863360," because i don't know what's going to happen wait a second uh okay and classifiable statement ah"
6863360,6872240," so call call is a statement so you can't use call in an expression but how do you"
6874720,6886480," wait a second so subroutines calling subroutines is strictly a statement but calling functions is an"
6886480,6893280," expression i see how it is that's a very interesting way of thinking about it from the language design"
6893280,6899520," point of view okay so that means you don't really need calling here because it's an expression and it's"
6899520,6905840," an expression because it's a function subroutines are statements and functions are expressions no it's"
6905840,6913040," not it's not true um unclassifiable statement is that because i have to have something in here probably"
6920000,6928320," so is it because i have to wrap this stuff in parentheses all right how can i do not is there"
6928320,6933120," something like not oh wait i think i remember i think it's like something like dots a weird one yeah"
6933120,6939760," yeah i do remember yeah i remember seeing it at some point so i have some phantom memories about fortran"
6939760,6945280," yeah because this is such a weird thing it's sort of stuck in my head"
6945920,6950800," from the times when i see saw something about the fortune yeah it's just like no and it works okay"
6950800,6955440," that's cool but it's kind of dangerous to run it like that because when you're doing a loop you also"
6955440,6960640," have to do begin draw and and draw uh so let's actually introduce begin draw and and draw luckily"
6960640,6966640," they don't really accept anything uh right so they're basically subroutines without any parameters"
6966640,6976080," which is nice and i wonder all right so this is begin drawing we don't accept any parameters"
6976080,6980160," begin drawing so it means we don't need any of this stuff"
6984480,6991120," so in here we have to do call begin drawing and then we need to have end drawing"
6991120,7003600," and and this one has to be end all right"
7003600,7007760," what if we try to run this into everything"
7011200,7011440," huh"
7011440,7017920," i think it it created a window but it was lagging"
7017920,7021920," which raises the question why"
7021920,7026400," it created a window that"
7026400,7032320," i swear to god it has something to do with integers in here"
7036480,7040720," okay so let's comment out all of this stuff in here"
7040720,7049280," and i want to print the values of width height and so on and so forth so this is width height and fps"
7049280,7055760," show me what these things are i just want to see them because this is a dangerous language okay so"
7055760,7065040," these are the integers right and if i do something like um plus you know 0 69 it is not going to change the width"
7067200,7073280," well technically okay so one of the things we probably have to do is width equal width"
7073280,7087440," plus 0 69 right and essentially is there any way to cast things to specific values so init window"
7088400,7094560," all of these things is an integer this is an integer so everything is an integer i don't know"
7094560,7097280," why it is like that is this because"
7097280,7100000," hmm"
7100000,7106400," oh this is a good point somebody said in the chat"
7107440,7117200," yeah mohammed 12211 this is a good point what if we have to do the same thing here"
7117200,7126320," thank you so much is the stream okay by the way uh i think the stream is okay this is a good point"
7126320,7131360," what if it's just like yeah we have to explicitly say what kind of integers we have in here"
7133600,7140160," that's a very good point it might be actually the case so but it's probably not going to compile uh"
7140160,7148080," right so because it's yeah you cannot have that has no implicit type so we have to sort of um do this"
7148080,7158000," think yeah assertion width is has to be greater than zero so it fails yet again uh it fails yet again so"
7158640,7168480," and i have no idea why um"
7168480,7176000," classic so let me think i'm thinking what's going to be the next strategy like how are we going to"
7176000,7183120," approach this entire thing we can try to rebuild the raylib at that specific place"
7185360,7189840," uh to print width and height because i want to see what kind of width and height"
7189840,7195760," passed there um i kind of want to see it another approach could be to do gdb"
7195760,7203600," um another approach would be is it because one of the argument is named probably we can"
7203600,7210320," try to get rid of the named argument as well that's a good hypothesis uh so let's give it a try"
7211840,7220800," yeah okay so for some reason it creates a huge window that takes up the the whole screen right"
7220800,7227600," so i have no idea why but it still creates a window that is responsive by the way because i managed to"
7227600,7234160," close it right so if i do that it's just like yeah it creates a huge window does it start lagging as well"
7235120,7245680," i wonder"
7245680,7254240," so that is rather interesting that is rather interesting so let me take a look at software raylib"
7255520,7260320," build cmac cache do we have a debug uh debug build"
7260320,7267680," so maybe if we take a look at raylib"
7267680,7273760," file does it have a archive"
7277680,7284240," so let me just try that gdb full and i'm gonna try to break at init window"
7284240,7291040," can we do that we can all right so all right that's perfect"
7300320,7314240," why i don't know okay so what about the title though uh title passed correctly look at that"
7314240,7322560," the title is passed correctly it's fortran gotti uh game of the year but width and height"
7325440,7337120," okay okay so what else do we have in here so width and height integer integer right so let me take a look"
7337120,7342800," at the these kind of things so yeah so that makes sense that's how we do that oh wait wait"
7346960,7356480," to pass variable by oh i forgot c passes by value but fortran passes by reference"
7356480,7370880," and i read that i can only blame myself for not like for forgetting about this thing"
7376400,7385920," okay okay that's fine"
7385920,7398320," epic absolutely epic we need to also uh clear the background with a certain color"
7398320,7405120," right uh let's clear the background clear uh where's the clear yeah yeah so it accepts the structure"
7405760,7412960," it accepts the structure but it's a 30-bit uh 32-bit structure right so maybe we can pass it as an"
7412960,7418560," integer but we don't really know the size of the integer but it's actually c int"
7418560,7426320," is there something like c u int c so this is c int what about c u int on the side"
7429280,7440320," see so can you see so can you alter complete yeah all right so there's all all these things so fast"
7440320,7447760," uh c u int but do you have it doesn't have unsigned on the int"
7447760,7456480," but that's what we can pass in there right so we can pass 32. uh by the way uh interoperability with c i"
7456480,7461600," remember they had uh derive types and structs yeah there we go"
7461600,7468720," type bind c my type we can try to do something like this"
7468720,7481280," so because it's supposed to be a structure but that raises the question uh do i have to put it in here or"
7481280,7488560," somewhere else or like where do you have to put that i'm not particularly sure and also"
7488560,7492000," do i have to put it somewhere else"
7492000,7500560," all right so let's start with bind c and this one is going to be cooler and if we take a look at the"
7500560,7511040," definition of color right um color it's just like unsigned character it's just unsigned character um"
7511040,7515120," maybe here we can say only c"
7515120,7525200," but where is an inside character how do i define unsigned characters um is there any list of types"
7526480,7535360," intrinsic types iso bindings yeah they are we're unsigned dude"
7539600,7550560," they're only signed in here no unsigned values in fortran"
7550560,7556720," okay um"
7556720,7565040," you know what it uh i'm gonna just pass c in 32 that's what we're gonna pass in there"
7565840,7570480," um just like oh yeah yeah java the classical example of that situation"
7570480,7575760," um so let's just do clear background"
7575760,7584080," clear background we're accepting the color and the color is going to be"
7584080,7595120," so we're gonna put this stuff in here we're returning int 32 t uh and c uh so it has to be an integer"
7596000,7600320," see into 32 i think i'm getting the gist of this thing i think i'm getting the gist of it"
7600320,7607600," every time i say that uh something is going to scroll over me very quickly so um and i wonder if"
7607600,7613040," i can do the following thing call uh clear background where i can say something like ff"
7613040,7620960," zero zero zero zero zero ff can i do something like that can i that's a good question i can't okay"
7620960,7629600," so fortran uh hex literals is that's is there something like hex literals in fortran hexadecimal"
7629600,7641760," constance um all right it's too big"
7641760,7653920," it's too big"
7653920,7655440," because it's signed and that's why i was asking for unsigned"
7655440,7661520," because it's signed and that's why i was asking for unsigned"
7661520,7675840," holy fucking shit that's like to make this trick work it has to be unsigned"
7676720,7683360," but it doesn't support them and i can't even do this kind of thing because it's bigger than than signed one"
7683360,7691520," well you can disable the arrange checks and this is one of the things we can do probably"
7691520,7695280," uh one of the things we can do we can actually use the negative failure"
7695280,7698800," can we reinterpret it as a negative failure is it possible to"
7699520,7709440," do that somehow right can i i don't think so um let's try to do no range checks maybe that will work"
7709440,7721680," oh boy um okay and it didn't work that's cool right do we even call it i think so is there an easy way"
7722480,7732000," um is there an easy way to convert that hex into a negative one or do we have to do some stupid"
7732000,7735520," shit like okay so we can try to do the stupid shit let's go ahead and do it"
7735520,7747840," uh all right so this is going to be stdio stdio.h integer and we can do you insert it to color"
7751760,7762800," printf d uh point it to the color we pawn it into the pointer to the integer and we dereference it"
7762800,7770080," so we literally reinterpret the bits as assigned value right so gcc actually clang it doesn't matter"
7770080,7778240," main.c let's just run this into i think and it is this value so now if we pass this value to here"
7778240,7785360," and try to do the build and run it it still didn't freaking work you know why probably because it"
7785360,7796640," interpreted it as um as float maybe i don't freaking know um so let's actually try to do something like"
7796640,7802800," this integer just in case i'm not sure if it's neat or not but just in case i'm gonna put this thing in"
7802800,7808000," here because i don't know how fortran works uh right so in here we're gonna have a caller right"
7808000,7815920," and in here we're gonna say caller is equal to uh this stuff so this is the caller uh just in case"
7815920,7822000," because you never know you you don't know what to expect from this thing um so yeah you have to have"
7822000,7830560," that stuff in there uh all right all right all right and it didn't work still okay so maybe there is"
7830560,7837280," something with a clear background we pass it by a value i'll begin drawing clear background"
7847120,7856000," this is the dumbest hack i've ever written in my entire life holy but it works again i may be"
7856000,7865520," complaining i may be even doing it wrong but i get this done i get this done it is working it is twerking"
7867840,7881600," yo what the fuck so uh okay i get the gist of this language that's a good language 69 out of 69 so yeah"
7881600,7887520," uh now i can even kind of read it i would like to do a little bit more in this language right so maybe"
7887520,7895280," we could try to yeah make a full game like small full game out of that like tic-tac-toe or something"
7895920,7899920," uh right so maybe i'm gonna do more streams on this kind of stuff right so i think it's"
7899920,7907200," it's promising i think it is promising so yeah it's pretty cool uh so let's take a look at uh other"
7907200,7914000," subs that people probably gifted and uh you know bought thank you so much hector 84 i think i will"
7914000,7920720," acknowledge you uh one amona thank you so much for twitch prime and then incredulous buffoon uh thank you"
7920720,7925760," so much for 10 gifted subs thank you thank you thank you all right that was pretty epic"
7926000,7931360," so and well i mean i'm complaining a lot but that was surprisingly straight forward"
7931360,7937680," that was surprisingly straight forward right so we did have some roadblocks but there was nothing"
7937680,7942960," impossible to figure out you know what i mean nothing really impossible to figure out like we figure out"
7942960,7949920," majority of the things so i guess it's fine i guess it's a passable language it is in fact passable"
7951120,7956320," all right so i'm ready for more than two hours i think that's it for me for today thanks everyone"
7956320,7961680," who's watching me right now i really appreciate it have a good one and see you all on the next"
7961680,7966720," recreation programming session with azuzun i love you"

start,end,text
0,4980," Hello everyone and welcome to yet another recreation programming session with Amista"
4980,12940," Zozin and his Disco T-shirt. So we've been working with Raylib for quite some time, right? So and"
12940,19880," the interesting thing about Raylib is that it has two notions for sound, right? So let's actually"
19880,27320," take a look at that. So if I go to the raylib.h, so it has a notion of sound, right? So there you"
27320,34460," go, here is the sound, and it has a notion of music. So what's the point of separate, like I mean"
34460,40280," they already put it in documentation, but the question is like what's the point of separation"
40280,46700," of these two things? And the point is that music is an audio stream anything longer than 10 seconds,"
46700,54960," right? So music is basically a long one, sound is a short, you know, music or sound. So and"
54960,61580," essentially the way it works, I think, is that a sound is loaded entirely into the memory,"
61580,68700," and music is sort of like a slowly streamed as it plays, right? Because it can be pretty big,"
68700,73260," you maybe on some platforms you don't want to actually keep the entirety of the music in the"
73260,80200," memory, right? Or at least like loading up that music is not going to take that long if you're just"
80200,85120," streaming it from from the hard drive, right? So but since the sound effects are usually very small,"
85120,89700," like loading them up into the memory, like doesn't really take that much time. But to be fair, I would"
89700,95200," like to confirm that. So if we take a look at the function something like a lot of like a load sound,"
95200,101660," not loud sound, but load the sound, right? So that's the thing that basically loads it from from the hard"
101660,109920," drive. And let's actually find the implementation of this function, right? So I'm going to actually do something"
109920,117620," like sound, loud sound. Where are, okay, so that is probably the implementation. And the first thing it does,"
117620,127040," it loads the wave. So actually, there is a third, you know, representation of sounds, it's the wave, right? So we can take a look at the wave."
127040,137960," And wave is literally the sound samples, the sound samples stored in the memory, right? So so the sound in the computer"
137960,144180," represented as samples, right? So the wave is just like a sequence of integers and wave in here, a structure wave is"
144180,152360," just like stores that. So usual small sound just loads the entirety of this thing in the memory. And then just like, you know,"
152360,157480," it parses that wave and gives you the sound object that you can then play and stuff like that. If we take a look"
157480,163920," at the load music, it actually does something slightly more interesting. I think that's the function that loads"
163920,171840," the music stream, right? So what it does, depending on the format, right? So the first thing it does, it tries"
171840,177340," to determine the format, right? So as you can see, it takes the file name, and then looks at the extension"
177340,182760," of that file name, right? And if the extension is wave, it does one thing. If the extension is OGG,"
182760,187900," it does another thing. If the extension is MP3, it does the third thing, and so on and so forth. You get"
187900,193160," the gist, right? So you get the gist. So let's take a look at the wave, right? So what it does,"
193160,199500," it allocates a little bit of memory for like a context, some sort of context, which is called"
199500,206960," dr.wave, right? And then it uses the dr.wave init file to create that context and stuff like that. So"
206960,215640," essentially, the idea is, depending on the extension, it uses different sound library to process different"
215640,223440," formats, right? So it's basically a little bit of the polymorphism in C, even though this is a pure C"
223440,229060," library, it still does a little bit of a polymorphism depending on the extension, right? So you can do whatever"
229060,236460," you want in C, right? So polymorphism is just a fancy name for dispatching, right? For dynamic dispatching"
236460,242580," at runtime. That's what literally it is, right? So in the case of the wave, it uses a library called dr.wave,"
242580,249400," right? So we can take a look at that. I think it's located in external, right? So dr.wave, right? So it's"
249400,255040," a wave library. It's an open source, like a header-only library that you can use if you want to, right? So"
255040,261820," you don't really have to use RayLib. If you want to process some wave files, you can just like use"
261820,267480," this library. In fact, this is something that I really recommend you to do. Go into the source code"
267480,274560," of RayLib, right? And not only try to read it, but look into the SRC external folder. Look at the SRC"
274560,282280," external folder. This folder contains all of the header-only libraries that RayLib uses, and there's a lot of them,"
282440,289220," right? If you want to discover some cool header-only libraries, check out this folder, SRC external and"
289220,293900," RayLib. I really fucking recommend you, right? So because I discovered a lot of cool things in here."
293900,300620," So apparently there are header-only libraries for processing these formats, like flag, mp3,"
300860,309700," WAV, and they are just one file per format, right? So there's things for like just playing sounds on any"
309700,313920," platforms called mini-audio. We've already looked into that. So there's a lot of cool things in here,"
313920,320000," like a fair amount of STB libraries as well. Not all of them. There's a lot more STB libraries, but this is"
320000,325500," the main ones that RayLib is using. So RayLib is basically like gluing them together for you in a"
325500,333140," nice, like a unified interface for a game library, right? So RayLib is valuable not only as a library"
333140,340220," that you can just plug in and start making games, it is valuable as a learning resource. Just reading the"
340220,346520," source code of RayLib is extremely valuable. You will learn a lot of interesting shit. Like, trust me."
346720,351260," It's fucking cool. That's why I really like this library, right? So because just like open it up,"
351260,355260," it's really easy to read. As you can see, we're already reading the source code of RayLib and you"
355260,359300," will learn a lot, right? So and there's a bunch of examples on how to use this libraries anyway."
359300,367620," So let me take a look at that, right? So it uses this entire thing and what it does, it doesn't"
367620,373480," really load the entirety of the file. It just initializes the context, right? So initializes the"
373480,382040," context. And right, so then it creates an audio stream object and that's it, right? So it doesn't"
382040,388960," really load the entirety of the file. It just prepares the context which is going to decode,"
388960,396600," you know, this file and that's it. And if you're using music, right? If you ever worked with RayLib and"
396600,402660," you are playing some sort of a music, you know that on each frame, periodically, you have to call a"
402660,407980," function called update music stream for the music you're currently playing, right? So this is the"
407980,414780," source code, right? That basically uses that functionality, right? So you periodically update"
414780,420140," this entire thing. So if you take a look at this function update music stream, right? So what does it do?"
420600,431340," What does it actually do? So it tries to figure out like how much stuff it needs to read, right? How much"
431340,438060," stuff it needs to read. And if I'm not mistaken, right? If I'm not mistaken and then it then dispatches"
438060,444600," on the type of the context, whether it's a WAV file or something else, it just pulls a little bit of the"
444600,449520," frames, a little bit of the frames from that specific context, right? As you can see, in the"
449520,456920," case of WAV, it just uses Dr. WAV thingy to pull those things. In case of OGG, it uses STB Warbis to pull"
456920,462000," a little bit of the stuff and so on and so forth, right? So that's basically the difference between"
462000,469780," these two things. We are using this functionality in Mutualizer, the music visualizer that we've been"
469780,475160," working on for quite some time already, right? So I'm going to give the link to this entire thing here."
475160,479800," I'm going to put it in the chat and for people who's watching it on YouTube, it's going to be in the"
479800,486480," description, right? So and essentially we, so the way this entire thing works, let me actually start"
486480,493140," the Mutualizer for, to demonstrate how exactly it works. And maybe another thing I want to do, I want to"
493140,500400," open this folder that we have in here, so I can drag and drop stuff. So the Mutualizer actually only"
500400,505840," accepts files that are drag and dropped, unfortunately, as of right now. So let's actually,"
505840,513200," let's actually see, maybe I'm going to take some, some short music, I don't really know, maybe, maybe this"
513200,519040," one, right? So it looks like this, right? So you drag and drop the music and it starts playing the music and"
519040,524820," then you may want to actually render it into, into some sort of animation, right? So that's basically"
524820,530080," what it does. So it's going to render that specific animation into the file. The interesting thing here"
530080,537680," is that when we are playing, when we're playing the music, we're loading it as a music, but then as we"
537680,545320," render the music, we're forced to actually load it as a sound, not really as a sound, but actually as a"
545320,553640," wave. So let me actually go to plug.c. All right. So when I press, I think it's something like key"
553640,561080," r, right? So key render. So to render, I think, okay, so here we have a function start rendering the track."
561080,573440," Right. So yeah, I already have a track that is loaded as, you know, as a music. And then before I render it,"
573440,581120," I load it as a wave. And the reason why I do that is because I need to get the samples, the actual samples of"
581120,588080," the wave, so I can render the animation in offline without actually playing it. You know what I'm talking about?"
588080,595600," So, like, I need to have both the stream, because I'm playing it, right, as I'm visualizing it, and I also need to"
595600,603160," have the samples to just render it into the final video. So it's all cool and stuff, but it actually makes it"
603160,611420," difficult to render things that are big, right? So, for example, I have a big, you know, file in here,"
611420,619680," the entirety of the album in here, right? If I try to visualize this entire thing, and if I drag and drop"
619680,625640," this entire thing, it's actually super fast. It loaded instantaneously, right? It loaded"
625640,632400," instantaneously, even though I think it's around 20 minutes. I'm pretty sure it is around 20 minutes. We can"
632400,639260," actually take a look at how big it is. So if I do ffprobe, right, it's supposed to, it's supposed to tell me"
639260,649980," how big it is. Yeah, let's have another one, whatever. It's actually 45 minutes, huh? Right, it is 45 minutes,"
649980,656260," even though I dragged and dropped it in here, and it loaded, like, instantaneously. This is because it uses"
656260,662620," streaming, right? So it doesn't load this entire thing into the memory, right? It just, like, opens it up,"
662620,669920," and as you need to play it, it, like, lazily loads it from the hard drive. But if I try to actually start"
669920,680540," rendering it, it actually hangs, it actually hangs because it's trying to load all of these 45 minutes"
680540,688560," into the memory, and so just, like, it does not respond precisely because of that, like, precisely because"
688560,696200," of that. So it's oof, that literally oof, like, I know, I know. So, and the answer to that would be"
696200,703640," probably, well, just use the stream, right? So just when you are rendering, just use the same trick as you"
703640,711280," when you're playing. But the problem is, the music stream is a black box. Not really black box, but more"
711280,719480," like opaque box. So the only thing you can do with the music stream object in Raylib is load it from file"
719480,726480," and play. That's it. You don't have an access to all this underlying context, whether it's a WAV file"
726480,734920," OGG file, everything that I just showed you. All of that is hidden from you. It's hidden from you. It's"
734920,742400," encapsulated. OP people, are you fucking happy? Are you fucking happy with your encapsulation polymorphism"
742400,751120," bullshit? Like, actual useful functionality that would solve my problem, it's obstructing away. It is fucking"
751120,762880," abstracted away. That's a perfect emote for that. You can't see that because the boomer doesn't"
762880,770400," animate it, but it's just like a dog no tell. Yeah, yeah, exactly. That's perfect. I can try to do that"
770400,778080," bit, but I mean, the microphone is actually on my desk, so the sound is going to be too loud, right? So, yeah, and that's"
778080,785920," basically what I want you to do on today's stream, right? So, I want you to, like, hack Raylib and expose"
785920,794000," all of that functionality because that's the another beauty of Raylib. Not only it is easy to use, it is"
794000,800560," easy to read. You can read this entire thing. It is also relatively easy to modify, right? So, it's completely"
800560,806240," open source. You don't like something about the interface of Raylib. Just modify it, right? So, one of the"
806240,812240," the things we do in this project, by the way, we actually copied and committed the entirety of the"
812240,817920," source code of Raylib into the project, right? So, this is the entirety of the source code. Like, I removed"
817920,823200," some stuff at the root of the project because it's not really relevant, right? But the source code itself"
823200,829600," is just here and every time we're building the project, not every time, well, we cache it, right? So,"
829600,834400," but when you build the project, it also builds Raylib for you, right? So, if I remove the build folder"
834400,841120," and I try to rebuild this entire thing one more time, right? Like so. So, the first thing it does,"
841120,846480," it builds Raylib from scratch. And Raylib is a relatively small library, so it lacks a little bit,"
846480,851760," right? Because we're, like, doing that in, like, in multi-threading and stuff like that. And Raylib is a"
851760,856000," relatively small library, so it's not going to take that much time, right? So, it's going to be relatively"
856000,859920," fast. And it's not going to build this the second time, it actually caches that. And then it's going"
859920,867840," to build the mutualizer itself, right? So, the Raylib is so small, you can just afford simply committing"
867840,874160," the entirety of Raylib with your project and just building it with your project, right? So, doing"
874160,879040," that on each rebuild is a little bit too much, right? So, but I mean, you can always cache it. So, that's"
879040,885520," pretty cool. That's pretty cool, I think. All right. So, what I want to try to do, I just want to try"
885520,895600," to understand how we can basically exploit, you know, this ability of the thing to sort of, like,"
895600,901520," stream from the file system, if you know what I mean, right? It's kind of, it's kind of interesting."
901520,908480," External Raylib. Yeah, I was actually thinking to maybe similarly create, like, external folder and put"
908480,913280," Raylib in there, but it's more like an organizational thing, right? So, just like a little bit of bike"
913280,917680," shading. At this point, a little bit of a bike shading. So, we'll get some subs, by the way. So,"
917680,923360," let me acknowledge the subs super quick before we dive into this entire stuff. So,"
923360,928560," thank you so much, ZLC, of what you run this application with the message. I'm from Hong Kong,"
928560,933120," really appreciate you, inspiring stream. You're welcome, right? I'm really good. I'm really glad to"
933120,939200," hear that. So, I'm really, like, it's interesting, like, from how many places around the world people"
939200,945520," watch me, right? So, it's actually super cool, right? So, we're living in a really interesting time,"
945520,953120," right? So, where you can just, like, have a camera and microphone, right? And just, like, make a public"
953120,958320," talk, right? To the entirety of the world, right? To the entirety of the world. You don't have to"
958320,964320," sign up to some sort of, like, fancy conferences, right? So, like, pay a huge fee or anything like"
964320,968240," that. You just have to pay for the internet, you have to pay for the mic, you have to pay for the"
968240,972560," webcam, and you can give a public talk. And if it's worth anything, it's gonna"
972560,978960," get trendy on social media, and people will hear you, right? If you have anything of a value to say,"
978960,984640," the social media algorithm will probably pick it up and amplify it, right? So, that's actually super"
984640,990160," cool. That's actually super cool. So, yeah. Rorinka, thank you so much for Twitch Prime with the"
990160,997520," message ""tsodding pogin"" at twice. ""tsodding pogin"" at twice. FGLG, thank you so much for Prime"
997520,1002400," subscription with the message ""Wahoo! Strange time for you to be streaming!"" Yeah, I'm really sorry,"
1002960,1008960," my sleeping schedule is a little bit fucked up. So, yeah, maybe the next stream is gonna be"
1008960,1014800," at the usual time, I haven't decided yet. So, people from all around the world in the chat, yeah,"
1014800,1021920," that's actually super cool. It's actually super cool. Anyways, so let me actually see what we can do in"
1021920,1032240," here. Maybe I'm gonna start with maybe creating, like, a very simple project that just streams the, like, a big file."
1033040,1039040," So, how do we even stream big files? So, the big file that we have is in OGG format, right? So,"
1039040,1043280," it's ""pallet-red-sound-ogg"". So, let me see."
1043280,1051280," Our audio. So, this is the name of the module, right? So, it's stb-vorbis, right? So, they're using stb-vorbis."
1052160,1059920," load-music-string. Where is that function? And if the extension is OGG. Yeah, so they're just opening"
1059920,1066880," this entire file, right? They're getting some additional info and stuff like that. And that's about it."
1067680,1073280," Honestly, maybe I could just use these functions directly."
1074560,1080400," Right. So, just use this library directly by passing RADIP, right? Instead of loading the"
1080400,1084640," entirety of the wave, right? So, look at the extension and just do this kind of thing. Or maybe I can"
1084640,1092240," factor out this entire code that just does the polymorphism depending on the extension and have my"
1092240,1100480," own sort of object that allows me to stream things. That sounds interesting, actually. That sounds"
1100480,1107680," interesting. So, but they also have a notion of audio stream, and I'm not sure if we can easily use that."
1107680,1118240," We'll see. We'll see. In any case, let's actually create something like main, maybe ""prob-ogg.c""."
1118240,1125200," So, I'm going to do something like this, and maybe something like this. And I wonder what's going to be"
1125200,1130320," the easiest way for me to even build this entire thing, right? So, maybe I can build that in knob."
1130320,1137040," Right, right, right. But knob is actually, by itself, is a rather complicated thing."
1137040,1144480," But, I mean, I don't freaking know. I can just try to do that. So, maybe in a stage two, right? So, if I"
1144480,1152960," take a look at the knob. Yeah, by the way, by the way, recently I created a separate folder,"
1152960,1158080," which is called src_build, right? Because for those who doesn't know, we're using like a very"
1158080,1163760," interesting build system. It's a custom build system that is written entirely in C, right? So, instead of"
1163760,1169920," like using some, you know, some other language like cmake or whatever, we're using C, right? And I"
1169920,1176000," recently put everything related to building the project into src_build, right? Into src_build,"
1176000,1180160," and all of that is also written in C, so it's actually kind of cool. So, it also has two stages,"
1180160,1185520," right? So, it bootstraps itself and stuff like that. So, yeah. So, I don't really know where we're"
1185520,1191840," going to be building all that. Maybe in a stage two, right? So, maybe in a stage two. And in a stage two,"
1191840,1198480," when we're just building some stuff, when we're building some stuff, we're building the musula as"
1198480,1204320," of itself. And I suppose this is where we can build the prop thing, right? So, we can always do knob"
1204320,1215040," cmd cmd, like so. And then we're going to say knob cmd append cmd. So, it's going to be cc. And maybe I'm"
1215040,1224800," going to also enable a bunch of extra things in here, like so. Look at that. And so, the output."
1224800,1233040," I expect the output maybe to be in a build folder, build-probe-ogg. And the input is going to be,"
1233040,1243840," I suppose, just prob-ogg.c, right? So, and then we just run knob run, knob cmd run synchronously,"
1243840,1248240," right? So, we run this entire thing synchronously, right? And if it fails, for whatever reason,"
1248240,1252880," we just exit with non-zero exit code. So, that's it. So, we can actually put a little bit of a code in"
1252880,1257920," here like that. After the experiments, we're probably going to remove it, right? So, I just need some place"
1257920,1263760," where I can just put this entire stuff. So, let me try to rebuild this entire thing. Is it going to"
1263760,1269360," build that thing? I think it is. Yeah, look at that. So, it actually built this entire thing, but it takes"
1269360,1274640," some time to build the mutualizer. So, maybe to speed things up, I'm going to say don't build mutualizer"
1274640,1279840," as of right now, right? So, it's only going to build the prop-ogg, right? So, our build system is"
1279840,1287840," entirely dedicated to building prop-ogg now, right? So, and all of that again is purely in C, right?"
1287840,1294640," So, you can do all that purely in C. So, let's actually put hello world in here like so. Let me see."
1294640,1302880," And afterwards, I can do build prop-ogg. Yeah, and it says hello world. Did you look at that? It says hello world."
1302880,1310640," Cool. So, we probably want to include the stb vorbis, vorbis.h. And I suppose,"
1310640,1316800," like, what's the difference between vorbis and OGG? Does anybody know? Like, why do people use this"
1316800,1323360," two words interchangeably? So, I suppose the name of the format is vorbis and the extension is just OGG."
1323360,1328720," It's kind of weird, honestly. Vorbis OGG. So, what's up with that? OGG is a container,"
1328720,1335840," Vorbis is a codec. Oh, I see. I see. It's a free open source software project leading. Yeah."
1335840,1341200," It's a free open source. Well, that's not very useful descriptions and stuff like that."
1341200,1345920," OGG can also be OGG. Okay. So, that explains it. So, OGG is just a"
1345920,1352000," container, right? So, like MP4 or something like that. And, you know, Vorbis is a codec. Okay. That's"
1352000,1355840," pretty cool. That's pretty cool. That's pretty cool. Thank you. Thank you for explaining that. I didn't"
1355840,1360880," know that. I genuinely didn't know that. All right. So, if I try to build this entire thing,"
1360880,1364160," it's not going to build because we don't have an access to all of that stuff. But,"
1364160,1370720," luckily, this particular file is actually located within the Raylib folder, right? So,"
1370720,1376800," we can go into the Raylib. We can say ""type file F"", right? So, and then find that it doesn't..."
1379520,1388800," What the fuck? Ah, it's actually ""C"", it's not ""H"". Why is it called ""C"" and not ""H""? Wait,"
1388800,1395680," wait. I thought it's a... I thought it's a header. What the fuck? ""Find file at point"". So,"
1395680,1404480," huh, ""stb Vorbis"", ""nothing's stb"". Yeah, I thought it's ""H"". Why was it renamed from..."
1406320,1414320," Yeah. ""Sus""? I want to take a look at that. If I go to ""nothing's stb""."
1414320,1425600," Raysan did something weird in here, I think. So, Vorbis... It's okay. Why is it ""C"", though?"
1425600,1434320," Look at that. That is so bizarre. Why is it ""C""? Look, all of them are ""H"", but this one is specifically ""C""."
1434320,1442320," Let's see. Was it a mistake or... Imposter? Yeah, exactly. Imposter file."
1442320,1449520," So, and yeah, maybe it's an old one of some sort."
1449520,1455680," Yeah, I don't know if I can know. So, does it have the implementation macro?"
1455680,1461360," Implementation... Doesn't it even have implementation macro? That's really weird. But anyway."
1462160,1470160," Okay. So, I suppose it's just ""C"". And it still won't find it if I try to build this thing. It doesn't"
1470160,1478320," really matter. Because it doesn't have this file in the search path. So, one of the things we have to"
1478320,1484880," do in a stage two is probably add something like ""i"". So, in here we're going to say ""arraylib""."
1485680,1491040," ""arraylib"". And then, as far as I know, we have a ""arraylib"" version in here. So, we can do something"
1491040,1497520," like this. ""arraylib"" version. And maybe I'm going to just leave it as this. I'm going to provide the SRC."
1498560,1503680," Right. So, and then I'm going to say that I want to include from external. Right. So, I want to"
1503680,1508640," explicitly say that it's something external. Right. So, if I try to rebuild this and I think one more"
1508640,1514320," time, is it going to build? It in fact built. Right. But it couldn't link, couldn't find functions like"
1514320,1519760," sine, cosine, because they are all in the math. Right. So, let's actually go in here and link"
1520320,1526960," all of that stuff with math. Like so. I think it's going to, I think it's going to work now."
1526960,1533840," That's pretty cool. That is, in fact, very, very cool. Okay. So, let me go and see what we can do in"
1533840,1541520," here. So, when we are... Aha. So, we want to call stb-verbis-open-file. Right. So, that's probably the"
1541520,1548640," first function that we want to call in here. So, here we have a file path of some sort. And the big file"
1548640,1554240," that we want to work with is going to be the pilot-red-sun. So, I'm going to go into the music"
1554240,1559200," and I'm going to just find this thing. Right. So, I'm going to say that this is what we're working with."
1559200,1566000," Music, pilot-red-sun. Boom. So, and the question is, what kind of parameters this function actually"
1566000,1572320," accepts? Right. So, let's actually find it. So, what is this function? It accepts file name. Okay."
1572320,1582320," That makes sense. And then error. And then stb-verbis. Oh, so it accepts a custom allocator. That is"
1582320,1591920," actually super cool. What? Oh, wait. It's not even a custom allocator. It's a buffer that you"
1591920,1596080," can pre-allocate. So, it will allocate all of this stuff into that buffer."
1596080,1603120," That's pretty cool, isn't it? It's almost like an arena. Well, I mean, arena is a little bit more"
1603120,1611680," sophisticated notion. Right. So, arena is actually a bunch of such buffers that are put in linked lists."
1611680,1617120," Right. So, they connect it with linked lists. Right. So, this kind of thing, it cannot extend very"
1617120,1622880," easily. Right. So, it doesn't really grow. It's a fixed area. But arena is a bunch of these, like,"
1622880,1628480," fixed areas, actually. Right. So, what this thing does, it just, like, opens a file. Right. So,"
1628480,1634800," and what about an error? I suppose maybe it indicates an error. Yeah. So, returns no and sets."
1634800,1641680," It sets an error to some sort of a value. This is very unusual, actually. So, maybe not. Maybe it's fine."
1643760,1651280," So, that's pretty cool. So, instead of, like, a global error no, why libc doesn't do this kind of"
1651280,1656720," shit? Well, I mean, that means you'll have to actually provide this parameter for each c function,"
1656720,1660960," but at the same time, you have to check the output of each function anyway. So,"
1660960,1666640," but this one at least gets rid of the global error no variable, which is very annoying to work with."
1669120,1674560," Who do you? It's nothings. Right. Nothings develop this thing. It's so cool."
1674560,1683360," I swear to God, like, every time I read the code developed by Sean Barrett, like, I learned something"
1683360,1688160," new. Like, I learned something new, not only about c, but about programming in general. Just, like,"
1688160,1693120," different ideas. Right. So, I don't know. Like, it's so cool."
1693120,1700400," ""Libc was made in the 80s when the global variables were fine."""
1700400,1705680," I suppose. So, global variables are fine when your problems are smaller."
1705680,1709280," Right. So, and maybe that was the justification."
1711440,1718880," ""Have you ever explored standard c libs?"" Yes, I have. I explored Musil, because it's easier to"
1718880,1725760," explore than glibc. Right. And it's actually kind of cool. I really enjoyed what I saw there."
1725760,1731280," ""I always get lost in the macros and hundreds of files, and it feels so hard to find..."" Explore Musil."
1731280,1737200," Right. If you want to explore a standard c library, take a look at the Musil. Right. It's so freaking cool."
1737200,1744160," I'm going to show you how cool it is. I'm going to freaking show you. So, here is the source code."
1744160,1753040," And it's just a single tarball. Okay. So, I'm going to do wget and let's just download it."
1753040,1762480," Okay. So, let's unpack it. Did it unpack? All right. I think it's already unpacked. Okay."
1762480,1769280," So, the one thing Musil does, it actually puts each libc function in a separate file."
1769280,1778880," For instance, you want to explore function malloc. What you can do? Okay. Find file with the name malloc.c."
1778880,1786480," There you go. So, again, each function is a separate file. You can just grab it. You can just find it and"
1787200,1793040," open this thing, like so. And there you go. So, here is a malloc implementation. So, it should be somewhere"
1793040,1798800," here. So, word malloc. There we go. So, this is literally malloc implementation. And you can just read it."
1798800,1805920," It's actually pretty simple. Right. It's specifically in Musil. Gdpc is really painful to read. To be fair,"
1805920,1811760," any GNU projects is extremely painful to read. Right. I don't freaking know why the"
1811760,1819760," fuck they're writing their project like that. Maybe because GNU utilities and GNU projects are used in so"
1819760,1826720," many different fucking environments. They're forced to actually put a huge mass of macros and stuff like"
1826720,1831840," that. But, I mean, they don't really have to. Right. So, Musil is also probably used in a lot of"
1831840,1838080," different environments, but it's fine. Right. So, that's like, look at how simple it looks like."
1838080,1843440," Like, literally. Okay. This is the signature of the malloc. And here goes the implementation of malloc."
1843440,1849520," Right. So, you look into Musil. I really recommend to read it. And here's the cool thing about malloc in"
1849520,1856800," Musil specifically. I don't really know. Musil is Linux only. God damn it. But anyway. So, here's the"
1856800,1864480," really cool thing about malloc in Musil specifically. All right. If your n, the size of the object that"
1864480,1872720," you provided, actually extends, like exceeds a certain mmap threshold, what it does, it just mmaps it. And"
1872720,1879040," that's it. That's it. Look, it doesn't do anything super fancy. It just like mmaps it. And there you go."
1879040,1886000," So, it only does special things for small allocation. For small allocations, as you can see,"
1886000,1891280," it pre-allocates a bunch of, like, ready to use chunks of memory and stuff like that. And it just"
1891280,1895440," looks up for them and so on and so forth. But if it's too big, it's just like, whatever. It doesn't"
1895440,1901600," matter. Just mmap it. So... Right. So, this is so cool."
1901600,1909440," So, to the fair, GLPC targets a lot of architecture system. Musil, as far as I know, is targeting things."
1909440,1917200," Okay. That explains it. Right. So, that explains. So, because different, you know, to make a code"
1917200,1923760," fit into so many different environments, you need some sort of, like, a stop gaps, like, all around the"
1923760,1929520," code. Right. So, if devs and stuff like that. NicheOS. Right. So, NicheOS for HTTP servers. Right."
1931120,1937680," If Windows is a NicheOS for video games, Linux is a NicheOS for web servers. Right. That's what it is."
1939840,1946000," Anyways. So, let's actually go ahead and continue with what we were doing."
1946000,1953520," So, I'm going to open ""probe-ogg"" and let's just go ahead and do that. So,"
1953520,1961200," it's supposed to return some sort of, like, a pointer to the object. So, let's open ""stpd-vorbiz""."
1961200,1969120," And I just want to find the name of this object that we have in here. Right. So, I'm going to call it"
1969120,1975360," context ""ctx"". So, I suppose, in case of an error, in case of an error, it returns ""null"". It returns"
1975360,1981280," ""null"" and sets ""error"" to something. Possibly to ""vorbiz file open failure"". Right. So, what is that?"
1981280,1989520," Okay. So, this is a different errors, sort of speak. It's an enumeration. And I wonder if there is a"
1989520,1995040," function that accepts this enumeration and returns the human readable string. So, let's actually find out."
1995040,2002400," Okay. So, all right. So, ""error-vorb-f"". So, it just sets an error."
2002400,2010400," I don't really see. Yeah, I don't think so. Maybe... Do we have, like, a count? Maybe there's some sort of"
2010400,2017280," array. So, it feels like they are primarily just codes. There's nothing much we can do in here. But anyway."
2018000,2028960," So, if ""ctx"" is equal to ""null"", we can just do ""fprintf"", ""std"", ""error"", ""could not open as""."
2028960,2036400," All right. So, ""could not open as"". And ""as"" is a file path. And we're just going to return, like,"
2036400,2043680," one. There we go. So, the next thing we can do. So, the cool thing that ""radip"" doesn't here. It gets"
2043680,2051280," ""stb"" in four. Right? ""stb-vorbis"" in four. Which we can try to print. Right? So, I suppose this particular"
2051280,2058640," structure maybe contains... Maybe contains some information. Well, I mean, it's kind of obvious."
2059280,2064800," So, ""sample_rate"", ""channels"", ""setup_memory_required"", ""setup_temporary_memory"","
2064800,2070080," and so on and so forth. Right? So, maybe this is something that we can do in here. So, let's actually"
2070080,2078640," extract this thing. Right? So, we successfully arrayed this file and we are passing it in here. So,"
2078640,2083840," this is going to be ""ctx"" and this is ""stb-vorbis_info"". Right? So, then we can just print"
2083840,2092080," something like ""file_path_s_file_path"". Then, we can print the amount of channels. Right? So, how many"
2092080,2101680," channels we have in here. Right? So, it is literally called ""channels"". Right? So, I can do ""info_channels""."
2101680,2108560," And then, ""sample_rate"" is also rather interesting information. So, let's also print that thing."
2109760,2114400," So, this is going to be ""sample_rate"". Right? So, what I'm doing right now, I'm just like learning"
2114400,2118640," how to use this library. Right? So, I think it's going to be very useful. And all of these libraries,"
2118640,2124320," they have very similar interfaces anyway. Just open, initialize the file, and maybe get some"
2124320,2130320," additional information. And also, there's probably a function that just pulls, you know, frames out of"
2130320,2136160," the file. Right? All of them, like, kind of have a similar interface. It's just slightly different. Right?"
2137760,2144320," So, let me now try to rebuild this entire thing. No compilation errors. Right? So,"
2144320,2150560," this is ""build_probe_ogg"". And if I run this entire thing, we successfully loaded the file."
2150560,2158720," So, very quickly, actually, if I just run this entire thing, it took us to, like, how many? How many"
2158720,2166000," milliseconds? Yeah. Four milliseconds to just open 45 minutes audio file. Right? So, this thing doesn't"
2166000,2171040," load the entirety of the file into the memory. Like, it's just, like, reads meta information and gets"
2171040,2177680," ready to read, like, more of that stuff. It's pretty cool, I think. Right? So, which is exactly what we need."
2177680,2184480," Right? So, the next question is, how do you pull some stuff out of it? All right? So, you can even get"
2184480,2192000," length in samples. This is actually kind of cool. Right? So, yeah. So, you can take the entirety of the"
2192000,2196560," length, I suppose, without reading the whole thing. Maybe we should do that. Right? So, I actually want"
2196560,2205520," to want to see. So, let's see. Let me maybe... This is not channels. This is a sample rate."
2205520,2216240," This is a sample rate. All right. So, I'm going to provide the context. Right? C to x. And we can print"
2216240,2224800," have this entire thing length in samples. And what kind of type does it return. That's a very interesting"
2224800,2230560," question. It returns unsigned integers. So, that means we're going to be using u. There you go."
2230560,2236160," Let's try to now review this entire thing and see what is going to happen."
2238400,2243360," Come on. So, this is how many samples we have. Right? In the entirety of the file."
2243360,2251600," So, this is how many samples the file plays per second. We can go ahead and verify if everything"
2251600,2258080," is correct. So, essentially, we can take this amount of samples. This is the total amount of samples. We"
2258080,2266560," divide it by the samples per second. So, this is basically amount of seconds within the file. Right?"
2266560,2270960," So, this is the amount of seconds within the file. We can actually do an integer division probably. Right?"
2270960,2279440," So, yeah. So, 2710 samples. Right? So, then we can divide it by 60. So, that will give us amount"
2279440,2288080," of minutes. And that's 45. Right? So, that's pretty cool. So, we knew that the size of the file is 45 minutes."
2288080,2292640," And we actually confirmed that by the amount of samples in here. Right? So, it's actually super easy to confirm."
2293840,2302240," Okay. So, yesu, yesu, yesu. We did the math. We did the math indeed. Right? So, the next question is:"
2302240,2315440," How do you pull things? Update music stream. Update music stream. Right? So, ogg. And the way you pull,"
2316560,2326080," you call this function. Right? stdverb is get samples short interleaved. Damn, brother. Damn."
2326080,2334400," So, and does it get it from... We probably need... That's actually... That's a very intimidating"
2334400,2340880," function. Like, from the name and also the amount of parameters it gets. Like, it's rather intimidating."
2340880,2348240," Like, I'm a little bit scared to actually look into the function. What interleaved means? I suppose it means"
2348240,2356800," something about the channels. Right? Because if you have two channels, the samples are actually interleaved."
2356800,2365440," Right? So, essentially, first comes the sample from the left ear and then comes the sample from the right ear."
2365440,2371840," And they're go interleaved. And this is how they're stored in the file. So, this is like separate channels."
2371840,2377920," That's what it means, probably. Yeah. So, it is interleaved because lr channels. This is my hypothesis,"
2377920,2382240," though. Right? So... But this is usually how it is with audio files."
2384240,2389360," So, and short means that the size of the sample is 16 bits. Right? So, that's a very common thing."
2389360,2394560," Yeah. So, we already answered that question. I answered the question, like, at the same time as"
2394560,2398640," you asked it. Right? So, short means that the size of the sample is 16 bits and short is just like"
2398640,2401680," 16 bits. Right? That's the C type."
2401680,2406800," Vorbis... All right. So, what do we have in here? Actually,"
2407920,2414240," the function itself is not that intimidating. It's the arguments that RayLib actually puts in here."
2414240,2421920," That's what's intimidating. Okay. So, I wonder if this sort of, like, updates some sort of cursor."
2421920,2429840," Right? So, get samples. Uh-huh. Is there any documentation about this? Okay. So, yeah. So,"
2429840,2435200," the weird thing about this library is that the documentation is actually below the function. Right?"
2435200,2440320," So, I kind of get used to the documentation being above the function. So, it's below here. So,"
2440320,2446800," let's actually read what it says. Gets num_sample_samples not necessarily on a frame boundary."
2446800,2453040," This requires buffering. So, you have to supply the buffers. Applies the coercing..."
2453040,2457520," coercing... I don't know how to pronounce this word. Above the... to produce channels... channels."
2457520,2464800," Returns the number of samples stored per channel. It may be less than requested at the end of the file."
2465200,2470000," If there are no more samples in the file, return 0. I don't fully understand what the fuck they're"
2470000,2473920," trying to say in here. But, I mean, I think I kind of understand how to use this function."
2473920,2482000," Right? So, yeah. I mean, we should probably just use it. Right? Let's go ahead and just use it."
2482000,2491600," So, something like that. So, we can maybe just supply the context. Right? So, we can just supply the context."
2491600,2497840," The amount of channels... I mean, we do have the amount of channels in here. So, it's basically info"
2497840,2503760," channels. And the buffer... we should probably pre-allocate that buffer. So, let's actually"
2503760,2511760," pre-allocate it in the static memory. So, short. So, buffer. Might as well just do something like this."
2511760,2521920," So, that's the buffer. So, that's the buffer. And how can I... that's bizarre. So, this is the buffer. And here,"
2521920,2529280," I can just use the size of the buffer. But that means that I probably need... though the size of the buffer"
2529280,2537920," is what? It's the amount of shirts. Okay. So, I really like the use of the name of the variable in here."
2538720,2545600," Huh? This is... This is so cool! Holy shit! Right? So, because... like the first question I had:"
2545600,2552000," ""Is the size in bytes or in shirts?"" And the name of the variable: ""NumShirts"". Holy shit! Like, oh my god!"
2552000,2556160," Sean Barrett is a fucking genius. Right? So, he..."
2556160,2561440," He anticipated that question with the name of the variable. Like, what the fuck?"
2562480,2564640," It's just like, how does he do that? It's just..."
2564640,2573680," Anyway. So, this is the art of variable naming, honestly. This is like a pure art."
2573680,2579200," That is the sensei level of programming, exactly. It's just like..."
2579200,2586080," When I read his code, I feel like I'm literally learning different things. It's so freaking cool."
2589200,2594880," Anyways. So, this is the amount of shirts, which is exactly what I want. So, maybe one day I'll"
2594880,2601200," actually reach that level, but I don't really know. Anyways. So, let me try to rebuild this entire thing"
2601200,2608080," and see if it's going to work. All right. So, I suppose it read something, but let me see."
2608080,2616320," So, this is basically the count. Count read. And we can just see how many of them were read."
2616320,2623440," So, I've seen people say his libraries are unmaintainable, which is crazy because they're"
2623440,2628160," very well documented and simply written. I also don't fucking understand that. It's just like..."
2630240,2638800," Why? So, you can easily extend things. You can easily... Why are they not maintainable?"
2638800,2643520," I suppose this is literally just a skill issue. That's probably what it is. It's literally a skill issue."
2643520,2653120," Having this knob is basically a better stdlib for C. I wouldn't say so. It's built on top of stdlib."
2653920,2664320," So, I don't know. So, it's sort of like a complement set rather. But yeah. It has quite a few useful"
2664320,2671680," functions like getting the sizes of static arrays and maybe reading an entire file and stuff like that."
2671680,2678320," So, running external commands is also apparently very common, not only in the building process, but generally."
2680960,2686160," I would say it's surprisingly useful outside of building projects, right? Even though I designed"
2686160,2692720," it specifically for making build tools, it is surprisingly useful for making not only build tools,"
2692720,2696480," but anything actually. Which kind of confers my hypothesis that"
2696480,2707840," building a project is not really that different from developing projects, right? The thing that builds your"
2707840,2716880," project is as complex as your project itself, right? And because of that, it kind of feels silly that some"
2716880,2726160," of the building tools are trying to be simple and avoid being Turing complete and they still become a mess"
2726160,2733600," over time. I feel like the thing that should build your project should be Turing complete."
2735040,2741280," It should be Turing complete. Right. And I don't know where I'm going with all that, but yeah."
2741280,2747920," So, the build tool is just as complex as your project, right? So, that's what I was trying to say."
2747920,2752800," I don't know where I'm going with that idea, but anyways. So, what I want you to do, I want you to actually"
2752800,2756800," maybe just print the things, right? Just print the thing."
2760080,2764480," So, the thing that builds your project should be your project. Exactly. That's a better one. Thank you."
2764480,2769120," Thank you. Thank you. Thank you. Similar to that OS, you check. Yeah. Yeah. Exactly. Exactly. Right."
2769120,2774400," So, it's like, it has to be like a full-fledged powerful project. So, the thing that builds your"
2774400,2782160," project is your project. Yeah, exactly. It is your project. So, that's what it feels like."
2784000,2789760," GI builds are my favorite way any language does build. Yeah, exactly. That also confirms that. Right."
2789760,2796400," So, the thing that builds your project should be your project. Right. So, GI only confirms that even more."
2801520,2808960," self-sustaining. Yeah. So, what I was trying to do, I want you to just iterate how many of these things"
2808960,2816880," we read and maybe I'm going to just try to print them. So, how many... So, reading one kilobyte is actually"
2816880,2823600," kind of too much. Let's actually read five. Let's read five. And since it's five, I can just allocate it"
2823600,2833520," in the stack. Yeah, I can just allocate it in the stack. So, print f and this one is going to be,"
2833520,2840960," let's say, it's you. Maybe I'm going to put a space in here. Buffer i and at the end in here, we're going to"
2840960,2849360," just put a new line. Why did it switch to Cyrillic? F*ck say. All right. So, let me see. Let me see."
2852080,2859280," So, we didn't really like... It's only read two of them? Seriously? What the f? Comparison of count."
2859280,2869760," Okay. So, that's bizarre. So, I was told that it may read less than available. So, maybe that's what's"
2869760,2879920," going on here. Okay. What if I read this entire thing the second time? What if we read it the second time?"
2879920,2886480," Or, actually, why did I copy-paste it when I could just, you know, do outer loop?"
2886480,2894480," Right. So, this is going to be j plus two plus plus j. Uh-huh. All right. And let me try to do that."
2894480,2898240," What if I read it two times? Am I..."
2900960,2904400," that is sus. What if I put 10 in here?"
2904400,2912240," It reads half of them? Ah! It's..."
2912240,2918320," interleaved and sh*t. I completely forgot about that."
2920160,2926640," It's interleaved. So, we have to take into account left and right channel and everything. So,"
2926640,2930320," that's why when I read 10 of them, it actually read five of them. So, okay."
2930320,2939680," So, that's kind of funny. Right. So, let's read it one more time. So, gets num samples?"
2940720,2947600," Right. Not necessarily. Uh-huh. Not necessarily one frame boundary. This requires buffering."
2947600,2954640," Ooh. This is num shorts. Returns the number of samples. It accepts the number of shorts,"
2954640,2961040," but returns the number of samples. Okay. Okay. Okay. Okay. Okay. So,"
2961680,2969600," what that means, chat, we have to multiply this entire thing by info channels. And to be fair,"
2969600,2977520," it would be better to actually pre-allocate this. So, we are pre-allocating 10 samples, which is amount of..."
2977520,2987680," Okay. And since this is the... All right. And this is the amount of shorts. Okay. So, we need to take"
2987680,2992800," into account this kind of thing. Okay. So, that's very cool. That's very cool. So,"
2992800,3002240," samples count. Right. So, this is a samples count. Samples count. Uh-huh. Uh-huh. And if I try to"
3002240,3007600," to do that... There we go. So, that seems to be working. That seems to be twerking. So,"
3007600,3014400," we're reading like by 10 samples, essentially. Are we reading by 10 samples? Yeah, I suppose."
3014400,3019360," So, that means this is basically 20 of them. It is, in fact, 20. Okay. So, as you can see,"
3019360,3025200," there is currently silence. Right. So, my hypothesis is that if we read long enough,"
3025200,3034400," at some point, we start hearing things. Okay. So, what if I read 100 times? At which point... Actually..."
3035360,3044320," Yeah. So, if one second is 48,000 of those motherfuckers. This is not even close. We have to read"
3044320,3052720," fucking a lot. We have to... Like, this is two-handed words, right? It's not even one second, honestly."
3052720,3058320," This is not even one second. So, I have an idea. What if I just make it an infinite loop,"
3058320,3065840," right? And I run it not really from Emacs, but rather from the terminal, right? And we'll see"
3065840,3071760," how it is going to just... Like, at some point, it's going to be zero, and then it starts showing"
3071760,3078640," the samples, which is basically... It's playing something, right? Right. So, let's go in here,"
3078640,3086560," and I'm going to just do CD, and I'm going to just do probe OGG. Yeah, it's almost instantaneously"
3086560,3092160," started to show some things, which is kind of funny, right? So, some of these samples are huge,"
3092160,3100800," and this is because, I suppose, shorts are... Like, can be negative. They apparently could be negative."
3101360,3107120," Okay. So, what if I just switch it to D by allowing that?"
3107120,3113840," Okay. So, yeah, at some point, it's starting to do that. But if I take a look at the head of this"
3113840,3119920," entire thing, it's initially, like, zero. But if I do, like, 100... So, what about 200?"
3119920,3129680," Or about 1,000? Yeah. So, after 1,000, it starts to do things. At which point, though? I'm curious. So..."
3131680,3140080," Yeah. But I mean... So, that basically slowly pulls all of those things, right? So, my hypothesis is"
3140080,3149760," correct. Okay. So, we can do that in isolation, right? So, in isolation from RayDeep, we can just"
3149760,3157200," use STB Vorbis, and we can, you know, slowly read OGG files pretty quickly, right? So, we don't have to"
3157200,3165440," load them into the memory. We can just slowly read them. That is totally fine. So, we can create our own"
3165440,3173760," abstraction. Our own abstraction that is similar to the RayDeep music, right? So, to the RayDeep music."
3173760,3180400," Let me find the RayDeep.h, and let's find the music, right? Which is going to"
3181520,3187200," contain some sort of a context, maybe CDX type and maybe the amount of frames and stuff like that."
3187200,3193520," But it's going to be our abstraction, right? And we will know what kind of... To be fair,"
3193520,3199920," we already kind of know the context. Honestly, the context type is exposed to us."
3201600,3208640," Look at this. The context type is exposed to us. And we already have the music thing opened in here."
3208640,3218960," That probably means we can directly manipulate this thing. We can directly manipulate this thing and read"
3218960,3226880," our cells. That's actually kind of cool. Because we know for a fact that this CTX data"
3226880,3233440," is that object from one of those libraries. So, we can cast based on exactly. We can already cast based"
3233440,3238640," on types. So, the fact that RaySign actually exposes the type for us is actually super good. So,"
3238640,3246880," it's not that opaque. I didn't realize that actually. It's not that opaque. So, one of the things we can do,"
3246880,3254560," when we start rendering, we can just reset the cursor, whatever the cursor is used by whatever library,"
3254560,3260480," and just like poll the things ourselves. And we don't even have to write the polling code ourselves."
3260480,3266240," We can just steal whatever is in update music library, right? Update music stream, right?"
3266240,3272960," So, just go into the update music stream. And there is like a huge switch case or if else, whatever, right?"
3272960,3279600," Just take that and adapt it to read this kind of stuff into your buffer. Right now, it just reads it"
3279600,3284400," into the system global buffer. Just hack it to read it into your buffer that you provide."
3284400,3291280," Okay, that's actually kind of cool. And the question is, how do you reset the cursor of the music? Right. So,"
3292080,3300320," as far as I know, if I take a look at the plug.c, how do you reset? So, there are things like a set"
3300320,3312560," music, just a second, RayDeep, play music stream. There was a way to set"
3314000,3323840," seek music stream, right? Seek music stream. So, we have that. If I take a look at this thing."
3326560,3336880," All right. So, basically, each library has its own seek function. DrWaveSeek, stdVorbSeek, DrMP3Seek, right?"
3336880,3342640," So, they can actually, yeah. So, for each library, for each kind of file, you can actually just seek"
3342640,3350800," differently. But how do we restart the whole thing? So, as opposed to restart the whole thing, we have to"
3350800,3356640," stop the music and then start it again. So, when I'm stopping the music, what exactly do I do?"
3356640,3370000," Oh, okay. So, stopping the music just seeks it to the first frame. Okay. So, to be fair, I can,"
3370000,3377920," before rendering, what I can do, I can stop the music. I probably already stopped the music. All right. So,"
3377920,3384720," start rendering track. I already stopped the music. Okay. I already stopped the music, which effectively"
3384720,3392720," already sets the cursor to the beginning. And as I render, I can just pull the frames, maybe with update"
3392720,3403680," music stream. But interestingly enough, yeah, I think the only custom thing that we'll have to write is"
3404720,3410320," this function that pulls the frame outside of integrating with the global audio system."
3410320,3419520," That's the only thing I'll probably have to do. All right. That's actually super cool. All right. So,"
3419520,3424720," I think I kind of know what I want to do in here. I think I kind of know what I want to do in here. So,"
3425440,3430960," I'll read this to you for one hour. I think I'm going to make a small break. I'm going to refill my"
3430960,3436800," capacity. And after the small break, we're going to actually go into implementing this entire idea. So,"
3436800,3442240," in the first part of the stream, we were basically gathering information about how Raylib works and"
3442240,3446560," stuff like that, and what we can do with this knowledge. And now I can see that, yeah, what we can"
3446560,3453520," actually do quite a lot. We're making a lot of assumptions about how internally Raylib works,"
3453520,3461760," but that is fine because we're vendoring Raylib source code into our project. So, we don't care if"
3461760,3470240," something changes in Raylib because we have our own copy of Raylib in here. Maybe we're going to be"
3470240,3476640," stuck with Raylib 5 forever and going to keep maintaining it, right? So, this is something that"
3476640,3482400," we can do, right? So, so far, I didn't feel like I need more features from Raylib. So, I can basically"
3482400,3488720," freeze the version of Raylib. And if I need something more, I can just add those features myself, right? So,"
3488720,3493440," just like enterprise development. Yeah. So, actually, I've worked in a"
3493440,3502160," enterprise projects where people literally do that. So, you can just rebase from main Raylib. Yeah,"
3502160,3511360," as well. We can do that as well. So, I worked the project where we were using like our version of the"
3511360,3518160," library, right? And we had a bunch of patches that we were rebasing every time a new version comes out."
3519760,3524960," Sometimes, we would actually wait a couple of versions because we were too lazy to rebase the"
3524960,3532160," patches. So, it was just easier to use the older version. So, just vendor all the depths in your source"
3532160,3537680," repo. Honestly, that would be perfect. It would have been perfect. Anyway, so let's make some break."
3537680,3546720," Okay. So, let's go ahead and maybe take this function that updates ""updates music stream"""
3547680,3557600," and take this stuff and factor it out. So, huh. So, they do this kind of stuff in this for loop."
3557600,3568880," Check both subbuffers to check if they require refilling. Subbuffers? So, what the fuck are subbuffers?"
3568880,3573040," It's just like for left and right channels or something like that? That's what's going on here?"
3573040,3581440," That's kind of bizarre. So, and also when it's audio wave we look at the sample size and if it's 16 we use"
3581440,3588320," one function and if it's 32 we use another one which makes sense. Okay. That's cool. That's cool."
3589920,3598800," So, stbverbis seek start and then we restart and so on and so forth."
3598800,3606800," So on and so forth. I wonder where is the conversion going on because obviously different files may have"
3606800,3612480," different formats and stuff like that. They may have different formats like where we do the conversion to"
3612480,3616880," normalize all of that. That's actually very cool. The back buffer and the front buffer."
3616880,3625520," Huh. Maybe, maybe that's what it is. And let's take a look at our application. Right. So, when we are"
3625520,3632240," doing the rendering, the actual rendering. So, if we are currently in the rendering, we are doing the rendering"
3632240,3641760," screen. In the rendering screen, what do we do? So, this is when the rendering is already finished."
3641760,3648960," This is when the rendering is cancelled and this is where the rendering is going. Okay. That's very"
3648960,3656240," interesting. How do we process all of that? So, this is just drawing the progress. Nothing particularly"
3656240,3665440," interesting. And this is where we are processing the samples. Okay. So, these are the samples."
3665440,3677200," And they are floats. So, when we are loading wave, they are normalized somehow. So, as you can see,"
3677200,3685040," I literally had coded casting to floats. So, that means I assumed for whatever reason that load wave just"
3685040,3690560," normalizes everything accordingly. Okay. So, let me actually see what is going on with the wave."
3690560,3700080," All right. So, this is the buffer data. Bits per sample. Did I convert some stuff? That is"
3700080,3709200," rather bizarre. Why did I make so many bold assumptions? That is very interesting. So, load wave samples."
3710240,3719200," So, this is just... And wave samples are what? Aha! That's who does that. That's who does the shed. It's"
3719200,3728480," probably load wave samples who normalizes the shed. Aha! So, load sample data from the wave as 32-bit float"
3728480,3739280," data array. Not only I duplicate music once by loading wave. I duplicate it twice by actually converting all of that to"
3739280,3749600," floats. Holy shit. How are you supposed to render long music like that? It's insane. Like, so many freaking conversions."
3749600,3757440," So many freaking conversions. That's interesting. Okay. So, let's take a look at the implementation of this"
3757440,3764560," function. What does it actually do to do the conversion? Right. Oh, it's like..."
3764560,3768480," It's converting this shed in place. What the... Wait."
3768480,3776320," That's so fucking funny. Like, okay. It allocates enough for all of these frames and stuff like that."
3776320,3781760," Then it just literally iterates them and depending on the sample size, it just like does different formulas. Okay."
3784960,3789600," That's really funny. I like that. I actually like that. So..."
3789600,3795280," Yes, yes, yes. So, maybe this is something that we're going to be using,"
3795280,3799920," right? At least this kind of formula that we're going to be using in here. Okay."
3799920,3807280," Because the function that I want, honestly, the kind of function that I want should probably look like"
3807280,3821440," this. So, poll samples from music. And it's going to just accept the music like this. And it's going to"
3821440,3827920," accept the buffer, right? So, it's going to be the buffer. And in here, we can say... So, maybe we're going to"
3827920,3834800," use the trick from Nothing's Book and say ""Num floats"". Right. So, this is... Wait. I saw the"
3834800,3841920," completion actually doing that. Right. So, I guess in games it makes more sense since you would load it at"
3841920,3851280," one set startup. For music player, not so much. I guess so. But I mean... Yeah, maybe. Right. It's just like,"
3851280,3859200," it depends. So, here, we actually want to kind of load everything, but then stream over there."
3859200,3867280," You're talking about, like, iterating the entire... You're talking about this implementation. I already"
3867280,3873840," forgot about it. My thoughts actually wandered in the future. So, thank you so much, Mr. Realm Grinder,"
3873840,3878720," for at which point, thank you. Thank you. Right. So, I guess it does make sense, right? So, I guess it"
3878720,3885600," doesn't make sense. Okay. So, we pull samples from music. And I want this thing not only to pull the"
3885600,3892720," samples, but also to automatically convert them, right, to whatever, you know, they are. So, I don't"
3892720,3897520," know if we're going to return anything in here. Right. So, but we'll see. We'll see. So, update"
3897520,3906480," musicStream. Where is this function that updates the music stream? I suppose I'm going to simply ignore"
3907120,3912320," these sub-buffers things and stuff like that. The only thing I'm kind of interested in is this switch"
3912320,3918720," case. Right. So, I really don't care about anything else. Right. So, this is going to be the switch case."
3918720,3927120," Now, I'm going to just copy-paste this entire thing to here. And yeah. So, let's just put it like that. I"
3927120,3935920," wonder if this music audio wave is available within Raylib.8. No, it is actually hidden from us. Right."
3935920,3943520," So, this is one of the things that are straight up hidden from us. Right. So, one, two, three, four, like so."
3945120,3951920," Too bad. So, we also probably don't have access to these kind of things. So, that's going to be"
3951920,3956320," interesting. That's going to be interesting. Anyways. So, let's actually go ahead and try to compile this"
3956320,3966640," entire thing. I'm going to go into the knob. Maybe src build stage two. So, let's remove, maybe comment out,"
3966640,3971680," building of that prop.ogg. Right. So, we just played with this library a little bit to get the gist of this"
3971680,3976560," library. Right. So, now we know. Now we understand this library. Let's go back into building the whole"
3976560,3983840," mutualizer and see how it goes. All right. So, yeah. We forgot to actually remove that one. Let's go."
3983840,3990240," So, I expect it to fail. Right. I expect it to fail. Okay. So, it calls actually this thing music. So,"
3990240,3996640," let's follow the convention so we don't have to rename too many things. Uh-huh. All right. All right. All right."
3996640,4004400," Okay. So, that's pretty cool. And this is probably because it removed all of these cases because none"
4004400,4010640," of these things were defined. Okay. That's very interesting. So, but that gives us a very"
4010640,4017760," interesting opportunity to maybe just define them like that and slowly, gradually add support for all"
4017760,4026080," all of these things. This is actually kind of cool. So, I can do define, uh, support file format, uh, format"
4026080,4035520," waiver. Right. So, and that will enable this case in here. Right. So, because I suppose this is sort of"
4035520,4040880," like an internal macro that is only visible within the source code of RayLib. And it's definitely not"
4040880,4046000," defined anywhere in RayLib.h. Right. So, as you can see, we can't see it in here. So, because of that,"
4046000,4052160," all of that got disabled. But now, we're going to like slowly enable one, uh, format and see how badly"
4052160,4060000," it's going to fail. Uh-huh. All right. So, it fails somewhere. Um, and it fails with not being able to"
4060000,4068880," find music audio waiver. Uh, so, let's actually find where within the RayLib it is defined. Uh, so, this is going to be something like that. So, let me actually..."
4068880,4074320," Maybe I can do RG. So, people told me that I'm supposed to use VimGrep if I want the format that is"
4074320,4081120," parsable by Emacs. Vim and Emacs, like, they used kind of similar formats. Uh, all right. So, I suppose"
4081120,4087600," this is where... Okay. So, this is the enumeration that we probably need. And it's an internal one. Unfortunately,"
4087600,4094160," it is an internal one. So, music context type depends on the data structure provided by the library in charge"
4094160,4100320," of reading and different file types. Okay. So, I think I'm going to make a bold move and just, like,"
4100320,4107600," literally copy-paste an internal structure into here. Like so. Right. Because we're vendoring the source"
4107600,4112720," code of RayLib. We can do whatever the fuck we want with the source code. Right. So, according to the"
4112720,4118880," license, of course. So, one of the things, by the way, the license requires us, um, is that if you"
4119920,4126400," basically, like, distribute modified version of RayLib, you have the explicit state. So,"
4126400,4131680," if we're vendoring RayLib, we're kind of, like, distributing the version, the source code of RayLib,"
4131680,4137600," in that sense. Right. So, if I add any modifications to RayLib, I have to explicitly say that it's modified."
4137600,4143040," But to be fair, copy-pasting chunks of RayLib into our project is not really modifying the project per se."
4143600,4150400," So, yeah, I don't know. Right. And this thing may change in the future versions. Right. So, for example,"
4150400,4157280," if internally RaySan just swaps around some of these things, our code is going to break. Right. Because the"
4157280,4161680," order of the numbers is going to change in here. So, and these two structures are not synchronized."
4161680,4170560," It would be better, honestly, if this enumeration was public. Which is kind of bizarre, isn't it? Because"
4172080,4180000," the type of the context is public. Right. So, CTX type is public. But the reason it is public is"
4180000,4185920," probably because there's nothing much you can do about that in C. Right. So, because C doesn't have private"
4185920,4192320," fields. Right. So, and you need some sort of fields that indicates the type of the context. So, that's why"
4192320,4200560," it's public. It's not intentionally public. It's just, you know, because of C. Right. But honestly, it would be much"
4200560,4205920," better if this enumeration was public. Right. That would be much better, in my opinion. But I mean,"
4205920,4214480," it's up to RaySan to decide. Anyways, so we can copy-paste this thing. So, wait a second. I want to"
4214480,4222480," copy-paste it one more time. Because I was changing the order of some things. So, I don't want this thing to"
4222480,4228000," break. And now, let's try to reveal this one more time."
4228000,4234880," One more time. Just a second."
4234880,4243280," So, what's the next problem in here? Okay. So, we're having a little bit of a problem in here. Right. So,"
4244640,4249120," what I'm thinking, what I'm thinking, what I'm thinking, we probably need to"
4249120,4256880," allocate the buffer of the same size in here."
4256880,4268880," So, sunny. Yeah. So, it is pretty sunny outside. It is, in fact, pretty sunny. So, how are we gonna be doing all of that?"
4272240,4279280," We can just do, you know, malloc. So, how malloc is done? So, they usually"
4279280,4291120," do something like RL malloc. RL malloc. Right. So, for example, in load wave samples."
4291120,4295760," So, this is basically what they do. Right. So, it's sort of like an intermediate thing."
4295760,4299440," And then, they just return this entire stuff. Maybe this is what we can do in here."
4299440,4306800," Right. So, I'm going to just do that. And what we want to allocate. We want to actually allocate"
4306800,4316480," num floats. Right. So, this is a num floats. Size of floats. And this is basically the buffer."
4316480,4317840," Maybe it was called samples."
4319120,4322080," But we're not going to be allocating floats. We're going to be allocating shorts."
4322080,4329520," Right. So, let's replace it with short. This is another short. And this is another short."
4329520,4336160," And then, we should not forget to, you know... How is that called? To deallocate it."
4336160,4340160," But we're going to be calling it basically on each frame. So, allocating and deallocating"
4340160,4345920," like that is not a good idea. Honestly, it should not be a good idea."
4345920,4362800," So, here is an interesting stuff. You should not convert me to convert integer samples to"
4362800,4367280," normalized floats in your case. I should. I know my case better. I know that I should."
4368080,4371600," Because we support a lot of different formats. And a lot of different formats will come"
4371600,4378480," with different size of integers. And we don't want to have a huge switch case all over our source code."
4378480,4382480," We want to actually convert it to normalized once and forget about it in the rest of the code."
4382480,4388960," So, two-con work. Thank you so much for tier one. Thank you, thank you, thank you."
4390000,4398640," So, let me actually think. So, it would be better to not like reallocate that over and over again, right?"
4398640,4406480," So, that is kind of dumb. It would be nice to have some sort of like a temporary buffer into which we can"
4406480,4408960," just push some stuff."
4413680,4415200," So, I don't know, I don't know, I don't know, I don't know."
4415200,4424080," So, num floats. I haven't decided how we're going to be doing all of that because we're going"
4424080,4431040," to be doing conversion, right? So, depending on what kind of stuff we have in here, we must do,"
4431040,4438000," we just read the chunk and we have to normalize it. And that requires like two buffers actually. But I mean,"
4438000,4443840," the caller doesn't know what kind of buffer you need in here. So, and doing malloc over and over again,"
4443840,4449760," it's kind of like meh. It's actually kind of meh. So, I don't really know how we're going to approach"
4449760,4462560," this into that stuff. So, it would be maybe nice to just supply something like knob string builder or some"
4462560,4472560," sort of a buffer, like some sort of a buffer into which I can just like allocate some stuff and I could reuse that"
4472560,4481760," buffer, so to speak. Or maybe some, okay, so I can probably use some sort of an arena. Right, some sort of an arena."
4485040,4494080," like so. So, here is an arena. And I will just allocate some stuff in there and then reset the arena"
4494080,4500880," and allocate again and again and again. So, that kind of makes sense, right? But I do not have arena in"
4500880,4506800," here, so I probably will have to get that arena from somewhere. That's a bit annoying, right? So, this is the"
4506800,4512960," case where I have to allocate different arrays of different sizes depending on the internal format"
4512960,4518400," and the user doesn't really know much about it. So, I have a pull request in here. I don't remember"
4518400,4526160," receiving pull request. Arena is biased. So, where was it? Opened last week. I don't remember this."
4526160,4535520," Let me see. Arena bytes function that counts up how many bytes are allocated in the arena."
4536960,4540000," Okay. So, it's just basically gathering some information."
4540000,4548400," I see. Is that useful? I'll think about it. I'm not sure what to think about that."
4548400,4555760," Anyways, so, we need to grab the arena and add it to the source code."
4555760,4561200," I just want you to get the role. What? Inviting freaking GitHub."
4562880,4568400," Sometimes, I think sometimes websites should just shut the fuck up. Like, honestly."
4568400,4576640," Why modern websites can't stop fucking yapping? Like, I want to download a fucking file."
4576640,4582480," What the fuck is going on? Just shut the fuck up and let me download the file. All right."
4584160,4588080," You have only one job. Just shut the fuck up and let me download the file."
4588080,4593120," All right. So, let me take this stuff and I'm going to put it in here."
4593120,4598480," MS website. Yeah, exactly. But there was some sort of problem with UI. Like,"
4598480,4603360," accidentally the focus slipped and stuff like that. But I don't know. But to be fair,"
4603360,4608800," generally Microsoft software is very yappy. If you know what I'm talking about. It is insanely yappy."
4609600,4612160," That's probably why they really liked ChatGPT."
4612160,4622560," That explains it. That explains why Microsoft loves AI and ChatGPT so much. Because, like,"
4622560,4625520," generally all the Microsoft software is very yappy."
4630800,4634480," Anyways. So, what we're going to be doing here, what we're going to be doing is just, like, um,"
4634480,4642880," you know, arena alloc. All right. And that's it. So, I don't even have to worry about it too much."
4642880,4649600," Right. So, because then it's up to the color of this function to then clean that arena and so on and"
4649600,4656480," so forth. Right. We don't give a shise. All right. So, let me try to recompile this entire thing and see"
4656480,4659840," how it's going to fail. It's probably going to fail with, like, I don't know what the fuck is arena."
4660560,4667520," Like, I mean, just include that shit. Right. So, let's just include it. Arena.h. And, uh, yep."
4667520,4672160," Look at their latest feature recall."
4672160,4682160," That is very funny feature. That is a very silly feature, I would even say. Did they reconsider actually"
4682160,4689520," including that feature in Microsoft Windows? Right. So, because the... I feel like they got a pretty bad"
4689520,4695200," backlash about it. So, I would expect them to reconsider, but maybe Microsoft actually grew"
4695200,4700800," so fucking big that they don't give a shit anymore. Right. So, they can just force that stuff on"
4700800,4706720," on other people. It's off by default now, as far as I heard. Okay. So, that's actually been cool."
4713280,4722080," So, yeah. I agree. Microsoft doesn't give a shit. By the way, so, speaking of big companies not giving a"
4722080,4728960," shit. Is the Google AI still a thing? The reason why I'm asking is because I live in Russia and I"
4728960,4735680," literally don't have an access to this AI thingy. So, all of these memes, I know about this Google AI memes,"
4735680,4740000," like literally from Twitter and screenshots. Is it still on? Is it still working?"
4740000,4746800," Right. So, is it still on and is it still working? So, because I don't really know."
4752720,4763760," So, because it's kind of interesting. If I remember correctly, some time ago it's still... What? Nobody..."
4763760,4771040," It's still on. Okay. Okay. That's cool. Because I remember some time ago when Google was actually a"
4771040,4777680," small company. One of the things they were trying to do with their search engine is to actually embed"
4778240,4787200," parts of the content of the website to the result page, which resulted in less traffic to the website"
4787200,4796400," themselves and a huge outrage. So, the website owners started to sue Google for that and Google backed off"
4796400,4804800," so they never did that again. So, this AI response thing is basically a version of that. But this time"
4805680,4812960," they're so big, they're so powerful, they don't give a shit. Isn't that insane how, in the past,"
4812960,4818320," they couldn't get away with that. But now, since they're Google, they can get away with that."
4818320,4825120," That's fucking insane, isn't it? It's just like, they grew so fucking huge, like, yeah, we don't give a"
4825120,4831520," shit. What you gonna do? Class action lawsuit? Bring it in? It's just like, what you gonna do anyway?"
4831520,4836640," Your website is dead now. You have no money. Fuck off. So..."
4836640,4842560," So, yeah. It's kind of bizarre."
4842560,4852800," So, they couldn't do that one time. They waited a little bit. They tried it again and they won."
4852800,4862240," Did they just trust the window antitrust suit too? I don't really know."
4862240,4871120," So, anyways. So, anyways, anyways, anyways. What do we have? What do we have?"
4871120,4877920," And I also need to have an access to Dr. Wave now. That's very interesting, right? So, since I'm, like,"
4877920,4884560," touching these libraries directly, since I'm touching these libraries directly, I also need to include"
4884560,4890160," that stuff, which is, to be fair, fine. Right. I can do that. So, I can just do external"
4890160,4894000," external Dr. Wave dot H."
4894000,4898240," Dr. Wave dot H."
4898240,4903040," Right. What do we have in here? So, now we are kind of referring to"
4903920,4911040," the variables that we don't have in here. So, frames count still needed. Let me take a look at this"
4911040,4914480," specific function in here. So, this is going to be RayLeap,"
4914480,4923280," SRC, external, Dr. Wave. All right. So, what do we have in here? Right. So,"
4925680,4931920," this is what we have. We're just reading these things. Frames to read. And this is a buffer out."
4931920,4940000," But what is frames? Right. Is the frames both channels, I suppose? Right. So, it is both channels."
4940000,4944560," It is both channels."
4948400,4954480," So, I suppose I can just do something like that. Num floats. Right. Since I accept floats,"
4954480,4963520," that's what I do. But then, how many channels do I have? Right. So, I can go RayLeap dot H."
4963520,4969200," So, this is going to be music. Do I have channels in here? I have frame counts. So, maybe this is something"
4969200,4979200," that I can find in audio stream. Right. This is what I can find there. So, this is going to be stream."
4979200,4988480," Where are all that? Music stream channels. Music stream channels. And this is the buffer"
4989600,4998640," we're reading into. Right. So, the samples. Okay. So, that's what we've got. Frames count to read."
4998640,5008800," So, it also does. So, it also then resets this entire thing. But I don't think this is what we need in here."
5008800,5016320," Right. So, we can just like do it like that. So, we read the sum of this stuff. One of the things we"
5016320,5022720," probably have to return, by the way, is how much we actually read. So, that's very important. Actually,"
5022720,5026880," that's very important. This is just needed for looping. Yeah. Yeah. I figured. So, but we don't"
5026880,5030400," really care. All right. So, we don't really care about looping. We're just trying to read some stuff"
5030400,5040400," or, you know, for visualization. So, it also does that in while true loop. Right. Which I kind of"
5040400,5053680," sort of like skipped. Let me try to see what exactly it is used for. Update music. Because I already removed"
5053680,5062800," that code. Update music stream. And in here. So, count still needed. So,"
5065920,5077120," So, I suppose it has how much you need to read. And this is how much it actually read. So,"
5077120,5086080," ah, and then it kind of... Oh, that's very interesting."
5088320,5095680," If you're trying to read more than there is actually is, it loops around. That's why it does that."
5095680,5103440," That's why it is in while true. That's very funny. Right. So, it reads like past the end,"
5103440,5108400," but what it reads past the end, it just wraps around and gives you the beginning of the song. Right. So,"
5108400,5115600," that's what it does. So, essentially, you have some song in here. You want to read this part,"
5115600,5122720," but this is the end. Right. So, you say, okay, read six. It gives you four plus whatever"
5122720,5128480," two you had at the beginning. So, it will give you that. All right. So, and just because of that,"
5128480,5132400," it effectively loops around. So, that's probably what's going on. We don't really need that when"
5132400,5137920," we're rendering. So, I suppose we can just do something like this. All right. So, that's about it,"
5137920,5143600," I think. And so, we get the samples. Right. So, we get the samples. And one of the things we"
5143600,5148080," want to do now, we want to convert them. So, to convert them, we can use whatever"
5148080,5154720," load wave sample is using. Right. So, this is the formula that we're talking about."
5154720,5163520," So, since it read the samples. Right. So, we're going to be iterating. Not really samples,"
5163520,5172240," the frames. Right. So, we're iterating the frames. Frame count red. So, this is what we read in here."
5172240,5178720," But then, we have to multiply it by the amount of channels. Right. So, we're multiplying by the amount"
5178720,5187680," of channels. So, that's what I'm doing in here. Okay. So, do I have a sample size in here? Do I know the"
5187680,5193280," sample size? I actually do know the sample size. So, the sample size in here, as you can see,"
5193280,5202400," is exactly 16. Which means that that's the formula I must use in here. Right. So, I take"
5203680,5216720," the samples. Right. So, maybe that's a bit bizarre. Samples. And then, I convert it to float. And then,"
5216720,5224320," I divide it by this maximum in here. Right. And I assign it to the output buffer. And that's it."
5225280,5235200," That's what I need to do in here. That's what I need to do. Right. So, and if the sample size is 32,"
5235200,5240880," I probably have to do a similar thing in here. But I have to do the different conversion. Actually,"
5240880,5247920," not really, honestly. Since it's already 32, I don't have to do any conversion. I can just like directly"
5247920,5254160," read it into the buffer. So, let's actually try to compile this intending and see what is going to happen."
5255840,5262720," Alright. So, it didn't like that I used arrow in here because it's not a pointer. Right. So,"
5262720,5270320," that makes sense. Uh-huh. So, now, yeah, that's another one. Okay. So, I suppose now it complains"
5270320,5275360," about only this part. Right. It complains about only this part. It's kind of interesting that in case"
5275360,5282480," of the wave, it cannot be anything but 16 and 32. Right. Isn't that bizarre? So, I suppose maybe this"
5282480,5290320," is something that Dr. Wave guarantees. Maybe. I don't really know. But anyway. So, now it complains"
5290320,5296640," about the second part in here. So, let's actually try to adopt it. So, since this is just a float,"
5296640,5300880," we don't really have to do that anymore. So, let me actually convert. I'm going to go into the Dr. Wave."
5300880,5309200," Find. Yeah, it just accepts floats. This is perfect. So, what do we do?"
5311200,5320800," Num floats. But it reads frames. So, that means... Can you see? This is actually very annoying. I'm not"
5320800,5327920," sure if you can... I think you can see that. Alright. So, we're dividing it by this stuff. Maybe it makes"
5327920,5338720," sense to actually factor these two things out into something like num_samples. Right. So, num_samples and"
5338720,5346160," num_samples is basically that. We take num_floats and we divide it by the amount of channels and that's"
5346160,5355920," what we want to read. Aha. That's very cool. So, this is a num_samples and then it just takes this weird pointer."
5355920,5362560," So, we are going to be actually putting buffer in here. And I think that's about it actually. We don't need that."
5362560,5371760," So, we just return frameCount red. And that's another thing we have to do in here."
5373360,5380080," And also get rid of the infinite loop. So, the funny thing is that what we actually need"
5380080,5388000," is much simpler than whatever update music stream is doing. Right. So, if you take a look at the update"
5388000,5394160," music stream and what it's actually doing, it's doing a much more complex thing than what we actually need."
5394160,5400080," Right. And because of that, we're removing a lot of code in here. Right. What we need, we just need to read"
5400080,5409040," the chunk and that's it. Just give me a chunk. No more, no less. Funnily enough, what if it's actually"
5409040,5415280," something else? Right. It's not going to break. It would be kind of nice to maybe put something like,"
5415280,5423760," I don't know, unreachable. So, assert unreachable. Do we even have a notion of unreachable?"
5425200,5428480," We actually don't. But maybe it's not a particularly great idea."
5428480,5436160," Honestly, honestly, honestly, honestly. So, I don't really know. Because it's kind of a dangerous thing."
5436160,5441280," Right. It's kind of a dangerous thing. What if accidentally you got a music that has a sample size"
5441280,5447680," that is neither of those things? What do you do in that case? I think we should try to do unreachable. And"
5447680,5455600," then I should put a to-do. Do something better with that. Maybe report an error to the user or"
5455600,5462720," something. Right. So, we don't want to have that in the production where if the user just put like a"
5462720,5468800," really weird thing into the mutualizer, it just breaks without explanation. Right. So, we don't want"
5468800,5474640," to have to do that. But it may happen. So, it would be nice to somehow handle that properly. You know what"
5474640,5480160," I'm talking about? Yeah. You know what I'm talking about. Anyways. So, let me try to now compile this"
5480160,5486320," into anything. And hopefully, it is going to compile. So, the warning control actually reaches some stuff."
5486320,5495440," Interestingly, maybe what I want to do is put unreachable actually down below."
5496720,5507280," All right. So, unreachable down below. So, it's going to be zero for now. So, we don't return anything."
5507280,5513920," And let's just return that. Okay."
5513920,5523600," So, undefined_arena_alloc. That is understandable. This is because we need to enable implementations for the arena."
5524240,5532320," arena_implementation. So, now it should hopefully work. We'll see."
5532320,5542320," All right. So, we have now implementation of pole_sample_from_music that works for one format."
5542320,5546960," So, and this is already kind of good, honestly. This is already kind of good."
5548080,5555520," Because then I can iteratively add more and more formats in here. Right. So, it supports only one,"
5555520,5560640," but that is totally fine. That is totally fine. If we can make it work for one format, we can then"
5560640,5567040," slowly make it work for the rest of them. So, one of the things we need to do now, we need to integrate"
5567040,5573520," that polling, that aural polling of the samples into the main rendering thing. So, how we can do that? We can do"
5573520,5579760," that using compiler-assisted refactoring by maybe literally getting rid of all of this stuff. Right."
5579760,5584560," So, because this is where we used to store the samples. Now we don't need this thing anymore because"
5584560,5590800," we can take those samples directly from music stream. So, let's actually command them out. That will break"
5590800,5598080," in a bunch of places. And these are the places where we need to make modifications. So, that's how we do things."
5598080,5603440," That's how we do things. All right. So, as you can see, it broke in a bunch of places. That is understandable."
5603440,5612480," So, I even had a to-do for that. Holy shit. Right. And I think I created this to-do like right away after I"
5612480,5618080," even implemented this entire thing. I kind of anticipated that. So, it's been on the back burner for quite some"
5618080,5623840," time. So, and I finally got around to actually fixing that. So, this is super cool, I think. Right. So, we don't"
5623840,5631920," need any of that stuff. Right. So, I'm just removing it. Next thing. Where else are we breaking? Okay. So,"
5631920,5636720," and this is another thing. When we're done rendering, we are kind of unloading all of that stuff. Since it"
5636720,5643040," doesn't exist, there is nothing to unload. So, let's just remove that. To be fair, I don't really know"
5643040,5650400," why I commented it out. Honestly. I'm using control version system. So, if I need to recall what was"
5650400,5658080," that, I can just take a look at the diff. Right. So, I don't read that. Keep forgetting that I'm using git."
5658080,5668080," Keep forgetting that I'm using git. Okay. So, this is cool. So, here we are checking whether we reached the end of"
5668080,5674800," the frames within the music. So, since we had a wave, we kind of knew the amount of frames in here."
5674800,5682800," So, this one is rather interesting. Because maybe that means we need a wave cursor."
5682800,5690080," Right. So, I removed the wave cursor along with everything. But it feels like it's still needed."
5690080,5699040," Right. So, because we need it for this kind of, like, you know, thing. Or maybe music has a function"
5699040,5703760," that checks that we reached the end of the music. I don't really know. Let's find a place where we have"
5703760,5712720," all of the music in here. So, is music still playing? Stop music. I don't think it has anything, honestly."
5713520,5720000," We can get the time played, but it's, like, in floats and seconds. So, it's not particularly reliable."
5720000,5725920," It's not in frames or anything like that. So, I don't think we can have a direct access to the cursor in"
5725920,5733840," here. So, yeah. I think we need to maintain our own cursor. So, let's actually revive wave cursor."
5733840,5739920," Let's actually revive it. So, I'm going to just, you know, do something like that. And maybe I actually"
5739920,5747040," removed. Okay. So, this is another thing that we need to revive. Right. So, wave cursor. So,"
5747040,5752800," do we use wave cursor anywhere else? Nah. It's only two places. Okay. So, that's cool."
5752800,5760400," That is very cool. That is very cool. So, let's try to recompile it one more time. And what do we have in here?"
5763600,5771440," Would not seek music return null or something if end? Seek actually sets the cursor, not gets it."
5771440,5777520," Isn't it? I don't remember, actually. Let me see. Seek music. Yeah. It's only..."
5777520,5785920," And it actually seeks in floats, in seconds. Right. So, using seconds in here is not really reliable,"
5785920,5793200," because we are doing a very fine-grained work. We're working on a level of individual frames and"
5793200,5800160," samples. That's how, like... That's the level of resolution we're working with. So, this API only"
5800160,5807040," allows, like, very loosey seconds in floats. And this is not what we need. It's not reliable for what we're"
5807040,5811680," doing. It's not reliable for what we're doing. So, we're not gonna be using that. Okay."
5811680,5824240," So, now, when you grab the samples, it should return zero. And maybe we could do that, but this is not"
5824240,5829440," the moment where we read this kind of thing. So, our code is not structured to do that, unfortunately."
5829440,5836240," So, using that means that I have to heavily restructure the code. Or, at least, I don't see"
5836240,5841920," how we restructure it easily. So, I'm just following, like, the flow. I'm just following the flow. It's"
5841920,5848080," not the problem. Like, you're hyper-focusing on not important thing. Okay. So, this is a wave frame count."
5848080,5859280," So, this is a music. I think it's track. All right. P, track. Okay. So, what's the current track, actually?"
5859280,5864960," So, we have a notion of a track. Okay. So, that's pretty cool."
5865520,5869680," And when this entire thing in Go is going, we know that the track is..."
5869680,5877440," Yeah. It's not null. Right. So, we have an assertion for that. The track is not null. That's pretty cool."
5877440,5885760," So, that means I can just do track. And within the track, we have music. All right. So, I can just do"
5886400,5897360," music. And frame counts. Music. Yeah. Frame counts are available right here. Let's go. All right. So, that's"
5897360,5904240," actually fixed. And that's actually fixed. That's pretty cool. That's the next thing. Unloading. Not needed."
5908320,5912640," Another unloading. Oh, we have a little bit of duplicate code. Right. So, we have a starting"
5912640,5918880," rendering. But we haven't, like, factor out finishing rendering. Right. So, we just have a little bit of a"
5918880,5924000," code that we always do when we finish rendering. And I haven't factored it out. But that's fine. There's"
5924000,5928560," not that much of that code. I think it's like two or three times. At some point, I'm going to actually"
5928560,5936400," factor that out. So, it's no big deal. No big deal whatsoever. All right. So, wave cursor. That's pretty cool."
5936400,5946960," So, this is just basically track, music, frame count. What's the next thing? Sample rate. Sample rate."
5946960,5953280," That's very interesting. Do I have a sample rate in music in here? I suppose it's somewhere in the audio"
5953280,5964880," stream. Audio stream. Yes. We do have that. So, we have to do track, music, stream, sample rate divided"
5964880,5968880," by the render FPS. All right. So, that's cool."
5968880,5976480," Okay. So, this one is interesting. This one is interesting."
5976480,5981920," So, we take a look at the samples. Right. So, this is the samples we're working with."
5983280,5989600," Ah, and... Aha. I see what's going on in here. I see what's going on. So, this is the chunk"
5989600,5992800," that we need to process. This is the chunk that we need to process."
5993760,6001760," Ah, and... Oof. That's very interesting. That is very interesting."
6001760,6012480," Because we need to load that frame. So, this is where we have to call this function now."
6012480,6018480," This is where we have to call this function. So, we need to have this arena somewhere. I'm going to allocate"
6018480,6023600," that arena within the plugin state. So, how I'm going to call it? Maybe I'm going to call it like a"
6023600,6030640," rendering arena or something. Right. So, rendering arena. And obviously, I'm going to pass it by"
6030640,6038480," by that. So, we also provide the music. So, this is the track, the music, and the buffer."
6038480,6042400," Buffer. The buffer, the buffer, the buffer, the buffer. Though, we can actually kind of pre-allocate"
6042400,6046000," that buffer. Honestly. We can kind of pre-allocate that buffer."
6046000,6054560," So, yeah. So, this is a sample rate."
6062320,6072160," So, we can do buffer then arena alloc. We're just using the same arena. It doesn't exist yet, but it"
6072160,6077120," probably will at some point. So, the chunk size is basically num... like not really num floats. It's"
6077120,6084480," amount of frames that we have to read in here. So, that means we have to allocate chunk size multiplied by"
6084480,6096160," the amount of channels. Right. So, that means we have to take the track music stream channels. Right. And"
6096160,6106480," also multiply it by the float. We can actually multiply it by the size of the buffer element. So, this is"
6106480,6111840," basically what we want to allocate. How much we want to allocate in here. Right. So, we pre-allocated the buffer."
6112480,6120480," That's pretty cool. So, now I'm just doing that. And then I'm going to say that I want to actually read"
6120480,6130000," chunk size multiplied by the amount of streams in here. There we go. So, that's pretty cool. It's kind of"
6130000,6138720," interesting that I'm using arena to allocate this buffer and also a bunch of internal buffs as well. So, I'm"
6138720,6141920," getting consumed by the camera. This is because I have a lot of"
6141920,6149920," light behind me. Right. So, it's very sunny today. I wonder if I increase the light like this."
6149920,6155200," Am I less consumed by darkness? I think I am. Let me actually see. Let's see that for myself."
6156320,6164400," I think. Yeah. So, it's now very much balanced. So, this is basically the amount of sun you get in Siberia."
6164400,6172320," Right. But I'm actually getting blinded by my lamp right now."
6173920,6182480," So, that's what's going on. So, that's what's going on. Anyways. Anyways. Hopefully that is better."
6190160,6194400," So, rendering. Okay. It was fine."
6194400,6203840," Okay. So, what do we have in here? We don't have a rendering arena, which is perfectly understandable."
6203840,6209840," Let's introduce it. Let's actually introduce it. So, plugin. So, where are we going to put that? Maybe"
6209840,6218080," somewhere here. Arena. Rendering arena. So, now we do have a rendering arena. So, what else do we have in"
6218080,6227120," here? So, here are the samples. Honestly, this is just the buffer. This is literally just the buffer."
6230800,6244480," That is just the buffer. That is just the buffer. Okay. So, we have a wave cursor. So, what we have to do,"
6244480,6257840," honestly, we just have to do ""I"". So, that's that. Yep. That's literally it. So, but we have to use the"
6257840,6264640," different thing for the channels now. Right. So, this is the channels. It would be better to actually"
6264640,6270320," factor out some of this stuff to, like, variables. Right. So, look how many times we use that. It would"
6270320,6279600," be better to just say ""channels"". And then say, ""Okay. This is channels"". So, yeah. That's much better,"
6279600,6285600," honestly. That's much better. What else do we have in here? So, frame count."
6287600,6292800," Frame count. So, this is the sample rate. So, this one is the track."
6292800,6299280," Music. String. No, don't do this. Frame count is available within the music. So, we don't have"
6299280,6305920," to do that. All right. So, what else do we have in here? All right."
6305920,6316560," Okay. We did that. So, we integrated this thing into all of that. To be fair,"
6317520,6322080," I would rather say that this is gonna be a fast count."
6322080,6327760," Let's call it a fast count. So, we're iterating not really..."
6327760,6333200," Oh! What's funny is that it doesn't even fucking matter. Like, we don't care how much we read."
6334400,6345280," We literally don't care how much we're at because we're gonna fill the rest of the stuff with nothing."
6345280,6352720," Uh-huh. Yo! That is actually kind of cool. Because now..."
6354320,6361680," What if I just mem set this thing with zero, right? So, size of buffer multiplied by..."
6361680,6365120," Oh, I mean, I can just take this entire thing."
6365120,6373600," All right. So, we just fill all of that with silence. We just fill all of that with silence."
6375840,6379600," So, because if we overflow and... Yeah. That makes sense. That makes sense."
6379600,6388000," So, if wave cursor... It doesn't even fucking matter, honestly. We can simplify it like so."
6389600,6395200," Right. Because if it read less than needed. If it read less than needed."
6395200,6399280," So, the rest is gonna be zero because of this previous mem set."
6401600,6408560," Yeah. So, and this one is kind of redundant. Might as well just code buffer in here. So, that's much simpler."
6408560,6414720," So, that's pretty cool."
6414720,6420400," So, I'm just looking if I made any mistakes in here. I don't think I did."
6420400,6425040," So, that's it. That is it."
6426320,6431520," So, but this code will only support waves. Right. So, it only will support waves."
6431520,6437280," One of the things I probably want to do, if we encounter some... Like, I mean, we'll already say"
6437280,6443680," that it's unreachable. Right. So, that's fine. Might as well... So, asserts are not particularly"
6443680,6451280," convenient in here because they are disableable. Right. So, let's actually do something like fprintf"
6451280,6463200," std error. Unreachable. Unsupported format. So, unreachable. Unsupported format."
6463200,6474320," And I'm going to literally abort in here. Abord. So, instead of abort, say abort."
6476800,6483120," Arrrr. Abord. I'm sorry. So, yeah. So, now this thing is not disableable."
6483120,6495440," Abord. Okay. I want to try that. I really want to try that. Of course, semicolon. Sure, sure."
6495440,6506080," So, I'm going to first try with OGG. I'm going to simply do this kind of thing."
6506800,6516000," Uh-huh. All right. Seems good. Seems good. OGG. It is playing the music. Right. So, which is expected."
6516000,6521520," Which is totally fine. Now, if I try to render it, it should crash. It crashed. And what does it say?"
6521520,6530080," Unsupported format. Exactly. Because we didn't add support for the OGG. But we do have support for wave."
6530080,6539360," So, that's exactly what we were working with. Let's actually see if we can render wave. And whether it is going"
6539360,6546560," to be correct or not. Do we have any waves that are easy to just slap? Oh, all of them are OGGs."
6547600,6555440," Bravo. Bravo. Bravo. Bravo. We have to convert them, I suppose. We have to convert them somehow. So, can I find"
6555440,6564080," some very small sample that is super quick to render? So, let me see. I think that one. This is my favorite."
6565520,6571120," Yeah. I really like this one. So, I liked it so much that it became sort of like a demo of the music."
6577760,6583280," So, yeah. So, I swear to God, Null is a genius. Right. So, if you want to actually discover more"
6583280,6588720," on the songs of the same artist, like actually check out these links. Right. So, this is a song. So,"
6588720,6598400," that's the author of the sample. So, let me go to this specific place. And maybe I'm going to actually"
6598400,6606480," do something like that. All right. So, I want to convert this thing. Null is a genius, I'm telling you."
6606480,6609120," He's a genius. So, how can we convert that?"
6609120,6622080," And recognize. And he's so insanely underrated. Like, oh my God. Just like, if you look at any of his"
6622080,6627600," socials, like he's extremely underrated. And it's a huge crime. It's such a huge crime. I swear to God."
6627600,6635200," Anyway. The modern internet, it fucking sucks. The way the modern internet works absolutely fucking sucks."
6636080,6641760," Um, some clowns, some loud clowns always get on top. And genuinely, like talented people,"
6641760,6650480," like nobody fucking recognizes them. Anyways. Um, so, let me, let me see. Um, so that seems to be like a wave."
6650480,6658480," Uh, all right. Okay. So, maybe now we can try to do that. Uh, now we can try to do that. So,"
6659040,6668800," let me, let me, let me see. And, uh, wave. Right. So, okay. So, if I try, now try to, to render the whole"
6668800,6677680," thing. It is rendering. It is doing something. Right. So, which is nice. Does it, okay. Does it get any data?"
6677680,6685280," It's actually going really slow? Honestly. It is going slower than I would expect."
6685280,6690160," Hmm. It is going slower than I would expect."
6695120,6707840," Is that because? Hmm. So, I remember there was a pull request somewhere, um, in mutualizer"
6710000,6720000," that suggested to uncap the FPS. Right. Because right now, the, the, yeah. So, something about the"
6720000,6726880," so, essentially, because we're doing that on each iteration of event loop, uh, and that is"
6726880,6733840," intentionally slowed down to maintain a certain FPS. So, one of the things somebody suggested is to just,"
6733840,6740480," like, set target FPS to unbound before rendering anything. Which is a good idea, I think. Uh,"
6740480,6745360," and it may speed up this kind of stuff. Um, but the thing I want to do right now,"
6745360,6750320," I want to wait until it actually finishes rendering. Um, yeah. That's pretty smart. Yeah. So, I should"
6750320,6755120," probably accept that pull request. I don't remember. Uh, yeah. I think it was in the form of a pull request."
6755120,6763360," I think it was in the form of a pull request. Um, yeah. I want to first check if this works"
6763360,6771280," correctly, at least. And then we can try that idea of unbounding FPS. Um, because it's, it's slow,"
6771280,6778400," but it's not that slow. Right. We, we can wait until it's finished within, within the stream. Um,"
6778400,6786400," so, it's like 20 seconds. Yeah, it's, it's going, honestly, it's going like a 20% of the playback speed. So,"
6788960,6795760," unbound power, unbound power. We now have this, uh, this button, which allows you to cancel this thing,"
6795760,6796880," but we're not going to cancel it."
6796880,6813360," All right. All right. Are you done? Are you done yet? Hope you're done. It's still going. Right. So,"
6813360,6821680," that means it has a little bit of a stuff in the, in the buffer. Okay. So, and it didn't break throughout"
6821680,6826800," the process. Right. So, it finished correctly. So, that means we're probably doing something correctly."
6826800,6834720," Okay. So, let's actually."
6834720,6842400," It just worked surprisingly. So, I didn't expect that. So,"
6842400,6868240," um, all right. So, um, all right. So, let's try to unbound, uh, the thing. I'm going to take a look at the"
6868240,6873360," pull request. I think it was in the form of a pull request. So, I really apologize that sometimes I"
6873360,6879040," don't look into pull requests and issues. I have a lot of different repos and people constantly"
6879040,6884000," submit pull requests and stuff like that. Like my, my, I don't even look into notifications anymore,"
6884000,6890000," honestly. They absolutely cluttered and they became useless for me. So, I really apologize that if you"
6890000,6895520," submitted something, I may not look into that for month and month. Uh, so, but sometimes from time to time,"
6895520,6903440," I look into them. Uh, right. So, and by the way, if I don't look into your pull requests long, like for"
6903440,6910080," too long, and for example, I submitted something that breaks your pull request, don't try to close your"
6910080,6916320," pull request or try to fix or anything like that. Right. If your pull request is valuable and good,"
6916320,6922160," I actually going to backport it to the current version of, uh, like, of mutualize or any project,"
6922160,6926640," actually. So, don't worry about that. So, uh, when you contribute something, you contribute not only the"
6926640,6934480," code, you contribute also an idea. Right. Um, so, and I, if the, the idea is valuable enough, uh, I also,"
6934480,6942240," um, but I couldn't apply your patch. I would backport it and also, like, mark you as a co-author."
6942240,6948240," Right. So, that's what I like to do. Anyways. Uh, so, what was that? Uh, yeah. So, here it is."
6948240,6952720," Unlock FPS during video rendering. So, let's take a look at that. So, yeah. As you can see,"
6952720,6957600," it conflicts with the, with the current code, but that's fine. That's not that much code. That is not"
6957600,6964000," that much code. We can do something about that. Ooh. They even suggested to add a new feature flag,"
6964000,6968880," the desire to render FPS of the application. I don't think it's a good idea to make it a feature"
6968880,6975120," flag, but then whatever. Um, so, this is a set target FPS. Oh, I see why they did that. So,"
6975120,6981520," it's sort of like a global constant to which we can switch back to. Makes sense. Makes sense. Oh,"
6981520,6986320," they also factored out. Okay. So, that's actually kind of cool. All right. Maybe I should accept that."
6988160,6997440," Uh, all right. So, start, finish. Where is the, yeah. Okay. Let's go, let's go ahead and just like"
6997440,7010640," port that idea. Plug C. Start rendering the track. So, set, set target FPS to zero. All right. So,"
7011440,7022960," let's find the places. Uh-huh. Set target FPS to zero. And actually, there's like three places now. Uh,"
7022960,7037360," set target FPS to zero. And another one. Uh-huh. Set target FPS to zero. I think that's it. So,"
7037360,7044480," there's only like, yeah, there's three places. All right. Now, let's try to recompile the whole thing."
7044480,7053280," Um, yeah. I need to go back. Snob. All right."
7053280,7066880," All right. So, let's see if unbounding all of that stuff actually speeds it up. Okay."
7067360,7075440," Um, honestly, I don't know. Maybe it does. We need to take a look at the playback."
7075440,7081600," To be fair, it kind of feels slower."
7081600,7088160," That is bizarre, honestly. It's just like, it's not that different."
7090800,7091920," It's actually not that different."
7091920,7101120," I have an idea. It's 2x. It doesn't say that it's 2x, actually."
7101120,7106240," No, no, no. It's not 2x. Let's, let's cancel it. Okay. Can you cancel it?"
7106240,7115200," Um, let me do the following. Did, did I rebuild it? I think, I think I did rebuild it. Let's stash whatever we"
7115200,7118560," have. Let's stash whatever we have. And I'm going to rebuild it one more time."
7118560,7127200," Um, let's go before our changes. Let's go before our changes. And I'm going to try to render it now."
7127200,7132480," No, it's, it's kind of, it's kind of similar, actually."
7134080,7137280," All right. So it, it was that slow before."
7137280,7147360," All right. So it's probably slow because I'm streaming. So I will have to check how that works"
7147360,7151680," after the stream without OBS and stuff like that. All right. So that, that's good. That's good to know."
7151680,7161520," Um, so, um, okay. So let's put it like this. And now what I want to do, I want you to all support"
7161520,7166640," the OGG format and see how quickly we can get to rendering pilot red sun."
7166640,7174400," So Paul, uh, music, because the last time at the beginning of the stream, we couldn't even start"
7174400,7179120," rendering, right? So because it basically froze the application and it's just like was doing nothing,"
7179120,7184720," right? Because it was loading 45 minutes of the, uh, of the music into the memory. But now if we did"
7184720,7190880," everything correctly, it will not do that. Right. So this is basically the, the final testimony of our"
7190880,7198640," approach. So right now OGG is disabled. So let's go ahead and enable it. Um, both of the same to me,"
7198640,7204480," same, right? So I suppose it's just because I'm streaming. Uh, okay. So let me see. So what do we"
7204480,7216560," have in here? So we're doing Vorbis, uh, and we have to provide the context. The question is, um, so do,"
7216560,7224320," when we, so it does the short thing. So that means the, the size of the sample is 16 bits,"
7224880,7231280," right? So that means we have to allocate shorts in here. Let's go ahead and allocate some shorts."
7231280,7242160," So we just provide the, the context as usual. Then we provide the channels. Okay, that's fine. And then"
7242160,7252720," we provide the samples that we allocated. So here we're trying to read some stuff. We're trying to read some"
7252720,7261360," stuff. Um, we can just say that we're trying to read num floats. Uh-huh. And this is the amount of"
7261360,7266880," channels. We don't need any of that stuff. And we just return frame count. I think that's it actually,"
7266880,7274160," surprisingly. I think that is it. Um, we probably also need to do the conversion. Yeah, that's right."
7274160,7283440," We need to do the conversion. Uh-huh. Afterward, because it's 16 bits. That's pretty cool. So now if"
7283440,7290400," I try to compile this entire thing, it should be compilable. It's still not compilable, uh, because"
7290400,7301280," stb-vorbis, we don't have stb-vorbis in here. Uh, let's do stb-vorbis, but c. All right."
7301280,7308000," Okay. So this is ""sample c"". A little bit of a typo. That's fine."
7308000,7314880," And a little bit of a typo. Oof, oof, oof, oof, oof. What the fuck is this?"
7315520,7320160," Uh, get stb-vorbis multiple definitions of stb-vorbis."
7320160,7338160," So, since stb-vorbis is like c, it's not a header only, it doesn't allow you to just include the"
7338160,7344720," declarations. That fucking sucks! That fucking sucks! Dude, it's nuts!"
7344720,7353200," What we're gonna do about that? Uh, right. So, because we just included this thing, but it also..."
7353200,7359840," Yeah, that's ugly. This is why, by the way, this is literally why, uh, single header libraries also,"
7359840,7365760," like, have this, um, implementation macro. Right? So, because you can decide whether it includes"
7365760,7370000," implementations or not. So, because now we have two implementations for the same function."
7370000,7378000," Um, so, and I suppose stb-vorbis was implemented before Sean Barrett figured that out."
7378640,7384320," So, that's probably what happened in here. But maybe it has some sort of a macro that just allows"
7384320,7388720," you to do that. Like, I don't see implementation. Yeah, so there's no implementation macro."
7388720,7395520," Why was it turned into a c file? Do we know? Yeah, I think it's a very old library that, like,"
7395520,7402720," because as far as I know, somewhere Sean actually said that he didn't figure that out immediately,"
7402720,7407760," that you need this implementation macro, right? So, he kind of, like, learned that the hard way."
7408320,7415920," Uh, so, and I guess that's basically the way he learned about it. Um, okay. So, let me see if"
7415920,7419840," maybe it has something for the, maybe it has a version of that particular."
7419840,7427040," Nah, probably not. I suppose what we have to do, we have to just, like, have our own declarations,"
7427040,7433600," right? So, just have our own declarations. Um, let me, let me actually see. We don't even"
7434480,7443280," really need this kind of things, honestly. Do we really need that? But maybe not. Anyway. Um, so, stb..."
7445360,7453840," Let me find this function. And find... Yeah. I can just put it like that."
7453840,7463600," And don't include stbverbis. It will complain about the lack of the declaration of the structure,"
7463600,7471920," but maybe that's fine. Yeah. Okay. So, it doesn't know about stbverbis. I have an idea. What if I say that,"
7471920,7480080," type def, um, you know, struct stbverbis has to be verbis? So, I'm going to say it's opaque,"
7480080,7484080," because I don't really care about its internal, honestly. Um..."
7487120,7490320," That was easier than expected. Okay. So, it's just, like, forward declaration to yourself."
7490320,7496320," Uh, that's cool. That's cool. Um, all right. So, let's actually see if it's going to work now."
7496320,7506080," Um, we need to... Let's try to use the OGG version that is small one, right? So, and let's just render it."
7507120,7516080," It... It crashed. It fucking crashed, mate. For fuck's sake. Get fucking there. Okay. So,"
7516080,7522640," I wonder why it crashed. So, it started actually really, really well, I think. Uh, all right. So,"
7522640,7529920," but then it crashed. So, I probably fucked up something. But that is fine. Uh, so, frame count red. So,"
7530960,7540480," so, this is the amount of frames, and... Yeah, I guess that's fine. Mm-hmm. So, this is the amount of samples."
7540480,7552240," Um, yeah, I think I know. I think I need to do this stuff. Oh, I see. First of all, I need to do that."
7552240,7561280," num_samples. Right. And also, I have to get rid of the wild_true. Right, right, right. Um, to be fair,"
7561280,7567120," num_samples is kind of like a very common thing. So, I probably just need to do it once in here,"
7567120,7573200," and just like use it throughout. Uh, so, this is amount of channels. This is samples. Uh-huh."
7574960,7580000," Channels, samples, num_float. Uh-huh. And..."
7580000,7584160," Mm-hmm, mm-hmm."
7584160,7593280," It's to be verbis. I need to go in here. I just want to read. So, it's a num_short. All right, all right."
7593280,7600160," I don't think I need to do it like that."
7602560,7608720," Mm-hmm, mm-hmm, um, so, this is the amount of"
7608720,7613760," samples I allocated."
7613760,7620800," It's a bit confusing, right. So, because the Dr."
7620800,7628480," Wave expects you to provide the amount of samples, but this one expects you to provide the amount of..."
7630400,7636160," Yeah. So, this is a num, but it's not the same. It's frames. Get fucking damn it. Okay."
7636160,7642720," It's frames. I should have not called it frame. Yeah, fuck."
7642720,7648720," Uh, I suppose I'm just gonna do it like that."
7648720,7656000," I'm just gonna do it like that. And I probably need to clean that up after this stream, right,"
7656000,7664080," because it's very tricky and very easy to mess. It's very easy to mess. Let me just have it nearby."
7664080,7672960," Uh-huh. So, this is a num_floats. Uh-huh. So, just provide the buffer. Uh-huh. So, that's pretty cool."
7672960,7679120," But then, it returns the amount of frames that is read. And because of that, it's totally fine. Okay,"
7679120,7686240," I think that's basically what I have to do. Right. That's basically what I have to do. All right. So, let me see."
7686240,7697600," Depending on different libs is a bit annoying. Yeah, yeah. It is true. Especially in the domain of audio,"
7697600,7703680," where the terminology is also kind of confusing. Like, people sometimes mean different things by samples,"
7703680,7708480," frames, and stuff like that. And it is extra annoying, I think. Okay, I fixed it."
7708480,7716880," Uh, a little bit of a pondering upon the code actually helped. So, just like meditate a little bit,"
7716880,7726080," and it works now. So, I just want to render it out and confirm that it works, right? It works as expected."
7726880,7733040," And afterwards, we're going to try to render the, you know, 45 minutes one. So, as you can see,"
7733040,7738480," it's lagging a bit. Is it visible that it's lagging? Like, at least on OBS preview it is lagging right now."
7738480,7748000," So, how everyone is doing? Tell me. Tell me, chat. How are you doing, my friend? No lag for me? Okay,"
7748000,7754640," So, that means my preview is lagging. It's lagging. So, where to see the light outside? I know. I know."
7754640,7762080," So, I'm a night creature. Doing well. I'm glad to hear that. I'm going to bake soon. What are you going to bake?"
7762080,7769520," Bread? You graduated university. Congrats. Congrats, congrats, congrats, congrats."
7770240,7774960," Yeah, some people say samples instead of frames. And the idea of multiple samples per slice is silly."
7774960,7779840," Yeah. So, everyone is just confusing everything."
7779840,7787760," Since sinus headache going well. Oh, that's the worst. That's the worst."
7787760,7795440," I hope you get walls. Synonym rolls. Synonym rolls."
7797200,7804160," My game released went surprisingly well for zero market. Nice. Like, I saw the screenshots of the game."
7804160,7809600," So, they look actually kind of cool. So, I couldn't play the game because I cannot pay for it."
7809600,7815600," But it looks interesting. It looks interesting, actually. And the fact that it's implemented in Jai."
7815600,7817920," Right. So, the fact that it's implemented in Jai is actually kind of cool."
7817920,7823680," So, you basically use the ARM compiler to implement it for Android."
7825680,7831520," So, I suppose, yeah. So, the ARM compiler is already out."
7831520,7836720," Maybe. I don't know. I haven't checked it for quite some time."
7836720,7845120," You can post the link in here, right? So, posting links is not forbidden at least anymore."
7845120,7848080," ARM compiler ready. Nice, nice, nice."
7849280,7857680," Alright. So, it's almost done. It's almost done. Come on. You can do that. I believe in you. Alright."
7857680,7863920," So, let me see if it actually is the thing. Alright."
7868960,7878480," Now, here's the moment of truth. We want to get the pilot red sun and see if it will at least start"
7878480,7883680," rendering. Right. So, we're probably not going to wait until it's finished rendering completely."
7883680,7887600," But let's see if it will at least start rendering it right away."
7889520,7892720," It did. It is actually like started actually rendering it."
7892720,7897680," And according to the law, it is rendering it. Look at it go."
7897680,7905840," Yeah. So, before it was impossible to even start rendering this thing because it was"
7905840,7912160," stalling on trying to load the entire song into the memory. Now, it doesn't even have to."
7912960,7919120," It doesn't even have to do that. We don't really support all of the formats, but it's pretty trivial"
7919120,7924320," to actually go through each individual supported format and just add support for that. And this is"
7924320,7931600," something that I'm going to do already off screen. Right. So, I just like outlined the feature. I"
7931600,7936720," researched what needs to be done and I figured it out. Right. So, we just need to implement this kind of"
7936720,7945360," thing in here. So, I don't know if it is possible to contribute this kind of stuff to Raylib. I don't"
7945360,7951920," really think so. One thing maybe I would suggest to contribute to Raylib is making this thing public."
7951920,7961040," So, people then can like at least reliably switch keys on these things, but I don't really know. Right."
7961040,7965120," So, maybe I'll try to submit a pull request and ask Raysan what he thinks about that."
7966080,7971680," But, yeah. So, that was a pretty productive stream. I didn't expect that it will get something"
7971680,7977200," actually working and fixing an actual problem today. Right. Because this was an actual problem. Right. So,"
7977200,7985280," you couldn't render big files. You couldn't do that. Now, you can because we just like reuse the same"
7985280,7993680," like opened context that Raylib already opened for this libraries. So, yeah. That's pretty cool. That's pretty epic, I think."
7994800,8000080," So, anyway. I guess that's it for today. Thanks everyone who's watching me right now. I really"
8000080,8004320," appreciate that. Have a good one and I'll see you all on the next recreation programming session with"
8004320,8009440," a Mr. Zozin off screen. I'm going to add support for the rest of the things and I will see what kind of"
8009440,8015840," things I can get back to to Raysan. What kind of feedback. Right. So, thank you everyone for watching."
8015840,8016460," We'll have you."

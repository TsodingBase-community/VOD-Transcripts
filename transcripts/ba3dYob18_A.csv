start,end,text
0,5000," Hello everyone and welcome to yet another recreational programming session with Mr."
5000,11420," Zozin. So the topic of today's stream is Newton's method. Have you heard about that one? Right,"
11420,18320," so specifically we're talking about Newton Raphson method, right? So because in a pre-stream,"
18320,23060," in a pre-stream time, we actually had people who are not sure what kind of methods I'm talking"
23060,28600," about, but since I'm a dumb person, dumb, uneducated, ignorant person, the only Newton"
28600,34360," method I know is this one, right? And it's actually a pretty cool method, I gotta tell you, it's"
34360,41080," actually a pretty cool method. So because it's kind of reminiscent of gradient descent, it's kind of"
41080,46660," like a gradient descent, the famous algorithm that actually powers the artificial intelligence in"
46660,53640," machine learning. And it was invented, I think, in the 70th century, I think it was. Where is the"
53640,62780," history of this shit? Yeah, it's basic, it's 17th century. Was Newton doing AI in 17th century? Holy"
62780,70960," fucking shit! Okay, so, but anyway, so this algorithm is actually very useful for finding roots of"
70960,78480," functions. Do you guys know what the fuck are roots of functions? Do you guys know what the fuck are"
78480,83600," roots of functions? So let's actually take a look at that. So essentially, if you have function f,"
83600,90080," f of x, right? So the root of function, people say yes, mods ban everyone, they're going to be"
90080,99600," spoiling them, I'm joking. So the root of a function f is such, I suppose, xr for which the function is equal"
99600,108700," equal to zero. That is the root of the function, right? And how do you use Newton's method to actually"
108700,120080," find such, like, x of r, right, xr, that actually turns f into zero? So you start with some sort of"
120080,125820," approximation, let's actually call it x zero, right? So this is some sort of approximation. And then"
125820,134120," you iteratively, you iteratively update that approximation with this formula, right? You"
134120,142000," subtract f of x zero divided by f prime x zero, which is derivative of the function. So you need to"
142000,146980," find the derivative of this function, right? So we can actually write it. So x of one is going to be x"
146980,156600," 0. Subtract f of x of zero divided by derivative of this entity, I think. And you get x1. And then you"
156600,162860," repeat that to get the next approximation, replacing x zero with x1, and so on and so forth, right? So"
162860,171520," essentially, you can do that limited amount of iterations, right? So a finite amount of iteration"
171520,179720," until you get f to maybe some sort of epsilon, right? So you have some sort of like it iteration."
179720,187840," And you can keep doing that. You can keep doing that until x of i is less or equal some sort of"
187840,193320," epsilon e, right? So maybe let's call it APS. And we can pick something like, I don't know, maybe,"
193320,199060," you know, 10 to the power of minus three or something like that. It doesn't really matter. Depending on"
199060,204960," on your application, you can do different kind of things. So and like, what is it useful for? For"
204960,213760," instance, it's a very common algorithm of computing square roots, right? So how can you compute a square"
213760,224640," root? What is a square root, right? So security x, right? What is security x? So let's go ahead and"
224640,233880," just assign that as security x to some sort of value a. So it is such a value a that if you rise it to the"
233880,240020," power of two, it is going to be equal to x. Did I get it correctly? Right? So did I get it correctly?"
240020,245720," So if you rise square root of x to the power of two, right, by the definition of square root,"
245720,251860," right, by the definition of square root, you get x back, right? So that's basically the definition of"
251860,261100," this entire thing. So, and essentially, you can turn this into function, into such function for which"
261100,270540," a is going to be a root, a.k.a. the value of that thing is going to be equal to zero, right? So how can"
270540,280740," you do that? Let's imagine that you have a function f of a, right? So an a squared minus x is such"
280740,292520," function. It is such function, right? So if you put f security x in here, you're going to end up, you're going"
292520,299800," to end up with a security x like this, which essentially means that you have x in here, right?"
299800,305880," So you have x in here, and essentially this one is zero. So that is, in fact, a root. I hope we didn't"
305880,311540," make any mistake in here, right? So, and yeah, so I would like to actually code that. It's actually super"
311540,316640," easy to code. So let's go ahead and do that and maybe compare it to the mathematical function"
316640,323260," security f that is present in a standard library of c, right? So let's go ahead and do that. So"
323260,333120," main.c. And so let's include the standard IO library, right? So simple like this, return zero."
333120,341280," We're not going to accept any arguments in here, and I'm going to just say hello world, right? So,"
341280,347540," and let's just try to compile this into anything. So main.c is going to be wo, w extra, and everything"
347540,353180," seems to be compiled, and if I try to run this entire thing, it in fact says hello world, right? So"
353180,357640," let's actually start with our sort of approximation, and let's say that it's going to be"
357640,364240," initially equal to zero, right? So it's going to be initially equal to zero. So maybe we also"
364240,369080," going to specify the epsilon, right? Until which we're going to be doing this entire thing, and let's"
369080,374420," say that epsilon is going to be like minus three, right? So 10 to the power of minus three. So essentially"
374420,383160," what it is is just like something like this, right? So I think it is something like this, right? And we're"
383180,393680," going up until, I suppose, square is greater or equal than epsilon, but since it doesn't really"
393680,399780," matter, we could have actually, we could have actually done just a, but let's keep it like that."
399780,406660," Let's actually keep it like that. So, okay, so now here we need to update the, you know, our approximation."
406660,413860," How are we going to be doing all of that? So we need to take, you know, a derivative of that specific"
413860,420780," function. What's going to be the derivative? Since a is a variable, right? So that means this thing is"
420780,426340," going to be constant. So we nuke it out right away. And so square just means that we're going to have"
426340,430980," something like this. So this is basically the derivative, right? So that means the next a,"
430980,436500," right? So that means the next a, how are we going to call it, right? So maybe a of one,"
436500,450340," right? It's going to be a minus a squared minus x, right? For which we're trying to find the square root"
450340,459980," root divided by 2a or something like that. So that means we also need to define an x for which we are"
459980,464120," competing the square root, right? So this is essentially going to be 2, right? Let's compute"
464120,469340," the square root of 2. Let's compute the square root of 2. So, and this is how we're going to be updating"
469340,475700," the approximation, right? So might as well even copy paste this entire thing, right? And that's about it,"
475700,482820," I think, right? That's about it. We can even maybe do that, not really depending on epsilon, but just,"
482820,487300," you know, a couple of iterations, right? So let's actually do a couple of iterations,"
487300,494020," so to speak, and see how it evolves over time, right? So let's actually see how it's going to evolve over"
494020,510100," time. So just a second. And let's go, let's go. So a is equal to f, and let us see, let us see. So,"
510100,515780," so x, oh yeah, you don't do it like that, all right, right, well you don't do it like that."
515780,521060," Okay, so there's something wrong in here because it starts with zero, right? So basically what we have in"
521060,527060," here is effectively division by zero, so we can't really use that as an approximation. What if we"
527060,534820," just like use x as an approximation, right? So I think, okay, so on the first iteration it goes toward"
534820,541220," one and a half, right? It goes towards one and a half, and then it goes closer to the actually power"
541220,546580," of two, right? So if we take a look at something like, right, so this is going to be import math,"
546580,552980," math, square root of two, right? So it's actually very close. It's actually very close, and that's"
552980,558020," already on the second iteration. That is already on the second iteration. What if we actually do like"
558020,566500," a three iteration? What if we do three? It's actually even closer, right? So 41, 42, and yeah,"
566500,572660," so we can do another iteration, and we probably will get even closer, right? So and we are in"
572660,578420," fact getting closer and closer, right? It's just depending on the, you know, the resolution, the"
578420,584660," precision that you have, right? You're going to do a different amount of iterations. We can try that with"
584660,590740," other different axes, right? So for example, we know what's the square root of nine, for instance, right?"
590740,596260," So what's the square root? And it goes towards three. It in fact goes towards three, right? I think"
596260,601860," like a starting approximation from x itself is actually rather good, right? So something like 16,"
601860,608020," and it goes towards four, right? So the more these kind of iterations you have, right, so the better is"
608020,614180," approximation, and it actually reaches really quickly. Have you noticed that? Yeah, it does in fact"
614180,619540," converges very fast. It does in fact converges very fast, and I really like it. So you can use it not only for"
620740,625460," a competing square roots, right? But just generally, the roots of functions, if you have some sort of a"
625460,630100," value that you're trying to find, maybe some sort of equation that you're trying to solve, and in fact"
630100,636660," what we're doing, we're numerically solving an equation, right? So this equation, right? And if you"
636660,641140," have some sort of equation, you can always take the right part, subtract it from the left one, and turn"
641140,645940," that into a function, and apply Newton's method, right? So if you have one variable and stuff like that,"
646900,653540," right. So and yeah, so you can use it for pretty much like a lot of different functions and stuff"
653540,660900," like that. So that's pretty cool. And I think I, in the past, right, so we discovered that I already"
660900,670260," implemented that algorithm before in JavaScript, right? So and I think I didn't save the string where I did all"
670260,676180," of that, right? So but I did this sort of page, where I basically tried two different methods of computing"
676180,682420," square root. One was binary search, right, which is very dumb and very slow. As you can see, right,"
682420,688260," so I'm trying to actually use like binary search, and it slowly converges towards this solution. And"
688260,693220," then as a comparison, if you take a Newton's method, right, so if you take the Newton methods, look how"
693220,700180," quickly it converges. Like, look how quickly it just like straight up finds that value. And by the way,"
700180,704420," this page is interactive, you can actually click on any value in here, right, so and it's going to"
704980,710820," actually work for that, right? So you just basically clicking and picking the value. And it is going to"
710820,717220," just, there's something weird going on with this. Oh, I mean, it's fine. Right, so I'm going to put this"
717220,722980," page in here, right, I'm going to put this page in here. And for people who's watching on YouTube,"
722980,726820," I'm going to put that in the description as well. So in the description, we're going to have a Newton's"
726820,732100," method, and also this page and stuff like that. So there's also source code for this entire thing"
732100,737780," somewhere on GitHub. Yeah, there we go. Let's actually take a look at it. Let's actually take a"
737780,743380," look at it. I think I implemented, yeah, I implemented it in TypeScript. Would you look at that? In a real"
743380,749540," series programming language, unlike toy scripting language, I implemented it in a statically typed"
750020,753060," programming language for serious software development. Right."
753060,764340," I really like how some people react to me saying that some language is a toy language. They always go"
764340,774580," go like oh oh oh oh dear i program so fucking funny look i love it i fucking love it anyway uh so"
774580,782220," uh both are toys yeah both are toys uh every language is a toy uh doesn't freaking matter"
782220,787940," in reality in reality it doesn't fucking matter uh right so if you manage to put something"
787940,793060," impressive for normies on the screen you won't that's it that's how the whole game works just"
793060,798660," impress the normies with pretty pictures on the screen and there you go you you won the market"
798660,809380," you won the market so anyways like why am i uh looking into into this method like why do i even"
809380,816500," need it right so i working on my um programming animation engine right called panim so let's"
816500,822900," take a look at it so i'm gonna uh go into this folder all right so let me rebuild everything"
822900,827540," just in case um i think i already fetched the latest changes i think i did"
827540,835140," yeah okay so let's go to panim and let's take a look at one of the animations that i have in here"
835140,840420," right so this is one of the animations i have in here so it just you know uh demonstrates how turing"
840420,844740," machine works and stuff like that nothing particularly special the problem with this animation is that my"
844740,851620," my camera my stupid face actually like covers a lot of interesting stuff in here uh right and recently"
851620,859140," i worked on a bezier curve editor for this specific animation engine so i can uh you know edit"
859140,864020," interpolations for the animations right so for the interpolation of the animation so let's actually take"
864020,872100," a look at that so uh i think what's funny is that this engine as you can see it accepts literally shared"
872100,877460," objects like dynamic libraries as the parameters because the animations for those engines are dynamic"
877460,884420," libraries written in c right so the animation that i actually run is the turing machine one and it's"
884420,889940," actually dynamic library as well as you can see right so it's a dynamic library uh right and i have"
889940,895940," different animations in here right so another one would be something like squares uh right so let's actually"
895940,901940," run it so this is another animation it's a different dll each dll so that defines its own thing and the bezier"
901940,908100," curve editor is yet another dll right so they're not really animations they're more like applications"
908100,914180," for the engines right and apparently you can have um applications that are more general purpose right"
914180,919940," so i think i'm moving towards uh like a general plugin system i think i'm going to create another emacs"
919940,926340," or something right anyways uh so i created this bezier curve editor it's actually kind of cool"
926340,933860," all right so you have this nodes and stuff like that so and essentially uh what i'm doing in here right so"
933860,940820," i'm editing the curve that is going to be used for the interpolation for the animations and stuff like that"
940820,950660," and essentially um what i'm doing what i'm doing i'm treating the x axis i'm treating the x axis as the time"
950660,958900," right so as the time as it goes by and y axis as the value of the interpolator so it can be used for"
958900,964980," updating the position of some sort of object or the size of some sort of object or maybe color components"
964980,970340," of some sort of objects for example alpha component so we can do fade in fade out and stuff like that"
970340,978260," when you have an interpolator that looks like a sigmoid it actually creates a very satisfying transition"
978260,985620," because it essentially fades in like it uh you know ramps up then goes with the constant speed and then"
985620,992100," slows down and if it's played very quickly it's actually very satisfying and very natural movement"
992100,999620," it's like the sigmoid is a very natural movement that you can see in like in reality uh right i think"
999620,1005940," it's sort of like a reminiscent of golden ratio right so you can see it everywhere and like a sigmoid"
1005940,1011060," as a movement uh you know curve you also see it everywhere that's why it feels sort of like natural"
1011060,1017300," and stuff like that so uh and we're using bezier curve and how bezier curves are defined so this is"
1017300,1025620," a cubic bezier curve so that means it is defined by using four two-dimensional points right we're using"
1025620,1036660," four two-dimensional points to define a bezier curve right so uh but it is defined uh in a parametric form"
1036660,1043700," right it is defined in a parametric form we can even take a look at how exactly it is defined so i think i"
1043700,1050260," have the bezier curve defined somewhere in the interpolator there you go uh right so essentially"
1050260,1059700," we accept the parameter t which is supposed to go from zero to one right so it goes slowly from zero to one"
1059700,1067940," and it gives you a two-dimensional point on a two-dimensional plane it's not like we're feeding"
1067940,1076180," x and getting y no no no no no no no no no no we have a parameter t that always go from zero to one"
1076180,1082580," and as you feed the values from that parameter you get actual two d points that you have to put in"
1082580,1091940," here right so but that is kind of opposite to what i initially wanted right so what i initially wanted i wanted"
1091940,1102500," i wanted to treat x axis as the time parameter and y axis as the actual value so and uh that is something"
1102500,1108820," that even people on youtube in the comments section actually pointed out right so i knew that already"
1108820,1115860," but i didn't put too much attention to that because i was busy with making this uh sort of editor because it"
1115860,1121460," was more important for me i wanted to make this sort of editor uh and then i could figure out how to turn"
1121460,1131940," like a parametric form into non-parametric form so uh essentially uh we can even see how exactly engine"
1131940,1139780," sort of interprets this curve right so because in the engine how do we even use this entire thing right so"
1139780,1145380," if i find the cubic bezier curve yeah so this is what we do we take the interpolator t"
1145380,1154260," and we just throw away x and get y which essentially means that we are interpolating not by the same"
1154260,1159460," curve as we have in here right so uh essentially"
1159460,1169620," what i want to be able to do i want to be able to interpolate uh by x where x is going to be from"
1169620,1176900," zero to one and by x i want to take y right i want to take y uh so and we can even say that those"
1176900,1181860," things are something like this so this is basically what i want to be working with but in reality i can"
1181860,1190260," only work with this right in reality i can only work with this right so and let's actually compare"
1190260,1196420," these two modes of basically following the bezier curve right so let's compare these two modes of"
1196420,1205700," following the bezier curve i think it's rather easy to to even do with our editor so let me find uh"
1205700,1214100," bezier.c and let me find the um the place where we render all that yeah there we go so as you can see"
1214100,1221460," here we are just iterating through t right so we have a resolution 30 and we're iterating from zero to"
1222180,1228260," resolution we can't even make it equal right and then we're dividing i by res which ends up being"
1228260,1234500," from zero to one so we can actually treat this entire thing as a parameter t and we're just drawing"
1234500,1240980," this entire thing but in the engine itself when we're using this curve when we're using this curve"
1240980,1250180," what in reality we're doing we are using the following point right so we are using t as x"
1250180,1258740," right and then we are computing the bezier curve and we're taking y and that's the actual point that's the"
1258740,1264820," actual stuff that we're using here which is obviously not correct and you'll see why so let's actually use"
1264820,1271460," the same the same sample radius and uh the blue color there we go so this is going to be sort of like the"
1271460,1275860," second point that we have in here and i wonder if we can quickly rebuild all that right i don't actually"
1275860,1282660," reload this and that thing and uh yeah something something went horribly wrong i wonder what exactly"
1282660,1289220," so yeah because this thing is supposed to be i think multiplied by"
1290340,1296660," by axis length right so because it's a value from zero to one so it has to be sort of scaled properly"
1296660,1305220," uh yeah there we go so you with yellow this is the curve you defined with yellow this is the curve you"
1305220,1312100," define and the blue is the actual curve that is used in the animation engine so in the configuration like"
1312100,1319540," that they kind of look similar to each other which is fine which is totally fine unless they deviate too much"
1319540,1328740," right so yeah this is not ideal as you can see this is not ideal so they deviate too much so yellow one"
1328740,1336660," is the actual busy curve that i want to use as an interpolator and the blue one is the one i hacked"
1336660,1344580," super quickly hacked to just test things out and as you can see like in some configuration this hacked"
1344580,1349220," curve might not like it's not the same like they're completely different curves right so"
1349540,1356660," like that's a that's a that's a huge oof that is a huge oof so essentially what i need to do right"
1356660,1363380," i have i only know x of t"
1363380,1372580," this is the only thing i know knowing x of t i want to find y of t"
1375140,1381940," i don't know t so this is what i need to do right so essentially as i'm"
1381940,1387620," animating i'm interpolating time right i'm interpolating time and i know x"
1388420,1398500," but by knowing x i need to find y so the first step in doing so i have to do is find the t and then plug"
1398500,1405780," that t into y and only then i can find this and that right so let's actually take a look at the"
1405780,1413220," definitions of x of t and y of t uh right so what are the definitions so the definition is basically the"
1413220,1419620," formula of cubic bezier curve all right so let's go into the interpolator so here it is here is the"
1419620,1427620," definition sort of speak all right so here is that's a pretty big definition so what do we have on here"
1427620,1436100," we have basically x zero so the x of the first point again bezier curve is defined by four points"
1436100,1444100," as you can see there's four points in here so this is x zero uh and it's multiplied by the inverse of t"
1444100,1455380," uh cubed so this is the first sort of like a component of this polynomial then we add x one uh multiplied by"
1455380,1465220," three then we have two inverse inverses of this thing inverses of t two of them and a single straight t"
1466100,1475700," so that's the second component in here so what's the third component it's basically the second uh x"
1475700,1485860," it's the second x multiplied by three a single inverse and square of t right so i'm just following this"
1485860,1495060," formula and the last component in here is basically x this third x the third x multiplied by t cubed right"
1495060,1502740," so this is the definition of uh of x y is literally the same it's just instead of x you're using y"
1502740,1507380," uh just a second we can just quickly replace this into i think so this isn't the x this is going to be"
1507380,1512740," y and there we go so this is basically the system of equations that we have in here right so this this"
1512740,1519060," defines bezier curve right so when i'm interpolating i'm uh basically only interpolating t"
1519060,1526020," right but this is not what i want this is not what i want uh i want to interpolate x of t and knowing x of"
1526020,1534500," t i need to find y of t right so i have a particular x right so i have a particular x so that means i"
1534500,1543220," somehow need to solve this cubic equation and it is in fact a cubic equation right so this is the highest"
1543220,1548580," degree uh you know variable uh you know variable right so t is three so it's a cubic equation by"
1548580,1558020," solving that uh cubic equation i can get t and then i can plug that t into y and finally get the value by"
1558020,1564900," which i can uh interpolate right but i don't fucking want to solve a cubic equation what the"
1564900,1571220," fuck is this time for solving by right and no i don't want to do that fuck that right furthermore"
1571220,1573700," like look at look at the yellow line"
1573700,1582740," like this thing like if if x is somewhere here x is somewhere here this thing has one two"
1582740,1587300," three fucking solutions like how which solution am i supposed to fucking get"
1589060,1598660," like like like how am i into like i don't want to do that fuck that mate fuck that uh right"
1598660,1609300," but who said i can't basically take this part i can't take this part subtract the x that i already"
1609300,1616820," know turn that into function and fucking use the newton's method on that you can't even see what what"
1616820,1623300," kind of bitch i'm talking about like this kind of bitch right so the equation that i have is this"
1623300,1632100," part equal to x so that means if i subtract x from this part with a right solution of t is going to be"
1632100,1639780," equal to zero so that means i have a function f of t for which for which root is the solution for that"
1639780,1645860," which is the solution for that equation so i can use i can use newton's fucking method to crack that"
1645860,1656260," bitch and find t and then once i found t i can plug that fucking t into y and get the correct value of"
1656260,1666660," y do you get it do you fucking get it so yeah i could actually maybe um you know limit the kind of"
1666660,1672980," parameters they can put in here like limit the kind of points uh i can put in here right so and always"
1672980,1680900," have the cubic equation in a form there where it only has one solution everything nice and stuff like"
1680900,1686820," that but i mean it's just like it's too much it's it's for nerves it's it's complicated it's difficult"
1686820,1694020," like i don't want to fucking do that fuck that shit fuck that shit it's easier to actually slap a"
1694020,1698980," newton's method on this thing and like newton method i think it's going to be super fast like"
1698980,1703220," have you noticed like it takes like a few iterations to approximately get the value"
1703220,1708900," to approximately get the value and it's not going to be that computationally difficult"
1708900,1720180," furthermore furthermore i've got a cool idea for optimization so essentially how are we doing all of that"
1720180,1730580," how are we doing all of that we are iterating x we are iterating x from zero to one and on each iteration"
1730580,1736020," we are solving that equation and getting t and if we're going to be solving it with newton equation"
1736020,1744740," we need to have some first approximation of t what if on each iteration the first approximation of t is going"
1744740,1753060," to be the previous solution on the previous iteration because since this curve is super smooth the previous"
1753060,1756740," solution for t is going to be very close to the next solution of t"
1759540,1769460," think about it think about it right so yeah and basically because of that maybe the computing the"
1769460,1776580," next solution computing the next solution for t is going to be like literally maybe one iteration or few"
1776580,1784580," iterations yeah fast conversions exactly so you you know that more than sqrt you know that you literally"
1784580,1790900," have a security in your name so you know what the i'm talking about you know newton's method you literally"
1790900,1793620," put square root in in your name yes"
1798580,1808020," so yeah isn't that a poggers i think that's pretty f**king ponder so we need to call that we need to call"
1808020,1819620," that s**t uh so it would be kind of nice maybe to i don't know how to start uh maybe we could have some"
1819620,1825780," sort of visualization that we're having uh for the animation and stuff like that and see how it converges"
1825780,1831940," and everything but maybe i i don't know uh i don't know uh i don't know we can maybe start"
1831940,1841620," with some sort of a thing that allows me to pick x and we can just see how close that x to the actual"
1841620,1848900," thing uh like on the curve how close is it on the actual thing on the curve that sounds like a good idea"
1848900,1855140," actually that sounds like a good idea so let me uh let me see so let's let's actually get rid of this"
1855140,1859700," stupid uh things right so the you know the blue things the blue balls"
1859700,1867620," let's get rid from uh get rid of the blue balls from our uh visualization there we go so now uh let's"
1867620,1878740," maybe um take a look at the following thing so do we have a mouse yeah there we go so we have a mouse position"
1879300,1885700," we have a mouse position somewhere here so we're rendering the yellow balls uh this is the yellow balls"
1885700,1894660," then we're rendering the nodes and that's about it so maybe somewhere here um i can take x"
1895860,1904340," and i can just draw the line that like vertical line that denotes that x i think that's going to be very"
1904340,1913060," useful so let's actually do draw a line xz right so draw line xz so there's going to be a ray leap and"
1913060,1923700," uh let me find the following thing draw line xz uh there we go i find that thing i find found that thing"
1923700,1930420," so okay so what's going to be the start position the start position emacs okay"
1931620,1937780," emacs having some hard time recalculating all this stuff but anyway so start position so why is it so"
1937780,1944740," slow i know why it's so slow because i have multi sampling you know anti-aliasing"
1944740,1951380," right so and it's very difficult uh when i am streaming so let me quickly maybe disable all of"
1951380,1957300," that stuff let me quickly disable and i'm gonna even rebuild this entire thing so obviously it does not"
1957300,1964340," compile but who fucking cares uh all right all right all right all right so what does xd in the function"
1964340,1972740," name means that means it's extended just like so essentially there is so so-called base functions"
1972740,1982820," with the base arguments right so i suppose so the thing is ray san developed this library specifically for"
1982820,1990180," teaching programming and computer graphics to students right because of that the base functions"
1990180,1995940," so to speak are very simple so they accept coordinates not as vectors or anything like that"
1995940,2005460," they accept them as integers not even floats mind you not even floats as integers right so these kind of"
2005460,2012020," functions are usually useful for new uh developers people who are new to programming and stuff like that"
2012020,2020260," so if you're feeling fancy if you're feeling spicy right and you know how structures in c work you can go"
2020260,2028500," for a v version which replaces those nasty noob integers with professional vectors which are structures that"
2028500,2036580," contains two floats ieee 754 floats right if you are professional if you train professional and do understand"
2036580,2044820," what the fuck what the fuck i'm saying so furthermore you can go and for an extended version that not only allows"
2044820,2051060," you to define start position and position and the color but also the thickness of the line you're drawing"
2051060,2061140," so you're not going to have some noob one pixel lines but actually thick thick girthy lines that's what extend means"
2061140,2067140," so it's and and all of the functions in array deep they have this naming schema so there's a base"
2067140,2074420," noob functions for noob students and there's an extended uh version of the function for professionals"
2074420,2080100," that allow you to you know update the thickness and girthness and stuff like that"
2080100,2086260," you get what i'm saying you get what i'm saying good anyways so since we are professional we are"
2086260,2090740," trained professional we're going to be using the extended version because we need to be able to update the"
2090740,2095380," girthness of the lines uh anyways so let me actually copy paste it"
2095380,2102580," um yeah i'll already copy paste it so that's cool uh so we're gonna have a start position we're gonna"
2102580,2107060," have an end position i'm not sure what kind of thickness we're gonna be using so i already have"
2107060,2112820," an axis thickness so maybe i already have a handle thickness all right so let's actually use the handle"
2112820,2120340," thickness and the color let's use a red color right why not there's nothing wrong with using red uh right"
2120340,2128020," so it's a fine color the color of danger so we want to show the code that we are dangerous"
2128020,2132260," so it's scared and actually works without any bugs that's what we want to do"
2132260,2138340," so anyway so this is a stat position so that position is going to be have"
2138340,2149940," it's going to have the same x as the mouth right so that means i'm gonna say mouse x mouse x x and um y is going to be"
2149940,2154100," i suppose let's actually start with zero right so this is going to be zero so this is the start"
2154100,2159860," position so the end position is going to be the same x but in terms of y it's going to be the full thing"
2159860,2166180," so minus x's length so this is the uh this is the end position so we have a start position we have an end"
2166180,2172100," position so and that should give us the sort of the line that we want right so and there we go so here's"
2172100,2176020," the line this is this is what we have right isn't cool isn't cool i think it's pretty cool"
2176020,2183460," right so uh yeah so we have this kind of stuff and we can move around now um"
2183460,2193220," we need to the the problem that we need to solve knowing mouse x find"
2194260,2202660," the point on the bezier curve that corresponds to that x that's the problem we're trying to solve"
2202660,2209300," that's the actual problem we're trying to solve so the naive approach the naive approach would be to"
2209300,2216820," take the mouse x right feed it into the cubic bezier curve right so cubic bezier curve and also nodes"
2217540,2225860," but here's the thing by doing that you getting a vector to like the position right so we can take"
2225860,2234020," this thing and maybe we can draw a circle at that specific position right so circle v and uh circle v"
2234020,2238180," so it's it's a professional version it's one of the professional versions uh so what does it accept"
2238180,2244340," circle v it accepts the center then the radius uh let's actually use some sort of radius maybe handle"
2245140,2254980," uh do you have node yeah node radius and let's maybe use a color um i don't know purple okay can we"
2254980,2262580," use purple i think we can use purple uh right so there we go and if i reload this entire thing uh"
2262580,2271940," right so did it recompile shit uh i can't even see shit in this means that's bizarre right so what if i"
2272500,2282980," literally say okay uh vector 2 uh 0 0 like ah i think i think i know what the fuck is going on do do i not"
2282980,2294820," yeah okay okay so here's the purple all right all right and the problem with x is that that x is from 0 to"
2295780,2302900," axis right so but it has to be from 0 to 1 so we have to divide it by axis length right so that's basically"
2302900,2310180," we need to do that that's fine that's fine right so and that kind of works already right that kind of"
2310180,2316740," works but if we change the uh the thing right"
2319380,2325540," it doesn't really correspond to shit honestly right so and sometimes it's even off"
2325540,2329700," like it's it's completely off as you can see"
2329700,2336980," right so it works with the default thing kind even with the default thing look it's it's off"
2336980,2346260," right it does not correspond and this is because the bezier curve does not accept x it accepts the t"
2346260,2355700," parameter right so the the fact that it returns you a whole point instead of y it returns you x it it"
2355700,2364340," literally returns you x like you don't feed x into it you feed t and t and x are not equal"
2364340,2370900," they are not equal to each other so that's the main thing because it's a parametric form and non-parametric"
2371940,2381060," so uh yeah we know x right so which is is this thing and what we need to do we need to find uh we"
2381060,2387700," need to find t right and to find t we're literally going to be using literally going to be using the"
2387700,2395620," newton's method magnet right there newton's method um so and to use newton's method as we already saw"
2395620,2403540," in an example of a square root we need to take a derivative of function x of t"
2403540,2408660," so how do you know it is off"
2413060,2421380," so here is x and y should be around here but we have it here instead"
2421380,2425780," so the question how do i know that it's off"
2425780,2431140," i don't know maybe i just see it"
2433220,2440020," like don't you don't you see this thing should be on the red line"
2440020,2447780," like is it is it not convincing"
2447780,2456580," like how is this not con like how else should i demonstrate you that it's off when it's literally"
2456580,2457300," fucking off"
2457300,2466020," this is literally me right now"
2466020,2473540," chat l chat l indeed cheers"
2478260,2484500," must be code error yeah skill issue skill issue uh yeah"
2484500,2496420," bring numbers to convince people nah that uh that by the way oh no nobody subscribed actually or maybe"
2496420,2504500," some some people subscribe uh because uh yeah i didn't update my my activity feed all right so uh"
2504500,2510580," thank you so much jj55qs for gifting five community subs thank you thank you so much thank you for gifting"
2510580,2518340," money to jeffrey bezos jeffrey jeffrey bezos all right so how are we going to be fucking sewing that"
2518340,2526900," wait how are we going to be fucking sewing so um yeah let's go and take that x thingy"
2527940,2536660," uh right uh right it's cool and all it's cool and all but we must do the painful part chat we must do"
2536660,2545140," the painful part we must compute the derivative of this entire x yes"
2545140,2554180," we must compute the otherwise we won't be able to compute the newton's method come on like"
2555860,2561860," we must do that we must do that we must compute the derivative of the validation the problem is"
2561860,2569460," i don't fucking remember how to do that so i need some sort of cheat sheet okay so the derivative"
2569460,2572180," cheat uh sheet g"
2572180,2575060," and"
2575060,2594900," uh"
2594900,2596980," uh"
2596980,2602660," basic properties uh this is actually cool i think this is the only thing i kind of don't remember right so if you"
2602660,2608180," have uh constants you you can clearly see right so you can clearly see that this is c"
2608180,2615060," constant and you have a function uh of of the variable that we're deriving and if you're trying"
2615060,2621300," to take the derivative of this entire sheet you put the constant outside and you find the derivative of"
2621300,2627540," the inner function like you can see this small uh thing here right so this is like a prime thingy so"
2627540,2633300," this is the derivative you can clearly see that anyways so um yeah and this is basically what we have in"
2633300,2643940," here so x o x zero is basically a constant it is basically constant and here we have a function here we have"
2643940,2653060," actually nested function here we have a nested function and you know what that means chat you know what that means"
2654260,2661380," mother flipping chain rule motherfucker chain rule so any chain rule let me see yeah there we go so if"
2661380,2666180," you have like two nested functions and you're trying to find their derivative so you find the derivative of"
2666180,2672340," the outer function and then multiply by the derivative of the inner function right so is everyone convinced that"
2672340,2677700," this is basically this has a form of f of g of uh t"
2679140,2686580," right so i suppose everyone is convinced so the inner function is basically this right so this is the"
2686580,2694340," inner function and the outer function is this one so if you compose these two functions you end up with"
2694340,2700980," this thing because of that you have to use a chain rule in this uh specific situation"
2706820,2713060," thank you for that i really appreciate you anyways anyways anyways so this is a constant"
2713060,2722180," so that means we need to basically move uh this three in here right and that's the first thing"
2722180,2730420," and the outer thing becomes uh this one so now we have to take um you know derivative of this thing"
2730420,2737540," derivative of this constant instantly turns into zero derivative of this one uh derivative of the um"
2737540,2743460," variable is always just one right so this one is going to be one so this entire thing is basically minus"
2743460,2749140," one right so this entire thing is basically minus one because of that uh we just like you know do minus"
2749140,2755860," one we can kind of move minus one inside of this entire thing uh we can kind of do move it inside"
2755860,2760820," and because of that t is going to be like like this right it just swaps it around uh right and by the"
2760820,2770020," way maybe it would make sense for me to indicate um sort of underived uh you know members how do you"
2770020,2776100," call them how do you call this with prime like so right i think it does in fact make sense i think it"
2776100,2785460," does in fact make sense uh all right so this one is rather oh oh oh what the fuck is this nasty shi"
2785460,2787540," bruh"
2787540,2800100," is that a mother flipping product is that a mother flipping product um missing the square oh is that"
2800100,2805700," supposed to be the square oh it's a square i'm an idiot okay so let's actually go back let's actually go"
2805700,2813380," back like i haven't actually derived um you know things for quite some time so i might actually do"
2813380,2824260," some stupid fucky walking uh right there we go um so that means uh what we have to do in here is to have"
2824260,2833380," three multiplied by that uh right and this is has to be a square right so that's the derivative and then we"
2833380,2844820," multiply it by the derivative of this thing uh like so is that correct chat right is that correct chat"
2844820,2850820," uh right i think i think it is in fact correct so because of that this entire thing is minus one"
2850820,2856820," and that minus one can you actually put minus one you can't even put this thing you know there anymore"
2857460,2862420," i think uh i think uh all right so i don't think you can now use this trick with it with the square"
2862420,2868500," and shot like that but we can actually kind of uh you know move this thing into this theory so i think"
2868500,2870340," that's fine i think that's totally fine"
2873620,2881940," so anyways anyways anyways anyways anyways what do we have in here um so i think here we have we"
2881940,2892500," literally have a product um so mrs onion your later magic that was a cool yo what i forgot the later magic"
2893060,2900340," i forgot the freaking later thank you so much thank you you reminded me who i truly am"
2900340,2907620," i've been working so hard i've been programming in rust for so long i forgot who i truly am"
2908500,2913380," i forgot my true self i forgot my true self and you chat reminding me i just"
2913380,2921860," whatever uh so um so let's go into the separate folder all right so and let's do something like um"
2921860,2929860," you know busy uh tech right how do you do this kind of show wait a second"
2933540,2938820," okay so who remembers how to use later i've been programming in rust for so long i forgot how to do"
2938820,2946500," later right so uh i think it's a document class and uh it's not even freaking why is this not later"
2946500,2960100," yeah there we go article okay so uh and then i just do begin document and then i think i can even do"
2960100,2972660," shit like this yeah document then section uh your mom can you do shit like maybe not anyway so uh let's try"
2972660,2977700," to now compile this entire thing uh video later we'll go"
2977700,2983380," yo we got pdf what the"
2983380,2987620," look at that"
2990100,2990420," okay"
2990420,2998100," and it's actually super cool i think i actually think it's cool so let's go ahead and just say"
2998100,3000740," something like uh so"
3000740,3014980," newton's method for uh busy curves right and we can now basically recompile this entire thing and reload the"
3014980,3021460," yeah look at that look at that look at that so we have this kind of so we also need to put a bunch"
3021460,3029700," of packages in here so i think you have to do use package um i remember it was a ams math or something"
3029700,3042900," a via aws math or a yeah it's that one okay so and then i think it was a line yeah if i'm not mistaken i think that was a line"
3042900,3054740," so and now if i grab that right if i grab that i should be able to just do something like that and i wonder if it's going to work"
3055860,3060580," why are you keep changing it i don't understand that all right so what do we have in here"
3060580,3069700," yo well i mean it's almost yeah so we'll need to adapt it to like we will need to get rid of these"
3069700,3076820," things that's for sure so and maybe we can even just straight up get rid of them um i think that's"
3076820,3080020," the easiest thing to do in here just like straight up get rid of them and that will make it a little"
3080020,3089220," bit more readable uh yeah kind of it kind of did uh and i wonder if it can just maybe split some of these"
3089220,3099940," things uh two i don't know like a separate parts in here so we can see some shit yeah i kind of can"
3099940,3106900," and at the same time i can try to align them like this so we can see"
3109140,3114260," yeah that's what i'm talking about chat so now i can take all of these classes"
3114260,3119220," and just align them like this i think i should be able to do that"
3119220,3121940," so"
3121940,3129860," so we also need to put new lines in there"
3135140,3138340," yeah so it's just like a little bit easier to read that's that's what i'm trying to achieve"
3138340,3143460," in here uh so it's just like like this so we can see shit instead"
3143460,3151380," uh all right so might as well maybe just take these threes and put them in here"
3151380,3155140," and they're here now"
3155140,3159780," later latex"
3160820,3165620," latex glove so what we're going to be doing with this shit like does anybody know what the"
3165620,3174100," fuck is this is this like a product right is this product uh i think it is um so one of the things"
3174100,3182820," maybe it would be nice to have um i don't freaking know some sort of a uh original thing let's actually"
3182820,3190100," have an original thing and then we're gonna have non-original thing uh the original thing"
3191380,3194340," is like contains this as the first thing"
3194340,3203460," and let's get rid of all these nasty uh derivatives and shites"
3203460,3210260," okay so we forgot a new new line"
3214740,3219540," there we go so this is the original without the prime right so this should be no prime"
3219540,3228500," so no prime and with this is with the prime and we're going to be working on that so um"
3232900,3237060," what do we do in here is this a product um"
3237060,3249460," so isn't the second term supposed to be two no it is not supposed to be two um all right so"
3249460,3260020," no it's not supposed to be this one is not uh the derivative we can even take a look at"
3261460,3266420," uh the interpolators right so this is the limitation yeah yeah so it's it's totally fine"
3266420,3273620," yeah i know the product rule but the question is is this a product right or is this like a nested"
3273620,3285220," function i think it is a product right so you can essentially view this thing you can view this thing"
3285220,3296260," as basically uh the constants right this is the constant part this is the constant part multiplied by f"
3296260,3306580," f of t where f of t where f of t is equal to z so if you're taking a prime of this part right so you"
3306580,3313220," basically end up taking a prime of this part right you end up taking a prime of this part"
3313220,3322260," and uh prime of this part is basically the uh the product so and then within the product within the product"
3322260,3330100," within the product you have a chain rule x is independent x is a constant yes it's it's basically"
3330100,3337860," constant in our in our specific case um all right so i guess that's what we have to do in here so i"
3337860,3341860," guess that's what we have to do it's a little bit nasty it's a little bit nasty but"
3341860,3352740," it needs to be done all right so uh and the product rule where is the product where is the product"
3352740,3363700," motherfucker so uh yeah damn i hate it but i mean so the first one plus the second one okay so all right"
3364420,3379140," the first one prime plus um copy paste this entire thing the second one in here so that's basically"
3379140,3387700," what we have all right and of course there should be no thing in here because we kind of already took"
3387700,3394260," this entire stuff and i wonder if i can just like use different uh kind of you know things in here"
3394260,3403300," yeah so we can distinguish this kind of stuff uh-huh all right so with this one it's a little bit it's"
3403300,3408740," it's pretty easy right because the uh derivative of just variable the derivative of just variable is"
3408740,3413940," going to be one so we can get rid of that this one is a little bit more interesting because again"
3413940,3420580," this is a chain rule right so this is essentially a chain rule so you're gonna end up with just two"
3420580,3430900," uh right like this and the multiplied by the derivative of the inner thing multiplied by the derivative of"
3430900,3436980," the inner thing and in case of the inner thing we know what is this derivative it's basically minus one"
3438100,3448740," so yeah that's basically the entire story that's basically the entire why is this minus one uh did"
3448740,3458980," i make any mistake chats did i make any mistake so far um i think everything is correct and i think"
3458980,3465460," everything is great looks good okay thank you very much we can all obviously like swap these things around"
3465460,3472980," and and and stuff like that but it's fine it's fine so uh this one i i'm dreading this one i'm"
3472980,3480020," fucking it's basically the same thing honestly it's basically the same thing uh so let's actually uh"
3480020,3487140," postpone this one i want to solve this one because it's easy right uh so essentially it's going to be"
3487140,3491300," three uh three uh c squared and that's it right"
3491300,3498500," first try motherfucking first try so yeah"
3498500,3506660," uh instant yeah instant gratification exactly exactly because i i mean i've done a lot of work in here"
3506660,3513140," it's very mentally draining so i needed some reward okay i needed some like low hanging fruit"
3513700,3520740," uh right so and and i took it right so i grab it by the by the fruit um so okay anyways"
3520740,3533540," now this is again just this function okay that's cool uh now we have to do the following thing right plus"
3533540,3542980," that's that one so this is the first prime this is the second prime okay so we solved that one so within"
3542980,3553380," this thing this prime is super easy it's basically 2t and let's go okay so in here this prime is super easy"
3553380,3559620," it's just minus one boom we've done it i think it was easier than expected actually i think it was easier"
3559620,3568180," than expected uh so did i make any mistakes by the way so i think this is correct right so let me let me"
3568180,3574420," actually see uh let me actually see i think this was correct beautiful so like i didn't make any mistakes"
3574420,3583460," in here didn't make any mistakes so we've got uh master derivative we've got the derivative right so"
3583460,3590580," it's not as pretty but at the same time i think um i think computer doesn't give a shit honestly right"
3590580,3596900," so if we have something incorrect in here um and and obviously so since we're using the square brackets"
3596900,3605540," in here uh we can do something like this um i think you can even do some cool shit like left can oh you"
3605540,3617300," can't do that damn how how do you do the um the bracket so it's bigger and fits the whole expression there"
3617300,3624580," was something in there i don't remember chat what is it called uh oh yeah oh without the space okay okay okay"
3624580,3630180," okay so the left right yeah thank you thank you so much like i haven't used later for some for some"
3630180,3636820," time so i forgot to completely what was that yeah yeah this is exactly what i'm talking about this is"
3636820,3640900," exactly might as well actually use these things maybe they will look a little bit better"
3640900,3646820," yeah it's fine it actually looks a little bit better right so they're bigger"
3646820,3651620," so because of that they just like they're more readable"
3654260,3655300," uh-huh okay"
3655300,3660500," so yeah"
3660500,3667060," should i just code like hard code that into the code and just be done with it"
3667060,3675300," i think i just should bigger equals better okay i'm already streaming for one hour chat i'm already"
3675300,3683460," streaming for one hour i think the time has come to make a small break refill the cup of tea and after the small break we're gonna put that"
3683460,3691140," chat chat into the code and try to apply the newton method on the bezier curve and see if we can get the t"
3691140,3699940," the t anyway okay so uh what we need to do chat chat chat chat"
3702500,3713060," so we have a cubic bezier right we have a cubic bezier we need a variant of um derivative of a cubic bezier"
3713060,3722980," right so let me show you so it's gonna be static in line uh in line vector two uh not scale but cubic bezier"
3723620,3731860," uh cubic how we're gonna call it maybe der derp derp derp uh and here we're gonna accept all the four"
3731860,3737780," nodes right so we're accepting all the four nodes and we need to basically hard code this entire thing"
3737780,3745780," this is a s2 hard code honestly this is a huge s2 hard code so what i'm thinking i need to sneeze just a second"
3746500,3755300," uh okay debate yet again uh rwx rob thank you so much for for the for the rate all right um so i feel"
3755300,3762980," like um i want to turn it into a sequence of um you know sums right so maybe i need to redistribute"
3762980,3770260," these three axes among these sort of things right so let's actually go ahead and do that i think that's"
3770260,3777140," a good idea chat let's actually redistribute these motherfuckers okay so where is the tech uh all"
3777140,3785780," right so what i'm thinking is that maybe i'm not gonna even uh you know modify the original thing i'm"
3785780,3792100," gonna just copy paste this stuff all right so i'm gonna say that this is kind of a continuation of what"
3792100,3798660," we had ahead in here uh and i wonder if it's going to work right so this is a pdf and i'm gonna just"
3798660,3803380," three low it kind of work like it looks a little bit derpy that but that's fine that's totally fine"
3803380,3815220," okay uh so and in here uh i want to just take this 3x1 and i'm redistributing it among these things"
3815220,3826100," right i'm just just like gently redistributing them among those things uh and that got redistributed so we"
3826100,3833620," also have this 2 multiply by 3 which could be replaced with 6 very easily that is totally fine"
3833620,3842900," as well that is totally fine so also we have this minus 1 right so which we can basically take and maybe"
3842900,3852660," bring to here maybe bring to here and maybe swap it around so it actually points like at here like that"
3852660,3859620," is that better is that better okay that looks a little bit better and because of that now we can"
3859620,3867780," get rid of this nasty parenthesis nasty nasty parenthesis and maybe put this kind of stuff on"
3867780,3877940," the next line like so here's the one line and here is the next line like so uh there we go so that's a little"
3877940,3885860," a little bit easier to manage isn't it tell me chat be honest is it easier to manage now"
3885860,3895140," i think it is all right next one so we gently taking this thing and we're redistributing it again among"
3895140,3905060," these things like so looks good looks gucci looks tamaguchi yet again um we've got two and three"
3905060,3914980," we're combining them together so this is that uh right so this is six this minus one again could be uh"
3914980,3922500," moved like this so this is minus one we put it in here and because of that we can maybe swap those things"
3922500,3930660," around uh a little bit like that maybe i'm gonna put a little bit of spaces in here"
3930660,3941940," uh-huh okay that looks gucci so and now i can get rid of the parenthesis as well as well uh so this is"
3941940,3947060," the new line and this is the new line and this is that and we're getting rid of that pattern in here"
3947060,3955540," look at that so now we have the these sequences it even like interleaves minuses we can even do some"
3955540,3963300," interesting stuff like um where is the equals yeah why can't we just take this thing and put it maybe in here"
3964660,3971380," so you basically have minus plus minus plus minus plus minus plus yeah minus plus minus plus"
3971380,3974900," that's a very interesting thing isn't it"
3974900,3979460," polynomial yeah"
3979460,3987140," so i hope i didn't make any mistakes so did you guys catch any mistakes in here i think that that's totally"
3987140,3992420," fine i think that's totally fine i think i think we just should do it right so let's let's see you"
3992420,4002820," excuse me uh okay so we do need an inversion of t right so this is going to be that"
4004020,4010020," so the first vector b is going to be vector scale right so this is a scale"
4010020,4014580," um essentially"
4014580,4023380," nodes zero so this is basically nodes is the x right so we have x zero and this is node zero so because we"
4023380,4032580," here we compute in x and y simultaneously right and we're scaling this entire thing with um minus x multiplied"
4032580,4042420," by square open version of t right so that's what we do um so this is x uh and then minus three square"
4042420,4054100," of inversion of t makes sense okay cool so then we add together we add together b and vector scale so what"
4054100,4063140," what we're scaling in here uh we are scaling nodes one nodes one with three multiplied by"
4063140,4072420," uh square open version all right there we go and we reassign that b right we reassign that b so this is"
4072420,4078020," that one all right that's cool so now minus six now minus six"
4079460,4088820," might as well just copy paste this entire stuff so this is x1 uh minus six minus six inversion"
4088820,4102020," not inversion it and t okay makes sense next one is first of all x2 it's the next one just the regular six"
4102660,4113860," inversion not inversion inversion okay makes sense uh the next one nodes two minus three uh square of not"
4113860,4123300," inverted square of not inverted and the last one is the third one just the three square square of not"
4123300,4129460," inverted and then we just return i think yeah"
4129460,4140740," yeah so i think i didn't make any mistakes in here chat do you see any mistakes okay everything's fine"
4140740,4150180," right um that is very cool that is very cool all right i'm a little bit nervous just a tiny bit nervous you"
4150180,4157140," know you know uh vector scale well yes it has to be vector scale but it's not that critical of an error"
4157140,4161220," because such function doesn't exist so the compiler would tell me actually that i'm doing something"
4161220,4168420," wrong here but anyway uh right so anyway anyway anyway let me try to compile whatever we have already"
4168420,4180020," uh it compiles first try apparently um so busy busy so we are yeah so this is the dumb"
4180020,4184980," stuff that we're making in here um i have"
4184980,4194660," basically x right so this is basically x maybe what i'm going to be doing i'm going to be approximating"
4194660,4202020," t i'm going to be approximating t with original x what we can do now we can actually have a fixed"
4202020,4208660," amount of iterations in here just a fixed amount of iterations so let me show you let's have one iteration"
4208660,4216260," here so and then here we're going to be do going to be doing t minus uh cubic bezier cubic bezier"
4216260,4227940," we supply the t and the nodes right so and we get the x because we're trying to do that we'll find"
4227940,4235860," that for the x and we're going to be dividing that by the derivative of this entire thing so this is the first"
4235860,4244260," approximation and this is the cool part now we have an approximated t we have an approximated t after one"
4244260,4254260," iteration we can plug that t into the cubic bezier and just take y and that's basically what we're doing"
4254260,4262820," here right we can actually like literally have a fixed amount of iterations and like the more iterations we do the"
4262820,4267620," uh the closer is going to be to the actual thing we want wait a freaking second"
4267620,4272580," quick inverse square root"
4274660,4279620," do you guys remember"
4279620,4290900," it's good fasting or whatever so i remember q so i thought it's original code to show me original code"
4290900,4303140," first wait so cormac was doing like a something similar to newton's method and he achieved the state where one"
4303140,4309540," iteration of the approximation was enough and he didn't do the second iteration is that what he was"
4309540,4318340," doing did i understand seriously oh my god i just understood how this works so he found a new initial"
4318340,4325860," approximation which is enough for one just iteration and okay that's that's actually cool i just understood it"
4325860,4328260," what the"
4328260,4329860," this is so"
4329860,4332820," this is so fucking cool uh all right all right all right all right"
4332820,4334500," damn"
4334500,4341700," did i just level up because i understood the the legendary fast inverse square root and how it"
4341700,4343220," worked what the fuck mate"
4345860,4356660," what the fuck what the fuck sadly cormac is not like that anymore isn't he because i don't know"
4356660,4368420," because if if you read his twitter it does in fact feel that all of that corporate enterprise culture kind of"
4368420,4374820," got into his soul and corrupted it a little bit you can feel that from his stakes about"
4374820,4380740," programming and stuff like that didn't you notice didn't you notice he he doesn't sound"
4380740,4386980," like a hacker anymore he doesn't sound like one of us anymore he sounds like a corporate"
4386980,4393620," developer like he just doesn't wear suit he's he starts to wearing suit and stuff like that it's just like it's so sad"
4394580,4397540," it's just like what what happened to you"
4397540,4405620," that's what happens when you work in this corporate as environments they get right into your soul"
4405620,4410740," they get right into your soul and start twisting it around that's what"
4410740,4413300," anyway"
4413300,4419620," cheers he's still my hero honestly"
4422020,4428100," he leveled up maybe maybe that's what happened maybe he's just grow up uh and and i never did right"
4428100,4435540," this is why i always keep programming as a hobby that's a good idea honestly that's a good idea"
4435540,4441940," when sodium level up i don't know i kind of i'm kind of evolving backwards"
4441940,4447460," right so i used to work in corporate environment actually i used to do enterprise java development"
4447460,4453700," and then i evolved backwards and became the freak i am so anyways"
4453700,4459540," i'm evolving backwards uh all right so what do we have it doesn't even"
4459540,4465380," compile meat it doesn't even compile wait a second so"
4465380,4473300," ah that should be enough right so we are essentially just okay okay all right all right all right all right"
4473300,4479860," so all right let's go ahead and just try to to see what we have uh use a new buffer so who's using my"
4479860,4489140," current buffer uh so i suppose it's probably new pdf okay so let's rename new pdf all right and uh"
4489140,4496660," let's try to run the bezier curve um i don't see i don't see okay so there's something honestly"
4496660,4499380," wrong in here"
4499380,4502420," so we have"
4502420,4513380," ah i see i see i see i see i see maybe we should actually start with zero so x is in the axis length"
4513380,4520900," scale but t is in a normalized scale from zero to one so by doing that it's too far away but we can"
4520900,4526820," actually bring it a little bit closer by dividing this entire thing right we can do it like that so"
4526820,4531380," and then we're just doing this kind of thing with the same nodes and we're going to end up with this"
4531380,4537220," sort of same thing okay so that's probably what's happening here okay all right and"
4539460,4540500," well honestly"
4540500,4552020," okay so it's kind of following the thing but not really so let's do two iterations how about two"
4552020,4552740," iterations"
4552740,4559700," um no it's actually kind of up honestly"
4561700,4568180," it's actually kind of up uh what about ten iterations so the only thing uh the only problem i"
4568180,4572900," kind of see in here okay wait a second"
4572900,4580660," i'm actually it's like deriving the completely wrong thing aren't i"
4582820,4586900," right because they're supposed to derive a function that"
4586900,4595380," nice approximation yeah it likes zero yeah exactly um yeah i i think i know what the"
4595380,4601780," fuck is going on right i think i know what the fuck is going on i forgot minus x exactly i forgot minus x"
4601780,4604420," but the yeah"
4604420,4613620," so that means i kind of have to"
4613620,4620020," yeah derivative is not going to have minus x"
4620020,4624900," derivative is not going to have minus x because of that"
4624900,4630900," fuck that but the bezier curve is going to have minus x so we have to kind of subtract this thing"
4630900,4633460," i think that's what's going on in here"
4633460,4636580," i think that's what's going on"
4636580,4639700," perfection"
4642500,4646180," okay so what we're doing 10 iterations how about just one iteration"
4646180,4648260," all right"
4648260,4659060," this is just one iteration what the fuck wait uh no iterations no iterations whatsoever"
4659060,4666020," all right no iterations whatsoever it's completely off you can see that right it's completely off"
4666020,4670260," okay uh one just one iteration"
4672500,4681380," it's already pretty good honestly uh we can adjust some of the yeah one iteration is enough chat"
4681380,4689300," what is it like inverse square root like literally like it's it's perfect after one iteration it's"
4689300,4693380," perfect like i don't need more like why do i need more it's it's it's it's fine"
4696900,4702900," carmack was right like yeah newton method like actually converges so fucking fast like that's"
4702900,4707780," that's it you don't need anything of course like yeah it goes a little bit far away but this"
4707780,4711940," is because outside of this range outside of the range of minus one and one it's not defined"
4711940,4720660," this is fine so yeah apparently it's so easy what if we have like really weird situations uh like these ones"
4720660,4730740," right yeah yeah so to be fair we have to kind of forbid situations when there is several solutions"
4730740,4737380," honestly yeah because it's not clear right so newton method just picks whatever honestly in in this"
4737380,4743140," case newton method picks whatever so an ideal one would be something like this when you there's only one solution"
4743940,4756740," uh yeah and that's cool yeah it just picks that so all right all right all right all right i wonder if we"
4756740,4767700," can keep the previous one can we just keep the previous one wait a second can i just say okay static and just use zero"
4770340,4778980," so it will always use the previous one all right so by using always the previous one we can actually"
4778980,4782340," kind of yeah yeah"
4782340,4797940," this is so cool chat honestly look we're using always the previous one so here you have two solutions"
4798580,4804340," here you have two solutions but it picked the bottom one because it's closer now look we're going"
4804340,4813940," forward and then we we're going backwards and now it picks the upper one because we're always using the"
4813940,4819140," previous solution as the approximation so we can kind of guide it through where to go we can this is so"
4819140,4828740," fucking funny it's funny that it works right so of course yeah so and now it goes there"
4828740,4833380," so obviously this is not the correct curve that i want to be able to handle right so the curse always"
4833380,4838100," has to be something like this where it has one solution and there is no uh you know irregularities"
4838100,4843140," or anything like that so that's that's perfect damn but the fact that it works so fucking nice holy"
4843140,4854900," shit brother that is so cool uh all right and you don't even need to have analytical solution uh right"
4854900,4862900," it's just like yeah it just fucking works yeah the power of newton's method minor from the the power of"
4862900,4869540," the newton's method uh we might actually try to maybe integrate this entire thing into the engine the way it"
4869540,4877620," works in the engine is not particularly uh you know ideal so we're using basically how it works in the"
4877620,4885620," engine right now is basically this where you literally use mouse and not really mouse x but"
4885620,4892500," uh just the x value as the t so and because of that there is a huge discrepancy between like what's"
4892500,4898980," actually happening there um mouse x what you don't like initializing those con ah because it's a static it"
4898980,4906420," doesn't have to be static anymore okay uh all right so i can do stuff like that and uh well it doesn't"
4906420,4913860," even fucking work anymore so that's how bad it is but you need to have at least one two ah yeah i remember"
4913860,4922980," so because it has to be axis uh axis length yeah so this is the situation we have in the engine right"
4922980,4932180," now this is how much discrepancy we have so yeah this is how much discrepancy but if we introduce"
4932180,4935300," just one it's like one tiny iteration"
4935300,4940020," well that's that's actually funny"
4942260,4948740," how about uh how about uh did this recompile did they recompile maybe yeah so is is it broken or"
4948740,4958500," something the fuck mate ooh oh so in this specific configuration we need more of these things actually"
4958500,4965140," ah okay so there are some situations when we need more iterations look at that"
4965780,4972740," so all right all right all right we found it we found the situation where it's not like that okay"
4972740,4980900," use tolerance instead yeah i want to kind of use maybe a combination of tolerance and a limited amount"
4980900,4991540," of iterations so i think that's gonna be the ideal approach but yeah all right all right all right all right"
4991540,4992980," so"
4992980,5002900," is the f5 reload key well it's not really a five i put it to h it's a hot reload so what it does it just"
5002900,5008420," hot reloads the dll where the logic resides right so i can recompile the dll and then reload it and"
5008420,5014820," without like restarting the application which is super convenient actually which is super convenient"
5014820,5022820," i wonder if i can essentially put that logic somewhere like into a separate function"
5022820,5034580," uh right so maybe somewhere in the interpolators where i have both the derivative of the qbbz and this one"
5035460,5039220," so essentially maybe what we want to do ah"
5039220,5048900," wait yeah yeah so this is the x and then we're doing that and blah blah blah okay"
5055780,5060740," all right all right so static and line uh static and line float cubic"
5060740,5062740," busy am"
5062740,5073220," um newton right something like that so you're supposed to put x in here you're supposed to put x in here and"
5073220,5076900," um you're supposed to provide nodes"
5079380,5088180," so let's take this entire stuff let's take this entire stuff so uh so we're going to be using x"
5088180,5096340," this is the x uh just this thing maybe even zero whatever so we'll just put zero in here"
5096340,5105940," um then we subtract x uh so this is not p nodes all right this is just the regular nodes"
5106740,5116020," uh and we don't really have to draw anything um what we're doing like we we updated it a couple of"
5116020,5121860," times and what we have to do we have to return t right so uh we could use tolerance we could use"
5121860,5129220," tolerance um but i think for now i'm going to put amount of iterations um maybe i'm going to put it at the end"
5129220,5138420," somewhere here so this is going to be time right so this is the amount of iterations cool now uh what i'm"
5138420,5141620," going to be doing i want to try to find the t"
5141620,5150420," so mouse x"
5152980,5156260," so we provide p nodes"
5156260,5164340," and let's start with one iteration i think the the reason why i had multiple iterations is because i"
5164340,5170340," wasn't starting from zero i think that was the reason i feel like i feel like that was the reason"
5170340,5178900," so and let's try to recompile this entire thing okay so do we have uh yeah kind of"
5179700,5185620," no that was not it it stopped working for some reason did i up something with approximation"
5185620,5192020," i think i up something with approximation uh starting from zero five so i used something for"
5192020,5200260," approximation but i forgot what exactly i was using there uh so yeah i forgot what i was using there"
5200260,5208500," okay so i was using divided by axis but um yeah so axis length but this was as an approximation and"
5208500,5218180," fucking no anyways so whatever so let's actually use zero i will look into the into the board and figure"
5218180,5226100," out again right so i already forgot what i was using there let's just use five or four iterations or whatever"
5228180,5235860," right so and that that seems to be working uh so that's that's fine so we can now use that in the"
5235860,5241380," animation engine when we are interpolating the whole thing right when we're interpolating the whole thing"
5241380,5249860," um so uh let's go into into the tm uh so"
5252500,5257060," all right all right so there is one thing there"
5257060,5272100," so these symbols down below they overshoot a little bit and they go down and that is described but by the"
5272100,5278100," bezier curve and we're interpolating it not in a very correct way honestly"
5280100,5286500," um and i suppose we're also using that so this thing overshoots a little bit as well"
5286500,5296180," yeah so maybe there is a weird discrepancy precisely because we're not uh interpolating"
5296180,5300180," correctly not using newton's methods and stuff like that so let's go ahead and try to do that"
5300740,5310180," so we have cubic uh bezier right so that's what we have and this thing uh is supposed to be like x right"
5310180,5319140," it's supposed to be like x let's put it like that so this is x all right so this is x then we go to the"
5319140,5327940," interpolators and we are trying to find y right so providing the x uh the bezier is"
5328980,5334420," here data bezier right so this is a data bezier amount of iterations let's say it's going to be"
5334420,5341380," five right so that gives us the t all right and that's the t we want to be using in here we're going"
5341380,5349460," to be feeding that t into here and we're going to be using uh that in here um so and interestingly"
5350340,5358500," yeah so here when we're finished we're setting that to one uh which might not be actually necessary"
5358500,5363540," anymore so i'm going to comment it out so this is how we have to do it now right so we take the"
5363540,5370100," interpolator which is x we find t by that x with five iterations and then we're fitting that in we're"
5370100,5375860," taking y right so that's how we're going to be doing that so there's a couple of other places where"
5375860,5384580," i'm doing this exact this exact thing so let me find them uh all right let me find them so yeah this is"
5384580,5400580," another one uh huh so let me go somewhere here okay big bezier uh-huh and we are using c"
5404900,5414660," t2 as the x we're using t2 so we don't have t in here it's just t1 and t2 so this is the x we create"
5414660,5425300," a new uh t right and after that we're just using that t in here so that's how we do that so and there's"
5425300,5434260," another place yeah this is literally the same place uh-huh i can repeat that logic in here too"
5435700,5441940," it's just the only difference here is going to be uh we do it like that"
5441940,5446180," all right so i think there is this was the yeah so"
5446180,5453620," in all of the places where we're doing all of that we're using uh newton method okay so let's"
5453620,5459700," recompile this entire thing uh so what you don't like i forgot the semicolon that's totally fine what's"
5459700,5468580," the other thing uh semicolon it again copy pasting mistakes um has no member bezier so is that nodes"
5468580,5472580," i think that's basically what it is so this is all nodes"
5473780,5483780," ah just just busy okay okay and this one is also just busy and also semicolon i think we're done"
5483780,5489220," yeah okay so now we're interpolating this thing correctly hopefully hopefully we are interpolating"
5489220,5493700," it correctly so now maybe it's going to actually act a little bit better but i don't feel like it's going"
5493700,5498580," to be that much noticeable honestly i don't feel like it's going to be that much noticeable but maybe"
5498580,5501380," maybe it's going to be better"
5501380,5511380," i think it's better it's sharper have you noticed that wait wait a second"
5511380,5521700," wait a second it's kind of sharper now so let me see which is exactly what i kind of was trying to"
5521700,5526660," reproduce to to produce uh right so let's slow down"
5526660,5536740," yeah so that's much sharper the overshooting for the symbol so the symbol overshoots by the way it's"
5536740,5542340," overshoot and brings back and it's sharper have you noticed that so uh"
5542340,5552420," that's magnificent you think you think so oh it's the first message"
5552420,5565700," all right so now we are properly interpolating the bezier curves right so we're not interpolating some"
5565700,5575140," incorrect weird thing uh so yeah then it's pretty cool that's pretty cool now i understand the newton's"
5575140,5583700," method right and i feel really proud of myself i feel really proud uh i guess that's it for today"
5583700,5590180," thanks everyone who's watching me right now i really appreciate it have a good one and i see you all on the"
5590180,5595860," next recreation programming session with a who a mr azuzin i love you"

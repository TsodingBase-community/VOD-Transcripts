start,end,text
0,5400," Hello everyone and welcome to yet another recreational programming session with Amista"
5400,11400," Zosim. So we're developing this game in JavaScript, right? So we can even take a look at it. It's"
11400,16420," called Coil. We only recently came up with the name for this game. It's a multiplayer game. Right"
16420,21340," now it's in the flying mode, but I mean you can actually open this thing in several tabs and"
21340,26180," you're going to have several players. So the biggest crime of this game is that it's written"
26180,33620," entirely in JavaScript. So yeah, like I tried this as an experiment, right? Just to see how"
33620,37980," difficult it is to write something like that in JavaScript. And by the way, it doesn't use any"
37980,43620," accelerated like 3D stuff, right? It doesn't use WebGL and neither of the versions, right? It"
43620,50020," doesn't use WebGPU. It literally renders everything pixel by pixel entirely in JavaScript. It worked out,"
50020,54800," right? So you can do this kind of stuff and you can make it relatively fast by employing several"
54800,61200," techniques, but it fucking sucks. It fucking sucks to work with JavaScript. It's a scripting toy"
61200,65660," language. It's absolutely horrible. If you like this language, like I ironically like this language,"
65660,71720," you just have a Stockholm syndrome. I'm sorry to tell you that. So I was looking for alternatives,"
71720,79660," right? So, and obviously an alternative would be compiled to WebAssembly, right? So, and recently we"
79660,88120," found a good alternative for JavaScript for this specific language and that is C3. So the language"
88120,95980," is basically marked itself as sort of like a continuation, like evolution of C. It's very much"
95980,102220," unfinished, right? So I'm not sure if it's alpha or beta, but it's very much like constantly changing and"
102220,108500," stuff like that. And it has a couple of things that are rough around the edges, but I decided to give it a try"
108500,113320," anyway, right? So, because I kind of like the idea and I kind of like the concepts the developers of the"
113320,119120," language introduced in there. And I also like the fact that the source code is super simple. It's"
119120,125220," written in C primarily. It is extremely simple and it's really easy to hack. In fact, in the past, I"
125220,130060," actually contributed several pull requests to this project. It was actually a very pleasant experience."
130460,138280," thank you so much learner for a review and accepting my pull requests. And so, which means that the fact"
138280,143520," that it's like rough around the edges doesn't really matter that much because if I encounter some sort of"
143520,149280," problems, it's very easy for me to just troubleshoot them and potentially fix them. So, not only I can use"
149280,172280," this language for fun, for experiments and stuff like that, but I can also contribute to it. Right? So, I think it's a pretty good alternative. Right? Again, like I'm doing all of that because I'm not planning to make any money off of this project. Right? I'm just having fun. Right? So, my entire channel is about recreational programming. Right? Programming for your own entertainment. Right?"
172280,188160," So, and that's what it is. So, we're going to be using this language. We already explored how this language compiles to WebAssembly. Right? So, we already know that it does, in fact, compiles to WebAssembly. There's a pretty cool demo that we developed at some point."
188160,217040," So, let me find it. I think it was called C3 demo. I'm not sure if it actually sort of vanished or something. I'm pretty sure it was C3. Yeah, there you go. C3 demo. Why does it say it's written in JavaScript? What the fuck? So, the C3 is such an experimental language that even GitHub doesn't know about it yet. By the way, I wonder, how do you register a new language for GitHub?"
217040,246660," Do you file some sort of like a request? And like, what do you do exactly? Right? So, if I create a new language, how do I let GitHub know that, okay, so there's this language. Does it have to be super like popular or something? There's a file somewhere you can add stuff to. Do you make like a sort of like a pull request to? Oh, I think I roughly like vaguely remember. I think I need to PR. There's, okay, I see. You need to PR somewhere."
246660,268660," Yeah, GitHub linguist. I see, I see. Ah. Yeah, they have some sort of like a reusable library for this kind of stuff. GitHub linguist. Language event. I have no idea what they mean by that. If your repository language is being reported incorrectly, send us a pull request. Ooh."
268660,275660," Okay. So, yeah. So, yeah. So, yeah. So, yeah. So, anyway, so we already managed to develop like a very simple demo."
275660,282660," Very simple demo that uses Wasm and it just like simulates a bunch of physics and stuff like that."
282660,289660," The cool thing about this demo is that it works both natively and using WebAssembly, right. So, and this is what we're going to do."
289660,295660," Yeah. So, yeah. So, thank you so much. Maybe we should submit at some point, like highlighting for C3 or something. So, this is what we have in here."
295660,308660," So, this is what we have in here. So, this is what we have in here. So, this is what we're going to be using for our game. So, the game is actually relatively big, honestly. Right."
308660,334660," So, I think it is around 2,000 lines of code as of right now, if I'm not mistaken. Let me actually see. So, if we grab all of the MTS files, right. So, let me see."
334660,360660," So, it's 2,261 lines of code. So, rewriting everything in C3 in one go is kind of like a huge undertaking. So, we need to come up with some sort of like at least like a rough roadmap, how we're going to be approaching that. So, we're going to be approaching that incrementally."
360660,375660," We're going to start rewriting things, you know, chunk by chunk, right. So, let's actually take a look at the architecture of the thing, right, of the game."
375660,393660," The architecture of the game is actually super simple, believe it or not. So, it consists of common module, right. So, common. How do I spell? Just a second. Common. Right. So, this is a common module. There is a client module."
393660,412660," Client module. And there is a server module. So, server server. So, web server and application server. That's what we have in here. Who knows the difference between the web server and application server?"
412660,427660," I don't actually remember. I don't actually remember actually. I need to rewatch that video. So, yeah. Anyway. So, the thing about the client module is that it runs in the browser, right. So, this is in the browser. Browser."
427660,446660," And this one runs on the server, obviously, right. So, the thing about the common part is that it's the part of the logic that runs both in the browser and on the server. And it's usually related to the game simulation, right, to the world simulation."
446660,457660," Because, like, it's super convenient actually. If you change how, like, the rules of the game, they're changed simultaneously on both client and server, right."
457660,467660," And this is one of the reasons, like, why we need to use WebAssembly, right. So, because we need to have this common module that is reused by client and server, right."
467660,483660," Right. If we use two different languages, both on client and server, we'll have to implement the same thing twice in two different languages, which increases the surface area of possible errors so fucking much, you really don't want to go into that, honestly."
483660,492660," You really don't want to go into that. And this is, by the way, why JavaScript for the, for a longest time was extremely fucking strong on, in the web."
492660,511660," Right, because it's the only language that runs in a browser. So, if you wanted to create this kind of architecture where you reuse the same sort of logic, you are forced not only to use JavaScript on the client, but also on the server."
511660,518660," So, yeah, so this kind of situation was pushing JavaScript anywhere, everywhere, I mean."
518660,525660," So, since we have WebAssembly, it became a little bit easier, but it's not as perfect as we would like it to be."
525660,542660," So, yeah, anyway, we, if I start rewriting, like, part of the client that uses something from common, that automatically means that I have to start rewriting the server."
542660,543660," Right."
543660,544660," Right."
544660,551660," So, I have to be extremely freaking careful how I start rewriting things in WebAssembly."
551660,552660," Right."
552660,568660," Because, again, if I try to write something in client, and it uses common, and I rewrite even a small piece of common in WebAssembly, that automatically affects the server, because the server won't be able to use this piece written in different language."
568660,573660," So, that means I have to start with something that is not in common."
573660,575660," And that is probably rendering."
575660,575660," Right."
575660,580660," So, you have a little bit of a, like, a chunk of the client that is rendering."
580660,581660," Right."
581660,583660," That puts pixels on the screen."
583660,590660," And it usually doesn't use anything from common because the server doesn't really care about the rendering."
590660,591660," Right."
591660,595660," So, it doesn't, like, it doesn't even know how the clients see the world."
595660,597660," It only manages the state of the world."
597660,599660," It only manages the simulation of the world."
599660,602660," How you display that, it's kind of like your problem, your client's problem."
602660,611660," And because of that, we have this sort of, like, small isolated island within the client that the server doesn't really know about."
611660,618660," And that is a very good place to start rewriting things in WebAssembly."
618660,623660," So, let's actually go and, like, take this part and just rewrite it in WebAssembly."
623660,632660," And that, like, very, like, easily introduces, like, a little bit of a WebAssembly into the build process and kickstarts the whole thing."
632660,633660," Right."
633660,638660," And then we can see how we can rewrite the rest of the things in WebAssembly as well."
638660,639660," Right."
639660,648660," So, the cool thing about using C3 is that that means on the server, we will be able to use a native version of C3, actually."
648660,649660," Right."
649660,651660," So, we're going to have a native application."
651660,652660," Right."
652660,658660," So, we're going to have a common module that is compilable both to native and to WebAssembly."
658660,659660," Right."
659660,664660," So, and we know that it's going to work because we literally have a demo that demonstrates that."
664660,665660," Right."
665660,667660," This specific demo, it also works natively."
667660,668660," Right."
668660,669660," So, that's kind of the point."
669660,676660," So, this is exactly why I implemented it the way I implemented it because I wanted to test that specific sort of, like, use case."
676660,677660," All right."
677660,682660," So, the renderer of this game is rather large as well."
682660,683660," Right."
683660,688660," So, I'm not sure if we'll be able to rewrite the entire renderer within the stream."
688660,689660," Right."
689660,693660," So, rewriting everything, of course, is a huge task."
693660,696660," Smaller task is rewrite only the renderer."
696660,700660," And even the renderer is actually kind of a bigger task for a single stream."
700660,708660," So, we need to actually rewrite maybe some sort of like a small sub part of the renderer in WebAssembly."
708660,709660," Right."
709660,710660," So, some sort of like a small part."
710660,714660," So, what that small part could be."
714660,716660," What that small part could be."
716660,725660," I think the easiest part to rewrite in WebAssembly as of right now is probably floor and ceiling with the fog."
725660,726660," Right."
726660,737660," Because these things, they are purely just, you know, putting pixels into the image based on the location of the camera."
737660,740660," They don't even use any textures or anything like that."
740660,741660," Right."
741660,742660," They use solid colors."
742660,745660," So, it's very easy to just implement in C3."
745660,746660," Right."
746660,748660," And then just compile to WebAssembly."
748660,752660," And I think this is what we're going to try to do on today's stream."
752660,753660," So, pretty reasonable task."
753660,754660," I think."
754660,756660," I think it's a pretty reasonable task."
756660,757660," So, sounds good."
757660,758660," Sounds good."
758660,759660," Sounds good."
759660,760660," Sounds what?"
760660,761660," Tamaguchi."
761660,763660," Let's a fucking gold miner, friend."
763660,765660," So, let's actually acknowledge some subs."
765660,767660," So, who subscribed?"
767660,768660," Who subscribed?"
768660,772660," Thank you so much, element0216 for tier one with a message."
772660,773660," Hi, hi, hi, hi."
773660,774660," Meet yourself 777."
774660,776660," Thank you so much for tier one with a message."
776660,778660," Next month, Zozi Tsodingaz."
778660,780660," Next month, Zozi indeed."
780660,782660," Thank you so much Akoya here."
782660,783660," With the message Hazers."
783660,788660," And RayLib released YouTube video on some RayLib project, but no eepers."
788660,789660," It is what it is."
789660,790660," And it isn't what it is."
790660,792660," And I guess RaySound just hates me."
792660,793660," So, I don't think so."
793660,794660," I'm joking, by the way."
794660,797660," Lipperium, thank you so much for Twitch Prime."
797660,798660," Thank you, thank you, thank you."
798660,801660," As far as I know from the description,"
801660,806660," they showcase the thing that people posted in their Discord."
806660,809660," Well, eeper was also posted in Discord."
809660,814660," I think RaySun is trying to avoid me, right?"
814660,817660," Right, so he's trying to avoid me, which is understandable."
817660,818660," I'm a very special person."
818660,820660," I'm a very kind of special person."
820660,823660," So, I'm okay with people not trying to associate me."
823660,824660," That's totally fine."
824660,826660," I understand that."
826660,832660," So, anyway, let's go ahead and just start all of this entire chat."
832660,834660," So, how am I going to be doing all that?"
834660,838660," Let's take a look at the client MTS."
838660,844660," And we have a function that is responsible for rendering floor and ceiling."
844660,845660," Just a second."
845660,847660," I'm still a little bit sick."
851660,852660," Okay."
852660,853660," All right."
853660,856660," So, the function is render floor and ceiling."
856660,857660," Yeah."
857660,862660," So, what it does, it just accepts the buffer image data into which it's rendering everything."
862660,865660," And the camera and the camera is actually very simple."
865660,869660," It's just the position, then direction as an angle."
869660,874660," And we have a bunch of like auxiliary stuff that is used for FOV and everything."
874660,879660," And what we need to do, we just need to grab this entire logic, right?"
879660,884660," Grab this entire logic and basically translate it to C3."
884660,885660," That's what we need to do."
885660,890660," So, what's cool here is that we're actively using vectors, right?"
890660,895660," So, and C3 has a native support for vectors, right?"
895660,897660," It has a native support for vectors."
897660,905660," So, I think rewriting this code in C3 will dramatically improve it, I think, right?"
905660,911660," So, because again, we didn't have to use all of these like weird chained methods or anything like that."
911660,914660," C3 has a native support for vectors."
914660,920660," So, that means it has infix operations like plus, minus, and stuff like that for vectors, for 2D vectors."
920660,926660," So, this entire stuff, these formulas are going to actually improve in readability, hopefully."
926660,928660," We'll see how it goes."
928660,931660," So, how I'm going to like approach this entire thing."
931660,941660," I'm thinking I'm going to actually start with a native application that renders a single frame and spits out like a PNG file or something, right?"
941660,946660," So, let's just like implement this algorithm in a native thing, right?"
946660,949660," So, isolate it from everything else, right?"
949660,959660," And once we have that, we can try to compile it to WebAssembly and continuously call within the JavaScript code, right?"
959660,962660," So, within the JavaScript code."
962660,964660," All right."
964660,966660," So, yes, yes, yes, yes."
966660,968660," So, how are we going to be approaching all of that?"
968660,976660," So, maybe I'm going to create something like a floor, floor and ceiling, C3."
976660,977660," All right."
977660,980660," So, let's create a separate project for this entire stuff."
980660,982660," So, and let's create a Hello World."
982660,983660," All right."
983660,985660," So, let's start with something simple."
985660,989660," I don't know why this extension actually invents things like that."
989660,994660," So, std.io."
994660,1000660," And this is going to be print and I'm going to say Hello World."
1000660,1004660," So, let's do C3, compile main C3."
1004660,1005660," Is it working?"
1005660,1006660," Yeah, it compiled."
1006660,1008660," So, we can actually compile, run this entire thing."
1008660,1012660," And as you can see, it in fact says Hello World."
1012660,1013660," Okay."
1013660,1017660," So, let's try to maybe, can we use like stb image or something?"
1017660,1024660," C3 has a very interesting mechanism of vendoring or something like that."
1024660,1029660," I don't know if it has stb image or anything, but I'm not sure if I want to even use all of"
1029660,1030660," that stuff, right?"
1030660,1033660," So, you see there's external C3 vendor things."
1033660,1037660," And they integrate with the C3 vendor command, right?"
1037660,1039660," I never used any of that stuff, by the way."
1039660,1040660," So, I'm not really sure."
1040660,1044660," So, it's a vendor help."
1044660,1045660," Right."
1045660,1046660," So, there is this command."
1046660,1048660," Oh, it's not even, it's not even that."
1048660,1050660," So, what was the command?"
1050660,1051660," Vendor."
1051660,1052660," Vendor fetch."
1052660,1053660," Yeah."
1053660,1055660," So, it's called vendor fetch."
1055660,1059660," And it fetches things from GitHub, if I'm not mistaken."
1059660,1063660," So, the libraries that it has is RayLip."
1063660,1065660," So, apparently it has RayLip."
1065660,1068660," So, I didn't even have to create my own bindings."
1068660,1071660," So, it comes with its own bindings, actually."
1071660,1075660," So, does it have anything like stb image or anything like that?"
1075660,1077660," I don't see it, actually."
1077660,1078660," I don't really see it."
1078660,1081660," But I mean, RayLip comes with stb image, right?"
1081660,1084660," So, maybe this is something that we could use in here."
1084660,1087660," That's actually a pretty cool idea."
1087660,1088660," So, yeah."
1088660,1091660," We can just use RayLip for its ability to save images."
1091660,1096660," If it does have an ability to save images, I don't really fucking remember."
1096660,1104660," So, let me take a look at the source code of RayLip, specifically at the, you know, at this stuff."
1104660,1106660," It's like save image."
1106660,1109660," So, there is a load image."
1109660,1110660," So, what's that?"
1110660,1112660," Oh, it's called export image."
1112660,1113660," Right."
1113660,1114660," So, this is what we have."
1114660,1116660," We could try to use something like this."
1116660,1117660," Okay."
1117660,1121660," So, if I try to do something like c3 vendor fetch."
1121660,1125660," And if I do RayLip."
1125660,1126660," Right."
1126660,1129660," So, it's fetching RayLip."
1129660,1131660," For how long is it going to be fetching it?"
1131660,1132660," I don't really know."
1132660,1133660," Okay."
1133660,1134660," So, it fetched it."
1134660,1135660," And okay."
1135660,1138660," So, there is a c3l."
1138660,1141660," And what is c3l?"
1141660,1142660," Ooh."
1142660,1153660," So, it has this format of libraries, which is basically a zip file."
1153660,1154660," I didn't know that."
1154660,1155660," Right."
1155660,1157660," So, which is basically zip file."
1157660,1159660," It has the archives."
1159660,1160660," Right."
1160660,1161660," Static libraries."
1161660,1163660," It has a JSON manifest."
1163660,1164660," Right."
1164660,1169660," And so, it has also an interface file."
1169660,1174660," So, and how do you even use that?"
1174660,1175660," Do you just like."
1175660,1176660," Okay."
1176660,1183660," So, I want to like compile main c3 and then I want to link it with lib c3l."
1183660,1186660," Files must be non-empty."
1186660,1189660," So, yeah."
1189660,1190660," I don't really know."
1190660,1194660," It doesn't allow me to just like, you know, compile this thing like this."
1194660,1197660," It just doesn't allow me to do that."
1197660,1198660," Ooh."
1198660,1203660," So, target is using deprecated parameter."
1203660,1205660," So, it just saw."
1205660,1207660," Uh-huh."
1207660,1208660," All right."
1208660,1210660," It is trying to do some things with that."
1210660,1212660," This is very bizarre, honestly."
1212660,1214660," Well, if I do import raylib."
1214660,1217660," So, it's going to automatically try."
1217660,1219660," No module named raylib could be found."
1219660,1221660," Did you type it right?"
1221660,1224660," Yes, I did, if I'm not mistaken."
1224660,1230660," So, maybe I need to, you know, specify where it is searched."
1230660,1235660," But I forgot how you specify the path to search for the modules."
1235660,1240660," I used such flag and c3 demo, if I'm not mistaken."
1240660,1241660," Right."
1241660,1243660," I used such flag."
1243660,1244660," Um."
1244660,1245660," No."
1245660,1248660," I don't think so."
1248660,1252660," Like, in this specific case, I was just specifying c3 directly."
1252660,1258660," A brief expectation that c3 system, I couldn't figure out how to use c3l."
1258660,1259660," Ah."
1259660,1261660," That explains it."
1261660,1264660," Actually, that unironically explains it."
1264660,1265660," I see."
1265660,1266660," Very fascinating."
1266660,1274660," So, but I'm, like, not really keen to use their build system, honestly."
1274660,1275660," Right."
1275660,1277660," So, I prefer, like, very simple things."
1277660,1280660," So, because of that, I think we're going to actually approach that slightly differently."
1280660,1281660," Right."
1281660,1285660," So, I'm going to just download the stb libraries."
1285660,1286660," Right."
1286660,1287660," So, stb-image."
1287660,1288660," Right."
1288660,1290660," And we'll see how it goes."
1290660,1291660," Right."
1291660,1294660," It's kind of interesting, but it's just, like, not my cup of tea."
1294660,1295660," Honestly."
1295660,1296660," Mm-mm."
1296660,1297660," Mm-mm."
1297660,1298660," Mm-mm."
1298660,1300660," Not my cup of tea."
1300660,1316660," So, it's kind of interesting."
1316660,1322660," How do you even use header-only libraries, you know, with a different, completely different"
1322660,1323660," language, right?"
1323660,1326660," Because they're kind of designed to be included in the C code."
1326660,1329660," But we don't have a C code in here."
1329660,1331660," So, the way you do that, you actually precompile them."
1331660,1332660," Right."
1332660,1335660," So, essentially, what you do, you just use the compiler."
1335660,1337660," Let's use Clang in this specific case."
1337660,1338660," Right."
1338660,1340660," I'm going to say, okay, compile it as a module."
1340660,1342660," stb-image-write.h."
1342660,1343660," Right."
1343660,1347660," So, -c means that basically compile it as an object file."
1347660,1350660," And it's not going to work because it sees that it's a header."
1350660,1355660," So, it tries to turn it into a precompiled header, which is not overload."
1355660,1356660," Not overload."
1356660,1358660," Which is definitely not overload."
1358660,1362660," So, we have to explicitly say, through -x, what kind of language it is."
1362660,1363660," Right."
1363660,1364660," So, it is C."
1364660,1370660," So, through -x, we basically say, okay, compile it as a C file, not as a H file."
1370660,1377660," I think I saw John actually literally renaming it to just C instead."
1377660,1378660," Right."
1378660,1380660," Like, I think I remember him doing that."
1380660,1383660," So, let me see."
1383660,1386660," So, if I take a look at the GI."
1386660,1387660," Right."
1387660,1392660," So, if I try to find a file with a name that has stb-image."
1392660,1393660," Right."
1393660,1394660," So, stb."
1394660,1399660," Oh, it even - he even called it cpp."
1399660,1400660," Okay."
1400660,1402660," So, that's actually really funny."
1402660,1405660," So, he really renamed this entire thing."
1405660,1408660," So, he even split it into a header."
1408660,1409660," Okay."
1409660,1411660," So, that's one way you can do that."
1411660,1412660," Right."
1412660,1414660," So, that's one way you could do that."
1414660,1421660," But, I kind of personally prefer to just use that."
1421660,1422660," Right."
1422660,1424660," So, let's just use a header."
1424660,1425660," Right."
1425660,1431660," to clang xc, interpret it as a C. Compile it as just an object file."
1431660,1432660," Right."
1432660,1434660," So, and if you try to compile it, it creates an O file."
1434660,1437660," But, it creates the O file that is very small."
1437660,1440660," 672 bytes."
1440660,1442660," So, it's empty, basically."
1442660,1443660," It's basically."
1443660,1446660," So, this is basically the meta-information of L file or anything."
1446660,1452660," So, this is because header by itself doesn't include any implementations."
1452660,1453660," Right."
1453660,1458660," So, to enable implementation, you have to enable the stb-image-write implementation macro."
1458660,1459660," Right."
1459660,1462660," So, essentially what you have to do now is to just enable that."
1462660,1466660," And that should create a big file, which is a 46 kilobytes."
1466660,1469660," And you can link that file with your main application."
1469660,1470660," Right."
1470660,1473660," So, now I can just do something like C3."
1473660,1476660," C3 compile stb-image-o."
1476660,1478660," I hope I will be able to do that."
1478660,1482660," So, filenames must be anon-empty followed by..."
1482660,1484660," That's kind of bizarre."
1484660,1485660," So, do I have to..."
1485660,1487660," I think I have to do -l."
1487660,1489660," Right."
1489660,1493660," Oh, wait a second."
1493660,1495660," Wait a freaking second."
1495660,1496660," Right."
1496660,1498660," So, we also have to do -l."
1498660,1499660," Right."
1499660,1500660," So, it says I have to do -l."
1500660,1501660," Right."
1501660,1502660," So, it says I have to do -l."
1502660,1507660," So, how do I link?"
1507660,1509660," It was saying something about -l.m."
1509660,1515660," Could not find..."
1515660,1516660," Yeah."
1516660,1518660," So, because I have to..."
1518660,1522660," That's bizarre."
1522660,1524660," Why can't I just do all files?"
1524660,1527660," Why can't I just do all files?"
1527660,1528660," Okay."
1528660,1529660," So, by the way..."
1529660,1531660," So, let's try to vendor..."
1531660,1532660," Oh."
1532660,1536660," I keep forgetting about this thing."
1536660,1537660," Okay."
1537660,1539660," So, let me quickly remove all of that stuff."
1539660,1542660," It still fucking gets me every fucking time."
1542660,1543660," Right."
1543660,1546660," So, this explosion of just like all files is just like..."
1546660,1547660," Oh!"
1548660,1549660," Um..."
1549660,1550660," So, it just..."
1550660,1552660," It really gets me every fucking time."
1552660,1557660," So, if I try to do C3 vendor fetch..."
1557660,1559660," And, by the way..."
1559660,1566660," So, the reason why I'm having troubles right now is because I'm using C3 in a very unconventional way."
1566660,1568660," You're not supposed to use it like that."
1568660,1572660," But I do that because I don't like the conventional way of using C3."
1572660,1574660," I just don't like it."
1574660,1575660," I don't like the build system."
1575660,1576660," I just don't like any of that stuff."
1576660,1577660," I'm sorry."
1577660,1578660," I'm that kind of person."
1578660,1580660," So, yeah."
1580660,1585660," So, if you use it a conventional way, I think it's going to be easier to..."
1585660,1587660," Like, you're not going to have this kind of problems."
1587660,1588660," But I'm exploring."
1588660,1589660," Right."
1589660,1590660," I'm exploring things."
1590660,1598660," I'm just trying to see how they work and how I can make things simpler in a sense of less moving parts."
1598660,1603660," People really like to confuse difficulty and complexity."
1603660,1606660," Here, I'm talking about complexity in terms of amount of moving parts."
1606660,1607660," Right."
1607660,1616660," So, when I say I'm trying to make things simpler, I don't mean that it has to be easy for literal newbies."
1616660,1619660," I'm just saying that it has to be simpler in terms of complexity."
1619660,1622660," So, the system has to have less moving parts."
1622660,1623660," That's what I mean."
1623660,1626660," And that implies knowing how things work under the hood."
1626660,1627660," Right."
1627660,1629660," So, that's what I mean."
1630660,1635660," So, because people like to look at what I'm doing and say, oh, hypocrisy, this is not easy."
1635660,1638660," I'm not fucking talking about difficulty."
1638660,1640660," I'm talking about complexity."
1640660,1641660," Okay."
1641660,1642660," Calm down."
1643660,1644660," Anyways."
1644660,1648660," So, people really fucking love to confuse these two things."
1648660,1650660," Simple versus easy."
1650660,1656660," It's actually more like simple versus easy for noobs."
1656660,1661660," The current tech industry doesn't try to make things simple."
1661660,1664660," It tries to make it easy for noobs."
1664660,1665660," Right."
1666660,1671660," Which actually doesn't mean that the things are going to be simpler in terms of complexity."
1671660,1678660," So, anyway, since you have to link with the L flag."
1678660,1679660," Right."
1679660,1683660," So, maybe you're supposed to actually use this kind of stuff like this."
1683660,1684660," Yes."
1684660,1687660," I think that's how it's supposed to be done."
1687660,1689660," There's no such library."
1689660,1695660," Why it's missing the search path?"
1695660,1697660," That's kind of beyond me."
1697660,1702660," Like, why are you saying that it doesn't exist?"
1702660,1705660," So, do we have to provide the search path?"
1705660,1710660," I don't see here if I provided any search paths."
1710660,1711660," Right."
1711660,1715660," So, in this specific example, as you can see, I didn't provide any search path."
1715660,1718660," If I try to build the whole thing, is it going to work?"
1718660,1719660," It seems to be working."
1719660,1720660," Right."
1720660,1725660," But, when I'm trying to do this kind of thing."
1725660,1726660," Right."
1726660,1728660," So, it doesn't work."
1728660,1729660," Right."
1729660,1731660," So, that means I can't really do that."
1731660,1732660," And, right."
1732660,1734660," So, if I do clang."
1736660,1737660," So, this is going to be O file."
1737660,1738660," So, this is going to be O file."
1738660,1740660," And, if I want to link with the O file."
1740660,1743660," It has to be image O."
1743660,1744660," Right."
1744660,1749660," So, it doesn't work because it can't find the O file."
1749660,1750660," Oh boy."
1750660,1751660," Okay."
1751660,1752660," So, let's take a look at the help."
1752660,1753660," Right."
1753660,1755660," So, let's take a look at the help."
1755660,1756660," help."
1756660,1759660," Maybe we want to take a look at the help of the compile command."
1759660,1760660," Right."
1760660,1765660," So, maybe this is something that I want to pass to linker."
1765660,1768660," OPG output."
1768660,1770660," So, link."
1770660,1773660," Linker option."
1773660,1779660," We can try to do the linker option."
1779660,1780660," Yeah."
1780660,1784660," So, there is a flag minus Z."
1784660,1788660," Send argument as a parameter to a linker."
1788660,1789660," That is understandable."
1789660,1790660," Okay."
1790660,1793660," So, if I try to do something like this."
1793660,1794660," It worked."
1794660,1795660," Okay."
1795660,1798660," So, you need to pass the O file to a linker."
1798660,1799660," Right."
1799660,1802660," So, you need to pass it to a linker."
1802660,1803660," Not particularly convenient."
1803660,1807660," But, I suppose you're just not supposed to use the compiler like this."
1807660,1808660," Right."
1808660,1811660," So, you're supposed to use their build system."
1811660,1813660," But, I don't like their build system."
1813660,1814660," All right."
1814660,1817660," So, let's actually create a make file."
1817660,1818660," Right."
1818660,1825660," And then, in a make file, we can create all of the targets that we've actually been, you know, working with."
1825660,1828660," So, where is the crank?"
1828660,1829660," Right."
1829660,1831660," So, I'm going to put this stuff in here."
1831660,1836660," So, then, we're going to create main, which depends on main C3."
1836660,1839660," And, it depends on this thing."
1839660,1842660," And, this is how we're compiling the whole thing."
1842660,1843660," Like so."
1843660,1845660," So, now, I can just do something like this."
1845660,1847660," And, as you can see, it just creates the application."
1847660,1848660," Right."
1848660,1850660," So, it simply creates an application."
1850660,1851660," Cool."
1851660,1855660," So, now, I need to define an external file."
1855660,1857660," How can I define an external file?"
1857660,1858660," So, stb image write."
1858660,1863660," So, we're looking for stbi write png."
1863660,1865660," So, as of right now, I only care about this one."
1865660,1866660," Right."
1866660,1867660," So, this is what I need."
1867660,1870660," So, this is basically a function."
1870660,1871660," So, here we accept."
1871660,1872660," So, here we accept."
1872660,1875660," We don't even have to change anything in here, honestly."
1875660,1877660," We just need to remove the const."
1877660,1878660," And, that's about it."
1878660,1883660," So, we can say that it's an external function with this specific name."
1883660,1884660," And, that's about it."
1884660,1885660," Right."
1885660,1888660," So, I can now try to rebuild the whole thing."
1888660,1892660," And, it doesn't really like what is going on in here."
1892660,1895660," So, expected function body."
1895660,1900660," So, let's take a look at how we do that in C3 demo."
1900660,1903660," So, I really like this C3 demo that I've made."
1903660,1907660," Because, it's a good source of examples."
1907660,1913660," I was actually experimenting with doing like a knob style builds for this thing."
1913660,1914660," It kind of worked out."
1914660,1917660," But, the sub-process kind of sucks, honestly."
1917660,1918660," Right."
1918660,1920660," So, what do we have in here?"
1920660,1923660," Oh, we have to put extern in front of fn."
1923660,1924660," Okay."
1924660,1925660," So, that explains it."
1925660,1926660," So, we have to do extern."
1926660,1927660," Right."
1927660,1929660," So, let's try to recompile this entire thing."
1929660,1930660," And, it's working."
1930660,1931660," It is working."
1931660,1934660," So, let's create some sort of like pixels."
1934660,1935660," Right."
1935660,1938660," So, let's just say that we're going to have."
1938660,1941660," We can say something like width."
1941660,1944660," 800 and also 600."
1944660,1945660," Right."
1945660,1948660," So, we're going to have width and height."
1948660,1950660," Width and height."
1950660,1954660," So, in this thing is going to be just width multiplied by height."
1954660,1956660," And so, in here."
1956660,1962660," We can effectively just iterate a single pixel out of pixels."
1962660,1966660," I think if you want to actually reference them by pointer."
1966660,1968660," So, this is what you usually do."
1968660,1972660," So, I want to fill each individual pixel with maybe a red color."
1972660,1973660," Right."
1973660,1975660," So, it's going to be something like ff."
1975660,1976660," 0, 0, 0, 0."
1976660,1977660," Ff."
1977660,1979660," I hope hex literals work."
1979660,1982660," I do hope that they do work."
1982660,1985660," And, in here what we're going to do."
1985660,1988660," We're going to just create output png."
1988660,1990660," So, this is width."
1990660,1992660," This is height."
1992660,1994660," The amount of components is going to be four."
1994660,1995660," This is the pixels."
1995660,1997660," I suppose we have to take a pointer."
1997660,2001660," Stride in bytes is basically width multiplied by four."
2001660,2002660," Right."
2002660,2004660," So, it's basically width."
2004660,2006660," But, in bytes instead of pixels."
2006660,2007660," Each pixel is four bytes."
2007660,2009660," That's why width multiplied by four."
2009660,2010660," Okay."
2010660,2012660," So, now if I try to compile this entire thing."
2012660,2013660," Does it even compile?"
2013660,2014660," Right."
2014660,2015660," It doesn't."
2015660,2016660," Type have to be specified."
2016660,2017660," Okay."
2017660,2019660," So, I suppose this is what we have to do in here."
2019660,2020660," Yeah."
2020660,2033660," You cannot convert integer smaller than a pointer size to a pointer."
2033660,2037660," But, it's not like I want to convert it to a pointer because I'm afraid that it's too big."
2037660,2041660," I'm converting it to a pointer because I want to reference it."
2041660,2043660," I want to be able to modify it like that."
2043660,2046660," So, that doesn't make any freaking sense to me."
2046660,2047660," Honestly."
2047660,2048660," Right."
2048660,2051660," Because, as far as I know, I'm not really setting this value in here."
2051660,2052660," Right."
2052660,2054660," But, we can try to run this entire thing."
2054660,2056660," So, let's actually do ioprintn."
2056660,2058660," So, here we can say string."
2058660,2059660," Ooh."
2059660,2060660," This one is..."
2060660,2062660," This one is funny."
2062660,2063660," If I..."
2063660,2064660," Hmm."
2064660,2065660," Hmm."
2065660,2066660," So, ZString."
2066660,2067660," Hmm."
2067660,2068660," So, ZString."
2068660,2069660," Hmm."
2069660,2070660," Hmm."
2070660,2071660," Hmm."
2071660,2076660," So, because string is actually a slice, it's not a ZString."
2076660,2079660," So, you have to be really careful about this kind of stuff."
2079660,2080660," Anyway."
2080660,2082660," So, I think I'm going to do it a little bit better."
2082660,2083660," So, generated output png."
2083660,2088660," So, I just wanted to extract the name of the file, right, to a separate variable so I don't"
2088660,2089660," have to duplicate its name."
2089660,2090660," Right."
2090660,2093660," But, as of right now, I'm not really sure how exactly to do that."
2093660,2095660," because here we accept ZString."
2095660,2096660," Right."
2096660,2098660," So, which is a null to emulated string."
2098660,2099660," Right."
2099660,2101660," So, but strings in C3 are kind of different."
2101660,2102660," But, that's totally fine."
2102660,2103660," It doesn't really matter."
2103660,2104660," Okay."
2104660,2107660," So, let's actually try to run this entire thing."
2107660,2109660," Generated output png."
2109660,2111660," And, as you can see, there is nothing."
2111660,2112660," Right."
2112660,2114660," So, we don't see anything."
2114660,2119660," We can take a look at the size of the image and it's actually 800 by 600, exactly as we expected."
2119660,2126660," but there is nothing because this kind of thing didn't set anything actually."
2126660,2127660," Right."
2127660,2128660," It didn't set anything actually."
2128660,2130660," I was trying to reference it as a pointer."
2130660,2131660," Okay."
2131660,2133660," So, what if I put like a star in front of it?"
2133660,2134660," Is it going to do anything?"
2134660,2135660," I don't think so."
2135660,2136660," Right."
2136660,2137660," It's kind of bizarre."
2137660,2138660," Right."
2138660,2140660," I want to be able to use for each to just modify things."
2140660,2142660," But, I mean, it's not that big of a deal."
2142660,2144660," You can always do something like this."
2144660,2145660," Right."
2145660,2147660," So, where you just do width."
2147660,2150660," Or you can do something like pixels length."
2150660,2151660," Right."
2151660,2153660," So, it's a full thing in here."
2153660,2157660," And in here, we just do something like this."
2157660,2161660," But, honestly, we still can use for each."
2161660,2162660," Right."
2162660,2164660," So, you still can use for each."
2164660,2165660," If you think about it."
2165660,2166660," But, anyway."
2166660,2168660," So, let's actually do that."
2168660,2170660," I wonder if I can do the following thing."
2170660,2172660," I can do output png."
2172660,2173660," It depends on main."
2173660,2175660," And we just called main."
2175660,2176660," Right."
2176660,2177660," So, now if I do something like that."
2177660,2178660," Right."
2178660,2181660," As you can see, it does the whole chain of things."
2181660,2182660," Right."
2182660,2184660," It pre-compiles the stb image right."
2184660,2186660," Then it compiles the main."
2186660,2187660," Then it runs main."
2187660,2188660," And so on and so forth."
2188660,2189660," Right."
2189660,2191660," So, that's basically what's going on here."
2191660,2194660," As far as I know, you can actually, these days at least."
2194660,2195660," Right."
2195660,2196660," So, you can just do compile run."
2196660,2197660," Right."
2197660,2200660," It will compile it and run simultaneously."
2200660,2201660," Right."
2201660,2203660," So, and here it should be red."
2203660,2207660," And as you can see, it's red."
2207660,2208660," So, yeah."
2208660,2211660," But I really like to use for each."
2211660,2212660," For this kind of stuff."
2212660,2216660," Because I think it's too much of a code for just iterating things."
2216660,2217660," Honestly."
2217660,2219660," I think it's too much of a code."
2219660,2222660," But I feel like you still can use for each if you want to."
2222660,2223660," Right."
2223660,2225660," Because what you can do."
2225660,2226660," Essentially."
2226660,2229660," You can iterate pixel."
2229660,2231660," But also i."
2231660,2234660," So, and that's equivalent actually."
2234660,2235660," That is equivalent."
2235660,2236660," Almost."
2236660,2237660," Almost."
2237660,2242660," And I wonder if I can say for example."
2242660,2243660," Okay."
2243660,2244660," I don't care about i."
2244660,2245660," No."
2245660,2246660," I can't do that."
2246660,2248660," So, I have to actually care about this kind of thing."
2248660,2249660," All right."
2249660,2251660," So, that's a fair way to do that."
2251660,2252660," I think."
2252660,2253660," That's a fair way to do that."
2253660,2258660," So, now as you can see, we can generate like images and stuff like that."
2258660,2259660," That's pretty cool."
2259660,2260660," Mmm."
2260660,2261660," Mmm."
2261660,2262660," Mmm."
2262660,2263660," Mmm."
2263660,2264660," Mmm."
2264660,2265660," Mmm."
2265660,2266660," Mmm."
2266660,2267660," Mmm."
2267660,2268660," Mmm."
2268660,2269660," Mmm."
2269660,2270660," Mmm."
2270660,2271660," Mmm."
2271660,2272660," I see."
2272660,2273660," Okay."
2273660,2274660," Is it going to work?"
2274660,2275660," Uh-huh."
2275660,2276660," All right."
2276660,2277660," Thank you."
2277660,2278660," Thank you."
2278660,2279660," Thank you so much."
2279660,2280660," Okay."
2280660,2281660," So, that's what I wanted."
2281660,2282660," All right."
2282660,2283660," All right."
2283660,2284660," So, I'm just confused."
2284660,2285660," I'm just a little bit confused."
2285660,2286660," All right."
2286660,2287660," So, I'm just confused."
2287660,2289660," I'm just a little bit confused."
2289660,2292660," And to look cool, let's actually make it like one line."
2292660,2293660," Oh, look at that."
2293660,2294660," Look at that."
2294660,2295660," Look at that."
2295660,2296660," Look at that."
2296660,2297660," This doesn't look cool."
2297660,2299660," Like it looks fucking cool."
2299660,2306660," Uh, so."
2306660,2308660," Fucking cool, mate."
2308660,2310660," Fucking cool, mate."
2310660,2312660," Uh, concise."
2312660,2313660," Cook size."
2313660,2314660," Okay."
2314660,2316660," So, what do we have here?"
2316660,2318660," Uh, so, what do we have here?"
2318660,2323660," Um, we probably should start, you know, translating the code."
2323660,2324660," Right."
2324660,2326660," So, we should start translating the code."
2326660,2332660," Uh, let's go to client.mts and let's just grab this function."
2332660,2333660," All right."
2333660,2336660," Let's simply group this function."
2336660,2339660," Um, so, obviously, it's going to be fn."
2339660,2341660," Uh, it's not going to return anything."
2341660,2342660," Excuse me."
2342660,2345660," Um, so, image data."
2345660,2347660," So, this is basically."
2347660,2348660," Yeah."
2348660,2349660," So, it's a global thing."
2349660,2350660," Right."
2350660,2351660," So, we're going to be rendering into the pixels."
2351660,2353660," Let's not accept anything."
2353660,2354660," So, camera."
2354660,2358660," Uh, we probably want to define camera somewhere here."
2358660,2359660," Right."
2359660,2360660," So, this is going to be camera."
2360660,2363660," And, uh, so, what's the definition of camera."
2363660,2365660," So, I think it's an interface."
2365660,2366660," Yeah."
2366660,2367660," There we go."
2367660,2369660," So, it's an interface."
2369660,2370660," Let's put it in here."
2370660,2371660," Um, right."
2371660,2372660," Um, right."
2372660,2374660," And, it's a position."
2374660,2376660," Uh, we need to have vector2."
2376660,2377660," Right."
2377660,2379660," So, we definitely need to have a vector2."
2379660,2383660," In C3 demo, I'm going to be using that C3 demo a lot."
2383660,2384660," Uh, right."
2384660,2391660," So, I'm going to put actually the link to the video where we developed that demo in the description, by the way."
2391660,2392660," Uh, right."
2392660,2394660," So, let's put it tbd."
2394660,2399660," Links to all, to all the relevant, uh, strings."
2399660,2400660," Right."
2400660,2402660," So, because I think the strings were actually very useful."
2402660,2403660," Right."
2403660,2405660," So, they provide the context of what we're doing right now."
2405660,2406660," Um, right."
2406660,2408660," So, this is C3."
2408660,2411660," And, let's go to the C3 demo."
2411660,2417660," And, in here, I think in ArrayLib C3, we have the definition of vector2."
2417660,2419660," We also have the definition of the color."
2419660,2420660," Look at that."
2420660,2421660," This is actually rather convenient."
2421660,2423660," Wait a freaking second."
2423660,2425660," Wait a freaking second."
2425660,2427660," I think we can use that."
2427660,2431660," So, I'm going to, super quick, comment out all of this shit."
2431660,2432660," Right."
2432660,2434660," So, I'm going to just comment out all of this shit."
2434660,2435660," Uh, right."
2435660,2438660," So, I'm going to try to compile this entire thing."
2438660,2439660," Is it compilable?"
2439660,2440660," Yeah, it seems to be compilable."
2440660,2445660," And, for the pixels, I'm going to replace you int with cola."
2445660,2446660," Right."
2446660,2447660," So, look at that."
2447660,2449660," It's not going to compile right away."
2449660,2450660," Right."
2450660,2451660," So, 65."
2451660,2455660," So, that means, instead of doing that, what I have to do."
2455660,2458660," I have to split it into separate components."
2458660,2459660," Uh, like so."
2459660,2461660," And, just do it like that."
2461660,2464660," And, I think now, it will compile."
2464660,2465660," To compile."
2465660,2467660," But, uh, it's not that different."
2467660,2473660," But, now, I can actually treat each individual pixel as a vector."
2473660,2474660," That's what I can do."
2474660,2477660," So, as a 4, um, 4D vector."
2477660,2478660," Which is rather convenient."
2478660,2479660," And, it just works."
2479660,2480660," It seems to be working."
2480660,2481660," Right."
2481660,2483660," So, if I try to, uh, do a full recompilation."
2483660,2487660," Um, so, and I take a look at the output png."
2487660,2488660," It is red."
2488660,2493660," So, I don't remember in which order, uh, it actually puts the things."
2493660,2496660," So, if I try to do something like this."
2496660,2498660," If I try to do something like this."
2498660,2500660," Is it going to be."
2500660,2502660," So, it's like a little endian."
2502660,2503660," Uh, yeah."
2503660,2509660," So, since we are now directly modifying the bytes."
2509660,2510660," Right."
2510660,2512660," The order is exactly what you expect."
2512660,2514660," So, that means this is red."
2514660,2515660," This is green."
2515660,2516660," This is blue."
2516660,2517660," And, this is alpha."
2517660,2518660," So, that means to make it green."
2518660,2520660," I have to do it like that."
2520660,2521660," Alright."
2521660,2522660," So, now."
2522660,2525660," If I take a look at."
2525660,2526660," Yeah."
2526660,2527660," There we go."
2527660,2528660," There we go."
2528660,2529660," There we go."
2529660,2530660," By the way."
2530660,2533660," Can I just like take a moment to thank Sean Barrett."
2533660,2536660," For creating and maintaining STB libraries."
2536660,2539660," So, isn't it kind of marvelous."
2539660,2541660," That like a."
2541660,2542660," You know."
2542660,2544660," High caliber software developer."
2544660,2546660," That works at Epic Games."
2546660,2548660," Previously at RAD Studio."
2548660,2551660," Actually donated his time."
2551660,2553660," To develop high quality libraries."
2553660,2555660," And I think it is okay."
2555660,2556660," For such person."
2556660,2558660," To complain sometimes."
2558660,2559660," About."
2559660,2562660," Crappy open source practices."
2562660,2563660," I think he."
2563660,2565660," He has a right to do that."
2565660,2567660," Can I just like stop for a moment."
2567660,2569660," And say that out loud."
2569660,2572660," And he's not an asshole for doing that."
2572660,2573660," So."
2573660,2574660," Just."
2574660,2575660," Just."
2575660,2577660," Just wanted to say that."
2577660,2578660," Just."
2578660,2579660," Just wanted to say that."
2579660,2580660," Anyways."
2580660,2581660," Um."
2581660,2582660," Right."
2582660,2583660," Anyways."
2583660,2584660," Um."
2584660,2585660," So, what do we have in here?"
2585660,2587660," So, that seems to be working."
2587660,2589660," That seems to be twerking."
2589660,2590660," Uh."
2590660,2594660," So, how can we compete with Zeek?"
2594660,2595660," That's the neat part."
2595660,2596660," You don't."
2596660,2599660," You don't compete with any languages."
2599660,2600660," You just."
2600660,2601660," Lock in."
2601660,2603660," And create cool shit."
2603660,2605660," That's it."
2605660,2607660," You don't need to compete with anybody."
2607660,2608660," Right."
2608660,2610660," All of that is for tribalist language people."
2610660,2611660," We don't care about them."
2611660,2612660," Well."
2612660,2617660," It's funny sometimes to poke fun at them."
2617660,2618660," But at the end of the day."
2618660,2619660," Just."
2619660,2620660," Make cool shit."
2620660,2621660," That's it."
2621660,2623660," You can make cool shit in any language."
2623660,2624660," So anyways."
2624660,2625660," Uh."
2625660,2626660," Anyways."
2626660,2627660," Anyways."
2627660,2628660," Anyways."
2628660,2629660," Anyways."
2629660,2630660," So."
2630660,2631660," What do we have in here?"
2631660,2632660," So."
2632660,2633660," This is direction."
2633660,2634660," I think it's going to be a float."
2634660,2635660," Right."
2635660,2636660," So in this specific case."
2636660,2637660," It's going to be a float."
2637660,2638660," So let's actually do struct."
2638660,2639660," So."
2639660,2640660," FoV left."
2640660,2642660," Do we even use FoV left and right in here?"
2642660,2644660," We do in fact use FoV left and right in here."
2644660,2646660," But it has to be pre-computed actually."
2646660,2648660," It has to be pre-computed."
2648660,2649660," Uh."
2649660,2650660," Jane Takar."
2650660,2651660," Thank you so much for."
2651660,2652660," For the rate."
2652660,2653660," Uh."
2653660,2654660," Thank you."
2654660,2655660," Thank you."
2655660,2656660," Thank you."
2656660,2657660," Hello."
2657660,2658660," Hello Raiders."
2658660,2659660," How everyone is doing."
2659660,2661660," How everyone is doing."
2661660,2662660," Mm."
2662660,2663660," Mm."
2663660,2664660," Mm."
2664660,2665660," Mm."
2665660,2666660," Mm."
2666660,2667660," Mm."
2667660,2688780," So, what's funny is that, chat, what's funny is that we, I, right, I developed this chat,"
2688780,2695460," I created these vectors as sort of intermediate values because I didn't want to create too many"
2695460,2701960," instances of vector. Now, we are programming in a proper, statically typed native language."
2701960,2708360," I don't have to worry about any of this shit. Like, you don't have to fucking worry about that."
2708360,2717260," Right, so, all of this code can be actually greatly simplified eventually. So, let me, let me see. So,"
2717260,2722440," we have half of the height. Okay, so, I'm going to replace this with just height,"
2723260,2730360," but I'm not sure. So, this code kind of assumes that everything is floats. So, that means I probably"
2730360,2735160," want to do something like this. Right, that's what I want to do. That's what I want to do."
2735160,2745440," Right, so, maybe I'm going to comment out these things. And now, what I can do. So, here, I'm taking,"
2745440,2754540," I'm copying that in here. So, what I'm trying to do in here. I'm trying to take the FOV left and"
2754540,2761040," subtract the camera position of this entire stuff. And I'm just trying to take the length of this thing."
2761040,2768400," Right, so, that's what I'm doing. So, what is FOV left and FOV right? So, I think we need to establish the terms."
2768400,2789500," Right, so, let me see. So, let me see. So, this is the position. Right, so, this is the cone of FOV. This is FOV left. Right, so, FOV left. So, that's what we do."
2789500,2798300," And essentially, in this first formula, we're just computing the length of this specific vector, I guess."
2798300,2802220," I don't remember what this code is doing, by the way. So, I'm kind of like redoing it again."
2802220,2807100," And I think this is kind of important because this is like, it's equal, this length is equal to this one."
2807100,2813820," So, we're kind of simultaneously competing for both of them. Right, so, but I'm not sure if this is going to work though."
2815900,2822380," So, I can try to compile the whole thing, but it's not going to compile. I know that for a fact, right."
2822380,2830300," So, because, yeah. So, this has to be just a float like this. And this is going to be a float as well."
2830300,2838460," All right. So, yeah. We are trying to use this code. I'm just curious if this is going to work."
2839260,2846700," All right. What if I command out this code, right, and just claim that this code is not properly converted yet."
2846700,2853580," Maybe I'm going to create some sort of a cursor. Right. So, something like this. Right."
2853580,2860300," So, and it indicates the code that is already converted to C3. Right. So, everything above this"
2860300,2866460," cursor is already converted to C3. Everything below is still in JavaScript. And we're currently working on"
2866460,2873980," converting it to C3. So, I just want to comment it out and see if this entire thing compiles."
2873980,2884860," Okay. So, vectors just have length method. They just fucking have length method. Like, by default."
2884860,2890140," And I'm not mistaken. Right. So, if I try to create it. Yeah. Okay. So, they literally have length."
2892380,2895660," But what is length equal to? Is it length?"
2895660,2910140," Wait, wait, wait. So, let me see. If I try to, for example, create a vector 2. Right. And I say that it's a"
2910140,2913020," 1, 1. Let's just print it."
2914940,2921980," So, I/o printn p length. Because I'm afraid that it may actually return you the amount of components."
2921980,2927580," Right. So, that's what I'm afraid of, honestly."
2927580,2935180," No! It's... Okay. So, yeah. So, the length of the vector 1, 1 is actually square root of 2."
2937020,2942540," Oh, okay. All right. Are you assuming my pin word?"
2942540,2947500," So, I think... Oh, the amount of components is probably actually just len."
2947500,2951260," Right. So, just like with arrays and stuff. Yeah. Yeah. So, it's just..."
2951260,2953340," Nice language, by the way."
2953340,2965820," Nice language. So, the length gives you the, you know, Euclidean length of the vector. But len gives you the amount of components."
2966620,2972700," Right. So, not dissing this language. It's just kind of funny. Right. So, len is not equal length."
2972700,2975020," Exactly. Len is not equal length. Anyway."
2975020,2984700," So, all right. So, that means you can just do that. So, I need to uncomment this thing."
2984700,2995980," So, here, what we're doing. Right. What we're doing. We're iterating rows. Right. We're iterating rows,"
2995980,3003100," but we're iterating them right to the middle of the whole thing. Right. So, that's what we do."
3003100,3011660," What's funny is that height, like usually resolution is divisible by two always. So, I don't really need"
3011660,3018060," to keep it as flawed. I can just keep it as an integer. Right. So, and those don't introduce any"
3018060,3025260," precision problems or anything like that. So, and then here, now I can use int. Man, I'm so glad."
3025260,3033020," Like all of this stuff, they wants to, it wants to use integer arithmetics. But I can't use"
3033020,3037820," proper integer arithmetics in JavaScript because it's a freaking toy scripting language. Right. So,"
3037820,3044860," where all of the numbers are fucking floats. Oh, finally, finally, I'm programming in the proper"
3044860,3052300," language. Thank you. Thank you, God. Oh my God. So, I don't have to deal with any of these shits."
3052300,3057420," Right. So, I'm starting from the half. Right. So, and I'm just like going forward."
3057420,3064220," Okay. So, if I try to compile this entire thing. Right. So, image data. So, this is height. We have"
3064220,3070380," to replace this entire thing with height. So, and the code becomes simpler. Look at this."
3071980,3078060," All right. So, what are we going to have in here? So, we are, so this, we're taking the height"
3078060,3085740," and then we're subtracting the current y and minus one. So, essentially, we are iterating"
3085740,3092780," floor and the ceiling simultaneously. Right. So, this is what we're doing. And this is,"
3092780,3099980," S, Z is sort of like an opposite, you know, opposite thing. So, if Y is basically floor,"
3099980,3105740," since it goes from the middle of the screen down. So, that means it's a floor. So, we find the opposite"
3105740,3112380," thing and S, Z points at the row of the ceiling. That's what we're doing in here effectively,"
3112380,3117100," if I understand correctly. Right. So, and this could be integer, by the way. Right. So,"
3117100,3121980," all of these things are integers. So, we are iterating integers. So, BP is float,"
3121980,3127020," which is understandable. Right. So, it wants to be flowed. Okay. So, let's actually compile."
3127020,3133660," So, we've got a lot of subs. I probably need to acknowledge them. Just a freaking second,"
3133660,3141980," fine, just a freaking second. So, Liberium, thank you so much. Ranch, thank you so much for tier one."
3141980,3146780," SecTalks, thank you so much for tier one. CoreRunner, thank you so much for tier one with the message"
3146780,3154620," 3C. Thank you. Thank you so much. BranchWag, thank you for the gifted subs. John D Resta, thank you so"
3154620,3161340," much with the message. I'm starting to see ads. That means it's subscription time. Okay. That's how they"
3161340,3168940," debate you to pay your money. AiraSW, thank you so much for Twitch Prime. All right. So, that seems to be"
3168940,3174540," working. That seems to be working. Okay. So, here we're computing the difference between"
3174540,3184460," the middle. Right. So, PZ, as you can see, is the middle of the screen. And SZ is the sort of the"
3184460,3191180," opposite thing. Right. So, and I suppose it also has to be an integer. Okay. So, afterwards,"
3191740,3202940," what we're doing, we're dividing the length of this FOV vector, right, FOV vector by AP,"
3202940,3208860," which is the distance. Yeah, I see. So, we're just doing a little bit of trigonometry. Right. We're"
3208860,3214460," just doing a little bit of trigonometry. And we need to know the near clipping plane. Right. So, which is a"
3214460,3219260," constant. So, that means we need to go to the client MTC and stuff like that. So, actually,"
3219260,3224700," let's bring all of them in here. Right. So, we're going to have some constants in here. So,"
3224700,3230220," which are going to be, I suppose, floats. Right. So, since the near clipping plane is 0, 1. Right. So,"
3230220,3239100," all of these things have to be floats, I think. So, BP is float. So, AP is the integer. So, this entire"
3239100,3244540," thing is going to be float at some point. I wonder if C3 actually automatically converts"
3245100,3251500," integers to floats in these specific situations or you have to force cast them. So, I wouldn't mind"
3251500,3259260," if it forces you to cast all of that stuff. So, by the way, if you don't understand what the"
3259260,3264380," fuck this code does, don't even fucking worry about that. I don't understand it either. It doesn't matter"
3264380,3270860," right now. What matters is that we need to translate that code to C3. So, that's it. So,"
3270860,3273980," don't even fucking worry about that. So, it was complaining about something. I don't"
3273980,3279420," freaking know what it was complaining about. So, 32, ah, accidentally actually did an oopsie-doopsie"
3279420,3284860," and fucky-vucking. Right. So, we're just translating the code. Nothing particularly special. Oh, right."
3284860,3290780," Okay. So, you have to convert this kind of stuff to floats. Right. So, AP has to be a float."
3290780,3298860," PZ has to be a float. Okay. Understandable. Let's go. Anything else? Oh, and this thing has to be... Oh,"
3298860,3304940," it was probably talking about that thing. All right. So, can I do it now? Yeah, boy! You don't"
3304940,3310060," even have to do that. So, it automatically moves integers to float, right, when it's needed. Okay."
3310060,3316060," So, that's understandable. That's actually understandable. Okay. So, now, look, we have this"
3316060,3324060," very huge expression and I think now we can simplify it greatly. I'm pretty sure we can simplify it"
3324060,3330940," greatly because what we need to do in here. We just need to grab the FOV left, subtract the camera"
3330940,3336940," position. Right. So, subtracting the camera position. We need to normalize this entire thing. I don't know"
3336940,3343420," if normalizing is going to actually work. Then, if we want to scale it, we multiply it by B and we add"
3343420,3350300," the camera position back. So, and then we basically assign all of that to T1. Just a second."
3359900,3367740," So, yeah. That's what we need to do. I'm not sure if normalization is going to work."
3367740,3376860," So, let me see. So, normalize doesn't work. What if I do normalize? Right. Because it has length. So,"
3376860,3385740," that means it probably has like a common operations and stuff like that. So, let me see. It has no"
3385740,3395420," normalize. Okay. So, essentially, we managed to convert this kind of expression to this one."
3395420,3404300," Isn't it cool? I think it's pretty cool, actually. I really like that. So, and yeah. So, let's actually"
3404300,3411580," grab this one and let's try to convert that. So, we take fov right, subtract the camera position. We"
3411580,3422540," normalize and then we scale by B and then we just add camera position back, back. So, vector 2, tip 2."
3422540,3430620," So, that's basically what it is. Yeah. So, that's about it. So, we normalize it, then we rescale it and"
3430620,3436620," then we add the camera position back. So, that's basically what's going on here. All right. So, then"
3436620,3444220," next come the comments. Right. So, I think I can just keep it like this. Nothing particularly special."
3444220,3452860," All right. So, and afterwards, right. So, here, as you can see, we're iterating the rows and then once we"
3452860,3457900," figure out what we need to put into the row, we're iterating columns. Right. So, here, as you can see,"
3457900,3463900," we're iterating columns. So, and in here, I suppose I need to do something like this."
3463900,3476380," And yeah, there we go. So, it's going to be integer x. So, this is width. Yep. And now we just need to"
3476380,3488060," convert all of that. So, in here, yeah, we try to get the color of the floor and the ceiling."
3490700,3496540," So, we need to translate these functions to C3 as well. Right. So, let's try to recompile this,"
3496540,3498700," since I think it's recompiling. So, that's pretty cool."
3501740,3512540," Now, if I go. So, we have T. So, we take T1. Oh, we're trying to lerp between them."
3512540,3522220," Damn. So, how can I, how can I easily lerp between two vectors? I can always do something like T2 minus T1"
3523100,3533740," multiply by this value. Right. So, just multiply by that. And just add T1 back. Right. And that's what we can"
3533740,3543660," have in here. And this is what we can assign this stuff to. But maybe there is lerp function in a standard"
3543660,3556780," library somewhere in C3. So, it's actually C. C3 length lib C3. So, let's RG vimgrep lerp."
3556780,3570860," It literally fucking has lerp. So, it's a macro that is sort of like a method"
3574220,3581420," So, it just does lerp. I don't really fully understand this macro, but apparently... Oh, okay."
3581420,3585740," So, but it's private. I'm not sure if I can just use it."
3585740,3591260," Not sure if I can just use it. So, I didn't know what private honestly means."
3591260,3601340," So, I would like to have some maybe examples on how you use dot lerp. Right. Because I don't fully"
3601340,3610860," understand. So, it advertises to be sort of like a method. Ah, I see. I think it literally works"
3610860,3617980," exactly as it works in JavaScript. Right. I think I can literally do something like T1 lerp T2"
3619580,3629420," like this. Alright. And then it's just width. But also... I think I have to convert it to float."
3629420,3638460," Alright. So, I think I can do that. I'm pretty sure. Huh. Okay. So, let's try to compile this into"
3638460,3648380," anything. I think... Damn! It just... It just works. Guys. It just fucking works. Can you do that?"
3648380,3653020," Joke. Alright. So, let's actually grab all of these methods."
3653020,3660780," SimGetFloor. Alright. So, let me see what you see. So, SimGetFloor. And yeah. So, let's actually"
3660780,3665180," like literally copy-paste all of these functions in here. Like so."
3666220,3673500," um, yeah. So, we try to compile them. They're not gonna work. So, let's start with this one. So,"
3673500,3678700," it's gonna be a function. We can return color. Right. So, we can just return color."
3679580,3689180," Uh, right. And in here, we just accept p. So, now in here, I can just do px plus p. Well, I mean..."
3689180,3698940," I probably do need to do floor. Don't I? I'm pretty sure. Right. So, can I just do something like"
3698940,3707980," floor. So, math floor. Okay. So, there is a macro. I probably want to import"
3708620,3719900," std math. Right. So, get floor. And here, just do math floor. But maybe there is a method for flooring."
3719900,3726220," Let me see. Is there something like floor? Okay. You can actually do it as a method as well."
3726220,3732780," Excuse me. Honestly, methods in C3 are kind of interesting."
3734620,3740860," Yeah. They're kind of interesting actually. Kind of close to go methods. But also a little bit more"
3740860,3749260," advanced, I think. So, here we have... Here we return scene floor 1 and scene floor 2. So, that means we"
3749260,3754300," need to also grab them from the JavaScript code. I mean, the TypeScript code. But I mean, the same shit."
3755020,3767020," Same shit. Right. So, this is a const. And this is going to be the caller. So, the problem here is that"
3767020,3773500," we are using normalized values in here, honestly. These are normalized values. We need to convert them"
3773500,3785980," to integers. Excuse me. Oh, Mr. Sammy, you're streaming for more than an hour. Time to make a small break."
3785980,3792380," Yeah. So, C3 is so much better than Zig that I just can't stop programming in it. It's just like I forgot"
3792380,3798780," that I need to make a break. That's what a good, actually good language does to you. So, yeah. Let's"
3798780,3803900," make some more break. Right. So, I think I'm also starting to lose my voice. So, yeah. It's time for a break."
3804780,3812780," All right. So, I'm back with my cup of piss. And, yeah. We just need to convert this stuff to, like,"
3812780,3819100," a proper colors and stuff like that. So, how are we doing all that? I could just try to do that manually,"
3819100,3826380," but it's kind of annoying, if you know what I mean. If you know what I mean. So, we can try to just grab"
3826380,3834860," this thing. All right. So, in here, I can just multiply it by 255. And in here, I also have to"
3834860,3842940," multiply it by 255. And this one is also multiplied by 255. Right. So, and I just, like, need to spend"
3842940,3848860," some time converting all that. Maybe you can use Python. Maybe you can automate some things with Python."
3848860,3854780," Look at that. Look at that. I can automate some things with Python. Can I just import math?"
3856140,3863260," Right. And it's just, like... So, do I have floor? Or is it part of the... Yeah. So, okay. So,"
3863260,3879660," it's a part of that math floor. Uh-huh. Math. Honestly. Honestly. Maybe I can do some, actually, much simpler,"
3879660,3892300," I said... Can I just map that stuff with floor? Tuple. Okay. So, what if I say that this is a list?"
3892300,3902780," Object has no... Ah! Yeah, yeah, yeah. So, you have to do map. Floor. Uh, math floor."
3902780,3913900," Sure. Sure. But, I mean, after that, I can actually do hex on this entire thing."
3913900,3915580," And then I can convert it to list."
3915580,3927500," Can your Zeke do that? I don't fucking think so. I don't fucking think so. I don't fucking think so. I don't"
3927500,3938620," fucking think so. I don't fucking think so. You know what I'm... Mmm. Ooh. What if I just create something"
3938620,3950860," cool? Like, uh, to RGB, which... RGBA. Which accepts a bunch of, like, components and stuff. And it just, like, you know,"
3950860,3959020," uh, iterates them. Like, 4x in axes. And in here, we simply do math floor. I could have used, like,"
3959020,3963020," least comprehension, actually. I don't know why I didn't do that. I didn't do that. And just hex."
3963020,3972140," Look at that. On top of that, we can even just multiply them to 155. And now I have two RGBA."
3973820,3984300," RGBA. And I can literally just grab this entire stuff. Convert it to a list. Put it in here. And it"
3984300,3993260," didn't do anything. So I suppose I have to print it. I see. So I think I forgot to return this entire stuff."
3993260,3996620," Yeah, that's what I forgot. So now I don't even have to print that."
4001340,4009100," So that's pretty convenient, isn't it? We're automating things with Python. So now what I have"
4009100,4015660," to do, I just have to get rid of the, of these things. Boom. And, uh, just replace that with curly braces."
4015660,4023020," Boom. Look at that. Isn't that a poggers minor friendly? So this was... No, that was basically that."
4023020,4031180," Yeah. So that's pretty cool. Pretty cool, I think. So that means I can now quite easily"
4031180,4042940," grab this stuff, turn it into a list to RGBA, uh, like so. Boom. Another one. And yeah,"
4042940,4052540," that is super fucking convenient, mate. Uh, right. So let's remove that. And that. And there we go."
4057100,4060860," That's pretty cool. Can your Zigg do that? Can your Zigg do that?"
4060860,4060860," Can your Zigg do that?"
4060860,4065420," Can your Zigg do that?"
4065420,4068380," Ah, so..."
4068380,4080060," Have you seen Mojo? Uh, yes, of course I've seen it. So people kind of stopped talking about it. Is,"
4080060,4088700," is it still a thing or is it already dead? Um, so... It's kind of funny how the hype around it like died out."
4088700,4093820," Like nobody gives a shit. Um, nobody gives a shit."
4093820,4100620," It was a shit. It was an internet meme. Ah, I thought that you're talking about the language."
4100620,4106700," You're not, you're not talking about language? I thought you were talking about language."
4106700,4114860," Or is that you're talking about like WatchMojo? It's that one."
4116300,4121820," Uh, right. WatchMojo."
4121820,4129900," Okay, replace this thing with that."
4129900,4139740," Mojo is infected with AI slope. I mean, it was specifically designed for making AI slope from the"
4139740,4148540," get-go. Like, I mean, you can't infect a virus. So... I'm not really sure what exactly you're talking"
4148540,4153500," about, right? It's just like, yeah, it is designed for making AI slope. Like, it's a language for AI slope."
4153500,4157020," Look at that! It compiles! Look at that!"
4157020,4163900," Okay, so we converted one function to, uh, C3. Now we can convert another one."
4164380,4173660," So it's going to be FN, uh, cola. Uh, right. So, and let's just put it in here. And this one,"
4173660,4183340," we can do some cool scheisse. I think. So it's going to be floor. Boom. Yeah. But when we're doing floor,"
4183340,4194220," does it make sense to... Yeah. Yeah, I think that's about it. Uh, right. So let's do make. And that seems to be working."
4194380,4201580," Cool. So we converted everything we needed in here. So now, as you can see, we take the floor tile,"
4201580,4209180," uh, which is going to be just color, right? So does that work? Uh, yep. That compiles. That is actually"
4209180,4214460," super cool. But what's funny is that we don't need to check whether it's RGBA or not. In this specific"
4214460,4223820," version, it is always RGBA. So that means we always do this, right? We always try to render it. So what"
4223820,4232780," we do in here is rather cool, right? So we are computing the index within the pixel array. So we take"
4232780,4242060," Y and we take the width of the buffer plex X and we multiply it by four, presumably because we, uh,"
4242060,4250220," address it by bytes, but now we can address pixels by pixels. So we don't really need to multiply it by"
4250220,4255420," four. So we can just keep it like that. So that's pretty cool. Um,"
4258620,4264220," So we also have a little bit of a shadow in here. Um, so I think for now I'm going to do,"
4264220,4272140," maybe I can just do that. So if I try to use the distance, I haven't checked if it compiles or not."
4272140,4276620," So I think the first thing I need to do, I just need to put int in here. Uh, let's try to see if it"
4276620,4284060," compiles. All right. It seems to be compound. Okay. So that's cool. Um, so now"
4286220,4293100," shadow, we take the camera position and we compute the distance to T. So, well,"
4293100,4302300," distance is basically T minus position, right? So multiply it by 255. And well, it has to be length"
4302300,4308540," essentially, right? So it has to be length. So now what we're taking, we're taking pixels"
4308540,4315820," and we're taking destination P and we're setting the floor tile to that, but we also want to multiply the"
4315820,4322940," shadow. The problem with multiplying the shadow is that, well, this one is rather interesting."
4322940,4332300," So we can actually do, uh, so floor tile X, maybe RGB. All right. So we're constructing RGB."
4332300,4340940," And I wonder if you can now construct a out of that. Is that something you can do like this?"
4341820,4346940," That's a good question, right? So, because as you can see here, I want to multiply only shadow by RGB."
4346940,4352140," So maybe it will work out. Maybe it will not. So let's try to compile it and see, uh, you know,"
4352140,4360780," completion errors. Okay. Shadow, it has to be float. That is understandable. Um, yeah. A float cannot be"
4360780,4365740," implicitly converted to char three. Understandable actually."
4365740,4376380," This one is rather interesting. So what if we, for now, uh, remove the shadow, right? Let's, let's just"
4376380,4383900," remove the shadow and, uh, do all of that stuff without the shadow. Uh, might as well just do, uh, floor tile."
4383900,4399340," And shadow is more like a fog actually for now. So it's more like a fog. Uh, so here, uh, it probably"
4399340,4407100," makes sense to actually have a separate scope because, um, specifically in here, as you can see,"
4407100,4411900," we're using the same variable, right? So we're using the same variable. So it's better to, you know,"
4411900,4419260," isolate them in a separate scope. So this is a ceiling, uh, tile. So we can actually do something"
4419260,4425660," like this. So this is a floor tile. This is the ceiling tile that we get in here, right? We don't"
4425660,4432460," care about whether it's a color or not. It is always a color. Uh, right. So in here, this is the"
4432460,4440300," destination for that specific thing. So let's actually put a separate scope in which we're going"
4440300,4450620," to be doing all of that. So we can even put the ceiling tile in that scope. Um, so yeah, so we don't"
4450620,4458380," have to do that stuff anymore. This one is just a width. Uh huh. This is integer destination"
4458380,4464780," shadow. We're going to keep the shadow as it is right now. Uh, and in here, we're going to just have"
4464780,4476140," pixels destination P it's a ceiling tile and I can just remove that. So something like this for now."
4477900,4484780," Yeah. And that means we successfully converted the entire function that renders floor. And it turned"
4484780,4492380," out much simpler. If you think about it, it is actually much fucking simpler to be fair in this"
4492380,4497980," specific, it's so goddamn simple that I don't understand why I don't just inline all of that"
4497980,4503900," shit because I can do this kind of stuff and just remove it. And I can also inline this kind of stuff"
4503900,4507100," and I just can remove the rest of the things in here. So"
4507100,4518620," the dynamicness and toyness of JavaScript, it just makes everything more complicated, right? When you"
4518620,4524140," have like a proper language, like you just, it's so much fucking simpler. It's just like simple"
4524140,4529580," arithmetic operations your CPU can do. All right. So you don't have to go through all of these hoops"
4529580,4533740," because it's a dynamic language and it's also trying to be noob friendly and it's also managed"
4533740,4541660," and stuff like, like, fucking don't. Like, I don't fucking know. Anyway. So you can also inline all of"
4541660,4546700," that stuff. And it's just like, it makes code like simpler and easier to read. It just, it just"
4546700,4554300," fucking does. It just fucking does, brother. Uh, all right. So what do we have in here? Um,"
4554300,4563180," what's funny is that you can kind of use the same shadow in here, right? Man, it's, it's a, the fact"
4563180,4569660," that you need to write so much code in JavaScript, it's a fucking crime. I swear to God. Like, what the"
4569660,4572620," fuck? Oh boy. Anyway,"
4575740,4584780," clean code, exactly. Exactly. Clean code. Um, clean Coke. Okay. So there's a compile. Let's actually see."
4584780,4591260," I think, I think it does compile. Uh, we can now try to render this thing, right? So instead of filling"
4591260,4597100," it up, we're going to do render floor and ceiling and we have to provide the camera, right? So how are we"
4597100,4603820," going to be providing the camera? So the camera is essentially, uh, yeah, it has a position. I can set the"
4603820,4609820," position to maybe zero, right? So something like zero, zero, the direction we also can set it to zero."
4609820,4615980," It doesn't matter. We need to figure out how to do FOV left and FOV right, right? So we need some code"
4615980,4624460," that computes them and that code is available within JavaScript code, right? So FOV left equal, or is it,"
4624460,4633740," um, yeah. So update camera. Update camera takes the player and just does all of these computations"
4633740,4640220," options. And I think this is something that we probably want to port in here. All right."
4640220,4649180," So update camera. So this is going to be void, a fan. Um, can I just make it a method? Camera, camera,"
4649180,4662780," update. Um, and yeah, so position. Let's actually don't do that. All right. So this is a camera. So we're probably"
4662780,4673340," accepted by that. Uh, right. So this is a half of a FOV. How often do I use that? So we use it in"
4673340,4677900," quite a few places. So it's going to float. Uh, so we need to know FOV now."
4677900,4686940," So we need to take the pie. Let's put it in here. So it's going to be float."
4691420,4701980," Uh, and where is the code that is responsible of the, yeah. Uh, this one has to be here. So we have"
4701980,4710540," FOV len, uh, now what I need to do. So we set in the position. Uh, so let's remove that. So the only"
4710540,4721100," thing we need to do in here is set polar, uh, do we have anything about polar coordinates in math"
4721100,4733500," specifically? Polar, um, and go, no. So probably one of the things we want to do in here actually is just"
4733500,4744460," like from polar, uh, and in here, we're going to accept angle and length. And the idea in here is that"
4744460,4754460," we just do math cosine angle, uh, multiply by len, uh, and this thing is supposed to return vector two."
4755180,4765580," All right. So, and math sine angle multiplied by len and just return this kind of stuff from polar."
4765580,4775580," Okay. So we can do camera, uh, FOV len, uh, from polar. I mean, I actually just like directly modify this"
4775580,4789260," and tapping. So we are creating from polar and then we adding the camera position like so. So that's what"
4789260,4797980," these things are. That's what these things are. I suppose cosine here has to be math cosine and that's"
4797980,4804620," about it. Do we need anything else? I don't think so. Let me see. There's a compile. Uh-huh. So something"
4804620,4810460," about at 90, which is understandable. Uh, one of the things we probably want to do actually, we want"
4810460,4817660," to create a camera, uh, camera like this. Um, we can just create a camera, I suppose, and then we can"
4817660,4826300," try to update it, which updates FOV and stuff like that. And then we can pass the camera in here. Um, so math"
4826300,4838540," math pi. Um, do we have pi in here? We don't. So math pi, it's more like math pi. All right. It compiles. And if"
4838540,4852620," we take a look at the output. Uh, easy peasy lemon squeezy, easy peasy lemon squeezy."
4856620,4870460," Look at that cheise mine fronde. Look at that cheise mine fronde. Look at that cheise mine fronde."
4870460,4881500," Okay. This one is rather interesting. So cause, um, it's a shadow, but it's also multiplied. So we"
4881500,4887180," need to import the shadow. I would like to really, uh, port the shadow server side rendering. I mean,"
4887180,4891420," it's going to be on the clients. Uh, right. So, because we're going to eventually compile this entire"
4891420,4898380," thing to WebAssembly. Um, well, so that's what we're going to do eventually. How much time does it take to"
4898380,4904700," actually do that? And I'm curious, but I mean, that time is going to include, if I just compare the time,"
4904700,4913500," it's going to include stbi_write_png. Uh, is this something to compare performance in C3? I wonder."
4913500,4920220," Um, honestly, to compare the performance, performance, we need to use"
4921100,4930460," this kind of stuff. All right. So let's use the same resolution that is used with, uh, within the, um,"
4930460,4942140," JavaScript game. Um, so we have, we already have width. So width is supposed to be an integer, integer,"
4942140,4949580," and it's just a factor. And the factor is 30. So since we're talking about like a proper language, we don't"
4949580,4958940," need to floor anything in here. Right. Nothing needs to be floored in here. All right. So what do we have?"
4958940,4967980," Uh, it's, um, yeah, it has to be a factor. It has to be a factor. Cool. So if we take a look at the final"
4967980,4974460," thing in here. Yeah. This is the actual resolution of the game to which we are rendering things. Uh, all right."
4974460,4982620," So, cause otherwise it's too, it's kind of too slow. Uh, and I wonder, do we have any like way to measure"
4982620,4996060," performance? All right. So maybe, um, let's grab, uh, RG vim grab, uh, performance. No, um, bench."
4997100,5005180," Okay. There's some stuff for benchmarking. Um, what I'm going to be able to do is to"
5005180,5012860," just measure some time, I suppose. So we have benchmarking. So there's a clock."
5012860,5018460," Right. So there's a clock. How do we even use the clock? Okay. So we do that."
5018460,5026220," System clock started, right? So, okay. So we are basically creating the clock. Uh, we then use"
5026220,5033500," sysclock started, uh, sysclock finished. Okay. So that is understandable. I don't really understand"
5033500,5041260," what the fuck is this shit. So what is that? Why does it have to be like this? Um, so sysclock, um,"
5044220,5059980," sysclock. Uh, so sysclock. It's a built-in functions. Ah, I see. Uh, I'm not really sure"
5059980,5066460," why we have to do this kind of stuff, but I mean, okay. So let's give it a try. Um, I'm going to go to the main"
5067820,5097180," sysclock. Uh, sysclock. Uh, and we can do something. Uh, that's, that's bizarre. How bizarre."
5098140,5107580," What the fuck are you doing? Alright. Uh, your print n, uh, so finished minus"
5107580,5113580," like this. That's what I want to do. I just want to see how quick it is."
5113580,5123420," And what is that? Is that milliseconds? It's probably not milliseconds. Is that microseconds or nanoseconds?"
5125100,5130780," Milliseconds? Well, I mean, that's, milliseconds is a thousand. So that means it's took, nah, I don't"
5130780,5140540," think so. No, I don't think so. So let me actually see how we use this stuff. Uh, so sysclocks,"
5140540,5149420," uh-huh. So sysclocks define benchmark. It's a nanoseconds because it's a freaking nanoseconds."
5149420,5158140," All right. Interesting. Interesting, interesting, interesting, interesting. So a nanosecond,"
5158140,5164780," that's a lot actually. Um, so, so this is,"
5167020,5175420," right. Milliseconds. Um, so one, two, three, one, two, three, one, two, three,"
5175420,5182380," something like that. So that's what we want to do in here. Um, so conversion to double,"
5183340,5190860," explicit conversion to double. Do we, can we just do F? Um, oh, okay. Double."
5190860,5195980," Okay. Fair enough."
5202220,5207740," Below 16 milliseconds. Below 16 milliseconds. Still kind of slow, honestly."
5207740,5214700," I would expect it much faster. Yeah. No optimizations. Let's actually enable some optimizations."
5221260,5230460," Okay. That's much better, I think. Um, yeah, that, that's much better. Damn, bruv."
5230460,5243900," Optimization go up to 05. Jesus. Okay. That's. All right. So, uh, how aggressively can you optimize shits?"
5243900,5253100," Uh, all right. So we've got that. That's actually reasonable. That's, that's pretty good. That's pretty good."
5253100,5264220," Alrighty. But we haven't even introduced any shadows yet."
5268620,5275580," We haven't introduced any shadows. So why do I pre-multiply it with 255? I'm kind of sure. Um,"
5275580,5281900," yeah, this is probably because we're, uh, multiplying it. So let me take a look at the"
5281900,5293100," render floor and ceiling. So, yeah, I multiply this. Ah, I know why."
5294140,5300460," I actually know why. Because this thing is normalized. So, okay. That, that makes sense."
5300460,5305340," Sure. Sure. So then have to pre-multiply it by 255. Right. So the only thing I need in here"
5305340,5312220," is just the distance. Um, and it don't even normalize it or anything. So just like used as this."
5312220,5320780," Um, I could simply use it like so, but I'm not sure how convenient that is."
5321580,5324060," Honestly, I'm not sure how convenient that is."
5324060,5334220," So because like it, it requires conversion between chars and floats and stuff like that. So it's kind of"
5334220,5343020," meh. Uh, right. So it's kind of meh. But we need to do that to replicate the image exactly. Yeah. Okay."
5343020,5351660," So that's what we have in here. Can I explicitly cuss this entire thing to, um, just, you know,"
5351660,5363580," chart, uh, float for? Is that something I can do that will actually work out? Um, so cannot be implicitly. Okay."
5363580,5372060," So that's understandable. Uh, because we're then trying to assign it back to chars. Uh,"
5372060,5378300," and this is char four. That is understandable. So we're just going through the sequence of casts."
5378300,5384780," Uh, all right. So that's cool. And if you take a look at this, it kind of works. Okay. So that's"
5384780,5390380," fine. So the, yeah, the middle one is kind of weird, but we can just fill up everything with white color"
5390380,5395740," and it's going to be fine. So this is literally how the game looks like actually. Right. So if you bring"
5395740,5403180," the shadow, it's more like a fog, actually, it's not really shadow. Um, right. So, so it's a fog."
5405740,5422300," Uh, it's a fog. And on top of that, I can basically do for each pixel, uh, pixels, uh, pixel 155 to 55,"
5422300,5432460," like so. So if I try to do something like this, we're casting now, boys. Yes. Look at that. Oh,"
5432460,5438060," we didn't fuck. What the fuck is good. Why is it still, does it still have this shit? It's something"
5438060,5445100," uh, overflows in here, in there. I swear to God, something really fucking overflows. Uh, and I'm not"
5445100,5454380," ambison sure. Uh, something also with alpha. Um, so alpha maybe, maybe it's something with alpha."
5454380,5462300," So how are we going to be approaching this entire style? Because what I want to do in here,"
5462460,5470860," is maybe take RGB a, uh, RGB, just multiply only RGB. Uh, but that just means this thing has to be"
5470860,5479180," three. But then how do I convert all of that stuff to, um, to this stuff? Like, I don't really know how"
5479180,5486620," swizzling exactly works in C3. So let me see. Uh, maybe if I was a graphics programmer, I probably could"
5486620,5490940," guess because maybe it's implemented in an intuitive way for graphics programmers, but I'm not."
5490940,5496620," So I don't really use swizzling that often. So let me see some examples."
5499100,5505580," So, yeah, that's understandable. That is actually understandable."
5505580,5510460," I don't know. I don't know."
5510460,5521820," Because, yeah, so I just want to do that. So I'm also casting it to that. But afterwards,"
5521820,5531260," I kind of want to convert it to, like, to, yeah, 255 and 255, something like this. Well,"
5531260,5535580," wait a second. I can actually do that slightly differently. Uh, let's actually take a look at"
5535580,5543180," what the compiler will say. Yeah. So you're trying to, you convert, uh, the vectors of different sizes,"
5543180,5549900," which is meh. All right. So if I try to convert the same sizes, it says that you can't assign char"
5549900,5557660," three to char four, but then can I say that, okay, so just create a extra vector in here. Is that something"
5557660,5566700," I can say in C3 programming language? Are you fucking serious? So is this really something I can say?"
5573340,5580300," Hey, apparently I can. So it's pretty cool. Oh, yep."
5580300,5592540," So let me, let me see. Oh, well, at least there's no middle thing in here, but now I kind of understand"
5592540,5599900," what's going on here. It's definitely overflowing. It is 100% overflowing. Question is, how can I"
5600860,5608620," not oversaturated? Right. So how can I clamp it? So there should be a way to clamp it. Uh, clamp,"
5608620,5618140," clamp, clamp, clamp, clamp, and yeah. So clamping, as you can see in here, accepts another,"
5618140,5625020," yeah, another vector. So it has to be a vector if you want to clamp it."
5628860,5645980," It has to be a vector. We can try to do that. So this is that clamp, um, also if I want to create like a vector, um,"
5645980,5655660," from a single component, how can I do that? Um, that's the, that's the real question, right? So if I have a single component,"
5656460,5660460," what's the easiest way to do that vectors? Uh huh."
5660460,5673260," So there is math sums within array like operations. Oh yeah. Because what essentially I want to do"
5673260,5684940," is just, yeah, that might be a good idea. All right. That might be a good idea. So 255. So zero, um,"
5685740,5694220," zero, X, X, X, X, X, right? So we can use RRR or X, X, X, right? So it doesn't matter. Uh, and then 255,"
5694220,5700060," which is also X, X, X. All right. So that's how we're clumping. We're clumping boys."
5700060,5711580," Doc says four. Ah, so that means I can just do that. All right."
5713660,5724460," Uh, that's pretty cool. I can't do that. So integer cannot be float. Though if, what if I say it's a float?"
5724460,5734540," All right. So it's a float now. Ah, how soon do you have to do it like that?"
5736140,5743820," Uh huh. You can't cast float to that. Understandable. But now, uh, what if I say,"
5743820,5749900," X, X, X, are you going to be happy now? Uh, untyped list. Okay."
5752940,5761740," Untyped list, untyped list. So one of the things we can do, actually, we can do maybe something like float"
5762300,5774780," three low, right? Which is that, and three high. And maybe that what we can do. Um,"
5774780,5779100," low, high."
5784060,5791180," I mean, it's understandable, but I would like to be able to just inline this kind of stuff. Um,"
5791180,5798940," I would like to be able to just inline them, but I guess that's fine the way we do that."
5798940,5802540," It's fine the way we do that."
5808540,5810860," All right. So let's take a look at what we have."
5810860,5812300," Okay."
5812300,5823580," Look at that. Look at that, motherfucker. Look at that. Look at that. Look at that. Look at that,"
5823580,5828780," motherfucker. Look at that. That's very cool. First try. Exactly. First try."
5828780,5838380," Purified image. Purified image. So that's, that's actually super cool. I'm really happy with what I see."
5838540,5849100," I'm super happy with what I see. Oh boy. Oh boy. Okay. So yeah, now we probably want to try to compile"
5849100,5855100," this stuff to WebAssembly and see how it fares in WebAssembly."
5855100,5863180," Um, time to compile to Wasm. Exactly. Exactly. But I'm already staying for two hours. So I'm sure if I"
5863180,5877900," want to really go that much over time. So yeah, because, so what, what it will take to compile to"
5877900,5883820," WebAssembly and integrate it into the game. Right. So because I want to, in a single episode, um,"
5883820,5889420," right, not only compile to WebAssembly, but also integrate it into the game. So the game actually"
5889420,5895740," uses, uh, the, like WebAssembly module. So it feels like another two hours, honestly."
5895740,5902060," It does in fact feel like another two hours. So, and I'm currently still sick a little bit."
5902060,5906860," So I don't really want to push myself too much on that. So the idea is going to be the following."
5906860,5912220," Right. So we're going to split it into two episodes. I'm going to continue this stuff tomorrow. Uh, right."
5912220,5917820," And then on YouTube, I'm going to upload the concatenated single episode where we go from"
5917820,5923660," nothing to this module to be, being integrated. I'm sorry. I'm sorry. It's difficult for me to"
5923660,5931180," actually go for a very long time. Right. So I'm, uh, like week after, after the sickness. So yeah,"
5931180,5937500," I guess I'm going to call it a day. Uh, thanks everyone who's watching right now. I really appreciate it."
5937500,5941420," I have a good one. And I see you all tomorrow. Tomorrow we're going to continue. We're going to"
5941420,5946220," compile this entire stuff to WebAssembly. Right. And then we're going to integrate it into the main"
5946220,5952220," game. So the main game uses combined render. Um, right. So first we're going to do the first pass"
5952220,5958940," by calling the WebAssembly module to generate the walls. And then the second pass is going to generate"
5958940,5963740," of the ceiling and floor. And then the second pass is going to add the rest of the things. And that will"
5963740,5972940," actually enable us to incrementally move things from JavaScript into the WebAssembly. Right. Incrementally."
5972940,5980140," So we are basically preparing everything for slow, uh, incremental rewrite. So that's the plan, basically."
5980140,5986780," All right. Thanks everyone for watching. Uh, love you. All right. This is the next day. And let's actually"
5986780,5994140," go ahead and try to compile this entire application to, uh, WebAssembly. Oh, by the way, I never actually"
5994140,6000220," tried, uh, a very interesting thing. So as you can see, now it generates the, um, you know, the camera"
6000220,6007660," in this particular position, but we can actually rotate it. So if I set the direction to, uh, to something"
6007660,6015980," else, uh, right. So add direction, that's what I want. Emacs. Are you okay? Uh, all right. So I can"
6015980,6025740," actually set the direction. Maybe I can even save this entire thing. And then if I do C3C compile, uh, compile"
6025740,6035020," run main, uh, C3. Um, right. So it doesn't, oh yeah. Yeah. So I have a make file. Right. So I have a make file."
6035020,6044460," Okay. All right. Okay. There we go. It's still don't understand why the fuck it does that. Uh,"
6044460,6049500," but that's what it does. And, uh, now, yeah, as you can see, I can actually rotate a little bit."
6049500,6057500," Right. So, uh, I can control the camera and I can, I can actually render at different angles and stuff"
6057500,6063260," like that. So this is actually kind of cool. I think, uh, this is actually kind of cool. So, um,"
6063260,6070060," yeah, we need to finally, uh, you know, compile this entire thing to web assembly. So we have a"
6070060,6075660," little bit of a code related to web as like, is it going to go into keep all these old files in here?"
6075660,6083980," Uh, right. Can you just like, I think it, it actually like yesterday, it sucked them up, uh, into,"
6083980,6090060," into the executable. Right. I don't know why it keeps creating them right now because usually it creates"
6090060,6096460," them when it, okay. So I think maybe it's something from the, um, you know, uh, from some sort of a"
6096460,6106700," previous failure or something like that. Uh, anyway, so in C3, uh, right in C3, uh, C3 demos specifically,"
6106700,6116700," we have, uh, some command line things that would be helpful to, uh, to compile all of that to web assembly."
6116700,6122220," So let's actually go ahead and introduce all of that. So, um, of what I'm thinking,"
6122220,6127500," so we're going to have something like all, which is going to be output PNG. And let's also introduce"
6127500,6137180," something that, uh, creates a main dot wasm, right? And main dot wasm depends also on main C3 and to create"
6137180,6145900," main C3. Um, right. Is it main? Yeah, it is main. So in here, what we're going to be doing is essentially"
6145900,6155980," creating main from main C3. So we have a lot of flags in here, right? Uh, and, uh, one of the things they do,"
6155980,6162620," by the way, they instruct to not link with any of the libraries and to not have any entry points or anything"
6162620,6169900," like that. So I think it's not going to work because, um, our current application in its current form"
6169900,6176140," does have an entry point, by the way, and it uses standard library and it also links with the C code."
6176140,6180860," None of that is probably going to be easily compilable to wasm, but that's totally fine as"
6180860,6186380," of right now, because I want to see the compiler fail. So then I know how to fix all of these things,"
6186380,6190780," right. So let's actually go ahead and try to compile, uh, this entire thing. So we can try to"
6190780,6197740," maybe create main dot wasm specifically. And there we go. So no module named IO could be found, did you"
6197740,6206700," type name, right? Okay. So basically it cannot actually link with all of that. So, uh, interestingly,"
6206700,6215340," there is conditional compilation in C3, if I'm not mistaken. So let's actually take a look at some of the"
6215340,6220700," the stuff within the standard library in here. Uh, so I remember there was a, some sort of like a"
6220700,6230860," macro or something like that, like at if that they would use. Yeah, there you go. So basically you can"
6230860,6239340," include or not include a certain in entire module, right? Uh, upon having some sort of a variable in"
6239340,6245260," here, but this is specifically module. I wonder if there's something that, um, you know, can you,"
6245260,6255340," like not import certain thing, right? Okay. So you can slap if at the definitions. I'm really freaking"
6255340,6262140," curious if you can do that on imports, right? So is there something like wasm, um, wasm no lip C."
6262140,6270220," Aha. This one is interesting. So there is a wasm no lip C. Um, so maybe,"
6271980,6282220," maybe that's what we can do. Uh, so, but the thing is, um, I think is we here disabled not only"
6282220,6291820," lip C, we disabled also a standard library. Maybe one of the things we can try to do in here is in fact,"
6293500,6301820," enable standard library, but do not enable lip C. That's a very interesting thing that we can try actually"
6301820,6311100," chat, chat, chat. Is that an interesting thing we can try? Right. So we're using, um, standard library,"
6311100,6316460," but we're not using lip C and all of that is web assembly. I think the last time we tried all of that,"
6316460,6321500," it didn't really work, but this is because I was using the, um, you know, the stable release,"
6321500,6328780," right. So here I'm actually using the bleeding edge. Uh, right. So, so let's actually go ahead and try"
6328780,6336780," this. Um, assuming non-posex environment. Okay. And it worked. It probably generated like a huge,"
6336780,6342540," well, I mean, it's not really that huge, but I mean, 45 kill, but, uh, why did it fucking work?"
6345660,6361420," I think I know why. Wait, damn, bruh. So we have some external shit. It probably now expects this"
6361420,6373180," external shit from JavaScript. I swear to God. So now we should, it probably all means that what we have to do"
6373180,6381020," now is basically provide our own implementation in JavaScript for this function, which is not that"
6381020,6388380," hard, honestly. Uh, right. So, which is not that hard. We can basically grab the pixels, right. So, and just"
6388380,6394860," like save them somehow. Uh, I'm actually surprised that this entire code compiles to WebAssembly without any"
6394860,6403020," modifications. That is pretty cool. All right. That is pretty cool. Okay. Okay. Okay. So I, I can"
6403020,6409820," fuck with that. So, uh, wasn't to what, so let's do wasn't to what, let's actually, um, you know, generate"
6409820,6416300," some text in here, uh, some text in here. We probably want to do that, uh, in make file. So let me see main"
6416300,6424780," what wasn't to what, and what we're going to do is going to be wasn't to what. So main wasn't, we're going"
6424780,6433980," to redirect, uh, main what, and, uh, let's do make main what, uh, right. So, and let's take a look at what we"
6433980,6450780," have in here, uh, stb, uh, fascinating. So do we have like a main function? We don't even have a main function."
6450780,6459100," I think I know what the fuck is going on in here because we never exported anything in here."
6460380,6470140," Anything was ever fucking exported. What is what? It's a WebAssembly text, right? So it's a textual"
6470140,6475580," format of WebAssembly. If you ever wondered how WebAssembly looks like, this is WebAssembly,"
6475580,6484380," and this is specifically WebAssembly, uh, text. You can even program in this language. We even did that"
6484380,6490060," on the stream. We even did that. So like manually programming, and it's not that hard. It's actually"
6490060,6499180," easy than X8664 assembly. Because it's just a stack machine. Uh, it's a very simple stack virtual machine."
6499180,6510700," Um, so yeah, so there is a vprintf. I wonder how, does it export any functions? It exports memory. It"
6510700,6519740," exports, uh, some, that's the only things that exports. So what does it import? Um, okay."
6519740,6526060," So I have a feeling that a lot of the things got optimized out because we never exported them."
6526060,6535500," One of the things we can try to do, we can just say, uh, you know, export, uh, or maybe extern."
6535500,6542860," Is it extern? I think, I don't remember which one it was because, okay, so let's take a look at the C3 demo."
6543660,6553020," Uh, one more time. One more time. Uh, where is the demo C3? So some of the functions, yeah. So"
6553020,6559580," extern, main. Okay. So this is what we can work with, I suppose. This is what we can work with."
6559580,6566700," Maybe I can even put that into the main in here. Look at that. Okay. So let's try to make, uh, this entire thing."
6568060,6575340," Okay. Now we're fucking talking. Finally, it did. Okay. So it didn't. All right. All right. All right."
6575340,6578940," All right. All right. All right. All right. Understandable. Fucking understandable."
6578940,6587980," Fucking understandable. But at the same time, we want to be able to use the math module, right? So from C3,"
6587980,6594620," because it's kind of convenient. Finally errors. Exactly. Exactly. It's kind of convenient. So, um,"
6594620,6599580," I can get rid of these errors if I just say, okay, we're not using standard library, but the standard"
6599580,6605740," library is kind of convenient because in the standard library of C3, uh, we have such module as math,"
6605740,6613980," right? So if you find a file with the name main, uh, right? So something like this, uh, this is not how"
6613980,6622220," it works. It's not main, it's math, right? So it's math. Uh, right. So it's actually find file at that."
6622220,6627180," So this is actually rather convenient. I would like to actually keep it and I would want to be able to use"
6627180,6636380," that in WebAssembly. So maybe what we can do, we can instruct the linker to not give a shit about undefined"
6636380,6643500," functions. That's one of the things we can do. Isn't it interesting? I think, I think that's kind of"
6643500,6649420," interesting. So this is something that we did in Olivets, uh, right? So, uh, let me take a look at"
6649420,6655500," Olivets. But for those who doesn't know, Olivets is just like a, uh, simple 2D graphical library. Uh,"
6655500,6660860," right. For some reason, people are extremely fascinated by this library. I think it's one most"
6660860,6666620," starred library and I don't fucking understand why, because it's so fucking stupid. It's the stupidest"
6666620,6673740," library I've ever implemented. Um, and technically there's nothing particularly impressive about this"
6673740,6680780," library, but for some reason people are just like insanely fascinated by that. So yeah, I don't understand."
6680780,6688860," So this is one of the problems that I have as a content creator. A lot of things that I find interesting,"
6688860,6694780," actually deep and insightful, people don't give a shit about that. Some boring ass shit that is kind"
6694780,6701180," of trivial, people get fucking crazy about it. And I like, it's, it's not like that I think that people"
6701180,6707100," are stupid or anything like that. Like I personally don't care. It's the problem that I don't have an"
6707100,6714300," ability to predict what's going to be popular among those people. Because I have a huge gap in what I"
6714300,6718780," consider interesting and what they consider interesting. It's not like, okay, oh, they're,"
6718780,6723820," they don't understand me or anything. It's just like, I lack an ability to predict what's going to be"
6723820,6731020," interesting for the majority of the people. That's what bothers me actually, right? Um, so yeah, for some"
6731020,6740860," reason this piece of shit is popular, so whatever. And in, in here we have, um, I think a way, uh, to compile"
6740860,6748060," WebAssembly things, uh, and also instructing the linker to ignore undefined functions. So I'd like to"
6748060,6754700," maybe steal a little bit of a code from here. Um, so I think the name and the logo are the least, uh,"
6755260,6760380," the least part of the success or at least part of the success. No, I don't think so. People don't"
6760380,6769100," really talk about the logo of this project that much. Um, so, excuse me. Um, so let me, let me see."
6769100,6778860," Where do we compile these things? So there should be wasm. Yeah. So built wasm demo. So there is a"
6778860,6786860," function built wasm demo. Where is it defined? Here is where it's defined. So in here we're using"
6786860,6794460," target. We say no standard libraries. No, no, no, no, no, no. So then we, uh, exporting, uh, a certain"
6794460,6798780," function, but we, we do that through the linker because the language itself, C language, doesn't"
6798780,6806140," enable us to export certain functions. So this is the most interesting flag that I'm after, right? So allow"
6806140,6813340," undefined. So I think what we have to do, we have to pass this flag to the linker, uh, through C3 and"
6813340,6819020," it will actually allow to have, uh, undefined functions, right? So let me, let me see where"
6819020,6826540," is my make file. Um, so this is a floor and ceiling, um, and to, to pass, uh, to a linker, we have to use"
6826540,6832060," the Z flag. Or as you can see here, we have Z and this is the expert table and Z and allow undefined."
6832700,6838380," Okay. So let's try to recompile this entire thing and see if it's going to work or not, right? So"
6838380,6845660," hopefully it is going to work. Um, there we go. So it worked. Essentially, if I understand"
6845660,6852700," correctly how exactly it works, it basically allows you to specify undefined functions."
6853500,6859580," That's what it does, right? So, um, if one of the functions are undefined, you have an opportunity to"
6859580,6865260," supply the implementation for these functions via javascript. So, and this is precisely what the woman"
6865260,6870620," here actually, uh, this is precisely what one. So we can even take a look at the, what, uh, yo, that's"
6870620,6876700," look at the text. It's almost like a megabyte, uh, right? It's a half of a megabyte actually, right? But"
6876700,6883340," still, um, yeah. Okay. Look at, look at, look at that. Isn't that beautiful? Right. So we're"
6883340,6890780," exporting fmodifminfmax, precisely everything that the link was complaining about and also stbi image png,"
6890780,6897260," which is exactly what I was talking about. Right. So this module just expects us to supply"
6897260,6903980," all of these, uh, all of these, uh, functions through javascript. Uh, right. Uh, so, and this"
6903980,6909180," is probably exactly what we're going to be doing right now, I suppose. Uh, so does it, uh, yeah, it"
6909180,6916780," exports, it exports memory and it exports main. That is very fucking cool. That is insanely cool. I really"
6916780,6923980," like that. Uh, anyways, so let's maybe create like a, I don't know, index.html, right? So let's create"
6923980,6930380," the index.html. Let's do a little bit of a HTML programming. Do we have any HTML programmers"
6930380,6936060," in the chat? HTML is the programming language of the future. Am I right, fellow programming humor"
6936060,6944300," subredditors? Isn't that funny joke? I'm sorry. Uh, so, uh, let's, let's do HTML."
6947100,6960460," funny joke. HTML programming language. Ah, so fucking funny. Ah, guys, I'm programming in CSS. Oh,"
6968060,6983980," so fucking for all write the website in assembly ah ha ha ha ha ha ha ha ha ha ha ha ha ha ha ha"
6983980,6988300," tilt yeah"
6992060,6999420," so now what we have to do uh we have to have like a js file i suppose we need to have a js file"
6999420,7007020," all right so let's do a little bit of a console hola and here i'm gonna say hello world"
7007020,7019020," hello world script src index j s all right oh"
7021500,7031420," book we are doing web assembly which means that we'll have to have uh you know the the web server"
7031420,7043580," and so yeah uh let's use python python 3m http server 69 or 69 uh let's go so do we have in here"
7046140,7053340," excuse me uh okay so here's the hello world uh right so and it tried to load a favicon and uh it"
7053340,7059900," didn't work on this one all right so uh what do we need to do in here we need to load the web assembly i"
7059900,7067260," think i can um actually steal some stuff from olivets um i probably want to actually put that in the"
7067260,7075020," references because this is one of the things i was using um right throughout the development right"
7075020,7082780," throughout the streams uh so i'm gonna actually put this stuff in here right so because i think it is"
7082780,7085100," important for people to know about this entire thing"
7087340,7097420," so in olivets um so here's the index html and i where is the javascript is the javascript located"
7097420,7104940," somewhere in a different place i think oh okay so there's a vcjs right it's a it's a virtual console"
7104940,7112380," if i'm not mistaken right so and oh yeah here it is so here's the javascript and here is the v virtual"
7112380,7118060," console.js so this is a very important function make environment we'll need it at some point it"
7118060,7123820," basically creates a proxy and allows the undefined functions still work um right that's kind of"
7123820,7131580," important the first thing we probably want to do is instantiate streaming right so we want to do web"
7131580,7137740," assembly instantiate streaming and we want to fetch the web assembly path and also make environment and so"
7137740,7143900," on and so forth uh in fact i think i'm going to just grab this entire thing and maybe put it somewhere"
7143900,7150780," here uh right so that's a way to work at top level does anybody know or do you have to do something like"
7150780,7160780," a sync uh right some shit like this and actually rub this entire thing like that so um so i don't know"
7160780,7167980," well let's actually do that otherwise right so let's put it in closure and so here we're making an"
7167980,7173660," environment and i might as well actually just demonstrate uh the reason why you need to make"
7173660,7179980," environment right so i'm going to create an environment absolutely empty so the wasm path"
7179980,7186300," is going to be equal to main wasm right so and after the uh web assembly module has been loaded we're"
7186300,7194460," going to just basically print that a web assembly module right okay so do we include this entire"
7194460,7201260," thing through yeah that we do include that okay let's go uh let's refresh this entire choice uh okay"
7201260,7208540," so this is what i'm talking about f mod function import requires a callable right so you have to specify"
7208540,7216140," the implementations of all of the functions now right so f mod of uh f max and also stb image and so on and"
7216140,7225500," so forth one of the tricks that i'm using all the time is using this special function make environment"
7225500,7229980," so essentially it takes uh your environment it takes the object that is supposed to provide the"
7229980,7236620," environment and wraps it into a proxy so essentially if the web assembly instantiator tries to get as"
7236620,7242940," like any function it tells it that this function exists but then it sort of like polyfills it with a"
7242940,7249500," thing that throws an error not implemented so which is rather convenient so especially if you have lots"
7249500,7253820," of undefined functions you don't want to define them all you can actually wrap this into a proxy and only"
7253820,7259980," implement the ones that are used at runtime they don't have to be even used at compile time just like"
7259980,7265020," whatever is used at runtime you you can uh you know provide only them the rest of them are going to be"
7265020,7271980," basically pull the field with not implemented so it brings the compilation errors into runtime uh sort of"
7271980,7278940," speak if that makes any sense uh so now i can just say make environment right and environment uh like"
7278940,7285100," so and it should instantiate the web assembly module uh there we go so we instantiated the web assembly"
7285100,7291660," module so and we have a bunch of experts in here and here are the things that are exported it's the main"
7291660,7298460," function the memory and some other that is provided by llvm so the thing that we want to call in this"
7298460,7304300," specific case is probably main function right so by calling it main we basically execute the program"
7304300,7310460," so let's go ahead and try to do that so it's going to be instance right so w instance experts"
7311260,7319580," uh experts and main and we are calling the function so uh what probably will happen it will first of"
7319580,7325100," all generate the image in its own internal memory and it will probably call to one of the functions"
7325100,7331900," like fminf and fmax and so on and so forth and that will crash there so we'll have to implement those"
7331900,7341180," functions um right there we go so it actually called many times so this is very bad so in case of"
7341180,7347020," not implemented function it just logs an error i think one of the things we want to do in here"
7347020,7355660," actually is throw a new error like this that's probably what we want in here right so uh we can"
7355660,7362540," say prop uh write something like this so here's the properties and here's the arguments that were provided"
7362540,7368140," so basically it will stop at the first one right so let's just throw this entire thing like so"
7368940,7375820," uh right so let's refresh this entire stuff oh my god it keeps actually piling them up"
7375820,7383900," freaking browsers like and it's impossible to stop this like i'm telling"
7383900,7392300," it refreshing though i i need to dump them all i can't stop i need to dump all of these messages first"
7394620,7406780," stupid web i swear to god"
7406780,7410780," i i just i just freaking counts"
7410780,7417340," all right let's take a look this is exactly what i want you to write so it crashed"
7417340,7422300," uh crashed crashed on f motive right so let's go ahead and implement this function right so let's have"
7422300,7429260," f mode uh right f mode uh and it's going to accept i suppose just like x and y"
7430060,7438620," uh all right so and in here we can probably do something like this right so let's go for minf uh very"
7438620,7452380," easy minf uh i might as well even say okay math mean uh anything else max okay so this is gonna be uh max"
7454140,7466060," uh what else oh this is cool unreachable put char it's trying to print"
7466060,7479100," unreachable"
7479100,7492700," let's go into the standard live i suspect some pisa scheissung i suspect a pisa scheissung vimgrep um put char"
7495340,7499180," i i i i can smell some pisa scheissung"
7499180,7503500," smell it smell"
7503500,7508460," where is it"
7508460,7518380," okay um"
7522380,7527660," yes yes so it actually goes through the lipc to just print so"
7527660,7537260," uh so and we're not linking with lipc right right right right right"
7537260,7551740," so the c3 wasm is already an a stable feature i don't think so actually but i mean we don't care c3 is"
7551740,7552940," not a stable feature"
7552940,7562460," talking about stable features while talking about c3 uh statically linked musel i mean musel calls to"
7562460,7564940," linux sys calls it doesn't solve any of the problems"
7564940,7576860," so it's not about that why does it use put char that's the real question so"
7578940,7587580," uh because we use a friend vprintf so yeah i see i see you do do we actually output like characters"
7587580,7591740," somewhere in the code in that code"
7594140,7599900," um um oh we probably yeah it's you probably uses put char specifically for apps and some other"
7599900,7611020," shit okay so when we do printf honestly honestly can i just say fuck you leather man and just like"
7611020,7620860," comment out all of that stuff i'm pretty sure i can i can do that so let's do uh make so here we're"
7620860,7631260," generating everything okay so let's just do make so why did you fail mother flipper program linked main"
7631260,7644060," error 34. are you okay my friend what the is that what the is that all right so i'm gonna just only uh"
7644780,7653660," make wasm make wasm all right yeah there we go so let's refresh this entire thing and uh that's it so"
7653660,7661580," it just worked it just worked but i think one of the things we need to do in here is actually try to call"
7661580,7671900," stb uh write png right i think it's it makes sense to do that uh so let me actually remake a main dot wasm"
7671900,7674380," right so and i'm going to try to refresh and look at that"
7674380,7679500," we got stb write png call"
7679500,7695260," you know what we can do on that call we can grab the bytes of the image that were generated within the"
7695260,7703580," web assembly and put them on the canvas put them on the canvas so the program thought very naively"
7703580,7709900," that after calling stbi write png it is going to save the image to the file system but we tricked it"
7709900,7715420," fucking tricked it we're gonna take its pixels and we're gonna put them on the screen"
7715420,7717740," in the web instead of the file system"
7717740,7728140," uh so that's what we're gonna do so that that's my plan actually that's my plan um so let's go ahead"
7728140,7737900," and do that i think it's gonna be interesting so we shut up um uh all right so let's do a canvas"
7739020,7753740," uh let's do a can as can in the s uh so this is going to be canvas a scam scam scamness so we're"
7753740,7759820," going to put in here i suppose it's going to be game right so this is going to be came this game uh right"
7759820,7771900," and uh let me go into the index js and here documents get elements uh by id game right so here we're gonna"
7771900,7781660," do game uh like this and i suppose if game is equal like null or something we're going to throw an error"
7782540,7795260," uh all right no um canvas with id game was found like this maybe to save little space i'm gonna create"
7795260,7807980," a single line uh and then we're gonna do ctx right so ctx equal to game uh get context uh 2d right so to just"
7807980,7815020," make sure that everything works as expected i'm going to print the context right so here is the"
7815020,7831980," context we've got the canvas rendering context 2d 2d that's oh so and in here uh let's go ahead and just"
7831980,7840220," implement the whole thing so essentially every time the web assembly module calls sdbi right a png we're"
7840220,7845900," going to be just like updating the canvas right so that's going to be basically the idea hopefully we'll"
7845900,7855980," see how it goes all right so um what's the signature of sdbi image right so we have these kind of things"
7857100,7865420," these kind of things so we have file name right we have w and we have h we have amount of components"
7865420,7872220," we have the pixels which is the data and striden bytes right so one of the things we can do in here"
7872220,7881420," i think is that we can take the canvas of uh this entire thing and set its width and height to whatever"
7881420,7890300," was passed uh through stbi right png so for now i can just do something like through uh error uh to do"
7890300,7895260," right so it's not implemented yet but one of the things we can do we can just resize the canvas to"
7895260,7902620," the size that was set um you know from within the web assembly module uh so let's go ahead and refresh"
7902620,7907660," the entire thing and one of the things we can take a look at we can take a look at the size and the size"
7907660,7915100," is actually 480 and 270 which is exactly the size of the image that is generated by web assembly module"
7915100,7921660," right so we can even confirm that by taking at the size of that generated image so here it is here is"
7921660,7929500," exactly the size so we're correctly receiving the information from the stbi uh write png call all"
7929500,7935500," right so that's pretty cool uh the next thing we need to do we need to now get an access to the to the"
7936540,7945020," pixels right to the bytes of the pixels they are located in the web assembly memory at that specific"
7945020,7951500," pointer right they're located there so we can even do something like console log data and just you know"
7951500,7957500," yeah just print that pointer just freaking print that pointer can i just do something like console that"
7957500,7963020," yeah there we go uh so here's the pointer so somewhere here at that specific place in the memory start the"
7963020,7969580," pixels of the image um so how can we get the access to the memory i think"
7969580,7979180," we can use vc.js from olivec uh olivets and just see how we do that because we access the memory there"
7979180,7986940," all the time uh but i'm not sure how exactly we do that so here is the buffer okay so here is the buffer"
7986940,7993180," and buffer look at that look at that so we take the web assembly instance we take its exported memory and"
7993180,8000060," we're taking the flipping buffer we're taking the flipping buffer okay so let's go ahead and do that"
8000060,8007660," so that's how we getting an access to the memory uh right so i can put it somewhere here um and then"
8008700,8016620," what we can do we can create u8 clamped array out of that providing the buffer and its position and its"
8016620,8022460," size and so on and so forth i think this is precisely what we want in here so this is exactly the code that"
8022460,8030700," we need not the code we deserve but the code that we need right so here's the buffer um so this is the"
8030700,8040700," pointer and this is basically the size uh all right so h multiplied by four maybe multiplied by the amount"
8040700,8047020," of components do we provide the amount of components in here i'm pretty sure we do uh yeah so this is"
8047020,8052380," what we can do so width and height and amount of components and we got basically an array and we can"
8052380,8057980," actually go ahead and just flip and print that just in case right just to see if it is correct or"
8057980,8064700," not i i kind of want to see that uh i can see in this mist but cannot read properties of undefined"
8064700,8075500," reading blah blah blah oh me in the ass we don't have an access to w"
8075500,8086060," okay so i suppose we can actually factor out the function um you know stbi"
8086780,8095420," image uh stbi write png right so when we can just put that stuff in there i think that's one of the"
8095420,8107020," things we can do right this is what we can do in here let's go and we can basically make this"
8107020,8114460," like a global variable and in here we're just like assigning it or something that's what we can do"
8115660,8121100," yeah because at that point at the point when the function is called w is going to be actually set"
8121100,8127340," to something i think it's a reasonable way to do that oh it's also dab fuck me okay so but i mean"
8127340,8132300," it doesn't really matter uh right so we still have to do that nonetheless all right so let's actually"
8132300,8140780," refresh that and what do we have a ctx is not defined ctx must be defined fuck me all right so"
8144220,8151260," can we just like make maybe see i remember there was like a kind of a way to do that you basically do"
8151260,8159180," like um you know window something something whatever okay we can always do something like that all right"
8159180,8167740," so h is not defined all right so we need to do width and height uh anything else h is not defined uh"
8167740,8174540," yeah so we now have to do something like width uh height uh there we go so we've got the bytes"
8174540,8182220," uh look at them they actually look correct because we have quadruple of bytes and the fourth"
8182220,8190860," byte is always 255. look at that 255 255 uh 255 255 255 what that means"
8192700,8200460," each quadruple of bytes is a pixel and alpha of that pixel is full so each pixel is opaque which is"
8200460,8211900," exactly our case so this data looks legit this data looks legit uh so uh let's go ahead and turn that into"
8211900,8219820," image how about that uh so um we just pass it yeah so essentially pass it to image data right so we just"
8219820,8226780," do image uh image data like so and we also have to specify the width right so it needs to have the width"
8226780,8233420," to properly do that and there we go we've got an image and we can now slap that image onto the canvas"
8233420,8241500," look at that we're just slapping that image onto the canvas uh right so let's actually go into the webpage"
8241500,8252140," first mother flipping try first mother flipping try"
8256060,8261900," first mother flipping fucking try mother flipping fucking try"
8261900,8272540," so uh the same code works both in native and web assembly and it's actually the code"
8272540,8281420," related uh related to the game i think that's pretty fucking progress isn't it i think it's so freaking"
8281420,8296540," interesting what fps boost will we get compared to typescript version i think we're not gonna get"
8296540,8303020," boost right away because we're gonna be uh having a combined renderer right so we're not gonna rewrite"
8303020,8308940," the entirety of the renderer in typescript uh on today's stream right so we're gonna have"
8309660,8316540," some of the parts rendered in web assembly and then some of the other parts rendered on top in typescript"
8316540,8322780," so which at the end may result at slow experience but then we're going to be slowly moving some uh"
8322780,8328300," typescript parts into web assembly and eventually the whole renderer is going to be inside of the web"
8328300,8334540," assembly module and i hope then it is going to be faster right so i hope then it's going to be faster"
8335900,8344780," um so yeah uh that's pretty cool that's pretty cool that's pretty cool so i'm thinking how i'm gonna be"
8344780,8353180," integrating all of that into the main game now right so how i'm gonna be integrating all that into the main"
8353180,8366060," uh so let's go into uh into the coil all right so client mts client mts"
8366060,8372300," so the background drawing took the longest from what i can say so this may already be a huge improvement"
8372300,8380300," maybe actually i didn't think about that i i forgot that it was the the slowest operation uh render floor and"
8380300,8388700," ceiling so how do we call this entire thing we actually call it on the back image data right so"
8388700,8399420," we call it on the back image data so i need to probably find the interface uh display right and back image data is"
8399420,8409660," this interestingly interestingly interestingly um so the back image data is not considered to be"
8409660,8420780," i'm not really sure why i'm using back image data as image data and not as a u8 clamped array or something"
8422140,8429260," right i'm not really sure why because if if it was like a clamped array i think it would have been easier"
8429260,8437020," to port this intensive um right i think it would be easier to port this entire stuff so let me see how"
8437020,8443740," exactly i'm treating like how i'm creating okay i'm just creating image data with that specific size"
8445340,8452780," so and then after i finished rendering everything right after i finished rendering everything i just"
8452780,8459020," uh display and swap back image data by directly putting image data in here"
8459020,8467740," uh so i wonder how when you create a new image data right new image data right when i do something like"
8467740,8478380," this um oh it's already moving there is there any constructs okay does it create like a new uh copy of"
8478380,8488380," this thing or is it just like a view over this entire stuff so my idea as of right now chat my idea as of"
8488380,8497660," right now replace back image data with u8 clamped array right and render everything into u8"
8497660,8505740," u8 clamped array and then when you swapping it onto the canvas only then convert it into the image data"
8505740,8517020," that's my idea and then once this entire thing is that we can actually move back image data into web"
8517020,8525580," assembly we can literally use the web assembly memory as that back image data so imagine web assembly module"
8525580,8532940," renders into its own memory and the type script also renders into the web assembly module that way it's"
8532940,8540060," actually easy becomes easy to port all of the code from javascript to web assembly because they already"
8540060,8548140," kind of work on the same memory so yeah they already kind of work in the same memory and just will become"
8548140,8553180," easier so to do all that we'll need to do a little bit of a refactoring session like maybe compiler"
8553180,8559820," assisted refactoring where i just like literally do you int 8 clamped array and just go through the"
8559820,8565740," compilation errors and stuff like that um so we already have like a 27 errors in here as you can"
8565740,8573580," see right so 27 errors so we'll probably have to have to fix that but i already seeming for one hour"
8573580,8580140," right so i think almost one hour um right so and i think uh the time has come to make a small break"
8580140,8585740," and refill the cup of tea and the channel is already telling me that it's it's time for a break okay so"
8585740,8593420," let's actually do this compiler assistive refactoring after the break uh right and uh yeah so okay so"
8593420,8601420," let's go ahead and just go to the compilation errors we have 27 of them right so let's see uh if we can even"
8601420,8608380," fix them so how is it i think it's a flight check next there yeah there we go so it's a high okay so"
8608380,8620540," this one is interesting uh it holds width right so the problem with just using you int 8 clamped array is"
8620540,8627660," that because we don't really have that information so let's actually do back image width which is going to be a"
8627660,8634060," a number right so and also back image height which is also going to be a number right and this is what"
8634060,8643260," we're going to be using in here uh right next error back image height uh next one height and this one is"
8643260,8651820," going to be oh my god umax don't fucking yeah so it's just like lsp was trying to make a query or something"
8651820,8657420," like that or whatever the fuck is has happened i don't know okay so in here uh what we're going to be"
8657420,8668060," doing uh so i suppose when you're accepting image data i think what we can do in here is just that"
8668060,8673340," right so that's what we can do and it's going to work yeah it seems to be working all right uh-huh so"
8673340,8686220," let's do that and the next arrow the next arrow uh-huh and then in here like so uh-huh"
8687740,8695580," so ua u int 8 clamped array is basically like basically like image data except with a slightly"
8695580,8702060," different interface javascript likes to do it like that right so it has a ton of different objects for"
8702060,8708140," working with binary data they all kind of do the same thing but they have slightly different interfaces"
8708140,8716460," because fuck you that's why um so yeah so this one is going to be can i create new u int 8"
8717340,8725340," uh clamped array is that a thing i can do or is that purely view at that array of okay so"
8725340,8734060," constructor accepts length which is nice all right so that means we can do something like width multiplied"
8734060,8743420," by height multiplied by four all right so that's what we can do in here uh-huh all right and then we can do back"
8743420,8751020," image width all right so which is going to be width right so in this one is going to be back image height"
8751020,8759580," which is going to be a height ahoy right so and uh this thing is u in clamped blah blah blah so this one"
8759580,8769340," is rather interesting um so we feel with 255 and i think i can feel uh you know u8 whatever so in here"
8769340,8775420," we are creating new image data like so but we also have to provide the width and the width is going to"
8775420,8786460," be display back image data back image width i would even say so so we have still we still have 10 errors"
8786460,8793660," in here which is i mean fine uh all right so we still have to fix those things you know what you know"
8793660,8798780," what you know what you know what you know what you know why i can just quickly replace this entire thing"
8798780,8805100," like so all right so i can do something like this boom boom boom boom can you fucking beam do that i don't"
8805100,8814620," fucking think so fuck you sorry uh all right so fly check next error and so now i need to do the same thing"
8814620,8826300," for the height for the height all right uh and uh yes so what's the next thing data maybe you can just"
8826300,8838060," do something like this uh look at that i can insane brother brother insane all right so this is a when"
8838060,8844380," they're rendering floor and ceiling i think what i have to do i just have to provide the display"
8844620,8853260," all right so this is going to be just the display like so so and as you can see yeah so we have to"
8853260,8863580," replace image data with the display back image data like so boom boom boom boom i want you in my room"
8863580,8872060," spend the night together together in my room so and then i can now quickly replace more things in here"
8872780,8881740," for instance like back image data height uh like so and it's going to be just like this boom boom boom boom"
8881740,8891260," all righty uh anything else so now we have to do the same thing for the width uh query place something"
8891260,8896620," like that so this is good you can't see scheisse in this news but i mean i'm i really apologize for that"
8896620,8903260," source query place uh this is going to be with uh this is going to be with can you see i think you can"
8903260,8910380," see a little bit of a scheisse just a tiny bit of scheisse uh-huh so we have a bunch of data i think this"
8910380,8917420," is the last thing we need to do in here honestly uh yep so i think we successfully refactoring this in"
8917420,8930380," i think i think we did it okay so i can try to do the full uh rebuild just to see if there are any errors"
8930380,8935100," outside of the current module uh so i don't think there are"
8935100,8945260," yo new minor version of npm available do i want to upgrade"
8945260,8955260," do i really want to upgrade my npm who am i some sort of like soy dev that constantly updates his setup"
8957260,8962620," no i'm a professional software developer who bail is values stable software"
8962620,8976060," uh okay uh so let's go ahead and uh just go in here so let's do npm run uh i guess serve we're gonna"
8976060,8984060," serve it all right so i'm gonna go into the local host i'm looking at the wrong thing"
8986300,8993180," now uh you know what you know where is the um you know yeah i still have a python script working"
8993180,9000300," i still have python script twerking uh long twerking python script"
9000300,9011580," i think it works fast wait what the wait a second why does it work fast"
9014060,9021340," i mean i mean i don't know what i mean it didn't make it worse per se honestly"
9021340,9031260," so does it actually use the uh the new one i think right so let me refresh with the caches enable and"
9031260,9037260," shit yeah that's fine let me take a look at the source coke"
9039340,9051900," uh source client mgs can we find the display so for example back image"
9051900,9058220," width okay so we're in fact using the new code right so we have references to"
9058220,9061020," back image widths and stuff like that"
9062780,9068140," it is working so i just replaced image data with a uint clamped array and stuff like that and it's"
9068140,9074300," working it's actually working faster than it was before so that's pretty cool stash changes and"
9074300,9080380," compare okay let's give it a try sure why not why not why not why not um so let's give it a try so"
9080380,9083740," so i'm gonna stash this meta flipper and then i'm gonna rerun it"
9083740,9088540," so let's refresh it"
9088540,9095020," yeah it's not going into 50s it's like stays at 30"
9095020,9100460," yeah but that one was sometimes going into 50s"
9101340,9107420," that's what's funny in here i think um all right so i'm gonna pop the thing"
9107420,9110780," and i'm gonna try to refresh this sometime"
9110780,9115260," yeah it's it goes over 30 and sometimes to 50 so"
9115260,9119980," it's slightly better i wouldn't say it's like a super fast but it's slightly better"
9119980,9128380," yeah i think it is slightly better so but i mean it's not the goal right so it's not the goal to"
9129020,9135180," what we're doing we're just like preparing to uh to simply use the memory from web assembly"
9135180,9142220," jit kicked in maybe by the way i heard that there is a lot of optimizations associated with"
9142220,9145980," you in clamped array right so because it's so close to how memory works"
9145980,9154380," maybe some locking is mitigating maybe who knows who knows my friend maybe that's exactly what's"
9154380,9157260," happening in here but anyway so let's actually go ahead and just like you know"
9158460,9169340," um commit whatever we have uh right so um use you int 8 clamped array"
9169340,9181740," for back image data instead of image data we are preparing preparing to"
9185740,9201660," to render into web assembly memory right which is usually which which is usually usually viewed"
9201660,9210700," via you int 8 clamped array uh all right so and i'm gonna push that right into the repo"
9210700,9225740," uh reject it all right so let's actually stash and fetch the latest thing i think i didn't"
9225740,9233180," fetch the latest things i think that's what happened let's take a look at the history"
9233180,9245740," where's the origin name"
9245740,9251580," i don't see origin name it's somewhere why is it here"
9254060,9262140," chat chat chat i'm confused"
9262140,9272380," so what origin is pointing at"
9278060,9282780," i recently renamed the repo i recently renamed the repo i recently remained so that's basically what"
9282780,9289580," happened oof i probably broke the repo for everyone who had a fork for it but i mean yeah"
9289580,9296620," so uh let's reconfigure the repo let's reconfigure specifically um maybe i might as well just like"
9296620,9310300," i can remove this one and uh yeah so reconfigure this one right uh i mean you asking me to set it i want to"
9310300,9314220," i want to just copy cheese this is so inconvenient"
9314220,9323900," this is dumb this is the dumbest ux i've ever seen what i want to do i want to have a string that uh"
9325100,9329820," the string of the previous repo so i can just replace this thing and it asks me to retype the"
9329820,9334060," entire fucking remote origin url what the fuck is this um"
9334060,9342700," ah this is so dumb this is the dumbest experience i've ever had in my entire life"
9342700,9350380," right so i just want to rename it right so url entering you i want to edit it you"
9351420,9359900," jesus so it's so dense who designed who designed that who designed that i swear to god"
9359900,9365100," sorry uh right so let me let me finish this stuff"
9365100,9378700," i just like i just can't man i just can't all right so let's actually rebase on top of this entire thing"
9379500,9383100," uh elsewhere origin main ah fuck"
9383100,9386700," fucking conflicts mate"
9386700,9391100," fucking conflicts uh all right so what do we have in here"
9391100,9395500," or is is that a really conflict what the fuck is like you"
9395500,9399340," what is this code i don't remember this ah"
9401980,9414620," so revert buffer uh"
9414620,9417980," uh i see i see i see i see"
9422540,9426700," so this is the oh yeah so what essentially we have to do in here is just this"
9426700,9432220," all right so do we need to do anything so rebase continue"
9432220,9436540," uh-huh yo it worked"
9436540,9444780," it fucking worked let's uh double check everything so we're going to npm run build just in case right"
9446220,9450540," uh let's double check that they didn't break anything while resolving the merge conflicts instead"
9450540,9452860," uh right so let's do surf"
9452860,9458780," and uh yeah so let me see let me see"
9458780,9465180," seems to be working seems to be twerking that's very cool that is very cool okay"
9467020,9473340," ah we can live with that we can live with that so let's actually now try to push the whole thing"
9477020,9489420," okay um so yeah that's pretty cool how we're going to organize the interface of this entire stuff"
9489420,9493580," i think what we have to do"
9493580,9505020," is instead of creating the new uint8 clamped array"
9506540,9509580," um we have to instruct"
9509580,9516540," the web assembly module to allocate the buffer right so we're telling the web assembly module okay"
9516540,9521340," so this is the size of the buffer that we need and it will pre-allocate that buffer"
9521340,9527980," we'll also need an ability to get the pointer to the beginning of the buffer right and then we need"
9527980,9535740," functions that render the floor given the position and the rotation of the camera"
9537420,9543180," uh malloc i don't think we'll need to rewrite malloc because there is an allocator within um"
9543180,9545340," within c3 standard library"
9545340,9551340," within c3 standard library all right"
9553420,9563740," so uh so uh now uh let me let me let me see let me see 20 milliseconds to local thought would be absurd i"
9563740,9568300," don't know what you're talking about you're talking about the current state of the game the game is unfinished"
9569420,9574700," um all right so where is the main c3"
9574700,9587500," we need to so we allocate the buffer in here right i'm thinking what if"
9589500,9596460," we do it like that right so essentially we're going to have a special function"
9596460,9605500," um that resizes the buffer or allocates the buffer right allocate buffer and it might actually return"
9605500,9609580," the pointer to that to that buffer right so allocate"
9609580,9616540," pixels yeah so we're going to provide the width"
9616540,9620860," which is going to be int width and height"
9620860,9626700," so and what we're going to be doing in here we're going to just pre-allocate this entire thing"
9627500,9636700," um so i'm surprised math cons works that wasn't an import right i think it uses the llvm intrinsic so we"
9636700,9649900," can take a look at the watts right so uh cosine um but do we need cosine or sign we we do we use it somewhere cosine"
9655740,9662860," camera update maybe it okay i see it just got optimized out it's just like folded the con uh"
9662860,9670540," constants constants that's probably what happened anyway whatever uh let me focus on what i need to do"
9670540,9680540," jesus all right um where is the allocate pixels okay um right so we're allocating the pixels we need to"
9682300,9690140," go to here c3 there was some stuff uh for memory if i'm not mistaken so there is new"
9690140,9700380," right so you can allocate a new type so which is fine um right so new array which is also understandable so"
9700380,9707420," you can you can just allocate a bunch of things in here and what is it returning here is rather interesting"
9707420,9712700," so it's from the allocator uh new array"
9712700,9717020," like what's the return type"
9717020,9725500," so maybe that's what we have to do so we have uh arena allocators dynamic heap allocators on stack"
9725500,9732220," temp allocators okay so new array where is the definition of new array do we have it anywhere in"
9732220,9737740," here new array give me the definition i want to take a look at it's implement it's not even implemented in"
9737740,9747740," here okay what does it fucking return bruv what does it fucking return um new array so but it's in"
9747740,9755500," i mean memory allocator new r so in direction many direction layers all right so it returns your point or"
9755500,9761980," or something right so new array try uh right so we allocate a bunch of things and"
9761980,9770620," aha so we casting it to a pointer to the type and then for the pointer we're taking this kind of thing"
9770620,9779980," so um yeah all right so i suppose that's what's going on here that's all good all right whatever um"
9780860,9793820," so let's just go ahead medium i can do mem new new array all right new array"
9793820,9805340," and it's the elements so the type is going to be the color and the elements is just width multiplied by"
9805340,9811420," height that's what we have and i suppose this is what we can do pixels and um let's just"
9811420,9818460," can i make it like this that's what's interesting yeah that's what's interesting okay so let's go ahead"
9818460,9826220," and just compile this intensive uh and look at the compilation errors uh in terms of compilation errors"
9826220,9832700," okay so all of that is supposed to be u size understandable let's make it u size anything else"
9833500,9838860," uh missing return that is okay so let's not do any return for now because like what i'm trying to"
9838860,9846060," see if this okay so this is perfectly compatible so this is viable this is compilable all right that's"
9846060,9857660," pretty cool so and interestingly right so pixels right we probably want to have things like u size"
9859020,9865900," pixel width which is not set to pixels width which is not set to anything and pixels height right so"
9865900,9874380," afterwards we want to maybe allocate pixels so i'm creating this function because this function is going"
9874380,9884300," to be called from the outside uh it would be called by javascript to pre-allocate a buffer of a certain size"
9884300,9891020," size that's why i'm uh doing all that stuff um right so and in here we just do"
9891020,9897020," pixels width uh equal to width and pixels height"
9897020,9906620," uh pixel width and pixels height so that should break some stuff hopefully uh hopefully it will break some"
9906620,9913180," some stuff i'm going to go to the compilation errors and fix all of that uh huh let's go so every time"
9913180,9922940," like at 64 right so we want to create replace height with pixels height like this anything else so what"
9922940,9930940," we have we have in here is a 64. it didn't like height which is rather bizarre isn't it so this is because"
9930940,9942300," your size uh cannot be implicitly converted to how it's okay can i just like do an integer then annoying"
9949420,9958940," annoying annoying annoying annoying uh all right so let's use it as an integer then"
9958940,9973340," all right so and in here that means like this let's use it as an integer uh as well so and in here just"
9973340,9979100," cast this entire thing to use sizes so it's just like the least amount of casts that we need to perform"
9980300,9987660," uh all right so and in here let's correct place width with pixels width right so with pixels width"
9987660,9994620," uh all right so can you use minus one as air value what the are you talking about"
9994620,10000540," all right so what do we have in here everything seems to be compiling and um"
10000540,10008700," yeah allocate pixels it allocates them so let's actually see if it uh generates the image output png"
10009420,10015420," uh segmentation fault that's actually pretty cool um i really i'm really happy to see that honestly"
10015420,10019980," uh though i wouldn't expect this thing to be like that"
10019980,10025100," uh all right all right all right at which point it happens though"
10025980,10033100," so it doesn't print the stack traces what's interesting is that when i build um c3 from scratch"
10033100,10041260," it doesn't bring stack traces i wonder if that's because i compiled it incorrectly"
10041260,10045260," or maybe something else maybe there's a special flag or something"
10046220,10055260," uh you are with 05 on so what it worked with 05 before so what again so what"
10055260,10064220," um so what are you all on about it's it worked with 05 before"
10066940,10076060," um not print stack trace with 05 it printed with 05 before maybe what are you all about like it worked"
10076060,10081900," before what uh people stop you're annoying me"
10081900,10092860," okay i'm stuck i'm gonna stop listening to the chat so uh all right what we have we need i need to"
10092860,10100220," figure out what exactly is going on here why it fails and where it fails all right um so yeah"
10100220,10105020," maybe we can do a little bit of a gdb all right so"
10105020,10114620," so let's actually do that and maybe in here"
10120460,10124540," let's go in here so team ux team ux okay"
10124540,10128220," gdb main"
10128220,10132700," all right so i just want to take a look at the stack trace"
10132700,10136220," oh interesting"
10136220,10148060," so it's when it tries to save okay i see something with png uh saving to png so if we disable saving to png"
10148060,10153580," right all right so it might be actually it might actually work all right so it doesn't like"
10153580,10162540," this kind of stuff all right all right fair unironically fair if i try to do something like this will you"
10162540,10175980," work now oh okay so fag output png all right so now if i try to rotate this stuff about like a direction"
10177180,10183500," equal to have uh huh so that's that's interesting okay so when it rotates"
10183500,10191900," which is perfect uh it's silently casted to wrong pointer i guess um maybe we should report that but"
10191900,10197020," i mean i'm in the flow uh somebody else please report that i'm not going out of the full"
10197820,10204460," okay so we allocated pixels and stuff like that so that's pretty cool and everything um"
10204460,10210300," what else do we want to do in here"
10210300,10216380," so there is a little bit of problem that we need to synchronize the uh this kind of stuff"
10218700,10225980," all right so uh we allocate the pixels we may return um the pixels themselves right so we may return"
10225980,10230220," the pixels themselves um that's totally fine"
10230220,10243740," and uh after that i need to be able to render the floor all right so render floor and ceiling and"
10243740,10249180," here we pass in the camera but within the camera we only need its position all right so we only need"
10249180,10255980," this position and also direction we don't even need direction what's that's funny we need direction only"
10255980,10263260," for fov right so fov left and we don't even yeah we do need fov right okay so i have the following idea"
10263260,10271820," what if i uh accept the position but position as x and y so it's easier to call from javascript and also"
10271820,10279260," direction all right so uh like this so this one is going to be position x uh position y so i'm making"
10279260,10286620," the interface super simple intentionally and fov left and fov right are going to be computed based uh on"
10286620,10294620," that so that means i want to get rid of the camera basically i think um all right so let's get rid of"
10294620,10301180," the camera so it's going to distract camera that uh all right so let's go ahead and just like go to the"
10301180,10308060," compilation errors uh what do we have in here so camera update uh right so in terms of camera update"
10308060,10315180," we'll need to move this entire logic to probably here oh i already moved it okay so i don't know what"
10315180,10325820," the fuck was going with me um so this one is vector two uh vector two uh huh so i can even query replace"
10325820,10332300," camera position uh with just position"
10334460,10342780," uh which is kind of meh but i mean oh wait a second i have an idea like why am i removing"
10342780,10349260," the notion of the camera completely if i can just construct the camera out of this entire thing so i can"
10349260,10361660," do camera camera uh right so i can say position is basically this position x position y and the direction is"
10361660,10372140," direction right then i can simply do camera uh updates uh emacs is so annoying okay so this is update and"
10372140,10378220," that's it uh all right so did i remove the camera update yes i did in fact remove it"
10378220,10388380," oh uh i should have not rim i i forgot that i don't have git in here yeah okay let's go back"
10389340,10397420," let's go back in here so this one is the camera camera brother uh-huh so this is direction direction"
10397420,10403980," uh camera updates come on you can do that okay so let's try to go to the completionaries now"
10403980,10412620," uh-huh could not be found so yeah so i should have not removed the camera so but this is fine right so"
10412620,10419020," because that's that's that's what you expect when you're experimenting in a flow all right so this is"
10419020,10430300," a direction then you have vector 2 fob left and fob right like so there we go so what do we have in"
10430300,10438460," here definition was here blah blah blah nobody cares okay so here is the zero zero zero whatever"
10438460,10443020," so we don't need a camera in here okay cool what else do we have in here so everything seems to be"
10443020,10451980," working okay uh shut up emac shut up um so render floor and ceiling so this is already kind of usable for"
10451980,10458220," web assembly um we can make this external thing uh i would like to maybe even rename it to something"
10458220,10471020," more like pleasant uh right render floor and ceiling boom boom okay so render flow and ceiling this is an"
10471020,10479580," external uh external thing all right so this is a render floor and ceiling so this is wasm there we go"
10480220,10485260," uh render flow and ceiling and allocation also going to be like that right so it's basically"
10485260,10493100," extern uh all right so this is going to be wasm like this so this is two functions that are going"
10493100,10498940," to be exposed to javascript so the javascript will pre-allocate the buffer over certain size and will"
10498940,10506220," get a pointer so it then can construct you int 8 uh you know clamped array so and it's going to be the array"
10506220,10515100," that is both both viewed by um you know by web assembly module and javascript so it's kind of shared um"
10515100,10523820," right and then javascript is supposed to call this function to pre-fill um you know the this memory"
10523820,10532220," with the floor and ceiling automatically so that's how it's going to work i think i think that's a good way"
10532220,10536140," to think about this intensive um right"
10536140,10543100," shmiming yeah basically shmiming essentially essentially shmiming"
10543100,10553500," essentially shmiming so i think it's ready essentially it's basically ready"
10554700,10557820," we should start integrating it into the into the coil"
10557820,10566940," all right let's go um so how i'm going to call this particular module or is it going to be just"
10566940,10574940," called mail mail mail right uh or should i call it something else i think i can call it just a renderer"
10574940,10584300," for now for now or render uh right so this is going to be a renderer and when i'm building this shise"
10584300,10588060," how i'm going to be approaching this entire thing so i can"
10588060,10599820," so yeah i don't want to introduce too many build systems uh one of the things i can so we have a surf in"
10599820,10612060," here right we have serve i can introduce build js all right in a serve js right in this serve js we have"
10612060,10619420," this kind of stuff uh right so it has a cmd and it enables us to run all these commands i may probably"
10620300,10628060," actually extract it to a separate module of some sort um right but we'll see how it goes"
10628060,10632140," so"
10632140,10643180," and then here when i'm compiling everything uh obviously i'm going to be doing tsc all right so"
10643180,10650140," without any arguments and then i need to do c3c compilation now uh let's go into the make"
10650140,10657820," file where is the make file here it is and we are compiling by the way this one is rather"
10657820,10661900," interesting because it also uses d platform but i mean it's not pretty needed per se"
10661900,10674060," um okay so let's query replace basically any chunk that is not space right so that is not space"
10675900,10683340," and just wrap it in parentheses and just wrap it in parentheses like so also find anything like this"
10683340,10690060," and just split it by commas and this is what we've got so i'm going to put this stuff in here so that's"
10690060,10698060," how we're going to be building shots uh right so this is a compile um all right so this is one thing"
10699180,10707500," this is another uh this is another uh this is another so this is a target uh there's a bunch of other"
10707500,10709900," things uh huh"
10709900,10721660," so and this is main c3 so this one is a renderer all right so this is going to be the renderer and this one"
10721660,10730300," is going to be the renderer so interestingly uh in a package dot json when i'm saying build we should"
10730300,10738220," actually call build js like so so first we're going to be building tsc and then we're going to build in the"
10738220,10740140," web uh like web assembly"
10742780,10748140," so that's how it's going to work and that's how it's going to work okay so let's go ahead and just"
10748140,10754460," try that so npm run build what do we have so is it building"
10754460,10758780," yeah assuming non-posics environment let's go"
10761260,10763340," so and that created render bosom"
10763340,10780620," okay so let's go into the client mts mts and maybe index js so we need to bring the make environment"
10780620,10781820," thingy in there"
10781820,10788940," make environment thingy in there so here it is uh yeah this one"
10788940,10797260," uh so this is a function that i suppose returns a proxy right so it returns a proxy cool"
10797260,10802860," but a proxy probably uh it doesn't know what is a proxy"
10802860,10813740," interesting so proxy constructor is it um yeah so it's a proxy of an object i suppose right"
10816460,10819020," so and this thing is an object"
10819020,10830780," how do i because environments are just a bunch of functions how can i make it work"
10830780,10836620," how can i make it work can i just say any for now um"
10839660,10855580," i consider wrapping it in string"
10855580,10868540," okay it's very funny so what you don't like here implicitly has any well i mean okay"
10869660,10872220," so what you don't like and what you don't like in here"
10872220,10885500," could not find envs but here it is envs is required but value is never read"
10895100,10902540," okay okay okay so target is uh value that is never read okay can i just do something"
10902540,10913900," okay so let's actually fetch the um"
10916460,10924780," what's the wasm what's up what's up what's up what's up what's up what's up what's up what's up"
10924780,10929100," what's up what's up what's up what's up what's up what's up what's up what's up what's up"
10929100,10944140," main extra renderer wasm so what we have in here um so it's supposed to be like a yeah web assembly so x y"
10944140,10951740," why what would you don't like in here so yeah it can be something um stb image right we don't care"
10951740,10956700," we don't care"
10956700,10963740," and this is what makes it so goddamn interesting"
10963740,10969020," because i think this has to be part of of the game"
10970300,10972220," all right it has to be part of the game"
10972220,10984940," so that means i need to do all of that stuff when i create the game yeah so"
10984940,10990460," definitely let's move all of that stuff into create the game"
10990460,10997980," uh we're going to put in here and so we're going to treat this and i think as a resource sort of speak"
10997980,11006700," uh and in the interface of a game uh we're going to have a wasm uh right so wasm which is a web assembly"
11006700,11011260," uh-huh so is that or maybe a web assembly instance"
11016460,11027100," um okay so create game um all right and when i come when i'm constructing this entire stuff when i'm"
11027100,11035260," returning the game um game equal we just put wasm in here it's going to work so what you don't like in"
11035260,11047980," here which is missing instantiated source but uh okay what a web assembly a web assembly uh instantiated"
11047980,11059180," instantiated source is that how you spell it how the do you spell it instant uh instantiated source"
11061580,11077260," what do you want from"
11077260,11087260," don't freaking tell me that i have to do some stupid oh okay it's it's because of t"
11089260,11099980," couldn't find name are you telling me"
11099980,11114860," anyways uh so um web assembly instantiated streaming blah blah blah blah blah blah blah so we don't have any"
11114860,11121340," errors anymore which is which is nice everyone really like the thing that we don't have any errors"
11121340,11129980," anymore uh okay so when i create uh display right so when i'm creating the display"
11129980,11135100," i probably need to allocate source i need to make a small break because i really want to pee"
11137820,11142540," so after the small break uh we're going to continue integrating the module so we basically need to just"
11142540,11151820," allocate the the buffer and stuff like that okay um okay we're back uh so um we need to pass wasm module to"
11151820,11159180," um allocating the back buffer right so when we create the display right so as you can see here we create the"
11159180,11167180," display um i need the wasm module i need the wasm module i need the wasm module i need the wasm module"
11167180,11174540," give me the wasm module okay so uh we can pass it in here so wasm web assembly um so web"
11174540,11181660," assembly instantiates yeah yeah instantiated source right so we're going to be putting it in here"
11182380,11188620," um how are we going to be approaching this and that stuff so here's wasm so and it's an instance"
11188620,11194700," experts and uh usually i can get the memory right can i get the memory i think i should be able to get"
11194700,11208140," the memory um and where is the code uh uh yeah so i want to take the the buffer right so here is the buffer"
11208860,11218540," and once i have the buffer uh i want to create you in a clamped array uh so maybe i can save that into the"
11218540,11232140," buffer like so uh i can do wasm um instance experts uh and if i call function right so it's going to be"
11232140,11241580," allocate uh allocate uh allocate pixels i'm calling to this function with the uh c3 module right this"
11241580,11250780," function so and i'm going to be passing width and height in there right jesus christ uh width and height"
11250780,11259260," so this thing must return me a pointer right so let's actually call it like a pixel uh pointer right so this"
11259260,11265180," is a pixel pointer and once i've got the pixel pointer and maybe i can even say that it's a number or"
11265180,11273900," something like that um i should be able to construct you int clamped array right so out of that uh let me"
11273900,11283980," see so it's index js you int clamped array so i provide the buffer all right so i just provide the buffer"
11284940,11289820," and i think that is basically it so it complains about uh like these things and these things and"
11289820,11297180," this is because typescript is stupid um right but it is what it is right so it is what it is um"
11297180,11310380," so and do we even yeah we have to provide the pixel pixel ptr there we go pixel ptr and"
11311340,11318060," is that i think that i think that is basically it uh so i don't really know how to tell it that these"
11318060,11324060," things exist right so the buffer does not exist uh expert functions yeah it's it's kind of stupid but"
11324060,11335340," it's just like is what it is um all right now if i try to compile the whole thing will it uh do that"
11336540,11342780," it's taking some time all right all right so it complains about a couple of things"
11342780,11350460," but that's about it right so the thing about typescript is that it generates things nonetheless"
11350460,11360380," all right so and this is something that we want to put in here oh man okay so we have to pass"
11362140,11370860," wasm like this all right so there should be only two compilation errors only two compilation errors"
11370860,11377180," and if we only have two compilation errors it's going to be perfect okay so it's buffer and the"
11377180,11384540," function not callable callable or whatever all right so i think we're ready to to go"
11385500,11400060," uh all right i think we are in fact ready to go uh-huh so npm run uh serve all right so we are serving"
11400060,11409580," ah okay what do we have let's take a look at the errors uh access memory access out of bounds"
11410860,11413740," oh that is actually very fascinating"
11413740,11414860," hmm"
11414860,11420700," i think i know why all right so because renderer"
11420700,11423900," uh c3"
11423900,11428540," okay that's that's very bizarre"
11428540,11438460," hmm why it is like that so it's a trying to access out of bounds"
11438460,11448220," buffered too hard i don't think so so let's actually go into here uh find this entire thing and just"
11448220,11455820," maybe print maybe new um error all right so something like this"
11455820,11464860," pixel ptr is a pixel ptr and i'm gonna just throw this entire stuff and see what we've got"
11465980,11468620," see what we've got so i'm gonna rebuild the whole thing"
11468620,11484620," i'm rebuilding the whole thing um so it's complaining about something not sure what is that uh what's that"
11486220,11497100," oh so this thing is possibly move oh ah this is because of the throw it short circuits the control"
11497100,11503580," flow so some of these things are not available fine that's that's totally fine i don't care about that um"
11503580,11507100," um excuse me"
11509500,11517500," this is not what i want"
11517500,11518300," this is not what i want"
11518300,11518300," bro bro"
11518300,11520860," ah"
11520860,11523900," ooh"
11523900,11533100," it's trying to print some shit what okay why are you trying to print some shit so that why we need to print"
11533100,11540140," anything right so print tab um we don't really okay so let's get rid of all of that stuff"
11540140,11547260," you know what it's probably trying to print an error of some sort because panic prints uh okay so it it"
11547260,11554780," panicked probably okay so that's an that's understandable that's understandable oh boy oh boy oh boy oh boy oh boy oh boy"
11554780,11563580," okay so let's let's let's get rid of all of that um all right so yeah"
11567420,11581900," so that seems to be compiling though um that seems to be compiling"
11581900,11588460," so does it fail because"
11592460,11598780," i don't even know why exactly it fails when we are trying to allocate so it's probably"
11598780,11602300," fails because we're trying to allocate some things"
11602300,11605260," that's probably why"
11605260,11609420," maybe new array fails maybe"
11609420,11615980," which is understandable right so it would be nice to know where it panics or something like that"
11617100,11620300," but anyway um so one of the things we can do"
11620300,11622460," we can"
11622460,11629020," get rid of the dynamic allocation in here right let's let's get rid of the dynamic allocation sure"
11629020,11636140," i thought it's going to be kind of cool idea that the javascript provides uh right so"
11636140,11640300," like how much it allocates but apparently it's it's a bad idea okay"
11641260,11649980," so let's go to the client mts right so here's the factor screen factor blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah"
11649980,11656860," all right so we've got that and we just you know we're going to be pre-allocating this into this stuff"
11656860,11664300," so we're going to get rid of this and uh screen width multiplied by screen"
11665420,11665740," height"
11665740,11677100," so and build js we're going to get rid of that so it speeds up a little bit and let's just try to run it"
11677100,11688540," okay uh yep so mem uh array we're not going to be okay so let's just return a pointer to this thing"
11688540,11691980," all right we can take a pointer maybe to the to the first one"
11692540,11702780," all right so are you not happy okay so let's square replace uh pixels width with screen width"
11702780,11711820," boom uh pixels height with screen height okay that was easy"
11711820,11722140," all right fair enough so allocate so it doesn't really allocate the pixels but it returns the"
11722540,11729340," the buffer and nonetheless so okay let's refresh um okay so yeah we've got the pointer and everything"
11729340,11738380," everything seems to be working so let's go into the client mts uh pixels ptr um let's not throw anything"
11738380,11746380," in here right so let's go into the build js and let's rebuild the whole thing right so i want it to fail in"
11746380,11752540," two places right so we expect only two errors two compilation errors no more or less okay so there's"
11752540,11758060," two compilation errors and they are fine they're totally fine um okay so let me restart the whole"
11758060,11766460," thing and i'm going to refresh the whole stuff and it's working so you know what's funny is that we're not"
11766460,11774220," using web assembly yet we're just using web assembly module but we're rendering using typescript into"
11774220,11780940," web assembly module so that that's the funniest part so uh but it works right so it seems to be working so"
11780940,11788380," that means we're didn't really break anything so that's already pretty good so render uh floor and ceiling"
11788380,11798060," blah blah blah blah let's not do that the idea here is to now take the game uh ctx or uh wasm and just"
11798060,11804540," call or render uh like render flow and ceiling from web assembly right so this is the javascript version"
11804540,11810860," and here we're going to have a different one uh the web assembly one instance instance experts"
11811660,11821420," render floor uh right render floor and ceiling so and this is the function written in c3 it is available"
11821420,11827020," in here so we have to provide the um basically x and y of the position of the camera right so this is"
11827020,11837580," what we have to do game camera position x uh right so game camera position y and also game camera direction"
11837580,11842940," and that will make it actually render things okay so this introduces another compilation error the third"
11842940,11848700," one uh all right so let's go ahead and just try to recompile and see if it's going to work now"
11848700,11857420," so basically on the first pass web assembly part renders floor and ceiling right and then the rest of"
11857420,11865340," the stuff is rendered by javascript so it's a uh basically hybrid renderer if you can call it that way"
11865340,11871980," right so but it it they operate on the same memory essentially hopefully that's the uh that's the idea"
11871980,11877660," at least all right so i'm going to open this and i think just in case i catch any errors"
11877660,11880540," and uh it's working it seems to be working at least"
11880540,11893420," it's not faster per se but it's working though it's it's pretty stable at 40 fps right sometimes it drops down"
11895660,11902380," all right sometimes it drops down but also the again this is on a 10 years old laptop on which i'm"
11902380,11912540," also streaming so it's actually you know handicapped really heavily by that uh we can try to modify some"
11912540,11921980," stuff uh right so for instance i can maybe swap around uh you know floor and ceiling colors right so within"
11922780,11932380," um you know within web assembly stuff i can just command this stuff out uh all right so and now i can say"
11932380,11937500," this is the ceiling ceiling and this is the floor"
11937500,11946540," this is the floor and now if i try to compile this into anything so that should swap the color of the floor"
11946540,11953660," and the ceiling and those confirm that they are actually rendered uh within c3 they're rendered by c yeah"
11953660,11956460," okay so we just proved that it's rendered by c3"
11961580,11969180," so yeah we ported rendering of the floor and ceiling to web assembly using c3"
11969180,11979260," right so walls are still rendered in javascript but now we have uh basically a setup where it's actually"
11979260,11985500," predestined forward to just move the logic of the renderer uh from javascript to web assembly like very"
11985500,11993020," slowly very slowly very incrementally um looks better with the color swap maybe uh but i mean it looks"
11993020,12004060," different so no items no sound uh there is sound it's just very quiet"
12008140,12013260," so here's the sound so here's the sound and items i already collected them so because it retains the"
12013260,12019260," state of the game uh because it's shared uh all right so because let me let me actually show you"
12022940,12033900," it's a multiplayer game so and i collected the items so and uh that state is retained even if i close one of"
12033900,12040300," the tabs right so that's why there is no items so to actually bring the items back i have to restart the"
12040300,12047740," entire server uh right so to refresh the state and now it is there so the reason why floor is green is"
12047740,12054460," because of keys so on on this floor it's not particularly convenient like it's not really visible i'll have"
12054460,12061660," to change the color of the keys if i want to make better um right so let's actually go ahead and bring it"
12061660,12080220," back um so yeah so is it running all right and i can refresh this into i think and it's back"
12080220,12087740," so and what's funny is that i collected only like two of them and if i bring it back"
12089500,12093020," you see keys are the keys that are not collected are still there"
12093020,12099100," right because it maintains the state uh interestingly i can now do the following thing"
12099100,12102620," all right i can"
12102620,12108620," that's what we can do"
12108620,12111820," it's a multiplayer game"
12115020,12120620," so it's pretty cool and eventually we're going to rewrite all the parts of the game in c3 except"
12120620,12125980," maybe a little bit of the code that is responsible of connecting the client of the game with the"
12125980,12133260," capabilities of the browser but i want the to keep the amount of javascript as low as possible in this"
12133260,12137180," specific case so at least that's the plan that's the plan"
12139340,12144780," so uh yep we did it we actually did it isn't that cool i think that's pretty cool actually"
12144780,12153660," um so and didn't even take that many changes honestly but here it is by the way so here's the"
12153660,12159100," javascript version uh and i think the time has come to just go ahead and maybe remove the javascript"
12159100,12168380," version we don't need it right bye bye it got moved to um to the to the c3 right so that's what happened"
12168380,12174540," that's what happened so we just now we reduced like a decent chunk of code so this entire thing got"
12174540,12183260," ported to web assembly so we made some modifications here and here and yeah so in package.json stats"
12184780,12191100," damn it's it's really not that much code it's really not that much code just like we just went"
12191100,12198700," and we imported it all right so i'm gonna commit everything in here uh all right so and i'm gonna say"
12198700,12214700," port render uh floor uh floor and ceiling to c3 via web assembly all right i'm gonna push that"
12214780,12221420," right into the river so the rest of the stuff that needs to be ported are walls uh sprites"
12221420,12227260," and so on and so forth uh i will probably do that offline right so because i mean it's basically the"
12227260,12232780," same process you just like take the code and move it to c to c3 module and if i encounter anything"
12232780,12238940," interesting during this process i might stream that right so it just depends because like i'm just"
12238940,12244300," simulating the process of uh you know porting this stuff to c3 and i don't really see anything"
12244300,12249980," particularly interesting uh if i during porting will encounter something interesting i may actually"
12249980,12254460," uh do that on uh on the stream right so just to share that something interesting with you guys"
12254460,12262940," uh and once we ported the client the the renderer we may start porting the logic right and that will"
12262940,12268700," require simultaneously porting code on the client and the server uh right so it's gonna be rather"
12268700,12275500," interesting so on the server side we'll need an ability to work with web sockets um i don't know"
12275500,12281900," if c3 has any web socket library we can try to use one of the cc++ web socket library or we can try to"
12281900,12290940," write our own some time ago i think i tried to implement web sockets in c so i had this library it's kind of"
12290940,12298780," unfinished i just like implemented like a minimal uh viable uh like product uh in this thing so which"
12298780,12304940," is just a client right so when it's a c client and it works actually right so it actually works maybe i can"
12304940,12314380," take this code and port it to c3 right and extend it right so because this is basically unfinished client web"
12314380,12320620," sockets but i can uh you know finish it and also implement the server once and all that in c3"
12320620,12326540," that could be an interesting uh separate stream by itself right take this old code that i did"
12326540,12333420," three years ago by the way it was three years ago and pour that old code to c3 um right and just"
12333420,12341740," like start using it so that sounds very interesting actually so we can try to do that uh right so let me"
12341740,12349900," actually put the uh this thing in the references for people on youtube all right um so that's pretty"
12349900,12356860," cool journey right so that's that's super cool actually uh i'm surprised how easy it is especially"
12356860,12367900," if you know how web assembly works uh right so yeah so to to answer the question like why you need to"
12367900,12374540," understand the slow level things so then you can take basically an experimental language and just"
12374540,12381980," start using it right so just start using it like because there's no really a proper documentation on"
12381980,12386780," how to do these kind of things in this language because language is experimental all right so but if"
12386780,12392220," you know how all these things work like under the hood how web assembly works you can just pick it up"
12392220,12400460," and start using it right so that's why uh you know knowing how things work under the hood is important"
12400460,12405500," right because you can do these kind of experimental things you can explore unexplored areas"
12405500,12412780," um all right i guess that's it for today thanks everyone who's watching right now i really appreciate it"
12412780,12418460," have a good one and i'll see you on the next recreation programming session with ahu and mr azuzin i love"
12418460,12425900," you all right this is the footnote of the session and i think i figured out why um dynamic memory"
12425900,12433980," allocation didn't work in wasm so uh lvm when it generates for wasm actually generates a very interesting"
12433980,12442620," global value called heap base uh right so it denotes where in a web assembly memory you can actually have"
12442620,12449660," a heap right so basically after heap base uh you can use this original memory however you want and usually"
12449660,12456220," what people do they implement malloc on top of that region of memory everything before heap base is either"
12456220,12463900," stack or some data for instance strings the thing about c3 is that it actually implements its own memory"
12463900,12469660," allocator on top of heap base and you can find that allocator if you grab specifically for the name"
12469660,12475980," heap base so let's actually go ahead and uh do that so i'm going to go into the uh folder where we"
12475980,12484460," store the standard library and i'm going to literally grab uh for underscore underscore heap base uh and i"
12484460,12491740," actually did it had base heap base uh right so there's two places where it's mentioned the first one is just"
12491740,12497100," declaration of that variable right so because you need to declare it to be able to refer to it uh right"
12497100,12504620," and then um it's um initialization of the allocator within the function called initialize wasm mem"
12504620,12511260," right so it's a very interesting function uh we can't really call it directly because it's private"
12511260,12518300," right but if we take a look at the web assembly module that is generated when we compile our renderer"
12518300,12524780," right so here is the wasm module so let's actually convert that wasm module to uh what which is web"
12524780,12533420," assembly text so it's going to be a renderer wasn't redirect to renderer what wasn't what and uh let's"
12533420,12540460," actually find uh what kind of functions do we export uh actually not only functions but different objects"
12540460,12546140," and stuff like that so we export memory we export a bunch of um you know functions in there that we"
12546140,12551820," implement it so atomic compare exchange i don't think it's important there's initialize right"
12551820,12556940," there's initialization as far as i know it also has a heap base i think keep base is actually uh"
12556940,12562780," you know private in this specific case okay so it expert this initialize function we know it is a"
12562780,12568780," function let's actually find it uh within web assembly and it calls to wasm call constructors right"
12568780,12573580," so let's actually find that it calls a bunch of other constructors and most importantly it calls to"
12573580,12583340," initialize wasm mem so what we need to do we need to actually call this initialize function before doing"
12583340,12591180," anything with web assembly uh right so let's actually go back to dynamically allocating the pixels uh so i'm"
12591180,12597260," going to go to c3 and let's go ahead and remove all of that uh you know hard-coded screen factor"
12597260,12603740," screen width and screen height and make pixels actually dynamic right in the function where we"
12603740,12609340," do the allocation right in the function where we do the allocation we're going to be actually uh doing"
12609340,12618300," pixels equal mem uh new array yeah it is new array um so the type we're allocating is a color and we're"
12618300,12625900," allocating widths by height pixels and of course uh we need to store the size of the buffer that we just"
12625900,12631420," allocate it so we're going to have pixels width initially it's uh empty and pixel height which is"
12631420,12638940," initially also empty so in here afterwards so we do pixels width which is going to be actually equal"
12638940,12646620," to the width that we received from the color and uh height okay so if we try to compile this into i think"
12646620,12652940," npm run builder let's see what's going to happen so there's a bunch of things in here yeah so we are missing"
12652940,12657580," screen width and screen width and screen height so it's actually super easy to fix i'm going to query"
12657580,12669020," replace screen width with uh pixels width let's go and query replace actually not width uh not width"
12669020,12684140," pixels with pixels uh pixels with uh jesus christ it's hard uh query replace pixels with pixels with let's go"
12684140,12691500," oh all right and the same thing for the height uh the same thing for the height uh the same thing for the"
12691500,12696780," height so let's try to look about one more time um all right so i think it's going to work this time"
12698220,12704140," it should work this time okay so and if i start serving all right so i'm trying to serve the whole"
12704140,12710780," thing and i open the game in here it's not supposed to work let's open dev tools and take a look at the"
12710780,12718060," error right memory x is out of bounds which is pretty much expected right so now uh let's actually try to"
12718060,12731180," call that initialize function uh right so it is in a client mts where do we do web assembly um instantiate"
12731180,12736220," there we go so this is where we do web assembly instantiate and after we instantiate a web assembly"
12736220,12741900," what we have to do we have to do we have to do we have to take instance exported functions and uh just call to"
12741900,12749260," initialize right so um typescript can't really find this function right because it's not really"
12749260,12755980," declared anywhere because expert is just like an abstract sort of like a record thingy which is"
12755980,12763420," just uh yeah so it's basically an object uh with the keys as strings and the values right so it doesn't"
12763420,12769500," know if it has this function there or not uh one way i found to actually make uh typescript shut up"
12769500,12776140," about this kind of stuff is just declare it like this uh as a callable function but it will be better"
12776140,12782140," to have like a very specific interface right that just declares all of the exported functions out of"
12782140,12788060," the web assembly module and maybe at some point i will do that right so the code that um you know is"
12788060,12793260," responsible for uh instantiated web assembly in the future is going to be rather small maybe at some"
12793260,12797580," point we're going to even get rid of typescript completely right so because i expect the javascript"
12797580,12803420," code to shrink like significantly it's going to be just a glue code between uh browser and"
12803420,12810620," web assembly module hopefully at some point so uh none of that uh has to be pretty or anything"
12810620,12819980," okay so let's actually try to recompile it one more time uh right and uh i'm going to restart the game"
12819980,12828460," and the game is working look at that so yeah we can uh use dynamic memory allocation in uh web assembly in"
12828460,12837180," c3 we just have to initialize uh everything first right so seems to be good seems to be good and uh"
12837180,12842060," that's it for today thanks everyone who's watching me right now i really appreciate that have a good"
12842060,12848380," one and i see you all on the next recreation programming session with a mr azuzin i love you"

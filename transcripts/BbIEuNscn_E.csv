start,end,text
0,9220," are we live are we live"
9220,18640," so we're we're live uh okay i i can see you in the chat that we're live but not"
18640,28800," uh not on twitch a reactive app am i right right so that's why you have to write in react so your"
28800,35040," application is reactive enough hello everyone and welcome to yet another recreation programming"
35040,41600," session with a mr let's make a little bit of announcement and officially start the stream"
41600,48880," officially start the stream uh so we're gonna do red circle uh live on twitch and what are we doing"
48880,56080," on twitch.tv website today uh today we are rewriting my go app in rust"
57600,63840," i'm gonna give the link to where we're doing all that twitch.tv/todding and i'm gonna ping"
63840,69520," everyone who's interested in being pinged and there we go the stream has officially started so"
69520,77840," uh yeah essentially i just remembered somebody reminded me when i uploaded the"
77840,85760," vod of the previous stream to to youtube somebody in the comments section reminded me uh that weren't you"
85760,92560," supposed to aren't aren't i supposed to um like not start any new go projects because of the whole"
92560,98960," telemetry stuff like that and i just realized that i completely forgot about that i completely forgot about"
98960,108000," the telemetry thing and i suppose that was the plan of google that was the fucking plan of google so to"
108000,116080," basically make it opt in make people get comfortable completely forget about it and one day one night"
116640,124560," turn on the telemetry on for everyone so i can see that i can see their plans i can see their plans"
124560,133440," so uh because of that we are rewriting the entire thing in rust right so i mean uh to be fair i don't"
133440,140400," really care that much right i don't really care that much uh so if it wasn't super easy to do that i"
140400,150080," wouldn't even probably try to do that but uh i looked into what kind of things are available in a rust standard"
150080,157920," library the crates that come with uh you know out of the box without installing anything and i i noticed"
157920,162960," very cool things actually so let's actually do rust up doc uh and see what kind of primitives are"
162960,169680," available to us uh so yeah let's wait a little bit let's wait a little bit i think you have to do"
169680,175600," that without the ampersand so rust up doesn't really work uh well with uh with emacs for some"
175600,182080," reason sometimes so it's it's a bit weird uh it's a bit weird in fact so essentially uh one of the"
182080,187920," things we need one of the things we need we need tcp connection uh like very easy one uh out of the box"
187920,194640," we have things like tcp listener right so you can literally just create a tcp listener uh just like"
194640,202000," you would in in go and it's super easy to accept the incoming connections like this is literally the"
202000,209920," loop to to accept incoming connections and uh so instead of go routines we could just use uh regular"
209920,216560," threats right so we could use threat spawn uh right so you can literally just take a function"
216560,221280," and spawn it as a separate threat and this is something that we do in go as well and another"
221280,228640," thing that we rely on in the go application is channels and apparently rust does in fact have"
228640,235440," something similar to channels right so uh there is a whole package called mpsc uh channel mpsc stands"
235440,241040," for multi-producer single consumer fee for q communication primitives and this is exactly the"
241040,246160," pattern that we use in our application as of right now it may change in the future but that's the"
246160,251360," pattern that we use right now so what that means is that using only the standard library of rust"
251360,261680," we can translate go application into rust almost one to one almost one to one because like rust for"
261680,267760," that specific case has pretty much the same parameters that we already use and go and i got"
267760,272880," really curious like what's gonna happen can we easily do that can we just like translate it one to one"
272880,278240," and see like the difference uh and and stuff like that that's kind of interesting right and again"
278880,285280," it's it's kind of annoying all the google drama and them pushing to collect more and more data"
285280,290880," about the users is in fact annoying and i kind of want to push against that but if it wasn't"
290880,298160," this kind of situation where like rust already has all like the same primitives and we can just like"
298160,304000," translate one to one i wouldn't probably bother right i wouldn't probably bother but since we have"
304000,308720," this kind of situations i thought that's a pretty interesting topic to explore don't you think"
309760,314560," right so just take this application that we developed and it's a pretty small application"
314560,321040," right it's 158 lines of code 158 lines of code and just try to translate it to rust"
321040,327520," preserving the same architecture preserving the same architecture i think it's kind of interesting"
327520,331360," i think it's kind of interesting i don't know where it's gonna go but yeah something to export"
332400,338640," remember to use rust update exactly so let me actually quickly do that i think i didn't do"
338640,345600," that for for quite some time so why is telemetry that big of a deal is there no option to opt out"
345600,352880," already we already discard that on discord a little bit uh the telemetry itself that specific executive"
352880,361600," decision that google made is irrelevant to the whole situation it is irrelevant what's relevant is the"
361600,368400," bigger picture is basically the direction in which google keep pushing the goal posts"
368400,374800," you know what i'm talking about so they're slowly they're pushing like slowly to that direction they're"
374800,379760," preparing they they tried they tried the waters they tried to enable it and the there was a huge"
379760,384960," there was a huge backlash they still added the telemetry but they made it opt-in they're gonna"
384960,390640," wait a little bit until everything settles out and they will try again if there will be another backlash"
390640,395840," okay they'll wait a couple of years they will try again until people will accept it and then they will"
395840,401360," say okay we're only collecting like how many times you build okay they will wait a couple of years and"
401360,406240," then say oh we're also going to collect how what what kind of dependency do you use it is also important"
406240,411200," for us right okay everyone's going to accept that okay so another goal post is actually knocked off"
411200,416000," and then they're going to say oh we also want to know your like email associated with your github you"
416000,421040," you don't mind that right so we can associate you okay so we're going to collect that and another goal"
421040,426560," post and another goal post and another goal post and on each goal post everyone is going to be saying"
426560,432320," that everyone is going to be saying that why is that that big of a deal it's just an email right so"
432320,436400," why is that big of a deal it's just the dependencies it's fine it's fine it's fine it's fine and it's"
436400,441920," just like the all the tentacles like slowly slowly slowly getting into that that specific technical"
441920,448560," decision it's irrelevant it is irrelevant what's it what's relevant is the bigger picture you know what"
448560,455200," i'm talking about and of course i don't mind them collecting the amount of builds i do of course and"
455200,462000," that's the point you're not supposed to mind that that's the goal that's how it works"
462000,470880," uh right i really like this one just a second i just hope they don't reach the collection how"
470880,476400," many times we built failed that's the worst one that's the word they should know that that's the"
476400,485680," huge humiliation for everyone um all right so we have updated uh so and let's just go ahead and uh"
485680,489600," you know create a hello world how about that uh"
496640,505360," so hello world hello world and i'm gonna do rust c so i'm not gonna be using cargo right because i"
505360,510720," don't really plan to use any third party dependencies right so i didn't plan to use any third party"
510720,516960," dependencies so let's actually do main and i go we have in fact hello world uh i actually kind of lost"
516960,522800," it there we go so look at that beautiful beautiful hello world and it's actually smaller than in go"
524080,531440," rust is more concise than go because in go what would you have to do you would have to do a package main"
531440,541040," package main use fmt and some other so here is just main println hello world it's that easy it's that"
544640,556080," anyways so uh let's actually uh take a look at tcp listener uh listener so tcp listener should be pretty"
556080,568480," easy to pull off i'm gonna do std uh use std net tcp listener listener so and yeah so it's capitalized like"
568480,579520," that i can do tcp listener and i can just bind to 127 uh 0 0 1 69 69 right so this is what we're binding"
579520,585760," to if we take a look at the definition of the bind it returns result tcp listener right so this entire"
585760,593840," thing may fail the way i like the way i like to uh handle errors in go right the way i like to handle"
593840,601280," errors in go is actually map error and log them right just lock them but then since i'm mapping"
601280,610320," the error i'm mapping the error to unit right so is this value in go called unit or is it is it called"
610320,615840," something else because in functional programming languages this kind of thing is called unit maybe"
615840,620560," rust is actually calling it something else i don't really know does anybody know do we have any professional"
620560,630560," rust developers in the stream it is also called unit in rust right so it's also called unit invest okay"
630560,638800," very well then it makes sense right so it's coming from function languages right uh so now uh let's"
638800,647520," actually go ahead and uh say something like error could not uh bind and let's say address right and here's"
647520,656000," the cool thing we can factor out uh this entire thing like that and that is going to work so there"
656000,661600," is a little bit of a string interpolation there is a little bit of a string interpolation in specifically"
661600,667520," this println macros right so we can use that a little bit we can use that a little bit and that is"
667520,673200," basically it so uh there could be a little bit of problem with the logging sensitive information and"
674480,681120," in rust it could be a bit of a pain in the ass but that's totally fine right so this entire thing now"
681120,689760," returns not just result some sort of error uh tcp listener right so we sort of consume the error and"
689760,696080," we log the error now it returns this right and the reason why i like to do it like that is because"
696080,701440," you don't have to think about adapting the errors between like function calls and stuff like that and"
701440,707040," using boxes and interfaces and stuff like that and quite often in the majority of the situation"
707040,716000," you want to just lock the error in the place that it happened and the only thing you want to propagate"
716000,724240," upwards right up upwards the call stack is the fact of an error happening right so usually error happens"
724240,730320," deep down in a call stack and you usually know what to do with that error there but up there"
730320,737920," you don't really care that much of about the details of the error down there except that the error has"
737920,744480," happened so you just use the fact that the error has happened to retry something or try something else you"
744480,751440," usually don't care about the specifics there so and if you start caring about the specifics it's usually"
751440,757280," don't have to be propagated too much upwards just like a little bit and it's super easy to to add"
757280,761840," in the majority of situations when the error has happened you just want to log it and just propagate"
761840,768160," an error the effect of an error up and continue and it kind of makes everything easier uh does anybody know"
768160,774800," what i'm talking about right so usually you want to propagate uh as much of the information about error"
774800,784240," uh upwards as possible if you are writing um a library and you don't really know all of the possible use"
784240,790880," cases of that library in that case you kind of propagate as much of the information as possible"
790880,798000," and expose that information uh to the interface but if you're not developing a generic library"
798000,803120," you usually kind of know what kind of information you need where and handle where so it's not really"
803120,811040," that important right so the complication of handling error errors comes from the uncertainty"
811040,816400," right when you're writing something very specific there is very little uncertainty so you can just"
816400,822560," hard code things uh hopefully that makes sense at least this is my experience this is what i experienced"
822560,827120," over the years maybe it's not applicable to everybody but i mean this is quite often what happens"
827840,835280," uh at least to me"
835280,841200," anyways so and uh now it's just a result and uh interestingly now i can just always return"
841200,850480," uh a result nothing and uh that's basically it and i can just like do dollar or not dollar question mark"
850480,857520," jesus christ and uh that's basically it right so this is a listener this is a listener and we've got the"
857520,863360," listener so we just got the listener if we couldn't do that uh we just print it and we just go up and it"
863360,870400," feels like a c code and it even feels like a go code isn't it right so because in the go code what we did"
870400,877280," we just opened it we just opened the listener it failed we checked that it failed and we logged that"
877280,883840," and it's basically like that except we managed to merge these two lines these two statements"
883840,890720," right so in rust we literally managed to merge these two statements because now we have assignment and"
890720,899840," simultaneously handling a log in that thing uh right so now you can ignore the error in go though you can"
899840,908400," ignore it in rust as well there you go you just ignored it or like you you can do something like"
908400,915600," that and you continue the execution you don't want to ignore it you just do that it's just like one"
915600,924000," symbol you decide you want to ignore it or you don't want to ignore it so isn't that cool right uh so"
924000,936160," anyways so it's a little bit more like a verbose syntax right additional things you need to understand"
936160,942720," how the question mark works right so question mark is not particularly intuitive uh so there's a like"
942720,949360," the syntax in in rust is a little bit more noisy right so it's a little bit more overloaded in go"
949360,954560," it's pretty straightforward like there's not that much things going on uh right it's more a simplistic"
954560,959520," language okay so we can try to build this entire thing and go through the compilation errors i'm pretty"
959520,965760," sure there are some compilation errors yeah because uh we need to probably do something like result"
965760,970000," result maybe i'm gonna even just like do it like that and i'm gonna have my custom result"
970000,979200," uh right which is just result that doesn't have any error but has the type t so that makes it a"
979200,986960," little bit easier uh to work with so and in here of course uh you need to return nothing uh there we go"
986960,991600," so and that compiled right it complains that listener is not used but that's totally fine"
992160,1000960," uh that is totally fine there we go uh so now uh what are we what do we want to do we want to start"
1000960,1007280," accepting the incoming connection connection so incoming returns you an iterator so it's some sort"
1007280,1012800," of a structure and it implements an iterator and what's the item of an iterator the item of an iterator"
1012800,1019440," is a result tcp stream error right okay so we have a sequences of results you have a sequences of results"
1019440,1027600," you either have the tcp stream or an error um all right so the error actually oh okay so the error is the"
1027600,1033600," second one yeah that's that's what i want actually in this case anyway so we're going to do listener"
1034720,1041680," incoming right and here we get the stream and the stream can be like either failed or not failed"
1041680,1049120," right so we can do match uh stream so you either get another stream and in that case you want to handle"
1049120,1055920," that thing and in case of an error you probably want to just log it but you probably don't want to"
1056560,1061520," you know exit right you want to continue just accepting things probably i don't really know"
1061520,1071200," you can do println error could not accept uh connection uh connection and we can just supply"
1071200,1076720," an error in here uh and just continue handling them i'm not sure if that's good of an idea but"
1076720,1082640," we're going to try that nonetheless uh okay and that should be fine that should compile as well"
1082640,1090560," and that in fact compiles so and in here uh what we can do we can just print something into the stream"
1090560,1096880," so essentially if i understand correctly it's a tcp stream all right it is in fact a tcp stream and"
1096880,1102240," within the tcp stream do we have something like right does it implement a right oh okay it implements a"
1102240,1111520," right interface so that means i can literally do write ln stream uh let's say hello"
1112480,1114640," minor friend"
1114640,1126080," so and i suppose since the stream lives for the entirety of the scope on the next iteration is"
1126080,1131200," going to be automatically closed to be fair this thing is so simple we can probably do it like that"
1131200,1135200," uh right so we can just do it like that and there we go"
1137120,1144160," and this entire thing can return an error so in that case maybe we can just ignore it okay let's"
1144160,1151280," try to compile it and see what's going to say so um cannot write into tcp stream aha because it doesn't"
1151280,1156480," know that it implements right interface we have to explicitly import this entire thing otherwise it"
1156480,1163600," doesn't know how to handle that okay so write ln returns results so it wants to handle that thing"
1163600,1169520," so it wants to handle that thing does any does it have any suggestions on how to handle that better"
1170320,1181040," um so result error found that so maybe we could still wrap those things in that and put semicolons in"
1181040,1188480," there so the results in both of these cases are units can we do something like that okay cannot borrow"
1188480,1194080," this stream as mutable right so you have to explicitly say that this thing is going to be mutable so that's"
1194080,1203120," fine so in result is unused and in this case what we can do i don't know we can just probably log and"
1203120,1215600," ignore that right so say something like uh e printlm e printlm error could not write a message to user"
1217120,1226240," so this is going to be an error and just ignore this entire thing like so i don't know it seems to"
1226240,1238480," be working so that's the whole thing right uh that's the whole i think uh so synchronous networking ew exactly"
1239040,1248160," exactly egg fucking exactly mate uh egg fucking exactly so uh what do we want to do we want to try to"
1248160,1255920," run this entire thing uh before we run it so maybe it makes sense to actually say something like uh info"
1255920,1265360," listening to uh address like so right so i'm gonna uh rewind it one more time and now i'm going to literally"
1265360,1274400," maybe go in there right so we'll just go quickly in there uh right and run this entire thing okay"
1274400,1284320," so now i can do telnet uh 27 001 69 69 and uh all right so this is not how you do that okay so hello my"
1284320,1285360," new friend ducky crowd"
1285360,1294720," so it is as easy in rust as it is in go believe it or not like at least that specific part uh at least that"
1294720,1307600," specific part so um okay first try mother flip us first try so when it comes to sort of like a safe"
1307600,1314240," mode right so when it comes to the safe mode how can we implement that um so because it's kind of"
1314240,1324000," difficult like in um in run in go we could just have a single function called sensitive right so sensitive"
1324000,1330240," which accepts a string and returns a string and this is because go is sort of like this very much dynamic"
1330240,1335200," gc-ish language it's so easy to just allocate a string and then just like pass it around it's just"
1335200,1342320," like very much it feels like scripting language sometimes but uh so in this case uh we don't really"
1342320,1349840," operate on the level of strings we usually operate on the level of types that implement interface display"
1351040,1359040," the implement interface display right so and essentially to do the same solution we will need"
1359040,1365360," to convert the displayable things into a string and only then do the dispatching whether we are in safe"
1365360,1372640," or unsafe mode and it's just like kind of a pain in the ass so the more like a rustic solution the more"
1372640,1378480," ideomatic solution how people like to to say right so the more raster solution would be to probably"
1378480,1382880," have a special structure right so let's actually create something like sensitive"
1382880,1388480," and it's going to be like a wrapper around some sort of a type right so because of that we're going to"
1388480,1395360," supply that type as a parameter uh right so and here we're going to have like an inner type called t and"
1395360,1402400," this entire thing is going to own uh that thing right it is going to own that thing so and then we're"
1402400,1413360," just implementing display for sensitive t uh and uh we also have to put t in here and we also have to say"
1413360,1418960," that t itself has to be displayable i don't remember where we have to say that i think we have to say it in"
1418960,1426800," here somewhere yeah there we go right so essentially for sensitive to implement the display interface the"
1426800,1433840," inner type also has to be displayable the inner type also has to be displayable and we can have some"
1433840,1442720," sort of like global constant like a safe mode boolean true right and when we are implementing fn fmt"
1443440,1448800," i'm intentionally not uh filling up not writing code correctly because the compiler is going to tell"
1448800,1454560," me like a little bit later but anyway so in here what we can easily do we can easily do if we are in"
1454560,1463280," a safe mode just uh do write ln uh for and usually accept some sort of fmt in here but it doesn't matter"
1463280,1475680," uh reduct it uh reduct it uh reduct it uh otherwise otherwise otherwise otherwise otherwise write ln that"
1475680,1484640," inner thing right inner thing and i suppose here you take the inner thing from this cell"
1484640,1492480," something like that so and the way you use that sensitive you essentially rub it all right so you"
1492480,1501040," essentially rub it with the sensitive error i guess that's how i see that that's how i see that so that"
1501040,1508160," way uh you can quite easily control what mode you're in whether it's like true or false but this is quite"
1508160,1515360," easy because it's a global compile time constant or something like that making it um more dynamic more"
1515360,1521680," runtime-ish probably going to become a little bit more difficult uh but we'll see we can probably put it"
1521680,1525360," behind some sort of like a reference count or something like that there are some mechanisms"
1525360,1532400," to have global variables in rust there are some mechanisms to do that uh right so maybe atomic bull"
1532400,1537840," some people suggest an atomic bull doesn't doesn't really matter that much anyways so let's actually go"
1537840,1544880," through the compilation errors and see what the do we have all right so uh what does it say uh must be"
1544880,1552080," string literal uh so the thing i want to do i want to compile it tell me like what's the what's the signature"
1552080,1564000," of the fmt uh right because i don't remember it yeah so we need to import std fmt and the way i like to do that"
1564000,1574880," is essentially fmt fmt fmt there we go so tell me what we're supposed to do in here so uh here is the"
1574880,1580640," methods that's the method that we're supposed to have that's the method we're supposed to have so it's"
1580640,1587440," supposed to be like a formatter it probably comes from here as well um right so we can also probably say"
1587440,1594080," something like this there's a lot of stuff the compiler says to us we don't really need so that"
1594080,1603280," and in here we can just do it like that so and this is the formatter so we should be able to just do it"
1603280,1611360," like that there we go so that's the proper implementation that's basically why uh i didn't"
1611360,1616960," like write it right away because i don't remember this off the top of my head uh all right so like i let"
1616960,1622000," the compiler to tell me like what kind of things what kind of weird noisy things i have to put in"
1622000,1630480," here because i don't freaking know uh all right so result remove uh these generics so it doesn't"
1630480,1636960," need this kind of generics right is that what you're telling me uh remove this semicolon okay are you happy"
1636960,1646480," now uh okay so uh has no field error okay so that essentially means uh we could probably do something"
1646480,1657600," like new in here right so and then implement sensitive t uh fm new right which accepts"
1657600,1666480," the uh the t right the inner thing t and returns self and it is as easy as inner self"
1666480,1676000," inner self are you happy now it is it seems to be happy uh right and when we are in a safe mode we should be able to just do something"
1676000,1680880," something like that and it failed it couldn't bind that specific thing because it's already bound"
1680880,1689360," uh right but in any case uh there we go so listening to that uh but this is because"
1689360,1695840," we only made the sensitive the error right so what if we made the address also sensitive"
1695840,1705600," uh sensitive new address so and since this entire thing is generic since this entire thing is generic it's supposed"
1705600,1712240," to be it's supposed to be it's supposed to work with any type that is sort of displayable right so and"
1712240,1717520," it didn't work for some reason like what the uh so if we are in a cell because"
1717520,1726800," did i fuck something up chat how is that even possible how is that even possible because"
1726800,1735360," i recompile it listening and it's supposed to supposed to not not do that supposed to not do that so that's kind"
1735360,1744400," of weird because okay so here is oh i'll make okay so i'm actually doing the wrong thing this is the error"
1744400,1751680," reporting right so this is the error reporting and then i can do sensitive new uh address there you go"
1751680,1757440," there we go as you can see now it is redacted and if i do something like that it is not redacted"
1757440,1762880," i don't particularly like this solution honestly i do not particularly like this solution i think in go"
1762880,1768160," it's a little bit easier to pull things like that off uh i think it's a little bit easier"
1768160,1777280," but it is what it is right so to make it more runtime-ish as i already said we have to use some"
1777280,1785680," weird forbidden magic or maybe supply this kind of information with the sensitive right so basically save"
1786720,1793360," boolean and then you supply it in here and then you have some sort of yeah you have to propagate"
1793360,1799200," it a lot in a lot of things and it's not particularly convenient so rust intentionally makes this kind of"
1799200,1806240," stuff inconvenient for you for the sake of safety for the sake of safety it makes it very much inconvenient"
1806240,1814160," for you um right so because we're probably going to have like a global uh configuration right and for"
1814160,1819520," example in in go you already have this sort of like like a global configuration and having a global"
1819520,1824800," configuration in rust is usually pain in the ass right so you either have to constantly forward it to"
1824800,1831920," each call or maybe have a global variable or something like that or whatever so but anyway"
1831920,1840880," so yesu yesu yesu yesu so we have a sensitive thing now we have a sensitive thing so i suppose maybe here"
1840880,1846320," uh i'm gonna just like keep errors as usual i don't think they're too sensitive"
1847280,1854240," maybe so maybe address is fine but specifically in case of an error maybe error is in fact sensitive"
1854240,1865120," so in here can i actually just do it like that because i remember that in go that in go"
1865120,1871360," yeah we just did did it like that and it automatically listened to all of the uh all of the"
1871360,1878160," possible addresses maybe that's what we can do uh fail to look up information uh name or host unknown"
1878160,1881760," right so you cannot do it like that in go you probably have to do it like"
1881760,1886880," like that and only then it will work okay so if you want to listen to all of the addresses in rust"
1886880,1892080," you have to use zero zero zero zero zero zero zero zero zero um so that makes sense"
1896000,1904640," all right uh so people suggesting to use tuple struct for the uh for the sensitive it's not a bad idea"
1904640,1910320," let's actually quickly do that i think it will make it easier uh right because you don't like a little"
1910320,1918640," bit less syntax right and we probably won't need this kind of thing uh right so let's actually try to"
1918640,1928080," do it like that um so semicolon uh so and because of that we probably want to do something like uh can"
1928080,1939200," i do self inner uh self like this and then i can just remove that and so when it comes to here"
1939200,1946080," it becomes easier that's for sure it actually becomes way easier okay so that's a good idea thank"
1946080,1952080," you thank you thank you so much thank you so much who suggested to to use it like that and now it is"
1952080,1961280," basically equivalent to what we had in go isn't it uh it's basically equivalent because in in go we just"
1961280,1966400," had sensitive which is just a single function and you write just a parameter to this thing yeah it's"
1966400,1973840," basically equivalent syntactically equivalent to go not semantically not semantically but syntactically"
1974400,1981280," uh right so that's pretty cool i think right so because there's no actual like conversion between"
1981280,1986800," type and string and stuff like that we're just directly uh forwarding this thing to uh to the"
1986800,1997760," formatter and stuff like that so people also suggested to maybe use something like fmt uh right as well"
1997760,2004720," also not a bad idea also not a bad idea so let's see a little bit better again uh issue issue issue"
2004720,2012960," okay so let's continue so we sort of resolved the sensitive situation right so now we have everything we need"
2019840,2023440," the structure the structure is not required could just uh make function too"
2023440,2030800," honestly no you you can't i don't see how you can do that honestly"
2030800,2039520," because we with at least without converting the type into string at least without the converted type into"
2039520,2046240," string i don't see how you can do that so and i feel like this is one of these things that people can"
2046240,2054720," put up too much because it's such a simple problem so there's a lot of opinions and it's easy to have"
2054720,2060400," an opinion on how to do this kind of thing so i think i'm going to claim this to be the final solution"
2060400,2065040," of this specific thing and we're going to move on and we're not going to discuss that anymore because you"
2065040,2070880," can basically rat hole on that thing for too long right without solving anything so i'm not discussing"
2070880,2077840," that anymore this is how it's going to be tonight all right so uh what else do we have um because it's"
2077840,2085280," too easy to have an opinion on very easy um so now the next thing we need to do we need to"
2086880,2094880," maybe start uh having like separate clients that listens to things right so maybe even in separate"
2094880,2100640," threads maybe even in separate threads so let's actually have a client and what that client is"
2100640,2107200," going to accept i suppose we can just literally move a tcp string into that thing uh right so we're not"
2107200,2118480," gonna handle it right so it's just gonna be like this um and essentially uh we want to probably spawn"
2118480,2128720," a thread i don't remember in go go routines are they real threads or are they so-called green threads"
2130640,2136480," they're green threads okay so it's not going to be then equivalent to go right so they are in fact"
2136480,2141760," green threads all right all right so but i mean i'm still going to using um going to be using real"
2141760,2151760," threads just to like map the code one to one um right so uh threat spawn right so let's do threat spawn"
2151760,2158240," and so let's see how it is implemented so it accepts a function and stuff like that returns a join handle"
2158800,2165440," though we probably not going to join right so we're going to just continue and move on with these things"
2165440,2174000," threat spawn and this is going to be a function and within that function we can just do client um client"
2174000,2182960," string right so that's that looks fine might as well actually move hello minor friend to here because"
2186960,2191840," so and uh this entire thing might as well also return uh this thing"
2191840,2202880," well i mean this one is going to take care of this kind of thing um okay so can i even do"
2202880,2209920," something like this maybe even something like this well yeah probably have to put semicolon in here for"
2209920,2216640," it to actually work properly okay so let me try to compile and see how uh well it's going to work or not"
2216960,2222320," so we don't have a tcp stream let's include the tcp stream it's going to go here uh what else do we"
2222320,2228720," have in here so this is a stream it wants to be mutable sure uh now what do we have in here this"
2228720,2232720," thing doesn't have to be mutable but since we're moving it inside it's going to become mutable anyway"
2232720,2237520," uh right because the client now is the owner which is not particularly great idea i think"
2237520,2243600," uh which is not particularly great idea because it's probably going to be shared between uh the server threat as"
2243600,2248320," well all right it's probably going to be shared between the service as well but who cares who cares"
2248320,2256400," all right so let's create a server threat all right so this is the service threat and uh now let's just"
2256400,2267440," return result this kind of thing and what do we accept in a server thread we like at least in go"
2268960,2275040," server so accept the basically channel messages all right so the channels in rust are a little bit"
2275040,2283680," different actually so the when you create the channel it creates actually two ends the sender"
2283680,2289440," and the receiver which is actually a little bit better i like it better than in go because sometimes"
2289440,2294960," it's kind of difficult to keep track of who's the receiver and who's the sender but maybe in go it"
2294960,2301280," doesn't really matter maybe a very very like um you know can work in both directions but in our case we"
2301280,2307040," use them as unidirectional things and it's just like easier to track this kind of stuff uh in my opinion"
2307040,2314560," right so i think i think it is so let's go ahead and create a new channel so to create a new channel"
2314560,2317760," because what we're going to be storing in the channel what we're going to be storing in the channel we're"
2317760,2324640," going to be storing the uh the messages right so uh let's create uh maybe in num uh is going to be"
2324640,2329680," message and what kind of messages we're going to be using in here so client connected so that's the"
2329680,2337360," first message then client disconnected and then a new message so they're also supposed to have types"
2337360,2343040," attached some data attached to them but we're not going to attach anything yet we're going to attach it later"
2343680,2351440," so and a server is basically becomes a receiver right so we're accepting messages messages that are"
2351440,2359840," uh receiver of messages there you go something like that so we'll put it like this so this is going"
2359840,2367520," to do so this is a receiver so we'll need to have all of these types so let's quickly do use and"
2368400,2376160," let's include things like sender receiver uh receiver and so on and so forth let's go through"
2376160,2385520," completion errors just to see what's gonna what's going on so this is uh expected found channel really"
2385520,2395520," ah it's because it's like this so channel is a function not the package okay all right so it compiled"
2395520,2404000," surprisingly it compiled surprisingly all right all right um so now so here's the listener and stuff like"
2404000,2411520," that we want to create a channel uh right and the channel is going to consist of the message so the first"
2411520,2420640," one is the sender message sender message receiver receiver like this so and it does that without errors so it"
2420640,2429280," creates that without any errors that's pretty cool so then we want to spawn the server thread we want to"
2429280,2445040," spawn this server thread uh like so threat spawn spawn spawn server message receiver specifically right so this is the"
2445040,2451280," huge difference between like rust and goal specifically because in go you just create one channel and you"
2451280,2458400," use one handler for both receiving and sending in both of the threads right here you have to put different"
2458400,2466400," handler to different places right different handler to different places um so and what's what if you're"
2466400,2472800," going to have like a several senders can you share the sender that's a very interesting question because"
2472800,2480640," we're effectively going to be sharing the sender between several places how do we effectively share"
2480640,2486960," the sender so that's very interesting question so maybe we should read that so this creates new asynchronous"
2486960,2493520," channel returning the sender receiver halves halves all data sent to sender will become available to"
2493520,2500240," receiver in the same order as it was sent no send will block uh the calling threat uh this channel"
2500240,2507360," infinite buffer uh this channel has infinite buffer unlike sync channel which will block uh after the buffer"
2507360,2513520," limit is blah blah blah whatever so the sender can be cloned to send to the same channel multiple times"
2513520,2522080," but only one receiver is supported this is perfect okay so essentially every time we create a new client"
2522080,2529120," thread we can just clone a sender and hand that sender to it okay that's that's pretty cool that works"
2529120,2534240," for me so again it's not going to be equivalent to go right because these are real threats which"
2534960,2540640," uh could be a little bit heavy for the system right so for the system like green threads are pretty cool"
2540640,2546320," that in that sense that they're very lightweight so you can create like a lot of them so i think"
2546320,2552720," in the case of rust we won't be able to create that many threats um as many as we could be able to do"
2552720,2559360," that and go uh but then then once we have a working solution in rust maybe we can basically re-architecture"
2559360,2563440," the whole thing to support more connections and stuff like that right so"
2564960,2572480," uh so yes yes that's actually pretty cool if you can clone it so it fits perfectly to our use case i"
2572480,2580800," really like that okay so the client here uh so this is the message g's uh so this is a single stream and"
2580800,2586480," we're also accepting messages but this is a sender of the messages right so this is the sender of the"
2586480,2593360," messages and the client whatever the client sends will be received by the server in here right to"
2593360,2600480," reset by the server in here so now every time we create a new client what we're effectively doing"
2600480,2609200," right so we're just doing message sender and we just clone this entire thing right we just clone this entire"
2609200,2613920," thing hopefully that will work i don't really know so let's actually go through the compilation errors and see"
2614480,2621680," uh right so uh we don't really use these messages so this is a warning um so closure may outlive the"
2621680,2632640," current function but it borrows message sender yikes so here is an interesting thing how can i look one way i"
2632640,2644080," can i can do that right so i can do message sender uh like this and then i move the message sender uh like this"
2644080,2649280," can i uh"
2649280,2656080," it is so funny that this is the solution it is so fucking fun"
2656080,2661040," right because i suppose um"
2661040,2666880," it moves these things inside of this function inside of the thread"
2666880,2673680," right and with when you try to do it like that it first moves message sender and then clones it so you need to kind of clone it"
2673680,2676880," clone it outside and only then move it"
2676880,2684720," uh look i mean it makes sense to me it makes sense to me it's just funny that that's how you have to do"
2686720,2699920," it's kind of sad that like you really need to understand this kind of things um right you really need to understand this kind of things um right you really need to understand this kind of things uh which is not particularly newbie friendly"
2699920,2707120," oh by the way when they release that whole sort of like a rant about like user friendly equals"
2707120,2712320," uh professional uh professional hostile i've heard one interesting point is that like rust is kind of an"
2712320,2718320," exception out of that right rust is kind of an exception because it's newbie friendly right and"
2718320,2723760," professional and stuff like that and not professional hostile like if you think that rust is newbie friendly"
2725680,2733920," rust is not fucking newbie friendly like factually de facto de facto rust is not newbie friendly it is"
2733920,2741520," marketed as such for some fucking reason i have no idea why it is marketed as newbie friendly but it's"
2741520,2747440," very much newbie friendly very much newbie style i'm telling you so"
2747440,2760560," so quite often it is marketed as newbie friendly it is really marketed as newbie friendly but it's actually not it is very much not"
2760560,2768240," all right so to be comfortable"
2769200,2775920," with uh with uh with the rust to be comfortable with the rust uh you either have to do it for like"
2775920,2787680," a very long time or you have to have background in pure c pure c pure c pure c c plus plus separately"
2787680,2794800," you need to have the ground in pure c and c plus plus separately and haskell and all these three simultaneously"
2795920,2801680," if you have these three backgrounds simultaneously you would feel comfortable in rust yeah sure so"
2801680,2812320," or a camel maybe a camel also fine right so you can replace haskell with the cam but haskell would be a little bit better right so"
2812320,2814000," um"
2819600,2825440," i have the ground in those three i still don't like same i also have background in all of the three"
2825440,2831680," i also don't like rust but i was not saying that to feel comfortable right so it's it's a little bit"
2831680,2838400," different right you can comfortably program in this language without liking it but i mean it's it's very subtle"
2838400,2846320," thing uh anyway so uh let's continue so this entire thing compiles uh this entire thing seems to be compiling"
2846320,2857040," so that's pretty good that's pretty gucci that's pretty tamaguchi so how when do we send stuff to uh to this"
2857040,2866480," thing i suppose we're sending message client connected uh before yeah i don't really know why the"
2866480,2874640," fuck we do that in here uh personally today i would have actually moved that message sent inside of the"
2874640,2880960," function client i think that would make sense to me right so just like move it there so but anyway we can"
2880960,2886240," do it in here then uh we can do it in here so we can take the messages and the question is how do you send"
2886240,2893360," it by the way i'm using this channel api for the first time in my entire life i literally learned that"
2893840,2900480," this thing exists before the stream and i started the stream right away so i'm literally figuring out"
2900480,2905920," how to use this thing right on the stream uh all right so sender let's take a look but we have"
2905920,2911040," documentation right so we have documentation so i'm pretty sure it should have method sent right so i mean"
2911040,2917280," that's pretty expected uh right and you just send the thing there okay so let's actually read what the"
2917280,2922560," fuck this thing does attempts to send the value on this channel returning the back if it could not be"
2922560,2930720," sent um a successful send occurs when it's determined that the other end of the channel has no hung up"
2930720,2935760," already and then successful send would be one where the corresponding receiver has already been"
2935760,2941680," deallocated now that the return value error means that the data will never be received but the return"
2941680,2946960," value of okay does not mean that the data will be received is possible for the corresponding receiver"
2946960,2955680," to hang up immediately after the function returns it's to hang is a regular verb right so hang hung"
2955680,2962480," okay so i'm sorry english is hard for me i don't speak english uh this method will never block uh the"
2962480,2966720," current thread and to be fair it doesn't really need to right so it doesn't really need to block anything"
2966720,2977360," okay uh so let's send uh something like message uh message client uh connected right so for now we're"
2977360,2984480," not going to attach any information so the message client connected so map error so if we couldn't do this"
2984480,2989520," kind of thing so that means that means that the receiver has been deallocated and it makes sense to just like"
2990160,3008160," go out of here right so so e uh print ln um so let's say could not could not send a message to the server"
3008160,3018000," threat and this is basically an error and to be fair i'm not quite sure right so i'm not quite sure what"
3018800,3024880," if i really like that because i'll have to do that every time i try to send so maybe it would be nice"
3024880,3031520," to have some sort of a wrapper but i mean who cares whatever how much money to get you to write"
3031520,3037840," this in brain fog i probably won't write this in brain fog but i actually want to do a brain fog stream"
3037840,3044400," that would have been interesting i think like where i try to program uh some simple algorithms in brain fog"
3045360,3053920," now what do we need to do we need to start uh like reading things from the buffer so let's actually"
3053920,3059840," start in infinite loop right so apparently in rust there is a special construction to create an infinite"
3059840,3068640," loop which is kind of cool i'm not gonna lie and uh so here uh we can take a look at tcp stream right so"
3068640,3076800," let's take a look at tcp stream does it have a read so there is a read timeout oh yeah by the way right"
3076800,3086800," so apparently the for at is vulnerable to slow loris but it's kind of interesting it's vulnerable not to the"
3087600,3097120," writing slow loris but to the reading one right to the reading one so essentially if we take a look at"
3097120,3108480," the goal uh thingy and we take a look at the server server thing uh so in server within this within a single"
3108480,3116560," thread what we're doing we're iterating through all of the clients and we're synchronously writing things"
3116560,3124560," into each individual client so if there is a one slow reader among the clients it will stall the entire"
3124560,3130480," server i'm surprised nobody nobody tried that on the previous stream you could have actually"
3130480,3140000," stole the entire thing right so uh so we're gonna actually translate it as a this so the rust version"
3140000,3146160," also will have that and once we finish translating we're gonna fix it in the rust version right so"
3146160,3152640," that's basically the idea so but keep in mind right so prepare your slow loris attackers right so to"
3152640,3153920," stall the entire server"
3153920,3164560," to stall the entire server so we set the message connected and now what we need to do we need to"
3164560,3172560," we can use the read timeout uh or maybe maybe not maybe it doesn't matter so i want to just do a"
3172560,3176480," regular read uh and read timeout"
3178960,3185200," um what does it return returns the read timeout ah it doesn't okay"
3185200,3195200," i just had a huge brain fart i for some reason i thought this is a method that performs the read"
3195200,3203120," with a certain timeout and i'm just looking where is the output where is the buffer into which it's reading"
3203120,3210720," it just returns you the value set within the okay maybe it's not my problem because why didn't you"
3210720,3218320," call it get read timeout or something like it looks like an action it looks like it looks like a perform"
3218320,3224320," read with a timeout and it's just like look where is the output ah jesus christ anyway so it's probably"
3224320,3230400," reads through the read interface yeah there we go so it has a read interface and blah blah blah so what"
3230400,3236560," what kind of stuff does read interface have right it has a limited uh thingy it accepts the buffer that"
3236560,3242960," is mutable i hope that the fact that this buffer is mutable doesn't mean that it's going to resize it"
3242960,3258400," i'm having ptsd"
3258400,3266320," anyway so i'm just joking obviously so um okay good"
3266320,3276400," so i suppose uh we could basically allocate uh some sort of like a vector"
3276400,3283760," uh so if i take a look at the vec can i allocate vector with a certain size"
3285200,3295120," uh so i can do new it's just like a new thing new in uh right it's um the vector will not allocate"
3295120,3302240," until elements are published okay so it's probably not one uh so there's a width capacity right so there"
3302240,3311440," is width capacity is there something else uh so it's probably not we could probably resize this entire thing"
3311440,3318400," yeah so yeah so that looks fine that looks fine that looks fine so resize width and we can use that as a"
3318400,3326160," buffer you can use that as a buffer okay uh so we can just create a buffer and we can do that"
3326160,3335120," resize width so there's just resize but i suppose it um"
3337200,3342160," oh it's resize with the function so the value is computed with a certain function i don't think this is"
3342160,3345920," what we need we just need this thing um so resize"
3345920,3353760," so the size is going to be 64 and just fill it up with zeros right so this is going to be definitely"
3353760,3360480," like bytes um i'm not going to specify any of the types because i hope it's going to infer them somehow"
3361120,3366560," like it's going to infer them somehow so in here we have read and i'm going to be basically reading"
3366560,3374320," into the buffer right so this thing has to be mutable and there we go we just read into the buffer so in"
3374320,3385120," reading may also fail of course right so it may fail um map error so this is an error and what do we want to"
3385120,3392800," do in case of an error right so if you take a look at how it is implemented in go right so how it is"
3392800,3398400," implemented in go in case of an error we just close the connection right so we just simply close the"
3398400,3403440," connection but suppose we don't really have to close it explicitly we can just exit this entire function"
3403440,3408480," so that's totally fine but one of the things we may want to do one of the things we may want to do we"
3408480,3416800," want to tell the server that we uh just disconnect us somehow just disconnect us so and we do that by"
3416800,3426400," doing uh message sent right so we do messages uh we do messages and we just send uh disconnected right"
3426400,3435600," so client disconnected and we just exit afterwards uh and since i put this thing in here so it's totally"
3435600,3444240," fine okay that's cool uh so and this entire thing should return n and now we should be able to"
3444240,3451760," oh okay so it works so this is actually works too well in my opinion all right that works too well"
3451760,3458960," surprisingly and of course this can fail as well so maybe we'll have to we'll have to do something"
3458960,3465680," about that we'll have to do something about that all right so uh people say tell me that slices are"
3465680,3473200," usually like this uh this is how i can take a take a slice and now i need to try to convert a sequence"
3473200,3482960," of bytes into utf8 string so can i do something like from utf8 is there something like that so str from utf8 okay"
3482960,3489440," so and it can fail which is good right so if we didn't manage to convert it properly we won't be able"
3489440,3497440," to do that what's interesting is that um we're going to be striking the people who didn't send utf8"
3497440,3502880," compliance stuff we're going to be striking it and we can't really strike them on the client side we have"
3502880,3508400," to strike it on the server side so because of that i think i'm not going to be converting it to utf8 here"
3509040,3515360," yet i'm going to be not going to be converting to utf8 here yet uh so i think i'm going to be sending"
3515360,3522560," it to uh the server messages new message right so new message uh but here comes an interesting thing"
3522560,3532240," here comes an interesting thing um we'll have to copy this entire thing we have to copy this entire thing"
3533600,3540720," uh so and the messages the the buffer messages that we're operating with in here are very small"
3540720,3547760," so maybe copying them is not that much of expensive maybe it's not that much expensive so maybe that's"
3547760,3553520," totally fine so right now i'm just outlining how it's gonna go right because uh we're gonna go we're"
3553520,3560160," gonna have a separate session where we go through um compilation errors and stuff like that um"
3560160,3569440," compilation errors and stuff like that and uh so func client that's basically it isn't it yeah"
3569440,3578160," that's actually smaller than i expected like it generally more concise it is generally more concise"
3578640,3584240," and in new message right so we won't be able to do something like this in here"
3584240,3590640," right because this thing has to be owned right this thing has to be owned but i don't really plan"
3590640,3594480," oh i can do something like that"
3594480,3602240," i can do something like that so just like because when you have a owned slice"
3603120,3609440," it's basically a vector right so an owned like thing is basically vector yeah we can put it in a"
3609440,3617360," box i guess we can put it in a box uh but i'm not sure right so we can just do it like that you can"
3617360,3626160," just do it like that for now um right so in a go version we also were sending the sort of the connection"
3626160,3634000," itself right so the tcp string uh but i'm not sure if we'll be able to uh we can't really copy tcp"
3634000,3641360," stream one of the ways we can do that is probably share it between this uh the the threads or something"
3641360,3644560," like that uh right so we'll see we'll see"
3644560,3655760," yes i'm actually unironically expecting we'll get to this point at some point in a stream"
3656160,3661840," classic rust am i right so"
3661840,3672960," i mean this is like yeah this is an unironic type this is an unironic type that people use in rust"
3672960,3680960," right so in each layer of this onion uh has a meaning each layer of this onion has a meaning um"
3681760,3687920," i suppose in this particular case it doesn't make much sense right so it's just like a box itself"
3687920,3694080," is a pointer so you putting it behind a mutex like you could just use arc without any box"
3694080,3700400," and i think you actually put arc inside of the mutex i think i don't quite remember i think"
3700400,3706960," uh so outer is mutex inner arc and then the value this is usually how you share things between the"
3706960,3710560," threads that needs to be sort of synchronized or something like that i don't quite remember there"
3710560,3720080," is arc is outer oh okay uh yeah so you have a value behind the mutex and then you need to share the"
3720080,3726560," mutex between the things and that's why okay so we can i think there it even has examples i think it"
3726560,3735600," even has examples for for this kind of thing uh all right so yeah arc is outer okay so that's true okay"
3735600,3739840," yeah arc is for multiple ownership yeah yeah that makes sense"
3739840,3748080," that make sense so i'm really assuming for one hour so let's actually go to the compilation errors and"
3748080,3755120," maybe make a small break afterwards uh right so that we have in here so message local uh okay so this is a"
3755120,3764480," message g's messages no method to read for a tcp stream and this is because we need to do this kind"
3764480,3769600," of thing but we're already like importing right right so we're already importing right so i can do read"
3769600,3771120," there we go"
3777600,3788160," so in here we can do two vec evc uh all right what else do we have in here so unused write which is"
3788160,3797040," reading okay so you you don't need that anymore uh so error and used error uh yeah"
3799200,3812400," so if print ln uh error could not read message from client uh error like this and then we just perform"
3812400,3820320," that like it already compiles why the does it compile already i'm surprised so we have unused this thing and"
3820320,3827760," i suppose do i really care if it fails or not like at this point at this point we kind of already failed"
3827760,3833600," completely so there's no point in even trying to handle this kind of thing all right we failed to"
3833600,3840080," read do we really care where this thing receives that or not so even if it doesn't receive is there"
3840080,3845680," something we can do right so there's nothing much we can do so it's just like that's why i'm gonna just"
3845680,3853440," ignore it uh and so here we do send and this is map error and if we couldn't send that means there's no"
3854080,3861920," one channel anymore so um could not send message to to here okay what what the do we have in here"
3861920,3870000," uh okay so because this is a map error all right"
3874320,3885520," that's too easy that is too easy that is too easy all right so we went through the compilation errors"
3885520,3888720," as i already said i wanted to make a small break because i ran out of tea"
3888720,3896640," so i would like to replenish my tea and after the break we're gonna move towards the server so the the"
3896640,3905360," real shits will hit the fan when we'll have to do something like this we will need to have to do"
3905360,3912560," something like this we'll need to somehow tell uh the server threat who we are in go we used to do that"
3912560,3922480," by sending the point to the connection right um in in here we could try to just make it arc tcp uh let's"
3922480,3927200," give it a try okay so let's actually introduce arc and see if it's going to work that easily"
3927200,3935120," so this is a std sync arc uh all right so use std sync arc and arc by the way for those who doesn't know"
3935120,3944080," it's essentially shared pointer it's like shared ptr from c plus plus uh but with uh atomic reference"
3944080,3949520," counting right so it's atomic thread safe and stuff like that that's basically what it is um"
3949520,3958560," starting did you decorate your house with halloween shits i do not celebrate halloween"
3961600,3971280," i'm sorry and nobody among my neighbors celebrate halloween and i've never seen a single person in"
3971280,3978400," here who celebrates halloween honestly so it's it's not a thing in in the place where i live i'm sorry"
3978400,3986720," um neither here in eastern europe yeah i'm basically i'm also basically living in eastern europe"
3988080,3996560," so my europe is so eastern it's asia that's how how eastern my europe"
3996560,4004000," my favorite joke of all time i know i made it already twice"
4004000,4010160," um it's right above mongolia exactly"
4015440,4028800," we live near the border of mongolia we don't have halloween here we have"
4028800,4030320," that's what we have instead of helen"
4030320,4033200," um"
4033200,4034080," now"
4034080,4042400," yeah i want you to try to to do the arc thingy right so essentially we're going to do arc"
4043120,4044800," tcp string"
4044800,4054880," okay so and in here right so we're probably going to pass this thing like that right so we're going"
4054880,4062880," to pass this thing like that uh this num but has okay so i'm going to put it in here right i'm"
4062880,4069440," not sure if i yeah we're going to keep it like that why not so and when i'm doing it like this okay"
4069440,4075920," so this is cool uh how do i construct an arc right so this is a seamless situation right but instead of"
4075920,4084320," cloning this stream we're going to be doing arc new stream like so uh is it going to help us"
4084320,4092800," variable doesn't need to be mutable sure sure enough um so we cannot borrow data in arc arc as mutable"
4092800,4095760," okay so you can't borrow it as mutable"
4095760,4107120," what do i have to do to make it mutable is there anything i have to do"
4107120,4114320," so that means i have to put it behind the mutex right do i really have to put it behind the mutex"
4114320,4123200," if i want to make it mutable if i want to make it mutable it looks like i have to put behind the mutex"
4123200,4132560," looks like i have to put it behind the mutex though we can try to do something that we couldn't do like"
4132560,4139600," easily in go right so we could have another sort of like a channel that"
4139600,4146560," through which we receive what we have to send so that means we'll have to put like okay so i feel"
4146560,4153840," like we will have to do the mutex thing here okay so that means it's not as easy as i expected so we're"
4153840,4158800," gonna do that after the break then right so let's first do the break and after that we we can continue"
4158800,4166080," okay so here is the question i just realized that i probably need to do an unsolved computer science"
4166080,4178160," problem uh right how can i share tcp stream between two threads and in one thread read and another thread"
4178160,4188160," right and both of these things are synchronously can is this difficult computer science problem solved in rust"
4188160,4200320," is it possible to do in rust looks okay people are uh guiding me in the right direction i think i'm not"
4200320,4207360," 100 sure but i think they're guiding me in the right direction so we're gonna try to do tcp stream because"
4207360,4213200," the words like splits and locks kind of sound what i need but i know the chat they're gonna"
4213200,4219360," fucking debate me they're gonna fucking debate me so uh but it kind of sounds plausible chat is basically"
4219360,4226240," chat gpt right so it just confabulates some you know plausible that doesn't"
4226240,4233040," actually isn't actually true but i mean it wastes your time anyway um so what do we have in here"
4234560,4250080," so try clone no delay linger blah blah blah blah uh so sfd so there's a from into rows and circuit nothing"
4250080,4257840," particularly interesting so there's a structures incoming well i mean it's an iterator that contains"
4257840,4264000," all of these things so people were saying word split okay so let's actually try to search for split"
4264000,4271280," so there is ios split uh so it's probably related to io right so it's probably is an iterator over a"
4271280,4276640," content of instance read buffers split on particular nah that's not what we want that's not what we want"
4277760,4288720," so looks people were also saying looks so i know that locks are a thing for stdin std out and so on and so"
4288720,4295680," forth but when i have like a tcp stream i'm not really sure how easily i can do this kind of stuff so and as"
4295680,4305840," as you can see std lock is is this kind of thing so i feel like i can't easily do that uh rw lock so"
4305840,4314880," something like rw lock could be a thing so this is for uh read writer lock this type of lock allows a"
4314880,4325920," um the right portion of the lock typically allows modification"
4325920,4337840," so uh allows a number of readers or at most one writer at any point of time"
4339440,4355120," uh so read and write are implemented for pointer stream meaning that you only need a shared reference"
4355120,4363920," no need for mutex uh for mutable mutex uh-huh so does that mean i can just use"
4365280,4374000," but i mean i tried to put arc in here didn't i uh so okay let's actually see so somebody suggested"
4374000,4385840," uh let me let me see so read oh okay so i lost this kind of thing yeah freaking"
4385840,4394960," okay so finally yeah so there is an annoying thing in chromium uh when you basically"
4395920,4401440," follow the link with an anchor but then you recite the browser even if you refresh the browser it"
4401440,4406320," doesn't actually align with an anchor and it's extremely annoying i think it's been in chrome"
4406320,4411520," for for ages since i remember like it's it's a very much chromium bug or whatever and it's just like you"
4411520,4417440," have to open it in a new tab to actually reset it or something same so i know the only one who struggled"
4417440,4423120," with this kind of shit it's just so annoying i'm pretty sure it is a bug i'm like i'm pretty sure it is"
4423120,4426000," a bug uh fix it yeah"
4426000,4436080," so and like it's just like yeah because because quite often like i open it in a different window"
4436080,4441680," so it had a different size so i had to move it in a different monitor i'm sorry so it had a different"
4441680,4447040," size so then i moved it to a main main monitor and obviously it resized and now it just like doesn't"
4447040,4454160," recover uh and i can even check like in this here yeah it's it's just like the position of the anchor"
4454160,4461840," is actually lost x server moment i mean is that an x server or is that i i feel like it's a chromium bug"
4461840,4471040," not x server bug honestly um so we just need to have a shared reference we just need to have a shared"
4471040,4479760," reference but when i tried to do this thing when i tried to do this thing it didn't allow me to do that"
4479760,4487520," right so because arc is a form of shared reference when i tried to put arc we started to have a problem"
4487520,4493920," with the reason here right we did in fact start having problems of with the reason here"
4495200,4503840," uh so deref on the arc okay so that's a good thing okay so i suppose we're learning something"
4503840,4512480," new all right so let me take a look so what does deref even mean uh okay so it's probably method of"
4512480,4518880," something of some interface that arc implements so it's a method of deref so we have to explicitly"
4518880,4527280," dereference it's it's just it's just a direct but why do you have to well i mean ah and it returns you"
4527280,4536240," still returns you a reference okay oh okay so that's interesting so used for immutable dereference"
4536240,4546000," operations like that in addition so it basically for things like arc on maybe a box and everything it"
4546000,4553440," will basically turn it into this like you know regular reference huh that's very interesting"
4553440,4561200," okay let's try it again let's try again uh use arc in here everywhere right use arc in here everywhere"
4561200,4568720," maybe it will do something so honestly maybe i want to make it like a mutable here anyway so let's just go"
4568720,4577440," ahead and try let's just go ahead and try can borrow data as mutable the ref uh right and uh what did"
4577440,4587680," happen in here so it has to be a method uh the ref method not not found in so it didn't work uh the"
4587680,4598160," following trait is nothing but ah okay okay okay okay okay i see i see what should be done in here um okay"
4599360,4605520," so value moved in here so that's fine that is fine uh right because"
4605520,4612960," uh-huh so we kind of moved it so i suppose what i have to do in here i have to clone it one of the"
4612960,4621440," things you can do with arcs is you can clone them uh you can clone them so people say as ref works as well but"
4621440,4630000," we'll see so it's similar so let's just make it work at least okay thank you so much thank you so much"
4630000,4637360," who who helped me especially mohad i know that other people also help but uh mohad actually uh watching"
4637360,4643440," my streams for quite some time and their advices in the chat are super super useful quite quite a lot so"
4643440,4650240," i'm gonna give them a vip so you're vip now so i'm gonna promote you to the tool to vip because i see"
4650240,4653920," you in the chat all the time and you're actually contributing to the queen session what so"
4653920,4661440," uh yes yes yes so thank you so much uh it's actually really cool all right so that that's kind"
4661440,4668160," of cool that it works uh right and people say you can do as ref as well so and that doesn't require"
4668160,4672400," id ref one less line who would have thought who would have thought"
4672400,4686320," um okay so that's pretty cool uh and since it's a reference we can hopefully it doesn't really move"
4686320,4694400," that much around we can probably use it as the key in some sort of a hash table well no we what we did in"
4694400,4701120," go we actually used the ip address in the hash table so yeah so that makes makes a little bit more sense"
4701120,4711680," uh okay so on the disconnect we also sent the author so we can do tcp stream like so uh so this is the"
4711680,4716800," author and we can just do it like that stream colon um"
4721440,4726640," all right i'm really surprised all that compounds okay okay okay so that means we're done with the"
4726640,4735360," client thread basically basically done with the client thread so let's go ahead and port the um"
4735360,4747040," the server thread func server func server so what did we have in here so there we had a client uh client map so i"
4747040,4751760," suppose one of the things we probably want to have we want to have a structure client and the structure"
4751760,4759360," client is rather interesting right so let's actually have a struct client and uh here we have a connection"
4759360,4768480," we can have a similar connection which is going to be arc in tcp stream so i'm not going to do last"
4768480,4775760," message and strike count yet so let's just port without rate limiting and uh banning and auto banning and"
4775760,4784000," stuff like that because it's easier right so it's just easier to uh map the behavior um okay so and then"
4784000,4791440," we have clients so to have clients we'll need to have the hash table collections uh hash table"
4792320,4802480," like so like so like so a fan server so let's introduce mutable clients uh hash map and the question"
4802480,4815360," is what are we going to use uh as the key in there so we used in go the string that represents the remote"
4815360,4824240," address basically ip plus the remote port ip plus the remote port so if we take a look at tcp stream do"
4824240,4833680," we have a remote address in there uh we have um local address okay that's cool but it's a local address"
4833680,4842400," it's not really that interesting for us does it have a remote address it has a peer address okay that is"
4842400,4853680," cool so it has a peer address uh so it's either ipv4 or ipv6 that is cool so does it implement hash does it"
4853680,4859440," implement it does implement hash so we can put this entire thing as an index in a hash table"
4862800,4868800," that's pretty cool sounds good to me sounds gucci sounds tamaguchi you know the usual stuff so the"
4868800,4874320," only thing that bothers me a little bit why the fact does return result returns the socket address of the"
4874320,4883280," remote peer of the tcp connection so does it perform some sort of a system call every time you call this"
4883280,4889280," method does it not cache it or like i don't really understand why the does it need to return result"
4889280,4900000," because how can it fail excuse me um so let me let me see so it's a peer address how many implementation"
4900000,4911760," is there okay so the implementation internally this entire thing is a tcp listener yeah we have to go"
4912400,4918400," like very deep into this entire thing we have to go very deep into this entire thing but yeah"
4918400,4930960," all right so let me let me start coding i suppose start coding"
4933520,4939760," the first thing we want to do we want to organize maybe a loop we want to organize the loop and as you"
4939760,4949760," can see in here we have uh an um an infinite loop so we need to take the messages uh and we need to work"
4949760,4959280," with the receiver receiver uh so here's the receiver and we receive things attempts to wait for a value uh on the"
4959280,4964880," receiver turn an error if the corresponding channel has hung up this uh function will always block the"
4964880,4972960," current threat if there is no data available and it's possible for more data to be sent once at least one"
4972960,4978480," sender still exists once the message is sent to the corresponding sender uh this issue will wake up and"
4978480,4986160," return that message okay so that's precisely what we want so messages uh receive and we've got the message we"
4986160,4996640," just got the message uh so i'm not really sure how should they react to a receive error so when"
4996640,5004240," if the message is hung up so an error if the corresponding channel has hung up"
5006720,5012160," what does it mean does it mean does it mean that it doesn't have well it's probably going to hang up if"
5012160,5021360," we lost all of the message senders but there will be always at least one message sender from which we're"
5021360,5032720," cloning things from which we're cloning so yeah that's actually pretty cool um so from which we're cloning so"
5032720,5038400," that means even if there is no clients it's never going to never going to be hung up uh right so"
5038400,5045040," that means that's totally fine so we can do something like map error uh we can log the error"
5045040,5049920," uh so it should probably never happen right so it should probably never happen because of that"
5049920,5055680," we can just expect that it's going to be fine right so expect uh"
5057280,5067600," the channel the server uh receiver is not uh hung up right so this is what we're going to do here"
5067600,5073520," uh and uh we just take the message and we can have several situations in here so"
5074480,5081200," we have that so this is the author all right so this is the alpha first alpha then disconnected"
5081200,5091840," disconnected and then a new message right new message there we go and this is basically"
5091840,5097120," the bytes of the message that we received okay so let's go ahead and"
5099040,5106160," compile and go to the compilation errors so unresolved import collections hash map"
5106160,5116000," okay uh all right message like this i mean technically like it's correct i suppose"
5116000,5124160," unreachable expression so all right let's remove that annotation needed for uh type annotation need for"
5124160,5130480," hash map okay so it couldn't figure it out yet so because of that um i need to"
5130480,5136320," well i mean uh it's not going to be needed as soon as i try to push something in there"
5136320,5141920," so it's annoying right so i can just edit right away to make it compile but as soon as the as i"
5141920,5146800," like implement at least this thing it's going to be fine all right so it's kind of forcing me to"
5146800,5154480," implement it right away which is annoying in my opinion but whatever um so here's the author uh we"
5154480,5161360," so this is already a connection so we have a peer address so this is a peer address and we probably"
5161360,5167760," want to pre-cache it somehow right so it doesn't like we don't call it very often but i guess that's fine"
5168640,5181680," so let's go we're gonna say expect to do um cache the peer address of the of the connection right so"
5181680,5189360," this is something we want to have in here so this is going to be an address like so and then we what"
5189360,5196080," we're doing in here we're just uh we're just adding this thing in there right so we're just"
5196080,5204880," adding a new client so clients insert and we can do a client like so this is the connection um"
5204880,5210880," so this is an address which we probably have to clone right so i'm pretty sure it is clonable so"
5210880,5216400," we're going to clone it and what we're doing we're taking the author and we're cloning the author as well"
5216400,5223600," right so we're storing the copy of that arc thingy in there and that's basically so that will not"
5223600,5230000," require to provide any parameters in here anymore hopefully and compile yeah so it kind of forces me"
5230000,5235360," to go implementation before i even come manage to compile this entire thing because yeah i can't"
5235360,5240160," figure out the types it's kind of annoying it's kind of annoying but it's it's rust it's supposed to"
5240160,5245760," be annoying right so it's it's designed to annoy the out of you uh right so we have this but it's"
5245760,5253200," unused so that that's fine that is totally fine that is totally fine okay so when it comes to"
5253200,5259920," a client disconnection client disconnection what do we do we take the address yet again so outer i might"
5259920,5266800," as well copy paste this entire thing i might as well copy paste this entire thing uh so and what we have"
5266800,5272880," to do we have to just delete it from the map all right so we have to delete it from the map uh if it"
5272880,5278320," doesn't exist i don't know uh we're just going to ignore that fact so hash map so do you have delete"
5278320,5286960," or is it remove it is remove okay so that's fine uh and returns an option yeah we don't care if it"
5286960,5295200," exists or not we just remove it right so clients remove uh address so it has to be by a pointer by a"
5295200,5300800," reference right so we have to do it like that so let's recompile this one more time and it seems to be working okay"
5300800,5306240," so we can quite easily just add and remove from the map and stuff like that so the next thing we have"
5306240,5314160," in here is uh send the message send the message so the send the message will have to be iterating the"
5314160,5322400," hash map so hash map i think it has something like items if i'm not mistaken right so well you can just do"
5322400,5329440," itter and it gives you gives you an iterator the i the item of which the item of which is what"
5329440,5339440," a pair of key value we can do something like that right for um client eater right for client eater and"
5339440,5350720," we can probably just take values something like values is even better hash map values hash map values right and it"
5350720,5357120," returns you an iterator of only values that's a little bit better so we can do values uh so this is the"
5357120,5365920," client client in clients that's pretty cool though okay we'll need a key anyway we'll need a key anyway"
5365920,5375120," uh right because it's going to be an address right it's going to be an address so and we'll have to do this"
5375120,5380560," thing as well but this is going to be author address right so and we need all of that because we're going"
5380560,5387040," to be distinguishing if address not equal author address only then we want to send that to that client"
5387040,5397120," and blah blah blah blah blah blah blah blah blah right so uh okay so maybe i'm gonna actually follow the code"
5397120,5405200," in go right so as you can see in here we just take the client we take the connection and we're just"
5405200,5412880," writing that entire stuff in there right just writing uh writing those bytes right in there very dangerous"
5412880,5417280," thing right so we don't screen them we don't do anything with them we're just writing them in there"
5417840,5424000," and um if it fails right so in here if it fails we also don't care if it fails or not"
5424000,5433600," right so we also can ignore that fact uh right so let me let me see does it compile so we need to wrap"
5433600,5443440," that in parentheses thank you compiler very much uh not found in the scope oh okay so new message must contain"
5443440,5451600," not only the bytes but also the outer so one cool thing that uh i use in rust quite often is enumerations"
5451600,5457760," that also structures so essentially i can do things like this right so this is the bytes"
5457760,5465600," and this is the outer which is also arc this thing uh all right and it makes it a little bit easier to"
5466320,5473840," to pattern match things like that right because then i can do uh outer bytes and i can just like"
5473840,5480800," use them directly right because there are corresponding fields in here so i might as well even um turn that"
5480800,5490720," into these things so this is the outer uh like so and this is outer as well and porting the pattern"
5490720,5496480," matches to like a new kind of thing is super easy you just replace the parentheses with curly braces"
5496480,5502800," and it's basically the same right it's basically the same that's actually very very useful very cool"
5502800,5511760," can your go do that go doesn't even have a pattern matching uh right okay let's try to compile that"
5511760,5520480," um it created even more errors okay so iter is not a method of not found for arc client"
5520480,5528960," so clients uh there we go uh and here no okay so this is because it's that so we have to do as rep"
5528960,5539520," and uh okay so this is cool um who is the reference who is the reference i suppose can i just do"
5540320,5547280," eq not"
5547280,5556880," right because expected this and this is like this right so it will actually compare like values"
5556880,5562400," right it will actually compare the values if i understand correctly right so let me find the method eq"
5564080,5573040," um so it's actually part of the point it's kind of dangerous yeah we have to be super careful so this"
5573040,5579920," is a value and this is a pointer so to be a hundred percent sure let's just do it like that right let's"
5579920,5586960," just do it like that so we have to be super careful but i mean uh i think rust in this particular case"
5586960,5593840," it won't allow you to shoot your leg so um i don't think it's that big of a deal oh it cannot find"
5593840,5596400," the method right because i removed it right"
5596400,5606720," it's the rust warnings and shit um so and here we want to do that by a reference"
5607280,5614560," and here when we send in the message right when we send in the message yeah we have to do it like that"
5614560,5618320," so this is the author all right so now it is like this"
5619760,5626080," and here when we disconnect now it is like this can you by the way see shut okay author"
5626080,5633920," like this and go and this one is a little bit interesting because this one is bytes that we're"
5633920,5640400," sending this is the bytes that we're sending and this is the author which is a string clone i wonder"
5640400,5647840," if constantly cloning that reference is too expensive it probably is it probably is"
5648960,5656160," but it compiles and you know what's funny is that we basically translated the functionality"
5656160,5662080," of the server without the uh you know message rate limits and auto banning"
5662080,5669600," so the functionality is translated one-to-one using the same architecture the architecture of a single"
5669600,5676240," server threat and several client threats and like you you know a single consumer multiple publishers"
5676240,5680000," so this entire thing is basically translated"
5680000,5689440," so and this is precisely why i decided that like to try it out because again as i already said rust has"
5689440,5695520," pretty much the same sort of like paradigm primitives um but we haven't tested it yet of course we"
5695520,5701840," haven't tested it yet but it already compiles and as you know as they say in the industry if it compiles"
5701840,5716880," so let's give it a try let's see if it's true or not i don't fucking know look at that uh can i now do a telnet on this thing"
5716880,5726080," hello uh we can't really see anything so uh let's try to maybe connect to another one uh right so it's like let's actually put it like this so you can see everything so let's do telnet 2700"
5726080,5739280," so uh let's try to connect to another one uh right so let's try to connect to another one uh right so let's"
5739280,5747840," like let's actually put it like this so you can see everything so let's do telnet 27001"
5747840,5763040," 69 69 69 69 hello hello hello hello how are you doing smiley face i'm doing fine thank you"
5766000,5778080," so first try uh so how do i quit this so and i never worked like never worked with that api before"
5778080,5785120," i never worked with this api before so and i just like managed to learn it right in the screen and on"
5785120,5792720," the stream so and the functionality has been like literally ported right so one to one uh and i just"
5792720,5798880," translated the code so the only thing we're missing is the strike system right so and stuff like that"
5798880,5807680," uh how can you still dislike rust because i think it's too much effort for what i wanted in here"
5807680,5815440," honestly it's very bureaucratic especially when it comes to uh just sharing a reference between the threats"
5815440,5822400," you may argue that it is intentional because it's a very dangerous thing and it's very easy"
5822400,5832320," to shoot your leg but uh i don't like how rust prioritizes safety too much over convenience and"
5832320,5841040," ergonomics of the language right so essentially um there's two things like ergonomics and like is"
5841040,5850320," is to use of the language and the safety safety is important but what rust does is that safety completely"
5850320,5856080," ignoring ergonomics like fuck ergonomics right so completely fuck it out of the window and that's"
5856080,5858640," what annoys me like can we optimize both"
5858640,5868400," can we optimize both safety and ergonomics and stuff like that but if i feel like it's kind of difficult to"
5868400,5875520," pull off in the current uh rust community because the rust community is just like there's too much"
5875520,5881200," discussion going on in rust community because quite often for a simple sort of feature there could be"
5881200,5887200," thousand and thousand and thousand upon thousand comments discussing rattling over like an important"
5887200,5894960," thing and going nowhere and it's kind of like uh i don't know sometimes i feel like rust lacks a coherent"
5894960,5904320," vision if that makes any sense you know what i'm talking about it's just like their vision is just safety at all"
5904320,5907840," cost right just safety at all costs and that's the entire vision"
5907840,5915840," and and it's just constant fighting and drama and stuff like that"
5915840,5926640," so quite often you know projects that maybe rust needs like a benevolent benevolent dictator"
5926640,5932880," if you know what i'm talking about so if you take a look at the project with benevolent dictators they"
5932880,5941280," usually have like a very clear coherent vision right clear coherent vision even though sometimes some"
5941280,5950000," people might be uh not happy with this kind of stuff but at least there is a coherent vision python 2"
5950000,5956400," maybe i'm saying that because i'm authoritarian"
5959680,5966480," that's why that's why so this is the my authoritarian part of me is speaking right now right so"
5966480,5976480," yes project needs to have a benevolent dictator yes i know what i'm talking about not authoritarian"
5976480,5980960," whatsoever so then why are you so authoritarian that's a good question actually"
5983200,5986800," sometimes i do feel that i am a little bit authoritarian"
5986800,5990400," say that in the russian"
5990400,5995440," but you if you don't speak russian you won't understand that"
5995440,6001200," or like do you speak russian i don't know i don't speak russian it's very difficult english"
6002320,6013280," um okay so let's go ahead and port the uh you know the rate limit system and the outer banning system"
6013280,6020400," and stuff like that i'm losing my voice by the way but this is what it is and it isn't what it do we have"
6020400,6029360," time by the way uh and i'm not talking about like the real time time in um right in rust we do have time"
6029360,6036080," there is a std time and do we have okay so there must be something like time now"
6036080,6046240," there is so there's a time instant now so what is the instant um so let me read about an instant"
6046240,6052720," a measure of monotonically non-d uh okay so it's basically a clock right it's a clock for maybe a"
6052720,6058880," performance measure or something like that uh right so uh so we probably need to use a system time"
6059360,6066320," right but to be fair if it's a temporary ban right if it's a temporary ban maybe"
6066320,6073280," it wouldn't need a system time yeah whatever let's let's use a system time"
6073280,6079760," yep clock um system time"
6081840,6088080," so let's open the goal implementation implementation structure where is the client so"
6088080,6096320," struct uh client so there's a connection uh last message right so we need to have last message"
6096320,6101120," and uh system time right so and we're also going to have"
6102880,6107280," um i don't remember do you have to come put comment in here but the compiler will tell me whatever"
6107280,6110800," strike count so this is a strike count cool"
6110800,6119920," uh so yesu yesu yesu yesu so we also need to introduce a thing called banned mfs right so that's"
6119920,6124000," very important so we have banned mfs banned motherfuckers"
6125120,6135840," ban focus okay so can i split it slightly differently yeah so the first thing we're doing here we take the"
6135840,6145120," address of the author right so here it is this is an address which is kind of cool and uh we have banned mfs"
6145120,6154560," banned mfs we need to check uh we need to get uh you know the thing when they were banned banned at"
6155920,6164960," uh well i mean we have to find a method in hash map that gets a value right and it usually it returns"
6164960,6173200," an option indicating that it might be missing right it indicates uh it's that it might be missing uh so"
6173200,6180000," and here we have like this is a very convenient way of doing that so now i have to do a completely"
6180000,6182800," different way of working with this kind of thing"
6182800,6193760," hmm i know that hash map had a take i think it had a take hash map"
6195360,6200320," take"
6200320,6209120," so essentially take uh accepts a value right removes and returns the value it's a hash set though but i"
6209120,6220480," wanted hash map hash map take yeah well it doesn't have a take okay whatever so the problem is that it's not"
6220480,6228480," really um it's not really um it's not really easy to translate the go code to whatever we have in here"
6228480,6233280," but that's fine i suppose uh author addr author addr"
6233280,6243280," author addr uh and in here we're gonna have the band at but that band at is essentially option but"
6243280,6249520," for me that's fine actually maybe that's actually fine we can't translate that because we can yeah"
6249520,6258560," we can use band at as band at and band simultaneously we can do that we actually can do that that's very"
6258560,6270640," very cool because now uh so essentially if let some uh band at band at that's what we do uh so"
6270640,6280160," we also keep track of the now which is basically system time now right now and if so there is some"
6280160,6290160," sort of a subtraction system system time uh so do you have sub you do have sub so basically rust and go"
6290160,6297760," they're stealing from each other so who stole from whom who stole that idea from whom"
6301920,6310240," i don't know so and apparently you can probably use a minus operator we could try about minus operator"
6310240,6321040," why not uh so and essentially we do now minus that and uh so that gives us oh this one is rather"
6321040,6333520," interesting so this is a time but it accepts the duration we need a difference actually uh can we"
6333520,6345200," have like a difference we can't have difference uh so std time std time so we need a difference somehow"
6346320,6356960," duration from milliseconds so there should be something like scenes i'm pretty sure system time like scenes"
6356960,6368000," duration scenes yeah boy uh that's what i'm talking and it could be are you freaking serious"
6371360,6373680," well i mean if it's okay i see what's going on here"
6373680,6386560," so returns amount of time elapsed from the earlier point of time okay so you take that uh new duration"
6386560,6397760," scenes all right so um band at uh but maybe so we have to actually follow it slightly differently so i mean"
6397760,6404640," name it's slightly different band at so this is a newer one and you use newer one duration duration"
6404640,6411040," since now right duration since now um"
6411040,6421760," yeah duration since band at because it's a newer one and they basically assert"
6422880,6429600," the clock may have gone backwards so if the clock may have been gone backwards what do we do how do we"
6429600,6435280," even handle that because that could be something that could be sort of like an attack if an attacker"
6435280,6440400," gained some sort of like a control over the clock they could set the clock and crash the entire server"
6440400,6447520," i feel like we shouldn't crash in here uh right so i feel like we shouldn't crash in here but yeah who"
6447520,6459440," knows uh expect to do don't crash if the clock uh went backwards because right now i just don't really"
6459440,6470080," want to bother handling all of that uh right so and uh duration uh so we got some sort of a duration"
6471040,6477040," so that's cool uh duration so what we can do with the duration can we compare"
6477040,6487040," the duration uh so i it probably implements ordered interface does it implement ordered interface it does"
6487040,6493280," implement ordered interface how can i construct this kind of thing can i construct it from seconds"
6494480,6502880," i can in fact construct it from seconds uh actually at 32. this is perfect actually this is actually"
6502880,6512160," perfect um so i can even maybe have uh something like global and it's not even a constant thing so you"
6512160,6520000," can't have like a global constant in here uh like you would do in go uh all right so because we have"
6520720,6529520," band limit in there right so we have a band limit um yeah so we could introduce the const ban limit and"
6529520,6537920," then say duration and this is the duration from sex is it uh yeah they also go with sex nice one"
6537920,6547760," f32 and band limit is basically 10 multiplied by 65 so it's basically 10 seconds uh right you can't have"
6547760,6556000," that because it's because it's rust because fuck you this is a rust uh right so can you have something"
6556000,6566400," like that in the current stable rust or is it nightly feature uh i'm not even sure so because i feel like"
6566400,6576000," it has to be like a const thingy but this one is not const um right so we just have pubfm so there's nothing"
6576000,6579440," constant here so probably we can't have that even though that would have been super useful"
6579440,6587840," that would have been a super a super useful okay so what do we have in here so uh this is a strike"
6587840,6594800," count this has to be let's put it i32 what else do we have in here can not find because this is the"
6594800,6604400," author address and um so integer okay so this could ah why did you remove everything what did you remove"
6604400,6612800," everything uh band okay so you want a reference what else do you want uh expected system okay so this is"
6612800,6622240," not what i thought it is uh excuse me so i suppose it just oh okay it doesn't know the return type"
6622240,6632800," yikes uh okay freaking so there is also elapsed time but whatever i mean we're already moving in that"
6632800,6642800," direction um so and for it to know all of these types i have to explicitly say them and unless i finished"
6642800,6649840," like it's very annoying that i have to okay so but i mean i have no other choice"
6651360,6662080," uh tcp stream so if i remember correctly we are using nip uh nip in there right so this is going to be"
6662080,6668800," peer address so this is a socket address but not really uh socket address v6"
6670400,6681040," right and we have ip in here and it's ipv6 is there is something like just a general ip"
6681040,6689120," so if i just okay so there's a generic ip ip address okay that's very cool is it hashable"
6689120,6699920," is it it is hashable okay so that means uh i can just do ip address ip addr and the value is system time"
6700400,6709040," so that's cool so that's cool uh and in here we can maybe even also explicitly say"
6709040,6712560," socket addr uh client"
6712560,6722800," so that's pretty cool um so ip iddr socket iddr"
6722800,6730160," all right so let's go through the compilation areas uh so expected"
6730400,6737120," um so socket iddr okay so that means we need to take the ip uh what else we want"
6737120,6743360," uh so finally so now we uh inferred all the necessary types"
6743360,6756880," so band at is a reference now is not a reference so that means i have to get now by a reference can i just"
6756880,6765600," do reference this thing then um okay so i managed to do that cool cool uh so last uh last message and"
6765600,6774720," strike okay last message is going to be system uh time we can just put now in there and the strike count"
6774720,6785280," is going to be zero all right okay so uh i think we're done and uh cannot call non-constant and what's funny is"
6785280,6788720," that i probably won't be able to even do something like that in here as well"
6788720,6798000," right because you can't uh f32s are not con you can have them as constants look at that you can have"
6798000,6807280," f32s as constants"
6807280,6817840," duration from sex is const uh really let's let's take a look let's take a look at the sex uh duration from"
6817840,6821680," sex duration from sex"
6821680,6828640," it is cost would you look at that wow wow"
6828640,6838960," uh all right duration uh duration from sex"
6841120,6845120," uh but i mean uh but i mean i want to fuck me mate"
6845120,6849840," fuck no but i want a fractional part"
6852400,6855680," um disappointed"
6855680,6866800," uh okay so duration since and we've got this kind of thing let's go that's cool"
6866800,6877440," uh and if the duration is um basically greater or equal depends on how we even do that"
6878080,6887120," band limit greater or equal to uh band minutes right we actually delete that band"
6887120,6892240," from this thing and i'm pretty sure we won't be able to easily do that because of this kind of"
6892240,6894880," shit i'm pretty sure we won't be able to easily do that"
6896880,6906560," i really doubt that though though though we could try to map it we could try to do and then or something"
6906560,6912320," like that so we can do it like that so okay it's mutable band at and we um do"
6912320,6919120," then or maybe and then right so in in here we get band at"
6919120,6923440," all right and inside of this thing this is what we do"
6925520,6931360," and essentially if it's greater than that entire thing if it's greater than that and i think"
6931360,6940720," we uh basically return none right we basically return none and that effectively so that which"
6940720,6946720," single return none acts like effectively setting it to false and maybe potentially deleting but we'll"
6946720,6951760," get to that a little bit later we'll get to that a little bit later otherwise if it's not we're just"
6951760,6960400," keeping the band at as it is so we're just keeping it as it is uh all right and what's interesting is"
6960400,6967680," that so we could do a very interesting thing so people say that there is a remove method in hash"
6967680,6973280," map right so which effectively just takes it out there uh and everything so that could be"
6974000,6980480," that could be useful uh right so you accept that so we're taking this thing out of the hash map"
6980480,6989280," we're taking it out of the hash map uh and then we continue so then later on then later on if we're"
6989280,6997920," still banned we'll put it back into the band mfs that is very actually cool uh so that works out kind of"
6997920,7009040," well so if let uh some band at right we can even maybe we can even do something like this if band at is"
7009040,7019760," some uh we probably want to answer uh you're banned that's what we're saying right so that's basically"
7019760,7024240," what we want to say and we want to close the connection otherwise we want to do something"
7024240,7031680," like so so here we want to do is none uh we simply would do it like that and it's translated almost"
7031680,7040080," exactly as it was in go isn't it cool uh right so if it's not none right if it's not none we want to put"
7040080,7040480," it back"
7040480,7057520," so and to put it back it would be just easier to do it like let some band at band at uh band mfs um insert"
7059680,7069920," uh insert author add rip so we're just like literally putting it back band at and this one"
7069920,7076320," goes here but we also have to say something to the to the author right so we also have to say something"
7076320,7084320," to the author uh author um as a rep and we want to write something to them we want to write something to"
7084320,7092880," them but it's writable thing so that means we should be able to do something like write ln uh like so and"
7092880,7106480," we can say uh you are banned mf you're banned you're banned uh so and in here so maybe we don't want to"
7106480,7112960," dereference it too often right so i can do something like author like this so then i can just use it like"
7112960,7121040," that and then alter um can i explicitly close this entire thing is that something i can do right if"
7121040,7130480," i have a tcp string can i explicitly close it um i don't think so i want to be able to explicitly close"
7130480,7138240," it but i don't feel like i can uh so people say that i probably need to drop it"
7138240,7146880," like it's hot but i don't feel like it's um okay so i can i can try to do drop so i know that drop is"
7146880,7156240," like a destructors of rust so that uh yeah yeah so okay we can try that and see how it goes we can try but"
7156240,7161120," it's probably it has to be mutable right so it has to be mutable you can't really easily drop that"
7161120,7170720," uh you can't easily drop that mfs is it going to like like that small little thing is gonna"
7170720,7173600," fuck us over really really hard uh so"
7176800,7183760," okay okay so band at uh we don't have to do that anymore right so we don't really have to do that"
7183760,7195440," anymore uh band at expected yeah it has to be some so that's understandable and in here expected just"
7195440,7204080," okay so uh-huh you want a copy of this thing sure i can give you a copy all right and drop you can't just"
7204080,7210560," easily drop that method not follow the decision that's understandable uh shut down okay so we can"
7210560,7218160," give it a try tcp stream uh shut down sounds good why did they call it shut down that's such a"
7218160,7223440," well i mean it's actually kind of a common term for for this kind of thing okay so let's just let's"
7223440,7230960," just call shut down thank you thank you so much so this is a shutdown and it may or may not return"
7230960,7237120," something so in this case we're going to just do expect uh i probably just don't want to even care"
7237120,7243120," about it right so just like shut it down so what does it say an argument shutdown is missing"
7243120,7248320," what do you want how shut down okay that's very interesting"
7250080,7256160," uh possibly what's the candy uh the reading portion of tcp okay let's do both"
7256160,7258880," shut down"
7258880,7265760," it doesn't know that it's part of the net"
7265760,7277440," shutdown it has to be uh this thing doesn't have to be mutable sure um and"
7278800,7287120," uh uh it has to be mutable by the way it has to be because i'm basically reassigning it back"
7287120,7295040," probably you can simplify this and tapping but i mean who cares cannot borrow as mutable"
7306160,7310640," so what does it suggest just add mutable okay will that solve it"
7310640,7318320," i thought we'll never get out of that maze but we managed to do that holy"
7318320,7331360," what the we managed to crawl out of that labyrinth of borrow checking bull scheisse"
7332480,7340080," holy for a second i thought we're gonna die we're gonna get lost in this labyrinth because of this"
7340080,7350080," kind of situation whoo but yeah luckily there is a shutdown in here oh boy holy okay"
7350080,7357920," you can definitely simplify this is just not obvious yeah i'm pretty sure but i'm i'm basically"
7357920,7362960," translating go code to rust one to one and that's because that's why it's kind of weird like that"
7362960,7372800," um right so yeah let's yes yes yes okay the disconnect is implemented correctly right so well"
7372800,7379120," we forgot one little thing we forgot one little thing we forgot to say how much sex you have left so"
7379120,7389120," that's very important uh sex uh right so uh sex left so when the question is what is sex um"
7389120,7399120," so basically take the band limits right so we take the band limit and we are subtracting the band at"
7399120,7406640," right so we do have band at so that's totally fine so here yeah this one is very interesting because"
7407840,7413600," we basically moved it inside so we will probably have to reorder something but that's fine"
7413600,7418960," um so we we take the difference between these two things and"
7418960,7428960," um and both of them are duration uh can i now take the duration and translate it to seconds duration"
7430000,7441920," all right right two sex so there is as sex f32 we need the sex f32 all right so that's cool we can do it"
7441920,7457040," like that as sex f32 as sex f32 okay so uh expected um so expected because this is duration what mismatch type"
7457600,7467600," duration oh it's a system type really band add is a system type um wait what i'm confused a little bit"
7467600,7478320," oh yeah you take that difference again you take that difference again uh but that difference only makes sense okay"
7479520,7492240," uh so uh so we can probably call it diff diff diff diff diff diff diff"
7492240,7495040," so"
7495040,7503200," okay uh we're good to go"
7505200,7509920," so uh so uh that is a very appogers that is very appogers um"
7509920,7517040," so disconnect is implemented correctly so that's totally fine so now we need to"
7517040,7522720," implement this monstrosity of the situation this monstrosity of the situation"
7524720,7534560," uh okay uh okay again so now uh what do we do we need to take the author address so we've got the author address"
7534560,7546080," so then we need to find the author uh right so let's do author um clients um clients get"
7547200,7558080," author addr and we also need now uh let now so this is kind of important so this is a let now"
7558080,7566080," so we first need to check that author still exists within the clients because essentially you can have"
7566080,7573360," a situation when uh the client is already disconnected or banned or something like that but their messages"
7573360,7578960," there are still messages from them in the queue right there are still messages from them in the queue"
7578960,7591200," and uh you basically wanna process with them to be fair to be fair um maybe new message should actually"
7591200,7598640," yeah things like client disconnected and new messages should not directly accept tcp"
7599120,7605360," strings and stuff like that they probably should not uh what they should do instead they should accept ips"
7605360,7610640," right so we should accept that maybe this is something that we have to implement uh i think that's a"
7610640,7618880," generally good idea right so yes yes yes so because we're going to be uh querying those things"
7618880,7624320," from there anyway right we're going to be creating them from there anyway by the way because of that"
7624960,7630720," maybe you have disconnects from things that don't really exist anymore but it's quite unlikely it's"
7630720,7638800," quite unlikely so uh so we need to have a socket address right so this is the outer uh socket addr"
7638800,7645600," and this one is a socket addr as well socket addr so let's go to the compilation errors and just sort of"
7645600,7657600," port that a little bit uh just port that a little bit uh so what we have in here so uh author addr all"
7657600,7668240," right so this is outer addr we don't have to do that anymore but we can get the outer and now if uh let"
7670320,7681840," we can even inline this entire thing if let some author author addr maybe we don't even need to do"
7681840,7691520," well but we'll see we'll see so this one goes here and yeah so that works out hopefully so new message"
7691520,7698320," author addr does not have a field author addr does not have a field author addr aha so let's call it"
7698320,7710080," author addr then so that's totally fine so uh author addr so that is fine author addr okay that even"
7710080,7715600," should have done that earlier should have done that earlier that's that's very cool that's very cool"
7716560,7725200," uh all right so author addr so that's that means we're on the right track um so and okay so this"
7725200,7732160," doesn't have to be the cool that that gets rid of the clone by the way right so peer addr hopefully"
7732160,7739280," that's something we can do maybe we have to do as ref as ref um"
7743600,7756800," so res oh it could be so it may fail uh right it may fail so we removed that code yeah okay so removed"
7756800,7764000," that code so one of the things we probably want to do we want to do author addr right author addr"
7764000,7770800," author i think that's how you pronounce that like author addr i'm sure if you need this thing but anyway so"
7770800,7781360," expect uh expect uh to do cache the pure uh address so because we're going to be doing that on each"
7781360,7788560," sort of free that i think it will make sense to cache this entire thing uh all right and the same goes in"
7788560,7800400," here so we can just do it once i'm pretty sure we can just do it once and here just do author addr"
7801200,7809440," and then simply bytes we can factor this stuff out like so"
7809440,7822320," am i even and considered an epic roster now am i an epic rooster now look at that look how easily i factor"
7822320,7832240," out outside the loop yeah out outside the loop yeah that's actually cool yo yeah and yeah that's a that's"
7832240,7841760," a good idea so we essentially if you can't do that if you can't do that we can even crash the client right"
7841760,7858160," the way okay so that solves even more problems than i expected okay print lan error would not get peer address"
7858160,7873600," yes of well whatever uh error something like that that is absolutely uh so what uh what's up with that so"
7873600,7880480," author author author is not even used anymore so that's expected now what else do we have last"
7880480,7889200," message is not used uh unused result so that's fine anything else we have last message and strike count"
7890000,7894960," i guess we're gucci i guess we're gucci i guess we are in fact tamaguchi so we have this situation when"
7894960,7897920," uh you may not have some clients in there"
7897920,7906880," so now what can we do"
7909520,7920320," then we have to calculate how much time has passed since the last message of the user right"
7920320,7934160," nice uh lost message yes lost message"
7937200,7944320," so yeah i'm just thinking why there's no semicolons in here this is go actually this is actually go"
7944320,7953040," um all right so now we need to find the difference again for some reason finding the difference is a"
7953040,7961120," little bit painful uh right because you have to do this kind of thing but uh we can now copy paste things"
7961120,7966880," right but in here uh we don't have to do band at we have to do"
7967200,7976640," uh author um last last last last message right so all the last message uh and"
7976640,7978880," if"
7978880,7981840," the difference"
7981840,7990640," is greater or equal than message rate in message rate only then we would allow we would authorize"
7991440,7994800," that specific message but only then we're authorizing that"
7994800,8007200," uh and the message rate is basically a duration right message rate uh duration from sex"
8009520,8026480," and that's basically so we can go to the compilation errors right just to see if okay so the only thing"
8026480,8032560," that is left in here now is a strike count uh this is because we're striking the user around in here right"
8032560,8039760," so somewhere here uh and how do we strike the user first of all we increment their strike all right"
8039760,8043360," oh and incrementing their strike will require to"
8045600,8053120," to modify them right so we take author strike count we just incremented by one"
8053120,8059200," and here we get it as immutable so that means we have to get it as mutable"
8059200,8070000," that makes sense but here comes another interesting thing if author author strike count is greater or equal"
8070640,8079280," then the strike limit the time has come to ban this enough the time has come to ban this enough"
8079280,8082480," uh so"
8082480,8089280," but"
8089280,8096400," that also well yeah we don't have to modify the map so everything's fine i thought that we'll have to"
8097360,8101840," remove the connection from the map we don't have to do that it could be done later from the client"
8101840,8110960," disconnected so that's totally fine uh so what do we do we add that to the list of banned mfs"
8110960,8118160," by the way maybe it would be better to actually put go at the bottom uh banned mfs uh we insert"
8118720,8130640," we insert author adddr ip and we clone this entire thing and what we put in there we put now right"
8130640,8139440," then we take an author connection all right an author connection and we just write"
8141280,8145760," yeah we just write you banned mf you are banned mf"
8145760,8156080," where do we get the author so when it's connected we just do it like that um so what i'm thinking is"
8156080,8170240," that can we write ln and then say you are banned mf like so very dramatically very dramatically and then we"
8170240,8177360," we shut down this entire thing like so we shut down both of these mother flippers like so"
8177360,8190080," so uh let me see so you're banned enough and then we shut it down so that means it will be removed"
8190080,8195920," later later later okay so let's go through the competition errors uh strike limit is not"
8196800,8201760," uh implemented so this is going to be just like 10 if i remember correctly that's that's just 10."
8201760,8209120," cannot borrow as mutable cannot borrow as mutable so can we do just as ref uh as"
8209120,8218160," yo look at that we managed to do that so but we don't check whether"
8218960,8226880," sequence of bytes that we're sending is uh valid utf8 we don't check for that right so this is something"
8226880,8233680," that main goal should do as well right so it does that uh too so as you can see it just validates that"
8233680,8244080," thing so what we can do uh we can do from utf8 uh go and that does validation for us so that's that's very cool"
8244640,8253760," um so um so this is going to be rust and within this thing we just take the bytes right we just take the"
8253760,8268800," bytes and we're just constructing i'm surprised str from utf8 right so str from utf8 if let um some"
8270560,8278160," text we're going to be just sending that text there uh i wonder if i can"
8278160,8283920," simply write that text like so well i mean the compiler will tell me if i'm doing something wrong"
8283920,8292880," but whatever so otherwise we're just striking that user just striking that user so and ban them"
8294880,8304480," okay so what does it say uh no functions is it from utf in the uh that is surprising to me because"
8304480,8318880," isn't that part of str or is that because i never imported okay so std str yeah that makes sense uh okay"
8318880,8327680," so this is a reference that's fine what else do we have in here uh okay so yeah this expression has type"
8327680,8339040," result oh okay so this is okay uh-huh i'm not gonna probably log that uh okay so it doesn't like that so"
8339040,8348320," so you cannot just write that string one of the things we can do we can do write ln uh this thing as"
8348320,8359760," a ref and just write that text just squish that cat simply squish that cat"
8364160,8366800," i think we fully translated this motherfucker"
8366800,8375280," str has bytes so it's kind of funny so"
8375280,8383600," we are translating it to str just to to just to validate that it's utf8 and then we're going"
8383600,8390720," to be taking bytes out of that str to write them we could do that uh we could do that but that's kind"
8390720,8398160," it's kind of funny you can reuse the bytes that's a good point that's a good point so what if i okay"
8398160,8400080," let's actually go back that's that's funny"
8400080,8404240," huh white"
8404240,8408080," right because we've validated them"
8408080,8412160," can i do that or is it gonna be"
8413760,8424000," huh that's a very interesting way of doing this is there something validate is valid utf8 so utf8"
8424000,8432400," because it's kind of weird honestly is there not value to fate some kind of function uh yeah like i"
8432400,8440560," don't know that would make sense to me but if it's not is that how rust developers uh you can do is okay"
8440560,8446000," sure that's that's also fine uh right so you can do is okay"
8446000,8456880," all right i just can't believe that that is it we managed to translate this into anything"
8459360,8469760," so yes yes yes yes um i don't know if i want to do the ddos test right now um right so i think i'm gonna"
8469760,8480880," just test it locally um and then we'll see 69 69 hello uh we can't really see but that's that's fine"
8482240,8492480," uh so uh so tell net uh hello all right that's cool uh so i want to actually do something like close"
8492480,8499920," and let's try to ddos this thing we're gonna cat def u random and uh nc"
8500960,8504400," twenty zero zero zero one uh 69 69"
8504400,8513360," i didn't get banned though uh that's that's funny though"
8513360,8526800," so why didn't i get banned why didn't i get banned because i would expect it to tell me at least at least"
8526800,8539200," you're banned yeah so we'll probably use a lot of let in here uh maybe we should actually uh like log"
8539200,8557440," summon for in here um we can do e-println could not send banned message to uh do we have the"
8557440,8570320," outer addr yeah we do have outer addr um outer addr error so it's actually put as many errors as possible"
8570320,8576080," right so when we do shut down it may also fail"
8576080,8583520," map error so this one has to be map error though"
8586800,8600160," um okay error could not shut down socket for author addr because of the error that's understandable"
8600160,8607120," so let me try to compile so what does it say um yeah so it's you still need to do it like that"
8607120,8613360," right because we're ignoring these things uh what's the other stuff"
8616160,8617760," so map error"
8617760,8623520," and e-println error"
8623520,8627120," and e-println error could not write"
8627120,8630240," could not"
8630240,8633120," broadcast"
8633120,8636720," message to all the clients"
8636720,8638720," from"
8638720,8641600," author addr"
8643600,8645680," because of this specific error"
8645680,8645680," because of this specific error"
8645680,8648960," all right"
8648960,8658560," so i want to also specify where exactly all these things are happening"
8658560,8661440," could not"
8663600,8665200," could not send"
8665200,8665600," could not send"
8665600,8666560," banned message"
8666560,8671520," uh-huh"
8671520,8676880," shut down"
8676880,8681040," all right"
8681040,8685280," and this is well we can copy paste this entire thing"
8687280,8697840," it's literally it's literally the same"
8697840,8704400," so we are ignoring this entire thing we could probably"
8704400,8706800," do map error in here"
8709040,8710400," um so"
8710400,8716080," could broadcast"
8716080,8717200," could not"
8717200,8720320," e-println"
8720320,8727920," um could be uh the server could not send"
8727920,8730560," uh client"
8732800,8736320," okay so we could probably copy paste this thing"
8736320,8738480," yeah who said we can't do that"
8738480,8741840," um so in this case we just don't care"
8741840,8744480," right we just simply don't care because we're already"
8744480,8748000," like recovering from the failed situation anyway"
8748000,8750480," so it just doesn't matter at this point"
8751440,8754800," and that's basically it i feel like"
8754800,8756480," all right"
8756480,8759200," okay"
8759200,8762560," hello"
8762560,8769360," honestly i think i need to also log different situations"
8769360,8774880," when somebody connected and stuff like that"
8774880,8776080," you know"
8777680,8779600," when somebody connected and stuff like that"
8779600,8780160," so maybe"
8780160,8782240," i could"
8782240,8785200," just steal some stuff from here"
8785200,8785760," yeah yeah"
8785760,8786480," so for example"
8786480,8788240," somebody connected"
8788240,8791200," where is that thing"
8791200,8792000," yeah so here"
8792000,8794640," e-println"
8794640,8797280," in form"
8797280,8800480," client"
8800480,8802240," author"
8802240,8803840," ddr"
8803840,8805120," connected"
8806080,8807680," so it's actually doesn't have to go like this"
8807680,8808080," but yeah"
8808080,8811120," then we can say client"
8811120,8813840," disconnected"
8813840,8818080," so this is disconnected"
8818080,8818320," and"
8818320,8821360," in here"
8821360,8825120," so we just don't do anything here"
8825120,8826800," so we're skipping all of these things"
8826800,8828560," i don't think it makes sense to even log that"
8828560,8829520," um"
8829520,8831760," we can"
8831760,8834000," basically"
8836000,8837040," yeah"
8837040,8837920," yeah"
8837920,8840560," let's just log it like this"
8840560,8841360," println"
8841360,8843680," info"
8843680,8845520," client"
8845520,8848720," a client"
8848720,8849280," author"
8849280,8850320," addr"
8850320,8852160," send message"
8852160,8854640," oh"
8854640,8855200," and here"
8855200,8857680," text would have been useful actually"
8857680,8862080," text would have been useful so that's actually kind of funny"
8862080,8862960," so if let"
8862960,8863840," uh"
8863840,8864720," okay"
8864720,8865200," text"
8865200,8871760," because we're printing it like that so text will be more useful"
8871760,8873920," that's cool"
8873920,8877120," so and when we're striking somebody"
8877120,8879200," it would make sense"
8879200,8881520," to also"
8881520,8883520," do that"
8884160,8885600," to also look at"
8885600,8889200," info"
8889200,8889760," client"
8889760,8892400," author address"
8892400,8894080," got"
8894080,8895040," banned"
8895040,8897520," right"
8897520,8900880," and we're doing it like that"
8900880,8903600," login a lot of shit"
8903600,8904880," like as much as possible"
8904880,8907600," as much as possible"
8908800,8909440," all right"
8909440,8910640," looks good to me"
8910640,8911440," looks gucci"
8911440,8911840," looks"
8911840,8912640," even tamaguchi"
8912640,8913200," i wouldn't say"
8913200,8916480," all right"
8916480,8916960," so"
8916960,8917600," boom"
8917600,8918800," client has connected"
8918800,8919200," hello"
8919200,8921120," sent message"
8921120,8921680," hello"
8921680,8922400," did i put"
8922400,8922960," uh"
8922960,8923440," slash"
8923440,8924720," slash"
8924720,8924880," n"
8924880,8925440," somewhere"
8925440,8926160," no i didn't"
8926160,8927200," oh"
8927200,8927920," slash n"
8927920,8928800," comes from the"
8928800,8930160," from"
8930160,8930640," the"
8930640,8931680," slash n in here"
8931680,8932720," when i pressed it in here"
8932720,8933600," god damn it"
8933600,8934080," so maybe"
8934080,8936640," maybe i should print the bytes then"
8936640,8939360," yeah"
8939360,8940480," let's print the bytes then"
8940480,8941920," in this case"
8941920,8945520," so what does it say"
8951680,8954480," oh okay"
8954480,8956560," so we can just do the debug one"
8956560,8956880," right"
8956880,8958640," so it could be debug one"
8958640,8959680," how do you do the debug one"
8959680,8960640," i don't remember"
8960640,8962400," so i think it's the other way around"
8962400,8963520," yeah"
8963520,8964400," it's the other way around"
8964400,8966400," okay"
8966400,8966640," so"
8966640,8968080," boom"
8968080,8968480," test"
8968480,8969600," all right"
8969600,8971040," so this is the bytes and everything"
8971040,8971280," okay"
8971280,8974080," so client blah blah blah"
8974080,8974800," connect it"
8974800,8976560," and then we can close the connection"
8976560,8980560," got it"
8982000,8983120," i think i know what's going on"
8983120,8983760," i think i think"
8983760,8984880," i think i know how to fix this"
8984880,8985200," shit"
8985200,8989280," so if"
8989280,8990240," okay"
8990240,8992080," end of file if n is equal to zero"
8992080,8992640," okay"
8992640,8994000," n equals zero"
8994000,8999600," greater than zero"
8999600,9000880," so i'm going to do a very dumb"
9000880,9001760," thing"
9001760,9003680," otherwise just"
9003680,9004080," you know"
9004080,9007760," so let me"
9007760,9011120," let me see"
9011680,9016480," read"
9016480,9016800," read"
9016800,9016880," read"
9016880,9016880," read"
9016880,9017440," read"
9017440,9021680," it's um"
9021680,9023120," a read one"
9023120,9028880," pull some bytes"
9028880,9029760," blah blah blah"
9029760,9030640," this function"
9030640,9034000," the return"
9034000,9037280," so if the return value of this method"
9037280,9037760," okay"
9037760,9039520," an implementation must guarantee that"
9039520,9045120," a known zero n value indicates that the buffer has been filled with n bytes"
9045120,9048080," then it indicates one of two scenarios"
9048080,9052960," the reader has reached the end of file and will likely no longer be able to produce bytes"
9052960,9057840," know that this does not mean that the reader will always no longer be able to produce bytes"
9057840,9059520," for asynchronous situations"
9059520,9060560," right so"
9060560,9064480," so that's understandable the buffer specified was zero bytes in length"
9064480,9064800," okay"
9064800,9069600," um so that is cool that is cool"
9071280,9074560," um so error"
9074560,9077440," uh reached"
9077440,9078880," um so we can say"
9078880,9081840," that author"
9081840,9083840," client"
9083840,9086240," author addr"
9086240,9088240," uh reached"
9088240,9090960," reached the"
9090960,9092880," end of file"
9094800,9096080," and we send you that"
9096080,9096160," the"
9096160,9096880," shit in there"
9096880,9097120," and"
9097120,9099280," something like that"
9099280,9100640," okay so that's cool"
9100640,9101520," uh that's cool"
9101520,9102320," that's cool"
9102320,9103760," i think we figured it out"
9103760,9106000," so actually logging everything was useful"
9106000,9106560," right"
9106560,9107760," so we managed to figure it out"
9108880,9109200," okay"
9109200,9122080," okay"
9122080,9136640," it's a single lane"
9138880,9140160," uh"
9140160,9141200," or maybe break"
9141200,9145680," because that would break"
9145680,9147120," out of all of these things"
9147120,9149040," automatically because of the question mark"
9149040,9150720," uh"
9150720,9151200," right"
9151200,9151600," so"
9151600,9160080," all right"
9160080,9160560," all right"
9160560,9160960," all right"
9160960,9161680," all right"
9161680,9162000," so"
9162000,9163680," okay"
9163680,9164880," so that means"
9164880,9167200," we probably also want to do something like this"
9167200,9169280," because it returns result"
9169280,9170240," that's understandable"
9170240,9171600," yeah that's cool"
9171600,9172560," so before we"
9172560,9175280," yeah we never actually got out of that loop"
9175280,9175920," so that's good"
9175920,9176480," that's kind of funny"
9176480,9178560," uh"
9178560,9180560," yeah"
9180560,9183040," finally"
9183040,9188000," so maybe logging reached and the file is not particularly useful"
9188000,9191520," reached and the file so i'm not going to do that"
9193760,9194960," uh"
9194960,9195840," to the tune"
9195840,9198880," okay so we do that"
9198880,9200960," and close"
9200960,9201760," disconnected"
9201760,9203600," hello"
9203600,9205680," test"
9205680,9208800," epic"
9208800,9209440," epic"
9209440,9209840," epic"
9209840,9209840," epic"
9209840,9210560," so now"
9210560,9212080," close"
9212080,9214160," and see a boom"
9214160,9215360," you bam"
9215360,9221360," it's broken some pipes"
9221360,9222000," could not send"
9222000,9223760," banned message"
9223760,9226480," oh did they actually send a banned message"
9226480,9228400," could not send"
9228400,9230880," because we shut down"
9230880,9233520," that's really funny"
9233520,9236720," oh yeah"
9236720,9240560," because we were maybe receiving some stuff from okay"
9241360,9243520," i i can see that being being a thing right"
9243520,9245360," so i can see that being a thing but it's not that"
9245360,9246560," big of a deal"
9246560,9248720," so then i can try to"
9248720,9249840," connect"
9249840,9253520," all right okay so you banned mf"
9253520,9254640," uh"
9254640,9256960," in this amount of seconds okay"
9256960,9259200," that's cool"
9259200,9261200," um"
9261200,9262320," so"
9262320,9266320," we probably need to log something you're banned mf"
9267680,9268480," um"
9268480,9268880," this is"
9268880,9270800," how much left"
9270800,9272080," it would be nice to just say"
9272080,9274480," something like"
9274480,9277120," info"
9277120,9279280," client"
9279280,9281200," so we already say client connect"
9281200,9283600," yeah yeah so we say client connected in here"
9283600,9284080," client"
9284080,9288800," addr"
9288800,9290960," tried to connect"
9290960,9292000," but"
9292000,9293440," that"
9293440,9295280," mf is"
9295280,9296320," banned"
9298480,9298720," for"
9298720,9298720," for"
9298720,9300080," sex"
9300080,9300960," sex"
9300960,9303040," um"
9303040,9304640," now what"
9304640,9307600," i'm gonna extract the sex"
9307600,9309360," out of it"
9309360,9311680," like so"
9311680,9315360," there we go"
9319440,9320400," sex"
9320400,9322160," okay so what the fuck is that"
9322160,9325920," all right"
9325920,9326400," so"
9326400,9326880," nc"
9326880,9328160," boom"
9328160,9329920," okay so we try to connect"
9329920,9330640," and uh"
9330640,9335920," try to connect but that mf is banned for this amount of seconds okay"
9335920,9340640," so that's that's cool try to command but that enough is banned for this amount of seconds"
9342800,9346800," so and then we can do that hello world test"
9346800,9348880," easy not epic"
9348880,9357600," so we can try to do those that shits uh we we could try to do those that shits um i probably"
9357600,9361680," i think logging stuff as just bytes is fine"
9361680,9370160," right so because it basically automatically screens any racist nates nazi shits uh it also"
9370160,9375520," automatically reduces possibility of escape sequences or something like that so that's actually good"
9375520,9382000," so i'm not gonna be a looking um showing on the screen anything like super sensitive"
9382000,9382240," but"
9382240,9385840," you as a client when you connect"
9385840,9393280," be aware that some people may send some sensitive stuff like racist or nazi and i absolutely do not"
9393280,9398960," approve that this is just like nature of this entire thing and i haven't implemented any"
9398960,9405600," authentication to weed out some other people so connect to that server on your own risk"
9405600,9408160," so"
9408160,9414880," so we're we're on the same page on that right so everything's fine so connect to that"
9414880,9422960," on your own risk so if you're scared of scary hackers uh so do not connect there but to be fair"
9423680,9429680," i don't think they'll be able to do something super scary right because like again like there's no"
9429680,9435520," possibility of escape sequences or anything we literally validate utfa and stuff like that"
9435520,9441200," leak ip ip is the same by the way as usual so actually i just reinstalled the same machine"
9442320,9448160," um are you printing oh we also yeah yeah we need to screen the sensitive data thank you for"
9448160,9455200," imagining oh this will require to to do what all right this will require to do a lot of work but"
9455200,9456960," what what if i deploy on them"
9456960,9466400," i feel like escape sequences are valid utfa it's yeah all right so let's not do the not do the dose now"
9466400,9467920," let's not do this"
9467920,9473200," no ddos for today so uh yeah"
9476880,9483600," all right so we rewrote this shit in rust uh surprisingly it worked fine right so uh we have"
9483600,9491360," this thing working fine uh so and uh yeah so that's it for today thanks everyone who's watching me right"
9491360,9497760," now i really appreciate that have a good one and i see you all on the next recreational programming session"
9497760,9501600," with azuzin love you"

start,end,text
160,4960," Hello everyone and welcome to yet another recreational programming session with Mr."
4960,11440," Zozian. So some time ago on Twitter, I noticed a very interesting, cool project which is called"
11440,17200," QuineClock. Right, so essentially it's implemented by Amitok Clape, I hope I pronounced"
17200,22560," their name correctly. So and the idea is that you have this like a mess of JavaScript, right,"
22560,27840," so and what it's capable of doing, it's actually capable of like printing itself on a page and"
27840,32240," acting like a clock, right. So there's a video in here that kind of demonstrates that"
32240,41440," and also I think there was somewhere a link where you can actually look at this entire thing. So here"
41440,50560," it is. So for people like in the chat, all of that can be, you know, received, achieved. So all these"
50560,56480," links can be printed by the bot when you do today command. I forgot how to English today, okay. And"
56480,61120," for people on YouTube, it's going to, it's going to be in the description. Right, so it's kind of cool."
61120,67680," I don't really know how they achieved that because this thing is unreadable. So, and I don't know if"
67680,73760," it's like a legit Quine, right, that actually sort of like prints out its own source code,"
73760,78880," or maybe they're actually inspecting DOM and extracting this kind of stuff, like I don't really know."
78880,86800," But this got me, gave me an idea that I could try to implement this kind of thing in C for the ANSI"
86800,94080," terminal. Right, so ANSI terminal, it actually allows you to have animations like that if you like,"
94080,101840," you know, update the cursor correctly, right, and refresh the sort of like the scene that you rendered,"
101840,107360," and you can also have colors, you can kind of replicate this entire thing in the ANSI terminal."
107360,111680," And on top of that, you can implement it as a Quine. So I don't know if I already said that,"
111680,117200," like what is a Quine. Quine is a program that actually prints its own source code, right. So if you never"
117200,122080," heard about it, and we had quite a few people in the chat, in the press stream that don't know what"
122080,126640," is Quine. Quine is a program that prints its own source code, right. So if you google that Quine,"
126640,135520," it's actually a very interesting concept. In the languages that allow you to inspect their own"
135520,141920," source code, it is actually pretty easy and pretty straightforward, like for example in Python or in"
141920,148560," JavaScript again. But I don't know if this one actually like uses self-referencing. So, but in the"
148560,155200," languages like C or Java where you can't really read your own source code, it's kind of more difficult,"
155200,160240," right. So you have to actually use some interesting tricks. And if you try to implement Quine in a very"
160240,167200," naive way, you will notice that, right, so you have a program and then you have a string that is supposed"
167200,173600," to print itself, but then within that string you need to have that string again, which also supposed to"
173600,178160," have that string again. And you kind of go into this infinite loop and you don't really know"
178160,184080," how exactly to print your own source code. So this is kind of like the trick in Quine's, like how do you"
184080,190800," even do that. So, and I actually implemented Quine's in the past, so I kind of know the idea of how"
190800,198160," it all goes. And yeah, I just want to try to replicate this cool and fascinating project. I don't really"
198160,204800," know if I'll be able to do that honestly, right. So, but kind of I kind of have like a road map in my head,"
204800,211440," right. So, and I try, try, and I want to try to attempt, you know, doing that. I'm not sure if I'll"
211440,217360," be able to even finish this entire thing within the, within the stream, right. So maybe I'm going to do"
217360,222960," like a footnote and a flying footnote to finish this entire thing. We'll see, we'll see, like I haven't"
222960,228320," decided yet. Right. But let's go ahead and try to do that. So the first thing I want to do, I want to kind of"
229200,236480," refresh how to implement Quines, right. Let's just implement a classical Quine, right, without any"
236480,242400," clocks or anything like that in C, just a program that prints its own source code. And once we have"
242400,249760," that, so the next step is going to be, let's implement just a clock without being a Quine, right. So let's"
249760,255280," actually split the problem into two parts, right. Let's implement Quine and then implement like an"
255280,262400," ANSI terminal clock. And then we can see how we can combine these things together. Right. So that's the"
262400,268800," roadmap I have. Right. I kind of like understand how to implement these two things separately."
268800,274480," And I hope once I implement those two things, it's going to be more or less obvious how to combine them"
274480,278880," together. You know what I'm talking about? Right. So that's going to be basically the idea. That's going"
278880,285040," to be basically the idea. Okay. So let's go ahead and do that. So I'm going to just create a"
285040,296800," a file Quine.c. Right. So I'm going to just write a simple hello world, like so. Right. And just"
296800,303520," set up my building thing. Set up my project, so to speak. So then print hello world. So what I'm going"
303520,307360," to be using for building, I think I'm going to be using, I think I'm going to be using Nob. Right."
307360,313760," So because I'm probably going to have several programs here. Right. And some programs I'm going to be running,"
313760,319440," you know, other programs and maybe processing some files, we'll see how it will go. So I'm going to"
319440,327520," just bring Nob in here. Right. So this is going to be visualizer. And where is my Nob? Nob.h."
327520,335520," I'm going to copy paste it in here and I'm going to create Nob.c. Okay. So I'm going to include Nob and I'm also going to"
335520,345280," enable implementations. Right. So because by default Nob acts like a header and this is not what we want in"
345280,352800," here. This is definitely not what we want. And then we're going to enable, you know, go rebuild yourself"
352800,360080," technology. So Nob, go rebuild yourself technology. It requires the argument, but it allows the executable,"
360080,365120," the build executable to rebuild itself when it's modified. So the next thing we're going to do,"
365120,370400," we're going to create a CMD object. Right. So I'm going to be just appending some things in here."
370400,376800," So I'm going to append the compiler. Right. So then I want to enable a bunch of warnings. Right. So it,"
376800,384800," because it's always nice to have some warnings in here. Then afterwards, I'm going to, I suppose,"
384800,392320," say that the output is going to be Quine. Right. Because we're building the Quine.c and the input is"
392320,398880," Quine.c. So afterwards, we're going to say run this entire thing synchronously. Right. So it's going to"
398880,404080," block until the command is finished and it's going to return false in case of an error. And in that case,"
404080,409040," we're going to say that we return non-zero exit code. Okay. So everything is prepared. So let's"
409040,416080," actually build this entire thing like so. And it cannot find Nob.h. Right. Let's try to do it like"
416080,421200," that. So this thing doesn't have to be by a pointer. There we go. So we build the build system. Now,"
421200,426960," if I try to run the build system, it builds the Quine. There we go. If I try to run the Quine"
426960,433760," afterwards, the Quine prints hello world. Right. So that's basically what we have in here. We have a"
433760,440880," prepared project. Okay. So what if you try to do a very naive thing? Right. So, okay. The program must"
440880,446960," print itself. Okay. Let's just copy paste the entire program and just say, okay, print yourself. Like, is it"
446960,455520," going to even work? Okay. So there's some problems in here with maybe new lines. We can try to replace"
455520,464640," new lines and stuff like that. So let's create, replace new lines with like escapes and everything."
464640,470880," There we go. Okay. So, and we also need to escape the quotes in here. Right. So that should work as"
470880,478000," well. And if we try to run this entire thing. Okay. So it kind of prints, but it doesn't print itself."
479440,485520," It, it, it, it, it, it's not the source code. Right. So as you modify this, uh, this thing,"
485520,492160," you kind of realize, you kind of realize that like, it doesn't print this thing anymore. So you have to"
492160,498560," kind of go recursively. And now in hello, you have to copy paste it again, but now again, it's not the"
498560,504960," same program. So we have to keep copy pasting it indefinitely on how you break out of that recursion."
504960,511760," Like how exactly do you break out of that recursion and print your own source code. Um, so it's, it's,"
511760,517840," it's kind of bizarre, but I mean, again, in C, you can kind of like, just maybe do something like you"
517840,526000," can include knob, right? So you can include knob.h, uh, knob read the entire file. You can basically read"
526000,534640," entire like file in here. And as far as I know, in knob, I read entire file. Yeah, it's, it's a right"
534640,541520," entire file. I need to read entire file. So to read an entire file, what you have to do is to have a"
541520,550640," string builder, because that's where it actually stores whatever it read. Like so. And you can always do"
550640,556640," something like that. Right. So, and if it's like not working, we're going to just return one. So,"
556640,562640," and in this specific case, we can just do f right. Um, and how f right works. I can never remember the"
562640,569520," order of the parameters of this goddamn fucking function, mate. Goddamn fucking function. Uh,"
569520,576880," right. So this is the point as, so we have to say that this is going to be sb items, right? So the size is"
576880,582400," going to be sb count. The amount of such things is going to be one, and we're going to be printing"
582400,589280," all of that to the standard output. So that's about it. So we can now try to do this kind of thing."
589280,598720," Uh, and, uh, yeah. So we need to also have the knob implementation. There we go. So that is"
598720,605840," Quine basically, but among the Quine enthusiasts, it is considered cheating. Right. It is considered"
605840,611360," cheating to actually refer to your own source code. And furthermore, if you rename the source code,"
611360,617280," that exact executable does not print its own source code anymore. It's not even printing your own source"
617280,623200," code. It's literally just reading from a file and printing a file. It's not a Quine, honestly."
624000,630560," It is not a Quine. So ideally you want your Quine to be like a self-contained executable. You really"
630560,637840," want it to be a self-contained executable. Uh, so the idea of a Quine that I usually implement. So as far"
637840,643040," as I know, you can implement them in different ways, right? So you can be very creative in how you implement"
643040,652080," all that. But the idea is I use is an idea of an interpreter. Right. So essentially I'm sort of"
652080,661040," thinking about this entire stuff as a mini interpreted language. Right. So, and I kind of embed the source"
661040,667440," code that I'm going to be interpreting, um, into this, into the program itself. Right. So what's actually"
667440,675680," called SRC? So, and what commands does this language have? What commands does this language have? It has"
675680,683760," command of a character, right? So if it encounters some sort of a character like A, it prints that character"
683760,691440," A. That's what it does. And to be fair, any character that it encounters, which is like a valid character in C,"
691440,699600," it will just print that character. There is, however, a special character. And I don't know which one to"
699600,704320," use, but, but I prefer to use like a question mark, maybe, because I'm not going to be using question"
704320,711760," marks throughout the program. So if that interpreter encounters a question mark, what it does, it just"
711760,721120," takes the entirety of SRC and prints that entirety of SRC. So that's basically the mini language that I"
721120,728640," implement within the Quine. Quine becomes an interpreter of that mini language. Right. With"
728640,735200," a special command of question mark that just prints its own source code. So, and after that, after I just"
735200,738960," like denoted some sort of a source code in here, like it doesn't really matter, I don't have to write"
738960,747920," anything in here. Below, after that, I just write an interpreter for that language. I just write an interpreter for"
747920,754480," that language. So, let's go ahead and write an interpreter for such language. So, we're going to"
754480,758800," basically iterate throughout the source code. Right. So, but we need to know the size of the source code."
758800,766320," It's an unlimited string, so we have to do something like srcn. Right. So, we have to do strlen src,"
766320,771760," and I'm going to include string just in case. All right. So, let's just iterate through the entire thing."
771760,779600," Let's just iterate through the entire thing. All right. So, srcn."
782160,790640," So, if you encounter question mark. Right. So, you just encountered a question mark."
790640,798960," What you have to do? You have to print the entirety of the source code. Right. Just print the entirety of"
798960,807040," the source code. So, this is how we can do that. Just src. If you encountered something else, if you"
807040,813200," encountered something else, we are going to print that thing effectively. Right. So, print tab"
813200,825760," c. Maybe for now, it would be even better to not even use switch cases. Right. Because I think it's just"
825760,834880," better to do something like this. Right. If src equal to the question mark, just do that. Just bring the"
834880,843920," entirety of this entire thing. Otherwise, do that. All right. Though, there is a couple of interesting"
843920,851360," things in here. Right. I feel like it's like when we encounter like a back slasher. So, we'll have to do"
851360,858000," something different. Okay. So, let's actually do it like that. So, anyway. If I try to now run this"
858000,863520," entire thing and I sort of like print it, as you can see, it just prints the source code itself. Right."
863520,868400," So, it encounters the question mark. The entirety of the source code is just a question mark. So, it just"
868400,878080," prints this entire thing. So, now what we need to do, we need to replace the entirety of the source code"
878080,884800," with itself. Right. The entirety of the source code with itself. But we also need to replace the new"
884800,888240," lines and stuff like that. So, let's actually go ahead and do that. So, I'm going to quickly replace"
888240,894640," the new line. I already have that. Right. With like basically connect all of these things together."
894640,900560," Like so. So, and now I'm going to just paste it in here. So, there's a little bit of problem,"
900560,906400," as you can see. So, the double quotes, they also have to be escaped. All right. So, let's actually do"
906400,911600," something like this. We're going to be escaping the double quotes. So, now I can actually put it like"
911600,916880," that. Right. So, and essentially, as you can see, the program below is going to be basically"
916880,922720," interpreting this entire thing and printing the characters as they are until it encounters the"
922720,929120," question mark. And then, as it encounters the question mark, it will print the entirety of SRC"
929120,934800," and then continue printing the rest of these things, thus effectively replicating this entire program."
934800,941040," So, that's how you break this recursive loop. There is a little bit of a problem. There is a little bit"
941040,949200," of a problem. Question mark now actually occurs twice. The second time question mark occurs is when"
949200,955120," in an interpreter I'm checking is the current character question mark. So, and you don't really want to print the"
955120,961760," entirety of the source code in that specific case. So, to sort of like circumvent that,"
961760,967840," you actually should not use question mark to check whether the current command is a question mark."
967840,974560," So, this is a very interesting thing. So, what can you do in here? You can replace it with an ASCII code."
974560,982240," Right. So, let me actually see. So, what's the ASCII code of the question mark? So, it's actually 63,"
982240,988400," I think. Yeah, it is 63. So, let's go ahead and do that. Right. So, this is going to be now 63."
988400,996160," And in here, in that specific question mark as well, you can replace it with 63. So, now as you can see,"
996160,1003520," the question mark actually occurs only once. So, unfortunately, not 69. 69 is actually E."
1003520,1013600," It's kind of funny how, you know, so the most meme letter also has the most meme ASCII code."
1013600,1016960," Did you notice that? It's kind of funny."
1020960,1029360," E. All right. So, yeah. So, that's basically the idea that I personally use for quines."
1029360,1034640," It's not finished yet, by the way. It's not finished yet. So, it's not going to print"
1034640,1040720," precisely its own source code. You kind of have to like work on it a little bit. You have to handle"
1040720,1046800," a little bit more of these things in here. But we'll see. We'll see. Okay. So, yeah. There we go."
1046800,1053440," So, that's very interesting. Right. So, that's very interesting. As you... It's actually kind of close,"
1053440,1061520," isn't it? Right. It's actually kind of close. So, the thing you need to do now, when you're printing"
1061520,1068880," your own source code, you actually have to escape it as you print. So, here is the original thing."
1068880,1074960," And here is the source code. Here is the sort of like inner source code. Right. So, we're already kind"
1074960,1081040," of getting closer in here. We're already kind of getting closer. Okay. So, as we print the source code,"
1081040,1086640," instead of like blindly printing it, instead of blindly printing it, I suppose what we can do in here,"
1086640,1096640," we can actually, you know, bring it also character by character, but then escaping the special characters"
1096640,1102160," and stuff like that, specifically new lines and the quotes. Right. So, that's what we can do in here."
1103520,1112080," Right. So, let's go ahead and do that. So, srcn++J. And now, what I'm going to be doing... So,"
1112080,1120800," I'm going to say if... Maybe here I want to actually switch case. Right. So, it's going to be srcj."
1121840,1128240," If I encounter a new line. Right. So, if I encounter a new line. This has to be case."
1128240,1133040," I basically print..."
1133040,1141040," Yeah. Print like escape new line. Right. So, I use like a double backslash. So, here I probably have"
1141040,1150400," to put a break. If I encounter quote. Right. I have to print escaped quote. But here I have to actually escape it like that."
1151120,1157840," There's so much escaping going on. It's kind of insane. And in case of a default, I just print that"
1157840,1165280," original character in here that we got in here. So, that's basically the thing we can do in here."
1165280,1170960," And I think that's about it. I think that's about it. But if I try to run this entire thing,"
1170960,1178880," I think it kind of worked. But not really. Not really. Oh, I don't know what the fuck happened."
1178880,1186000," Why did I put++ in here? Right. So, it's not the same code actually. It's not the same code. Because,"
1186000,1196960," as you can see, the interpreter is not updated. So, we need to now go back and sort of recompile this inner"
1196960,1201760," blob that we're interpreting. Right. So, we kind of have to recompile it. So, we're going to put a"
1201760,1206320," question mark in here. We're going to take this entire thing. Right. So, I'm going to actually do"
1206320,1213840," something like that. Right. So, what I need to do is query replace new line with /n. Right. And also,"
1213840,1219680," query replace this thing with this thing. Right. So, I need to escape all of that stuff. And that should"
1219680,1229440," enable me to put this thing back. So, there's something... Oof. Alright. So, there is also..."
1229440,1238480," Yeah. This kind of thing. When I have... So, I have to... Yeah. Probably this is what I have to do."
1238480,1252480," I guess. Honestly, it would be actually maybe easier to just use ASCII codes for these things as well."
1252480,1259120," Right. So, I think it would be easier to use ASCII codes here too. Just a second."
1262880,1268640," So, okay. Let's actually see. New line. So, let's put 10 in here."
1268640,1279920," Let's put 10. And where is the code? It's 34. So, something like 34. But is it going to actually"
1279920,1288000," really help? It doesn't really matter actually that much. So, we have to kind of approach escaping this"
1288000,1293520," entire stuff differently. So, I think first thing we have to do... Okay. So, I think I've got an idea"
1293520,1297680," how exactly we're going to actually approach this entire thing. The first thing we're going to do,"
1297680,1305360," we're going to query replace backslash with double backslash. Right. Because, yeah. If we start adding"
1305360,1310720," escapes for new lines and quotes, they will introduce their own backslash which makes it impossible to do"
1310720,1316800," something like this. Right. This is understandable. Okay. So, now I want to query replace new lines with /n."
1317600,1323600," Like so. And I'm going to query replace these things with /double quotes. Like so. So, that's kind"
1323600,1330320," of the new blob, I think. That's kind of a new blob. And let's see if it's going to actually work now."
1330320,1338560," All right. So, I think I forgot the semicolon in here. So, let me find this entire thing. So,"
1338560,1344960," this is where we have to have a semicolon. Okay. So, if we try to run this entire thing. And I think,"
1344960,1350000," yeah, there we go. It reproduced the blob. So, one of the things we can do now, actually,"
1350000,1362560," we can try to run it into quine2.c. Right. So, and then we can simply compare quine.c with a quine2.c."
1362560,1368960," And they are apparently not the same. So, there's a little bit of a difference and discrepancy between"
1368960,1376080," them and I don't quite understand. I suppose that comes from... I think I know where it comes from."
1376080,1383840," So, we also need to handle specifically backslashes too. Right. So, that explains it. All right. So,"
1383840,1389200," and basically, you go like iteratively and iteratively sort of like building upon this"
1389200,1395440," small interpreter until you get a quine, like an actual quine. Right. So, then here we just like"
1395440,1402800," print it like that. So, if we encounter that, we just print it like that. Hopefully, that will now work."
1402800,1408400," So, let's actually now recompile that blob. Right. So, let's go ahead and recompile that blob."
1408400,1417520," So, let me see. Let me see. And, okay. So, we can replace backslash with double backslash."
1417520,1425680," Look at the amount of backslashes in here. Like, holy shit. All right. So, and then new line with a"
1425680,1435120," slash n and then double quote with a slash double quote. All right. So, hopefully, that is going to"
1435120,1442640," work now. So, that's a pretty big blob. But this is because we never tried to optimize this quine. Right."
1442640,1447520," So, I'm just implementing quine in a very naive way. Right. And they have in a very straightforward way."
1447520,1454000," So, if I try to optimize like the size of this entire thing, I'm pretty sure we can make it smaller."
1455200,1461920," All right. So, now let me try to run this entire thing. And hopefully, if I take a look at the"
1461920,1469120," difference between them, they're the same. So, they're literally the same. So, we can even do"
1469120,1480960," shadow156. So, sum of these two things. And they have the same hash sum. So, that's how we implement"
1480960,1487040," quine in C. Like, at least one approach to implement quine without using any trickery or anything like"
1487040,1493840," that. I personally call this approach an interpreter approach. Because, again, you have sort of like a"
1493840,1500880," mini-language. Right. Where each character is a command. And then, down there, you implement an"
1500880,1507360," interpreter of that language. Right. And because of that, this is why I say that quines are kind of akin to"
1507360,1514080," self-hosted compilers. Because it kind of becomes a self-hosted compiler for this mini Turing incomplete"
1514080,1521360," language. If you know what I mean. Right. So, and now you can start optimizing and like shrinking down"
1521360,1527920," this specific interpreter. Right. Shrinking down this specific compiler. And because of that, that blob"
1527920,1533040," will become smaller and smaller. Right. So, that blob is pretty big because the interpreter itself is"
1533040,1538000," pretty big. Right. So, but if you spend some time, you know, optimizing this entire thing,"
1538000,1544960," it may become actually shorter. Hopefully. So, and okay. So, we know how to implement a quine."
1544960,1552000," But, but how do I turn that into a clock? So, essentially, one of the things I can do,"
1552000,1560400," right, is instead of just an interpreter in here, instead of just an interpreter"
1560400,1570400," that prints this entire thing. Actually, not instead, but along with the interpreter. I can modify the"
1570400,1578800," interpreter not only print this entire thing, but print it constantly in a loop. Right. It's just like,"
1578800,1584160," this is a single print. This is a single iteration of a program. But now, let's print it constantly."
1584160,1594240," And as we print it, format it like a square on the screen. Right. And then, on the next iteration, always"
1594240,1601440," move the cursor to the left top corner. So, as you reprint, it actually refreshes it instead of, like,"
1601440,1606960," instead of spamming the terminal. Right. So, the first modification that you can do to this specific"
1606960,1614480," interpreter is just print the source code continuously. So, you can play it as an animation. Okay, cool."
1614480,1623360," So, afterwards, you probably, within the interpreter, can constantly poll the current time. So, as far as I know,"
1623360,1628800," like, I already know how to get the current time, I implemented that in Suvun. Suvun has a clock mode."
1628800,1633600," Uh, it can basically act as a clock. So, this is my current time. Right. If you take a look at the"
1633600,1638320," clock. Right. So, this is my current time. It's midnight, actually. Uh, right. So, I'm doing that in"
1638320,1644960," the middle of the night. Um, so, we can take a little bit of a code from Suvun on how to get the current"
1644960,1652960," system time. Um, so, we can embed that into the interpreter as well. And, uh, as we print different"
1652960,1662400," characters and stuff like that, we can also color specific characters, um, with the ANSI escape codes."
1662400,1667840," So, there's an interesting trick that I would like to steal from, uh, from the original tweet."
1667840,1675360," So, what they do, they actually store the digits in a three by five bitmap, uh, encoded within an integer,"
1675360,1682160," within the bits of integer. Right. So, and the, uh, basically, the bitmaps are here. So, here is the"
1682160,1687840," array of bitmaps. We can actually steal this array of bitmaps. We can basically use the same font."
1687840,1694400," Right. And as we print the characters of the program, uh, we can identify whether that specific character,"
1694400,1700080," which we interpret as a pixel. Right. So, where that pixel is currently on some of the bitmaps,"
1700080,1705680," we can just color it differently. Right. We can basically color this entire thing differently."
1705680,1713440," That's the idea I have. Uh, so, and the, the most difficult thing here would be probably,"
1713440,1723600," like, how do we format it so it looks nice? I can just throw something that looks like whatever,"
1723600,1728800," but how do you format it so it's, like, even in nice like that? I think that's the most difficult part."
1728800,1733440," That's the most difficult part. Remove spaces. Right. So, you have to spend a little bit of time"
1733440,1737440," of just, like, adjusting these things around and stuff like that. But, but the main idea is actually"
1737440,1743920," pretty straightforward, I think. Uh, the main idea is actually pretty straightforward. So, yeah."
1743920,1756320," Interesting, interesting, interesting, interesting. Uh, so, yes, yes, yes, yes. So, what I would like to do,"
1756320,1765280," actually, I would like to implement an answer terminal, um, clock without it being a quine. Right. Just to get"
1765280,1770400," an idea of, like, what exactly do you need to implement such thing. Um, right. So, let's go ahead"
1770400,1777840," and maybe, uh, create, uh, like, a clock.c. Right. So, I'm not sure if it's a good idea to call it clock.c,"
1777840,1782320," because there's some headers that are called clock. But, I mean, it's called, they're called,"
1782320,1788000," called clock.h, not .c. So, I don't think you can create any particular collisions, name collisions,"
1788000,1792720," or anything like that. So, I think it's totally fine. It's totally fine. There's nothing to worry"
1792720,1799600," about. Anyways, uh, so, let me put this entire stuff to here. I might as well actually factor out,"
1799600,1805360," uh, this entire stuff to something like build_xz. So, let's say that this function is going to return"
1805360,1811520," boolean in case of some sort of an error. So, here we're going to accept the command stuff, uh, right. And"
1811520,1818160," here maybe we're going to accept the out path and in path, right. So, what's called output path and,"
1818160,1825600," uh, const char input path. I don't really know why I do that in that specific order. Maybe this is"
1825600,1832560," because I do that in that order in here, uh, but it doesn't really matter that much. So, uh, what we have"
1832560,1838880," to do in here, we have to create place this stuff with just this stuff like so, but then we have to put"
1838880,1844560," something like this in here. So, this is the output path and this is the input path, right. So, as you"
1844560,1849920," can see here, since I'm using C, I can just like, you know, factor out a little bit of a code that is"
1849920,1857840," repeating itself. Um, so, and in here, by the way, we can just simply return the result of, uh, you know, run"
1857840,1867920," sync command like so. So, afterwards, we can replace this entire thing with, uh, something like, um, you know,"
1868560,1875680," build exe, uh, cmd. So, we need to have this kind of thing. We're going to pass it by a pointer, uh,"
1875680,1883280," quine, quine dot c, like this. And obviously, it can return false in case of returning false. So,"
1883280,1889280," we're going to return false here. Not really false, but one, no zero exit code. So, and now I can actually"
1889280,1895360," duplicate that. So, now this clock, there we go. So, if I need to build another executable, I can just like,"
1895360,1900480," you know, add another line in here, right. So, and I have a, uh, centralized place where I can update my"
1900480,1906880," flags and stuff like that. So, all right. So, this is knob, uh, and let's see what we have in here. So,"
1906880,1911760," it doesn't like something about first define, what the hell are you talking about, brother?"
1912320,1924240," Uh, clock dot c. Did I do a fucky wacky? What? What? Am I, am I going crazy already? So, um,"
1926000,1936800," clock dot c. All right. Is that... Oh, CMD is a pen. Yeah. Yeah. I keep forgetting about it. I get"
1936800,1946560," fucking damn it. I'm sorry. Uh, right. So, that's a very, very nasty gut, uh, gacha. Uh, okay. So,"
1946560,1949760," that seems to be, that seems to be fine. That's cool. That's cool. Thank you so much, everyone. Thank you."
1949760,1957920," Thank you so much. CMD is nuts. CMD is nuts indeed. Uh, all right. So, now, uh, what we want to do in"
1957920,1964240," here, uh, maybe we're gonna, we're gonna actually steal that bitmap thing. Yeah. Uh, right. Let me try"
1964240,1974640," to maybe just take this entire thing. Um, so, this is gonna be clock dot c. Uh, and this is basically"
1974640,1979840," font, right? So, we can maybe even say it's, uh, something like this, right? So, this is the font now."
1979840,1987840," We stole this entire thing. So, one of the things I would like to do maybe is to inspect this font,"
1987840,1993440," right? Because it's rather fascinating, isn't it? Like, let's actually create a function, uh, that will"
1993440,2000480," print a specific character, right? So, print font character, uh, and we're going to accept just like"
2000480,2008720," this integer, right? So, this is integer thingy. Um, let's try to interpret this three by five bitmap,"
2008720,2016960," uh, three by five bitmap. To be fair, like, how, in which order is it actually interpreted? So, let me take"
2016960,2022480," this thing and open it like in python. Uh, I'm gonna take this stuff and I'm gonna convert it to bin."
2023040,2030880," All right. So, they are interpreted starting from the most significant ones. That's fascinating, actually."
2030880,2040160," So, they're interpreted starting from that. Okay. That's, that's very cool. Um, so, and obviously,"
2040160,2052400," I want to actually do print font char. Let's do font zero. Let's actually take a look at the first one. Uh, and, uh, yeah. So, we know that there is like a"
2052400,2060480," five rows in here, right? So, we're gonna start maybe with, um, you know, y5, right? So, there's a five rows."
2060480,2073840," And, uh, we wanna start from... I mean, it's not that hard to do, I think. All right. So, we can then iterate"
2075440,2083440," uh, this kind of thing. So, it's gonna be three. Uh-huh. Yeah, it shouldn't be that hard, honestly,"
2083440,2090720," because you can just do ch and you shift to the right, right? You shift to the right."
2092240,2101920," So, if you want to take the first one, uh, you shift y times, but it's actually y, um, rows minus y"
2101920,2108640," plus one, sort of speak. I think, I think, I think, I think, I think, or maybe even minus one."
2108640,2115520," Um, all right. Because if this is zero, I actually want to shift this entire thing,"
2116320,2122640," uh, four times, right? So, and that's exactly what's going to happen. So, I suppose I need to define"
2122640,2128560," things like, uh, font rows, which is going to be five, and font columns, which is going to be three."
2128560,2136720," So, that means I can put stuff font rows and font columns, like so. Okay. So, this is a font, uh,"
2136720,2142800," rows. And actually, I want to shift not by this amount of things, but the, uh, the amount of columns,"
2142800,2146480," right? So, that means I have to multiply this entire thing by amount of columns, right? So,"
2146480,2151520," that's the first shift that I have to perform. So, and after that, I have to perform, like,"
2151520,2156800," another shift, uh, within the row, within the row that I have. And what's funny is that,"
2157840,2165360," yeah, once I got this one, I kind of have to do a similar trick, right? So, I'm shifting"
2165360,2177600," to the right with font columns minus x minus one, right? So, funnily enough, I mean, we can actually"
2177600,2184400," combine these two things together, like, like this, right? So, and that's basically what we have in here."
2185040,2193600," So, and if that specific bit is true, if that specific bit is true, uh, that means it's highlighted,"
2193600,2197600," right? And if it's false, it's not, it's not highlighted. So, we can actually print something"
2197600,2204000," like this in here. Uh, otherwise, we can print something like, uh, like a dot. And at the end of"
2204000,2209440," the row, we just print a new line. So, that's how I would attempt to decode that. It's a pretty verbose"
2209440,2215520," way to decode all of that. Uh, maybe, um, I don't know, maybe it would be better to actually iterate"
2215520,2220080," it from a different order. So, you don't have to do these kind of nasty tricks, but we'll, we'll see,"
2220080,2224640," we'll see. So, let's actually take a look at the first, uh, first thing in here, at the first sort of"
2224640,2231200," character and see if it actually works. So, there we go. So, here's the zero. To be fair, to be fair, uh,"
2231200,2235120," instead of using dot, I would use space in here. So, it will make it a little bit more readable,"
2235120,2241440," I think. So, this is zero. This is what we get. Uh, okay. So, now, I would like to maybe even include"
2241440,2248000," something like a knob, because I want to have, like, an array size. Uh, but to be fair, how many,"
2248000,2253840," how many things do I have in here? So, can I just do, so, 11 words. Okay. So, I can say that this is 10."
2253840,2260400," Like, we know, um, you know, for a fact that this is 10, because we have 10 digits. Uh, maybe we can do"
2260400,2265360," something like digits count, uh, and it's going to be 10. So, and we can just reuse the syntax. So,"
2265360,2274000," this is a digits count. So, in here, I can just do, uh, something like size, uh, digits count plus plus i,"
2274000,2280880," and then I just print each individual digit. Maybe it would make sense to have an extra new line to"
2280880,2286400," separate, uh, between the digits. And, uh, do we get some? Yeah, there we go. So, here are the digits."
2286400,2293840," So, zero. Oh, they are reversed. That's actually very interesting. So, they are kind of in a reversed"
2293840,2302560," order. So, all right. So, let's actually fix that. Um, I suppose let's not reverse them. So, let's just use"
2302560,2309440," x here instead. Uh, all right. Okay. So, now, they are in a correct order. I'm really glad that I decided to,"
2309440,2315120," like, implement this sort of like a printer of the fonts. So, now, we know how to properly decode all"
2315120,2321840," of these things. So, we see the indices of the array reading. So, we did we exceed them? Uh, there's 11"
2321840,2332240," of them. Wait a freaking second. Um, all right. So, what if I put, yeah, um, let's call it not digits count,"
2332240,2339920," but more like a fonts count. Uh, font count. All right. So, in here, we're going to say it's going"
2339920,2349040," to be 11. So, ah, it's a colon. Another one is a, yeah, okay. So, it's a colon and it has an index 10,"
2349040,2351840," essentially, right, even though it overflows a little bit. But, yeah,"
2352480,2356320," it's pretty cool. Uh, we just implemented the parser of the font. All right."
2356320,2369360," So, that's, that's very nice. That is very nice. Uh, now, we can basically try to maybe query"
2370160,2375760," uh, the, the current system time. How do you even query the current system time? So, we need to take"
2375760,2384720," a look at the how suvun does that. So, let's take a look at suvun. Um, so, main.c. So, there is a sub"
2384720,2394000," command called clock and if, uh, it is enabled, we switch to the mod clock. All right. So, in the mod clock,"
2394000,2399840," okay, that's how we do that. That's pretty interesting. So, we get the local time and the local time"
2399840,2405200," gives us seconds, minutes, and hours. That's actually too fucking easy, honestly. The fuck?"
2405200,2412000," Okay. So, you, you get the time and then you do local time and that's basically the thing you have."
2412000,2416160," Okay. So, all right, all right, all right. All right, all right."
2416160,2429520," Um, okay. So, let me maybe remove that. So, and then I can just print all of these things. So, let's"
2429520,2439040," say d, d, d, d. Uh, and in here we can say, so, the first comes the hour, right? So, this is the hour,"
2439040,2447280," this is the minute, and this is the sex, the seconds, I mean. Uh, all right. So, let me actually see what"
2447280,2453040," we have and all that doesn't work because we probably have to include some scheisse. Uh, probably have to"
2453040,2457280," include at least time, right? So, I'm pretty sure about that we have to include the time."
2457280,2464960," Uh, okay. Oh, there we go. So, that finally we have time. So, it's 24:42 and if we take a look at the"
2464960,2473760," current time, 24:45, right? That's already moved on. Okay, that's pretty cool. Um, so, um, we can even do"
2473760,2480080," something like zero two. So, we can pad all of these things with zeros and, uh, there we go. So, this is the"
2480080,2488800," actual time that we have in the system. Um, so, now we can try to maybe render it with the font that you,"
2488800,2494400," that we have, right? So, we can try to render it with the font that we have. Um, so, that will be kind of"
2494400,2505360," interesting. Um, so, but the question is, the question is, uh, so, I suppose the amount of, um, of"
2505360,2516160," things, um, the amount of, we need to print it, like, we need to print the character by character. So,"
2516160,2524240," because we can kind of scanning from, uh, top to bottom and left to right. So, as we, uh, we"
2524240,2531520," know that the entirety, the width of the entirety of the clock, right? So, the width of the clock is kind"
2531520,2540320," of like, uh, columns count, right? Is it called columns count? Uh, font columns, right? So, so, it's a font"
2540320,2554080," columns, font columns multiplied by, so, two, two, two, six, uh, plus two. Six is the amount of digits in the clock,"
2554080,2559600," right? So, two, two, two, uh, two digits for hour, two digits for minutes, two digits for seconds,"
2559600,2567360," six, right? Plus two digits for columns, for two columns, right? So, it's basically plus two. Um,"
2567360,2573680," so, yeah, so, it's a six plus two. So, that's the entirety of the width of this entire thing. And the"
2573680,2583920," height, uh, the height is font rows. That's what we basically have. So, we take the time and"
2584560,2590960," what we can do now, we can just, like, scan, um, you know, top to bottom, left to right, right? And on"
2590960,2600320," each pixel, we can quite easily determine, quite easily determine, um, what digit it belongs to,"
2600320,2605200," sort of speak, if you know what I'm talking about. Like, what exact digit it belongs to. I think we can do"
2605200,2609920," that. All right, anyway, so, maybe it would make sense to actually keep it as int in here. All right,"
2609920,2615360," so, let's keep it as int. Uh, and let's go ahead and, uh, maybe iterate this entire thing. So,"
2615360,2621040," I'm going to start iterating it like so. Uh, I'm iterating height and then I'm iterating the width"
2621840,2633120," as well. Uh, so, yeah. So, we're going to be determining the actual, uh, the actual digits,"
2633120,2642720," the actual sort of slot, right, we belong to, um, through x. So, what we can do, right, so, is just do"
2642720,2654400," maybe divided by font columns, right? So, let me actually maybe draw what I mean in here,"
2654400,2660320," right, because it's kind of difficult to explain it with just words, right? You need to kind of show it,"
2660320,2669040," you need to kind of show it, uh, right. So, essentially, you have the first digits for hour,"
2669040,2676240," then you have the second digit for hour, then you have a digit for column, and so on and so forth,"
2676240,2685600," right, and so on and so forth. They have a fixed, uh, a fixed width, right? A fixed width. So, now,"
2685600,2690080," imagine you're just, like, iterating all the pixels from left to right and top to bottom,"
2690080,2697360," and then you're currently working with this pixel. How quickly can you determine, like, what slot this"
2697360,2706160," pixel belongs to? You can take its x and divide it by the size, like, by the size of this single thing."
2706240,2711200," So, what's going to be that size? Maybe, I want to call it width, uh, let's call it s, right? So,"
2711200,2716000," you divide it by s, and you actually do the integer division, and effectively, you get the index,"
2716000,2722720," right? You get the index of that slot, right? So, this is zero slot, one, two, three, four, and so on"
2722720,2727600," and so forth. So, that's, like, you render the pixel, you can quickly get the index of the slot you're"
2727600,2733440," currently in. Once you know the index of the slot, you kind of know what kind of slot it is, right? So,"
2733440,2740480," you know that zero is the most significant digit of hour, uh, one is the least significant digit of"
2740480,2749200," hour, right? Three is the colon, three is always the colon, uh, um, yeah. So, four is the most significant"
2749200,2754640," digit of, uh, minutes, and so on and so forth, right? So, through this formula, you can quickly"
2754640,2759280," identify the index, and through the index, you can quickly identify what kind of digits you need to"
2759280,2765040," actually print it. So, that's basically my idea, right? So, that I have in my head, but kind of"
2765040,2769200," difficult to explain with just words. You kind of need to show. You know what I'm talking about? You"
2769200,2775600," know what I'm talking about? I think you know what I'm talking about. Uh, alrighty. So, let's go ahead"
2775600,2782080," and try to do that. So, and the size of the width of this entire thing is basically font coms. What is a"
2782080,2788640," quine clock? A quine clock is an idea invented by, uh, Martin Klepper, and, uh, so this is basically"
2788640,2794240," how it looks like. Quine is a program that prints itself, uh, right? This program not only prints itself,"
2794240,2800720," it also acts like a clock. So, it's kind of an extension of a quine idea, which I find pretty cool."
2800720,2806400," It's implemented in JavaScript, and I decided to take a challenge to implement it in C for the answer"
2806400,2814880," terminal. That's basically what we did. Um, so yeah. That's badass. That's actually pretty cool. That's"
2814880,2823440," actually pretty cool. I really like this idea. Um, alright. Quine, but clock, but in C. Exactly. Okay."
2823440,2829120," Uh, shit looks hard. It is pretty hard, uh, which makes it actually kind of cool. So, it's actually a"
2829120,2835760," combination of, like, several tricks, uh, performed, like, sequentially in the chain, uh, right? So, we're"
2835760,2840800," already, uh, implemented a quine, right? So, I just refreshed how to implement quines. Now, I'm trying"
2840800,2846960," to implement a clock, and then I will try to combine these two ideas together, and we'll see how it will"
2846960,2852720," go. We'll see how it will go. Okay. So, um, I have this kind of thing. So, this is the index, and depending"
2852720,2865120," on the index, how can I even approach this entire thing? So, maybe I can actually pre-render all, like, I can have an"
2865120,2873280," array of digits. That is actually kind of cool idea. I think it is a pretty cool idea. So, let's call it"
2873280,2880880," digits, and this is going to be basically, I'm not sure if it's a good idea to call them digits, but whatever."
2880880,2888880," So, six plus two. This is the digits that we have in here. Uh, so, I get the current time. Okay, I get the"
2888880,2900640," current time, and now for digit zero, I can just get the hour, uh, right? And I can basically, uh,"
2900640,2909920," divide it by 10, right? So, divide it by 10, and this is what I get in here. Um, divided by 10. So, yeah, that's about it."
2909920,2917200," For this one, I actually have to do mod 10, right? So, this is going to be the mod 10. So, for two,"
2917200,2924400," I'm going to be using just 10. Here's the interesting thing. I'm basically filling these digits with the"
2924400,2930800," indices within the font. That's what I'm doing. I'm filling it within, with indices within the font."
2931360,2938800," So, actually, it makes it super easy to just repeat it like so. So, this becomes more like three, four,"
2938800,2946720," five. This is the minutes, and this is the minutes, and this is 10. And then, uh, right, so this is going"
2946720,2959840," to be six, um, seven, uh, second, and second. So, that makes it eight. So, this makes it eight, which is"
2959840,2968400," exactly that, right? So, the amount of digits here is actually eight. Um, honestly, I could actually just"
2968400,2979520," call it digit count, uh, digits, um, digits count, which is going to be eight. So, that means this"
2979520,2992640," becomes digits count. This becomes digits count, like so. And that's about it. So, now, now, uh, I can do"
2992640,2999920," digits i, and I know exactly the digits I'm talking about, and then I can actually query even further"
2999920,3007360," and get the actual bitmap for that specific digit. So, that's what I can do. That's actually pretty cool."
3007360,3014800," Uh, right. So, once I've got this bitmap, I have to actually query its bits, right? So, I need to"
3014800,3020560," determine whether that specific bit in there is filled in or not. And I can do that with this specific"
3020560,3026640," formula. Uh, right. So, I just apply this. This is actually kind of, kind of insane, not gonna lie."
3026640,3034000," Right. I can just use the same y, but the x has to be kind of different. x has to be within, like,"
3034000,3043200," from zero to three, right? So, that means I have to kind of do a mod of the font columns or something like"
3043200,3050000," that. And effectively, what I do in here, if this entire thing is true, I'm printing the star."
3051120,3056480," Right. So, I'm just printing this specific star. Otherwise, I'm printing nothing. So, basically,"
3056480,3061760," what I'm trying to do, I'm just trying to spell out the current time using the font."
3062880,3068080," And I forgot the new line, which is fine. Which is totally fine. So, we can actually do it like that."
3068080,3076720," Uh-huh. So, all right. So, that kind of worked. But they're stuck together, right? So, they're a little"
3076720,3085440," bit stuck together. So, because of that, uh, I feel like, I feel like the width, um, of this entire thing"
3085440,3091280," has to be a little bit like, um, digits padding, right? So, let's actually introduce a notion of"
3091280,3099920," digits padding, uh, right? So, define digits padding. And let's actually use one pixel for the digits padding."
3099920,3103840," And when we're determining the index, we're going to be divided not by the font's"
3103840,3111760," columns by plus digits padding, right? So, that's what we're going to be doing."
3111760,3118400," Um, interestingly, if x kind of overflows this entire thing. So,"
3118400,3125760," we need to factor out this specific x. I don't really know how to call this x, but I'm going to"
3125760,3137040," call it maybe dx, right? So, dx is actually mod of padding. This is also included. But that means that"
3137040,3144800," dx may become bigger than the font columns, which will overflow the fonts, which will overflow the fonts."
3144800,3151120," So, that means first of all, we need to also check that dx is less than fonts column."
3151120,3157920," Something like this. So, that's basically what I have in here. There we go."
3157920,3167520," So, we can actually maybe even use like a hash in here. So, yeah, that's much better. Look at that."
3167520,3172720," Look at that time. Look at that freaking time. Isn't that poggers? I think that's pretty freaking poggers."
3173440,3177840," So, what's cool about this code is that we are actually rendering that in one pass,"
3177840,3182320," right? And we don't use any intermediate like a memory or anything like that, right? It's not like"
3182320,3187520," we have an array into which we are rendering all of that first. No, no, we're just iterating each"
3187520,3194160," individual pixel once in one single pass and we render it as we go, right? So, that's what makes it even"
3194160,3201920," cooler. All right. So, one thing we can do in here is that now we can even control the padding. So, for"
3201920,3207120," example, if I don't like that the padding is one, I can increase it, right? So, I can make it a little"
3207120,3212400," bigger. To be fair, like a bigger padding looks much better, honestly. It actually kind of looks much"
3212400,3223680," better. So, what's interesting is that we can use the same characters in here, right? And it would turn"
3223680,3231360," it into like a single blob. But now, for a filled-in pixel, we can actually try to use the"
3231360,3237840," like an answer terminal codes, right? But I don't remember the answer terminal codes and stuff like"
3237840,3248640," that. So, let's actually go to ChatGPT. All right, so. So, DAG.GO, by the way, has a built-in ChatGPT,"
3248640,3253920," if you guys didn't know. Like, I don't have access to like an OpenAI ChatGPT, so that's why I'm using"
3253920,3266000," like a loophole and stuff like that. So, let's use a dark theme. Print yellow text in C using ANSI terminal"
3267840,3280160," escape codes. Okay. Okay, so that's basically what I want. Thank you so much. Thank you, kind sir."
3280160,3290080," All right. So, yeah, this is what we have. And now, yeah, essentially, we can just do that. So,"
3290080,3296000," I'm going to assume that the last code basically disables, right, resets it back, hopefully. I hope"
3296000,3304000," it didn't configurate some bushice, but the idea here is that hopefully it will print it with a"
3304000,3310000," different color. Yeah, okay. So, the new line. So, let's get rid of the new line now. Yeah, there we go."
3310000,3322640," So, that's basically what I'm trying to do. So, how to do red color? How to do red color? All right. So,"
3323600,3334480," red color is this thing. Uh-huh, uh-huh. So, this is a red color. So, it's basically 31. Okay. So,"
3334480,3340480," I might as well just do something like this. So, 33 and this is a 31. So, because I think red color,"
3340480,3347280," yeah, red color is a little bit easier to read in here. Full block Unicode? Maybe. Let's actually put a full"
3347280,3355280," block Unicode. Maybe it will look a little bit better. So, this one. All right. So, let me quickly copy-paste"
3356960,3372160," this entire thing. Not bad. Not bad at all. So, the next step is probably going to be basically"
3372160,3379440," playing it as an animation, if you know what I'm talking about, right? So, we need to sort of continuously"
3379440,3387760," refresh this entire thing. So, let me see. Let me see. So, yeah. We can just do an infinite loop,"
3387760,3393680," like so. We probably don't need this kind of thing anymore. All right. So, this is just an infinite loop."
3394560,3407280," And on each step. So, where I remember that I was doing the refreshing in the, how is it called?"
3407280,3417280," Game of life. Right. So, let me see. Goal. I forgot. How was it called?"
3420640,3427200," So, I just need... I could have asked ChatGPT, but I don't really know how exactly explain what I mean."
3427200,3435360," It's just easier for me to grab that thing. So, this is not articles. It's just easier to go"
3435360,3441520," to grab that thing that I was doing recently. Yeah. Game of life. So, but if I go to how it was called,"
3441520,3445680," it was it called Goal.c? I think it was called Goal.c or something like Goal."
3447040,3456160," Or GitHub. Rgoal trying to reverse Nixgoal. What was it called? What was it called?"
3456160,3462000," I forgot how it was called. And why is it not in the recent repos?"
3462000,3472080," Conwayed. Oh my god. Like, okay. So, it was not called Goal. It was called Conway. God freaking"
3472080,3478000," damn it. All right. All right. So, Conway. The funniest part is that Conway, John Conway actually"
3478000,3484720," hated that he became known for Game of life because he thinks that it's not the most impressive thing"
3484720,3493760," that he, you know, did. So, it was kind of funny. I'm really sorry, John. But anyway. So, this is the"
3493760,3500880," original one. And so, what I need in here is just like escape codes that, yeah, go back. Yeah. So,"
3500880,3508160," they just go back. They go to the left and up to the size of the sort of like a scene that they're"
3508160,3514720," rendering. So, and we're going to be doing that on each iteration in here. So, this is going to be"
3514720,3524640," rows is H and this is, you know, W. All of that is integers. We also need to sleep a little bit in here."
3524640,3534560," So, we're going to be doing you sleep. Man, you sleep. Man, you sleep. So, this is, what does it use?"
3534560,3542560," Microseconds. I don't quite remember. So, yeah, it is using microseconds. Use sleep. So, microsecond is"
3542560,3549840," actually one million, one millionth of a second. So, this is going to be one second in here. So,"
3549840,3554640," we can just use sleep in this case then. Right. So, since it's a clock, it needs to be updated only one"
3554640,3561760," second, once per second. Right. So, let's actually take a look. Sleep. Yeah. No, this is a command."
3561760,3569760," It's a command line command. Slip three. Yeah, this one. So, let's actually do unistd. So, this is a"
3569760,3578960," unistd and let's put it in here. Okay. So, I don't want to run it within Emacs because Emacs is a horrible"
3578960,3586800," terminal. It is a horrible terminal. Let's not do that. Right. So, let's remove all of that stuff in here"
3587360,3598880," and let's go somewhere here. All right. So, it's the clock. Now, we've got a clock. We've got an actual"
3598880,3608640," clock. Okay. So, we've got some subs. Thank you so much, Dr. Falcon, for gifting five community subs."
3608640,3616720," Unshay, thank you so much for tier one with a message. GG indeed. GG indeed, mate. So, that's"
3616720,3622800," pretty cool. We've got quine. We've got clock. So, the next step is to basically combine them together"
3622800,3631360," somehow. Right. So, essentially, what we can do as we print characters, like we here, we just print the"
3631360,3640080," full unicode blocks. But what if instead of these full unicode blocks, we would actually take the"
3640080,3651120," characters out of that src blob that we were interpreting. Right. So, I think it's relatively"
3651120,3658720," straightforward to combine this thing with basically this thing. It's just like now we have to do the same"
3658720,3665920," thing on top of that. Right. So, that's what we have to do. We just have to do this thing on top of that,"
3665920,3672720," if that makes any sense. So, and the main difficulty here is going to be, like, how do you format it nicely"
3672720,3682320," or something? How do you even format it nicely? Anyways. So, yeah. But I'm already streaming for one hour"
3682320,3688000," and I'm a little bit tired. So, I'd like to make a little bit of a break. All right. So, and, you know,"
3688000,3693200," make a cup of tea. And after the break, we're going to try to combine these two ideas together and see"
3693200,3702640," what we can do. Right. Okay. So, how can we combine these two programs? Right. So, we have a quine that is"
3702640,3710400," capable of printing itself. So, here we just have an interpreter. And also, we have a clock that actually, you know,"
3712320,3722400," which is kind of cool. So, what I'm thinking is we are going to combine the loop that interprets this"
3722400,3733440," blob, this quine blob, and the loop that renders a single frame of the, a single frame of the clock."
3734000,3741040," Right. So, we're going to combine them together somehow. Right. And we'll see how it goes. I actually"
3741040,3747280," want to maybe create even a separate, completely separate thing. So, let's actually call it clock.c."
3747280,3757680," Right. And in the build, I'm going to just like add another line for an executable. So, this is clock."
3758320,3768240," All right. So, in the clock, to be fair, I think I'm going to just copy quine in its entirety, like so."
3768240,3773520," Right. And let's just reveal this entire stuff and see how it goes. Okay. So, that seems to be,"
3773520,3782720," that seems to be working. Now, for the clock, I think it also makes sense in the clock to remove"
3782720,3787920," print font char because I don't think it's needed anymore. Right. So, it's kind of redundant. So,"
3787920,3794080," if you rebuild this entire thing, so clock is still working. Okay. So, let's actually start combining"
3794080,3802320," these things. So, we need to add this stuff in here. Right. So, we already have stdio, we'll need time,"
3802320,3810880," uni std, and so on and so forth. So, now we also have to have the font stuff. Let's bring it in here as well."
3811840,3818560," So, this font stuff. So, to be fair, majority of the stuff probably will be inlined completely. To be"
3818560,3829120," fair, maybe the entire font in here... So, we refer to font only once. So, that means it can be quite"
3829120,3836640," easily inlined, like quite easily inlined. So, I don't think it's that difficult to do. We'll see. We'll see."
3837280,3843280," Also, a lot of stuff. There's so much room for actually obfuscating this entire stuff. It's insane,"
3843280,3851440," honestly. It is honestly insane, but we'll see. We'll see how it goes. Okay. So, I think I want to kind of"
3851440,3861040," replace some of this stuff in here. I want to call this a display width and display height. Yeah. Right. So,"
3861040,3869920," this is going to define display width. And this one is going to be display height. Because that's what it"
3869920,3877920," is. Right. So, it's a single display. Display height. So, this is going to be font rows. Let's try to now"
3877920,3890400," rebuild this entire thing. So, it complains. Yeah. Display height. And the other thing is display width. And it seems to be compiling. Okay. So, display"
3890400,3899360," height. Display width. All right. So, let me double check if the clock still work. Okay. So, that seems to"
3899360,3911600," be working. That's pretty cool. Uh-huh. So, we have this entire stuff. I'm gonna maybe refresh it a little bit, like so."
3912160,3922720," Okay. Okay. So, now, this is the single iteration. So, I suppose we need to have this infinite loop that"
3922720,3929760," prints this whole thing over and over again. Right. So, here is the single printing of the source code."
3929760,3942000," As already said, we have to print it over and over again. Uh, which makes sense. Sure. So, the next thing, we're getting the time and we're preparing the digits. Uh, getting the time and"
3942000,3948160," preparing the digits. That makes sense as well. So, and afterwards, we're doing something interesting. We're just"
3948160,3956160," iterating each individual pixel of the display. So, that's what we're doing. It's iterating each individual pixel of the display."
3957440,3968720," But, but, but, but, but, but, but, uh, here we are iterating"
3968720,3981920," these things. So, I feel like we need to maintain x and y separately from this loop. Right. So, here we're"
3981920,3988080," directly iterating the pixels, x and y pixels. So, that's what we're doing. We're just directly"
3988080,3995920," iterating them. Uh, but here, as we iterate characters of that blob that we're interpreting,"
3995920,4003040," we're going to be modifying x and y. So, essentially, if you encounter a new line as you try to interpret this"
4003040,4010480," entire stuff, we're going to be, uh, incrementing y and resetting x to zero. So, that's what I think"
4010480,4014400," we're going to be doing. That's what I think we're going to be doing. I think it's kind of cool, actually."
4014400,4023120," All right. So, uh, initially, both of these things are going to be, uh, zero. Right. So, both of them are zero."
4023840,4030720," Um, now, I feel like I kind of want to switch to switch case. Right. So, let's actually do this switch case."
4030720,4040640," Uh, right. So, that means in here we have, like, a case 63. Not even 69. Absolutely fucking disgusting, mate."
4040640,4048480," Absolutely fucking disgusting. Uh, all right. So, this is that and this one is going to be just break. Okay."
4049440,4057360," So, and here we have the default and this is just that. Cool. And then we close this entire stuff."
4057360,4066640," So, now, the next thing. If we encounter a new line, if we encounter a new line, um, I suppose"
4066640,4072400," what we're going to be doing, we're going to be incrementing y but also resetting x to zero."
4072400,4078800," That's what we're going to be doing. Incrementing y and resetting x to zero."
4078800,4084000," If we're just printing something else, uh, to be fair, yeah. So, we also have to say that we're"
4084000,4089360," printing a new line, right? Because that's, that's not what it is. Uh, if we encounter something else,"
4089360,4100080," we're incrementing x. Right. We're just incrementing x. And when we're printing the entirety of the source code,"
4100080,4108080," we're always incrementing x. So, that's what we're doing. All right. And that"
4108080,4113360," honestly, honestly, honestly, just gives us,"
4113360,4120160," yeah, it just gives us the character."
4120160,4129520," What I'm thinking, what I'm thinking. So, here we just print this kind of stuff. So,"
4129520,4131440," we print several of these characters."
4131440,4144000," We need to be able to, at any point, and this one is actually very interesting. So,"
4144000,4148880," since here we're printing several characters, right? We're printing several characters."
4149840,4157200," Why 63? Because it's a, it's an ASCII code of question mark. In question mark, it's a special command that we're"
4157200,4165600," interpreting in our mini embedded language for, for the Hawaiian. So, yeah, that's what it is. It's an ASCII code."
4166320,4173920," So, this is not correct, by the way. This is not correct. Because here we're printing two characters."
4173920,4177680," And here we're also printing two characters. And here we're also printing two characters."
4177680,4188640," So, effectively, we have to actually kind of update X sort of like two times. Like every time we"
4188640,4198320," print the special characters. That's what we have to do in here. So, if it's a special character of some"
4198320,4205200," sort, it's going to be X plus two, rather than X plus one. Because again, we're printing two characters"
4205200,4213680," in here instead of one. And if we don't print a special character in here, we just do X plus one."
4213680,4219760," Now, like so. So, that's basically what we're doing here."
4222640,4232080," But interestingly, so, can we even maybe split all of that into printing a single character in a sense that"
4232080,4246160," we're gonna do X plus one twice. So, this is the second character that we're trying to sort of print."
4246160,4251040," And this is a little bit annoying, right? So, I can split it like that"
4252480,4257120," like so and like so. And this is sort of the second thing. So, this is what I want to do."
4257120,4264160," I want to bring all of the printfs to the sort of form, where they print only a single character."
4264160,4268160," By the way, do we have a function that prints just a single character to the standard output? Like"
4268160,4274480," pootsy. Ootsy pootsy. So, there is a put char. So, this is probably what we're going to be using,"
4274480,4282320," like once I actually transform all everything in here. We're going to be using print char. So, I'm going to just"
4282320,4288080," grab this entire thing. I'm going to just put printf and add a printf in here like so."
4288080,4294160," And then I'm going to duplicate this entire thing and boom. All right. So, this is what I want to do in"
4294160,4302320," here. So, as you can see, now we have printfs all over the place. Printfs all over the place."
4303600,4314800," So, I'm thinking, can I now query replace all of the printfs to put char? So, query replace printf put char."
4314800,4323360," Boom, boom, boom, boom. I want you in my room. Let's spend the night together, together in my room."
4324640,4331120," So, we've got some subs with some messages. Thank you so much, Red Santar for the message."
4331120,4337280," I finished yesterday your word about essence OS. You say that at some point you would like to make"
4337280,4344400," your own OS. How would it be POSIX with GUI? Like your content? I like your content a lot. Thank you."
4344400,4354880," So, I'm thinking about non-POSIX but with GUI, right? So, it's going to be Terry Davis arc, basically."
4354880,4362160," So, because POSIX is just like, I mean, it's kind of, you know, it's boring. Like everyone knows POSIX."
4362880,4367120," I've already said I would like to have an opportunity to just experiment."
4367120,4373360," What exactly is it going to be? I'm not quite sure. So, I haven't decided yet. But it's definitely not"
4373360,4379680," going to be POSIX primary, so to speak. So, maybe it's going to have like a POSIX compatibility layer,"
4379680,4386000," like in essence OS, but the core is not going to be POSIX, right? Unix-like? Probably not Unix-like."
4386000,4390320," Because, like, I want to experiment with some things. Like, what's the point of"
4391120,4397440," making your operating system if you're going to just recreate the same mess, software mess that we"
4397440,4403360," had for decades? Actually, for more than half of a century, right? So, because I'm pretty sure Unix is"
4403360,4409120," like more than half of a century old. So, what's the point of recreating that? So, since we're doing"
4409120,4415120," recreational programming, it only makes sense to just make fun, to have fun, to make fun, to make fun."
4416480,4422560," Right. So, yeah. That's basically my idea. So, thank you. Thank you so much for the Twitch point."
4422560,4432000," Okay. So, here I need to go through all the put chars, and I need to replace the double quotes with"
4432000,4437040," single quotes. But I'm pretty sure the compiler will just tell me all the places where I have to do that."
4437040,4444320," Okay. So, that's pretty cool. Right. So, I can just do it like that. And the reason why I want to"
4444320,4454240," actually update this thing separately, because at any moment, right, in here, I want to take x and y,"
4454240,4462080," and I want it to ask, should it be colored differently or not? Or maybe I can even factor"
4462080,4468320," out printing a character to a separate function. That sounds like a cool idea, honestly. That sounds"
4468320,4476880," like a cool idea. Just factor it out into a separate function where you make the decision."
4478080,4485680," All right. So, okay. So, a variable usually is not used. That's understandable. That's fully"
4485680,4490880," understandable. Okay. So, I need some sort of a function. All right. I don't really know how to"
4490880,4496560," call this function. I'm going to call it full. So, what I'm thinking is that it's going to accept x and y,"
4496560,4503040," and maybe it's also going to accept the current time. Right. So, let's say that it's going to accept the"
4503040,4512400," dtm thingy. And it's going to also accept the character that it wants to print. Right. So, it's going"
4512400,4519440," to be ch, so to speak. And this thing is going to render the pixel. Right. So, let's call it a render."
4519440,4527600," Maybe we're going to go pixel. Right. So, this is basically the pixel. It's going to contain this sort of"
4527600,4535680," logic. Right. So, we have x and yeah, we have also... Do we have y? Not really sure about that, but whatever."
4535680,4542960," Okay. So, let's copy paste this entire logic in here. So, interestingly, interestingly..."
4542960,4551040," Yeah. So, here's the character. So, we're just printing this character like so. We're just printing this"
4551040,4560240," character and we're just printing this character like so. What I want to do is also filter out"
4560240,4567200," situation when y is greater than the amount of rows. Right. Because it's going to overflow basically."
4567200,4574720," So, essentially, y has to be within font rows and the x has to be within font columns. And then this"
4574720,4580480," thing has to be that. Otherwise, just print it as it is. Right. So, and that thing hopefully is going to"
4581120,4589440," just print the current character, the current pixel with the corresponding color and the time and stuff"
4589440,4597120," like that. So, we'll see how it goes. So, it's not going to be formatted properly, but it's going to try to"
4597120,4605600," resemble the clock. Right. So, it's going to try to resemble the clock. Okay. Let me try to do the following"
4605600,4613680," thing. So, we have nine of these things. So, this is a pixel. Then we do x, y, t, m. Right. For each of"
4613680,4621040," these things, we're doing that. That logic. We're combining all of that stuff together. So, now I'm"
4621040,4632160," gonna... So, we probably want to put the digits in here. Honestly, I think we should be accepting digits as a"
4632160,4637520," parameter in here instead of the tm. I think that makes more sense, because that means I'm"
4637520,4641760," recomputing the digits every time, which is not particularly convenient. Right. So, this is a"
4641760,4650160," digits count. And I'm gonna move that stuff somewhere here. Right. So, that's what we have in here."
4652400,4664240," So, let me find the pixels. Let me find the pixels. So, there's nine of them. So, this is digits."
4664240,4669840," All right. That's pretty cool. So, let's try to compile this. Okay. It compiled first try."
4669840,4675120," Interesting. Interesting. Interesting. Interesting. Interesting. So, now we need to kind of recompute the blob."
4678000,4685120," That's what we need to do. So, the main problem in here is that what is it going to do? Here's the thing."
4685120,4693040," What is it going to do? It is going to literally print the entirety of the source code. And it's going to"
4693040,4701440," try to render a clock on top of the source code. And if there's not enough place to the right or to the bottom,"
4701440,4708400," it's going to cut off the clock. So, imagine clock rendered on top of the source code. So, but you're"
4708400,4713360," not going to see anything to the right in here. So, as you can see, there is not enough place in here."
4713360,4718640," And also, this is a pretty huge source code, honestly. So, what I'm thinking is that maybe I'm going to"
4718640,4724400," kind of limit it a little bit. Right. So, let's say that I'm going to only print"
4725520,4732640," if y is less than font rows. Right. For now, it's not going to print the entirety of the center. I think"
4732640,4738720," it's going to just cut it out so we can at least see if it's working or not. Right. So, that's basically"
4738720,4745600," the idea, if you know what I'm talking about. Okay. So, let me try to do it like that. And now, we need to"
4745600,4754880," recompile the blob sort of speak. We need to recompile the blob. So, let me take the temporary thing and"
4754880,4760640," I'm going to re-copy-paste this entire stuff. So, I'm going to re-replace and I'm going to replace all of the"
4760640,4769840," backslashes in here. Right. So, backslash is double backslash now. To be fair, let's get rid of the"
4769840,4774480," comments. I think comments are not particularly great in here. So, I think they're going to be"
4775600,4782880," actually interfering with what I'm doing. Let's recompile one more time just to make sure that I"
4782880,4790320," didn't make any mistakes. Could we replace backslashes with double backslashes? Makes sense. Okay."
4790320,4798720," So, could we replace now new lines with slash ends? Boom. So, that's now the blob that we have in here."
4798720,4806320," It's a pretty huge blob. Not gonna lie. So, and let's replace double quotes with slash backslash double"
4806320,4817680," quotes. Like so. That's our blob. Okay. So, that's a pretty huge blob. Yeah. But again, so this is a very"
4817680,4823040," first like naive implementation. Right. So, we'll just see how it goes. We'll just see how it goes."
4824320,4829200," Okay. So, I'm gonna try to recompile this entire thing. It seems to be compiling. So, I can try to"
4829200,4838240," do clock now. Do I even have it clock? Okay. So, there is... I see what's going on. I see what's going on."
4838240,4847840," Okay. So, we are not resetting the view. So, this is one of the things I forgot to do in here. We're not"
4847840,4855520," resetting the view. So, after we rendered everything in here, I suppose what we have to do, we have to do this"
4855520,4864640," thing. I also have to sleep a little bit, but that's fine. All right. So, but I feel like what we have to do"
4865360,4878480," is... Yeah. We have to use y and x. So, because we are updating x and y as we go, so we don't really"
4878480,4883040," know up front like how much we have to move. Right. So, we have to reuse these sort of things."
4883040,4888640," All right. So, I guess that makes sense. I guess that makes sense. Okay. So, I'll try to recompile this"
4888640,4896880," into everything and let's go. Okay. Do you guys see that? Do you guys see that?"
4896880,4905600," So, there is half like a little bit of a zero and a little bit of one and this is the spaces and stuff"
4905600,4911920," like that. Right. And this is ours because that's why it doesn't really move. It's a zero one colon."
4911920,4916800," Right. So, you see what I'm talking about? Right. So, you see the direction I'm trying to move to."
4917920,4927600," So, the thing we need to do now effectively is to just format it around a little bit so it looks nice"
4927600,4937680," and everything. I don't freaking know. And we have to keep recompiling the blob until we get something"
4937680,4943280," that sort of resembles this entire thing. I don't really know how it's going to go. But I suppose these"
4943280,4950160," things are out of the window right away. But to be fair, I would like to first commit whatever we have"
4950160,4956800," because by itself, it's already kind of a working idea, working example. It's just like now you need"
4956800,4963680," to reshape the code. So, yeah, I have a pretty clear path. It's actually a pretty clear path. So, all the"
4963680,4970000," pieces kind of went together and it's more like, you know, tweaking around. So, before I go into that,"
4970000,4974400," I think I want to do a commit, right, because I don't want to lose the current work because it's"
4974400,4980240," already kind of working. So, I'm going to do git init. Right. Let's initialize this entire thing."
4980240,4985520," And I would like to git ignore some things in here. Right. Let me see what I need to git ignore."
4985520,4994880," To be fair, you know what, let's actually remove all of these executables that we created. Right."
4994880,5000240," So, let's remove all of them. In a knob, we're going to create a build folder."
5000240,5011120," Knob.h makedir if not exists. Right. So, let's create the build folder. So, this is the build folder."
5011120,5022240," If not, right, return 1. And in here, we're going to just say, okay, build that into that. All right."
5022240,5030240," So, if I try to now knob this entire stuff, right, it creates the separate folder. And as you can see,"
5030240,5038240," there's a nice build folder in here where it put all of the executables. All right. So, now, in git ignore,"
5038240,5043760," I can just say, okay, ignore build folder. That's it. I don't have to worry about it."
5043760,5051360," So, another thing we probably have to ignore is knob and knob.old. All right. And that's about it."
5051360,5060640," So, coin2 is not really needed in here. So, I'm ready to commit all of that stuff. Ready, set, go."
5060640,5066160," All right. So, now, I'm not going to lose any of the progress because I'm going to be actually doing"
5066160,5072000," pretty destructive actions in here. The first action I would like to probably do. So, let's get"
5072000,5078960," rid of this blob. I'm going to recompile it a little bit later. So, I want to try to get rid of these"
5078960,5085200," things. All right. So, you know, includes and stuff like that. I don't think they're particularly useful."
5085840,5092160," So, let's try to, yeah. Okay. So, it doesn't know about print tab, which is understandable."
5092160,5098480," So, but it's just implicit. It doesn't really matter. So, size t. Okay. So, this could be just int."
5098480,5106080," It doesn't matter. So, let's try to recompile. Are there any errors? I'm specifically looking for the"
5106080,5111840," errors. Okay. Time t. So, let me try to do the following thing. So, if I take a look at the time"
5111840,5120240," function, time t. What is a time t? Do we have the definition for the time t? I suppose the time t"
5120240,5127280," is more like an integer. Right. It's more like an integer. Let me see. So, is there... So, I can"
5127280,5135520," probably do rg. Vingrep. Time t. And maybe it's a type def of some sort. Can I do something like that?"
5135520,5142960," Will it find that thing? Okay. So, we almost found it. The time t. So, this is sndsec."
5142960,5154320," Which one is that though? Which one is that though? I don't really know. So, maybe it's a time t. So,"
5155840,5163440," all right. So, but what is that thing then? What is that? It's not really well known. Though we can try"
5163440,5173680," to actually search for that thing as well. Time t. All right. So, okay. Cool. So, maybe I can just try to"
5173680,5183280," say, okay, it's an integer then. It's an integer. All right. So, let's do nob. All right. So, what kind of errors"
5183280,5193920," we have in here? Error null. It doesn't like null. Okay. Let's say it's zero. Error. Okay. We need"
5193920,5201040," the definition of struct tm. All right. So, maybe that's compiler defined. Yeah, probably. Probably it's"
5201040,5206720," compiler defined. Struct tm. It feels like we still need to include time. All right. So, but maybe we can"
5206720,5214560," include it somewhere down there. I'm freaking wrong. So, and now it compounds. So, the problem here is that"
5214560,5227040," like we need to include that freaking time. One of the things we can do in here. We can also"
5227040,5235680," substitute font count everywhere it's needed. To be fair, it's not needed anywhere. So, we can just put it in"
5235680,5243600," here like this. So, we can just inline all of these things. We can just inline all of them. Let's go ahead"
5243600,5254880," and do that. So, we can do that. So, we replace that with five. Boom. Cool. Remove that. We replace that with"
5254880,5267600," three. Boom. Remove that. We replace that with eight. Boom. Cool. So, digits count. Yeah, we just"
5267600,5281360," get rid of that. Digits padding. All right. We replace that with two. Bam. So, this one is interesting. So, this is"
5281360,5292080," basically five. It's 80, right? Five times eight. Yeah, it's 80. I do remember that. Right. So, it's 80. All right. So,"
5292080,5301520," we replace that with 80. Actually, yeah, it's not even used that much. Honestly, that's pretty funny."
5301520,5306800," And display height. Is it used anywhere? We don't even use any of that. That's pretty surprising."
5306800,5313680," So, we can just remove all of that stuff then. Okay. That's pretty cool. If I now just recompile this"
5313680,5322000," entire... It seems to be compiling. That's pretty cool. Yeah. So, what do we do in here?"
5322080,5329200," What do we do in here? What do we do in here? Can we simplify some of that stuff?"
5329200,5342400," Honestly, maybe we can actually compress a lot of this stuff in here. I think we can. I think we can"
5342400,5352880," compress quite a lot of this stuff in here by simply doing case. Yeah, let's actually copy all of these things."
5352880,5364960," That, that, and that. Right. So, essentially, if you encounter any of these things, we"
5366080,5375840," do that stuff. But afterwards, after you fold through, we do that. Okay. So, that enables us to get rid of this"
5375840,5382800," entire thing effectively. Uh-huh. All right. That actually simplifies the whole interpreter quite,"
5382800,5391120," quite nicely. Uh, as you can see. Is that cool? I think it's pretty cool. Uh, I think it's pretty cool."
5391120,5399760," Uh, so, yeah, that's actually, yeah, at some point, I think it's gonna, it's gonna be pretty nice."
5399760,5407440," So, I'm thinking how, how are we gonna be approaching this thing? But, yeah, it's not that big of a deal."
5408080,5413040," All right. So, let me try to compile this entire thing. Is it compiled? So, it doesn't like something."
5413040,5420480," Oh, there's no errors in here. Yeah. So, what's the error? Uh, the actual error expected declaration."
5420480,5426640," Okay. So, I fucked up something. Uh, so, what exactly did I fuck up? Uh-huh. I see what I fuck up."
5426640,5432080," All right. So, that's, that's fine. So, there's no error in here anywhere. That's pretty cool. That's"
5432080,5437760," pretty cool. So, I'm just thinking what else do we, do we need in here? So, if it's in your line,"
5437760,5444960," you're just doing the line, blah, blah, blah, blah, blah, blah. Okay. So, let's try to, um,"
5444960,5451040," maybe do the following thing. Like so. Yeah."
5451040,5463920," Something like this. A little bit of obfuscation of our nation. All right. Cool, cool, cool. So, that's"
5463920,5471120," already kind of interesting, right? So, you can already, um, probably see something in here"
5471120,5482080," if you try hard enough. So, yeah. That's already a pretty good canvas, if you ask me. Um, so, now,"
5482080,5490240," let me compile the blob. Let me quickly compile the blob. Mm-hmm. So, I'm gonna just put this blob in here,"
5490240,5496320," and I'm gonna query replace backslashes with, actually, yeah, backslashes with double backslashes."
5496320,5506320," Boom. Query replace new lines with slash ends. Uh-huh. Query replace quotes with escaped quotes. Boom."
5506320,5513440," So, that's a blob. It's actually already a smaller blob, which I really like. Okay. That's pretty cool."
5514240,5519760," Uh, all right, all right, all right. So, let's try to compile this entire thing. All right. It seems to be"
5519760,5533280," compiling clock. Um, so, it's a build clock. Segmentation for 45. All right. So, um, okay. So, that's,"
5533280,5537040," that's pretty cool. Uh, that's pretty cool. That's pretty cool. That's pretty cool. Didn't expect that,"
5537040,5546800," honestly. That's the last thing I expected in here. Uh-huh. I wonder what exactly. So, it's probably"
5546800,5557520," something, mm-hmm, mm-hmm. Uh, that's professional C experience. Yeah, exactly. So, what did I,"
5558480,5568960," what the fuck did I do? How did we end up like this? Mm-hmm. So, it's gonna be x plus one. That's one of these."
5568960,5579200," Let's do a gdb. Let's do a gdb. Um, no, let's see. Um, so, let's just add"
5581280,5590320," uh, gdb and, uh, let's recompile this entire thing. And I'm going to just do clock gdb. Let's just"
5590320,5598400," run it and let it at least see where exactly. Okay. So, that's pretty cool. Um, it's sec faulted at"
5598400,5604720," digits, which doesn't really make any freaking sense. Um, so, what's up with that?"
5608800,5625840," So, huh? Hmm, 14. Did I do a fucky walking? Oh, I actually, okay. Uh, I actually updated the"
5625840,5630720," entirety of the source code. I need to recompile the blob again. Uh, right. So, I need to recompile the blob"
5630720,5638720," again. But to be fair, what if I just, like, use this thing? All right. I just use, not compile,"
5638720,5645840," cloud blob, build, clock. Uh, right. Is it gonna sec fault? Yeah, it's still sec faults, which is,"
5645840,5656160," which is perfect. Okay. Um, one more time, just in case. Um, gdb, build, knob, uh, clock, run."
5656160,5661600," Yeah, it's, it's bizarre. Why is it sec faulting?"
5662640,5673920," Um, is that because, uh, it's not, uh, it's not, uh, I think I might be knowing why."
5673920,5681840," I think I know why. Because integer might be of a different size than the time team."
5684800,5687920," Oh, yeah. Local time files. Yeah, that's probably why. So,"
5687920,5695760," so something about that. Uh-huh."
5695760,5698720," Yeah."
5698720,5707360," Okay, that, that explains it. I think that explains it. So,"
5709440,5715680," all right, all right, all right, all right. So, that's pretty cool. Um, so, let me see. So,"
5715680,5720800," you do need the, like, this goddamn, like, time definition. I really hate that you need that."
5722000,5726080," It's kind of, it's kind of an ass, honestly. It's kind of an ass, because it doesn't allow me to do"
5726080,5733440," this kind of shit, right? So, I can't just do that. Or can I? Yeah, I can't do that. Um,"
5733440,5740640," so, where's the error? Uh, initializer. Yeah, so, it's just like, it requires you to, to be like that,"
5740640,5747200," which is absolutely annoying, honestly. In all honesty, it's kind of annoying, but it is what it is,"
5747200,5753200," and it isn't what it isn't. So, I don't think there is much we can do about it, except maybe"
5753200,5766320," completely moving this entire stuff somewhere, like, down there. Or, you know what, um, just move this"
5766320,5775760," thing up there, and render one, um, pixel down effectively, or just, like, render one pixel down."
5775760,5780000," So, and that's about it. I think that's the easiest way to, to approach that."
5780000,5785760," So, and the rest of the stuff, you just, like, format it however you want."
5785760,5791600," That makes sense to me, I think. I think that makes sense to me. But, but for now, just to be able to see"
5791600,5797520," some stuff, I'm, I'm going to be actually putting that in here. Anyways, uh, let's try to recompile the"
5797520,5802720," blob. Uh, let's try to recompile the blob. Uh, so, let's recompile the whole thing, just to make sure"
5802720,5809680," that it's doing something, uh, right. Uh, but to be fair, like, whatever I have already, right now, is already"
5809680,5817520," pretty good success. I didn't expect that I will be able to do that. Um, tabdef underscore, like, this is"
5817520,5824640," okay, but I also need the definition of struct tm. So, it's not about even time t, it's also the"
5824640,5832960," definition of this thing. So, you kind of need that, unfortunately. Um, this is what it is. Um, but anyway,"
5832960,5840400," it doesn't really matter. So, where is the blob? Yeah, so, here's the blob, and I'm going to query"
5840400,5848400," replace, uh, this kind of stuff. Maybe I can just do it like that. Boom, query replace the new line, boom,"
5848400,5857680," query replace the quotes, boom. Oh, right. It's a pretty beefy blob. Uh, I'm going to put that stuff in here."
5857680,5862400," Okay, so, does it compile? Seems to be compiling. All right, so now, if I try to run..."
5862400,5872400," Fuck me! All right, so, and it was not there, though. All right, so, let's do gdb. Let's try to run it."
5872400,5879280," Okay, okay, so now we kind of know where exactly it fails. We kind of know where exactly it fails."
5879280,5889520," Uh, so, something about the digits i and everything. So, can I just print i?"
5890640,5899120," So, okay, that makes sense. Uh, digits i? Uh, if I print digits i, it should probably give me..."
5899120,5901760," Okay, so, I see what's going on. So, digits..."
5901760,5908480," Uh-huh. And when we actually printing..."
5917120,5925200," So, that's bizarre. Uh, maybe try long... Why are you so fixated? Okay, it's just chat being chat. Like,"
5925200,5933120," we had in the previous working version, I think, with time t. Like, it's just like the only reason why"
5933120,5939600," you're suggesting that is because you wasn't watching carefully. It's absolutely not helpful."
5939600,5947920," Um, there we go. This is a working version. Uh, this is a working version. Whatever."
5947920,5953200," So, I made this kind of a weird mistake somewhere, and I don't really understand where. Like,"
5954240,5965280," uh, probably I need to start over. Uh, might as well actually put asserttm in here just to make sure that"
5965280,5971120," local time returned correctly. And for the assert, you need to have assert."
5972480,5982240," uh, assert. Okay, so, let me, let me see what's going on. No, it's not about that as well."
5982240,5987840," Oh man, I don't want to start over, but it feels like I need to start over, but I don't want to start"
5987840,5997360," over. Fuck. Uh, um, I guess I have to start over. I guess I have to. Uh, all right, let's start over."
5997360,6003440," Uh, I really didn't want to. Fuck. So, this time I have to be a little bit more careful."
6003440,6009840," Um, all right. So, if I do that, it does this thing. So, let's be a little bit more careful."
6009840,6016400," So, it's not really a failure, right? So, we at least learned that we, maybe it's super important to"
6016400,6022960," have some of the definitions in here. Uh, let me try to do the following thing. Okay. Um, so,"
6022960,6029120," this is that. And if I try to, no, it's not about that. Um, okay. So, we're going to be doing all of"
6029120,6040560," that stuff, like, slowly and incrementally. Uh, query, uh, 11. Boom. So, and in here, yeah, whatever."
6040560,6048800," I'm going to just keep it over this. So, knob. Let's just try to run it. Okay. Seems to be working."
6048800,6055760," Cool. Cool. Cool. Cool. Cool. So, font, rows, query, replace, five. All right."
6055760,6070240," Could we replace this with three. All right. Could we replace this with, uh, eight. All right. Uh-huh."
6070240,6076960," Could we replace this thing with two. All right. Um, five."
6076960,6089360," Double check that five, five multiplied by eight is, oh my, Python work faster. Okay. So,"
6089360,6094080," it's like my, my laptop is lagging on it. So, I'm going to just, like, double check. I just want to"
6094080,6101840," double check that it is the case. All right. So, this one is not used. Whatever. Uh, could we replace that"
6101840,6110000," with that? All right. Whatever. So, we have, we've got that. So, that's pretty cool. Uh, now, if I do that,"
6110000,6115680," it seems to be all right. Okay. Everything's fine. Everything's Gucci. Everything's Tamaguchi."
6115680,6124560," That's pretty cool. Um, so, can I just, like, put together some of these things in here? Uh, right."
6125760,6130720," I think I should be able to. All right. So, let's put it like that. But one of the things,"
6130720,6138480," yeah. So, this stuff compiles and it works. Okay. That's pretty cool. I have a feeling that maybe"
6138480,6144400," I fucked up something when I was merging these things. That's the feeling I have."
6146320,6153440," Right. That's the feeling I have, but I'm not 100% sure. But whatever. Um, so, let's take the blob."
6153440,6160560," Let's take the blob. So, this has been the question mark. Uh, and, uh, yeah. Let's recompile the blob."
6166000,6187600," So, okay. So, we'll replace that. This, replace this, that, this. Uh-huh. Okay."
6187600,6191360," So, as we compile that and"
6195840,6209840," That is bizarre. Something with the blob."
6209840,6214080," This is actually very interesting. So, red segmentation. Yeah, exactly."
6214080,6220480," Uh, right. So, there's something with the blob that breaks it now. Like, what the fuck?"
6220480,6225520," Maybe blob is too big. Too big for what, though?"
6225680,6227520," Too big for what? I don't quite get it."
6227520,6235920," Uh, redstick falls is super rare and dangerous. Yeah, exactly. What is... Ah, that's so bizarre."
6235920,6241680," All right. So, because... Like, bruv. That is annoying."
6241680,6246400," Do I have, like, a zero? So, fuck me."
6249840,6260640," This goddamn escape, scheiße. Fuck. I'm sorry."
6260640,6265520," I'm pretty sure it got interpreted as some sort of, like, a zero-course."
6270400,6271520," This is annoying, isn't it?"
6271520,6273600," This is annoying, isn't it? I think it's kind of annoying."
6273600,6278400," But no, it shouldn't be interpreted like that. Or should it?"
6278400,6282880," Octo. It's also maybe..."
6282880,6287360," Fuck. It's also maybe about the percent."
6287360,6293840," It could be something about the percent. But the percent was never a problem for the quine, was it?"
6295440,6302880," Um, percent was never a problem for the quine. So, if I just run the quine..."
6302880,6304880," Uh, right."
6304880,6310720," Yeah, percent is never a problem for the quine. Look at that."
6315040,6318560," Because we never really used it in the format. So, no, it's totally fun."
6318560,6322400," It's totally fun. Um, so, could be..."
6322400,6330080," StringTerminator. But I don't think it is a..."
6330080,6334080," It is considered a null StringTerminator. Because..."
6334080,6342640," Yeah, they double escaped. They're double escaped, so it's not a problem. It shouldn't be a problem."
6345280,6349120," So, I don't think it is the case."
6349120,6353840," But it's actually kind of new and kind of bizarre."
6353840,6362720," Uh, so, let me try to maybe test that somehow."
6362720,6367600," We can try to remove this thing."
6369120,6370720," Yeah. It segfolds right away."
6370720,6374720," Actually, it's status segfold, like, around here."
6374720,6377120," And I don't understand why."
6377120,6383200," I don't understand why it is like that. That's so bizarre."
6383200,6385520," Some new lines."
6385520,6390560," It actually goes..."
6390560,6394400," Okay, so it tries to go to the next line or something."
6394400,6396640," Is that because it overflows x?"
6396640,6399600," It could be because it over..."
6399600,6400560," What? But I mean it..."
6400560,6402720," Like, we check for the overflow for x."
6402720,6405840," We check for the overflow, so it shouldn't be the case."
6405840,6409040," So, why is that?"
6409040,6411680," Uh, let's reformat."
6411680,6413280," So, maybe it's something with the pixel."
6413280,6419680," Mmm, such a pain in the ass."
6420400,6421920," All right, wait, wait, wait, wait, wait."
6421920,6424080," All right, so, gdb."
6424080,6427280," Clock."
6427280,6429120," I'm also a little bit tired already, but I mean..."
6429120,6430800," Okay."
6430800,6432720," Okay."
6432720,6438080," Okay, so, the fact that it fails somewhere here is actually quite good, I think."
6438080,6439920," I think it's actually quite good."
6439920,6443280," I see."
6443280,6445200," So, oh, I see, I see."
6445200,6446560," It makes so much fucking sense."
6446560,6447360," Okay, okay, okay."
6448000,6450640," Okay, it's fine, it's fine, it's fine, it's fine."
6450640,6452560," I see what is going on, I see what is going on."
6452560,6459280," It's just like, i has to be now less than the amount of digits, which is 8."
6459280,6460240," Okay."
6460240,6463200," That's it, that's literally it."
6463200,6466240," So, it's just like, yeah, that explains it."
6467760,6470560," This time it does make sense, it does make sense."
6470560,6472880," Okay."
6472880,6483920," So, if it's less and we can, yeah."
6483920,6490800," So, I forgot one boundary, effectively."
6490800,6492560," I just forgot one boundary in here."
6492560,6496720," All right."
6496720,6503200," So, now let me try to do this kind of thing."
6503200,6503520," All right."
6503520,6504960," So, let's recompile the blob."
6504960,6507680," The blob recompilation."
6507680,6510240," The blob recompilation."
6517440,6518000," Okay."
6518000,6523680," It's a pretty huge blob."
6523680,6527200," I don't really like how huge it is, but it is, what it is, what it isn't."
6527200,6529200," All right."
6529200,6530160," So, what do we have?"
6530160,6532160," Are we ready, chat?"
6532160,6533520," Are we fucking ready?"
6533520,6537360," So, yeah, there we go."
6537360,6544000," You can barely see what the fuck is going on in here, but that's fine."
6544000,6544800," It's actually fine."
6544800,6549280," Well, yeah."
6549280,6551920," So, it doesn't print everything."
6551920,6552960," All right."
6552960,6557920," It doesn't print everything, but it's actually very close to what we want in here, honestly."
6557920,6562560," And I wonder if I can go now further."
6562560,6568400," I wonder if we can now go a little bit further."
6570720,6572960," Can I get rid of all of these things?"
6572960,6582080," Because, effectively, it would allow me to sort of, like, compress this entire stuff a little bit like that."
6582080,6585120," Honestly..."
6585120,6588960," Okay."
6588960,6591280," So, it doesn't like something."
6591280,6594480," So, it produced an error."
6594480,6596320," Aha."
6596320,6597760," So, you can't do it like that."
6597760,6599360," So, you probably have to do it like this."
6599360,6604720," Honestly, like, you can actually accept it as a digital slug."
6604720,6605840," It's not that big of a deal."
6605840,6608240," What you don't like, brother?"
6611520,6613200," Doesn't like it, motherfucker."
6613200,6614320," Motherfucker doesn't like it."
6614320,6618640," Oh, you can't."
6618640,6620160," You can't probably do it like that."
6620160,6620400," Okay."
6620400,6621840," Fair."
6621840,6622240," Fair."
6622240,6624080," Yeah."
6624080,6625040," You can't do it like that."
6625040,6631360," So, we can maybe move some of that stuff."
6634000,6634400," Anyway."
6634400,6638080," So, I want to apply the idea that I had in here."
6638080,6638400," Right."
6638400,6641680," So, that if any of these things happen..."
6641680,6643120," All right."
6643120,6648880," So, the first thing you do is just you print the backslash."
6650160,6653520," And then, honestly, it's not gonna..."
6653520,6658000," Yeah."
6658000,6659920," It's not gonna work in case of n."
6659920,6662000," All right."
6662000,6663760," It's not gonna work in case of n."
6663760,6666240," So, it's not particularly a great idea to do it like that."
6666240,6666400," Yeah."
6666400,6668320," So, I think it's a mistake."
6668320,6670720," I think it's a mistake."
6670720,6674960," But it's already basically in the right direction."
6674960,6676800," It's already basically in the right direction."
6678080,6680320," And yeah."
6680320,6684400," So, let's move further."
6684400,6688560," Let's keep moving further and further."
6688560,6690400," Oh my god."
6690400,6692640," My Emacs are just stuck because of this shit."
6692640,6698080," I wonder if I can do a very interesting thing."
6698080,6702160," So, essentially, inline font into here."
6702160,6704480," You know what I'm talking about?"
6704480,6706160," Like, inline it directly."
6706800,6709280," So, because one of the things you probably can do..."
6709280,6715840," I remember seeing that approach in knob.h."
6715840,6718960," What was that?"
6718960,6720640," di_append_menu."
6720640,6723040," di_append_menu."
6723040,6728320," And I think it's not di_append_menu, but in some places where I used."
6729040,6731360," So, yeah, this is what I'm talking about."
6731360,6735440," Something like this, because I can always just do int."
6735440,6737520," All right."
6737520,6739520," And it's an array of ints."
6739520,6744000," And then I can say, okay, so this is what I've got."
6745200,6750720," And I can then just literally inline this thing instead of the font."
6750720,6752080," All right."
6752080,6753600," Can I do something like that?"
6753600,6758720," That would be kind of cool, honestly, if I could do something like that."
6758720,6761440," Look at that."
6762560,6763440," I think it's pretty cool."
6763440,6767440," Inline font array would be nice."
6767440,6767920," Yeah, I know."
6767920,6770720," I know, I know, I know, I know."
6772240,6772560," Okay."
6772560,6776640," So, yeah."
6776640,6779440," Something like this."
6779440,6783200," And obviously, let's put it like that so we can see some stuff."
6783200,6785920," All right."
6785920,6790160," So, and yeah, let's reconfigure the blob."
6790160,6793200," All right."
6793200,6804000," So, we'll replace, uh-huh, query, newline/n, query."
6804000,6808560," Oh, that's a, oh my god, I see what's going on."
6808560,6812560," Uh-huh, another include."
6812560,6818480," Maybe I need to automate that somehow."
6818480,6821680," But I'm already tired."
6823200,6827040," So, slash, double slash, uh-huh, okay."
6827040,6830400," Replace new slash n, okay."
6830400,6843520," Replace quote, like this, uh-huh, like this, and all right."
6843520,6850720," Something like this, all right."
6853200,6856720," Uh, you can enable printing the entirety of this thing."
6856720,6863680," Simply by, uh, simply by removing that limitation that we had."
6863680,6865920," But it will make it unreadable completely."
6865920,6867760," Where is the limitation?"
6867760,6868080," Yeah."
6868080,6870160," So, basically, remove this thing."
6870160,6872000," And it will print the entirety of this thing."
6872000,6874080," But it's going to be too huge, right?"
6874080,6876000," So, it's going to be too huge."
6876000,6877200," So, you won't be able to see that."
6877200,6881840," So, I need to spend some time basically minifying the whole thing."
6882400,6886000," But the idea of how to implement that, it's already there."
6886000,6888400," As you can see, it's effectively there, right?"
6888400,6892560," So, you can just enable printing itself and it's kind of like a clock."
6892560,6898640," So, my idea is I'm going to minify that already off screen, right?"
6898640,6901920," So, I'm going to fully minify that off screen and we'll see what I can do in here."
6901920,6907680," And then, I'm going to offline record like a footnote demonstrating this entire thing."
6907680,6910640," So, you will be able to see, right?"
6910640,6912880," So, the final result already on YouTube."
6912880,6914400," I think that's a good approach, right?"
6914400,6919760," So, we sort of like outlined how exactly you would do something like that on the stream."
6919760,6923760," And then, like all the routine part or the grinding, I'm going to do off screen already."
6923760,6924640," So, not to bother you."
6925440,6927600," So, all right, I guess that's it for today."
6927600,6930480," Thanks everyone who's watching me right now."
6930480,6931520," I really appreciate it."
6931520,6932320," Have a good one."
6932320,6937200," And I'll see you all on the next recreation programming session with Mr. Azuzin."
6937200,6937680," I love you."
6937680,6939600," All right."
6939600,6940800," This is the next day."
6940800,6942160," So, I had a little bit of a sleep."
6942160,6944240," So, I'm ready to continue developing this thing."
6944240,6947200," I actually decided to continue like developing it online."
6947200,6951600," Because as I was sleeping, I actually got a couple of interesting ideas."
6951600,6953040," Right."
6953040,6958400," And I also, like after I slept, after I slept, I decided to see like how exactly"
6958400,6962240," those JavaScript developers implemented this coin."
6962240,6964560," Because this coin is actually kind of short."
6964560,6967840," Whatever we came up with is actually kind of big."
6967840,6968160," Right."
6968160,6971040," So, apparently they used some sort of a trickery, right?"
6971040,6972480," To make it shorter or something like that."
6972480,6977120," Maybe they used like something that comes with the browser or whatever."
6977120,6980800," I looked into that and I noticed a really weird thing."
6980800,6982160," Right."
6982160,6988240," So, at the top they define R, variable R, which is obviously a lambda."
6988240,6990480," So, you can clearly see that it is a lambda."
6990480,6996160," And then within the body of the coin, they are using backticks."
6996160,6999440," And within the backticks, they're sort of embedding R."
6999440,7001680," I'm not a JavaScript developer."
7001680,7004080," I'm not familiar with JavaScript."
7004080,7008480," But that particular trick seems a little bit sus."
7008480,7011360," So, what I did, I opened like a Node.js."
7011360,7015840," I decided to define this like fat arrow function."
7015840,7016000," Right."
7016000,7020160," So, let's actually say console.log and we're going to say hi in here."
7020160,7022800," So, if you call this function, it says hi."
7022800,7026720," What if now I will try to embed this entire thing like..."
7026720,7038400," So, JavaScript fucking allows you to take a lambda function and get its textual representation."
7038400,7043360," How is that different from if I used like something like embed?"
7045280,7045840," How is that?"
7045840,7048320," That is cheating."
7048320,7050640," Those goddamn JavaScript..."
7050640,7052000," They are cheaters."
7052000,7055920," This is not a real coin."
7055920,7058240," This is not a real coin."
7058240,7059040," Like, it's like..."
7059040,7060080," It's a fake coin."
7060080,7062480," God freaking..."
7062480,7064160," And let me tell you."
7064160,7067840," Those JavaScript developers are like that at everything."
7067840,7069920," They are like that at everything."
7069920,7071440," They're constantly deceiving you."
7071440,7072880," They're constantly cheating."
7072880,7074000," They may tell you that..."
7074000,7074720," Oh, you can..."
7074720,7077760," These days you can develop native applications in JavaScript."
7077760,7083760," And then they ship an entire fucking browser with their native applications."
7083760,7086160," They are like that at fucking everything."
7087120,7088160," I'm fucking telling you."
7088160,7092240," So, okay."
7092240,7095600," How am I going to compete with these cheaters then?"
7095600,7097600," Like, how am I going to compete with these cheaters?"
7097600,7100880," Like, I was trying to be intellectually honest."
7101360,7104640," And I honestly developed like a proper coin."
7104640,7104880," Right?"
7104880,7106240," So here's my proper coin."
7106240,7110960," It doesn't use any trickery that allows you to read its own source code or anything like that."
7110960,7114320," And it turned out a little bit big because that's how it goes."
7114320,7114640," Right?"
7114640,7119600," If you honestly intellectually honestly tries to implement the coin, it becomes a little bit big."
7119600,7119840," Right?"
7119840,7122240," So I can't really implement it like a small like that."
7122240,7128720," So I guess the only way to compete with cheaters is by cheating yourself."
7128720,7133840," So let's actually try to maybe implement the coin with embed and see how it goes."
7133840,7135200," Maybe that is going to be easy."
7135200,7135600," Right?"
7135600,7139520," To be fair, embed is a C23 feature."
7139520,7139760," Right?"
7139760,7140640," So C23."
7140640,7142480," And to be fair, I never used it."
7142480,7144560," I never used that feature."
7144560,7148400," And I think this could be a good opportunity to at least explore it."
7148400,7149200," All right?"
7149200,7153120," And see how it works because I'm also kind of curious about it."
7153120,7154320," So let's go ahead and do that."
7154320,7164400," And maybe after we implement like a, you know, sort of like a fake coin, like a JavaScript one,"
7164400,7168320," maybe we can try to implement more sophisticated one, a real one."
7169040,7170160," It's going to be bigger."
7170160,7174080," But because it has a bigger surface, we can do something more interesting with it."
7174080,7177600," For example, an analog clock instead of a digital one."
7177600,7178160," Right?"
7178160,7184080," So since the actual honest coin is going to be bigger, we can do pretty cool stuff on it."
7184080,7184560," Right?"
7184560,7185360," So we'll see."
7185360,7185600," We'll see."
7185600,7188400," But first I want to try the cheating coin."
7188400,7189680," Right?"
7189680,7190640," So let's go ahead and do that."
7190640,7196480," So first of all, let's Google up how you do embed."
7196480,7196720," Right?"
7196720,7198240," So C23 embed."
7198880,7203200," So is there any information about this marvelous, marvelous feature?"
7203200,7204400," So we have CPP reference."
7204400,7205600," So let's actually take a look at that."
7205600,7209280," So today we cheat."
7209280,7209440," Yeah."
7209440,7210640," Today we cheat with your mom."
7212160,7224320," Okay, so embed is a preprocessor directive to include binary resources in the build, where resource is defined as source data accessible from the translation environment."
7225360,7226240," Very interesting."
7226240,7227440," So what the fuck is PP token?"
7227440,7229440," What the fuck is PP token?"
7229440,7234800," Freaking ISO committee."
7234800,7235840," I swear to God."
7235840,7237680," What the fuck are they doing in that committee?"
7237680,7240160," They're just having fun."
7240160,7240800," Honestly."
7240800,7243200," They're just having fun with PP tokens."
7245600,7247760," Is there any examples on how to use this shit?"
7247760,7249520," Okay."
7249520,7252880," So you just like literally, you just literally embed."
7252880,7255440," And I wonder if, right."
7255440,7257040," All right, so we have just quine."
7257040,7258480," Let's create like a cheat."
7258480,7262160," Maybe quine.cheat.c."
7262720,7265840," So in here, I'm going to just include stdio."
7265840,7271760," And maybe what we're going to do is src."
7271760,7280960," And so since it's a preprocessor, by the way, it probably means that it has to occupy the entire line,"
7280960,7285840," which will make it a little bit easier to, a little bit difficult to actually format things."
7285840,7291520," Because like you won't be able to have anything after, like after the file path or anything like that."
7291520,7296080," So you can actually have some stuff in here, but I mean, it's going to be interpreted as parameters of the preprocessor."
7296080,7298720," So that could be a problem, but whatever."
7298720,7300160," We'll see."
7300160,7300480," We'll see."
7300480,7303600," So I'm going to actually embed myself."
7303600,7305360," Can I just embed my own file?"
7305360,7306880," That will be interesting."
7306880,7307920," All right."
7307920,7310960," So and afterwards, can I just print this entire thing?"
7310960,7314160," Maybe without any line or anything like that."
7314160,7315360," Right."
7315360,7317280," So, and of course, here I'm going to return just zero."
7317280,7318960," Okay."
7318960,7321200," So let's go into the knob.c."
7321520,7321680," Right."
7321680,7323040," So this is a knob.c."
7323040,7326480," And we have quine cheat."
7326480,7327440," Right."
7327440,7328800," So quine cheat."
7328800,7331440," And if I try to recompile this entire thing."
7331440,7336000," So embed invalid preprocessor directive embed."
7336000,7339280," Is that because it's not C23?"
7339280,7344000," How can I say, bro, commit, compile with C23?"
7344000,7346800," Is that a thing I can just do some way here?"
7346800,7350560," So maybe something like STD C23."
7350560,7353200," Is that something that is already available for me?"
7353200,7356160," So unrecognized C20X."
7356160,7356400," Okay."
7356400,7359200," So it's not really finished or anything like that."
7359200,7361120," Invalid preprocessor empty scale."
7361120,7361440," Okay."
7361440,7366720," So I suppose you have to like literally provide."
7366720,7368320," Yeah."
7368320,7369360," So PP tokens."
7369360,7372720," I would expect that PP tokens is a preprocessor tokens."
7373440,7376160," So that's a little bit bizarre."
7376160,7380960," Um, preprocessor and it doesn't really work."
7380960,7385520," So that is bizarre."
7385520,7387440," My information is that because I'm using GCC."
7387440,7388800," What if I use Clang?"
7388800,7391360," Maybe Clang is capable of doing that."
7393120,7394320," Oh, shit."
7394320,7394720," Almost."
7394720,7396320," In my, look, it does up."
7396320,7400880," No, I did everything correctly."
7400880,7401520," So embed."
7401520,7406720," So it doesn't work for my, for my thing."
7406720,7410400," So what if I just like do quine cheat.c."
7410400,7413200," So yeah, it is not available."
7413200,7415360," So, okay."
7415360,7418560," So let's see if I can do Clang embed."
7420160,7430960," So for C and C++, is it not implemented in the latest compilers?"
7430960,7434240," Is it not implemented in the latest compilers?"
7434240,7435280," I don't really know."
7435280,7442080," Um, that is kind of, it's kind of bizarre."
7442080,7447680," So do they say what's going to be the command line?"
7447680,7448960," What's going to be the command line?"
7448960,7455040," The Clang, um, embed dir."
7455040,7458400," You have to specify embed dir if you want to do that."
7458400,7464080," Clang or literally other compilers."
7464080,7468160," So it seems no compiler."
7468160,7469840," Really?"
7469840,7473680," There's not a single compiler that supports embed?"
7474800,7479040," Uh, compilers are possible for 23 and embed."
7479040,7479760," No."
7479760,7484320," How, isn't it like the easiest feature to implement?"
7484320,7485840," Or am I missing anything?"
7485840,7489920," What the, what the fuck is going on?"
7489920,7493120," What?"
7493120,7495920," Um, excuse me?"
7498480,7502240," So like, how can we allow those cheaters to win then?"
7502240,7504000," What the fuck?"
7504000,7513840," Um, to use the standard just implemented."
7516720,7518720," Uh, all right."
7518720,7520560," So apparently we can't even do that."
7520560,7521840," We, we, we can't even cheat."
7521840,7524960," We're at such a disadvantage that we can't even cheat."
7524960,7529840," We have to actually honestly, uh, implement this entire shit, apparently."
7529840,7531920," Um, okay."
7531920,7535760," So that's a little bit bizarre, but I mean, sure, sure."
7535760,7536960," We can probably live with that."
7536960,7542080," Anyways, so, uh, let's go ahead and just like remove this kind of stuff."
7542080,7545440," So yeah, it is what it is."
7545440,7549200," I'm pretty sure those goddamn JavaScript developers, they paid."
7549200,7551680," They paid ISO committee."
7551680,7554000," So they stole on actually adopt."
7554000,7555440," It's not really ISO committee."
7555440,7558800," So they probably paid to the C compiler developers."
7558800,7563360," They paid to the C compiler developers to actually stole, uh, the development"
7563360,7564640," of this critical feature."
7564640,7569200," So the C developers cannot cheat and cannot compete in Quine development"
7569200,7570800," with goddamn JavaScript developers."
7570800,7572240," So."
7572240,7574640," ISO paid by big JS confer."
7574640,7575680," Exactly."
7575680,7577520," That's, that's literally what happened."
7577520,7579280," That is literally what fucking happened."
7579280,7580960," Anyways."
7580960,7584720," So, um, I guess we, we have to go back to our original Quine, right?"
7584720,7586320," So our original clock."
7586320,7590480," Um, so yeah, we have a little bit of a bullshit in here."
7590480,7595360," So this is basically the, the leftovers from the, from the yesterday where we tried to,"
7595360,7596640," you know, implement this entire stuff."
7596640,7599200," So I kind of want to start over with this kind of thing."
7599200,7602480," So let me quickly invoke this entire stuff."
7602480,7605280," And I'm going to just like remove this entire thing."
7605280,7607920," Uh, so Clank, uh, we, we don't need this entire stuff."
7607920,7609120," Um, right."
7609120,7616320," So it's a little bit inconvenient, uh, in my opinion, to recompile this blob over and over"
7616320,7618320," again yourself, right?"
7618320,7621920," So it would be kind of better if we automated that, right?"
7621920,7625120," So, uh, essentially how we can automate that."
7625120,7630960," We, we can probably just write some utility that reads the source code of this entire Quine."
7630960,7631200," Right."
7631200,7633200," It reads the source code of this entire Quine."
7633200,7634000," Uh, right."
7634000,7641120," Finds the, uh, finds the question mark and embeds, uh, the compiled blob into the question mark."
7641840,7649280," So essentially I think technically the utility is going to implement like this Quine, but partially"
7649280,7653600," we don't even have to implement it as a separate executable or anything like that."
7653600,7658080," We can actually write that code inside of no, no, no, no dot C, right?"
7658080,7662000," We can literally just write that code in here and it's going to be part of the building system."
7662000,7667440," So this is one of the advantage advantages of using C as a building script."
7667440,7671120," You can literally have like actual algorithms in here that do shit."
7671120,7675280," Uh, so, um, yes, yes, yes."
7675280,7676320," Okay."
7676320,7681600," So, uh, let's implement some sort of function, maybe like a compile blob, right?"
7681600,7683760," Or maybe it was called compile Quine blob."
7683760,7690080," Uh, so here is going to accept, uh, so maybe output path where exactly you're going to output the,"
7690080,7692560," the, you know, compiled blob and stuff like that."
7692560,7696640," And here we're going to accept the input path, uh, like so."
7696640,7697920," Uh, all right."
7697920,7705760," So essentially, uh, in here what we can do, um, I'm going to return maybe in boolean"
7705760,7707360," because we're going to be reading files."
7707360,7709680," So reading files may fail."
7709680,7711520," So this is going to be false for now."
7711520,7719120," And before compiling clock, what we can do, we can do compile, uh, compile Quine blob."
7719120,7727440," And let's say, let's say that the output is going to be, uh, clock blob, right?"
7727440,7728800," Clock blob, right?"
7728800,7732560," So we're taking this as an input, the original thing as an input,"
7732560,7735520," and we basically turning it into that, right?"
7735520,7737840," So we're compiling the blob with a question mark."
7737840,7741120," So, and if it fails, of course, we just fail the entire thing."
7741120,7745200," And now instead of compiling this thing, right, we're going to be compiling this thing."
7745200,7747840," So we add an additional sort of pre-processing step."
7747840,7749920," Uh, right."
7749920,7751840," And how are we going to be doing all of that in here?"
7751840,7755360," So let's actually maybe read an entire input file, right?"
7755360,7760480," So in knob.h, uh, knob.h read entire file."
7760480,7761840," There was a function in here."
7761840,7766160," Uh, so it wants the string builder."
7766160,7771120," So let's actually define the string builder on this stack and give the pointer to this thing"
7771120,7772240," in here, right?"
7772240,7774240," We're reading from the input path."
7774240,7777680," And of course, if this entire thing failed, uh, right?"
7777680,7780720," If it didn't return what we expected, we just return false."
7780720,7781920," Uh, there we go."
7781920,7791200," So now what we want to do, we want to open file, open the output file for writing, right?"
7791200,7792320," So this is the output."
7792320,7797440," We open the file output path, and we're opening it for writing with binary mode."
7797440,7800160," As far as you know, on Linux, it doesn't really matter, right?"
7800160,7804640," So it's something that kind of matters on Windows, but we're not using Windows."
7804640,7807680," And I think these days it doesn't even matter on Windows either."
7807680,7811360," So I don't really know what, what the fuck this thing means anymore, right?"
7811360,7817040," It has something to do with processing new lines or converting new lines or something like that."
7817040,7820720," So binary mode says like, don't do anything funny with new lines."
7820720,7824320," And that's why I always enable it, but I'm not really sure what the fuck it means these days."
7824320,7826000," Nobody knows."
7826000,7826720," Nobody knows."
7826720,7827040," Okay."
7827040,7829600," So in case of an error, it probably returns null."
7829600,7834240," So in this case, we probably want to say, could not open file for writing or whatever."
7834240,7834480," Yeah."
7834480,7838400," It's something with /r/n, /n, I don't really know."
7838400,7841040," So no blog, uh, nob error."
7841040,7848400," And we're going to say something like, could not, uh, read the file S because of S and output"
7848400,7853040," path is the first S and the second S is going to be str error, error, no."
7853040,7856240," And we're going to just return, uh, we're going to just return false."
7856240,7857120," There you go."
7857120,7858000," So, and so we're here."
7858000,7861600," We're going to F close, uh, the output afterwards."
7861600,7862000," Okay."
7862000,7862560," That's pretty cool."
7862560,7868560," So, and what we need to do, we just need to iterate, uh, through all of the bytes, uh,"
7868560,7870960," of the, of the, of the content of the file, right?"
7870960,7873120," So we're just iterating through all of the bytes."
7873120,7878160," And, um, so we're going to do a special thing if we encounter a question mark."
7878160,7884000," So if the items is equal to the question mark, what we have to do, we just have to print the"
7884000,7886880," entire blob escaped properly."
7886880,7891680," If it's not the question mark, we're going to be just printing like single character in here,"
7891680,7891840," right?"
7891840,7897600," So maybe we're going to do F print F output, print that character in here."
7897600,7904080," Otherwise, instead of question mark, print the entirety of the blob again, right?"
7904080,7906160," So it's going to be sort of like a nasty thing in here."
7906160,7911520," Uh, so it's going to be something like that as B count, uh, plus, plus J."
7911520,7913360," And there we go."
7913360,7921840," So this is our SBCount and in here, so we can just say, okay, print J, but we also have to handle"
7921840,7926000," some special things that need to be handled, right?"
7926000,7930480," Like new lines, backslashes and, uh, quotes, right?"
7930480,7933040," So we might as well do something like this."
7933040,7935760," We can switch upon those things, right?"
7935760,7937520," We're switching upon those things."
7937520,7944000," And if you encounter a new line, uh, we're going to print instead escaped new lines."
7944000,7948160," So it's going to be double backslash and just a regular N, uh, right."
7948160,7949520," And that's about it."
7949520,7952240," We're going to be printing it in the output and we want to do break."
7952240,7953600," Uh, right."
7953600,7957920," And we're going to have two, like three special things that we have to escape."
7957920,7962320," Uh, backslash, backslash is replaced with double backslash,"
7962320,7963760," because we need to escape that."
7963760,7968080," And, uh, you know, the, the quote, the, the double quote."
7968080,7971680," And that thing is going to be replaced with double, uh, quote like this."
7971680,7976320," So, and if we encounter some, like something else, we just don't care about it, right?"
7976320,7978160," So we just print it as it is."
7978160,7979040," And that's about it."
7979040,7982800," So I think that's, uh, the thing that we want to do in here, right?"
7982800,7984400," So it's basically what we do in Quine."
7984400,7986400," It's an interpreter from Quine."
7986400,7991280," So we have a little bit of a Quine embedded in the build system, right?"
7991280,7992560," So that's kind of cool, I think."
7992560,7995360," Um, anyways, so I was actually trying to build this entire thing."
7995360,7996160," And what does it say?"
7996160,7998320," Uh, it doesn't like that it doesn't have a semicolon."
7998320,7999200," There we go."
7999200,8003360," So, um, it couldn't compile for whatever freaking reason."
8003360,8008480," Probably because at the end of the compile Quine blob, I returned false instead of true."
8008480,8013280," To be fair, after we close the file, it would be nice to maybe inform the user that we generated some"
8013280,8021040," sort of a file, not info, uh, in like not really info, generated, uh, as, and we're going to say"
8021040,8022560," output path, right?"
8022560,8024640," So that's what we're going to do in here."
8024640,8025680," So look at that."
8025680,8028080," So we compiled all the usual stuff, right?"
8028080,8032240," Generated a clock blob, and then we compiled clock blob."
8032240,8033280," How about that?"
8033280,8034480," That was pretty convenient."
8034480,8038240," So if we take a look at the original clock, uh, take a look at the original clock."
8038240,8042800," So there's no blob in here, but then we can go into the build and within the build,"
8042800,8043520," here is the blob."
8043520,8048080," So we automatically compiled that entire blob for us."
8048080,8049920," So, which is kind of cool."
8049920,8053200," And as you can see, it's, it's also compilable, right?"
8053200,8054480," So it's also compilable."
8054480,8055680," So I don't have to do that manually."
8055680,8058560," I don't really know why, why yesterday I was doing that manually."
8058560,8060880," Maybe because I was already tired, right?"
8060880,8065920," So, uh, because doing it like that is obviously way, way easier, right?"
8065920,8067840," Um, we can even test that a little bit."
8067840,8069680," So I think, I think that would be useful."
8069680,8075440," Let's go, uh, and, uh, cd into this folder."
8075440,8079600," Uh, cd is not, uh, sorry."
8079600,8082800," And let's just try to run the clock."
8082800,8083760," Okay."
8083760,8084800," So that seems to be working."
8084800,8090640," So we, we see part of this entire thing, but we still see, uh, you know, the, the part of the source code."
8091120,8100160," We can maybe even, I don't know, remove the limitation on the amount of things, uh, just to see the entirety of the source code."
8100160,8102880," But the entirety of the source code is actually kind of huge, right?"
8102880,8104720," So that's kind of the main problem."
8104720,8108640," When you are not cheating, when you're implementing your coins."
8108640,8114640," When you're implementing your coins, honestly, they turn out a little bit big."
8114640,8119040," Because they are supposed to contain the old information in a reclassive manner."
8119840,8120240," Okay."
8120240,8126160," So anyway, um, so yeah, so it's gonna be quite big."
8126160,8131680," So the thing that limits the entire stuff, it's actually here."
8131680,8135280," So let's actually try to remove this entire thing."
8135840,8137920," And, uh, let's go."
8137920,8140160," I wonder if it's gonna."
8140160,8141680," Okay."
8141680,8144080," Ooh, that's interesting."
8144080,8146640," It's actually prints like a new line every time."
8146640,8148000," Uh."
8148000,8151200," Ah."
8151200,8153840," I see, I see."
8153840,8155920," So it's a little bit weird."
8155920,8159920," It is a little bit weird the way it works."
8159920,8162000," So I'm not really sure."
8162000,8165200," I'm not really sure."
8165840,8169520," But it, I mean, it prints its own source code, right?"
8169520,8171600," So it prints its own source code nonetheless."
8171600,8174320," Though it's still a little bit weird."
8174320,8175520," Right?"
8175520,8177360," Anyways."
8177360,8178960," So what we want to try to do."
8178960,8180160," Output for ends."
8180160,8180800," Yeah, exactly."
8180800,8181680," Output for ends."
8181680,8185680," Although when I don't limit it like that, it's actually kind of fine."
8185680,8187040," Right?"
8187040,8189440," So maybe, maybe that's, that's totally fine."
8189440,8189680," Right?"
8189680,8190560," So if I don't limit it."
8190560,8193520," It's actually fine."
8193520,8194400," Maybe it's some sort of."
8194400,8195280," Oh, I know why."
8195280,8199840," Because there is one single huge line, right?"
8199840,8201040," That wraps around."
8201040,8206960," Because of that, the width is actually, the width of the entire thing is kind of skewed."
8206960,8208000," So it's not real width."
8208000,8213760," So for this entire trick to work, all the output in terms of width have to fit into the terminal."
8213760,8214800," Right?"
8214800,8217840," So I understand why it was sort of like drifting around."
8217840,8218720," So that's fine."
8218720,8223760," If we manage to actually reduce the size of this entire thing a little bit, I think it's going to turn out fine."
8223760,8225200," I hope so."
8225200,8227280," So anyway."
8227280,8231760," So the thing we need to do, we need to actually keep reducing now the size of the code."
8231760,8232000," Right?"
8232000,8235520," Since we have automated, you know, blob rebuilding, it shouldn't be that difficult."
8236160,8242400," So, but before I go into that, I think I'm going to simply commit this change because I think it's kind of useful."
8242400,8243920," Right?"
8243920,8249360," So implement-compile-quine-blob, right?"
8249360,8252400," Maybe I'm going to even say that it's nob, right?"
8252400,8253520," Some sort of like a label."
8253520,8259600," So it's a very common sort of convention in commit messages to put some sort of like a label."
8259600,8263280," Does anybody know what's the name of this thing in commit messages?"
8263280,8263600," Right?"
8263600,8265280," So like I see it all the time."
8265280,8268960," I also use it all the time, but I don't really know the name of this convention."
8268960,8273120," Is it called label or is it called a category or something like that?"
8273120,8278320," So it feels like one of these things that everybody uses, but nobody really knows what it's called."
8278320,8278720," A tag."
8278720,8280080," I would call it a tag, honestly."
8280080,8280400," Right?"
8280400,8282400," So the third category."
8282400,8293200," So would it be still valid, in your opinion, if Quine outputted the clock source in a rolling window?"
8293200,8298960," So you choose the dimension, the source would all be visible, but all at once."
8298960,8301920," I think so."
8302640,8311920," But to be fair, why I don't want to do that is because I want to create a cool demo where I play the clock."
8311920,8317040," Then I very epically and very dramatically press Ctrl+C."
8317040,8319840," It has to be extremely dramatic."
8319840,8323280," Then I do ED, test something like C."
8324160,8338560," I literally copy/paste this entire thing like so, press .save, quit, recompile the whole thing like so, and run it again and it reappears again."
8338560,8343440," So this is my final goal to actually dramatically do this kind of demo."
8343440,8348000," And because of that, rolling window is not really going to work for that."
8348000,8350880," So you see what I'm talking about?"
8350880,8351840," You see what I'm talking about?"
8351840,8354720," So I want it to be like copy/pastable to demonstrate."
8354720,8362960," Look, it acts like a clock, you Ctrl+C, you literally take the output of the clock, you put it in the file, compile it again and it reproduces itself."
8364000,8365280," So I think that is fucking cool."
8365280,8373120," So let me, let me see, oh, we've got some bits even."
8373120,8380560," Voidmaneger, thank you so much for 100 bits with a message."
8380560,8383760," Mr. Zodny is on FakeJS Rage today."
8383760,8385200," Damn, exactly, exactly."
8385200,8388160," Exposing all of these JS devs and their trickery."
8388160,8391040," Tim Skars, thank you so much for Twitch Prime with a message."
8391040,8392880," I just want to wish you all a happy day."
8392880,8393920," Thanks for stream sizing."
8393920,8394880," You're welcome, thank you."
8394880,8396320," Happy day to you too."
8396320,8398960," Always remember, happy day."
8398960,8401120," Achoo, by the way."
8401120,8409600," So, okay, let me, let me see how we can simplify the clock."
8409600,8412240," How we can simplify the clock."
8412240,8418560," Again, so the thing we probably can do is just like query replace all of the constants in here, right?"
8418560,8420800," So we probably don't, don't need all of them."
8421040,8422560," So, and I don't even use count in here."
8422560,8424320," So we don't need this thing as well."
8424320,8427840," And to be fair, maybe I can just move this font in here, right?"
8427840,8433840," So the most important thing here is after you replaced all of the, all of the defines and stuff"
8433840,8437440," like that is that the code, the code still works and does its sec fault, right?"
8437440,8439360," So that's the most difficult part."
8439360,8441120," That's the most difficult part."
8441120,8442960," So I'm going to replace it with five."
8442960,8443280," Okay."
8443280,8444400," So that's totally fine."
8444400,8448640," Uh, then this one, we replace that with three, boom."
8448640,8451120," And, uh, digits count."
8451120,8454240," I'm going to replace that with eight, boom."
8454240,8459760," Uh, so digits pad, we replace that with two, boom."
8460640,8467680," Uh, no, this one is now five, 14."
8467680,8469920," And as far as I know, it's not used anywhere."
8469920,8472560," And this thing is not used anywhere."
8472560,8474640," So now I can just recompile this entire thing."
8474640,8477760," And I don't have to recompile the blob whatsoever."
8478320,8481360," And it actually automatically modifies itself."
8481360,8487280," It's kind of cool that like you reduce the amount of code and the blob also, uh, shrinks down, right?"
8487280,8491600," It's still kind of big, but primarily because of the spaces, uh, I wonder if I can just queer"
8491600,8498160," replace, uh, actually with the regular expressions and just say, okay, remove all of the spaces"
8498160,8499920," like at all."
8499920,8503360," Will that reduce the size of the blob?"
8503360,8504320," It's still compilable."
8504320,8504640," All right."
8504640,8506640," So I can, I can take a look at the blob now."
8507280,8509520," Uh, yeah, it's actually much, much shorter."
8509520,8510800," To be fair."
8510800,8511040," Yeah."
8511040,8516240," At some point, uh, we're probably going to actually smoosh everything together, right?"
8516240,8519120," We're going to smoosh everything together and we'll see how it goes."
8519120,8521280," We can try to run this entire blob thingy."
8521280,8523040," Uh, it seems to be working."
8523040,8524000," It still seems to be working."
8524000,8530160," Um, so we don't really need majority of the headers except maybe time."
8530160,8534720," So there is a little bit of a problem with the time because like it really needs that like a"
8534720,8537920," structure definition and I don't really know where to get it."
8537920,8539520," So it's kind of annoying."
8539520,8540400," It's kind of annoying."
8540400,8546240," Uh, so yeah, let's actually see if it's, if it's going to work."
8546240,8548400," Uh, yep."
8548400,8553440," So now if I try to, oh, I was actually modifying a wrong."
8553440,8556880," I was actually modifying the compiled blob instead of get them."
8556880,8562400," So now we have a problem that I may accidentally forget and start modifying like a generated code"
8562400,8564000," instead of the, the real code."
8564000,8566640," Good fucking damage."
8566640,8570960," Anyway, uh, so yeah, we need to remove this kind of thing."
8570960,8572720," And let's actually try to do it like that."
8572720,8573840," So did it compile?"
8573840,8574960," I think it compiled."
8574960,8578880," It has a bunch of warnings, but we can just ignore them because who fucking cares?"
8578880,8582320," Uh, oh, and it's like false now."
8583440,8584000," Uh huh."
8584000,8586640," Is that because of the headers?"
8586640,8589200," Yes."
8589200,8591680," It's because of the fucking headers."
8591680,8593040," So."
8593040,8597680," That is absolutely bizarre."
8597680,8599920," Huh."
8599920,8602400," Ah, okay."
8602400,8602640," Okay."
8602640,8602960," Okay."
8602960,8603760," I remember that."
8603760,8604720," I remember the shit."
8604720,8605280," I'm sorry."
8605760,8606960," So it's less than eight."
8606960,8607200," Yeah."
8607200,8607280," Yeah."
8607280,8616080," So I, I, I forgot that when I actually discarded the previous work, I also discarded the fix for this."
8616080,8621760," Okay."
8621760,8622640," Everything's fine."
8622640,8623520," Everything's fine."
8623520,8624960," So, uh, it's back."
8624960,8626400," I should probably commit that."
8626400,8628640," Honestly, I should probably commit that."
8628640,8631920," Uh, so, uh, let me see."
8631920,8633280," So everything seems to be fine."
8633280,8634400," So look at that."
8634400,8634800," Look at that."
8634800,8635440," Look at it go."
8635440,8637680," That's pretty cool."
8637680,8643680," So I feel like this specific time thingy is going to kind of limit us in terms of like how we're"
8643680,8645360," going to format this entire stuff."
8645360,8649600," I think it is going to be kind of limiting in that sense."
8650880,8655600," Um, so another kind of thing that may help us in here."
8655600,8656640," Right."
8656640,8661120," Look at how we actually call pixel with all these parameters."
8661120,8665440," But we use these parameters in only two places."
8665440,8671040," Can we just like maybe make this array global somehow?"
8671040,8671280," Right."
8671280,8672960," So can, can we just make it global?"
8672960,8674000," Right."
8674000,8677440," And essentially in here I can get rid of that."
8677440,8684640," So, and because of that, I don't have to even, um, you know, pass that digits anymore anywhere."
8684640,8684800," Right."
8684800,8688000," So I can just quit replace this entire thing with nothing."
8688000,8689520," I don't have to pass it like ever."
8689520,8691520," So that's, that's pretty convenient."
8691520,8693040," So we can do something like that."
8693040,8694240," And then it seems to be working."
8694240,8696960," And, and the cloak is, by the way, is still going."
8696960,8697920," It's actually still going."
8698480,8699120," Uh, all right."
8699120,8699520," So that's good."
8699520,8700080," That's kind of cool."
8700080,8705440," And we can probably even maybe make X and Y global in here as well."
8705440,8706240," So as you can see."
8706240,8709200," So yeah, why not just make it global?"
8709200,8711520," So we, we never have to pass it or anything like that."
8711520,8713840," We can even maybe define like this."
8713840,8717840," And you remember the, the Conway's obfuscation."
8717840,8719280," We can even get rid of this thing."
8719280,8724720," So it's kind of the Conway obfuscation all over again, honestly."
8724720,8726720," Uh, right."
8726720,8727680," So this is going to be global."
8727680,8730560," So here we probably want to define this thing like that."
8730560,8732400," Uh, right."
8732400,8736880," So, um, the switch can fall through."
8736880,8739920," Uh, the switch can fall through."
8739920,8741680," Or are you guys talking about something else?"
8741680,8745040," Like in here, we don't really fall through anywhere."
8745040,8746240," At least I didn't think so."
8746240,8748240," So that seems to be fine."
8748240,8749280," Everything seems to be fine."
8749280,8750640," I don't know what you guys talking about."
8750640,8751680," Uh, right."
8751680,8752800," So there's some problems."
8752800,8754240," There's some errors in here."
8754240,8755200," Where are the errors?"
8755200,8756240," Oh yeah."
8756240,8760800," So this is because we're passing x and y to the pixels function."
8760800,8761600," So can I now."
8761600,8762560," Okay."
8762560,8764000," This is a wrong file."
8764000,8765280," This is very important."
8765280,8767680," So I'm going to quickly replace this thing with nothing."
8767680,8771680," So now we're just using this kind of thing."
8771680,8772000," Okay."
8772000,8773520," Uh, right."
8773520,8775120," So let's try to rebuild this entire stuff."
8775120,8776160," And if I try to run it."
8776160,8776400," Okay."
8776400,8777520," That seems to be working."
8777520,8786560," So interestingly, interestingly, we do an x plus one on each pixel."
8787840,8790560," Can we just move it inside of the pixel?"
8790560,8792720," Because we have an access to x anyway."
8792720,8794160," Right."
8794160,8796240," You know what I'm talking about?"
8796240,8797360," Okay."
8797360,8797840," Just look."
8797840,8799200," We can just do it in the mirror, right?"
8799200,8800400," Who said we can't do that?"
8800400,8802800," So that way we don't really have to do that shit anymore."
8806240,8808320," Um, I'll accept this one."
8808320,8808480," Okay."
8808480,8812960," So if we encounter the new line, we kind of have to reset x, right?"
8812960,8815440," So because it becomes like x and we have to increment y."
8815440,8818640," We can actually also do that inside of the pixel."
8819120,8822240," And we can just check inside of the pixel."
8822240,8822640," Okay."
8822640,8825680," If you are working with a new line, right?"
8825680,8829040," If you're working with a new line, uh, you do that."
8829040,8830560," Otherwise you do that."
8830560,8832640," Yeah, we can do that."
8832640,8833120," Why not?"
8833120,8834400," Uh, right."
8834400,8836880," So, and then here we don't even have to do that."
8836880,8837920," So that's pretty convenient."
8837920,8841040," So I think we can even get rid of these kinds of things."
8841040,8842320," Uh, right."
8842320,8847440," So that I think makes it a little bit easier to work with."
8848080,8850240," Maybe, uh, right."
8850240,8853200," So this is going to be something like this."
8853200,8854720," All right."
8854720,8855120," All right."
8855120,8855600," All right."
8855600,8858640," So, uh, and okay."
8858640,8860720," So that, that actually simplifies this entire stuff."
8860720,8861280," I really like that."
8861280,8870480," And so this one is just like, um, honestly, in case of new line, print new line."
8870480,8873840," So the only reason why we needed this case is because we needed to increment y,"
8873840,8877760," but we kind of moved that logic inside of the pixel."
8877760,8881440," So we don't really need this thing anymore because it's going to be handled by this one."
8881440,8882480," Yeah."
8882480,8883680," We don't need that."
8883680,8883920," Okay."
8883920,8885280," That simplifies it even further."
8885280,8887280," Damn."
8887280,8887600," Okay."
8887600,8888480," Okay."
8888480,8888720," Okay."
8888720,8888960," Okay."
8888960,8889440," Okay."
8889440,8891760," So that's, that's already pretty small."
8894080,8901760," Um, wasn't the reset before pixel call after or rather than after?"
8901760,8903040," No, no, no."
8903040,8910800," I think it has to be after pixel call because, yeah, it doesn't really matter."
8910800,8913360," Honestly, it doesn't really matter because of this condition."
8914240,8920400," Um, here we try to get rid of the time using file."
8920400,8922160," This is a cool idea."
8922160,8923120," I, okay."
8923120,8924160," So let's give it a try."
8924160,8927360," Can I, can I actually do that?"
8928400,8931360," So if I remove time, uh, right."
8931360,8933120," So it's, it's, it's impossible."
8933120,8933440," Okay."
8933440,8940160," And then now, uh, in here, I wonder if I can just in build."
8942080,8944080," Uh, I, I didn't know about this kind of thing."
8944080,8944320," Okay."
8944320,8946720," So include time dot age."
8946720,8952080," Oh yeah."
8952080,8954880," So I probably have to have it as a separate parameter."
8954880,8957360," Um, okay."
8957360,8963200," No such file or directory."
8963200,8964800," So it doesn't, doesn't really work at all."
8964800,8968560," Um, I wonder if I can maybe just do it like that."
8972080,8973920," Okay."
8973920,8974720," Thank you."
8974720,8977600," Thank you so much."
8977600,8979360," Okay."
8979360,8984960," So, um, VIP that is actually VIP worthy."
8984960,8989600," So the entropy, uh, entropy shot your VIP now."
8989600,8989920," Thank you."
8989920,8990160," Thank you."
8990160,8991120," I didn't know about that."
8991120,8992560," That's actually a super cool trick."
8992560,8995120," I mean, and if somebody says it's cheating,"
8995120,8999280," this is the people we're talking about, right?"
8999280,9003440," So it's JavaScript developers using JavaScript trickery with this kind of stuff."
9003440,9006240," And you accusing us of cheating after that."
9006240,9011440," By the way, I'm being absolutely ironic."
9011440,9016880," Uh, this thing, the, the person who developed that is absolutely cool, right?"
9016880,9018160," It's, it's still cool."
9018160,9021120," Even though it uses like a little bit of this trickery and stuff like that."
9021120,9022080," It's still super cool."
9022080,9022880," I'm being ironic."
9022880,9023920," I'm actually joking."
9023920,9025120," Don't get me too serious."
9026480,9026880," Okay."
9026880,9032560," So obviously, obviously I've been ironic and it is still freaking cool."
9032560,9033600," It is still freaking cool."
9033600,9037040," Um, so yeah."
9037040,9043680," Let's see what we can do next."
9043680,9045440," Um, it's actually super cool."
9045440,9046240," I can just do that."
9046240,9049680," Damn, damn, damn, damn."
9050400,9056160," Um, so can we simplify it even further?"
9056160,9065200," For instance, maybe we can, can we actually embed the tokenizer?"
9065200,9067120," Damn."
9067120,9075600," So now we have actually pretty cool opportunity to just format it as a square."
9076560,9078240," Simply format it as a square."
9078240,9079680," Uh, right."
9079680,9082800," And we don't have to even worry about the pre-processor or anything like that,"
9082800,9084240," because we don't have a pre-processor."
9084240,9091120," So we can just embed the STB lexor, the C lexor, and just like do this kind of thing."
9091120,9099920," So even like in knob, we can do pretty cool thing where first we reformat the tokens of"
9099920,9101120," qBlock, right?"
9101120,9103200," We reformat the tokens of qBlock."
9103200,9104800," Then we compile the blob."
9104800,9107120," And then we compile this entire thing."
9107120,9109360," So we can actually have three steps in here."
9109360,9111440," This is super cool."
9111440,9112800," Honestly, this is super cool."
9112800,9114160," And I really want to try to do that."
9114160,9120880," Anyway, so let's actually do something like format tokens."
9120880,9123200," Format tokens."
9123200,9125600," And we're going to accept the output in here, right?"
9125600,9129680," So this is the output path and here is going to be the input path."
9129680,9133680," So yeah, let me, let me see."
9133680,9144720," So the first thing to the fam, to the fam, let's just call this function as it is."
9144720,9147280," I don't want it to create anything new yet."
9147280,9153840," But I want to see how effectively it splits the tokens and everything."
9153840,9159600," So the output is supposed to be somewhere build clock formatted, right?"
9159600,9164400," So formatted.c and if it doesn't work, we're going to just return something like this."
9165200,9170560," Okay, so let me go to Conway and steal the STB Lexa."
9170560,9174080," Don't I have Conway?"
9174080,9175520," Okay, so I'm in the wrong folder."
9175520,9179600," Actually Conway, where is the STB Lexa?"
9179600,9180320," Where is it?"
9180320,9182480," Where is the STB Lexa?"
9182480,9183440," Okay, so here it is."
9183440,9184400," That's pretty cool."
9184400,9187360," So I can literally include this and I think into the build system."
9187360,9188320," How cool it is."
9188320,9194320," Like I'm using C as a built language and I can embed a C Lexa"
9194320,9195680," into the building process."
9195680,9198720," Can your freaking CMake do that?"
9198720,9200000," I don't fucking think so."
9200000,9204480," Probably it can, but I mean, you just call the external things or whatever."
9204480,9211760," So let's include STB C Alexa dot H, right?"
9211760,9212560," So that's what it's called."
9212560,9213600," STB C Alexa."
9213600,9215120," What's the implementation?"
9215120,9217760," So here is the implementation of our nation."
9217760,9219440," So let's go."
9219440,9220560," Let's copy paste that."
9220560,9222160," How do you even use that?"
9223120,9227200," So the first thing we need to do, we need to read the entirety of the input path."
9227200,9227440," Right?"
9227440,9228800," So that's what we need to do."
9228800,9230000," So it's pretty easy."
9230000,9230640," You just do that."
9230640,9235040," So, and by the way, read entire file actually allocates memory."
9235040,9235200," Right?"
9235200,9240960," So in here we're leaking a little bit of memory, but because the build system just fires and dies,"
9240960,9242240," we don't give a fuck."
9242240,9247280," We just leaked a little bit of a memory, but then the application, you know, exited and the operating system"
9247280,9248560," actually delegated all the memory."
9248560,9250960," So I don't give a shit about, you know, leaking memory."
9250960,9254160," That's it."
9254160,9255280," Like, I don't give a shit."
9255280,9256800," I leak a little bit of memory."
9256800,9257840," Deal with it."
9257840,9260640," So I have eight gigabytes of RAM."
9260640,9264400," I paid for all eight gigabytes of RAM."
9266400,9272800," So now, how are we going to be approaching that?"
9272800,9274880," So I don't remember how to use the center."
9274880,9279040," I think I feel like I want to steal some stuff from Conway."
9279040,9281200," Let me, let me see."
9281200,9285840," So there was maybe some stuff in here."
9285840,9286160," Okay."
9286160,9287440," So it was not in here."
9287440,9288480," Image format."
9288480,9289920," So that's where it was."
9290880,9291360," Okay."
9291360,9295680," So first of all, you have to create the Lexer and you also have to allocate a little bit of memory"
9295680,9298480," for the string colliderals, right?"
9298480,9299840," So string colliderals and stuff like that."
9299840,9301680," And then you just initialize this entire thing."
9301680,9301920," Okay."
9301920,9302880," So fair enough."
9302880,9303600," We can do that."
9303600,9306160," Fair enough."
9306160,9308320," So we also allocate it on the stack or whatever."
9308320,9309760," Okay."
9309760,9315360," So afterwards, afterwards, we are going to be iterating the tokens, right?"
9315360,9317440," So we're iterating the tokens."
9317440,9322400," So that means while we do have little can, right?"
9322400,9324080," So this function should return true."
9324080,9334320," And that means in here, this is how we get the actual textual representation of little can."
9334320,9336320," So that's what's going on in here."
9336320,9339360," So we can actually steal a little bit of that."
9339360,9342240," And in here, as you can see, we're just printing all of these things."
9342240,9344000," Okay."
9344000,9344560," That's pretty cool."
9344560,9347280," So we'll give it a try if we try to run this entire thing."
9347280,9348000," And there we go."
9348000,9350480," We actually split this entire thing into little cans."
9350480,9354800," So all that stuff is split into little cans."
9354800,9357600," So how can we even format them?"
9357600,9364320," So as we iterate them, we probably want to maintain the X, right?"
9364320,9366080," So essentially this X."
9366080,9372480," So we print little can and we increase the X by the size of little can."
9373680,9380320," So interestingly, we can just stitch together."
9380320,9382560," We can integrate tokens as they are, right?"
9382560,9389600," And for example, in here, if X is greater or equal than 80, what we have to do, we have"
9389600,9392160," to actually print a new line, right?"
9392160,9397360," So it's going to be print F a new line and we reset X to zero, right?"
9397360,9398560," So that's what we can do now."
9398560,9400080," That's pretty cool."
9400080,9400800," That's pretty cool."
9400800,9401520," That's pretty cool."
9401520,9407120," But as you can see, it actually merges together these kind of tokens, which is obviously incorrect."
9407920,9413360," So we kind of need to actually store the kind of the previous token."
9413360,9420320," And if the kind of the previous token is identifier and the kind of the current token is also identifier,"
9420320,9423680," we have to kind of split them with a space, right?"
9423680,9424800," Separate them with a space."
9425440,9429280," So let's actually introduce something like a previous kind, right?"
9429280,9430240," So this is a previous kind."
9430240,9432080," Maybe originally it's going to be something like zero."
9432080,9433040," zero, I don't really know."
9433040,9434800," Okay."
9434800,9437680," So what we can do, we printed the token."
9437680,9442000," And so we can even check it in here."
9442000,9447360," If the previous kind is equal to, how do you denote identifier?"
9447360,9450720," I don't even know how do you denote identifier in STB."
9450720,9452160," So I think it's something like ID."
9452160,9454000," All right."
9454000,9457680," So where are the token kinds?"
9457680,9460160," Here they are."
9460720,9463920," CLEX, CLEX ID."
9463920,9469120," If the previous kind is CLEX ID and the current one is also CLEX ID."
9469120,9472320," But the question is, where can we get that thing?"
9472320,9476560," So it's probably somewhere in the STB Lexa, right?"
9476560,9479200," So, okay."
9479200,9481200," So I suppose that's what it is."
9481200,9486080," And the L token is also CLEX, right?"
9486080,9490320," If it's also CLEX, we just have to print an additional space."
9490720,9492480," We just have to print an additional space."
9492480,9493040," And that is it."
9493040,9495440," That is it, right?"
9495440,9502320," So, and afterwards, we just save the previous kind with L token."
9502320,9503120," L token."
9503120,9508160," So to be fair, since it's called L token, maybe it should be called previous token, right?"
9508160,9512560," So we have current token, previous token, and then you update it and stuff like that."
9513200,9513840," Okay."
9513840,9518960," So, and afterwards, I suppose maybe we can print a new line in here just in case."
9518960,9521120," So in the login, it looks a little bit nicer."
9521120,9522800," We'll see, we'll see."
9522800,9523760," So, and look at that."
9523760,9524720," It's actually much better."
9524720,9526720," So it actually splits those things."
9526720,9528240," And it's not even that much."
9528240,9539760," What if we achieve like a good reasonable size, even without the JavaScript trickery?"
9539760,9542640," That would be an ultimate win."
9542640,9550320," Not only we replicated that in NC terminal, in C, without any freaking browser, but we didn't"
9550320,9553920," even have to use this JavaScript trickery."
9553920,9556000," How about that?"
9556000,9559040," But JavaScript developers didn't expect that."
9559040,9561440," Anyways."
9561440,9565040," But I mean, this doesn't include the blob."
9565040,9567040," That's actually very important."
9567040,9568560," This doesn't include the blob."
9568560,9574560," With the inclusion of the blob, it may become kind of interesting."
9574560,9574960," Okay."
9574960,9575760," So let's actually see."
9575760,9578720," So here we have to return like a false or something."
9578720,9580720," Maybe we're not going to have a new line in here."
9580720,9582720," Okay."
9582720,9589760," So I suppose now what we have to do, honestly, we have to just quickly replace printf with"
9589760,9592640," f printf output like this."
9592640,9592880," Right."
9592880,9595440," So now it just outputs to some file."
9595440,9597600," Now we can just like redirect all of that into the file."
9597600,9601040," So, and let's just open the file."
9601040,9605760," So this is going to be a file output f open."
9606480,9611280," So this is going to be output path writing binary."
9611280,9611520," Right."
9611520,9614720," So if output is equal to null."
9614720,9618800," Can I just steal the error logging because I don't want to type it?"
9618800,9619920," I need cockpilot."
9619920,9622640," Can anybody give me access to cockpilot?"
9622640,9624480," They don't want to type this shit."
9625760,9628480," I think I'm starting to understand people who use copilot."
9628480,9628720," Right."
9628720,9630480," So sometimes you're just like, you just don't want to."
9630480,9631760," Like, I know what I want to type."
9631760,9632560," Just type it for me."
9632560,9637920," Anyways, but I know how to copy paste."
9637920,9638240," All right."
9638240,9639280," I know how to copy paste."
9639280,9641120," I can still do that."
9641120,9642240," All right."
9642240,9643520," So let me see."
9643520,9644560," So is it working?"
9644560,9645360," Is it working?"
9645360,9646400," Okay."
9646400,9649840," I could not read file clock formatting."
9649840,9655200," So it is for, that's a little bit bizarre."
9655200,9659760," So if I do something like, so this is supposed to be the output."
9662960,9663600," All right."
9663600,9665600," So what you don't like?"
9665600,9666160," I don't get it."
9666160,9667920," Could not read file."
9667920,9668800," Oh, we."
9668800,9669600," Oh, I see."
9669600,9670720," Buid."
9670720,9671840," Pilt."
9671840,9673200," All right."
9673200,9673520," All right."
9673520,9674960," Okay."
9674960,9679120," So, and then it failed because it returns false on exit."
9679120,9681200," It's not supposed to return false on exit."
9681200,9681360," Okay."
9681360,9682240," That's cool."
9682240,9684720," So if you take a look at the building here."
9684720,9685040," All right."
9685040,9686160," So here is the format."
9686160,9686400," Okay."
9686400,9687680," So that looks cool."
9687680,9689040," That looks cool."
9689040,9691520," We can simplify it even further."
9691520,9693680," Like I can see that we can simplify all of that."
9693680,9695440," It's going to be super cool."
9695440,9700640," Now, if I try to maybe put a blob in there."
9700640,9704880," Let's go into the knob.c."
9704880,9711360," So now, instead of the input, we are, instead of like the usual thing,"
9711360,9713920," we are using formatted."
9713920,9716560," And then we're compiling the block."
9716560,9716800," Okay."
9716800,9717600," Look, look, look."
9717600,9718960," We take the original clock."
9719840,9721040," We format it."
9721040,9724240," Then we take formatted and we blob it."
9724240,9724480," Right."
9724480,9727360," And then we take the blob the one and we compile it."
9727360,9729040," There is like three steps in here."
9729040,9730960," There's three steps in here."
9730960,9733200," Okay."
9733200,9734400," So let's see if it's going to work."
9734400,9737360," So undefined reference to main."
9737360,9738800," This is actually bizarre."
9738800,9740880," Like what the fuck?"
9740880,9742400," Excuse me."
9742400,9745280," So it couldn't compile the main?"
9745280,9746480," Like what the fuck is good?"
9746480,9750880," Oh, it's empty."
9750880,9753360," It's not flipping empty."
9753360,9754560," What the fuck just happened?"
9754560,9756240," Did I do a fucky-wocky?"
9757040,9759440," I feel like I did a fucky-wocky."
9759440,9761440," That's absolutely bizarre."
9761440,9766320," All right."
9766320,9768080," So if I take a look at the compilation."
9768080,9770800," So it's generated blob."
9772720,9776080," So maybe we can also say that we..."
9776080,9777360," I forgot to close the file."
9777360,9782560," Professional software developer, by the way."
9782560,9787600," I mean, like why is it not closed upon exiting the scope?"
9788640,9789920," Where is my C++?"
9789920,9792080," Where is my fucking C++?"
9792080,9793920," It's supposed to be closed on exiting the scope."
9793920,9794160," Okay."
9794160,9795680," Anyways."
9795680,9797920," So knob log."
9797920,9806080," Knob info generated as output path."
9806080,9806320," Right."
9806320,9807760," So let's go and just do that."
9807760,9809120," All righty."
9809120,9811600," Oh, fuck."
9811600,9811920," Mate."
9811920,9813760," Fuck."
9813760,9815680," 63."
9816320,9820720," So another thing we have to handle in here is numbers."
9820720,9821760," I'm telling you."
9821760,9826320," So clex_id and also clex..."
9826320,9829040," I suppose number, but we..."
9829040,9829520," Okay."
9829520,9830160," IntLit."
9830160,9833920," We can try to handle that."
9833920,9837520," So we can say..."
9837520,9839040," or..."
9839040,9842000," brief_token = int"
9845280,9851840," intLit."
9851840,9853360," So maybe it would be actually..."
9853360,9857200," good to separate that into a function."
9857200,9859280," Because like if you add another kind..."
9859280,9862160," so it will grow like quadratically."
9862160,9865200," We can do something like this."
9865200,9866880," is..."
9868240,9869520," ""unconcatable""."
9869520,9870080," Unconcatable."
9870080,9871200," Unconcatable."
9871200,9872960," And we accept L token."
9872960,9874400," El token."
9874400,9877120," We just take this entire thing."
9877120,9878320," And we just..."
9878320,9880080," do something like this."
9880080,9883360," We just return the result of that."
9883360,9884800," Which enables us to say..."
9884800,9886800," ""is_unconcatable""."
9886800,9887680," Previous token."
9887680,9888240," Right."
9888240,9888800," This one."
9888800,9890640," And this one is also..."
9890640,9892320," is_unconcatable."
9892320,9893040," Like so."
9893040,9896320," Let's go."
9896320,9897120," Okay."
9897120,9899920," So what you don't like..."
9899920,9900400," prev..."
9900400,9900640," Okay."
9900640,9901600," So this is not prev."
9901600,9903120," This is just the token."
9906080,9906480," Okay."
9906480,9908400," So it..."
9908400,9910800," sheds with a little bit of warnings."
9910800,9912400," But it compiles."
9912400,9914400," Okay."
9914400,9917120," It sheds with warnings."
9917120,9918160," But it compiles."
9918160,9919840," Let's actually take a look at this entire thing."
9919840,9921360," Let's take a look at the blob."
9921360,9922480," Okay."
9922480,9923600," That's very interesting."
9923600,9924800," So it's just like..."
9924800,9925600," bulging out."
9925600,9926960," Sort of speak."
9926960,9929600," It's like bulging out."
9929600,9930640," So yeah."
9930640,9933760," I wonder if I..."
9933760,9935120," if I run this entire..."
9935120,9936160," this motherfucker works."
9936160,9938160," Okay."
9938160,9938640," So it..."
9938640,9940640," it shifts around."
9940640,9942080," Because it's bulging out."
9942080,9943600," So it doesn't compute the size correctly."
9943600,9944720," But it works."
9944720,9946320," It actually..."
9946320,9948160," It actually works."
9948160,9952400," So we can iterate on this entire thing."
9952400,9955200," And make it smaller and smaller and smaller."
9955200,9958160," And we don't even have to sacrifice readability that much."
9958160,9959840," Because we have automatic formatting."
9959840,9963760," So that is actually kind of cool."
9963760,9964000," Right."
9964000,9967600," So I can just work on clock like this."
9967600,9968640," Right."
9968640,9969680," I can do things like..."
9969680,9971280," For example, I can remove void."
9971280,9974400," But I don't have to remove formatting or anything like that."
9974400,9976000," Because it's done for me automatically."
9976000,9978480," That's kind of perfect, honestly."
9978480,9980080," It's kind of cool."
9980720,9982800," So I don't know."
9982800,9985440," I can maybe even do things like that."
9985440,9985680," Right."
9985680,9986960," I can move font in here."
9986960,9988400," Does it still compile?"
9988400,9989680," Yeah, it still compiles."
9989680,9996000," Can I query replace font with just F to make it shorter?"
9996000,10000480," And maybe digits with D to make it shorter as well?"
10001280,10003680," So, and I recompile this entire stuff."
10003680,10006960," And if I take a look."
10006960,10011840," So the more I remove, the more the blob itself also reduces."
10011840,10014000," The more it reduces as well."
10014000,10016080," So that's kind of cool."
10016080,10020640," I wonder if I can take str and actually put it at the top."
10022560,10025280," Maybe I can even remove const or something like that."
10025280,10026800," So how is it going to look like?"
10026800,10028480," Okay."
10028480,10031040," So if I take a look at the blob now."
10031040,10032800," So it's kind of at the top."
10032800,10035920," So we can kind of control where it goes."
10035920,10037680," And is it still working?"
10037680,10038560," Is it still working?"
10038560,10039440," It is still working."
10039440,10041200," It's kind of bizarre, right?"
10041200,10042240," So because it's bulging out."
10042240,10043280," But I mean, it's still working."
10043280,10045920," That's pretty cool."
10045920,10048480," So I'm thinking, how can we..."
10048480,10051600," How can we make it more compact?"
10051600,10052800," If you know what I'm talking about."
10052800,10056800," What if?"
10056800,10060400," What if, what if, what if, what if?"
10060400,10065360," As we blobify this entire thing."
10065360,10068480," And we encounter a new line."
10068480,10071360," What if we literally put"
10071360,10075680," like an extra new line in here."
10075680,10076960," Like split it like that."
10076960,10080080," That may over complicate our encoder."
10082320,10083840," In the actual application."
10083840,10087520," But it may allow us to actually split this entire stuff."
10087520,10089680," A little bit nicer like so."
10089680,10092160," You know what I'm talking about?"
10092160,10093840," It would be nice if, you know,"
10093840,10096320," the build system actually did something like that."
10097760,10099040," We'll just split it like this."
10099040,10102000," You know what I'm talking about?"
10102000,10107120," Int to hex with font."
10107120,10111840," Int to hex, int to hex."
10111840,10115760," You mean you encode this thing with hex or something?"
10115760,10118240," Actually, encoding this thing with hex is not a bad idea."
10119120,10122640," That eliminates the problems with the escaping and stuff like that."
10122640,10126480," And that simplifies the decoding and everything."
10126480,10129120," So the decoder in the main application becomes shorter."
10129120,10134240," But at the same time, that inflates the blob."
10135120,10138480," Right, because now you have one character per byte."
10138480,10140560," If you do hex, you have two characters per byte."
10140560,10142960," You simplify the encoder."
10142960,10145360," But you inflate the blob."
10145360,10146720," So it's kind of like cancels out."
10146720,10148080," So I don't think it's a good idea."
10148080,10152160," So I think this is a good way to encode this and that thing."
10152160,10155360," Actually, let me try this idea super quick."
10156640,10157280," in the knob."
10157280,10160400," knob.c"
10160400,10161360," Right."
10161360,10165040," Essentially, right."
10165040,10175360," If I encounter a new line, I'm gonna add quote, actual new line and another quote."
10175360,10179280," Is it going to make it look a little bit nicer?"
10179280,10183360," Holy shit!"
10186640,10192240," It's not going to work, by the way."
10192240,10193520," Yeah."
10193520,10198320," So if I try to run this application, it actually, you know, conflates it like that."
10198320,10199360," It concatenates all of that."
10199360,10201280," But I mean, it's not bad."
10201280,10202720," It's not bad."
10202720,10206800," And as you reduce the size of this thing, this thing also reduces, right?"
10206800,10208240," It's just like two halves."
10208240,10208880," Two halves."
10208880,10210880," Right."
10211520,10218000," So I wonder how can we actually in the clock itself facilitate this kind of thing."
10218000,10223680," So as we print the blob, we can just extend this entire thing."
10223680,10225200," Honestly, we can just do pixel."
10225200,10226400," Right."
10226400,10235040," So we print backslash, but we can now print, you know, just a quote, just a quote."
10236320,10243600," Then actual new line, actual new line and another quote to close all of that."
10243600,10245680," All right."
10245680,10250720," I think that's what we can do now if I try to do something like that."
10250720,10252160," And if I try to..."
10252160,10252480," Okay."
10252480,10254320," So it was actually easier than expected."
10255920,10257280," Okay."
10257280,10259520," Cool."
10259520,10261840," So do we still have a limitation?"
10261840,10264720," We do still have a limitation on like how much we can print."
10264720,10268320," We still do have a limitation on how much we can print."
10268320,10269680," Now, if I..."
10269680,10271120," All right."
10271120,10272560," Okay."
10272560,10273040," Look at that."
10273040,10276400," So it prints the entirety of the source code."
10276400,10278160," All right."
10278160,10280960," It kind of..."
10280960,10284560," Because it doesn't have like this new line, maybe I should add a new line somewhere."
10285120,10285920," Just a second."
10285920,10296080," If after formatting in knob.c, where is the formatting?"
10296080,10297200," Where is the formatting?"
10297200,10298000," Format tokens."
10298000,10304000," So at the end of the formatting, I do not add any new lines."
10304000,10307680," What if I add additional new line in here after formatting?"
10307680,10310000," So is that going to be a good idea?"
10310000,10314960," So that results in this additional new line, which is fine."
10314960,10316240," Not that big of a deal."
10316240,10321840," But in a blob, it results in this kind of weird shits, which I do not particularly like."
10321840,10326080," But maybe that is fine."
10326080,10329680," Because then afterwards, there is this additional new line."
10329680,10337280," Maybe the way we're going to resolve that is actually printing that in the decoder."
10337920,10338880," I said we can't do that."
10338880,10339120," I said we can't do that."
10339120,10339120," I said we can't do that."
10339120,10340720," So after..."
10340720,10342960," Yeah."
10342960,10344720," Just put it in here."
10344720,10345840," Like additional new line."
10351680,10352000," Yeah."
10352000,10352080," Okay."
10352080,10352720," So that works."
10352720,10354080," Ah, fuck."
10354080,10359840," So..."
10359840,10364640," I don't really know how to do that."
10366800,10370960," Ah, if we're going to be doing an additional new line, that means I just have to do plus one in here."
10370960,10371120," Okay."
10371120,10371920," So that makes sense."
10371920,10373120," Sure."
10373120,10374960," Okay."
10374960,10376480," So I just want it to be like that."
10377840,10378160," Okay."
10378160,10380800," Control C."
10380800,10382400," Ed."
10382400,10387040," Quine2.c."
10387040,10389440," No, no, no."
10389440,10391200," Let's actually call it something different."
10391200,10391360," Okay."
10391360,10392000," So one more time."
10392000,10393040," Right."
10393040,10394000," So it is a clock."
10394000,10396160," It is working."
10396160,10397360," It is twerking."
10397360,10398960," Control C."
10398960,10399600," Ed."
10399600,10401920," Clock2.c."
10401920,10402800," A."
10402800,10406240," So A means that Ed goes into the insertion mode."
10406240,10409120," I select the entirety of this entire thing."
10409120,10410400," I copy paste it."
10410400,10411440," I press dot."
10411440,10414000," Dot means that it is going to save it into the buffer."
10414000,10414960," I press W."
10414960,10416240," It saves this into a file."
10416240,10417760," Okay."
10417760,10421040," So then I cut Clock2."
10421040,10423520," So here's the source code."
10423520,10428480," Now, if I do CC, I have to include like a time.h."
10428480,10431040," And this is going to be Clock2."
10431040,10434000," And I run Clock2."
10435920,10436400," Fuck you."
10436400,10443040," This is how real QuineClock has to be done."
10443040,10445760," It's not JavaScript trickery."
10445760,10446640," Right."
10446640,10447840," It's a real Quine."
10447840,10448800," Right."
10448800,10452160," And you can actually verify that it works in its ANSI terminal."
10452160,10453520," It's in ANSI terminal."
10453520,10456880," It doesn't depend on over-bloated browser or anything like that."
10456880,10460320," Fuck yeah."
10461600,10462560," It's pretty big."
10462560,10464240," It's pretty big."
10464240,10469200," But because this is a real Quine, it actually stores its own source code."
10473440,10486480," So since we're cheating, but I went to look up and apparently GCC with STD GNU 99 and GNU 11 that would cut down on escapes in the blob slightly, I think."
10487360,10487920," I don't know."
10487920,10490400," I think the escapes here are actually fine."
10490400,10492240," But anyway."
10492240,10498000," So can we actually shrink this source code a little bit more?"
10498000,10500160," That's the real question I have in here."
10500960,10502560," Can we keep shrinking it up?"
10502560,10504800," For example, one thing I was thinking about."
10504800,10509040," What if I just query replace pixel with simply P?"
10509040,10511440," So now it's P."
10514960,10517040," If I try to run it."
10517040,10520320," It's a little bit bizarre."
10520320,10522400," Okay."
10522400,10523680," So that's really strange."
10523680,10525360," Why is it rendering it like that?"
10525360,10527040," So clock."
10527040,10528160," It was actually better."
10528160,10529360," It was actually better before."
10534880,10535680," That is weird."
10535680,10538720," It's kind of..."
10538720,10540720," Yeah."
10540720,10547120," Because once as we format all of these things, it's actually not taken into account like properly."
10547120,10548800," Dang."
10548800,10554640," So I don't really know."
10554640,10556800," Maybe we can..."
10556800,10563120," What if we actually put this entire thing at the end?"
10564640,10566560," To be fair, we can actually kind of put it anywhere."
10566560,10568080," Ah."
10568080,10568960," Okay."
10568960,10573760," So it's not really visible in some places where it's not used."
10573760,10576800," But we can kind of extern char."
10576800,10580720," But that increases the size of the source code."
10580720,10580960," So..."
10580960,10582640," Hmm."
10582640,10584880," It's not."
10584880,10585680," It's SRC."
10585680,10586240," Jesus Christ."
10586240,10590320," Okay."
10590320,10590720," So that's..."
10590720,10591840," Yeah."
10591840,10592880," So it's not..."
10592880,10593520," It's not better."
10594160,10594720," Maybe it is."
10594720,10595280," Maybe it is."
10595280,10595760," Maybe it is."
10595760,10596400," Okay."
10596400,10597520," Um."
10597520,10599040," Let me see."
10599040,10599600," Let me see."
10599600,10603680," Can we maybe actually rename it to maybe S?"
10603680,10605040," In how many places it is used?"
10605040,10606880," Uh."
10606880,10608320," Yeah."
10608320,10610480," Maybe that will actually reduce it."
10610480,10617200," So we can maybe define I and DX in here."
10617200,10618880," And get rid of that."
10619440,10621840," We can actually start getting rid of the curly braces."
10621840,10622800," How about that?"
10622800,10625360," Let's actually get rid of the curly braces."
10625360,10627120," So for example, we don't need these curly braces."
10627120,10628320," I'm pretty sure."
10628320,10631040," I'm pretty sure about that."
10631040,10632000," So yeah."
10632000,10633760," There is a little bit of a bulging in here."
10633760,10636960," And it is a valid bulging, I think."
10636960,10639200," So let me take a look at the blob."
10639200,10640000," Yeah."
10640000,10642640," So I'm still kind of sure how to do that."
10642640,10648720," So one way we can do that is that as you encounter the char,"
10650160,10651920," just add a new line in here."
10651920,10656000," But that new line has to be done at the level of the formatter then."
10656000,10658000," So I'm not really sure."
10658000,10661040," Maybe it has to be reformatted one more time."
10661040,10665440," But if you reformat this thing, it's not going to be quine anymore."
10665440,10665600," Right."
10665600,10667600," So it's not going to produce itself with the same formatting."
10667600,10668560," So it's actually kind of..."
10668560,10671760," I'm not sure how exactly we're going to approach that."
10673120,10673840," So yeah."
10673840,10681920," So this is ""i""."
10681920,10685280," This is another ""i"" in here."
10685280,10687920," So that means we can kind of get rid of this thing."
10687920,10689600," But we are already reusing ""i""."
10689600,10693440," Already reusing ""i""."
10693440,10698240," I see there are spaces that are part of some digits."
10699200,10703760," because that's what happens to be at that location."
10703760,10704400," Just a second."
10704400,10708480," I see there are spaces that are part of some digits."
10708480,10711040," Because that's what happens to be at that location."
10711040,10713200," So nothing is getting colored in that case."
10713200,10719360," Maybe it would be better to emit ANSI codes to change the background color instead of text color."
10719360,10722160," So that always have something on the screen."
10722160,10722880," Okay, sure."
10722880,10725760," Let's actually try to do that."
10725760,10728480," I don't remember how to do that."
10728480,10729760," So I'm going to ask ChatGPT."
10729760,10734080," Yeah, I see what you're talking about."
10734080,10736160," It's really difficult to read this clock."
10736160,10737440," And I do agree with you."
10737440,10740000," Okay."
10740000,10745360," So here we print red text."
10745360,10750880," Text with red foreground."
10752960,10759840," How to print text with red background and black foreground."
10759840,10761600," Okay."
10761600,10766240," So yeah."
10766240,10767600," So this is probably what we want to do."
10767600,10770560," I'm going to just blindly believe this thing."
10770560,10776400," And hopefully that is going to do the trick."
10780000,10780320," Okay."
10780320,10780320," Okay."
10780320,10784000," So, but it's actually not."
10784000,10786320," Yeah."
10786320,10787920," Let's leave it as it is."
10787920,10789840," Let's leave it as it is."
10789840,10790560," I think it's fine."
10790560,10791520," It's much better."
10791520,10794800," So yeah, that's pretty cool."
10794800,10796400," All right."
10796400,10799520," So to be fair, it would be nice to commit whatever we have."
10799520,10799760," All right."
10799760,10800880," So let's actually get rid of that."
10800880,10801680," Let's get rid of that."
10801680,10802400," Let's get rid of that."
10802400,10802400," Let's get rid of that."
10802400,10803280," All right."
10803840,10804240," Right."
10804240,10806080," So what did we do in here?"
10806080,10810400," Actually working clock."
10810400,10812240," Actually working clock."
10812240,10813120," Damn."
10813120,10814240," I'm already sitting for one hour."
10814240,10816640," I think the time has come to make a little bit of a break, chat."
10816640,10818560," I think the time has come to make a little bit of a break."
10818560,10819840," So I want to make a cup of tea."
10819840,10826640," And after I made a cup of tea, we're going to continue shrinking this entire stuff down."
10826640,10828560," Right."
10828560,10830160," So there's a lot of things we can simplify."
10830160,10835280," For instance, here's the switch case that has only two branches, which actually means that"
10835280,10837360," we can do something like this."
10837360,10838640," So this is going to be 63."
10838640,10839840," All right."
10839840,10840720," So we don't need that."
10840720,10843600," And this one is going to be just else."
10843600,10844080," All right."
10844080,10845120," Is it not going to be else?"
10845120,10845360," Yeah."
10845360,10846480," So this is going to be else."
10846480,10847760," And that's basically it."
10847760,10850320," There we go."
10850320,10854160," And if I try to do that, it becomes shorter."
10854160,10855280," Right."
10855280,10860320," And to be fair, by the way, this body consists of a single statement, which means that I can"
10860320,10861920," get rid of this thing."
10861920,10863600," I can actually get rid of this thing."
10863600,10865200," Right."
10865200,10868240," And since this is a single statement, I can get rid of this thing."
10868240,10871360," Oh, no."
10871360,10873360," And this is a single statement."
10873360,10874560," I can get rid of this thing."
10874560,10876800," Yep."
10876800,10878560," Yep."
10878560,10878720," Yep."
10878720,10878960," Yep."
10878960,10879200," Yep."
10879200,10879200," Yep."
10879200,10880480," So I can do all of that."
10880480,10882800," What the fuck is wrong with me?"
10884560,10886240," Honestly, wait a second."
10886240,10886880," I can."
10886880,10888000," Can I do some?"
10888000,10889280," I probably can't do that."
10889280,10890240," Fuck."
10890240,10894720," So I need to factor all of that stuff out."
10894720,10896560," But anyway."
10896560,10896800," Yeah."
10896800,10897760," So that becomes shorter."
10897760,10898640," And that still works."
10898640,10899280," That still works."
10899280,10900640," Right."
10900640,10903280," So we're slowly obfuscating this entire stuff."
10903280,10905920," Slowly, slowly obfuscating."
10905920,10907760," Can I obfuscate even more?"
10907760,10908800," I think that's about it."
10908800,10913600," So that's everything I can do in here or in here or some other places."
10914560,10914960," Yeah."
10914960,10919040," And obf, like, this doesn't really matter where it is located."
10919040,10920720," We can always locate it somewhere here."
10920720,10921360," It doesn't matter."
10921360,10931680," So I'm thinking, what if instead of, like, sns and i's and j's, I would literally have, like,"
10931680,10936720," a pointer to a string in here, right?"
10936720,10940080," For example, I only need two of them, right?"
10940080,10941600," Because I don't want to lose one of them."
10941600,10946800," So I can do the outer one and the inner one."
10946800,10948720," And both of them are sort of, like, integers."
10948720,10955440," And essentially here, like, I don't want to collect the, like, I don't need to know the size."
10956000,10959760," So in here, I can say the outer one is equal to s."
10959760,10966480," Then while you have something in s, it's null terminated."
10966480,10969040," So that means it will stop at the end of the string."
10969040,10973680," And in here, I just, like, increment this and that thing, right?"
10973680,10979920," And now instead of, like, si, what I'm doing, I'm just referring to so like this."
10981120,10982400," So that actually makes it shorter."
10982400,10983040," I really like that."
10983040,10983600," Wait a second."
10983600,10984400," So that's pretty cool."
10984400,10991040," Which enables me, by the way, to put these things in here."
10991040,10994320," All right."
10994320,10997200," Does it still compile this?"
10997200,10997760," Just a second."
10997760,10998640," Because I'm going."
10998640,11000000," Okay."
11000000,11001120," So it doesn't compile."
11001120,11004160," So sn, yeah, because of these things."
11004160,11005840," So I need to also, you know, fix it."
11005840,11012800," s, i, s, while you basically has something in here."
11012800,11019520," So si++ and it's si, like this."
11019520,11021440," All right."
11021440,11024000," Can you simplify this?"
11024000,11024320," Okay."
11024320,11025440," This is actually super cool."
11025440,11030160," This is actually super, super cool."
11030160,11032800," Can I do anything else in here?"
11032800,11033440," I don't think so."
11033440,11034240," That's about it."
11036160,11037360," That's about it."
11037360,11039760," All right."
11039760,11042160," Okay."
11042160,11047120," So because this thing is a little bit too, too huge."
11047120,11050000," But it's fine."
11050000,11055920," All right."
11055920,11056400," So that's..."
11056400,11058880," I really like that."
11058880,11062640," Honestly, honestly, honestly, honestly."
11062640,11064160," To be fair, this kind of stuff..."
11064160,11071600," We can effectively move this kind of stuff to maybe here."
11071600,11074480," Slip one."
11074480,11078560," And we can effectively get rid of this thing at the end."
11080240,11082800," And this thing is happening at the beginning."
11082800,11085840," But who said we can't do that at the..."
11085840,11092320," Can I freaking call this something like a get display?"
11092320,11094480," Since it's a D."
11094480,11096880," Let's call it get D."
11098160,11100160," Or maybe GD for short."
11100160,11100320," Right."
11100320,11101440," So this is a GD."
11101440,11103280," So that's what we're doing here."
11103280,11104400," We do GD."
11104400,11106480," So you do GD at the beginning here."
11106480,11107680," At the first iteration."
11107680,11111600," And then you do GD after a slip."
11111600,11115840," And because this becomes a single statement, I can get rid of this."
11122320,11123360," What the fuck is this?"
11123360,11130560," To be fair, this shit is surprisingly small even when not obfuscated."
11130560,11134880," How the fuck is it so small already?"
11134880,11138080," How?"
11138080,11140240," Like, it's not obfuscated yet, by the way."
11140240,11142000," This is supposed to be human readable."
11142000,11142960," I forgot one thing."
11142960,11144320," Remove int."
11144320,11146000," Remove return."
11146000,11150720," And we don't even have to worry about returning code because this is an infinite loop."
11150720,11152400," It's not supposed to return, actually."
11152400,11154640," It's not supposed to return."
11154640,11155840," This is not obfuscated."
11155840,11157040," And it's actually bizarre."
11157040,11158000," Okay."
11158000,11160560," So let me try to do that."
11160560,11160880," Okay."
11160880,11162320," All right."
11162320,11162800," That works."
11162800,11165200," That unironically works."
11165200,11165920," That still works."
11165920,11167840," And it becomes shorter and shorter and shorter."
11167840,11170800," So I'm not sure how to make it even shorter."
11170800,11175760," So one thing we can do is maybe scale the digits."
11175760,11177280," So that's one thing we can do."
11177280,11179280," Right."
11179280,11180400," So that's one thing we can do."
11180400,11181200," So which is pretty cool."
11181200,11184320," So try to divide x and y by 2."
11184320,11186560," Where are you checking is it colored or not?"
11186560,11192800," This will make 2 by 2 pixels and will look better in my opinion."
11192800,11195680," So divide x and y by 2."
11195680,11198480," Divide, divide, divide, divide, divide."
11198480,11202640," We can give it a try."
11202640,11202960," Okay."
11202960,11206560," So divide by 2."
11206560,11207520," So this is x."
11207520,11210000," All right."
11210000,11213280," And when I do y."
11213280,11215120," All right."
11215120,11216160," So this is y."
11216160,11227040," I'm not sure if it's..."
11227040,11231600," Maybe it's fine."
11233600,11234560," Okay."
11234560,11234800," So this is y."
11234800,11237520," Let's do that."
11237520,11244560," And I see what you mean, but I'm not 100% sure how exactly to do that."
11244560,11245440," Okay."
11245440,11248640," That is fucking epic."
11248640,11255760," Can we upset this motherfucker a little bit?"
11262160,11263040," Who said that?"
11263040,11263040," Who said that?"
11263040,11264080," F x s."
11264080,11266240," Right."
11266240,11267200," So no, no, no."
11267200,11269040," Who suggested to divide?"
11269040,11272000," Okay."
11272000,11273840," Wave, wave mand."
11273840,11275520," You get the IP."
11275520,11276800," That's a good idea."
11277360,11279600," That's actually a very easy, cool hack."
11279600,11281440," Right."
11281440,11282800," So I really like that."
11282800,11283440," Thank you so much."
11283440,11284480," All right."
11284480,11287840," So I feel like one of the things we can do is..."
11287840,11291600," Can we add one?"
11291600,11293520," Right."
11293520,11300080," If I try to offset this thing like that, is it going to work?"
11300080,11304240," What did I do?"
11306560,11307760," Why it didn't work?"
11307760,11312960," What?"
11312960,11318880," So this is two."
11318880,11322720," Okay."
11322720,11332000," And this is the second one."
11332000,11335280," All right."
11336560,11340800," So that..."
11340800,11345600," So what if I subtract instead?"
11345600,11351040," So I just want to establish how you even..."
11351040,11351360," Okay."
11351360,11357600," You need to increment x and y by two."
11357600,11359840," I want to actually bring it down a little bit."
11359840,11361120," So that's what I'm trying to do."
11361920,11366160," So if I just do something like five."
11366160,11371520," I'm a little bit tired."
11371520,11371760," Okay."
11371760,11372800," So that's actually perfect."
11372800,11378560," So for whatever reason, it's actually bigger in here."
11379200,11380400," But that's fine, I guess."
11380400,11382560," I guess that's fine for now."
11382560,11384560," It looks all right."
11384560,11386000," That's for sure."
11386000,11387600," It looks all right."
11389360,11393840," So now I can maybe do four."
11393840,11394720," And then we can..."
11394720,11394960," Yeah."
11394960,11396560," It's pretty cool."
11396560,11400400," Roundest issues."
11400400,11400880," Yeah, yeah, yeah."
11400880,11402240," So that's probably roundest issues."
11403840,11407600," Because the amount of rows is odd."
11407600,11410400," The amount of rows is odd."
11410400,11411680," So that's basically..."
11411680,11412960," This is already cool."
11412960,11414960," This is already fucking passable."
11414960,11416000," Honestly."
11417760,11420480," Like, I don't know if I want to continue messing with that."
11420480,11421920," But that's already kind of passable."
11421920,11425040," So, yeah."
11425040,11427280," So there's that."
11436560,11438800," The first clock line is tripled."
11438800,11440720," Yeah, I know, I know."
11440720,11444720," It is tripled a little bit."
11444720,11448080," But I don't really know if we can do anything about that."
11448080,11452000," So, yeah."
11452000,11453840," Well, let's actually try the test."
11453840,11454240," Right."
11454240,11458640," So you have a clock like this."
11458640,11458880," Right."
11458880,11460800," So you press Ctrl+C."
11460800,11464160," Do we have clock too?"
11464160,11464880," No, we don't have."
11466240,11470160," ED clock2.c."
11470160,11471120," A."
11471120,11475360," I'm going to select this entire thing."
11475360,11477040," Put it in here."
11477040,11477600," Boom."
11477600,11478160," Dot."
11478160,11478480," Save."
11478480,11480400," Clock2."
11480400,11482560," All right."
11482560,11483440," CC."
11483440,11484320," No warnings."
11484320,11484560," Right."
11484560,11486000," So this is no warnings."
11486000,11486560," Include."
11486560,11488720," Time.h."
11488720,11491200," And then clock2."
11491200,11493680," Can you see what is going on here?"
11493680,11494240," Clock2."
11494240,11495920," Clock2.c."
11495920,11496240," See?"
11496240,11499280," That is so fucking cool."
11499280,11502720," It's like truly fucking quine."
11502720,11506000," That is insane."
11506000,11510000," Such a fucking cool quine."
11512880,11524240," You try several different widths in formatting to make it more like a rectangle."
11524240,11525200," That is a good idea."
11526160,11527440," So we'll give you a try."
11527440,11529680," So formatting."
11529680,11533440," Format, format, format, format, format."
11533440,11535840," So what kind of widths do we have?"
11535840,11537040," So it's 80."
11537040,11540960," We can maybe try to do 75."
11542080,11542640," That didn't work."
11542640,11548800," So I'm looking at the wrong one."
11548800,11549600," Okay."
11549600,11550800," So I'm looking at the wrong one."
11550800,11551920," So."
11551920,11553280," Oof."
11553280,11555360," Yeah."
11555360,11557200," So it's probably."
11557200,11558720," What about 75."
11558720,11561760," The one that I didn't see in here."
11561760,11562160," Yeah."
11562160,11564320," So that's too small."
11564320,11565520," 80."
11565520,11569680," We can actually maybe wiggle around."
11571120,11572560," That's bizarre what happens."
11572560,11575360," Yeah."
11575360,11575920," So yeah."
11575920,11576320," I see."
11576320,11577760," I see."
11577760,11578160," I see."
11578160,11578480," I see."
11578480,11582000," So for some of them it's kind of like this."
11582000,11587120," It's kind of hard."
11587120,11594000," I feel like the formatter has to be kind of aware of the blob."
11594000,11596160," and how blob is located and stuff like that."
11596160,11598560," So yeah."
11598560,11602000," But I think 80 was actually kind of good."
11602000,11602800," More or less."
11602800,11605360," 80 was yeah."
11605360,11607520," It was all right for what it was doing."
11607520,11613680," So but if we take a look at the clock."
11613680,11618240," So where is this thing?"
11618240,11622960," Can I maybe like put it in here?"
11624000,11627520," And remove that stuff."
11627520,11629440," So just these things."
11629440,11634640," Nah."
11634640,11635360," I guess that's fine."
11635360,11636240," Right."
11636240,11637280," So to be fair."
11637280,11637680," I think."
11637680,11639120," Yeah."
11639120,11640400," I'm going to call it today."
11640400,11640720," Right."
11640720,11643600," So this is already pretty good end product."
11643600,11645280," More or less."
11645280,11646480," All right."
11646480,11649040," So it's like it's already damnable."
11649040,11649600," Honestly."
11649600,11651600," It's already kind of damnable."
11652720,11655360," So I don't really know what else you can do in here."
11655360,11657280," So I think that's the thing I'm going to publish."
11657280,11660320," So it's so cool."
11660320,11663040," It could be adapted for a new timer at tea break."
11663040,11663760," What do you think?"
11663760,11666320," Maybe."
11666320,11666880," Probably."
11666880,11667760," I don't freaking know."
11667760,11669680," But yeah."
11669680,11672320," That's kind of cool."
11672320,11673760," I'm still thinking."
11673760,11674400," How would you?"
11676400,11677600," So notice this."
11677600,11678400," Notice what?"
11678400,11685120," So there is an inline assembly directive for embedding files."
11685120,11687520," Nah."
11687520,11688080," Well."
11688080,11688720," Okay."
11688720,11689040," Listen."
11689040,11689440," Listen."
11689440,11691040," We already won."
11691040,11692960," We already won."
11692960,11696800," We implemented a pretty cool thing without any cheats already."
11696800,11698960," So let's actually continue."
11698960,11701600," Let's actually continue with no cheat run."
11701600,11702000," Okay."
11702000,11704720," It's pretty cool that there's some ways to cheat in here."
11704720,11707120," But I mean we already won no cheat run."
11707120,11709440," So that's pretty cool."
11709440,11711040," That's pretty cool."
11711040,11715760," And like I'm really thinking like how can we even like..."
11715760,11724160," So the formatting of the blob heavily depends on the formatting of the whole thing itself."
11724160,11729040," So I don't think we can do much in here on the flame."
11729040,11730480," I don't think we can do much in here."
11730480,11732960," Glitchless any percent."
11732960,11733200," Yeah."
11733200,11737200," Okay."
11737200,11739760," So I guess that's it for today."
11739760,11740000," Right."
11740000,11741280," So that's the end thing."
11741280,11744240," Thanks everyone who's watching right now."
11744240,11745440," I really appreciate it."
11745440,11746160," Have a good one."
11746160,11750000," And you see you all on the next Recreation Program session with Amistad Azuzun."
11750000,11751120," All right."
11751120,11751520," Love you."
11754160,11784140," Thank you."

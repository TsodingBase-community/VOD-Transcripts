start,end,text
560,7600," Looks like we're live. Hello everyone and welcome to yet another Azuzin session."
7600,11680," Let's make a little bit of an announcement and officially start the stream."
11680,19360," So, you know, the usual stuff, red circle and live on Twitch."
19360,25200," And what are we doing today on twitch.at television website?"
25920,30560," So, today we continue developing a search engine in Rust. How about that?"
30560,33360," I'm going to give the link to the place where we do all these things."
33360,37440," Twitch.tv/sorting and I'm going to ping everyone who's interested in being pinged."
37440,40000," There we go. The stream has officially started."
40000,45200," So, today we continue developing CRUST, which is the search engine in Rust"
45200,48480," that we've been developing for quite some time already, right?"
49840,57520," So, essentially the idea is basically to give it a folder, right?"
57520,65600," And the search engine would index, automatically index that folder and start serving an http server"
65600,72000," where you can go and put a search query into the prompt and it will search within the files in that"
72000,79120," specific folder. That's basically the idea. So far it supports text files and XML files, right?"
79120,84320," A little bit of a markdown files and stuff like that, which doesn't really make it particularly useful"
84320,92240," for my case. I'm primarily making this thing for my case, right? So, one of the primary use case for"
92240,99600," this thing for me would be to actually support PDF files, right? And I've spent actually quite some time"
99600,109280," researching how can I add support for PDF files to this specific thing, right? I tried different approaches."
109280,117040," I tried to parse PDF manually. It turned out to be a huge pain in the ass and I tried different libraries, right?"
117040,125680," And all of them are very difficult to work with and they're basically a bit bloated for what I want to do"
125680,134640," because in my case I don't really need to, for example, create PDF libraries or display them, right?"
134640,140080," I only need to read them. I only need to extract text out of them. I don't even need images yet, right?"
140080,144880," So, I only need to be able to extract text out of them. But majority of the libraries that I've seen,"
144880,151280," they basically give you a shit ton of dependencies to render all that, like a Qt, Jtk, Cairo, and like"
151280,159120," everything. So, they basically are like little PDF viewers as a library, like, and why do I need that?"
159120,167120," I just want to extract the text out of those things. And I think finally, I found a library with a good"
167120,174480," balance of the functionality that I need and the dependencies that it introduces, right?"
174480,179600," So, hello, hello everyone. Welcome, welcome to the stream. So, we've got a couple of subs."
180240,186080," So, thank you so much. Start over for tier one subscription without any message, but no message"
186080,191680," is required. Junior Freitas, thank you so much for tier one subscription with the message at sodium cool,"
191680,198080," at sodium cool, indeed. Thank you, thank you, thank you. All right. So, let's take a look at this search"
198080,202880," engine, right? So, it's pretty straightforward, actually. Right? So, you can find the source code of"
202880,208240," this thing here. I'm going to copy-paste it in the chat, and for people who watch on YouTube, you can"
208240,215760," actually find it in the description, right? So, let's go. Let me start Tmux. I'm going to go to the"
215760,223200," C-Roost, and let's see what we have. So, I have docs.jl, which is the documentation for OpenGL, right?"
223200,227360," So, and what I want to be able to do, I want to be able to do run. Of course, you want to do that"
227360,232800," with the release flag to enable as many optimizations as possible, right? And then we're going to"
232800,240160," to say serve docs.jl, right? There we go. So, and it will build the project, first of all."
240160,247280," Cargo needs to build everything, and then it will start indexing the files within that folder, right?"
247280,252080," But what's interesting is that recently we implemented multi-threading, meaning that while it's indexing,"
252080,258960," we can actually open the web server and actually start searching within that thing. So, now I can"
258960,262720," search for something like texture, right? I want to find something that is relatively"
262720,269200," into texture, and there we go. We find jlbind or something like jlsl, linear interpolation, right?"
269200,274080," So, linear interpolation, and there we go. We found it, and it's already finished indexing, right?"
274080,280880," So, essentially, for quite some time it was not particularly convenient to use because you had to"
280880,286480," manually start indexing, and then wait until the indexing has finished, and only then you'll be able to"
286480,292640," serve. Now, it's just a single step. You just serve a folder, and it indices everything automatically, right?"
292640,298080," You can just like open the website and just search within this entire thing, right?"
298080,305040," So, what library have we found, right? So, we did a little bit of streams where we did research on"
305040,311120," what kind of PDF libraries we want to use, and on one of the streams we discovered this beautiful library"
311120,318880," called low PDF, which seems like whatever I actually need in here, right? So, I'm going to replace the"
318880,323600," the link here in the chat, and for people on YouTube, of course, it's going to be available in the"
323600,330400," description, right? And it seems to be like exactly what I want, right? If we scroll down, there's"
330400,336960," instantly examples, which I absolutely love. So, here we create PDF files, which I don't really need,"
336960,340720," but I mean, if it doesn't introduce that many dependencies for that, I'm not going to mind."
340720,348080," So, merging PDFs, and do we have reading PDFs? There should be something for reading PDFs."
348080,354160," You can modify PDF, right? So, for instance, you can quite easily load a PDF, right? And you can just"
354160,360880," replace the text. You can just replace the text. And if it's that easy to replace the text, I'm pretty sure it"
360880,367920," should be that easy, similarly easy to, you know, extract the text. And then you can even save this"
367920,373760," into acting. It's just like pretty straightforward. Look at that. Isn't that cool? I think it's pretty"
373760,376080," freaking cool. So, that's exactly what we need."
379920,388720," So, let's give it a try. Let's give it a try, shall we? There is even FAQ. Why does this library keep"
388720,392720," everything in memory as high-level objects until finally serializing the entire document?"
392720,399360," Normally, a PDF document won't be very large, ranging from tens of kilobytes and hundreds of megabytes."
399360,405040," Memory size is not a bottleneck for today's computer. By keeping the whole document in memory, stream length"
405040,410480," can be pre-calculated. No need to use reference objects for length entry. The resulting PDF file"
410480,416960," is smaller for distribution and faster for PDF consumers to process. Producing is a one-time effort,"
416960,426160," while consuming is many more. Truly based. This is the most based answer I've ever read in my entire life."
426160,432960," It's just like, why do you read everything into the memory? Because modern computers can afford that."
434160,443280," That's it. Conversation is over. Because your computer has 16 gigabytes of RAM. Are you going to have a 16"
443280,454240," gigabytes PDF? No. It's going to be kilobytes. It's that simple. I already like this. I already like this library."
458560,466480," That's cool. So that's precisely what we need. Anyway, so let's go ahead and try to add that. So I'm going to do"
466480,476000," cargo add. I hope we won't have to actually download the cargo index or crate index as we did like the last"
476000,487840," time. Because I don't know. So low PDF, low PDF. Please download. Okay. It's not really updating the index."
487840,492960," Okay. So it's, it's, it's resolving data or something like that. Right. It's not that much. Okay. So we can, we can live with"
492960,502000," that. Hopefully. Uh, yes, yes, yes. So, so there's some things in here. I wonder what is a POM, uh, PASA, uh, POMPASA."
502000,507760," I don't really know what it is, but anyway. So let's try to build the commutation. Right. So let's do cargo doc."
509040,517840," Um, it's not that many dependencies actually. So it introduced just 18 crates. Right. Uh, I think something"
517840,527120," like popular, when we added popular, it introduced like 115 packages, uh, or something like that. Uh, I don't"
527120,540480," quite remember. Oh my God. What the hell is going on. The chat is so lagging. I accidentally pinned the"
540480,546400," message. Duh. Well, I mean, that's, that's the pin message now. So"
549200,555680," thank you, Twitch, like it was just so lagging. I was trying to adjust my window and I,"
555680,560320," because it was lagging, the interface was jump, jumping around and accidentally, uh,"
560320,564400," pinned the message. Duh. So, duh, indeed."
564400,570880," That's a very cool message to pin actually."
570880,576320," Uh, now it's lagging even more. Yeah."
577840,583520," It's still building shit ton of dependencies in here. So it's like 120 or something."
583520,590880," Uh, how much time do you spend programming off stream? Do I look like a person who's sitting"
590880,596800," with a timer measuring how time, how much time you spend like programming? Like, I mean,"
596800,602640," it's, I might as well actually measure how much time I spend eating. Like why?"
604720,612320," Why do that? What's the point of measuring that? Like, it's just like what? Uh, anyway, so, uh,"
612320,617440," let me see what I want to do. I want to do cargo doc open. Um,"
617440,628080," so what do we have? Uh, let's try to find a low PDF, uh, low PDF. There we go. So we have a low PDF."
628080,634080," Okay, cool. So, uh, here we have just the, these examples, which is, uh, you know, the examples that"
634080,639040," we found in the, in the readme. So I'm pretty sure it's like straight up readme, essentially."
639040,641600," So to load this thing, we have to use document load."
643360,650880," I wish I had the mouse, uh, with, with not broken will document, uh, load, right? So it was low."
650880,657920," Uh, document, you can load from memory. There's a load mem, uh, and it just results in the document."
657920,663920," Okay. So what do we have in the document? It's actually kind of similar to what I saw in PDF or S,"
664560,671520," right? So it's like this dictionary trailer, uh, like objects and stuff like that. So I remember"
671520,678240," it had replace text, right? So here's the replace text. Does it have anything for getting the text?"
678240,683280," Uh, that's the most important thing. So you can get pages. Wow."
683280,691600," You can extract text. Holy shit. You can just extract text, but you have to provide the pages."
691600,698160," Is there any way to just extract everything or maybe can I get the pages?"
698160,707440," Uh, all right. So I can, uh, get the pages. It's object IDs and object IDs, I suppose,"
707440,715520," are just some sort of numbers. So it's not particularly interesting. Uh, so yeah, it's not convenient,"
715520,720640," right? So that I have to provide, uh, like pages in here, but I want to provide all of the pages."
721680,728080," Hmm. We'll see. We'll see. Okay. So let's actually give it a try. I think I need some PDF file,"
728080,735600," right? So I do remember having a PDF file somewhere in the PDF, um, Rust PDF hacking,"
735600,740240," right? So this is going to be that. Do we have Stallman? Yeah. So it's basically a Stallman PDF."
740240,746400," So let's actually go in here and, uh, this is a C-Roost and I'm going to also do it like that. So we have,"
746400,755200," what we have in here, Stallman PDF. So this is a famous, uh, you know, quote from, uh, Richard Stallman."
755200,764240," So, and, uh, let me, let me try to maybe load it up. Let me try to maybe load it up. So I'm going to go"
764240,772640," to serve. Uh, so serve. So let's introduce another subcommand in here. So this is going to be a PDF"
772640,778320," subcommand. And the first thing we want to do, we want to probably read the path to the PDF, right? So"
778320,783920," I'm going to unroud this entire thing. And if the path was not provided, we're going to say something"
783920,792720," like e-println error. No, uh, PDF file was provided. No PDF file was provided. Uh, and then we're going to"
792720,802080," just exit with non-zero exit code. Essentially, right? So this is a PDF path. So, uh, I suppose we just need"
802080,811840," to use a low PDF, uh, document, right? So low PDF document and then document load PDF path. So I suppose"
811840,817600," I will have to actually, uh, pass it by a reference, right? And this can, a thing can fail. So we have"
817600,824240," to do map error, get the error, the potential error that may happen, right? And then we're going to say"
825280,835120," error, uh, could not load PDF file, uh, PDF path, of course, for a reason described in here. There we go."
835120,840560," Uh, so we can put it in here. So this is going to be the question. Like, so this is going to be, um,"
840560,846960," I don't know, let's call it PDF. So this is a PDF path and this is PDF. And, uh, we probably want to"
846960,854960," extract some sort of information, right? So there was a way to get pages, right? Uh, so yeah, let's get pages."
855280,861040," And this is a bit tree map. And what I'm thinking is that, oh, so there's a page iterator."
861040,869680," Uh, no. Okay. So let's do PDF get pages. And I want to actually take the length of this entire thing,"
869680,875600," right? So I'm going to take the length of this entire thing and I'm going to print, uh, ln, something like, um,"
876640,885440," PDF path contains, uh, count amount of pages. All right. So I'm going to equal count like so. And"
885440,891280," I think that is basically it. So let's try to compile this entire stuff. So I'm going to do cargo build and"
891280,900720," there we go."
900720,906960," We've got some subs, uh, for ducking. Thank you so much for, um, Twitch Prime subscription with the message"
906960,915440," Rust equals love hate relationship. Yeah. So you hate Rust because it's genuinely difficult language to use,"
915440,919440," but you love it because of the peer pressure. So that's basically how it works."
919440,927280," You peer pressured into loving it, uh, but you hate it because it's genuinely difficult language to actually use."
930160,935360," Um, so we're compiling everything."
935360,945200," Uh, okay. So it doesn't compile. So let me see what's going on here. So, uh, remove semicolon."
945200,948400," Oh yeah, that's true."
948400,957440," Okay. That was the entire mistake. It required so much text to explain that you have to remove semicolon from here. It's insane."
958720,961600," Uh, anyway, so, okay."
961600,967360," So what do we have in here? I'm going to do cargo run. And what does it say? Yeah, no subcommand,"
967360,969440," no subcommand is provided. So let's provide PDF."
969440,975280," No PDF files provided. So let's provide Stallman, uh, PDF and it contains one page."
975280,983120," It in fact contains one page. So let's actually try to find like a bigger PDF. I think a good test"
983120,991360," example would be something like maybe I was actually Google up, uh, sparks of AGI PDF, right? So on archive."
991360,998080," So the latest hot, uh, you know, paper that everybody's talking about this one, I think it's a rather big,"
998080,1003200," it's like over 100 pages or something like that. That would be actually kind of cool to, to test out."
1003200,1012400," So it's basically research on like early experiments with, uh, with GPT-4. So, uh, let me, let me download that."
1012400,1018080," So I need to actually put it in chat and maybe I'm going to also put it in the references because I'm kind of referring to it, right?"
1020960,1030000," Uh, yeah. So 155 pages. Holy shit. What the fuck?"
1030000,1038240," Is that even a paper? This is a mini book. They literally wrote like a mini book about GPT-4."
1041200,1049680," Oh, holy shit. That's a lot. Anyway. Uh, so it's, uh, 16 gigabytes. Yeah. This entire, this entire paper is"
1049680,1057840," actually 16 gigabytes, right? It's actually 16 gigabytes. Uh, okay. So let me, let me download this"
1057840,1064720," entire thing. So I'm going to go to here. That's, that's really interesting. It's like, do, do people"
1064720,1069520," even usually write such a huge papers? Like I'm not a scientist. Like I don't really know,"
1069520,1076800," but that looks a lot. Like it's basically a book, right? It's basically a book. So we've got some subs,"
1076800,1082000," uh, actually gifted subs from anonymous gifter. Thank you so much anonymous gifter to, for giving to"
1082000,1091840," community subs. Thank you. Thank you. Thank you. Really appreciate that. Um, all right."
1094720,1102480," I suppose you, uh, they've, okay. So they disallow like downloading it like that or something. I don't"
1102480,1108800," know, but I mean, I can, I can just save it. Can't I? Yeah, I can just save it. So they disallow using"
1108800,1118320," like wget or something. That's kind of funny. Uh, okay. So let's move. Uh, what was that? What was the"
1118320,1125600," name at two, three, something, something, something? Yeah, there we go. Yeah. Let's save that. So this"
1125600,1134640," one should have like 150, 55 pages, right? So let's do cargo run, uh, PDF, uh, two, three, and there we go."
1134640,1143280," So I wonder how much time it will take to actually do that running. Seriously. It's taking that much time"
1144320,1155520," to actually process this PDF. Well, I mean, it's unoptimized. Okay. So let's actually try to make it"
1155520,1166000," optimized. Okay. I was hoping for a quick stream today. I thought it's going to be like a easy walk."
1167200,1174240," just slap in this library, uh, on my project and forgetting about it. Oh boy. Oh boy. Oh boy."
1174240,1193760," Just indexing the small PDF. Yeah. Don't use large PDFs."
1193760,1202880," So, and it's basically compiling everything with release. I wonder how much time it will take."
1202880,1209680," Uh, two, two, two, two. Yeah. We're going to have a lot of rants instead."
1209680,1215280," Right. So maybe let's actually bring the chat in here while we're compiling this entire stuff."
1215280,1221440," Uh, so how huge it is in megabytes. It's seven megabytes, actually. It shouldn't be that"
1221440,1224000," large. I think it shouldn't be that large."
1224000,1231760," All right. So we're running this entire thing. Uh, I can't. Okay. So, all right. That's cool."
1231760,1234560," It was, uh, reasonable speed at least."
1234560,1239200," It is a bit concerning, not gonna lie."
1239200,1246800," Right. It is a bit concerning that it takes this much time to just process, uh,"
1247360,1252240," this PDF because I can open this PDF with new PDF. Like, there you go. I just opened it."
1252240,1263760," So, and I can like browse it. So it means it's possible to just open it and start browsing it."
1263760,1273360," So, uh, I don't know, man. I don't know. Uh, all right. So I'm a little bit disappointed in this"
1273360,1277440," specific library, but maybe I don't have any choice. Maybe I just have to stick with it."
1277440,1284160," So, uh, let's see what we can do in here. Right. So we want to be able to extract the, uh, the text"
1284160,1292880," out of these things. Right. So we have the methods extract text, right? So there's a get pages. Where"
1292880,1301760," is the extract, uh, text, uh, text, I said, there we go. So, but that means we have to provide the pages,"
1301760,1309600," right? We have to provide the pages. So does it mean I have to literally construct, uh, a vector"
1309600,1315120," out of those pages or do I have to do something else? It's just like really weird to me, but"
1315680,1322480," anyway, so maybe one of the things I can do is just basically save the length of this entire thing."
1322480,1330240," Right. I can save the length of it, but maybe getting the pages itself, right, is a very expensive"
1330240,1341280," operation because, uh, it builds some sort of a tree. Uh, right. So get, uh, where is the get pages?"
1341280,1346240," There we go. So it needs to build some sort of a tree. So maybe because of that, it's not particularly"
1346240,1351040," good idea. If you want to have like a, just the length, like the amount of pages, maybe this is not"
1351040,1357120," a great way of doing that. Uh, right. So maybe that's basically the point."
1357120,1368880," So I need to go through that get object, get page and attention, get page content."
1370960,1377040," Uh, so I'm just looking for a method that's something like get pages count or whatever."
1377040,1380640," So this one is interesting. Get page, uh, content,"
1380640,1389680," contents. And this is just the idea. Okay. Let's try to extract the text, right? So let's try to"
1389680,1399920," extract the text that we're going to go and simply try to do something like PDF extract, uh, text. Um, and I"
1399920,1407360," suppose I'm going to provide just like a page, uh, page zero, right? So, and this entire thing may fail,"
1407360,1416720," by the way, right? So it may actually fail. Uh, so we have to do map error. Uh, okay. So ePrint ln"
1418560,1428560," could not extract text out of PDF path because of this error, right? So in here we have the content,"
1428560,1442480," right? So maybe, uh, I'm going to print something like this. So this is going to be println, uh, content of page"
1443040,1450480," zero, right? And we're going to just do content, right? So let's try first with a stallman, uh,"
1450480,1457600," right? So, because I don't want to just do, don't want to, um, unleash this entire thing on a huge PDF"
1457600,1463200," yet, because I don't know how much time it will take to just do that. Uh, all right. So let's go."
1463200,1469040," So this one is unused, but that's fine. We don't really care about that. And we don't really care"
1469040,1482640," about that. Right. Uh, page zero could not be found. Please don't freaking tell me. Don't freaking tell me"
1482640,1494000," that internally. You index pages starting from one. I mean, from the user perspective, yeah,"
1494000,1501040," we usually number index pages, uh, in, in PDFs starting from one. Sure. But as, as an interface"
1501040,1510800," to the programmer, sure. I mean, I don't mind. I don't mind. Uh, so let's actually, uh, call it one."
1512640,1542560," This is useless. Yo, uh, this is so fucking useless. I love it. It just concatenated all"
1542560,1554400," that shit without regards with, uh, white spaces. Wow. What the f- Oh, man."
1554400,1572480," I love it. I absolutely love it. I absolutely love it. I have no idea how to, is that like always like that? Let's actually"
1572480,1577840," try that huge, uh, huge PDF. Right. So let's see if it's going to be any better."
1577840,1586000," So as far as you know, this is primarily, yeah, it just, it just hates all of the white spaces."
1586000,1593040," It just hates all the white spaces. Uh, you know, what's funny, there is a utility called, uh, PDF to"
1593040,1600640," text, right? So there's literally a thing called PDF to text and it's written in C, but it uses popular, uh,"
1600640,1607280," as the, as the dependency, right? And the popular is a little bit overblooded for what I need. Right."
1607280,1612720," So, because it just contains an entire renderer for this entire stuff. Uh, right. So I'm going to"
1612720,1616960," actually give this link in the, in the description just in case anyone is interested. Right. So I'm going to"
1616960,1626880," put it in here, uh, PDF library, uh, another PDF library. Right. So this is one PDF library that we"
1626880,1634160," tried so far, and this is another PDF library. Uh, okay. So, and if I remember correctly, that specific"
1634160,1642800," thing, PDF to, uh, to text, right. If you just do, uh, stolen on this entire thing, I'm pretty sure it will"
1642800,1648960," work. So it didn't output anything. I suppose it created a TXT file. Yeah. It created a TXT file."
1648960,1657360," And as you can see, it actually managed to put spaces correctly. So that means it's not an impossible"
1657360,1664880," computer science, like unsolved problem. Right. You know what I mean? Uh, if I see small C program can do"
1664880,1672080," that, well, it's not really that small, uh, right. So if you do something like, uh, which PDF to text,"
1672080,1678880," right. So you basically find this path, uh, right. And then you do something like LDD, uh, you would"
1678880,1684320," notice the amount of dependencies for this entire thing. Right. So it depends on popular, uh, libjpeg,"
1684880,1690560," libjpeg, and all of these like, uh, dependencies. Not that many of them actually. Uh, right. So"
1690560,1699040," yeah. So it works with the images, right. But it doesn't really need to, but it's just like whatever"
1699040,1707520," it comes, uh, like it gets whatever it gets from the popular itself. So we can try to convert, uh, PDF to"
1707520,1713920," text, uh, something like to, uh, you know, the, this thing, right. I wonder how much time it will take."
1713920,1721600," And it's reasonably fast. So for this thing, just converting that PDF from PDF to text is faster"
1721600,1730160," than for that library to simply read and count the amount of pages. Just say, right. And if you open"
1730160,1734960," this into, I think this is actually pretty good. Like you can pro well, I mean, that's, that's kind of,"
1734960,1740960," Oh, this is the contents, right. So I suppose this is the contents. Yeah, there we go. You can even kind"
1740960,1751200," of read that. You can index that, index that. We can try to call this, uh, utility as an external thing,"
1751200,1762960," which is kind of dumb, but why not. And again, as far as I know, it uses popular. Maybe we should"
1762960,1770080," give a popular a try, right. So the main problem, a problem with popular is that, um, it it's in, uh,"
1770080,1775520," in GPL, right. So this is GPL. So that means if I'm going to link with that, a library, I have to"
1775520,1782160," release my entire source code in like with GPL, which is, I guess, fine. I don't really care. Right."
1782160,1787680," So for me, it's just like a small code that I write for myself to index this entire thing. So maybe,"
1788240,1794000," maybe that's fine. So, and I haven't tried popular really. So maybe I should give it a try. Right."
1794000,1799840," So let's go ahead, uh, go ahead and give it a try. So, because this library is kind of,"
1799840,1806640," it's kind of too slow. I'm not going to lie. It's kind of too slow. Uh, and also it doesn't really"
1806640,1812080," handle the text properly like at all. Uh, so, but the problem with the popular is that it can take"
1812080,1817840," too much time to, to do all of that. So let's do popular. Right. So let's see."
1819520,1824160," Um, okay. So that was actually faster that I expected. This is because we already did that."
1824160,1829040," Yeah. So we already have popular sort of downloaded and stuff. Um,"
1829040,1834640," MIT is freer than GPL. Yeah, it's true. But I think, uh,"
1835360,1838320," that kind of forces me to change the lightest to GPL"
1838320,1852400," so we're waiting for rust build one more time. So how are you guys are doing?"
1852400,1856400," Doesn't GPL just say that the lights might be free. No."
1856400,1861600," GPL says that you have to release your code and the GPL as well. And this is the same license."
1861600,1868560," And this is why people were calling GPL a virus, right? You just add a little bit of the GPL code"
1868560,1874960," to your project and you must actually read it on the GPL, like instantly. So this is like the main"
1874960,1881120," criticism of GPL. Um, so we'll just infect your entire code and there's nothing you can do about it."
1882400,1890560," Okay. So it seems to be done. Uh, probably have to wait a little bit more because I need to build the docs, right? Yeah."
1890560,1892320," Okay. So let's build the docs as well."
1892320,1901920," Cairo RS, of course. Yeah. That's what you need. If you want to just read the text out of the PDF, you need Cairo RS."
1904320,1917520," Um, more like Cairo, my S, our S. Okay. Comrade. Okay. So we're done. Cool. Uh, can I do open?"
1917520,1924720," Okay. So did it open? I mean, I probably didn't have to do that because it's already was already kind of"
1924720,1938160," open, but that's fine. So popular document. Okay. So can I just like new from file with the password?"
1938160,1946720," Would you look at that? You can provide the password. That's fancy. Okay. Uh, from data. So what if I"
1946720,1951680," don't provide the password? All right. So what if I don't need the password? Do I still have to provide"
1951680,1958400," that? Maybe not. I don't know. Uh, okay. So we'll give it a try. I'm actually excited. I'm actually"
1958400,1964400," excited. So maybe that, uh, will work for us and I removed all the code for the command. So I have to"
1964400,1969760," retype it again. Uh, maybe not again. I'm not going to actually parse the input. So let's actually do"
1969760,1978880," something like PDF, uh, path and let's assign something like a Stallman, uh, PDF, right? So, uh,"
1978880,1987520," maybe I need this stuff in here. Use popular and, uh, popular documents, right? So here's the popular"
1987520,1995280," document, uh, popular document from file. Uh, it's actually new from file, right? So new from file,"
1995280,2002800," uh, PDF path, right? So this is going to be that map error and we accept the error. And here we want to"
2002800,2011920," log that E print a land that will go error. Could not read file PDF path because of this stupid reason."
2011920,2019120," Why Emacs did you open that? Please never open that ever again. Uh, let PDF. Okay. That's cool."
2019120,2023680," So once we've got this entire, well, I mean, you have to provide the password, but I don't really have a"
2023680,2034000," password. Uh, right. Password. Uh, okay. Uh, password. Can I just provide it as an empty thing? Uh, we can"
2034000,2042080," try to read the source code. Um, okay. So where does it pass the password? I want to copy paste this thing."
2042080,2049280," Password invalid. So it construct possibly contains new characters. Oh, okay. So it needs to convert it to a C"
2049280,2056880," string and, uh, so on and so forth. Popular document new from file. Okay. So it basically"
2056880,2061680," passes it to a C function to understand what C function does with the password. We need to find"
2061680,2067200," this documentation, right? I'm pretty sure we should be able to just find something about it. Um, there"
2067200,2074160," we go. Popular, uh, document, a reference document stuff. Okay. So, uh, let's read what we have in here."
2074160,2077920," Creates a new popular document. If null is returned, the error will be set, blah, blah, blah,"
2077920,2087280," possible errors. Password to unlock the file, uh, with or null. Okay. So, but there is no way for me to"
2087280,2095520," actually set it as null, right? Because I literally cannot provide it as a null. Can I? There's literally"
2095520,2101760," no way to do that. Seriously. But I mean,"
2105120,2116880," maybe just empty is going to work trapped. Yeah. So you could have, I mean, who created wrappers for that?"
2116880,2119520," You could have just made it an option. Like,"
2119520,2131120," why didn't you just made instead of this just option? And that actually conveys nullable because option was"
2131120,2140000," literally created for nullable types. Maybe it ignores the, maybe, maybe. So we'll have to find out,"
2140000,2149440," but it's so weird. Right. So, uh, anyways, so it's just like, maybe I'm being OCD like that all the time."
2149440,2154400," Maybe it doesn't matter, but it's just like, it bothers me every time. Uh, I see something like this."
2154400,2161280," Okay. So what kind of stuff can, can we have in here? We can get the page, right? So, okay. But we can"
2161280,2167040," get the amount of pages. Look at that. There's literally a method, uh, get n pages. You can just"
2167040,2178800," get, uh, you know, the, the amount of pages. Okay. So get n, um, right. Pages, um, println. Uh, so PDF"
2178800,2188000," path contains, uh, count pages, right? And account is equal to this entire thing. There we go. So"
2188000,2195520," hopefully this thing is going to work cargo run, um, PDF and we don't really have to provide anything,"
2195520,2201280," right? Because I had coded this entire stuff. And of course in here, I supposed to return. Okay."
2204800,2215280," So we've got some subs. Yo, money, money. Thank you so much, Jorbin Bjerg Sverre. I hope I"
2215280,2219600," pronounced your name correctly. I'm really sorry if I didn't, I didn't speak English at all, but thank"
2219600,2225040," you so much for, for Twitch Prime. Thank you. Thank you. Thank you. Uh, I'm just realizing that I cannot"
2225040,2234320," pronounce any of the nicknames that subscribe to me. I'm sorry. Look at that. This thing contains one page."
2234800,2241760," Okay. So let's try to test that on a bigger thing. Uh, right. So it's not particularly good. Okay. So"
2241760,2248800," that means, uh, just, uh, adding empty password worked, right? So, uh, I didn't have to worry about"
2248800,2253760," this kind of stuff, but I still find this kind of interface concerning, right? So, because in the"
2253760,2260880," original, um, you know, interface, you're supposed to use null to ignore the password. And you could have"
2260880,2267120," at least reflected that in the, uh, Rust binding. And in Rust binding, it's relatively easy to reflect"
2267120,2272480," that. Just make it an optional, right? So just, just for the peace of mind, if you know what I mean,"
2272480,2280720," right? Because it's kind of like, it's a little bit confusing, right? Uh, just a little bit confusing."
2280720,2285840," So let me do the following thing. I want to parse the arguments anyways, because it will allow me to change"
2285840,2293600," the document without recompiling the entire thing, right? Let me print ln, uh, error, uh, no, uh,"
2293600,2300240," PD, um, input was provided, maybe is provided. I don't speak English, unfortunately. I wish I could speak"
2300240,2308800," English. Unfortunately, I do not. Um, how do you all speak English? It's such a difficult language to speak,"
2308800,2318800," honestly. Uh, okay. So let's give it a try. Do you auto-generate Rust bindings? No, I just used whatever"
2318800,2325360," there was on the crates.io. So I, I'm not really sure if it was auto-generated. I think it was written"
2325360,2334800," by Hans, to be fair. Um, yeah, I don't understand how people speak English yet same. Okay, so, uh, let's try"
2334800,2342880," Stallman one more time, right? So this is Stallman. Uh, this is not what I wanted, but that makes sense."
2342880,2344320," Look at that speed."
2344320,2357840," So, I was actually thinking that I'm gonna try low PDF onto the stream and I'm gonna recommend this library."
2358480,2364000," I do not recommend this library. I'm sorry. Maybe I'm doing something wrong,"
2364000,2370320," but I just did the most obvious thing that we would do for the first time trying this library"
2370320,2378560," and it didn't work. So, this library, uh, you know, popular just worked. So,"
2380560,2386800," and it's written in C, by the way. It is written in C. Low PDF is written in Rust."
2386800,2394480," Can your Rust do that?"
2394480,2399360," Blazing me fast! As fast as C!"
2402800,2414320," Yeah, sure, buddy. Anyway. So, I'm sorry, I'm joking. Rust can be actually as fast or even faster as C."
2414320,2423200," But the problem is that you have to know what you're doing. So, that's the problem with Rust. Right. So,"
2423200,2431120," it actually, um, devalues any of the, all of the benefits. Right. If you don't know what you're"
2431120,2435200," doing, you really have to understand like low level programming and need to understand what you're"
2435200,2442160," doing to actually gain the speed. Right. So, that's kind of the problem with Rust. Um, okay. So, that's"
2442160,2446880," pretty cool. What can we do in here? Right. So, I can get the page. So, I can get the amount of pages"
2446880,2454960," and I can get the specific page. I cannot get the text out of, I can just get the text. Why the freak"
2454960,2464160," this interface is so goddamn simple? I can just get the page. Okay. So, that's, that's too easy."
2464160,2474800," Too easy. Piece of cake. Yeah. Okay. So, zero and we're gonna do that. I wonder, by the way, can I index them"
2474800,2484560," by zero? Right. So, can I index them by zero? So, that's very important question. So, um, pdf get, uh, page"
2484560,2492080," zero. Right. So, and we get the page. But the problem here, it's option. Right. So, it is option."
2492080,2500480," But I think we're gonna unwrap this entire stuff. Unwrap. And, um, I'm gonna even expect."
2503680,2511360," Maybe not. Right. Because whether we have this page or not, depends on, um, only user input. So,"
2511360,2518560," that means it could be a runtime error. So, let's do the following thing. If let some page. Right. So,"
2518560,2526560," this is the page. And then we can do something like this println. Right. So, let's just simply"
2527680,2536000," to content. And the content is equal to page, uh, get text. Right. So, let me actually create a separate"
2536000,2545840," tab. So, this is gonna be a separate tab. Get text. And it can also, uh, fail to have any text,"
2545840,2551520," which is kind of interesting. Right. If you don't have any text, you could have just returned an empty"
2551520,2559600," thing in here. Yeah. That's fine. So, let's do this thing. Get text."
2563200,2572320," And here we can do ePrintln. Right. Error."
2572320,2587360," PDF path does not have page. Let's call it something like n. Right. And let's create n equal to 0. And"
2587360,2594960," let's put n in here. There we go. I think that's, that's very good. Uh, okay. So, this one didn't"
2594960,2602080," work. And here, I suppose, what I have to do, I have to just return error. Uh-huh. So, we're gonna have in here."
2608240,2614080," It just returned the text with spaces and new lines. What the fuck?"
2614080,2619680," It's, it's like exactly what I need."
2619680,2628800," And it also has this new lines and stuff like that. But this is because I just printed like a debug print."
2628800,2634240," Right. I'm pretty sure if I, uh, just do something like this. By the way, I wonder if I can do a little"
2634240,2642160," bit of a monadic bind. Yeah. So, there is an operation called and then. All right. So, then I"
2642160,2648960," can do page. And then, within the page, I'm gonna do get text. Right. So, in here, I can have the content."
2648960,2658080," And then, I can just print the content. Like this. So, as you can see, get page returns an option. And get text"
2658080,2664720," also returns an option. So, you can kind of chain them together with and then, which is similar to bind"
2664720,2671040," uh, operation in monad. Like in Haskell. Right. So, you can do, uh, monads in, in Rust. Right. So,"
2671040,2677680," Rust does have monads. Uh, right. So, let's actually try to print it properly and see how it goes. Get page. Um,"
2678880,2688320," that one actually kind of weird. Can it return reference to function page? Huh. That didn't work."
2688320,2699760," Hmm. To function. This is not really a function, is it? Because if you get the page. Right. So, you get page."
2699760,2708320," You get popular page. All right. So, maybe there is no, and then, uh, for option. I'm pretty sure there is,"
2708320,2715600," and then, for option. Or maybe I'm just going crazy. Um, so, let's do Rust Up Dock."
2715600,2728000," PDF Monad. Yeah, exactly. It's a PDF Monad. Uh, let me take a look at the option."
2730480,2737200," Okay. Uh, yeah, there isn't then. Right. So, when it accepts a function, that accepts a value,"
2737200,2743360," uh, original value of that thing and returns a new option. And that's precisely what we expect in here."
2743360,2749120," And then, we can get the text. Uh, so, I don't really understand what the hell is going on in here,"
2749120,2759040," honestly. Returns a reference to data owned by current function. Um, I suppose,"
2759040,2766720," get page returns an actual, yeah, it just, like, moves the value out of this thing. And then,"
2766720,2772880," this thing returns a reference. So, I suppose it just doesn't live long enough. Right. So,"
2772880,2780400," the page object simply doesn't live long enough. Uh, yeah. So, it needs to be owned somehow, unfortunately."
2781760,2788240," Uh, so, but I suppose the easiest way would be, like, I thought to demonstrate pretty epic monadic"
2788240,2796080," bind and the lifetime screwed me over. Lifetime, lifetime screwed me over. Okay. So, that's fine."
2796080,2803280," So, we can do something like this then. Page. And then, uh, maybe I'm gonna just do something like this."
2803280,2812720," Right. So, uh, if let some content, uh, page get text. All right. So, we can just do something like"
2812720,2819040," this. So, that's the easiest thing to do in here. I'm pretty sure. So, and that should also print new lines"
2819040,2828320," and stuff like that. There we go. It did work. Right. It did, in fact, work. So, yeah. Poplar is actually"
2828320,2838720," precisely what we need. But unfortunately, we have to pay a huge price. So, that's basically the"
2838720,2843200," dependencies that we introduced. We didn't have those dependencies before, by the way. So, let me"
2843200,2849440," actually stash everything we have right now. Right. So, I stashed everything and just do cargo tree. Right."
2850560,2858800," So, this was the cargo tree before I introduced Poplar. Just to read PDF files. This is the dependencies"
2858800,2868400," that we have. Like, before we try to read PDFs. Right. So, uh, right. So, and now I'm gonna do it"
2868400,2874480," one more time. So, this is the dependency tree that we have now. Just by introducing one single thing."
2875040,2880640," People don't think about it too much. Right. So, like, especially in the web world, you just slap,"
2880640,2888800," like, a framework. And you think it is free. It is freaking free. And then you get this. So,"
2888800,2897520," this is just one single small dependency to add a support to a new format. Like, without support for"
2897520,2904480," that format, with that support for that format. And here's an interesting thing. So, this is my problem."
2904480,2911840," Right. We don't need even half of any of this. We don't need majority of this stuff. Because some of"
2911840,2918640," this stuff is like Kyra. Right. Do you guys know what is a Kyra? Right. So, if you google up, what is a Kyra?"
2918640,2930320," It's a vector graphics library. We are just trying to read the text. Why the do we need vector graphics"
2930320,2938640," library to just extract some text out of the PDF? The reason why we depend on that is that because"
2938640,2947360," popular is basically a PDF viewer as a library. It was designed for making your own PDF viewers."
2947360,2951600," You just basically make a wrapper around it. You create a window. You just use this library. And there"
2951600,2957120," you go. You get a PDF viewer. Right. So, that's why we have a lot of stuff that is not needed in here. And"
2957120,2961440," that's why I was spending so much time researching. How can I just work around that? Because I don't even"
2961440,2968000," need half of this stuff. But it's just like there's no way. Other alternatives are just like either slow"
2968000,2974960," or broken or something like that. So, that's the only thing we have. Right. So, just reverse engineer to get"
2974960,2980880," what you want. Yeah. I was thinking about that. I was thinking about just maybe go inside of this"
2980880,2985520," library and just extract only the parts that I need. So, yeah."
2985520,2995200," It is what it is and it isn't what it isn't. So, we're gonna just use that and then maybe I'm gonna just"
2995200,3000000," like research how we can get rid of the majority of the stuff. But yeah. So, I just want to have at least"
3000000,3006880," something working already. So, anyway. So, I think I want to make a small break. Right. I want to make"
3006880,3012560," a cup of tea. And after a break, we're going to try to integrate this entire thing into the industry"
3012560,3019520," process. Right. So, because we have like a function that does the dispatching depending on the extension"
3019520,3024240," in here. Right. There we go. So, we have a special function called parse entire file by extension."
3024240,3029520," It checks the extension and depending on the extension, it just like dispatches to different"
3029520,3036000," passes. What we'll have to do in here, we'll have to add PDF in here. Right. Parse entire PDF file."
3036000,3042800," File path. And this function, the implementation of this function will use popular. It will just extract"
3042800,3048560," all of the text out of the PDF and just pass it to like the rest of the industry. Right. So,"
3048560,3054480," this is how we're going to hook up a new format to the IndyServe. And we'll see how it goes. Right. And"
3054480,3062160," we'll see how it goes. Okay. So, let's make it back. And all right. So, let's go ahead and implement the"
3062160,3071360," parse entire PDF file. Right. So, it's going to have the same signature as these things. Right. So, it's going to"
3071360,3076240," accept the file path. Right. Which is going to be a reference to path and should return"
3076240,3084160," result string or nothing. Right. So, essentially, at the place of error, we return union because"
3084160,3088960," the error is supposed to be handled within this function. Right. Because we know that the color of"
3088960,3095760," this function is not really concerned with the exact error that happened in here. Right. It's only"
3095760,3101600," concerned with the fact that error has happened. So, we only care about bubbling it up. Right. So,"
3101600,3107760," because this is a business logic, this is not the library, which has to be super generic, as generic"
3107760,3113280," as possible. That's why we don't really, we are not really concerned with explaining to the color of the"
3113280,3117120," function what exactly has happened. Right. So, because we know that the color will not care."
3117920,3125040," So, okay. So, what we have to do in here, we have to just basically read the file. Right. So, we're"
3125040,3132400," going to use poplar. Maybe I can even just copy paste this entire stuff. Yeah, there we go."
3132400,3140080," So, we read the file and if the error has happened, we just return that. I'm really like happy how I can"
3140080,3145920," just copy paste this code without really worrying about adapting different kinds of errors. Right. Because"
3145920,3151280," I consume errors, like log errors and forget about them. Right. Because of that, the pieces of code"
3151280,3156960," becomes really copy paste between different contexts and stuff like that. Right."
3156960,3169120," Okay. So, yeah. Somebody asks a result unit and not option. And this is because"
3171040,3177120," result is not really returnable from here. So, there was a reason for that. I already forgot why"
3177120,3183120," I did it like that. So, I remember like option was not particularly convenient to use."
3183120,3186000," Right. But I already forgot why."
3186000,3192320," Uh, so, and that's why I'm using result."
3193520,3198880," Uh, which is kind of funny. It's one of these cases when I essentially notice that,"
3198880,3202560," oh, I could have just done it like that. Right. I could have just used option,"
3202560,3208720," but I don't remember why, when I, like, why I didn't use option. I will start converting my code"
3208720,3214960," to option and then I will go, ah, that's why. Right. And then I, uh, gonna continue, uh,"
3214960,3219600," developing and then I forget again. It's one of those cases. It happens to me quite often. It's just like,"
3219600,3226800," I do very, like, like a thing in a very specific way, but I don't remember why I do that unless I"
3226800,3233040," try to refactor it and then I remember and then I forget again. Right. It's just like, I do it like"
3233040,3237440," that, but I don't remember why. There was a reason and I couldn't be bothered to remember why."
3237440,3247600," Um, maybe leave a comment. I'm not sure if I care about Rust that much to actually leave comments"
3247600,3253520," about this kind of stuff. So, uh, okay. Wait a second. So I'm, I'm doing something,"
3253520,3261360," something weird here. Okay. Um, so let's continue. Um, so we read the PDF."
3261360,3270960," So get pages number. So I have to go, uh, back here."
3273920,3279600," So I need to get the amount of pages, right? So I need to get the amount of pages,"
3279600,3291520," uh, get end pages, right? So, um, get n pages."
3291520,3300160," It just returns this entire thing. So that means I could just do zero to n, right? So this is zero to n"
3300960,3308480," and I can start getting the pages. If let some page, which I suppose is going to be present,"
3308480,3316240," right? I would expect it won't be able to get the page if we are outside of the range, right? So if"
3316240,3322960," you try to do something like, uh, get page n, I'm pretty sure it won't work because it's out of bounds,"
3322960,3328320," right? So it's basically out of bounds. Maybe because of that, it makes sense to just put as, uh, expect in"
3328320,3343200," here just like literally unwrap, uh, can I say I is, uh, within the bounds of page of the range of the page,"
3343200,3352000," right? So sometime at end it will give us the page. Uh, right. And then we should be able to get the text,"
3352560,3360160," right. But if we can't get the text, maybe we shouldn't care. Right. So if, uh, let content,"
3360160,3370720," right. So we're going to put it in here. Uh, right. Emacs is slow. What the is going on? It's just like"
3370720,3378320," very laggish, right? It's just like, it doesn't respond quick enough on my keystrokes. Okay. So content,"
3378320,3383840," I need some, some sort of a buffer in here. So, uh, I'm going to call it results. So this is a string"
3383840,3391600," new and I wonder if I can just do append. I don't remember what, how it is. Yeah. So there's a push"
3391600,3401280," str. All right. So there's a push str and I want to push the content in here. Right. So push str and just in"
3401280,3409760," case I'm going to also push similarly, like, um, a character in here just to separate different pages"
3409760,3416720," with extra space. Right. Because I remember that I had a problem with XML in here that if you don't do"
3416720,3422560," that, some of the words get concatenated. So they create tokens that are not there. Right. So just"
3422560,3427200," like glues together words that shouldn't be together. Right. So just in case I'm going to just"
3427200,3436720," put the space in here. So, uh, let me try to see what we have to do next. Right. So this is going to be"
3436720,3455440," built. Okay. So, uh, no PDF path. So we're going to do file path in here. Hmm. So this is a file path."
3455440,3465520," What else do we have? Hmm. So it cannot be formatted. So I suppose what I have to do is file path equal"
3465520,3484800," file path display. Okay. That's cool. Uh huh. So probably I don't remember if expect actually"
3484800,3492960," like kind of works. Right. So let me see. Expect, I think it's not going to work because it's not a macro."
3492960,3501840," right. Uh, just like the fact that they have to keep, um,"
3501840,3514400," isn't it option? Wait, option doesn't have expect. Uh, this is because I'm looking at the wrong."
3516640,3523360," Yeah. I'm looking at the wrong. So yeah, it, it is basically just accepts tricks. So I have to do something like,"
3523360,3535360," uh, format, something like this. There we go. Uh, okay. So let me, let me see. Uh, so this one has to be something"
3535360,3556320," like this. So that should basically work already, right? So this is the entire, believe it or not,"
3556320,3564480," this is the entire implementation, right? Must be. It must be the entire implementation. So how can we test all of"
3564480,3572240," that? We can create a separate folder with PDFs, right? So, and that folder is going to contain, uh,"
3572240,3580720," this thing, right? So let me remove this entire stuff and the installment one, uh, right? So I'm gonna move it like this."
3582320,3590160," Uh, and here we have just the index Jason. So I suppose I want to remove that. Um, yeah. And I'm gonna run"
3590160,3602160," serve PDFs. There we go. So popular, uh, get page assertion, something, something. Um, so zero is within"
3602160,3611360," out of bounds. Okay. So something wrong has happened. Uh, parse entire PDF file. So the main problem here."
3611360,3616640," Yeah. Okay. So I see that's actually pretty cool. Uh, right. So let's do that one more time."
3616640,3627280," Okay. So did it index everything? Hopefully. So in the same, the, uh, yeah. Okay. So it finished in"
3627280,3635920," the scene, which is nice. Can I now search for, uh, Linux? Okay. So it's funny that even for Linux,"
3635920,3644800," it actually ranked the GPT, uh, thing higher anyway, to be fair, GPT is such a huge, uh,"
3644800,3650640," PDF that's like, I'm not actually surprised. Uh, one of the things we can try to maybe do,"
3650640,3657840," we can put it inside of the, uh, of the, um, docs GL, right? So we can put it inside of the docs GL."
3658480,3663760," Uh, right. So to, to be able to compare with the rest of the, uh, the document, right?"
3663760,3671040," So maybe I'm going to call it, uh, sparks of AGI, right? So this is going to be sparks of AGI."
3671760,3681760," Uh, right. So, because the, the search engine only displays the, uh, only displays the file names, right?"
3681760,3688880," Right. And let's see how it's going to actually work with all that. So, I mean,"
3688880,3694320," I don't have to really wait. I can just rephrase this entire thing and, uh, linear interpolation,"
3694960,3701280," right. Uh, interpolation. So we can see that. Okay. So it's stuck on some big document,"
3701280,3706720," which is GLXML. So this is one of the problems that I'm aware of, right? So basically it blocks"
3706720,3712480," on each document. So, and while it, in this is one particular document, you can't really do anything."
3712480,3720240," Right. If I do GPT, uh, it still doesn't know anything about GPT, GPT four, maybe, uh,"
3721680,3729680," intelligence, right? Still doesn't know, uh, did it index the PDF? Maybe it's still in the next,"
3729680,3735520," the PDF. So we'll have to wait a little bit until it indices everything. Let's just, let's just wait."
3735520,3746480," I should have actually, okay. So it follows the sparks of AGI, uh, which is nice."
3751680,3760480," RW log over mutux could be a solution. How? If you have two threads, what's the point?"
3760480,3770560," I mean, one thread always writes and another thread always reads. How RW log is going to help in here?"
3770560,3777600," Uh, I thought it actually helps when you have several readers. Like we don't have several readers."
3778560,3785760," We have only one reader and only one writer. So I don't know. Like, I mean, I'm not a professional"
3785760,3792560," with multi-threading, but I have a feeling that it's not going to make any difference. Right. So, okay."
3792560,3805840," Intelligence, uh, artificial. There we go. GPT. It found GPT. So if I do linear interpolation, right. It finds the"
3805840,3812800," interpolate mix. And if I do GPT, it finds the sparks of AGI. So it actually ranks the documents relevant,"
3812800,3818080," including like PDF and stuff like that. This is actually kind of cool. Yo, what the fuck."
3818080,3829120," I think we need to add more things in there. So let's actually add another GPT, uh, GPT, uh, thingy."
3829120,3832800," Okay. Attention is all you need. Right."
3832800,3843120," So this is another legendary paper, uh, right. So you can find it in here. Uh, this is basically"
3843120,3848960," the paper that started it all as far as I know. Right. So it basically introduced the, um, you know,"
3848960,3857680," generative pre-trained transformers. So I'm going to put it in here as well. Uh, so let's download this"
3857680,3867040," entire thing. Mm-hmm. Is it as big as the sparks of AGI? No, it's only 15, uh, 15 pages. Not that much,"
3867840,3879360," which is okay. Uh, right. So let's do something like, um, attention is all you need. There we go."
3879360,3888080," So we don't want to do this entire thing. Um, so, and let me do the following stuff. So I'm going to do"
3889360,3909040," move. Attention, uh, move it in here. There we go. Uh, so let's try to serve it one more time."
3913840,3926880," Um, so yeah, this is GPT, uh, attention, right. Attention is all you need. And also look at that."
3926880,3932560," It also includes sparks of AGI as well, right? If you just put GPT in here, it only includes like"
3932560,3938320," sparks of AGI. For some reason, it doesn't, doesn't really include the attention. Does attention is all"
3938320,3944320," you need even include GPT? All right. So let me, let me see. Let me actually search for this kind of stuff."
3944320,3953200," It doesn't, right? Attention is all you need. It doesn't include the, the, um, the thing GPT,"
3953200,3960480," the sequence of, uh, characters GPT. It's kind of interesting, right? But, uh, just attention"
3960480,3966880," actually brings up like both of these things, right? That's actually kind of cool."
3968320,3978720," I like that. Mm-hmm. Attention is specifically the T in GPT. Transformer. Yeah. Uh, Transformer."
3978720,3988560," Model. It put attention is all you need in here, but yeah, Transformer actually, uh, yeah, brings up the"
3988560,3996560," OpenGL stuff, right? So the reason why I test all of that is because I want to be able to mix up, uh,"
3996560,4001440," documents with, uh, different topics, right? Because I have a lot of different PDFs, uh,"
4001440,4006800," HTMLs and stuff like that on different topics, like completely opposite topics. And I want to be able to"
4006800,4012320," throw them into, into a single folder somewhere, right? And then search between them. So, and as you"
4012320,4017920," can see, this particular thing works well, right? So again, OpenGL related stuff like, uh, frame buffer."
4017920,4022960," All right. So it gives me the frame buffer, OpenGL related stuff. If I want to do something like GPT,"
4022960,4029840," it brings, uh, brings up the, uh, the white papers. So that means I can mix up OpenGL documentation with"
4029840,4035360," GPT papers, just mix them up and search between them quite easily, right? Because this entire system"
4035360,4039040," actually, you know, distinguishes different topics and stuff like that. So that's kind of cool."
4039840,4048240," Um, so you write this program to sort, sort out the mess that is your file system, not really sort out,"
4048240,4056480," but actually preserve the mess. So I'm making the problem worse than it is already. Uh, okay. So it"
4056480,4061680," would be kind of nice to have some other papers in here, but what kind of papers does anyone have any"
4061680,4069280," interesting papers on different topics? I can think of something like, uh, arena allocator. So let's"
4069280,4076000," actually go back in time. Let's actually go back in time and look at some old papers, right? So this"
4076000,4080880," is a modern stuff already, but let's take a look at something very, very old from 70s or something like"
4080880,4088480," that. So here's the region arena allocator and it was introduced in one of these papers. Uh, right. So is"
4088480,4094720," there, I don't know, fast allocation, deallocation. I think this one, but I'm not quite sure."
4094720,4104480," Um, okay. Can I just download the PDF?"
4109600,4110160," Maybe not."
4110160,4122560," So another, I remember there was another paper on bit, all the problem with old PDF papers is that, um,"
4122560,4127520," they are usually scans. They're usually scans."
4138320,4143440," what every programmer need to know about memory. Um, I don't really know what is that, but let's"
4143440,4144320," actually Google it out."
4144320,4155120," What every programmer need to know about memory from FreeBSD. I never heard about this paper. What is this?"
4155120,4160880," Yo, maybe I should read that. Yo!"
4162160,4165840," What the fuck? Okay. So let's actually download that. Thank you."
4165840,4170640," I never heard about this paper. Is that like a legendary paper of some sort?"
4170640,4177920," Uh, yeah. Okay. So let me actually put that in the description for, uh, for anyone who's interested."
4177920,4184480," So maybe, uh, might as well actually, um, uh, do something like PDF, uh, papers."
4184480,4190000," Um, PDF papers. Right. And here we're going to do something like this."
4190000,4192320," Um, right."
4199200,4205200," It's something super famous. I've never heard about it. Right. So that's kind of interesting."
4205200,4210160," Uh, CPU memory. Okay. Let's try to re-index this entity, I think."
4219360,4224240," What is it talking about? Talking about RAM, some other stuff."
4224240,4232560," Okay. So it finished, uh, this entire thing."
4232560,4239040," Oh, right. So if I put RAM in here, yeah, it's CPU memory."
4239840,4249200," GPT. Sparks of AGI. Transformer. Uh, it's not going to find anything. Attention. Uh-huh."
4249200,4251840," What's funny is that it also contains attention."
4251840,4256800," CPU memory. I wonder what exactly about the attention is in there."
4256800,4260000," Uh, muptf. Attention."
4260000,4263120," Does it contain? No, it doesn't really contain that."
4263120,4266160," So I don't know why it actually brought it up, but it brought it up anyway."
4267200,4272640," Um, I never read it actually too long."
4272640,4279360," It's like with the, uh, with the Knuth books, right?"
4279360,4284640," So the Knuth books, they are famous because you're supposed to buy them."
4284640,4289200," You're supposed to put them on your shelf, but you're not supposed to read them, right?"
4289200,4294160," So you're supposed to just have them lying around, right?"
4294160,4298240," So to look like you're a professional software developer and you know what you're doing."
4298240,4303840," But nobody reads those books. Like, I mean, there's like a four like thick books."
4303840,4306880," Nobody got time to read all of them. Like, come on, right?"
4306880,4312720," Uh, so that's, that's the same thing in here."
4312720,4313760," So, but that would be interesting."
4313760,4318400," So I'm gonna actually put that into my like to-do list to read about this kind of stuff."
4318400,4324400," My Knuth book is under the speaker too, too much for me."
4324400,4328640," Yeah, it's actually very informationally dense as well."
4328640,4332640," Right. So it's just like, it's also very difficult to read."
4336400,4339200," There's a Knuth covers to buy with just empty pages."
4339200,4343920," Goddamn."
4343920,4345120," Imagine like,"
4345120,4348000," dedicating your entire life."
4348000,4352480," And he pretty much dedicated his entire life to writing like these books,"
4352480,4354000," like detailed books about,"
4354000,4358000," you know, computers, programming, and developing software."
4358000,4360400," And nobody reads that."
4360400,4363600," Right. It's just like, nobody got time for that."
4363600,4365600," I'm sorry, we're living in a different age."
4365600,4370800," The age of internet, you know, Google searches and GPT."
4370800,4372160," It's just like, no."
4372160,4375600," Nobody's gonna read that."
4375600,4377200," But maybe somebody's gonna read that."
4377200,4380800," I mean, we can train language models on those books."
4380800,4383120," Yeah, so they're useful."
4383120,4385840," Yeah, because you can now like train a language model"
4385840,4388480," and then just ask the language model what's in the book."
4388480,4389280," Right."
4389280,4391440," So, because..."
4393040,4394080," Yeah, that's actually a cool thing."
4394080,4400640," Because now we can basically query knowledge as a database."
4400640,4401360," Right."
4401360,4403840," Imagine that you have a huge database,"
4403840,4406160," like a PostgreSQL database."
4406160,4406800," What are you gonna do?"
4406800,4411200," You're gonna read each individual table and each individual row one by one"
4411200,4415200," to find the necessary information?"
4415200,4416000," Seriously?"
4416000,4417120," Would you really do that?"
4417120,4418320," No."
4418320,4420240," You would write an SQL query."
4420240,4422880," The same with human knowledge."
4422880,4427120," We created databases of human knowledge called LLMs."
4427760,4430720," So, nobody's gonna like read an entire knowledge."
4430720,4432880," You just write a query to that knowledge"
4432880,4434880," and you extract only the information that you need."
4434880,4438000," That makes sense to me, I think."
4438000,4439200," Yeah."
4439200,4443360," So, why reading books if you can query the books?"
4443360,4447920," You have a specific problem and you query the database, the knowledge database, which is LLM."
4447920,4451280," Makes sense to me."
4456960,4464160," So, I think the time has come to do a committee, a committee and maybe even a pushy-pushy."
4464160,4465760," That's for sure."
4465760,4468960," So, we're capable of parsing PDFs."
4468960,4474160," I wish I had more PDFs in here, but it is what it is."
4474160,4476000," So, what the hell is going on in here?"
4476000,4477360," Oh, yeah."
4477360,4477680," Okay."
4477680,4479520," So, I'm in the wrong group."
4479520,4479840," All right."
4479840,4482480," So, because I look at this repo and like, what the fuck is this?"
4483360,4486080," It's neither master nor main."
4486080,4487200," It's a main line."
4487200,4491440," I never call my branches like that, but this is a completely different repo."
4491440,4492960," This is a repo for DOSGL, right?"
4492960,4494080," So, this is not my repo."
4494080,4495680," Anyways."
4495680,4498080," So, what I wanted to do in here."
4498080,4499440," Right."
4499440,4501360," So, and this is basically the change, right?"
4501360,4509120," So, this was an entire change to add, you know, support for a different format."
4509120,4509920," Right."
4510480,4517120," So, but the amount of dependencies that we added is magnitudes bigger than we had before."
4517120,4518480," Right."
4518480,4522480," So, you may think that the only change we did is this."
4522480,4526720," And that's why this kind of deceives you, doesn't it?"
4526720,4527680," Right."
4527680,4529920," So, because this is the entire change."
4529920,4533760," And you think, oh, yeah, so the dependencies are actually free."
4533760,4534000," Right."
4534000,4537120," You just add another dependency, just a little bit of code, and you're good to go."
4537120,4542160," The dependencies are literally free, but that is very, very deceiving."
4542160,4542800," Right."
4542800,4545280," So, let me again reiterate."
4545280,4548800," So, this is the dependency tree before the change."
4548800,4551760," This is the dependency tree before the change."
4551760,4552960," Right."
4552960,4554720," Then we made the change."
4554720,4555280," Right."
4555280,4556880," So, we just made the change."
4556880,4559200," Not that, not that much changed."
4559200,4559600," Right."
4559600,4561280," So, just a little bit of code."
4561280,4563280," And this is now the dependency tree."
4563280,4566720," So, this is how it looks like now."
4566720,4572720," So, this is the source of a real danger."
4572720,4576800," This is how your node modules grows up uncontrollably."
4576800,4582320," Because you only pay attention to the source code that you're modifying in your project."
4582320,4582800," Right."
4582800,4586880," You see the modification and you think, oh, it's a very small change."
4586880,4588400," It costs nothing."
4588400,4590400," No, no, it doesn't cost nothing."
4590400,4591280," It costs that."
4591280,4596880," As soon as you start seeing this kind of stuff, you start rethinking what the fuck you're doing with the dependencies."
4597760,4598400," Right."
4598400,4611040," So, I think the main problem, the main cause of this like NPM disease is that because people just don't see the cost that they're adding."
4611040,4612720," And it piles up over time."
4612720,4615280," So, of course, right now it's not going to cause that much problem."
4615280,4620960," But imagine like every small little feature is going to add this amount of dependencies every single time."
4620960,4624080," Just how quickly it's going to go out of control."
4624080,4625760," I don't know."
4627760,4631520," So, anyways."
4631520,4636560," And you can also see the amount of dependencies in here in the log file as well."
4636560,4642800," So, and by the way, I'm not saying that using dependencies is something bad."
4642800,4643040," Right."
4643040,4645280," Because people are thinking in black and white."
4645280,4645520," Right."
4645520,4646960," So, either good or bad."
4646960,4647360," No, no, no."
4647360,4650560," I'm not saying that using dependencies is bad."
4650560,4654640," I'm just saying that you have to be aware of the price that you're paying."
4654640,4655840," Right."
4656640,4660560," So, if that's a good price for like the problem that you solve, then yes."
4660560,4664400," But then quite often people just ignore the price completely."
4664400,4665200," Right."
4665200,4667440," Okay."
4667440,4670160," So, what we're going to do in here."
4670160,4674400," Add PDF files support."
4674400,4674880," Right."
4676720,4676960," Okay."
4676960,4678640," So, I'm going to push that right into the repo."
4678640,4679360," And there we go."
4679360,4681520," We have a PDF file support."
4681520,4682560," Isn't that great?"
4682560,4683360," Isn't that cool?"
4683360,4685920," I think it's pretty freaking cool."
4687360,4688640," All right."
4688640,4693440," So, I think I want to finish the stream a little bit earlier."
4693440,4693680," Right."
4693680,4695840," Because yesterday was April full stream."
4695840,4697520," And I streamed like over time."
4697520,4698880," Like more than three hours."
4698880,4701040," That was a little bit difficult for me."
4701040,4704480," So, maybe I'm going to finish everything a little bit earlier today."
4705920,4708320," I think today was a pretty, pretty interesting stream."
4708320,4709840," We had a plot twist."
4709840,4712400," I thought I'm going to use one library."
4712400,4715680," But it turned out I had to use a different library."
4715680,4718000," And overall, it actually worked out great."
4718000,4718240," Right."
4718240,4720560," So, this entire thing works on PDF files as well."
4720560,4720800," Right."
4720800,4724800," So, and today I'm going to try to index my documents folder"
4724800,4729520," with a shit ton of different like PDFs and HTMLs and stuff like that."
4729520,4730720," And see how it works."
4730720,4731680," How well it works."
4731680,4734080," So, I think that's going to be fun."
4734080,4735440," Okay."
4735440,4738240," Does anyone have any questions before I go?"
4738240,4744880," So, how difficult it is to write Rust for someone that understand it well"
4744880,4747280," compared to Python?"
4747280,4749440," And how does the learning curve compares to Python?"
4749440,4752880," Why do you ask me a question that you could have just answered yourself?"
4752880,4754960," Right."
4754960,4758480," Is that it's you who must answer that question, not me."
4758480,4763280," How difficult would Rust be to you, right, compared to Python?"
4763280,4764240," Just, just try it."
4764240,4767360," It's like, it's up to you to answer the question, not me."
4767360,4770720," Time investment."
4770720,4775520," You think you're going to get shit for free in life?"
4775520,4776800," Good luck, buddy."
4778480,4782560," So, do you plan to make streams where you'll use Kotlin?"
4782560,4787440," I already did streams where I used Kotlin, but it was like a long time ago."
4787440,4794080," To be fair, the problem with the JVM languages is that my computer is already slow, right?"
4794080,4800320," So, my laptop is already dying when I just program in Rust."
4800320,4803200," And Rust is supposed to be faster than JVM languages."
4803200,4809040," Every time I mix in JVM language to my streams, it's just, it becomes even worse, right?"
4809040,4810000," It becomes even worse."
4814640,4816720," What a useful web page in Rust."
4816720,4818800," I'm using JavaScript."
4818800,4820000," I'm not really sure what you mean."
4820000,4824080," But I serve the pages with tiny HTTP."
4824080,4825280," All right."
4825280,4827040," So, let me see."
4827040,4827280," Yeah."
4827280,4829120," That's the dependency I use."
4829120,4830800," This is a tiny HTTP."
4830800,4832800," And it's a very small HTTP server."
4832800,4834960," It's not even a web framework."
4834960,4840800," We kind of build a custom small web framework around this entire thing, right?"
4840800,4842720," So, yeah."
4842720,4845280," We even create like a custom router, right?"
4846720,4848080," So, literally."
4848080,4850640," We take a request."
4850640,4852640," We take the URL."
4852640,4853840," And we have just match."
4853840,4854880," And we match between them."
4854880,4858000," And we just dispatch to different functions in here."
4858000,4861520," We like literally implemented like everything from scratch in here."
4861520,4864960," Right."
4864960,4869360," Do you plan to use BP tokenization in Carrotson?"
4869360,4870320," I'm not sure."
4870320,4870720," We'll see."
4870720,4872640," I need to finish research on how to use BP."
4876160,4880080," How you compile in Emacs with compile buffer command."
4880080,4886320," Well, I just go to my Emacs and I issue a compile command."
4886320,4891280," And I just put my compilation command in there."
4891280,4894720," And that's how I compile with compile command."
4894720,4897920," I just call the compile command."
4897920,4900960," That's how you compile with compile command."
4900960,4902640," You call compile command."
4902640,4904640," It's as simple as that."
4905600,4906480," Okay."
4906480,4908240," So."
4908240,4916480," All right."
4916480,4918240," So, I guess that's it for today."
4918240,4921520," Thanks everyone who's watching me right now."
4921520,4922400," I really appreciate that."
4922400,4924160," Have a good one."
4924160,4926160," And I see you all next time."
4926160,4928080," I see you next time."
4928080,4929200," I love you."
4929200,4930200," you."

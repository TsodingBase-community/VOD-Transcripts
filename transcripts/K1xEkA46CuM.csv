start,end,text
800,5360," Hello everyone and welcome to yet another recreational programming session with Mr."
5360,11680," Zozin and the topic of today's session is raycasting. Raycasting is a technique that"
11680,17680," allows you to create some sort of like a 3D perspective on a 2D map and it was used in"
17680,23920," old games like Wolfenstein 3D. Right so everybody knows about this game it's an old famous game"
23920,32320," so and raycasting is what gives it this iconic look so i never really implemented raycasting"
32320,39600," right but i kind of know roughly how it works i know the main idea and this is exactly what i"
39600,46160," wanted to do on today's session i wanted to try to tackle this sort of technique and and learn it"
46160,52240," essentially so here i found a tutorial online so i just googled up like raycasting and what kind of"
52240,57360," tutorials you can find online and this was the first result in google and apparently it's a famous"
57360,63920," tutorial on raycasting people told me it consists actually of three parts all right so it goes quite"
63920,69520," into the detail of raycasting i'm not going to be really strictly following it or reading into it too"
69520,75440," much so i'm going to just i'm going to be just using the main ideas that i see on the pictures right so i"
75440,82080," think the pictures here are quite useful right so they actually explain you a lot so i already tried"
82080,90320," to implement um this topic on uh online on twitch but i severely underestimated how complex that topic"
90320,97600," is and how much concentration it requires from me so uh the entirety of the sessions were a mess so i"
97600,103920," actually completely scrapped them and decided to start from scratch but already offline where there is"
103920,110800," nothing that distracts me so i can fully focus on implementing raycasting so uh how raycasting works um so"
110800,118400," essentially uh you have a world that consists of a grid right so the world is the grid and the size"
118400,124640," of the cell of the grid doesn't really matter that much so and because of that it is easier to just pick"
124640,130720," the size of the cell equal to one because in that case the cell sort of becomes like a normalized value"
130720,136720," from zero to one which enables you to actually mapping that cell to whatever size you want right so it just"
136720,145280," like generally makes the math easier um right so and some of the some of the cells here are marked as"
145280,151520," walls as filled in right so let's actually mark this one as filled in and also mark this one as filled in"
151520,156720," maybe i should actually use something like this yeah so let's just fill it in i don't think i have a but"
156720,162080," maybe i do have a bucket so maybe i can just use something like that uh all right so but i mean i already"
162080,167280," screwed it up so yeah we have a bunch of walls in here and stuff like that doesn't really matter"
167280,172240," and uh we also have a position of the player and the player is not really snapped to the grid the"
172240,177360," player can be like in between the cells and stuff like that so let's actually place the player in here"
177360,186080," and uh player is looking at a certain direction uh and the player sort of like the camera that is"
186080,192080," attached to the player's head has a certain fob field of view uh right so this is the field of"
192080,198880," view and we also have a plane onto which we are projecting uh this scene and this plane sort of"
198880,205360," represents this screen so in essentially what we're doing uh we are shooting the rays from the position"
205360,211120," of the player towards that sort of screen onto which we're going to be projecting things right we're"
211120,217440," shooting the rays and we're trying to see what walls there intersect so the walls usually have"
217440,223200," some sort of a color associated with them right so we see that this ray intersects with that specific"
223200,230720," cell with that specific color right and we basically take uh the column that is associated with this point"
230720,237920," on the screen and we're just coloring that specific column on the screen uh with the color of that of that"
237920,245280," cell right so we're basically scanning vertically the entire screen uh so and that's how they used to"
245280,251440," do that um so because the scene is sort of like a very simple you can just like you know scan scan uh"
251440,256640," with vertical lines and stuff like that so it's pretty straightforward uh so how do you shoot the rain"
256640,262800," uh the ray uh so you can do that with regular steps but it's not particularly convenient because you"
262800,267920," can have some sort of like tunneling effects uh like in this specific case so what they suggest to do in"
267920,276960," here is to actually um step with variable steps uh towards that snap to to the grid in here which as"
276960,282000," you can see like each individual step it just snaps to the grid and that way we are being super precise and"
282000,288000," we never really overshoot or tunnel through through the walls or anything like that to be fair i found this"
288000,293840," particular part of the entire technique the most difficult one right so because it has a lot of"
293840,300080," corner cases that you have to take into account so uh but i think of screen i kind of figured out how to"
300080,306800," compress uh some of these corner cases so i think it shouldn't be a problem on today's session we'll see"
306800,311120," we'll see so i have a couple of ideas on how to manage the complexity of this entire thing"
311920,318960," so okay uh we're gonna be using um javascript right so i haven't programmed in javascript for"
318960,323680," quite some time so i decided to take this as an opportunity to sort of refresh that knowledge"
323680,329600," uh right so and since i don't really like javascript as a dynamic language i like to slap"
329600,334160," typescript on top of it so we're going to be using type script today uh so let's go ahead and just"
334160,342560," initialize the project uh so let me let me see so this is a ray casting uh right and let's create html"
342560,352320," page as usual so let me switch to an html mode there we go so we're going to have a dog type uh html"
352320,359600," so the first top tag we need to have html and let's close it super quick so the next tag we need is"
359600,368320," obviously head right so any html document consists of the head and of course the body uh in the head"
368320,376240," in the head we're going to have the title uh so and the title is going to be equal to"
376240,384320," ray casting in type script there we go so within the body we're going to have a canvas we're going"
384320,389520," to be rendering everything on the canvas at least for now so once we implement the ray casting we'll"
389520,394160," see maybe we can come up with something more interesting right so i don't know uh so the"
394160,398480," idea of the canvas let's actually say game right so it doesn't really matter so we just need to have"
398480,407040," some sort of id uh canvas and let's also include the index uh javascript right so we're going to be"
407040,413520," compiling that index javascript from the index type script uh okay so we'll get this kind of thing uh let"
413520,422480," me do npm init uh right so let's initialize everything uh so mit we're going to be using"
422480,430080," mit license and yes okay so let me install uh typescript as a dev dependency uh i think it's"
430080,436320," a dev save right it's going to download the type script and it's going to add it to the package dot json"
436960,443520," uh right as a dependency is it dev dependency i think it was a little bit of a dev dependency since"
443520,450640," yeah that's bizarre hmm that's really weird is it is it save dev"
450640,463040," okay so that's very it's kind of funny how it didn't really complain when they did dev save right and it's"
463040,475120," just did a completely different that is absolutely bizarre javascript anyway uh so what we need to do"
475120,480720," in here so let's actually call to the typescript compiler right so it's located in node modules dot"
480720,485840," bean tsc right so uh the first thing we probably need to do we need to initialize the config right"
485840,490640," so because it has a config of some sort where you can specify a lot of things so we're going to keep"
490640,495120," i keep it default right i don't really plan to modify anything and let's actually enable the watch"
495120,503520," mod uh so but watch mode is only makes sense if we have something like index ts so let's do console"
503520,510800," log and let's say hello world uh there we go so we have index ts if i start the watch mode it's going"
510800,515840," to look into the current folder and it will find all the ts files and convert them into the"
516400,523120," index.js right so this is the final thing uh that we're also including into the index.html so i'm not"
523120,530400," planning to actually start any server right so i'm going to just open index.html as this and let's"
530400,535680," actually take a look at the console and there we go here is hello world okay so everything seems to be"
535680,543040," working we have a working setup uh on top of just watch mode in here i think it also has some sort of like"
543040,548800," automatic lsp uh i never really set it up intentionally the only thing i did i just installed"
548800,556320," a thing called emac study which is a typescript node for emacs but it comes with a pretty cool like"
556320,562240," lsp integration that just works out of the box i never actually configured it any or anything somehow"
562240,568160," it just figures out that you have a node modules in the current folder and inside of this node modules you"
568160,573760," have dot bin with a typescript compiler and it just like it just picks it up and just uses so it's"
573760,580720," actually kind of amazing how it works um anyways so yeah and it enables a lot of things for example"
580720,584880," jumping into the definitions of types and stuff like that right so i can do this kind of stuff"
584880,592080," so maybe i should actually give the link to uh emac study in the description for anyone who's using emacs"
592080,597120," uh so but it doesn't really give me like a direct link to github maybe this is because it dug the go"
597120,606480," so it's a uh fly check clang um yeah so there is a tidy.el but it's i mean there was a github page"
606480,615280," somewhere why is that emacs wiki uh github uh did they actually remove it am i using like a mode that"
615280,621440," doesn't exist anymore or is this something wrong with with google i don't already know so let's"
621440,628640," actually go to melpa and search in melpa for this thing it's it's so bizarre maybe maybe i'm just using"
628640,635440," the extension that doesn't exist anymore and not support it i could see myself doing that and this"
635440,640560," entire thing is not like okay the entire infrastructure of emacs is actually falling apart nothing works"
641440,651280," um okay so moving on we don't really have that much time to to wrestle with that so anyway uh so the"
651280,657760," first thing we need to do we probably need to find the the tag uh of the of the canvas so let's actually"
657760,665600," rub all of that into into the lambda right so like so so it always only runs it only executes when everything"
665600,677840," is fully loaded uh so and in here i'm gonna just do uh document um get element by id right and in here"
677840,684800," i'm gonna say find me the game so i'm gonna just go ahead and print the game uh there we go so by"
684800,693200," default the sentencing actually returns html element right so but we will need to be able to do the following"
693200,701120," thing get context um right so and i can't do that because the html element doesn't have that methods"
701120,708640," is it's not the html element that has that it's html canvas element right so we need to cast this entire"
708640,717040," thing to html canvas element but here's the thing that kind of um erases the information about the fact that"
717040,723600," this thing can be null right so i think it's more correct to actually cast it to something like this"
723600,729920," so it's either html canvas element or new uh right so we're gonna do it like that and uh so if i try to"
729920,739120," get the context so i think i can even enable fly check mode fly check mode so yeah it shows the errors and"
739120,746320," stuff like that so yeah game is possibly null uh so we can just check if game is equal to null uh let's"
746320,756880," just throw an error throw a new error uh we're gonna say no canvas with id game is found and i'm gonna"
756880,764080," actually wrap it like that and there we go so and in here we're gonna take the 2d context right so this is a 2d"
764080,774400," context and it can also return null as you can see so we need to also check it uh equal to null uh throw"
774400,783360," new error um 2d context is not supported for whatever reason it's kind of weird i think"
783360,789760," any browser these days will support this kind of context but i mean you never know you never know"
789760,794480," anyways so we've got the canvas and stuff like that so some of the things i probably want to do i"
794480,800080," probably want to set the resolution for the canvas so as of right now it just uses this default resolution"
800080,809520," with which is 300 by 150 right so let's set up something more like big uh and i actually want to set"
809520,817120," up the square um resolution so because i want to play i want to first start with this specific algorithm"
817120,822880," because again this algorithm is probably for me the most difficult part uh because it has a lot"
822880,829040," of different corner cases so i really want to first nail that algorithm down and as soon as we have it"
829040,834400," we can uh continue with uh the rest of the ray caster because i feel like the rest of the caster"
834400,839440," ray caster is pretty easy once you have this kind of thing so it's sort of like the core the essence of"
839440,847040," this algorithm if you know what i mean um all right so let's actually set um the width and height so i"
847040,853440," might as well actually set it to something like this uh there we go so let me let me see so i'm going"
853440,858720," to refresh this entire thing and what's the size okay so the size seems to be appropriate as you can see"
858720,865680," the size seems to be appropriate so we can't really see the canvas so maybe it would make sense for me to"
865680,874960," you know color it with something so we can do ctx fill erect and we're going to just say ctx canvas"
874960,882320," width just filled the filled the entirety of the canvas with a certain color and we're going to specify"
882320,890160," the core with fill style so let's say it's going to be something like 80 80 80 uh let me refresh okay so"
890160,895520," everything seems to be working so let's actually align it like center it horizontally and vertically"
895520,907280," uh so let me go into the uh like index html right and let's maybe create the um style tag not really"
907280,916640," script style tag so um this is an id right so that means we have to use hashing here okay so if i remember"
916640,920800," correctly so the easiest way for me would be to probably use position absolutes right so we just"
920800,926400," have one single thing it's just easy to do like that at least for me so left is going to be 50 percent and"
926400,933040," top is going to be 50 percent as well okay so we just centered the left top corner okay that's fine"
933040,938720," so and i suppose now we can try to transform this entire thing and just translate"
939920,948640," minus 50 minus 15 percent uh is it going to work is it going to work yeah it works okay i still remember"
948640,959440," how to do that that's cool uh so now let's render a grid let's render a grid so we need to just decide"
959440,964800," the size of the grid so let's actually say that grid rows is going to be 10 and let's also say that the"
964800,970320," the amount of columns is also going to be the same so it's going to be 10 by 10. um right so now after"
970320,976880," we render this entire thing i'm going to iterate um so first i'm going to probably render the vertical"
976880,981920," lines so that means i'm going to be iterating x right so i'm starting from zero and i'm iterating"
981920,992560," grid columns uh like so so if i remember correctly um in the canvas to draw the lines you have to use this"
992560,999280," like you know uh logo style graphics right so you have to do move to first you need to move your pen"
999280,1008080," to a particular place uh so let's actually move it to in terms of x it's going to be here um right but"
1008080,1014640," we also need to know the size of the cell right so the size of the cell is one but when we are rendering"
1014640,1022240," it on the canvas it has to have a certain size so and that size should be essentially uh let me try"
1022240,1031360," to do that so we're going to have cell width it's the context canvas width divided by the green uh grid"
1031360,1035520," columns and that's going to be the cell width and we're also going to have something like cell height"
1035520,1039840," uh right without these things we won't be able to properly like render everything in here"
1039840,1044320," uh so this is going to be the height and this is going to be the rows essentially"
1045040,1052640," so this is going to be x multiplied by cell uh width and since it's a vertical line so it starts with zero"
1052640,1061520," like this like this right and then we're moving the line uh emacs emacs why are you hanging okay so line"
1061520,1071840," two um essentially towards this yeah so but that's not enough if you just do that it's not going to show"
1071840,1076560," anything so we can give it a try but yeah so we also need to specify this stroke style"
1076560,1086000," so i think the stroke style should not be super bright so let's make it a little bit like slightly"
1086000,1094800," brighter than uh the background so let's say it's going to be something like maybe 30 30 30 uh right so"
1094800,1100720," you won't be able to to say anything because you have to sort of like commit the stroke uh right so"
1100720,1105760," once you do these actions like as you do these actions they just basically buffered and to actually"
1105760,1110000," sort of like commit them you need to do the actual stroke i think this is how it works and there you go"
1110000,1117120," so uh we have a line on the left side but we don't really have a line on the right side so maybe uh we"
1117120,1123920," also need to say that x has to be equal so we have a line here on the right side as well so it's pretty"
1123920,1132400," cool uh so we can repeat this entire thing for uh you know horizontal lines so we're now iterating rows"
1132400,1141200," and in here i just move two so since it's a horizontal one so it starts from zero but it moves down y"
1141200,1150320," multiplied by cell uh height so we're moved to but then we're lying to uh context canvas width and we"
1150320,1156640," just do this stroke like so uh this one has to be white thank you so much that's good compiler and there"
1156640,1163520," we go so we have a grid so which is actually kind of kind of cool uh so now we need to specify like the"
1163520,1169680," position of the player right so i just basically want to define uh a point and like which is going"
1169680,1176240," to be the position of the player and displayed on that specific grid um so to be fair it would be"
1176240,1181840," nice to have some sort of a class vector2 similar to the one that i have in ray leap right so which"
1181840,1187840," consists of x and y uh and also we probably should define a bunch of operations on on this entire thing"
1187840,1195600," unfortunately neither in javascript nor in typescript there's uh operator overloading so we have to we have"
1195600,1203840," to deal uh with uh methods right so which is a little bit easier than in p or c but still not ideal uh"
1203840,1209760," honestly for things like vectors and matrices in any language uh there should be overloaded like plus"
1209760,1216240," minus multiplication operations and stuff like that but anyway uh so we're gonna have this component"
1216240,1224480," so it's x and y so this is x and y and let's actually define constructor constructor x number"
1224480,1234640," y number so and let's construct those things right so x and y cool so let's define um a point"
1234640,1241520," all right let's define a point somewhere here so this is going to be p1 uh we're going to have two points"
1241520,1248720," right so because uh two points will define the direction into which we are sending the array"
1248720,1251920," right so because of that we need two points in here so the first point is going to be"
1251920,1259520," somewhere here so uh the question is in which coordinates do we want to have the point i think"
1259520,1266560," we want to have it in world coordinates right so first of all we have the world coordinates or maybe"
1266560,1270880," it would be more correct to call them grid coordinates uh right so essentially if you're"
1270880,1279040," standing uh inside of this uh cell or maybe even in the center of this cell the position of the player"
1279040,1286800," has to be uh 0.5 0.5 right so because the size of a single cell is one but we have another coordinate"
1286800,1292640," system which is the screen coordinates and as you can see we're actually actively mapping the world"
1292640,1297040," coordinates the grid coordinates to the screen coordinates by multiplying by the cell width"
1297040,1300880," and the cell height and stuff like that this is literally the reason why we're competing these kind"
1300880,1308480," of things so and if we're going to be keeping this kind of thing in the grid coordinates if the position"
1308480,1313280," of the player if the position of p1 is going to be the grid coordinates we also have to actively map it"
1314000,1322480," to to the screen coordinates uh right so and i could have some sort of a function that maybe just you"
1322480,1332400," know accepts uh so map uh to screen uh which accepts the context the type of which is what"
1332400,1340640," so it's a canvas rendering context to d so i could probably do something like that uh in here"
1341200,1347600," and also accept the point and so say this function just returns a new point that is mapped within sort"
1347600,1353280," of this thing and it also does the grid and stuff like that uh it could work but that means i'll have"
1353280,1358160," to constantly just call this function and maybe that's fine but i'm not particularly happy with all"
1358160,1367040," that so as far as i know the canvas has um ability to have transformations applied to it"
1367680,1372560," if you know what i'm talking about it has some sort of transformations and i always wonder like maybe i"
1372560,1379360," can use that so let me see so here is the context i get the context within this thing what kind of things"
1379360,1386480," do i have um all right so okay so the kind of canvas itself is just an interface which is a composition of"
1386480,1394160," a lot of different things so uh canvas compositing so there's nothing interesting in here draw image um so"
1394160,1402800," maybe we need to have some sort of transformations uh oh okay so the canvas transform okay so here they"
1402800,1414560," are uh you can okay you can rotate scale maybe this is what we want actually maybe what we need to scale"
1415840,1425120," huh so essentially if i just ignore this entire step right so if i don't do cell width and cell height"
1425120,1431840," right and i just like don't do any of these things and i assume the grid coordinates and because i assume"
1431840,1439200," the grid coordinates the um the bottom one right so since it's the next all right the bottom point in here"
1439200,1445760," has to be equal to grid rows right so that's the bottom one right if we're assuming that uh and in"
1445760,1452880," here uh we just remove that and this one going to be grid columns uh right and we're also going to remove"
1452880,1459040," that so how is it going to look like without yeah okay so it's it became super small uh we can't even"
1459040,1465360," see what the is going on in here so it's insanely small i suppose now what we have to do is to try to"
1465360,1473840," scale it a little bit right so if i just go ahead and do uh city x scale uh twice right so if i scale"
1473840,1482480," it twice okay so it keeps increasing uh so but there's something kind of wrong with the with the size of the"
1482480,1491040," line um i wonder if you can uh do something with the size of the line in the context that's a good question"
1491920,1502400," um so maybe something like um line width okay so there there is a line width"
1502400,1513040," so the cool thing is that like each field in here uh has a link to msn or mdn"
1514800,1525280," yeah yeah so i confused mdn uh all right so and it's a meter limit this is not what i meant"
1525280,1533840," god damn it uh all right so let me grab this thing so this is the line width property of the canvas 2d"
1533840,1540560," ipi uh sets the thickness of the line okay so this is probably what we need in here um okay so where is the"
1540560,1550560," scaling uh ctx line width and let's say this is going to be just like half of the line so i just want to be"
1550560,1557760," able to see yeah i think i i see this specific yeah this is good i think this is good uh so what if i put"
1557760,1569280," like one in here let's refresh all right that looks much better so the question is how much should i"
1569280,1578400," scale this entire step so i feel like i should scale it by the size of the cell right so essentially yeah"
1578400,1585680," it's basically cell cell size right so i can do something like a grid what is it called so it has"
1585680,1596000," to be columns uh and this thing has to be essentially grid rows there we go is it going to work okay it"
1596000,1601360," worked so and now i can just work with the grid coordinates and don't really worry about this entire"
1601360,1608400," step i wonder if i can just like make it uh yeah a little bit more thin uh that's much better okay i"
1608400,1620400," really like that okay so and now i uh want to draw a circle right so as far as i know drawing a circle"
1620400,1625920," with the context is a huge pain in the ass you have to like begin the path uh i feel like you also have to"
1625920,1630400," begin a path like every time you even draw a line or something like that but i don't remember if it's"
1630400,1635920," mandatory or not is it really mandatory so it's actually let's actually take a look at the"
1635920,1644000," documentation uh yep so let me see so we can remove that remove that none of that is important uh it starts"
1644000,1650800," a new path by emptying the list of sub paths uh called the methods oh okay so essentially when you do"
1650800,1656160," move to line two it accumulates the actions but if you want to kind of forget them you you want to do"
1656160,1662080," begin path so it's not particularly necessary i suppose it's cleaned up by things like stroke as"
1662080,1667760," well at least i have a feeling that stroke also cleans up this buffer of actions so maybe we don't even"
1667760,1674720," need to do begin path uh right so method strokes are aligned to center and where the stroke is drawn"
1674720,1679120," which means the path intersection they don't really i didn't see them saying that they clean up the"
1680160,1684880," the buffer of these actions typically you will want to call okay so this is where they're talking about"
1684880,1690560," it typically you want to call begin path for each new thing you want to stroke if you don't the previous"
1690560,1700800," sub path will remain part of the current path and get stroke every time oh so i i do need to to do that"
1700800,1708160," okay how this may be uh the desired effect yeah okay okay so i i do need to do begin path every time i do"
1708160,1714080," one of these things okay that's very interesting so i suppose it was actually drawing the same thing"
1714080,1719360," over and over again but because it's like the same thing it's not really showing so i wonder if it makes"
1719360,1724720," it more bright because of that doesn't really change anything anyway uh so here we're studying the uh"
1724720,1733040," different path and if i remember correctly you just do arc uh all right so and in arc what do we have is"
1733040,1742240," basically the position of the center right so we can take p1 uh x p2 y or p1 y jesus christ"
1742240,1749440," uh so one of the things i like to do with vector2 is just like introduce like a method array uh which"
1749440,1757920," converts this entire thing into an array uh like so so then later i can actually just sort of like spread it"
1757920,1763920," i'm sure how more readable it becomes in here but it just like allows me to do something like this yeah"
1763920,1771040," so in terms of radius let's actually say that the radius is going to be maybe like 20 of the cell uh so"
1771040,1776160," we have to specify two angles so we're going to start from zero to two pi right so the full circle"
1776160,1783200," uh math pi and whether it's a counterclockwise it's actually an optional parameter so let's remove that"
1783200,1789680," so and after that we probably want to say feel um all right so is it going to do anything it's actually"
1789680,1798080," become darker surprisingly it should become darker um interestingly i probably need to specify the um the feel style"
1798080,1804560," so let's specify the feel style and let's use maybe purple color just to see what's good okay"
1804560,1810000," so that seems to be nice so probably kind of dark uh let's use magenta i think magenta is a little bit more bright"
1810000,1815600," yeah there we go so uh we have zero five zero five and yeah that's the position of the player"
1815600,1822720," uh that's pretty cool uh maybe i want to actually place the players somewhere in the center like of the screen or whatnot"
1822720,1832000," so it's going to be green columns half of that uh grid rows half of that so i want to do something like this"
1832000,1839600," and it's placed in here but maybe i just want to i don't know i can be creative in here i can put 43 and just"
1839600,1845840," 33 in here and it just can be somewhere here it doesn't really matter it doesn't really matter i think"
1846720,1853760," so anyways uh that's pretty cool that's pretty cool that's pretty cool um so what i'm thinking"
1853760,1860720," do i want to use vectors in here probably not but it probably doesn't matter um one of the things i want"
1860720,1866880," to be able to do i think i want to customize the second point right so if i'm going to be introducing the"
1866880,1876400," second point uh like so we can place it somewhere in a different place um okay let's actually factor"
1876400,1880560," this out into a separate function because i don't want to be dealing with three lines every time"
1880560,1887200," so let's say we're going to have a field circle we're going to accept the center of the circle center"
1887200,1893040," vector two so this is a vector two so we're going to take the radius which is a number and we need"
1893040,1897520," anything else i don't we'll probably need the context yeah sure we'll probably need the context"
1897520,1905040," what's the name of the context it's a canvas rendering context uh so this is another thing that we accept"
1905040,1918720," here as well and as we're filling the circle uh we are just doing that okay so i can just fill circle"
1920320,1928720," p1 0 2 and i think that's about it so that's what i want to do fill circle oh yeah provide the context"
1928720,1936000," thank you so much um so that enables me to just do something like this right so just a single function"
1936000,1944720," okay so that's the that's the second one cool um so i probably want to maybe do a similar thing for"
1945760,1951520," for a line i think it's gonna make it a little bit easier um so let's go ahead and do that so it's"
1951520,1962240," going to function stroke line so this is ctx and we're gonna accept two points in here maybe p1 and p2"
1962240,1970720," so p1 and p2 all right so let's copy paste this entire thing um"
1970720,1981840," i have no idea what the is going on outside but whatever uh so p1 array we just spread this entire"
1981840,1991760," thing uh and p2 array and we also spread this entire thing so and i wonder how easy it is going to be"
1992240,1999840," to just use this entire stuff so stroke uh line ctx and now i need to convert all of these things into"
1999840,2010000," a vector into a vector will it be more readable maybe it will uh maybe it will we'll see so let's actually"
2010000,2017840," get rid of that is it working is it working i think it in fact does so stroke line ctx new vector 2"
2018560,2024480," uh i'm gonna just grab this entire thing place it in here new vector and i'm gonna grab this entire"
2024480,2031120," thing and place it in here and let's remove the center step okay so is it still working is it still"
2031120,2035440," twerking it seems to be working it seems to be twerking so there's no errors or anything like that"
2035440,2046320," yeah this is pretty cool okay um so we can even maybe just use the stroke style of magenta"
2046320,2050800," stroke style and just like a stroke line from p1 to p2"
2050800,2058320," so now we have a line between them that's pretty progress uh so we never really specified the width"
2058320,2062720," the thickness of the line maybe this is something that we should do i mean it's specified through the"
2062720,2070560," line width uh of the like above so i think i think it's fine um okay so we have two points right so"
2070560,2074640," we have two points and one of the functions that i want to do that will allow me to sort of like a"
2074640,2082160," step with the ray is the function that accepts both of the both of the both of the points uh so let's"
2082160,2091200," call it something like ray step so it accepts p1 uh vector p2 vector and i think it should return you the"
2091200,2098320," third line which is right so if this is the first point p1 and this is the second point the third point"
2098320,2106960," should be an intersection with this uh side of the cell right so it finds the first intersection and gives you"
2106960,2114880," the third line so then you can now use the next pair of points to find another one that intersects in here"
2114880,2120320," and so on and so forth so this is the kind of function that i think i need to implement something"
2120320,2127360," like this right so this is basically what we need this is basically what we need so i right now i don't"
2127360,2137120," know how to implement that so i'm gonna actually just return p2 um so interestingly for the sake of like"
2137120,2142240," the bag debugging and simplicity it would be kind of cool if i could customize uh p2"
2142240,2153360," so maybe what i want i want to actually bind p2 to a mouse right so let me see can i just"
2154720,2162480," take the context and add event it doesn't have event listening so i think it's this thing that"
2162480,2170480," has event listeners all right so what kind of events listeners do we have in here um event html event map"
2170480,2178480," uh all right so we have element event map full screen change this is not what we want uh global event"
2178480,2187600," handler okay so here they are uh so mouse uh move this is probably the one that we need in here okay so mouse"
2187600,2198320," move and here we're gonna have an event uh right so and this entire thing event uh what does it have"
2199440,2205520," uh so position uh so position all right it's kind of hard to tell what what what what is this thing"
2205520,2214880," um so does it have anything okay so there's a client x what's so it's a mouse event all right um so what"
2214880,2221360," kind of things do we need in here offset x and offset y so i think that's the things that we probably want"
2221360,2230400," in here so i might as well just take a look at them console log event of set x event of set y uh let's"
2230400,2236560," take a look at them uh let's take a look at them as you probably want to open the dev tools so i can see"
2236560,2245120," uh okay so that's pretty cool so this is eight uh 800 800 and this one uh the upper one has to be zero"
2245120,2252560," zero if i understand correctly so i can't really seem to get what i need okay so this is very close to"
2252560,2255520," zero zero but it doesn't show me oof"
2258800,2268720," i guess it's fine right so but that means we'll have to map this entire thing to the world coordinates"
2268720,2277520," ourselves right so we have to map it to ourselves we can probably maybe take the following thing so i can"
2277520,2288080," construct a new vector 2 uh out of this entire thing and i wanna divide it by the size of the of the canvas"
2289440,2294640," so we probably need a divide operation in here so let's actually quickly introduce that so it's"
2294640,2302240," going to take the second uh point so let's call the that and it's going to return uh this"
2302240,2312400," so uh let's implement so it's going to be vector 2 this x divided by that x this y divided by that y"
2312400,2318400," so that's what we need in here so this is the position of the mouse mouse"
2318400,2326960," we divide it by excuse me new vector which is the size of the whole canvas right so we have to do ctx"
2326960,2339920," canvas um width ctx canvas height so this is a little bit too much honestly i would like to maybe factor it"
2339920,2350560," add out to a function that just allows me to do canvas size right and it just returns the vector 2"
2350560,2356480," and it just accepts something like this right so it accepts the canvas and it gives you the size of the"
2356480,2363200," canvas as the as the vector right so we have to actually return this in that thing in here right as"
2363200,2366880," the vector so you can then reuse it because i feel like we're going to be using this a lot"
2366880,2374400," right so this is going to be canvas size ctx and there we go so that thing"
2375360,2382800," is normalized actually from zero to one it is normalized from zero to one we have to remap"
2382800,2387680," it to the grid coordinates to remap it to the grid coordinates we have to actually multiply it"
2388400,2397920," by something like grid calls and grid rows yeah so let's implement multiplication so this is another"
2397920,2405760," thing that we'll probably need in here so this is multiplication so this is that uh and this is that"
2406960,2415760," okay so we take the offset of the mouth we divide it by the canvas size and we multiply it by this"
2415760,2423840," entire thing maybe it would be better to actually define something like grid size which is yeah something"
2423840,2430400," like this but but that means we have to actually define it after uh in here right so because vector 2 is"
2430400,2441520," not defined yet so let's log this entire thing so i'm going to actually assign it to maybe p"
2441520,2450640," and let's see if it corresponds to what we need so this is zero this becomes one one kind of but it's not"
2450640,2457280," fully where i need it that's so bizarre is it really so is it really the upset i need"
2458240,2460160," uh because it's kind of"
2460160,2471200," yeah it's missing one in here why is it missing one i have no idea but this one is this one is 10 10 so"
2471200,2476960," it's missing maybe that row is not really visible there or something i don't really know what the"
2476960,2485520," fuck is going on but it seems to be that upset is fine uh maybe because it's oh no i thought maybe it's"
2485520,2493360," because of the zoom of some sort anyways whatever um so let's try to do the following thing"
2493360,2502480," that's really bizarre actually it kind of bothers me um because this has to be"
2503920,2510240," can i maybe zoom out like really really a lot so i can see what the fuck is going on in here"
2510240,2516000," so is that zero zero okay so it is zero zero so that means we just didn't see i"
2516000,2526400," one rolling here okay so um so i want this thing to be like um and like undefined by default so maybe i can"
2526400,2536400," put this thing somewhere here all right so initially it is undefined and then later we just assign it to p2"
2536400,2548640," like so okay so let me see um cannot read properties uh array full circle okay so i i see what is going on"
2548640,2554640," so i think we have some yeah so this thing can is equal to undefined yeah the type of this entire thing"
2554640,2559680," is undefined and it will be only defined when you move for the first time okay okay so that makes sense"
2559680,2568720," um so i feel like we have to say that the type of p2 is vector 2 or undefined and initially it's going"
2568720,2576320," to be undefined unless until you move a little bit and it will be assigned to something new and um while it is"
2578640,2587520," uh p2 let's say is not undefined only then we're going to try to render it right only then we're"
2587520,2591600," going to try to render it so if it's undefined we're never going to even try to render it so that makes"
2591600,2596560," sense i think uh okay so that doesn't work for some reason why doesn't it work"
2596560,2605760," ah because we need to no jesus christ we have to re-render the whole thing we have to re-render the"
2605760,2612960," whole thing every time the mouse moves all right so that means i need to factor out the whole thing"
2612960,2619920," here into some sort of separate function that does the rendering and all right so uh function"
2619920,2629280," grid or something might as well just you know grab the whole thing in here uh and just like copy paste it"
2629280,2636320," somewhere there so where is the function grid let's put it in here what is it complaining about is complaining"
2636320,2646000," about ctx so let's pass the city x in here sure uh what is it complaining about now p2 so we can also"
2646000,2651840," pass the p2 as well okay so that actually makes a lot of sense to pass p2 in here and also say that"
2651840,2660560," this could be vector or undefined so it's either vector or undefined um so here what we're going to"
2660560,2668640," be doing we're going to be doing grid ctx p2 uh right and every time we move this entire thing we re-render"
2668640,2674560," ourselves again okay so that's basically what we want okay so that's actually looks kind of nice okay"
2675920,2684960," uh oh okay so damn it's probably because we're doing some transformations and like yeah so we're"
2684960,2693040," canvas is extremely stateful it's almost like opengl right so we're messing with the state so maybe we"
2693040,2699680," should save the state or restore it and then restore it or maybe you can just do something like do you have"
2699680,2709360," okay so there's a reset um okay okay canvas state this is a canvas state so can you just what does"
2709360,2715520," the reset mean what does reset mean method of canvas studio resets the rendering context to its default"
2715520,2720000," state allowing it to be reused for drawing okay so this is precisely what we want okay okay that's cool"
2720000,2725600," so i suppose first thing we can do before rendering this entire stuff we reset the state of the canvas and"
2725600,2732880," then we render the whole thing uh okay okay so this is work this works i'm really happy okay so yeah so"
2732880,2738640," we have a the position of the player and we have like a custom thing and what i want to do honestly"
2738640,2749120," um what i want to do um in here if we have p2 of course i want to just do array step p1 p2 uh does this"
2749120,2755600," thing okay so this is the only thing that accepts and i want to have p3 so and in that specific case"
2755600,2762800," we can even connect p2 to p3 uh so this is a stroke but we might as well also render p3"
2762800,2770080," uh like so so we compute the third one and i want to just keep rendering it as sort of like a way to"
2770080,2778720," you know to debug this entire stuff we can even try to do something um so essentially i can always do p2"
2779280,2784000," subtract p1 do we have a subtract i don't even have subtract okay so let's implement the separation"
2784000,2792000," let's implement this operation uh sub uh it's going to be minus it's going to be minus"
2792000,2801600," so where is the ray step so i'm subtracting it maybe i want to normalize it uh do you even have a"
2801600,2810880," normalize okay so i don't have a normalize uh norm so i'm going to take the this thing so to normalize"
2810880,2816480," the center i think we just need to take the length of the vector right so this is going to be this"
2816480,2821920," length which doesn't exist right so we have to implement this entire thing so it's going to be a"
2821920,2829760," number and it's a number so what's going to be the length um well i mean you just take this x multiply"
2829760,2836240," it by itself or you just want a square then you take the square of y and you just do a security there"
2836240,2841200," we go so just return this entire thing so this is the length and essentially what you want to do you"
2841200,2845920," want to just take uh each individual component and just divide it by length all right so this is going"
2845920,2854160," to be something like that so new vector 2 and uh you just return the whole thing okay that's cool"
2854160,2859280," uh so but then you can have a situation when l is equal to zero right so you don't want to have a"
2859280,2863920," division by zero so maybe you want to actually explicitly check if this thing is equal to zero"
2863920,2871440," what do you do and i guess you just return like a zero vector if that makes any sense right so um"
2871440,2875520," because i mean it's a zero vector there's nothing much you can do in here right anyway"
2875920,2881040," so raise step so you normalize this entire thing we can now scale this entire thing maybe by"
2881040,2888560," f uh right and we could just return that so that way uh you have sort of the next step yeah we don't"
2888560,2896720," have scale uh so let's do scale so we have a value which is a number and you return a vector 2 so you"
2896720,2907840," just do new vector 2 uh this x multiplied by value this y multiplied by value there we go uh is that a"
2907840,2915680," gucci is that a tamaguchi i think so uh right so that is absolutely freaking bizarre my friend why is it so"
2915680,2928720," fucking bad why is it so fucking bad uh so yeah this is because i actually wanted to add p2 right so"
2928720,2933280," because we just have the difference in here right so then we normalize the difference so it's just the"
2933280,2941040," direction then i like elongate the direction to half of a cell right i elongated to half of a cell to be fair"
2943360,2949760," originally it's more like one so maybe i don't even have to elongate it right so let's not elongate it"
2949760,2954400," so we also need to have an addition uh all right so i'm going to put it in here so this one is going"
2954400,2963360," to be add and let's replace minus with plus ah didn't replace bro bro bro bro bro okay so what else"
2963360,2968240," do we have in here does it work does it work it does in fact work it does in fact work so as you can see"
2968240,2978320," so it renders the the third sort of uh cell all right so uh that's pretty cool so we have a setup"
2978320,2984720," for testing and i would like to make a small break and refill my cup of tea uh right and after the break"
2984720,2992560," i'm going to try to implement a race step so probably the most difficult function in here right so the one"
2992560,3002000," that basically steps this way right it finds the nearby sort of border or or boundary and just snaps"
3002000,3007520," to that so it's kind of like like not really obvious how exactly do that but i have a couple of ideas that"
3007520,3015840," may help us all right so uh let's make some break and um all right i'm back uh we need a linear equation"
3016560,3024800," so uh what is a linear equation uh it's an equation that has the following form uh y is equal k multiplied"
3024800,3032880," by x plus c so essentially if you know these two parameters case and k and c um of a particular line"
3032880,3043040," you can take any x on the plane and you can instantly find y that basically gives you a point on that specific"
3043040,3049920," line right so essentially it's it's like a black black box right so you you plug x into it and you instantly"
3049920,3060800," get a y associated with the line so uh if you have two points right p1 which is basically x1 y1 and p2"
3060800,3072080," which is x2 y2 you basically end up with a system of two equation equations where y1 is equal k x1 plus c and"
3072080,3080640," the same thing for the second point in here uh so and essentially by solving this equation for k and c you"
3080640,3087920," can find those parameters you can you can actually find them um so um what we can do here we can actually"
3087920,3094720," take the first equation right so and we can figure out uh c from that equation we can just like move this"
3094720,3102720," thing on the left side um and that's about it so we basically got c so this is our c so now we can"
3102720,3109120," take that c and actually plug it into the second equation right like so uh so this is what we have"
3109120,3116160," in here and you may notice a very interesting thing right so we can take k and move it uh outside of the"
3116160,3124080," parentheses and now we can move y1 here uh like so so this is going to be negative and now we can just"
3124080,3131200," you can divide uh this difference of y's by the difference of axis uh like so and this is how we"
3131200,3139280," find k so k is usually called slope uh and sometimes i see on the internet specifically in wikipedia it's"
3139280,3144960," called m but i kind of got used to calling the case so it doesn't really matter so this is how you find"
3144960,3149920," these parameters for if you have these two points and and we do in fact have these two points so that"
3149920,3157040," means we can actually easily find any other uh points on that specific line um right so and this"
3157040,3161760," is precisely what we want to do in here right but we don't really want to find like arbitrary points in"
3161760,3168080," here uh we want to actually move along the line in the direction of of that line in in the direction of"
3168080,3174560," the ray we know the direction of the ray because of the order of p1 p2 right so essentially we know that"
3174560,3182080," the ray moves from p1 to p2 so we know precisely the direction of the ray so and we want to actually"
3182080,3188560," snap to the closest boundary of the grid so when the question is how can we even figure out the closest"
3188560,3194480," boundary of the grid this is actually a very interesting question so um essentially if you know"
3194480,3202400," the direction of the ray uh right so you can basically find the boundary um horizontally the horizontal"
3202400,3209200," boundary right so in towards that direction and sort of like a vertical boundary right so essentially if"
3209200,3217040," i have x and y i can relatively easy find so where is the next x towards the direction and where is the"
3217040,3223040," next y towards that direction but that kind of gives me two points in here so if i just snap to here"
3223040,3228480," okay so here's the first point and i can snap to here which is the second point which one should i pick"
3228480,3236160," i should probably pick the one that is closest right so essentially what we have to do is um so take um"
3236160,3243440," the closest x boundary and y boundary and pick the one that is just closest to uh to the current point"
3243440,3250560," so that's probably what we have to do so but the question is like how do you even find the closest"
3250560,3255440," boundary if you know the point and you know the direction that's a very interesting question"
3255440,3268240," so uh let me grab my paint and let's take a look at some sort of a grid some sort of a grid do i i think i"
3268240,3278160," what did i do i can't i can't draw in here for whatever reason even though this layer okay so this layer"
3278160,3284400," kind of kind of weird so it's a group layer i can draw here anyway whatever uh so i have"
3284400,3298080," a cell within which i have a point right i have the current point so and i also have a certain direction"
3298080,3311760," i have a certain direction um so if the direction of x is positive so what's interesting is that um"
3311760,3322000," we can know the direction of the ray by looking at the deltas of y and x in fact quite often these"
3322000,3327360," two differences are denoted as delta y and delta x right so we can do something like this so this is"
3327360,3335120," delta y uh and this is delta x like so so it's a delta y and delta x in fact i can already compute them"
3335120,3344080," so i can maybe create something like d p2 subtract p1 and i go i've got the deltas so uh now"
3345680,3360320," if um dx right if dx is positive right so if the dx is positive that means that the whole thing"
3360320,3371360," moves to the right um the whole thing moves to the right and in terms of x the closest boundary is the"
3371360,3379360," right one the closest boundary is the right one which means that to snap for this thing to that"
3379360,3389040," boundary we just have to take the seal of x right we have to take the seal of x so what's interesting"
3389040,3398160," is that if the direction of the whole thing was something like this dx would be actually negative"
3398160,3404640," right because in terms of x we're moving to the left so dx is negative so in that case"
3404640,3414160," we have to pick this boundary so that means we have to actually do the floor of x so depending on a"
3414160,3426720," sign of dx we have to do either seal of dx or the floor of dx so and this creates like a lot of combinatorial"
3426720,3432800," complexity right so you need to consider k this when uh dx is negative and dx is positive and so on and so"
3432800,3440480," forth so what's interesting is that we as soon as we know dx and dy right so d contains both dx and dy"
3440480,3446960," we probably want to actually compute the slope right so when the slope is just y divided by dx but it only"
3446960,3454640," makes sense if dx is not equal to zero so if dx is equal to zero you have a division by zero so you can't use this"
3454640,3461760," formula but if you have dx equal to zero that means you have a vertical line right and following a vertical"
3461760,3468240," line is actually pretty trivial you don't even need the equation of the line right so you have to consider"
3468240,3476160," whether you have if dx is negative if it's positive or if it's equal to zero so you can also consider"
3476160,3484320," different situations when um for example dy is zero it's a separate kind of situations if dy is zero"
3484320,3492000," k becomes zero which doesn't create any problems unless you want to kind of invert the linear equation"
3492000,3498560," right so where is the linear equation uh so i already uh removed it uh linear equation allows you"
3498560,3508560," given x find y right but who said that you can't kind of invert it uh so essentially move"
3508560,3515440," c to here right and then maybe divide by k so and that gives you the formula that given y"
3516000,3525360," gives you x but look that doesn't allow you to find x if k is equal to zero so that means you have"
3525360,3532560," to consider separate situations for when x is equal to zero if it's less than zero if it's bigger than"
3532560,3539760," zero and also if when y is equal to zero because if y equal to zero k is equal to zero so this formula"
3539760,3544800," stops working so you also need to consider a situation when y is negative or positive because"
3544800,3551760," of the symmetrical situation with snapping floors and seals and stuff like that it's a freaking mess"
3551760,3560080," it's a freaking mess so i'm pretty sure the tutorial actually suggests something smart"
3560080,3563520," but the problem with this tutorial is that it has a lot of text"
3565200,3569120," i can't bring myself to read that yeah so they're doing some sort of like step minus"
3569120,3574160," one plus one and it's just like i don't want to read all that i honestly don't want to read all of"
3574160,3582320," that so yeah but i came up with an interesting idea uh so what if we just abstract away the"
3582320,3590800," you know decision whether to use floor or seal depending on the direction of the dx right so we can"
3590800,3596240," actually quite easily abstract it away so let's create some sort of a function uh so something"
3596240,3602720," like let's call it snap right and so it's it's gonna work with either x or y it doesn't really care"
3602720,3608320," right it just works with one of the components of the vectors what it accepts it accepts x right"
3608320,3616000," so that specific x that you want to snap towards uh like like you know towards left or right or up or down"
3616000,3621680," it doesn't matter it doesn't matter and it also accepts the difference right so because that uh delta"
3621680,3629040," denotes the direction right that delta denotes the direction so and uh this entire thing obviously is"
3629040,3634560," going to return a number right so and essentially what we have to take a look at we have to take a look"
3634560,3642640," at the sign of the whole thing so if dx is positive so that means we move in a positive direction so we move"
3643200,3651120," uh right to to the right here if we're looking at the x so that means what i have to do is return"
3651120,3662640," uh floor x that's what we have to do okay cool if dx is uh less than zero so that means"
3662640,3670720," if it's positive i think i have to do seal yeah yeah so if it's positive i have to do seal right because"
3670720,3675280," i'm gonna be so i'm moving to the right so it's increasing so to snap to this thing i have to do"
3675280,3680640," seal yeah that makes sense almost made a foci-voci in oopsie doopsie right so in case if it's negative"
3680640,3687120," we're moving in in the other direction we snap it to to the left if it's equal to zero exactly we just"
3687120,3694560," return x there is nowhere we can snap things to so and that kind of simplifies these two things because now"
3695280,3702400," uh right so let's uh right so let's see let's actually get rid of the k uh right let's remove"
3702400,3713280," all of that stuff and uh if dx not equal to zero right if dx is not equal to zero we can easily compute k"
3714080,3722960," so we can just easily compute k uh and k is dy divided by dx very very cool and as soon as we"
3722960,3730800," can compute k we can also compute c so both of these things are immensely helpful in here uh so this is p1"
3730800,3737040," so i can actually do something like this and then something like this so we have now both c and k"
3737920,3746800," so and now what i have to do um i have to take the second point the point of p2 right uh i need to"
3746800,3757760," take its x and now i can just snap its x to the correct boundary based on the dx and that gives me sort"
3757760,3768080," sort of like a x3 so it gives me the x of the next uh of the next point of p3 and once i know x3 i can"
3768080,3774720," also compute y3 right because i know the linear formula so i can just plug x3 uh multiply by k plus c and"
3774720,3781520," there we go i've got the third point i actually got the third point might as well just return it right so"
3781520,3789680," let's go ahead and just do x3 and y3 just to see what's going on in here so in case of dx equal to"
3789680,3796960," zero in case of dx equal to zero i suppose we can just return p2 as a sort of like a stop gap uh right"
3796960,3804480," okay let's take a look at the application all right look at that it is actually it is actually snapping"
3804480,3811120," but only horizontally right so it snaps only to the to the to this thing right it kind of works"
3811120,3817280," uh we have this situation when dx is actually yeah so when dx is equal to zero there's nothing much"
3817280,3823120," you can do right so there's nothing much you can do in here but that's that's kind of funny um yeah"
3823120,3831920," that's pretty cool so uh but we also need to snap to y right we also need to snap to y because we just"
3831920,3840080," need to pick the the closest point right so how can we i kind of want to visualize both of the points the"
3840720,3847920," x snapping and the y snapping but i only return two like one points how can i return two so i can"
3847920,3856880," visualize both of them um i know what i'm thinking maybe i should allow array step to visualize the"
3856880,3864400," points itself right for debug purposes let's actually allow to visualize the points itself right so this is"
3864400,3873760," i'm gonna just return nothing in here and i'm gonna do a city x uh maybe even feel circle city x new vector"
3873760,3884160," 2 x 3 y 3 and i don't remember what was the radius okay radius was this and we also probably need to do"
3884160,3891280," feel uh so feel style let's say that the feel style is going to be red so we're just like doing this thing"
3892480,3899680," and let me see if it's working if it's working it is not working it is not twerking uh that is bizarre"
3899680,3904720," because i actually call this function incorrectly right so yeah that makes sense so i have to do ctx in"
3904720,3913280," here all righty okay so it actually renders two points why the fuck does it render ah i think i know"
3913280,3921280," why because it modifies the strokes a feel style in here feel style yeah that's what's going on in here"
3921280,3928880," yeah okay that's cool so this is the first point this is the x point so to speak i don't really like that"
3928880,3939280," it's kind of big i would would like it to be like half of the size uh did you did you not top bug breath"
3940720,3946480," so why is it so is that because we never because we never actually use the radius in here look at"
3946480,3954000," that maybe it should go through all the errors so uh flight check next uh okay so there's no errors"
3954000,3962400," anymore cool okay so that's a little bit smaller so uh yeah let's visualize the second point here as well"
3963280,3975280," so the second point is y so what we have to do we have to take p y uh and we need to snap it according"
3975280,3982320," to its direction according to its current direction and this is going to be effectively uh y3 so let's"
3982320,3988480," actually sculpt this entire thing a little bit like so right so they do not interfere so once we have"
3989280,3995840," y3 we can try to find x3 by using the inverted formula um right where is the inverted formula"
3995840,4004400," here is the inverted formula uh like so so let's say it's x3 y3 but you have to be careful in here"
4004400,4010080," again because k can be equal to zero it's equal to zero when dx is equal to zero so one of the things we"
4010080,4017840," can do here is maybe if x is not equal to zero right if it's not equal to zero and by the way i"
4017840,4026720," should probably use the double equals here as well we just do that and we can now draw this second point"
4026720,4032400," in here too but let's actually draw it with a different color so we can distinguish them there we go"
4033120,4041920," so look at that uh we're moving in that in that direction so in towards that direction we're snapping"
4041920,4049200," to one side to the vertical line and we snap into the horizontal one so and we end up with two points"
4049200,4056800," so what we have to do now we have to pick the one that is closest so that's what we have to do um i think"
4056800,4063680," in here it's relatively easy to do if we just maintain something like p3 and we say that initially"
4063680,4078000," p3 is equal to p2 but then uh as we snap x we can say okay p3 now temporarily uh is this it is this now"
4078000,4086480," uh then once once we figure out that k is not equal to zero we have another candidate for p3 so it's actually"
4086480,4092560," called p3 t or something right so and this is going to be something like this and we have to just pick"
4092560,4101360," the one that is closer to p2 all right so we should be able to do something like uh p2 distance to"
4101360,4116160," distance to p3 um t should be less than this distance to p3 and if it is the new p3 is equal to p3"
4116160,4120480," t so and we just return p3 so and we just return p3 something like this but we need to implement"
4120480,4127680," distance to uh for the vector 2 of course of course of course of course of course so here we're going"
4127680,4134080," to accept the second vector so the thing we're going to do we're going to just just do that sub"
4134080,4141280," this and we just take the length so that's the design we have to return that and it's going to be"
4141280,4149120," number uh there we go so does that work does that work that seems to be working so interestingly"
4149120,4154960," maybe we want to disable the debugging of these things all right so and in a place where we do"
4154960,4162800," raise step uh okay so we're already rendering this in tapping okay so as you can see it is speaking"
4162800,4167680," always the closest one except when dx is equal to zero because we never really handled that situation"
4167680,4178000," all right we never really handled that situation uh yes yes yes okay so let's quickly handle that"
4178000,4183120," situation i suppose when dx is equal to zero so it should be relative support i think"
4184320,4190960," uh all right so when dx is equal to zero uh all right so when dx is equal to zero we just need to basically snap"
4190960,4208320," only y uh i think um we need to snap only y and since we are moving um vertically right either down or up"
4210320,4217040," uh we the the x is going to be basically equal to yeah the x is going to stay the same right so that"
4217040,4227200," basically x3 is p2x so that's it that's what it is um so and since this entire thing was never executed"
4227200,4235120," the new p3 is going to be literally that i i think i think that's how it's going to work so x3 uh y3"
4236000,4242000," so that's basically the case in here and yeah so if it's did it work yeah i think it worked"
4242000,4251760," so when dx is equal to zero that works and that always speaks uh this kind of situation right so this"
4251760,4260640," thing um actually reduces like a lot of combinatorial explosion in here actually uh just moving this out"
4260640,4265840," into a separate function right depending on the dx whether it's negative or positive just do either seal"
4265840,4271200," or floor uh it helps tremendously actually it helps tremendously so we don't really need these debug"
4271200,4279120," things anymore uh let's remove them so but we want to actually continuously step right we want to"
4279120,4285520," continuously step until we encounter a wall or something so where is an example i don't really know where it is"
4286240,4292560," uh so maybe it's somewhere up there i'm yeah there we go so as you can see we want to continue continuous"
4292560,4301440," step and snap towards the boundaries like so so that means array step has to be called in a loop right"
4301440,4309680," so how can we approach that so let's literally put it into the loop um so maybe i'm gonna even say that"
4310960,4315280," this is going to be a let so it's going to be modifiable right because as soon as we can compute"
4315280,4320080," the third point i want the second point to become the first one and the third one to become the second"
4320080,4325920," one that makes any sense i'm not sure if it does uh but anyway so let's say that we're gonna do one"
4325920,4335440," single iteration in here just one single iteration uh like so um so and we just rendered everything like"
4335440,4342720," that so let's not render this so afterwards i'm gonna say p1 becomes p2 and p2 becomes p3 right so"
4342720,4348480," we compute the next one and uh yeah everything seems to be fine so this is a single iteration we're doing"
4348480,4353840," uh this is a single iteration and doesn't do shit honestly that's bizarre my new friend what the"
4353840,4359520," fuck is going on um raise step um because p2"
4359520,4368320," eh tough so what if i do two steps maybe that's what's going on yeah apparently i need to do two"
4368320,4375120," steps that's really weird oh yeah i understand why i understand why because the first step just"
4375120,4383280," renders uh this point and the connection between p1 and p2 okay that explains it so that means you need to do"
4383280,4388240," two iterations in here all right so that's fine so the most interesting thing is that what's going to"
4388240,4394400," happen if you want to do the third iteration it doesn't really go any further it doesn't really go"
4394400,4405440," any further because this entire idea with snapping only works uh if for unsnapped points right so as you"
4405440,4411920," can see after the first iteration this thing is already snapped you're trying to snap it again in that"
4411920,4414800," direction but it's already snapped there is nowhere to go"
4414800,4422000," like it's already snapped so it's gonna stay the same so it works only for the first step where this"
4422000,4428400," thing isn't snapped but then it cannot go any further it just can't go any further sad"
4428400,4438480," truly freaking sad so one way we can do that one way we can do that before snapping it towards certain"
4438480,4446960," boundary we can actually just try to push that value towards the direction a little bit"
4446960,4455360," right so if it's already snapped we want to just push it over the edge so um essentially"
4455360,4459440," like we have this thing in here we're trying to snap it towards the direction it's already snapped"
4459440,4467600," there's nothing we can do we can just add like a tiny little bit of an epsilon in here so it goes over this edge and that will actually force it to snap to the next one"
4467600,4474000," so that's one of the things we can do in here uh we can even maybe pass that epsilon"
4474000,4479600," i don't know we can maybe bake that epsilon in here so let's actually say we don't really need this like a"
4479600,4488000," super high precision or anything so one thousands of like of one one thousands is one thousand of one i don't"
4488000,4494960," know what i'm talking about how can we step in that specific direction so we kind of need to normalize dx"
4496960,4504160," but what we can do so in javascript there is a math sign it just gives you the sign of the thing"
4504160,4510880," uh and it's going to give you either minus one or one or zero depending on the value of dx so and we"
4510880,4519120," can just multiply it by the epsilon right so that automatically kind of steps uh towards the direction"
4519120,4526080," with a little bit of the step in here with a little bit of this step so um yeah maybe i'm gonna still"
4526080,4532160," accept the epsilon i'm not really sure how exactly i want to approach that so the next error so we don't"
4532160,4542000," really use this anymore so let's remove that uh next error okay snap so let's maybe bake epsilon in here so"
4542000,4551920," this is going to be epsilon uh one thousand so this is the epsilon that we're uh passing this is another"
4551920,4561040," epsilon that we're passing the next error we don't pass ctx anymore next error no errors okay cool does that"
4561040,4570720," solve the it does it does actually solve the problem right so as you can see now it yeah it can actually step"
4570720,4579520," precisely uh as in here right so that's how we can uh even do all that so that's pretty cool uh so we"
4579520,4587760," we actually do a limited amount of steps erase step so where do we do erase step uh so we can like"
4587760,4593440," increase the amount of steps just to debug things right so now we we do five steps uh right as you can"
4593440,4600640," see sometimes it goes really far oh no i mean yeah that makes sense actually so that"
4600640,4610160," allows us to to kind of jump really really far but i mean yeah that is kind of cool isn't it that is"
4610160,4617600," kind of cool so maybe the next thing we want to do we want to try to allow to go until it goes completely"
4617600,4626880," outside of the thing um that would be an interesting question but how can we even do that"
4629280,4635280," so essentially how can we know uh what"
4635280,4646240," what cell the current ray points to if you know what i'm talking about like what cell it currently points"
4646240,4659200," to uh so essentially we have this rate so this is p2 right so this is p2 right so this is p2 p1 is somewhere"
4659200,4667200," here probably so this is p1 so it means the direction is in here like how can we know that"
4667200,4673680," we're inside of this cell so given this point we need to somehow find this point"
4673680,4684960," right so we can floor both x and y of this value which will make p2 snap to this point"
4685920,4694320," but then in terms of y it's already snapped so it will never snap to here so we can do a similar trick"
4694320,4701360," we did in here right so basically push it towards a direction with a little bit of an epsilon and then"
4701360,4708400," snap both x and y to here so that way uh if you're colliding with a certain sort of thing"
4709440,4719200," um you are you know the cell you're currently hitting at so yeah that's pretty cool and it probably will"
4719200,4725200," work even if you're inside right so if you're inside you're still pushing towards direction you're still"
4725200,4731440," gonna okay so that i think that seems to be seems to be the case um how are we going to be doing all that so"
4731440,4741920," so essentially maybe i want to have it as a separate function um so we have a snap function cell"
4741920,4754960," um heating heating cell right and so in the place where we uh where we're going to be using all that"
4754960,4760400," we don't really have a dx all right so we don't really have a dx so i think we're going to accept"
4760400,4767520," both p1 and p2 right so it's going to be both p1 and p2 so the thing we can do in here we can compute d"
4767520,4775600," so which is p2 sub p1 right we kind of we kind of need to do that uh all right and then we can"
4775600,4790720," essentially push p2 towards a certain direction so we do p2 um x plus math sine dx so we need to"
4790720,4795840," have an epsilon somewhere here so this is the epsilon so we multiply by this epsilon so we're just moving"
4795840,4800320," this kind of doing this kind of stuff towards that and then we want to floor the whole thing in here"
4800320,4809440," and that gives us like the uh you know the x of this cell so and if we repeat that for y if we repeat"
4809440,4818480," that for y we can just straight up return a vector 2 out of this entire thing like so so that's pretty"
4818480,4831600," poggers okay that's pretty poggers um so so we're hitting the cell and we need to post an epsilon honestly"
4831600,4838800," let's actually make the epsilon like a global constant of some sort i think yeah i think that's a good idea"
4838800,4849360," so aps we just don't do that uh right so the next point we don't have to pass that next error we don't"
4849360,4858720," have to pass that all right and we don't have to pass that and uh that's it so the thing i want to do in"
4858720,4869920," here is basically let's just go indefinitely right so we're going indefinitely and then uh for the second"
4869920,4878560," point what we're going to be doing so heating cell p1 p2 right so and we basically have this kind of thing"
4878560,4886320," so heating the cell so uh yeah we don't have to accept the epsilon so we made it a global value"
4886320,4895120," we made it a global value so okay so we have c and essentially i want to break when c is out of bounds"
4895120,4907200," essentially all right so if c is less than zero or c is greater or equal to grid um size x"
4908080,4917440," um or c it actually has to be x right it has to be x so the same thing it has to be repeated for y"
4917440,4927760," y is less than zero or c y is greater or equal grid size uh grid size y and so here we can just break"
4927760,4934080," out of this entire thing so i just want to step at that specific thing uh we can also now introduce some"
4934080,4941280," some sort of a map which denotes whether something is a wall or not a wall and also step at walls right"
4941280,4947600," but let's actually first check the boundaries i hope it's not going to go into the infinite loop or anything"
4948160,4955120," uh okay so that kind of that is a little bit bizarre i don't really know why it doesn't"
4955120,4964560," yeah why does it stop so i would expect it to at least maybe"
4966320,4976800," uh allow to go there so if p2 is already looking oh it's if it's already looking at something okay"
4976800,4982960," maybe it should not be p2 right maybe it should not be p2 maybe it has to be more like p1"
4984400,4994960," uh but i'm not 100% sure um yeah because it doesn't make any sense honestly"
4994960,5005280," um so we're pointing at the x equal to zero okay so but that should"
5007200,5014480," create the next thing um i think i i think i know what is what is going on i think we have to do this"
5014480,5021600," check after which or after we rendered something yeah okay that that explains okay so it was a rendering"
5021600,5030480," bug actually it was a completely rendering bug cool so now we are tracing all of that uh up until the out of"
5030480,5039280," bound stuff that is super cool believe it or not that is insanely cool all right so let me maybe introduce"
5039280,5051440," um the scene so to speak uh so we have a grid rows and columns so we have grid rows and columns so we"
5051440,5058880," probably need to do this weird node stuff right so i can always create like a 10 elements in here like 10"
5059520,5067120," elements and i can't even fill the or i can fill this kind of stuff maybe with zeros but interestingly"
5067120,5074720," enough right so i can't fill this entire stuff with another array of tens uh tens which are filled with"
5074720,5084880," zeros i can't really easily do that uh because if i modify this thing so if i just assign this thing to"
5084880,5091520," one and let's take a look at that uh right as you can see rows they share the same thing which is not"
5091520,5096320," particularly great i think i don't think it is particularly great so what we have to do we have"
5096320,5105120," to actually map each individual element to this entire thing but uh we actually have to fill this entire"
5105120,5111440," thing with something first right only then it is going to work like that right because arrays have like"
5111440,5115120," empty elements or something like that i don't really know how javascript works and don't really care"
5115120,5122400," so we kind of want something like this in here right so this is what we kind of want uh and so here"
5122400,5128400," we create this amount of rows and this amount of columns right so this is what we have and this is"
5128400,5138800," basically a scene uh right so this is basically a scene uh but maybe this scene has to be um um"
5138800,5143520," initialized somehow somewhere i don't really know where but we should probably try to initialize it"
5143520,5146720," so for instance i maybe want to set"
5148160,5158480," the scene one one one one two one right so but we won't be able to even see anything in here because"
5158480,5165360," we don't visualize uh these cells like at all so visualize the grid right so we visualize the grid but"
5165360,5175200," nothing much so i think what we have to do in here we have to before we render the grid at all we have to"
5175200,5183840," iterate all the rows right so we're iterating grid rows like so and then iterate the columns and emacs"
5183840,5196720," so this is the columns uh this is x right and and and and if sin y x is equal to one or maybe let's say"
5196720,5203200," not equal to zero right so not equal to zero we have to draw the rectangle of some sort right so ctx feel"
5203840,5210640," correct and let me think what we want to do in here so maybe i'm going to actually put this as a"
5210640,5221040," fill style so this is our fill style and we're filling in fact x and y um with the size one one right"
5221040,5227280," so because everything is normalized right now so yeah there we go so as you can see we have a wall we have"
5227280,5235440," a single wall one of the things we can do now one of the conditions to stop the um the ray tracing ray"
5235440,5244080," casting rather is not only when we out of bounds but also when we hit one of the walls right so after"
5244080,5252800," checking all the bounds in here uh right so in here we are 100 sure that uh cx and cy is within the bounds so"
5252800,5264160," which enables us to do something like sin um sin c y cx uh equal to one right if it is equal to one"
5264160,5271200," we're just breaking out of this entire loop like so look at that so this is basically the exit condition"
5271200,5277840," this is basically the exit condition so let me see it doesn't fucking work so i wonder why"
5278720,5282320," because i forgot to save this entire okay uh it works"
5282320,5293840," so yeah we have a working ray casting algorithm so we can cast the race and they stop at walls and"
5293840,5302480," shit they stop at walls and so it would be kind of cool to actually have arbitrary scenes in here uh"
5302480,5307840," right so as you can see scenes right now um they have to be specifically square which is a little bit"
5307840,5320720," annoying honestly which is a little bit annoying so if i make it like non-square uh right so 10 by 20"
5320720,5328400," so it becomes something like this but this is entirely like a rendering box so uh it's kind of understandable"
5328400,5336720," so what i'm thinking is what i'm thinking is maybe what we have to do we have to um turn this entire"
5336720,5343360," thing into a mini map right so because we're just like rendering the internal representation of the scene"
5343360,5350080," and stuff like that but this is not like a real ray casting right so we haven't got into like actually"
5350080,5355040," getting something like this on the screen like whatsoever we're just like figuring out the math"
5355040,5361360," and as you can see math is actually kind of finicky right so it's pretty nasty honestly so there's a lot"
5361360,5367200," of corner cases and stuff like that and it's just like meh kind of meh so we need to have both of the"
5367200,5373440," views and we need to have this sort of view and the view of the actual rendering so what i'm thinking is"
5373440,5379920," that i want to turn this into a step into sort of like a mini map uh i wonder yeah this one is rather weird"
5379920,5382960," yeah i mean if it's tunnels through there's nothing much you can do anyway"
5382960,5388480," uh right so i want to turn this into a mini map so let's call this a mini map"
5390000,5398160," so me a map let's go through the uh compilation errors okay so this is just a mini map on top of"
5398160,5405360," this being a mini map i think we have to specify a rectangle uh on the screen into which we have to"
5405360,5416320," fit the entirety of this thing right so let me see so i think it's gonna be um i i don't know how to call"
5416320,5423040," that maybe it's gonna be a boundary right and it's going to be basically an array of two vectors right"
5423040,5428960," so it's going to be vector two and vector two so it's going to represent the position of the left"
5428960,5434880," top corner and then the size of the boundary it's basically a rectangle so that's what i want in here"
5434880,5441760," and on top of that i think i also need to accept this scene right so i i don't want this scene to be"
5441760,5448080," like hardcoded like this uh i want the scene to be passable to uh to the thing that renders the mini"
5448080,5455440," map so let me quickly see what i can do in here so this is the scene and how do you do that is that"
5455440,5462240," do i have arrays in typescript yeah i do have arrays so i can say it's an array of array of numbers"
5462240,5467200," right so i can maybe even factor out that into a type but i don't really want to do that"
5467920,5473120," as of right now at least so what i want to do uh i want to get rid of all of this stuff"
5473120,5478400," right so uh because we for the longest time we had the we had this grid like sort of"
5478400,5484000," hard-coded i want to unhard code all that stuff uh all right so let's go to the compilation errors"
5484000,5487600," let's go to the compilation errors so we have a boundary which is in use that's fine"
5487600,5494240," okay so here's the scale here's the scale okay so we can"
5494240,5503520," so we're taking the entirety of the thing but to be fair i think what we have to do is we have to take the"
5503520,5515680," boundary size so let's say that we're going to have it as a position position and size and this is the"
5515680,5520720," boundary so we're going to destructurize it which kind of hints that maybe we should just pass this"
5520720,5525920," as a position and and size i don't really know why like you grouped all of that like this that's kind"
5525920,5533040," of weird uh yeah and this is the size so which is a vector too all right so this position the size"
5533040,5540480," so the way we need to scale all of that stuff we just need to take the size i suppose and divide it by"
5541200,5547440," uh grid columns and grid rows which is basically the dimensions of the scene so we need some sort of a"
5547440,5555040," function i don't know how to call that which accepts the scene which is this you know what let's factor"
5555040,5561920," this type out so we're going to say that type scene is that so this is the scene this is the scene and it"
5561920,5568720," just returns you a vector which is the size of the scene okay size of the scene size uh scene size there"
5568720,5576720," we go figure that out so and uh it returns you some sort of vector can i just assert something i don't"
5576720,5585520," know so it's console assert console hola so does it even work uh so conditions is there something like to do"
5586240,5594400," i wonder transform two documents so it's not ready to do i was thinking that's just like i want i want"
5594400,5602720," to crash uh i think i can do something like throw new error uh like to do scene size i don't want to"
5602720,5608480," implement it right now so i just want to kind of postpone the implementation for a little bit later"
5611520,5618560," so uh here we have a size uh the size of the whole boundary and i want to actually divide this entire"
5618560,5625360," thing by the scene size scene size and we provide the scene so it computes the size and that's how i"
5625360,5632080," want to scale this entire thing i can actually do something cool i think i can take an array all right"
5632080,5642640," and i can literally spread this thing in here uh huh yeah boy so we're scaling it like that so now"
5642640,5650400," this one is actually getting interesting um so what i'm thinking is i want to have something like grid size"
5650400,5658640," so it's a scene size so this is a sense i said so i can reuse this thing in here so this is a grid size"
5658640,5670800," so that means now i can do grid size y and this is grid size x all right so what's the next error go to"
5670800,5680000," the next error all right so columns is x so this is a grid size x uh and this is grid size y all right"
5680000,5686160," so what do i have in here okay so this one is pretty straightforward i think because i can just do grid"
5687040,5696400," size i can just do grid size uh multiplied by this vector essentially without the grid rows or any of"
5696400,5705520," these blue sheets any of these blue sheets okay so that's pretty cool that's pretty cool that's pretty"
5705520,5715040," cool by the way on top of scaling this entire thing so since the minimap has a position so it can be placed"
5715040,5720720," anywhere on the screen i think on top of scaling this entire thing we also need to do translation does it do"
5720720,5731040," translation uh so you can you can translate okay okay okay okay okay so let's give it a try but i'm not"
5731040,5739680," actually sure uh right so we first probably want to translate the whole thing so we take the position"
5739680,5745360," an array and translate it and then scale it i'm not 100 percent sure or maybe first scale it and"
5745360,5750960," translate it so uh like we should expect that there should be there will be some sort of bugs when we"
5750960,5755760," first try this kind of thing right so because i'm not sure in which order we have to do i feel like i"
5755760,5764080," first use scale and then translate i think right because yeah i think it makes sense whatever we'll see"
5764080,5769760," we'll see we'll see so uh the next error that we have in here so this is a grid rows which is grid size"
5769760,5778000," y and this one is a grid size x grid size x what's cool about the statically type compiled uh language"
5778000,5783360," right is that like i can just follow the compilation errors and automatically refactor everything compiler"
5783360,5790240," assisted refactoring compiler assisted refactoring so yeah that's pretty cool it would be kind of nice if"
5790240,5798560," um i could just like quickly check that something is within a certain boundary"
5805600,5811440," i wonder if i can have something like"
5811440,5822800," i don't know i know i don't know i don't know so let's not do that so uh yeah i think it will be"
5822800,5828320," easy to just keep it like that i think i'm already over complicating yeah so it's i didn't have to modify"
5828320,5834640," this thing too much i don't know keep overthinking as usual keep overthinking as usual so here here's the"
5834640,5843120," thing now i should be freaking able to do this kind of stuff where i can just have this thing uh and"
5843120,5851760," have a bunch of these things in here um right with arbitrary shapes instead with arbitrary shapes and"
5851760,5860400," i can just like place arbitrary walls in here just place arbitrary walls in here just to test how this whole"
5860400,5867840," thing works um so let's see how this thing works works um yeah so let's go to the next error so grid columns"
5867840,5872960," okay so this one is rather interesting so because we're"
5872960,5875600," specifically like mapping"
5875600,5877680," yeah so now"
5877680,5880640," yeah this one is interesting"
5885600,5893680," so we have i think this thing has to be square so it's a four by four so it's a four by four uh and"
5893680,5901120," in here we have to have a grid size or maybe scene size so and this is the scene and that should"
5901120,5911360," give us the thing so okay so in terms of position uh this has to be zero maybe let me create a second"
5911360,5913120," constructor or something like static"
5913120,5922160," zero which is going to return vector two and that is going to be a new vector two uh zero zero right"
5922160,5932960," so we want to be able to do this kind of thing um vector two zero okay so and in terms of this size in"
5932960,5940400," terms of the size i think do you have a canvas size yeah i do have a canvas size perfect canvas uh"
5940400,5948880," canvas size let's just do ctx right so that's the position i have in here so and then i also specify"
5948880,5956640," this scene yep that's it so and i can repeat this thing here okay so i refactored it a little bit so now"
5956640,5962080," scene is kind of replaceable but it has to be specifically square otherwise it's going to be distorted when"
5962080,5970400," displayed in here so let me see and it doesn't work uh i wonder why so does it say any errors okay so ah"
5970400,5973040," sure"
5973040,5981120," scene size okay so let's let's go ahead and implement it so the the y is pretty straightforward it's just a scene"
5981120,5989760," length that's the y uh we can put it like this even so x is a little bit more interesting i think uh because"
5991760,5996640," it's basically the maximum row within the scene i think i think that's how we should consider the"
5996640,6005040," maximum rule within the scene um so we have to maybe take the minimum value so number"
6005040,6014320," mean value number mean value so let's iterate through each individual row in here uh let row of scene"
6015840,6028320," um all right um all right and basically we can do math max x row length length i said so now we should be"
6028320,6037520," able to just return the vector to x and y so that's the size of the scene all right there's that and that"
6037520,6045120," seems to be working that seems to be at working look at that so here this thing and this seems to be working"
6045120,6054080," yeah but it's it's too small honestly it's too small but it's customizable now it's immensely customizable"
6054080,6062640," so i can just do something like this right so this is basically plus three one two three uh so we have"
6062640,6069760," seven columns and seven rows okay so that allows us to do something like this uh but the initial position"
6069760,6076560," of the player the initial position of the player is kind of a sus if you ask me so and for some reason"
6076560,6083040," it's also defined in here i have no idea why it is defined in here maybe you should actually define it"
6083040,6093200," in here uh so and minimap should accept the p1 as well all right so let's go to the next error uh this"
6093200,6099680," thing is never used grid size we actually compute grid size if you think about it"
6101280,6119120," grid size so we can do const grid size like so uh-huh so p1 p1 uh-huh canvas is it really grids ah it has"
6119120,6126240," to be canvas size i don't know why i decided to do it like that it's a canvas size all right are you are you"
6126240,6138160," happy um so what was doing so why did i replace this thing with grid size i don't know let me let me see"
6138160,6151840," uh-huh yeah um something something is terribly wrong one more time one more time but with a passion so grid"
6152720,6162960," we're gonna say scene size scene all right that should be basically enough uh p1 yeah so it's not"
6162960,6175600," available p1 vector minimap p1 p1 all right so are you happy now minor friendly minor friendly okay so that's"
6175600,6180880," cool so the reason why i was doing that is because now i can customize quite easily where we're gonna move"
6180880,6188560," all of these things so maybe i'm gonna say six uh four uh there we go so that makes more sense i think"
6188560,6196720," might as well actually move this and i think closer to the borders and stuff that yeah so and in terms of"
6196720,6207840," here um so maybe 93 yeah so that looks much better i think yes we used to look at that that's pretty cool"
6207840,6212240," so we already can scan the whole thing in here so we already can scan the whole thing in here that is"
6212240,6222800," fucking epic meat that is fucking epic so again we can't really you know have rectangular maps because"
6222800,6228640," they're gonna look like look at that they look like but i mean it's just like a display bug"
6229360,6236160," it's kind of a display bug what's funny what's funny is what's funny is we can um"
6236160,6239520," actually display those things"
6239520,6247360," um smaller right so let me try the following thing i'm gonna have a minimap position right so minimap"
6247360,6259040," position is just a vector zero uh and minimap size so the minimap size is just a canvas size canvas size"
6259040,6272560," so uh okay okay okay okay okay okay okay okay uh so what if i scale this by half"
6272560,6290960," uh so what if i scale this by half became smaller so what's funny is that"
6292080,6300720," the mouse is not properly mapped and the mouse is not mapped and so we have to map it differently"
6300720,6309680," so we used to divide it by the canvas size now we have to divide it divided by minimap size"
6310880,6321680," that's right that's right so yeah that works and uh-huh so that works but now what if i want to offset"
6321680,6334320," the position so essentially i can maybe add so we have a um yeah canvas size canvas size c2x"
6335120,6344960," and maybe scale it by 10 right so i want to just uh jesus bro okay so that was a mistake i didn't think"
6344960,6353360," that was a good idea so let's try to slowly offset the center i think so what if i just upset the center i"
6353360,6363360," think by one pixel all right that didn't change that much uh so what if i have set it by 10 pixels"
6364160,6374000," it goes forward too much and i wonder if this is because of how i do the translation and scaling"
6374000,6382400," what if i do them in a different order that makes more sense so as i already said right uh i expected"
6382400,6387440," this to have some bugs because i can never remember like whether you translate first or scale first or"
6387440,6393520," something like that i can never freaking remember mate i can never freaking remember so what about 100"
6394160,6400560," uh okay so that's cool but now the the mouse is of set the mouse is of this so one of the things we"
6400560,6406000," probably have to do we have to maybe subtract so we have to do the same thing in here like scaling and"
6406000,6411840," translation and stuff right so and i wonder if i have to subtract it or maybe add i will figure it out"
6411840,6418320," uh yeah i just had it to add the subtract it okay that's perfect so that means now i can"
6418320,6427680," place this mini map like anywhere um and uh then in in the background have an actual rendering so i kind"
6427680,6433280," of separate have separate rendering of the scene and the mini map of the scene so this is actually super"
6433280,6441040," convenient i think this is actually super convenient so let me take the canvas uh canvas size so this is"
6441040,6450640," going to be canvas size ctx and i want to scale it maybe by uh like maybe how what should i call it like"
6450640,6457840," 10 percent so that's going to be yeah the offset uh but also i'm not kind of sure so what if it's that"
6459760,6468800," yeah this is not good yeah so that's the size of the mini map uh and of like the padding has to be"
6468800,6476400," yeah that's that's good i think that's good that's a good one so that's a good main map one of the"
6476400,6484880," things we can do now i think one of the things we can do now we can try to add a support for rectangular"
6484880,6492880," things right so i'm not sure of how visible it is is it really visible i think it's not particularly"
6492880,6499520," visible so let me try to maybe increase the line width twice yeah i think it becomes better so maybe"
6499520,6508400," even six yeah boy so i think it's more visible let me see in obs yeah i think in obs it's actually visible"
6508400,6523600," so um okay so how are we going to approach this entire stuff so instead of like computing minimap"
6523600,6530160," size in terms of canvas size let's compute it in terms of the cell size let's introduce the cell size"
6530800,6540720," in the cell size let's say that it's going to be ctx canvas width uh maybe like um you know 10 of the"
6540720,6546720," shit and what we're going to be doing is actually we're going to take the scene size right so this is"
6546720,6554320," a scene size uh of the scene and we are multiplying it actually scaling it by the cell size and that's"
6554320,6562560," basically the the size of the minimap uh right so and it retains its shape it retains its shape"
6562560,6572080," yeah so that's actually perfect that's actually perfect that's all the math works out surprisingly"
6572080,6578560," all of the math works out uh so yeah now i can actually have arbitrary shapes and stuff uh maybe i'm"
6578560,6587840," going to do like four and so it's a proper minimap um of sorts so maybe i can reduce the padding in here"
6587840,6593840," so yeah i can control all that so and now in the background i can have something else and to be fair"
6593840,6599520," like i don't really need to keep the game square right so i can just use 800 by 600 and it's still going"
6599520,6605440," to work fine i think uh i think it is still going to work fine maybe we can even use like a"
6606080,6614400," 16 by 9 uh you know ratio in here with a certain factor uh factor multiply by factor it doesn't"
6614400,6622240," have to be super big i think so it could be something like 15 maybe uh maybe even closer to 18"
6622240,6629920," yeah that's much better and i want to reduce this cell size in here maybe two uh that's too much"
6629920,6635520," actually what about three it scales way too quickly yeah it scales way too quickly okay"
6636400,6642080," that is a pretty apocalypse that is pretty apocalypse so we're just doing for two hours i think the time"
6642080,6648240," has come for another break so yeah as you can see this particular thing is actually very"
6648240,6653520," fucking complicated and this is what i was talking about uh at the beginning of the session right so"
6653520,6660400," i just like i really underestimated how many small little things there is in raycasting"
6660400,6667760," so you can explain the idea of ray casting on on the piece of paper on a napkin right so but then if"
6667760,6672400," you like sit down to implement it there's a lot of different things and you need to have like special"
6672400,6677120," things to debug all of that stuff right and for the longest time you won't be able to even see anything"
6677120,6682320," on the screen right so you're just messing with it with the geometric stuff it's it's really freaking"
6682320,6687520," surprising like i really underestimated this problem um so anyway i want to make a small break i want to"
6687520,6694640," refill my cup of tea and after that we're gonna try to finally render something on the screen like god damn"
6694640,6704080," so anyway let's make some break um i'll write them back with my team so let's continue um what we need"
6704080,6711360," to do i think the time has come to finally introduce the notion of the player i think it's kind of crucial"
6711360,6718400," to have a player in here um so let's create a class right so player and what player is going to have"
6718400,6724480," it is going to have a position where the player is located currently and i suppose also a direction"
6724480,6730880," where the player is currently looking so let's put it like this uh we probably need to create um"
6730880,6737440," constructor for this entire thing so position we're going to specify the position the direction"
6737440,6746880," uh which is just a number just a number and then this position this and then we're going to do direction"
6748320,6760480," position the direction so um now i suppose this is what we need to have instead of p1 and p2 honestly"
6760480,6765840," uh right so let's actually create the player uh and this is going to be a new player the position let's say"
6765840,6774560," is going to be this so this is the position direction let's put it as zero so and that kind of"
6774560,6781120," means that i have to get rid of this entire stuff right so and i suppose minimap now should accept"
6781120,6788480," only the player uh all right so this is what we're going to have in here but the definition of the player"
6788480,6794320," is down below so but i mean maybe it's like just hoisted automatically i don't have to worry about this"
6794320,6801280," kind of stuff yeah probably don't have to um so what do we have in here so here is the player"
6801280,6811200," and uh what i'm passing in here is just the player all right so that makes sense hopefully um now"
6815120,6824400," so grid yeah actually resetting the whole state of the context just on the minimap is kind of bad i think"
6824400,6832080," so what would be better in my opinion is saving the state and then restoring the state i feel like canvas"
6832080,6838000," has this kind of stuff yeah so you can save it and then you can restore it i suppose it works like a stack"
6838800,6844960," of some sort let me actually see to save a method saves the entire uh canvas by pushing the current okay"
6844960,6850160," so okay that's that's pretty straightforward all right all right so we can just do something like um"
6850160,6856400," save and then at the end of doing all of this stuff we just do a ctx"
6856400,6862560," restore uh cool so it just cleans up everything after itself"
6863200,6869440," um so that means we can have separate function that renders the scene like just does the raycasting"
6869440,6875600," and it has its own state and stuff like that and minimap is not gonna ruin that state um so we have"
6875600,6881920," a bunch of errors which is fine so let's actually go through them so this is the next error uh the next"
6881920,6887760," one so we fill this circle um so we probably need to just fill the position of the player all right so and"
6887760,6897120," we don't have a p2 so that's about it uh next error so we ran out of errors uh very cool right so here's"
6897120,6901200," the position of the player it doesn't really have a direction or anything like that but maybe we should"
6901200,6908000," render that direction right so it would be kind of nice to maybe um uh have something like a vector"
6908000,6916960," two from angle where i could just do player direction so and then uh yeah just just render that as a second"
6916960,6924160," point so maybe even take a player position uh add the whole thing uh add the whole thing"
6924160,6933040," and then from angle maybe you scale that uh we can scale it by what we can scale it by the nearing"
6933040,6943600," clipping plane so essentially um just a second um here is the position of the player might as well"
6943600,6949200," want to take something like this so this is the position of the player uh the player has a certain"
6949200,6957040," direction it's looking at so and when we're doing ray casting we also have a certain like a plane onto"
6957040,6963040," which we are um projecting everything so when we are rendering the direction the player looking at we"
6963040,6968320," might as well actually take the length as the distance between the player and that clipping plane that"
6968320,6976480," projection plane so we probably want to define it somewhere so we have this epsilon uh let's"
6976480,6985520," introduce near clipping plane uh which is going to be maybe half of a cell because why not so this is"
6985520,6991520," what we're going to have in here so mini map uh where is the player position blah blah blah so we scale it by"
6991520,6997440," near clipping plane and we still have a from angle so let's introduce that so we're going to have a static"
6997440,7005600," from angle we accept the angle which is a number we return vector two and we just return the vector which"
7005600,7017040," is basically cosine of an angle and sine of an angle there we go so that's pretty cool so that gives us the"
7018480,7027760," point to towards which we want to stroke a line i think so we stroke a line from player position from"
7027760,7033680," player position to this specific point that we constructed in here so we also have to pass this"
7033680,7040480," ctx of course of course of course of course okay so we can see some but it's not really colored"
7040480,7049120," properly so appropriately so appropriately we have to do stroke style like so yeah so that looks fine i guess"
7049120,7058560," that looks fine for now we can increase the minimap for now so we can see some stuff uh just make it"
7058560,7067040," bigger that's too big a little bit smaller so it fits into the screen uh right so and we can experiment and"
7067040,7075920," stuff like that so let's maybe move the player um in some different place what about 63 by 63"
7075920,7083840," uh just i want to move it closer to here okay so let's rotate it and make it look at these obstacles"
7083840,7094240," right so if i rotate 90 degrees so this is just the position and uh here we're gonna have math"
7094240,7102720," pi is basically half of a circle right so i need to take half of a pi so that rotates it like yeah because"
7102720,7108000," the coordinate system that's understandable so what about one okay and we can"
7109120,7116320," maybe multiply it by 125 like a little bit more so now it is looking towards that uh so maybe near"
7116320,7122320," clipping plane what about 75 so i want it to be a little bit bigger so yeah it is now a little bit bigger"
7122320,7135680," so that's pretty cool you know but we also need to specify maybe fob right so what's the field of view"
7135680,7145680," the field of view is going to be i suppose 90 degrees right so fob um so what is 90 it's a half of a pie i"
7145680,7154160," suppose right so this is a half of a pie so this is fob so i want to actually render that fob um so let me"
7154160,7162960," see how we can do all of that so we even discuss that on the scrapped session scrapped online session so"
7162960,7173200," this is basically the right triangle so this is the right triangle so fob we kind of know this angle alpha"
7173200,7180400," right so we know this angle alpha uh so and it's basically half of the fob right so we can just say that"
7180400,7192800," this is fob right i'm using mouse by the way mouse to to draw in here right so and if we take the 10 of alpha"
7192800,7207520," we can end up with basically um with basically a ratio between opposing uh side and adjacent one to the angle"
7208400,7216000," right so opposing is this value that we're probably interested in right we're interested in this length"
7216000,7224960," uh because once we know it we can quite easily jump to here right and then knowing the length we"
7224960,7230320," can jump to here effectively finding this point and it's super easy to find the opposite point you just"
7230320,7235280," jump in the opposite direction by the same amount right so when you have two points in here and now you"
7235280,7241360," can actually start shooting race super easy right so it's it's very straightforward you can take 10a"
7241360,7248240," and since it's this ratio right and you want to find opposing you know adjacent right this is near"
7248240,7255760," clipping plane right so that means you can just multiply uh that by near clipping plane and cp"
7255760,7262640," right and effectively you will cancel out the adjacent thing and you're going to end up with opposing one"
7262640,7268800," so you're going to end up with this sort of length that you're interested in so yeah that's essentially"
7268800,7276240," what we effectively have to do in here um so to find the correct thing let me let me try to do that so"
7276240,7285280," math 10 uh and this is fov half of the fov and we multiply it by the near clipping plane so there we go so that's the"
7285280,7295680," the length of one of this arm in here right so this sort of like arm and um i'm thinking how should i call"
7295680,7304800," it so maybe i'm going to call just l but i'm not 100 sure so what is this one so this is a thing right in"
7304800,7311200," front of the player right this is a thing right in front of the player so this is a player position and we have a"
7311200,7316720," a thing right in front of it so i'm not really sure how to call it so i'm thinking to call it just"
7316720,7326240," uh p right so this is just that uh interestingly um i think i'm gonna call the left sort of arm and right"
7326240,7335680," arm like p1 and p2 or maybe pl and pr uh correspondingly like p left and p right but in any case i need to"
7335680,7347520," essentially take this vector all right i need to take this vector that i have and rotate it 90 degrees"
7347520,7353280," so to rotate the vector 90 degrees it's actually super easy all right so if you have a vector x y"
7353280,7359200," to rotate the 90 degrees you can just to take minus y x right it's super freaking easy and it's gonna have"
7359200,7365920," the same uh same length so maybe we can have a method in here that just does that so we can change things"
7365920,7375600," together um so let's say rod to 90 and it's gonna be vector two so we're gonna return the new vector two"
7375600,7385520," this y minus uh this x right so that's pretty cool um yeah"
7385520,7401040," okay so i can now take uh p rotate 90 normalize it and then scale by l but to do that i obviously need to"
7401040,7406000," have to have this kind of thing so this is also something like this so this is one of these arms"
7406000,7412720," is it oh yeah i never called it actually so this is p1 all right this is p1 and i probably want to"
7412720,7418800," render it somehow so i'm rendering thing from position to p then"
7418800,7428320," so my neighbors are doing something weird uh so from pu to p1 and let's see if it's gonna be like a left"
7428320,7437520," side oh jesus okay okay this is the um yeah so this is not the direction vector right so"
7437520,7446880," what we have to do so if i remove this thing this is a correct position so i need to subtract one from"
7446880,7456160," another so what i have to do actually is subtract player position right subtract player position rotate 90"
7456160,7462640," normalize scale and i guess add clear position again so that's probably what i have to do in here"
7462640,7469680," and that will give me kind of that but that fucking sucks maybe i should have not added that"
7469680,7476640," um yeah i think i should have actually added p"
7478240,7491760," not p1 finally cheese is fucking christ okay so and uh i suppose um so this is just that uh and"
7491760,7501360," maybe i should have added it in a different order right so i just added like that because now if i want"
7501360,7504000," to do p2 i want to do p2 i just have to subtract it"
7504000,7512400," yeah there go that's what i'm talking about so there's another thing i want to draw in here is just"
7512400,7526560," basically player position uh p1 and p2 so that connects all that together so yeah we can increase the distance"
7526560,7532720," of the clipping plane like so we can also change fob we can make it narrower"
7532720,7539120," but i think 90 degrees is the optimal one uh but i'm not sure about the clipping plane or anything like"
7539120,7549760," that so that's pretty cool isn't it uh so yeah so this is how we find p1 and p2"
7550560,7556400," giving the player position and the player direction so that is actually super cool"
7556400,7568960," so now what we have to do is interpolate from this side to this side and start shooting rays"
7568960,7575280," in all of these directions and see what kind of things we hit in there right that's what we have to"
7575280,7583040," start doing um so i think what we need to do in here is like we have step array like a race step"
7583040,7589520," so we have a race step um do i need any of these ones in here because they take up too much space but"
7589520,7595600," maybe i do right they're kind of useful yeah it's kind of useful um what i want to have i want to have a"
7595600,7604480," function called cast ray um so it accepts p1 p2 both of them are vectors um and i suppose it also accepts"
7604480,7607840," this scene uh so let's accept this scene"
7607840,7612480," so this is a scene"
7612480,7621600," and what i feel like it's supposed to return it's supposed to return maybe a color right of the thing"
7621600,7629360," so basically the color of the stripe that you need to render uh or undefined if we didn't find anything"
7629360,7639360," right if we went into the void um also interestingly so i think it also need to specify i think it should"
7639360,7643760," return the vector which is going to be basically the coordinate within the scene so you can estimate for"
7643760,7653760," yourself uh right so like what's that thing um maybe it should also return a vector to basically the the"
7653760,7661440," point at which it stopped the point at which it stopped i think it's a it's a good thing right so the"
7661440,7673680," the point at which it stopped um so yes yes yes yes and i'm gonna do new uh throw new error and uh so"
7673680,7680320," what we're gonna do in here is just like cast array not implemented so in the future i kind of plan to"
7680320,7688720," store colors instead of um instead of numbers in here so maybe we can even do something like uh string or"
7688720,7694560," null right so it's gonna be filled in with nulls uh if there is nothing in there or if it has something"
7694560,7700240," string is going to represent the color and that's the color that we're going to display and stuff like that"
7700240,7706080," and i think it's really important to return a vector in case of the cast array uh because we need"
7706080,7711920," to estimate the distance so we can actually draw the strip shorter right so it creates this effect of"
7712720,7717920," uh you know of projection or something or perspective right that's what i was trying to say because"
7717920,7725840," the far farther away an object the you know the smaller it becomes right so it will also depend"
7725840,7730880," how exactly we want to interpolate things right so maybe there will be some sort of like a"
7730880,7738480," far clipping plane but i haven't decided how exactly it's going to look like anyways so this is a cast array"
7738480,7750640," uh and all right so this is a mini map uh i feel like the player uh how are we gonna approach all that"
7750640,7760880," stuff i don't know i'm freaking out i kind of feel like i want to tuck away this kind of stuff uh behind"
7762560,7766640," the um the um the player function because this kind of stuff is going to be useful in both"
7766640,7777280," um yeah in both mini map and actual rendering right so it kind of makes sense to"
7777280,7782240," just have some sort of a function within the class player um"
7782240,7789360," that gives you p1 and p2 right so i didn't really know how to call this function"
7790160,7798800," but it basically returns you these two vectors like p1 and p2 so let's move this entire logic in there"
7798800,7803680," so what is this for there we go"
7803680,7814720," so i can create place player with this very freaking easily uh and we can just return p1 p2 that's it"
7816000,7825760," so now i can quite easily do something like const p1 p2 p1 p2 player full"
7825760,7832080," right and we don't even need that stuff anymore like at all"
7832080,7839680," in fact i think we don't need any of these things so we just need to connect p1 and p2"
7839680,7842640," so we're kind of losing the middle one but it's not really important right so"
7842640,7852240," uh we lost the middle one but we can clearly see the you know the fov the fov thing so i'm not sure how"
7852240,7859520," how to call this for uh all right so it's a fov range right so just basically"
7859520,7864080," i don't know so maybe that's what it is"
7864080,7872400," fov range and we'll need that in two places at least right so we'll need that in two places at least"
7873360,7881120," okay that's pretty cool uh what is the other thing we need in here um so we need a function render"
7881120,7886560," i suppose it's gonna be ctx and honestly i think that render thingy has to happen"
7886560,7894720," oh what's up with that uh number is assignable oh yeah i modified type scene yeah so it has to be"
7896000,7902160," uh yeah that's that's that's fine that's totally fine um so we pass this thing in here and also"
7902160,7909200," probably this scene yeah there we go uh so we're gonna have a render let me grab"
7909200,7916720," this thing so it's a canvas uh-huh so player"
7918720,7930800," and the scene okay that's cool so and in here we can quite easily already do uh p1 p2 uh player fov"
7930800,7937040," range and there we go so we can now start interpolating from one point to another"
7937040,7945520," we can start interpolating it um so i supposed to be able to interpolate it right so we we probably"
7945520,7952320," want to have something like lerp p2 and just like parameter here from zero to one maybe half or"
7952320,7964000," something uh right and let me quickly implement that um so lerp that vector to t number and we're gonna"
7964000,7973440," return vector two so what we're doing we are basically subtracting this from that and we're scaling it by t"
7973440,7980560," but then we're also adding this back maybe like add this so that's basically going to be our lerp"
7980560,7988560," that is our lerp that is our lerp though i could have done that myself without a lerp but i mean that's"
7988560,7995280," fine so to be fair like rendering doing ray casting at a high resolution is probably going to be super slow"
7995280,8001360," right because you have like a lot of columns so i'm thinking that i'm going to have a smaller resolution"
8001360,8009040," right so let me think how i'm going to approach this entire stuff so i'm going to say we're probably"
8009040,8013840," going to have something like a screen width right and the screen width is going to be like how many"
8013840,8019840," of those things we want to have in here i'll say we're going to have 100 rays from there um right okay"
8020960,8031520," so 100 rays so where's the render function here's the render function so that means i'm basically"
8031520,8040240," iterating from zero to screen width i might as well actually call it x right so i'm just calling it x plus"
8040240,8049520," plus x okay so and in here i'm going to be interpolating like this right as you can see i'm interpolating from p1 to"
8049520,8058480," uh p2 and that's essentially the um uh the thing i have in here so since it's a range i want to kind of"
8058480,8070480," call it maybe r like it's uh r1 r2 r1 r2 uh and it doesn't really matter that much so let's call it p so"
8070480,8078320," essentially i basically found one point in here so i'm just slowly iterating through all of these points"
8078320,8084720," in here and each of this point gives me sort of the next point for the array so the array begins in here"
8084720,8090480," and it continues it here and this is where we have to cast it and step it and so on and so forth right so"
8090480,8097680," and this is what we have to do so if uh where is the cast array so that's what we have to put in here"
8097680,8104560," so we're casting the array um so we pass in this scene and p1 is going to be the player position"
8104560,8110240," player position and this one is going to be just p right since it's such a small thing we might as well"
8110800,8117120," you know just do something like this and we have some sort of a result of the array all right and"
8117120,8122880," um so this is where it hits so maybe this is what we're going to call p"
8123760,8131680," um and we can see whether this thing hits anything right so we have a function heating cell all right"
8131680,8137440," so this is a heating cell does it even hit anything so in the heating cell expect you to have a direction"
8137440,8144080," so we do have information about the direction because we have this kind of stuff all right so and yeah so"
8144080,8151520," it only pass this to the science of everything should be fine so this is a cell so we have a cell"
8152080,8155280," and we want to check whether whether we're within the"
8155280,8163680," within the scene um to be fair we don't really have a convenient function to do that"
8163680,8174960," um so let me try to maybe introduce such function uh it's going to be inside scene so we accept the scene"
8174960,8181120," and we also accept the point um and then we just return a boolean or not"
8182080,8191840," uh so we need to have a scene size uh so this is a scene size uh so this is a size and the result is"
8191840,8206000," basically size um p x is greater or equal or p x is less size uh x all right but maybe it could be equal but"
8206000,8212640," and that's that's that's that's totally fine and we repeat all that stuff for the y"
8212640,8220480," and that's basically it so if it's inside of uh scene it's going to do that stuff"
8221680,8233600," um all right so we get that if inside scene we basically want to check whether we have something"
8233600,8241680," within the scene so um to be fair since we only have like walls and stuff like that yeah so we want to do"
8241680,8254320," something like scene c y c x and if it's not equal to one we are going to draw a specific sprite yeah we're"
8254320,8271040," drawing a sprite okay we need to take the canvas width right the canvas width we need to divide it"
8271040,8281120," by the screen width and here we get a strip width i would say strip width that's what it is because we're"
8281120,8289360," drawing strips right so we have 100 of them yeah 100 of them so this is a strip width and if we"
8289360,8295600," found something that is not zero in here right so if we hit something that is not zero"
8295600,8303840," uh we have to draw a strip right so let me see how we're going to be doing all of that um i think i can"
8303840,8314000," just do uh this thing feel erect so in terms of x uh it's going to be basically x multiplied by strip"
8314000,8322560," width strip width in terms of y it's going to start at zero zero okay so width is going to be strip width"
8322560,8328880," and the height is going to be the height of the entirety of the canvas city x city x canvas"
8329760,8335840," uh height so right now we don't really have colors of walls we don't have colors of walls and because"
8335840,8342080," of that i can just pick whatever color i want i can say it's a field style equal red so i want it to"
8342080,8346720," stand out like i want to be able to instantly see that okay there's something in there okay"
8346720,8354080," and that's about it we don't really take into account the actual height of the strip yet right so i just"
8354080,8360320," want to be able to see the colors and stuff like that and that's about it so the only thing it requires"
8360320,8366400," implemented cast ray right so casting the ray so how we're going to be doing all that right so we're going"
8366400,8377360," to do the um the infinite loop right so maybe while uh inside scene while p2 is inside of the scene"
8378240,8397120," um right and the scene um p2 y uh p2 x equal to zero we are stepping a little bit further right so we keep"
8397120,8411360," stepping uh step array array step so we specify p1 p2 that gives us p3 there we go i'll give this p3 and"
8411360,8419840," what we're doing here is just p1 becomes p2 and p2 becomes p3 let's actually press the forward and then"
8419840,8428320," at the end we can just repeat so yeah if it's not inside of the scene it will go away in immediately"
8428320,8434400," right so and that's totally fine outside of cast ray we actually check whether it's inside the scene and"
8434400,8442080," if it's inside of the scene but now this thing hit the wall we also stop and we return uh the point"
8442080,8446240," where we hit the wall so it's actually pretty support once you have this array step function it's just like"
8446240,8451040," yeah okay let's go through the all of the errors potentially there's no errors actually so everything"
8451040,8459120," seems to be fine so let's let me close this thing yeah so there's no errors okay so that's pretty cool"
8459120,8466960," so anything else i don't think anything else honestly so um okay let's give it a try oh my god"
8466960,8471440," i don't know what happened i hope it's not going into the infinite loop"
8472960,8479760," oh okay so what do we have in here undefined reading uh huh so 24"
8479760,8487440," so instead of cast ray it's a js 24 okay so we probably need to have some sort of like a source"
8487440,8494800," maps is it possible to for tsc to actually have source maps source map true uh is it going to"
8494800,8500400," automatically recompile this entire thing okay so it actually picks it up automatically that's pretty cool"
8500400,8514800," so it's uh 36 36 all right so cannot read properly oh okay okay okay i see i see i see um so this is"
8514800,8523280," rather complicated yeah what we have to do yeah yeah so we first have to find the heating yeah so we can't"
8523280,8529360," directly do this stuff so we can't directly do this stuff so maybe because of that we have to maybe do it"
8529360,8538000," like this so four so this is an infinite loop uh we have to do c all right we've got that do we have a"
8538000,8548800," player position and now uh heating cell p1 p2 all right so if this thing is inside of it and um"
8551040,8560160," if this thing if this thing not inside of the scene or this thing not equal to one we just break out"
8560160,8573360," of this entire thing i guess that's it all right so cool i didn't see anything honestly nothing works in"
8573360,8580880," here nothing works here at all uh so but i also don't see any errors uh let me let me see"
8580880,8591440," let me see so i have a hypothesis that maybe minimap actually cleans up something do we have yeah"
8591440,8599360," so this is what's going on here all right so minimap cleans up the entire of the thing right"
8599360,8608480," all right so i think it should do that in here i think minimap shouldn't do this kind of stuff"
8608480,8618480," like i'm pretty sure about it um so in here yeah so it even does that before translation and stuff"
8618480,8627600," my god right that's why we wouldn't see shits in this mist okay all right so we can see something i"
8627600,8638080," guess so which is actually like precisely in here right so uh that's pretty cool let me now try okay"
8639040,8644800," put something put something maybe behind the minimap right after we did the entirety of the translation"
8644800,8646800," right let's actually put something behind the minimap"
8650640,8654640," and i wonder how we're gonna do all of that so it's probably takes into account the grid side yeah"
8654640,8668320," so feel uh correct and ctx feel erect maybe ctx feel style um let's put this stuff in here"
8669520,8678960," is equal to 80 80 80 and we're feeling direct how we feel indirect we're feeling essentially zero zero and"
8678960,8684320," then we take the grid size uh and we spread it i think that's what we want to do in here"
8684320,8694080," so i just want to have some sort of a back yeah backdrop for for the minimap so and then i want to reduce the"
8694080,8699040," size of the minimap so it doesn't take up the entirety of the thing okay so that's pretty cool so it's"
8699040,8707600," somewhere there in a corner uh so if i'm gonna start maybe rotating uh the player i'm gonna start"
8707600,8720000," rotating so now 80 degrees okay so it's kind of to the right aha so i would expect this thing to be"
8720000,8728320," to the right rather than to the left which means that we have a fov range problem so i feel like i need"
8728320,8734000," to swap this thing so this has to be sub and this has to be added yeah that makes sense now right so that"
8734000,8743520," explains the the whole thing um and now um so if i take a half of this entire thing uh i can't see"
8743520,8751600," anything that is actually pretty cool all right uh so let's go back into that stuff so this is that"
8751600,8760160," and then another half this entire thing is kind of in the middle i i want to put it in the middle yeah"
8760160,8769360," there we go so we're looking precisely at that thing damn what the fuck so uh all right so we have to kind"
8769360,8779760," of compute the distance between those two things so we have a rendering uh render and um so we got this"
8779760,8789680," scene and stuff like that and we can try to compute the distance so i take p and i subtract player position"
8790400,8799680," from it and i just take the length of this entire thing cool i get the length but then how do i decide"
8799680,8808320," how small this entire thing is going to be uh so i need some sort of like a far clipping plane right so how"
8808320,8816480," much is it going to decrease or something at which point is going to be is going to become invisible um okay so"
8816480,8824320," let's do far clipping plane and i think it's going to be maybe around 10 or something maybe that's that's"
8824320,8832000," going to be fine uh far clipping plane and it's not very like you have to subtract like near clipping plane"
8832000,8841680," right so maybe not so i'm going to divide that by far clipping plane and that gives us an interpolator"
8841680,8849840," an interpolator which we have to use to determine the height of the whole thing so i suppose"
8849840,8856800," um one is going to be the full height right i might as well just multiply it by that and that's basically the"
8856800,8864320," height but i also i can use the height in here but i also have to align everything correctly so x is"
8864320,8874960," going to be just fine here i have to take uh the height and i'm going to position everything at half of"
8874960,8881680," the height but then i'm going to subtract half of the strip height uh all right something like this"
8881680,8886560," i'm not sure if you can see that but there we go uh maybe i should call this strip height so because"
8886560,8894480," we have a strip width already yeah and then the strip height uh const strip height"
8896880,8904560," okay so can you see what i'm doing strip height strip height"
8904560,8914400," and i can maybe i still don't know how to how you call the separation when you have"
8914400,8920800," two things multiplied by the same sort of coefficient and you move that coefficient out of the parentheses"
8920800,8923520," it's like a distribution but it's an opposite of distribution"
8924880,8928960," redistribution like i don't know how it's like i don't know the terminology in english"
8928960,8933840," uh another terminology in russian right but i'm not in english because i never studied math in"
8933840,8940400," english like i mean school math in english right so studied some math in english but not the school"
8940400,8949120," all right so we want to probably do something like this hopefully that will create the uh illusion of"
8949120,8953040," perspective um i think it has to be"
8953040,8960080," that is absolutely bizarre so it has to be the other way around"
8960080,8961760," i guess"
8961760,8970000," no we didn't oh yeah i know what is going on"
8971120,8979760," um yeah there we go so there's some sort of a warping going on um which is kind of cool honestly"
8979760,8990640," which is kind of cool uh so and i wonder why though was there any warping in the original raycasting"
8990640,8996720," now maybe this is because of the like a pretty nasty resolution pretty nasty resolution"
8996720,9002000," uh so or maybe it's also because of foe"
9002000,9006720," so because this thing is just like a straight of that"
9008160,9014800," um but yeah i think i should be able to maybe modify the player's"
9014800,9021120," what is it called uh direction right so i think that's a good idea generally uh by the way can i"
9021120,9027520," make these constants uh yes this is a constant so player i'm going to be modifying the player but"
9027520,9033360," since i'm not reassigning the player i think this thing can be constant as well anyways um"
9034560,9044320," so we need to add a listener game add event listener uh do we have something like key down or whatever"
9044320,9054720," let me find key down uh key down all right so we can probably work with that key down"
9054720,9060240," but probably we don't want to do that on the game we want to do that on the whole body"
9060800,9067760," all right so can i just do body uh i probably need to find the body or maybe document can i do"
9067760,9077040," at listener or window yeah window um just a second yeah but the document does document have that"
9077040,9083200," uh all right so it looks like document does have that but probably window is going to be better"
9083200,9088880," i'm not a web developer i'm sorry right please forgive me i'll figure it out don't worry about it"
9088880,9096160," i will figure it out uh so what do we have in here uh maybe i want to just like console log this thing"
9096160,9102320," and just see what is going on um yeah there's some sort of warping so maybe i just uh like actually"
9102320,9112160," set the height of this thing incorrectly but that's fine okay so i do key but it's it's repeating itself"
9112160,9115600," right right so key down"
9115600,9121360," that is a little bit bizarre"
9121360,9136320," window event and the global event have an event key down and key up up yeah i'm not really sure why on key"
9136320,9142400," down it repeats itself that is absolutely bizarre why do you repeat itself so maybe"
9142400,9148160," um does it tell me whether it's repeated or not"
9148160,9157280," yeah oh yeah repeat true okay so that's fine but i wouldn't expect it on key down that's that's really"
9157280,9163920," really bizarre but anyways um so what do we have in here i can also have key up"
9163920,9168640," if"
9168640,9176320," e repeat not repeated and also probably here as well"
9176320,9184240," yeah all right so yeah i can detect with the key up key down"
9185280,9191680," uh so and i also have key code in here um i'm not sure which one to use maybe i'm going to use key code"
9191680,9194640," so it's not repeated and"
9194640,9201200," we need to"
9201200,9208160," check it's not repeated and e code equal to"
9209680,9212080," key key key to d right"
9212080,9219760," so in that case i just want to say that we're rotating to the left right so maybe we're going"
9219760,9227200," to have rotate um right it's going to be false and also we have rotate left"
9227200,9234480," uh all right so if maybe what was the switch case it's the switch case"
9236480,9238080," uh case that's"
9238080,9245920," so if it's that rotate right true"
9245920,9248000," break"
9248000,9252000," rotate left"
9252000,9254720," cool"
9254720,9261200," so now if we do that we do rotate false"
9262880,9265840," maybe i can even realign some of these things like this"
9265840,9269840," and then"
9269840,9272160," uh so"
9272160,9273600," and now"
9273600,9277600," as we're holding them so we need to organize actually"
9277600,9282320," sort of like an event loop uh right where we play an animation and stuff"
9285360,9288960," so i don't want to do it right now so maybe i'm gonna do"
9288960,9292720," yeah i'm gonna just do just that um"
9292720,9295840," let's get rid of this stuff"
9295840,9299520," and"
9299520,9304720," i'm going to say that you pressed kd"
9305840,9310800," uh i'm gonna take the player so that means i need to put the player above the window"
9310800,9316640," i'm gonna put it above the window and i'm gonna take the direction and i'm gonna just add some sort"
9316640,9325440," of angle which is a math pi multiplied maybe like um uh i don't freaking know like a tenth of a pie or"
9325440,9334080," something uh and in here we're also gonna do so we're gonna we can correct the direction a little bit later"
9334080,9337920," so and every time we modify this entire thing i feel like we have to"
9337920,9344320," basically re-render all literally everything so let me put this stuff in here"
9344320,9352560," uh-huh so this is the first rendering and this is going to be the second rendering so i just don't want to do animation stuff"
9353920,9360240," don't want to do animation stuff okay do we have any shise in here okay so that seems to be fine"
9360240,9371680," all right so yeah that's pretty cool uh i wonder if i can set the clipping plane even further away"
9371680,9378240," yeah the further away i put it the like the better it looks so one of the things we can do"
9378240,9383840," okay so let's actually increase the resolution of the whole thing right so yeah i can i can"
9383840,9391920," increase the resolution quite easily as you can see so and strip width can i maybe even"
9391920,9400880," just make it a little bit bigger like add the epsilon so they overlap with each other that would be kind"
9400880,9408080," of cool control because i feel like they're they're a little bit bizarre right so they yeah so i want"
9408080,9414800," them to overlap a little bit so it's kind of it's kind of weird that they're not overlapping um so"
9414800,9422480," yeah strip maybe one of the things we want to do so when we do the division maybe we want to do actually"
9422480,9427920," seal so they overlap with each other yeah boy boy"
9432560,9439520," so i'm gonna actually save this thing to some sort of a parameter t so because then i can use this parameter t"
9439520,9445520," to modify like to shade this entire thing sort of speak"
9445520,9453200," can't i i think i should be able to uh can i use this template thingy where i would say rgba"
9454480,9462160," and just like 255 00 i think i think one i don't quite remember i think alpha is the only one that is"
9462160,9473200," one so to speak but anyway so here i can just say 255 by t so and now uh yeah so it now is it's just like"
9473200,9482000," shades it more or less properly uh it just kind of shades it in some way uh all right so it's pretty"
9482000,9490320," cool uh so if i change the far clipping plane to be a little bit closer all right so that looks kind"
9490320,9496800," of awesome honestly even though it's warped uh and i don't really know how to make it less work it probably"
9496800,9505760," has to be uh so maybe i should consult the tutorial how exactly do they do that uh yeah just a second"
9505760,9514560," so because there's a lot of text in here uh so there's screen height"
9516720,9524400," so the color so this is already like texture okay so this is the thing uh-huh"
9524400,9534400," read keys they don't all right vertical line draw start draw end this is where they do that"
9534400,9541520," um draw the pixels of the stripe as a vertical line okay so where do they do draw start i wonder"
9542880,9550640," draw start okay so calculate height of the line to draw on the screen uh height"
9550640,9565360," versus perp wall distance huh so that is interesting uh i don't really understand what it means so there's"
9565360,9572640," such impact oh my uh all right so i suppose this is the position of the player right uh so"
9573760,9583520," oh okay oh i see i see so this is euclidean distance and this is h and this is a perpendicular"
9583520,9588960," wall distance to this kind of thing but how do you compute that that's a good question that's an"
9588960,9595360," interesting way to do that so i suppose this is the h all right so in purple wall uh all right so let's"
9595360,9601280," actually find it so there will be used later to calculate the length uh how do you compute that though"
9602480,9610960," uh side distance delta distance okay uh calculate the distance from of a particular ray euclidean distance"
9610960,9618400," that would give a ah okay euclidean distance would give a fish eye effect that's actually rather"
9618400,9626000," interesting right so uh side distance delta distance and i don't fucking know how to do that honestly right"
9626000,9636800," so i need to i need to think about that honestly i need to think about that uh side distance yeah maybe"
9636800,9643120," i'm gonna just keep the fish eye effect for now right so because i already really spending too much time on"
9643120,9651760," this kind of stuff so what i want to do honestly uh i want to maybe factor out this piece of code to"
9651760,9661200," everything so it's called the render um but i don't really know if it's a good name for this kind of thing"
9662160,9669280," uh so this is a minimap this is a render uh but then how do i call this thing to get a render and minimap"
9669280,9675360," so i would like to call it a render but this one is let's call it maybe game all right so this is actual"
9675360,9682800," game um right so this is the next error this is a game this is the next error this is a game okay so"
9682800,9695280," then um now it's already have have word game probably um um render scene all right so let's go to render scene"
9699440,9713440," render scene okay uh query place minimap render minimap"
9713440,9718240," render minimap"
9718240,9726640," and now let's introduce friend the game render again"
9729440,9735680," so um so and what we're needing here city x understandable"
9735680,9743840," canvas uh what was the canvas cap what is it called it's not yeah canvas rendering context"
9743840,9750800," canvas rendering context the player uh player and this scene"
9753440,9758800," um so minimap um so minimap can we compute minimap"
9758800,9764400," somehow differently yeah i think we can move compute in the minimap"
9764400,9770640," into here into render the game yeah so that makes sense so that way now"
9770640,9774560," i can just say render game render game"
9777680,9780320," and this is just the parameters that i need to pass in them"
9780320,9790160," ctx player scene right and all of the parameters for the minimap is going to be computed inside of it"
9790160,9796960," so none of that matters for us that much yeah so this is the game this is that"
9796960,9804960," there we go so that simplifies everything dramatically i want to be a little bit of like a c developer"
9806000,9811840," all right i don't know for some reason i just want to do it like that this looks cool"
9811840,9822240," um nice by the way i think i want to keep player and the scene together in this uh like in single"
9822240,9827600," place oh this is where we had a name game i see so that's understandable let's understand"
9827600,9835040," all right so i like how compact this entire thing became uh all right it's just seeing the player in a"
9835040,9839920," a particular place with a particular rotation and stuff like that uh do we have any compilation errors"
9839920,9847280," we don't have any compilation errors right so so fish eye effect maybe it's even fine uh i'm very"
9847280,9854400," sure so we also have this sort of like i forgot the name it's just like the shading based on the"
9854400,9859200," distance there was a fancy name for this kind of thing but i'm i'm not done a dumb dumb so i don't really"
9859200,9867520," know so maybe we need to introduce like something like movement uh key w right is going to move forward"
9867520,9874080," so to move forward what you have to do you probably have to take the player position"
9874960,9884720," and also player direction right you're taking the player direction and you're constructing a vector"
9884720,9893440," from the angle and maybe scaling it by the step size of something player step size step length right"
9894080,9903280," and then you just add this entire thing to here right you just add it and i suppose you also reassign"
9903280,9910800," the player position to that so we need to have this kind of thing and let me see so maybe a single step"
9910800,9918320," step is going to be like a half of the cell right so half of the cell sounds reasonable i think um yep"
9918320,9923760," and every time we do that we're going to re-render the whole game might as well now do"
9923760,9929120," stepping backwards so instead of adding we're going to be subtracting this thing"
9930880,9937280," um all right so that looks reasonable i think it's pretty cool might as well just"
9937280,9956240," make this kind of stuff shorter uh any errors no mistakes okay"
9960880,9967680," that's so cool i need to get rid of the fisheye effect honestly right so"
9967680,9973440," uh i have a little bit of a time so i can probably figure out how to get rid of the fisheye effect but"
9973440,9978800," yeah so this is me going towards this center i think uh yeah"
9978800,9985920," so i can even assign different colors on this thing so let's go ahead and assign different colors"
9985920,9993360," so scene um is going to be like a either string or null right so that's what i'm thinking about it"
9993360,10007760," so next error um scene is not equal uh null right so next error um scene size so what you don't like in"
10007760,10015840," here number number is not assignable oh yeah because this scene is not that scene right it's still"
10015920,10021280," array array array uh-huh found this error okay next error"
10021280,10032720," not equal to null all right so that means we have to fill it with uh yeah just the scene color like this"
10032720,10037600," oh this one is actually kind of cool"
10040160,10047840," so what you don't like in here string or no dude oh my god typescript"
10047840,10054400," checking this like that was not enough to strip off null from scene oh my god"
10054400,10062640," insane right so the the thing i have to do in here is just like oh my god type system of of typescript"
10063680,10071760," i have to do something like this if that's only then it will strip off the null from"
10071760,10078800," okay uh very well then um so we might as well do a similar thing in here"
10078800,10087280," so it's a color not equal null and this one is rather interesting right so how can i"
10089680,10095920," shade the colors and stuff like that i can't really do that easily so i guess i'm gonna just"
10095920,10103200," yeah i will have to disable the shading yeah so there's only one way to do that uh next error"
10103200,10109520," uh scene size okay so this one is not correct so the thing we're gonna do in here is basically"
10109520,10117440," query replace zero with null boom uh which is which kind of sucks but i mean i don't really know what to"
10117440,10127200," do with that so we replace one with red okay can i now maybe align some of these things"
10127200,10132320," somehow so they look more or less fine"
10132320,10145360," like this all right shut the fuck up shut the fuck up okay so red green uh blue"
10147440,10155360," yellow magenta maybe purple uh cyan so i just want to have different colors in here"
10155360,10160080," uh any errors uh okay so that's cool so now yeah there we go"
10160080,10168080," oh i don't fucking know what the fuck is going on in here but at certain"
10170160,10173040," angles the the minimap has disappeared"
10173040,10181040," i don't know why i don't know how but it just disappeared maybe maybe there's an error going on"
10181040,10189760," somewhere just just a second oof uh okay so uh 2021 why okay"
10191920,10198480," damn bro damn damn okay so essentially we first have to check that we're inside"
10198480,10202960," um all right if"
10202960,10209120," so and if we are inside only then we're doing that okay"
10211040,10216640," make sense so now that is that seems to be working that seems to be twerking"
10216640,10226320," okay yeah that's that's pretty cool that's so fucking cool"
10226320,10234640," oh it's funny how we can't see if we're outside of the whole thing so i'm looking at the red and"
10235280,10240640," a little bit of a green you can clearly see that's here's the red and there's a little blue green and"
10240640,10247920," we can clearly see them and looking inside of this thing um yeah so i want to get rid of the fish eye"
10247920,10256880," effect also we can keep increasing the the resolution all right so we can give even more resolution so"
10256880,10264000," it's smoother uh but i feel like yeah oh it's i really love that this is so fucking cool"
10264000,10274400," this is so nice the the math is nasty the math is absolutely fucking nasty mate but i mean it's kind"
10274400,10284720," of cool i can see actually improving that further uh so uh fuchsia effect um so per perpendicular wall"
10286160,10290880," uh i need to figure out what the is that uh"
10290880,10302720," so i did it's it's actually encountered like 20 second the 22nd times to 26 times"
10302720,10315120," um this particular distance is called perp wall in the code how can we even yeah i understand how you can do that"
10315120,10321040," right so you have this point you figured out this point and you have euclidean distance and then"
10321040,10324000," how can you figure out that"
10324000,10328880," i'm really curious so"
10328880,10338800," yeah calculate distance projected on the camera direct direction euclidean distance would give a fish eye effect"
10340080,10345040," size distance x delta distance x delta distance x i have no idea what the fuck it is honestly"
10345040,10355520," um so where to get them and also what is side zero here's the thing like i never really read and like"
10355520,10360560," get familiarized with myself with the terminology of this paper uh i just look at the pictures and i just"
10360560,10367920," replicated the pictures so i don't know what is a side distance of all of that stuff means uh so depending on whether the ray hit"
10367920,10376000," and x side or y side side the formula um competed using side distance x or side distance"
10376000,10385360," why i have no idea okay so delta distance like i would appreciate them show what is it equal to"
10386640,10394320," um but i don't know but maybe we can figure it out somehow"
10394320,10399360," because"
10399360,10407520," i don't know i can do something stupid like i can always find this point if you know what i'm talking"
10407520,10414480," you can always find this point and to be fine i do know this point right i do know this point because"
10414480,10421040," it's the point of like r1 yeah i mean i mean the line right so i have r1 and r2"
10421040,10430480," so what i need to do right i need to figure out the equation of this thing uh linear equation which is"
10430480,10436800," really easy you can compute the slope and stuff like that and then once you've got the the point"
10436800,10445520," that you hit you just project yeah so you have a certain point you have a certain line and you just"
10445520,10451280," need to find the distance between that point to that line uh to to the line that is represented by these"
10451280,10457600," two points and that's the distance you're interested in uh and that's the perpendicular distance so we"
10457600,10463760," already have everything to kind of find that i the only problem is that i don't know how given two"
10463760,10471600," points that describe a line and another point find the perpendicular projection right i can try to google"
10471600,10477600," it up um okay so maybe i can ask chat gpt honestly maybe chat gpt is actually perfect for this kind of"
10477600,10487120," stuff right but i um i don't know so let's go to that go um all right so"
10487600,10497680," how should i uh how should i uh i have two points uh into this space uh maybe i'm gonna actually"
10497680,10508480," type that in emacs i have two points into this space that uh define a line uh i have third point"
10511600,10524640," uh how to find uh how to find its uh perpendicular distance to the line i think that's a that's a good"
10524640,10532480," prompt i think i think i think that's a good prompt uh so here we go to find a particular"
10533920,10548080," oof uh please use python code python code instead of later like the the front end can't render anything"
10548080,10557600," uh all right so distance points to line all right so here is two points and this is that one okay we're"
10557600,10565760," finding uh delta y and delta x so for some reason chat gpt decided to actually call it uh a and b and"
10565760,10574240," so then we're finding the dot product between these two things right so this is the dot product between"
10574240,10579360," these two things uh okay"
10579360,10595600," um that's a very interesting way to do that okay is that even correct uh so you have delta x and delta y"
10595600,10600720," and then the dot but it's not even dot product isn't it right so because it's a minus"
10602640,10610800," thing where did you get that idea uh to find vertical distance uh is the oh so this is equation"
10610800,10617200," ah so abc it's a equation of the line i see i see what's going on i see you figuring out a different"
10617200,10621840," kind of equation of the line right so that's what is going on here a different kind of equation of the"
10621840,10625760," line and then um you find"
10628000,10635520," oh you plug in the point that you want to find projection for into that equation and you divide it"
10635520,10646160," by the length of this sort of vector um all right that's a very interesting way to do that i guess"
10647840,10659200," um okay um all right right like i really want to understand that i don't want to copy paste that um"
10659200,10673680," so abc it's kind of interesting how like the point is not on the line that's the thing the point is not on the"
10673680,10680880," line but we plug that point into the equation to get some sort of a value right and by dividing it"
10680880,10687520," by the length of this sort of like vector by the length of this vector we find in that distance"
10687520,10695840," and a very interesting way to do that okay so we write this in type script"
10696400,10707280," not really this but rewrite this thing in typescript i wish i could spend more time to understand this"
10707280,10712640," thing a little bit better but i'm i'm already this is the third hour that's why i'm gonna just like"
10712640,10720160," copy paste this thing uh right and just use it in here i'm probably gonna recreate that but who cares"
10722000,10730320," okay so let me take p1 vector this is p2 and it's not that different from just copy pasting from the"
10730320,10738720," internet uh just coping okay i'm just coping all right so this is that so p2"
10738720,10743680," uh p all right so this is dance"
10748800,10755760," okay i wonder if i can somehow bulk replace all of that stuff but it feels like i can't really"
10755760,10759440," uh can't really bulk replace all of that stuff"
10759440,10770640," uh yep and that's the last thing by the way can you actually do this kind of thing in typescript"
10771280,10783600," chat gpt what the f is this um let me see so node 2 10. oh you can i thought it's only python thing"
10783600,10785280," all right all right um"
10785280,10789200," cool"
10789200,10797520," i'll need to spend some time studying this uh like formula and why it works if it works at all because i"
10797520,10803760," i don't know maybe chat gpt configurated this entire thing who knows you never know uh so distance point"
10803760,10814000," to the line um so and essentially yeah so we figured out this entire thing and um we just do distance point"
10814000,10825040," to line uh r1 r2 and the point is p essentially so that's that's basically that um so we can even use"
10826160,10834080," we can use purple wall distance so maybe it's not as efficient as it is in the original paper"
10834080,10840880," but hopefully it is going to work uh so and in here what do we do so let me see how"
10840880,10847040," we're using this entire thing so remember uh it was used in a very specific way so h"
10848400,10858080," is the size so line i'm gonna just like i'm not sure if it's h is that like what is h exactly"
10858080,10868480," can we go to the walls to house point oh that that's fine whatever um line height so what is h"
10870320,10876480," then out of the line height which is those height of the vertical we start in that position where we'll find your own"
10876480,10881840," i don't like that it doesn't tell me what the is"
10881840,10886640," perpendicular wall distance perpendicular wall distance"
10891280,10893520," is that the full length or what"
10893520,10902800," so i suppose maybe it's a height it's a height of the screen yeah probably that's what it is probably"
10902800,10909360," maybe it's a height of the screen yeah all right so we have to take the height of the screen"
10911120,10917360," but it doesn't make any sense if it's a height of the screen is it not no it doesn't make any sense"
10917360,10923840," it's like there's a lot of like text in here and it's just like i don't want to read that"
10923840,10928080," just tell me oh my especially this thing like dude like"
10928080,10938640," no bueno no bueno it's just like just show it on the on the picture"
10942080,10947200," so i suppose maybe we just have to use perpendicular wall distance instead of the"
10947200,10950640," of this thing maybe that's one of the things we can do"
10950640,10956400," yeah so let me let me see if it actually fixes anything"
10956400,10965680," so that's the consequences of doing your own thing right so but i really want to do my own thing"
10965680,10968800," all right this is just like super important for me to"
10968800,10976320," do my own thing so i can understand shit uh i think yeah there is still a little bit of a fuchsia"
10976320,10983200," effect i think it's not it's not particularly helpful right so there's also this curve and stuff like"
10983200,10987680," that so it's not not helping uh so"
10987680,11002720," hit point of the ray on the wall okay but it's a capital h"
11005360,11016160," all right there is a mentioning of two h you can of course also multiply it by another value for"
11016160,11023280," example two h multiplied by h what is h i don't see now that we have a calculated distance we can"
11023280,11028880," calculate the height of the line that has to be drawn on the screen this is the inverse of per and then"
11028880,11036720," multiplied by what is h the height in pixels of the screen all right h the high okay okay jesus christ"
11036720,11045040," bro oh this is really hard to read like people told me that this is the best resource on ray casting but"
11045040,11053440," it's so ters like how this is oof oof oof oof oof yikes uh but i mean thank you for for providing it for"
11053440,11059680," free for everyone anyway but i mean oof oof oof oof that's a straight-up gatekeeping i'm telling you"
11060240,11070000," but but thank you anyway for providing it for free for anyone so anyways um so we have to have that so"
11070000,11078640," it's um yeah so what's the height um but making it height is isn't it too much maybe it's not"
11080960,11093600," okay so um let me try to just take ctx canvas height so that's what it is that's what h is i think uh"
11093600,11103280," oof yeah that is not better so maybe because yeah maybe i don't have to do it"
11104800,11115040," oof um none of that works none of that works um so that should be enough so calculate the height of"
11115040,11121360," the line too yeah like i don't think it's good"
11121360,11125840," um maybe"
11125840,11131200," maybe it's just the screen has to be like a smaller"
11133520,11143200," i i'm honestly perplexed like what the it doesn't make any sense to me so it could be that"
11143200,11150080," maybe there is a mistake in purple wall distance i can see that so maybe chat gpt actually lied to me"
11150080,11159680," i don't freaking know uh but i just couldn't figure it out um so i need to somehow um"
11161600,11162800," so yeah like a phone"
11162800,11167440," it doesn't make any sense to me honestly doesn't make any sense"
11167440,11171120," why does it have to be like that but what if i"
11171120,11180880," yeah i'm already spending three hours and all that so i think i'm gonna leave fish eye effect"
11180880,11188800," for later all right so because again it's already three hours right i'm telling you this is what i was"
11188800,11196560," talking about this problem is way more complicated than you would expect right you can explain ray"
11196560,11202480," casting very easily like on a piece of napkin but then when you sit down to implement this bit of this"
11202480,11209200," shit it's like holy and it's only the first part of the tutorial right it's only the first part of the"
11209200,11217760," tutorial oh boy uh okay so i think i really want to fix the fish eye effect i really want to fix it because"
11217760,11222560," like it's like it's like it's the video is not complete if we don't fix it so i think i need to"
11222560,11229520," make a small break maybe refill a cup of tea right and go for another hour uh right so let's go ahead"
11229520,11234960," and do that this is the next day i got so tired yesterday that i decided to continue tomorrow"
11234960,11240560," uh right so after sleeping a little bit and uh also thinking i just realized that i could have just"
11240560,11247440," utilized dot product in here uh right so essentially we have a position of the player right and we have"
11247440,11254000," an object that the player is seeing uh right so here is the ray through which the player is seeing this"
11254000,11259520," entire thing so it's actually called something like v i don't know so and we also know the direction uh where"
11259520,11264560," the player is looking right so let's call it maybe d so and essentially what we want to find"
11264560,11271840," effectively is the length of this thing right of this sort of like vector which is extended in in"
11271840,11276480," the direction of uh of the player where player is looking so it's actually called maybe something like"
11276480,11283280," big d so small d is just the direction and big d is uh the whole thing that we're interested in and"
11283280,11288400," this is the uh you know the distance that we have to use to compute the height of the strip that we're"
11288400,11295440," rendering in there um right so if you take a look at what is a dot product uh dot product of two"
11295440,11301280," vectors and how it's related to cosine so this is the most important part it's related to cosine"
11301280,11309200," uh so dot product i wonder if i can just go to wikipedia where we can see the definition of dot product"
11309200,11315840," uh wikipedia being gatekeeper yeah this is what i want right so this is what i want um so let me"
11315840,11323440," actually maybe go somewhere here so if we find the dot product between v and z right so basically the"
11323440,11329280," ray and the direction where the player is looking what effectively we're getting is a cosine of an angle"
11329280,11335600," between them uh this angle right so it's actually called alpha right so this is alpha angle uh this is"
11335600,11345840," alpha multiplied by the length of v multiplied by the length of d right so and what's funny is that if"
11345840,11356320," you take a look at the definition of cosine uh cosine and sine um the cosine is alpha is adjacent side of the"
11356320,11363840," triangle over hypotenuse right so that means the cosine of alpha the cosine of alpha is equal to"
11364560,11372960," adjacent what is adjacent adjacent adjacent is big d right so that means it's length d over length of v"
11372960,11381120," which is a hypotenuse right so and if you basically take and substitute all these things in here"
11381120,11391120," right so we have that dot vd which is equal to this which is equal to this right so we can basically"
11391120,11397280," substitute cosine now uh like so and you will notice a very interesting thing so essentially you have"
11397280,11403920," division by length v and multiplication by length v which effectively which effectively get rid of this"
11403920,11412160," entire thing and what's funny is that uh length d uh so we know length d it's just a direction but we can"
11412160,11419520," easily construct um this direction vector with uh the length equal to one so we can effectively ignore this"
11419520,11428800," entire thing so essentially if you take the vector of the ray and do a dot product with a normalized"
11428800,11438080," direction vector of where the player is looking you get the uh the wall length like literally the the thing that you actually need"
11438080,11443840," if you go through this entire logic it it actually does make sense uh right so yesterday i couldn't"
11443840,11449440," think about that because i was super tired and i also asked chat gpt and stuff like that anyways um"
11450480,11458080," so let me go ahead and try to implement that super quick uh so we need to have a dot product as far as"
11458080,11463440," i know we don't really have a dot product so we're going to have that which is a vector 2 and it's supposed"
11463440,11471440," to return a scalar uh right so in here we're going to do this x multiplied by that x plus this y multiplied by"
11471440,11477920," that y there we go so this is the dot product so okay so here's we're rendering the game uh where do"
11477920,11485680," we render this scene uh there you go okay that's pretty cool so what we need to have we need to have"
11485680,11494240," the v v is essentially so p is a point or that hits the wall that hits the yeah the wall so and we need to"
11494240,11500480," subtract the position of the player right there we go so this is v so the direction vector is"
11500480,11506000," basically player direction right and we have to construct a vector out of that so we're going to"
11506000,11513680," say from angle uh from angle like so so and then we are taking a dot product between these two things"
11513680,11521040," and that's the value so in the original article in here so the way to compute the line height is just"
11521040,11525440," to take the height of the screen right so if i remember correctly this is the height of the screen"
11525440,11533520," um yeah so the height by h the height in pixels of the screen okay and divided by that value and that"
11533520,11540960," value is that dot product uh so let's go ahead and just do that so this is a strip height we don't"
11540960,11550080," really need t anymore uh right and we take ctx canvas uh height and divide it by that so hopefully that is"
11550080,11555520," going to yeah there we go it worked so and that fixes everything that was actually easier than"
11555520,11563520," expected uh yep we've got the ray caster congratulations uh there's something funny about this ray caster"
11563520,11571840," actually look at that so uh you can see the purple cube between the cyan and yellow one um and i have"
11571840,11579280," a feeling i have a feeling this is due to how we compute the epsilon right so because we have a little bit of"
11579280,11585200," epsilon to just adjust things around so if i make the epsilon like way smaller i think"
11585200,11591760," yeah i think that thing will go away in just a second yeah i think it was due to the epsilon yeah"
11591760,11596400," that's that's actually kind of funny it's actually kind of funny so the epsilon could be very very small"
11596400,11607120," actually damn this is a pretty sexy ray caster look at that look at that all right so yeah i guess that's it for"
11607120,11613040," today thanks everyone who's watching right now i really appreciate it have a good one and i see"
11613040,11618640," you all on the next recreation programming session with a mr azuzin i don't really know if i want to"
11618640,11624720," continue developing this ray caster like implementing texturing would be interesting also implementing"
11624720,11630080," walls and ceiling kind of interesting right like walls and ceiling i think it's kind of similar it's just"
11630080,11636720," like instead of vertical uh vertical scan lines you have a horizontal ones uh right so we'll see we'll see"
11636720,11642160," the winner gets deep that's for sure all right love you"

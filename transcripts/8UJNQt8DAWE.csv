start,end,text
0,9680," looks like we're live hello everyone and welcome to you"
9680,20640," so let's make a little bit of announcement and officially start the stream um so"
22240,30880," a red circle live on twitch and what are we doing today on twitch dot television that's a good"
30880,38000," question so today we're coding in pascal in 2022 while society is collapsing so that's exactly what"
38000,46000," we're doing today yeah so i'm in the mood of programming in you say haskell pascal right uh"
46000,52400," right so i'm in the mood of programming in pascal so yeah that's what we're gonna be doing today it's"
52400,60880," a very old language that a lot of people know as the language from their school right uh from computer"
60880,65360," classes and stuff like that but today we're gonna ironically program in that language uh we're gonna"
65360,72880," be using free pascal uh let me actually go open the description uh how can i find the description"
72880,80240," md there we go so we're gonna be using this version of pascal uh hello hello everyone welcome welcome"
80240,86720," welcome look at that kitty look at that kitty that's a very cute kitty isn't it so uh you can find this"
86720,93280," thing in here if you're interested in um in using this language as well so my problem with pascal is"
93280,100240," that this is a i wouldn't say it's a dead language it's nothing but dead uh thanks to free pascal"
100240,106160," community free pascal community is actually very active and they keep developing this thing and you"
106160,113920," know pascal is so cool it supports all of these platforms without lvm right it does support lvm as"
113920,121280," well but that's only recent development right so uh they were supporting all this platform before lvm existed"
121280,127520," right so it's a very active community it's very competent community they really know what they're doing and"
127520,133520," they kind of keep this language alive right so which is uh very very cool so i wouldn't say that pascal"
133520,139520," is a dead language i would say it's a language that kind of lost the market right it still exists it's"
139520,145600," still active but like nobody really uses it for like anything super serious and because of that there's"
145600,154720," not that many text editors that support pascal well right i don't know even like emacs and vim their pascal"
154720,163520," support is kind of meh it always like fails either with highlighting in some cases or it fails with"
163520,170720," indentations right so there's always like something in both vim and emacs that sort of fails a little bit in"
170720,176160," pascal and this is because nobody programs in pascal right so if somebody was programming in pascal very"
176160,181040," actively people would just like uh fix it eventually but nobody fixing that i could probably go ahead"
181040,188400," and fix that but i'm too lazy so because of that we're going to be using um a different text editor today"
189200,196560," so so far what i found is that genie has more or less good support for uh for pascal so we're going"
196560,202960," to be using that right uh so it also has a built-in text editor which is rather convenient in my opinion"
203920,209840," uh so thank you everyone who subscribed destroy computers thank you so much for tier one subscription"
209840,215200," and nerdy pop rocks uh thank you thank you thank you really really appreciate all of the subscription"
215200,222400," so what are we going to be developing today in pascal uh so i wanted to develop a small thing for"
222400,229520," myself for quite some time uh i wanted to develop a minesweeper right so a simple minesweeper game but"
229520,235920," the one that works in the terminal so that means uh at any moment anywhere i could just go to my"
235920,243360," terminal and say mine right and it will start like interactive and curses like uh minesweeper game"
243360,249120," and i would play it like for a while and i want it to be a terminal because maybe i will i want to"
249120,254880," play it over like ssh or something like that right so i wanted to work in as many environments as possible"
255520,261120," right so and i don't really care in what language to develop that so i just picked whatever language"
261120,265200," i'm in the mood of programming in uh in pascal today so that's what we're going to be doing"
265200,276240," uh that's precisely what we're going to be doing okay so let's go let's go let me let me see so i'm"
276240,285040," going to create mine uh yep so here's that genie mine pass or maybe i don't know what to call it"
285040,294720," mine pass so already opened this entire thing so maybe i can make it a little bit bigger and now i can"
294720,303040," define a program uh so is that a monokai theme why i have monokai theme maybe it's fine okay let's let's"
303040,309840," use monokai then why not so any program in pascal starts with a program directive i have no idea why"
309840,316320," that's kind of weird but it is what it is then you do begin and then you do end there is no an entry"
316320,322720," point procedure right an entry point is just this like there is a dedicated syntax for entry point"
324320,330480," right and then we can write something like hello world so as far as i know um"
330480,338320," genie has a way to build things i think there is like a thing here to to build everything"
338320,343760," and it's actually built actually actually pretty cool so if i put some some in here"
343760,351440," uh and i try to build it i think i can just press f8 right or what can i press i can i can see that"
351440,356080," oh yeah it even tells me where where is the error this is actually super convenient i'm really surprised"
356080,367360," okay so that's pretty cool uh just a second uh for some reason i can't really see on my terminal where"
367360,373200," here is f8 so if i'm yeah okay so here's f8 that's pretty cool um"
374640,382080," people were making minesweeper for fun just last week nice"
382080,394320," i love how every time someone says they will make something visualized in console ssh is accused"
394320,402000," every time yeah yeah so that's actually very funny so this is ssh is such a good thing uh right that yeah"
402800,408560," maybe maybe that's the only thing that keeps us in terminal for so long right so the terminal"
408560,416880," applications they're extremely old uh we had like an entire errors of like you ui ux trends that just"
416880,424160," passed away but the terminal terminal application seemed to be still um still in use which is which"
424160,430160," is rather interesting isn't right there is something about terminal applications that is"
430160,438560," i suppose done right because otherwise we wouldn't be using this interface right um anyway so let's"
438560,445360," actually you know introduce some type right so because the minesweeper is basically a field of cells"
445920,449600," uh let's define a thing uh let's define a thing"
449600,460800," okay very nice"
460800,472160," uh that's why you should program in rust am i right uh so maybe i'm gonna go into something like"
472160,482720," uh it's already main uh mine mine dot pass right so so but the the problem is that i want to use old"
482720,485280," pascal you know the built-in pascal mode"
485280,497840," now uh let's define a cell right so the cell can be either empty or it may contain a mine right so that's the"
497840,506640," the cell uh then field is going to be basically an array of cells right so you basically have cells"
506640,514720," and it's array but is it going to be two-dimensional array right so i want to be able to customize the"
514720,520720," size of the array right so that means this array has to be dynamic dynamic array do dynamic array have"
520720,526960," like several dimensions i don't really know so what i want to do is to have like a dynamic array and just"
526960,536960," have amount of rows and amount of columns right and so then if i want to for example get uh like"
536960,544240," field get a certain cell right i would do like a computation on this flattened array right so"
544240,548800," essentially i'm going to store the array like they're stored in c if you have two-dimensional array"
548800,553520," so they're usually stored row wise so it takes all of the rows of two-dimensional array and just like"
553520,559280," puts them uh like in a sequence along each other in the memory and that's it so using like simple"
559280,568240," mathematical uh formulas you can actually figure out from two um two indices one index on flattened array"
568240,575040," right so that's what you can do uh so if i want to take a field all right i provide the field uh and"
575920,582480," then i provide the row i provide the column right so it's going to be an integer and this thing should"
582480,589280," get me a cell right so this thing should get me a cell so it wants to actually do it like that i have"
589280,598560," no idea why oh this is because i forgot this thing all right sure uh so this is begin this is end and in"
598560,606400," here we don't really need anything so we take the field uh cells then we do row multiply by field"
606400,613120," columns right because columns is the width of the of the row right plus plus the column so that's"
613120,619120," essentially what i want to do and by the way in pascal to return a value right in a classical pascal"
619120,625600," by the way to return a value you have to assign it to the name of the function that way you sort of return"
626240,631440," uh the value uh so that's how it's done it's a very interesting language not gonna lie"
631440,644880," so i never used emacs well you don't have to use it you can use whatever text editor you want it's"
644880,651760," just a program that lets you save characters on the hard drive that's it it doesn't really do anything"
651760,655920," right so instead of like using two-dimensional arrays i think i'm going to use one-dimensional"
655920,662400," one-dimensional one and i'm going to compute the uh the place of the cell uh myself right so it"
662400,668000," actually has to be somewhere here right there we go so let's try to compile this entire thing it's"
668000,678720," going to be fpc uh my mine dot pass right so this is a man that pass um duplicate identifier mine how is"
678720,685520," that there was one error compiling how is that is that because of this thing"
685520,699280," so when you define a program in pascal it creates a name in a namespace the question is why why program"
699280,704400," directive wastes a name in a name why do you even need such directive"
704400,713280," worth worth worth how do you pronounce his name i didn't really know but what the excuse me"
713280,722080," imagine like wasting precious names imagine wasting precious names for this kind of stuff what if i call it"
722080,733360," like a bomb right not mine but bomb um program directive creates a name essentially for link purposes"
733360,738960," god damn it that's a good reason to waste a precious name"
743040,752720," all right okay so when it compiles surprisingly surprisingly it compiled um i was afraid that"
752720,758560," maybe it's gonna have problems with you know the same name uh of the variable and the type because"
758560,765040," uh basket has a problem and another interesting problem is that it's case insensitive uh all right so that"
765040,774000," means yeah this is basically the same name even even if you rename these things this is the two same names"
774000,779600," right because of that people usually like prefix the types with t to indicate that it's a type but i hate"
779600,785600," it because it makes it kind of noisy uh right i really like it without the prefixes and stuff like"
785600,790480," that but apparently it's not the problem right so it's capable of distinguishing between the types and"
790480,795280," some other stuff which is which is nice so essentially i want to be able to get the the field"
795280,801520," like that and if i want to set the field right so i'm going to have a similar thing like field set right"
801520,808320," i'm going to accept the field uh but i'm going to accept it by a reference right so if you prefix the"
808320,813760," type with var it basically do you put it here or do you put it here i don't remember i think the compiler"
813760,820320," will tell me so it doesn't really matter a role cell integer and then we can provide the"
820320,827600," uh the cell that you want to set in there and this one is not going to return anything and when the"
827600,836320," function doesn't return anything it's called procedure right it is a procedure okay so field cells"
836880,845680," a row field calls plus call uh is going to be equal to this cell right let's see if this stuff compiles"
845680,853360," doesn't compile because var has to be in here so that's how uh we define the reference okay so we're"
853360,855840," capable of setting and getting stuff"
855840,867360," is that function a part of the type definition not really it's a separate thing um the classical pascal"
867360,873520," and we're using classical like original pascal flavor here um it doesn't allow you to like associate"
873520,878400," functions with the types it's just like this is separately a type definition and this is separately a"
878400,884960," function definition right or you mean it's under the type director of something i i don't really know"
884960,890880," it's just emacs decided to indent it like that for whatever reason and i don't want to argue with emacs"
890880,898560," right now because i'm not in the mood to do that um so and functions procedure can live anywhere our"
898560,904240," type is basically a section defining oh yeah yeah so i suppose you have several sections like type section"
904880,911920," you may have a const section you may have var section and functions and procedures can live anywhere"
911920,920720," so it is what it is and it isn't what it isn't okay so since we can have different sizes of the field"
920720,926800," right so the field can be in any size we need a way to sort of resize the field right so let's actually"
926800,933200," define something like procedure field resize right so it's going to accept the field"
933920,941120," by a reference and it's going to also accept the new rows and columns the new sizes right so and"
941120,947040," essentially what it will do it will resize this thing so here's an interesting thing about dynamic arrays in"
947040,953120," in pascal right so when the array doesn't have the dimensions doesn't have the size it's a dynamic array"
953120,960640," and what you can do with that dynamic array uh so pascal you can set it its length and setting its length is"
960640,967440," basically like a real lock this is a real lock this is a real lock of pascal right you specify the dynamic"
967440,973760," array and the new size for this thing and it will allocate the memory or when you trying to shrink it"
973760,979760," it will deallocate the memory so instead of malloc and free and realloc you basically have arrays types"
979760,985840," typed arrays and set length which is actually a pretty cool way of handling dynamic memory to be fair right"
985840,991920," so and essentially you can even have your own allocator where you pre-allocate like a pool of"
991920,999200," certain objects and then you allocate them and refer to this object by the index of that array right so"
999200,1006000," that's pretty cool and uh essentially what i want to do in here i want to take the field i want to take the"
1006000,1011760," cells and i want to set its length right and i'm going to set its length to rows multiplied by columns"
1011760,1018800," right so basically i resize the entire field to uh to the specified size so uh after that"
1018800,1024240," maybe i'm going to initialize everything so i want to iterate uh probably need some sort of index"
1025120,1041120," from zero to rows multiplied by columns and um simply set that stuff to empty right so i set the length"
1041120,1050240," and i set every cell in that field to empty and also probably want to save rows uh to here right and columns"
1051120,1058000," to here as well there we go so that way i resize the field which is that convenient uh let me see"
1058000,1063280," if i can recompile this thing and it doesn't compile because i need to also define the variable so this is"
1063280,1069280," how we do that uh do we have anything else oh i keep forgetting of course you have to use the double"
1069280,1076560," dick operator or it's called waller separator in civilized world i'm really sorry uh we have so many"
1076560,1085920," subscriptions holy um thank you so much um okay so destroy computers nerdy pop rocks thank you so much"
1085920,1094880," uh joseph uh tit zero thank you so much uh nerdy pop rocks thank you so much for five um subscriptions"
1094880,1099680," four or five or five gifted subscriptions thank you thank you thank you really really appreciate that"
1099680,1115360," cheers all right so uh now what i want to do um maybe i'm gonna just define something like uh main field"
1115360,1121600," and there we go there we go we have a main field in here right then the first thing i want to do i want"
1121600,1126320," to probably resize that field so i'm going to resize this field to"
1126320,1138400," let's say 10 to 10 right and then i don't know we need a way to print the field right so we can resize"
1138400,1144000," the field but we need a way to to print it so let's actually do something like print and print in pascal"
1144000,1150960," is called right so let's actually call it right right main field right and let's see what's gonna happen"
1150960,1163920," so we have field resize and let's do field the right field right uh war field field so when i write the"
1163920,1169360," field i also want to write the the numbers for the one mine sweeper right so that means we'll have to"
1169360,1173840," compute them somehow so this doesn't have to be over this is going to be that"
1173840,1182800," so okay uh let's define the iterators for rows and calls maybe i'm going to do that uh later so first"
1182800,1187440," i'm going to just start using the um the variables and then i'm going to define them later right we're"
1187440,1199120," going to be iterating from zero to field rows minus one then for column zero to field calls minus one"
1199120,1205120," and then in here what we're going to be doing in here we're going to do field get"
1205120,1213440," row column right so we got this uh thing in here and we're going to dispatch uh between different types of"
1213440,1222640," uh cells right so if the cell is a bomb we can just simply write uh so what's going to be the symbol for"
1222640,1228160," the bomb right so we can put like a star in here i think star is a pretty good um you know"
1228160,1238080," denotion for a bomb and then when it's empty then when it's empty we probably need to print a number of"
1238080,1243440," neighboring bombs right so that's what we need to do we need to print the number of the neighboring"
1243440,1249920," bombs but how can we even do that so to do that we need to be able to count the neighboring bombs"
1249920,1257520," right so let's actually do something like a field uh count neighbors right so we're going to accept the"
1257520,1264800," field then we're going to accept the cell for which we're competing numbers um neighbors and then"
1264800,1270400," we're going to return the number of neighboring bombs right so that's what we need in here and"
1270400,1278960," then what i want to do i want to assign that to uh this thing so it's going to be filled row column"
1278960,1289600," and if neighbors is greater than zero then we just print that amount of neighbors if it is zero we're"
1289600,1294400," going to print just a space like in the original game right so when the cell doesn't have any"
1294400,1298960," neighboring bombs it's essentially just empty it doesn't have any number it doesn't print zero or"
1298960,1306480," anything right so that's basically how it works so with this loop we printed like a single row of the"
1306480,1314080," mine superfield so here uh we also need to put like a new line right to separate things accordingly so"
1314080,1322320," i'm going to do right uh right alone there we go so that's how we're going to write everything but we"
1322320,1328640," also need to implement the uh you know the account neighbors"
1328640,1331520," um"
1334720,1341760," pascal is a lot more readable than i anticipated well yeah if you're actually being really conservative"
1341760,1346720," with the syntax don't try to make it too complicated it's actually pretty readable especially with such"
1346720,1354560," like one liners of ifs and sometimes one liners or one lamers one one liners or four loops and like"
1354560,1361040," wire loops and stuff like that for wire please is is that a thing that actually supported uh let's actually"
1361040,1367280," try to compile this thing and see right so we have a lot of um you know errors in here uh a row column"
1367280,1376720," and neighbors all of them are integers uh and what's gonna be the next thing field get and uh identifier"
1376720,1386240," not found field get oh okay so it's a one pass compiler just like c all right i completely forgot about"
1386240,1392480," that by the way um i thought it's like more or less modern language where you can define things"
1392480,1396880," anywhere and they will be picked up apparently pascal is a very old language forget about that"
1396880,1406320," uh all right so it seems to be compound and uh if i try to do var i think it's an extension"
1407040,1414240," yeah it's an extension i'm sorry we're programming in original pascal in here right so uh here's the"
1414240,1424480," thing we don't even have a result variable in here we don't even have that so that's how old of a pascal"
1424480,1432160," we're talking about yeah so this is original pascal none of that's you know object pascal"
1432160,1441040," so i'm gonna be suffering a lot in here um okay so let's actually count the neighbors"
1441040,1449200," who would have thought that the pascal is an old language well"
1449200,1456400," yeah c is also a language i would even say that pascal c is probably even older than pascal"
1457920,1464000," uh anyway so we need to count the neighbors uh let's basically do the usual trick right so the"
1464000,1470320," usual trick that i have is essentially you have this cell and you want to uh iterate through all of the"
1470320,1475840," neighbors of that cell the easiest way to do that is just simply iterate the entire square"
1475840,1482400," three by three square and ignore the middle element that's the easiest way to actually iterate"
1482400,1488000," all the neighboring cells of uh this specific cell this is old trick that i always use when i need to"
1488000,1495840," do something like that right so uh we're gonna have d row and d column and all of them are integers and"
1495840,1503440," we're gonna do the following iteration d row uh from minus one to one so we're basically iterating the"
1503440,1511920," deltas right uh the datas of rows and columns then for d column from minus one to one and we're gonna"
1511920,1519040," ignore the middle one and the middle one is when both of them are equal to zero right d row uh is equal to"
1519040,1528720," zero uh just a second zero is equal to zero and um d column equal to zero and we want to ignore"
1529280,1535120," that specific thing right so you just do not uh and let's actually use the morgan law right according"
1535120,1542800," to the morgan law it's gonna be both of these things not and this one is or and not equal is essentially"
1542800,1554960," something like this right uh yeah if then and we'll have to do something so i'm gonna actually put begin and"
1554960,1570960," and uh oh oh yeah yeah yeah not equals in pascal is like this i remember this yeah oh okay yeah no"
1570960,1582000," equals is is like that in fact uh yeah that's very funny okay so next what we need to do we actually need to"
1583120,1592560," know oh this one is weird like i need to check if the if the final thing is within the field because"
1592560,1600160," you can actually go out of bounds of the field yikes um you know what would be cool"
1600160,1611440," if i had like a field get field get version that also checks the bounds you know what i mean so essentially"
1611440,1617920," i have a cell i have a cell i have a cell i have a cell and then i say something like if field get"
1617920,1627920," i provide the field i provide role plus the role column plus the column and also the cell"
1627920,1634000," but this entire thing also returns a pudding in case you manage to get that cell you know what i mean"
1634000,1638880," that would be actually kind of convenient but it's not particularly convenient to use when you"
1639600,1644640," doing something like this because here you're iterating within the bounds of the of the field"
1644640,1649120," anyway there's no reason to check them because you know row and column is always correct in this case"
1650000,1660960," uh so maybe i'm gonna have like a field get bounce right and this one is gonna also check uh maybe we'll get check"
1664720,1688480," all right so let's uh go ahead and implement this into anything completely unrelated does anyone know"
1688480,1698080," where the jay compilers okay why do you need jay i know a way better language than giant okay go to this"
1698080,1706560," website download and download a better language than china just go here i'm telling you man like pascal"
1706560,1712480," is a way better language serious look at this language look at this syntax look how readable it is"
1714080,1724240," come on okay field checked get right so in here we're going to take the field um and we're going to"
1724240,1733840," do a row column integer then we're going to actually do the cell as a reference right so this is a reference"
1733840,1741280," cell and this thing is going to return a boolean right uh okay so and how we're going to be doing all of"
1741280,1752640," that if um a row less than row"
1752640,1766480," and a row is less than field rows and column"
1768320,1775920," and column less actually this one has to be equal all right so this stuff has to be equal"
1775920,1782640," less than field uh columns in that case in that case we"
1782640,1787760," set the cell right we set the cell to"
1793520,1801680," to field get to field get actually we can probably reuse this field get yeah field row column there"
1801680,1804960," we go so this is a field get uh otherwise"
1804960,1816240," oh man that would be actually pretty cool you know if we had results if we had the result we can do"
1816240,1824800," something like this right and then say if result then do that and that's it we won't have to do anything"
1824800,1835840," else that is so freaking convenient isn't it look at look at that that's so cool right so you have result then"
1835840,1843840," you automatically check that and yeah unfortunately it's not going to compile it's not going to compile because"
1843840,1847520," like you don't have a result right the result is another thing in this version of pascal"
1847520,1853920," uh so maybe we can mimic that maybe i'm going to have results uh which is a boolean right and"
1853920,1860240," then at the end here we can do field checked get result i could probably do something like field"
1860240,1868320," checked get but then it is not going to compile when i'll try to refer to that name back right because"
1868320,1874880," that way pascal cannot distinguish that uh so basically pascal does not distinguish the"
1874880,1883120," variable read and function call right because if you have a function foo this is the same as foo"
1883120,1890080," right so for from the syntactical point of view for for pascal there is no difference between reading a"
1890080,1896400," variable reading a value of a variable and calling the function so this is not i think this is not going to"
1896400,1905040," work right so uh let me see the error type definition so it complains about something in here which is"
1905040,1912400," uh kind of weird oh i i didn't finish this uh this thing yet so let me actually just do something like"
1912400,1919440," begin and uh right so just to put an empty thing in here uh error type definition is that because"
1920720,1932480," oh so it's probably okay i see yeah it worked actually all right apparently it worked you can"
1932480,1939680," assign this thing and then you can read it back if you don't provide any value but if you have a function"
1940400,1947120," right right which doesn't accept any arguments but it returns it like something right"
1947120,1958640," then you compute some sort of a value right uh true or false and then you want to check that value"
1960080,1967280," does that result in a recursive call"
1967280,1973520," or since it supports both no parentheses and parentheses in this particular context it may"
1973520,1982720," distinguish this is so weird right so right uh it's a land you know what i'm talking about this is a very"
1982720,1987760," interesting like how does it distinguish that i'm trying to read this thing and not doing a recursive call"
1987760,1991040," how does it know that um"
1991040,2000640," shadowing recursion yeah so let's actually try to compile this thing it compiles that it is totally"
2000640,2011440," fine with that so and now i'm gonna try to call foo like so and it's not went into well minefield is not"
2011440,2020000," okay so it managed to compile now if i try to run this it didn't go into the recursion but i suppose to"
2020000,2026480," actually go into the recursion you have to call it right so let's actually try to do something like that"
2027120,2034960," and then i'm gonna do mine and it went into recursion right so okay that's basically how you do that"
2034960,2043040," right so you have this situation the parentheses actually do matter they actually do matter it's"
2043040,2050000," really interesting okay uh i don't know you could have avoided this ambiguity if you just like always"
2050000,2056000," said okay function call is a function call and you always have to do that right so and sec fold is"
2056000,2065280," probably because of the um stack overflow all right and what's funny is that why it didn't even print"
2065280,2072080," anything right so we just stack overflowed without even ever printing anything probably because right"
2072080,2078880," lane is buffered right so it was basically buffering all of these calls uh and never flush them because it"
2078880,2088720," didn't have any opportunity because you know big the program crashed"
2088720,2099040," okay thank you so much for the subscription uh doodly to yy thank you thank you thank you really"
2099040,2104560," appreciate it all right that's very interesting so i learned i learned i'm learning something from a dead"
2104560,2109280," dead language about the dead language um okay let's continue"
2109280,2118320," so that means this is totally fine and yeah so i can check the field"
2118320,2123120," so unfortunately i can't really define the variable like that"
2125920,2132000," so let me try to do that uh error in type declaration call by var um"
2132000,2143600," so call by var for argument has to match exactly got a runner's type expected cell"
2143600,2146960," right but if i rename this thing to just see"
2147680,2153920," it will work and this is really interesting so you can't define a variable with the same name and the type"
2153920,2158960," but you can define an argument with the same name and type"
2158960,2164240," nice"
2164240,2168640," you know what um"
2171440,2175680," on the other hand maybe we had advancement in programming languages since 1970"
2175680,2182960," anyway so we're gonna call it c uh sure why not um"
2182960,2193760," so we get that and essentially we also need some sort of like a counter and i wonder can i just do field"
2193760,2206000," uh field count numbers equal zero right and then um when we had that and uh the cell itself is equal"
2206000,2213920," to the bomb right then we need to increment field count neighbors uh field count neighbors is going"
2213920,2221520," to be equal to count numbers plus one and i wonder i wonder if i can just do something like ink right"
2221520,2225680," because incrementing um a variable in pascal is just like ink"
2225680,2233120," so yeah will that work will that work"
2233120,2240720," all right illegal expression uh oh yeah equals equal it's just equals right"
2240720,2247280," since uh in pascal assignment to a variable is a completely different uh operator you can compare"
2247280,2251120," things with a single equal right so it allows you to do that it worked actually"
2251520,2257840," surprisingly it worked uh okay so field count neighbors right so this is a field count neighbors"
2257840,2264560," then we counted the neighbors and there you go we've got that uh so we resize the field and we're"
2264560,2269760," trying to write that but since we don't have any bombs i i suppose we're gonna get just an empty"
2269760,2276320," empty field there you go we got an empty field one of the things i can try to do i can try to set"
2277120,2283520," uh bomb at zero zero right let's actually set the bomb at zero zero and there we go we got we got this"
2283520,2290400," so it actually computed the neighbors properly and stuff like that just so maybe we're gonna also"
2290400,2299440," add another bomb in here right and that's what we have so we already have a way to sort of trim the field"
2299440,2306240," which is kind of cool uh fun fact you cannot assign constants they're just um they must be declared"
2306240,2314160," with the equals yeah so it's also very interesting uh because since equals means a mathematical equality"
2314160,2321280," and constant doesn't change you're not assigning a value to a constant you are declaring an equivalence"
2321280,2331760," right so i'm not assigning uh 69 to full i'm saying that's full is equal to 69 it's a mathematical statement"
2331760,2336400," right since you can't change it uh basically"
2336400,2342480," so that's the idea i suppose maybe"
2346160,2352960," all righty so the next step i suppose would be to generate the field right so"
2352960,2359760," field let's call that randomize right randomize the field"
2359760,2365360," uh so you resize the field you set the size of the field to a particular"
2365360,2370880," size and then you randomize the field given the given the size right i think that makes sense"
2371920,2376720," so let's go ahead and do that uh so this one is going to be a procedure"
2376720,2381600," it's going to accept the field by a reference right so this is the field is it going to take"
2381600,2389040," anything else i don't think so uh all right we might as well get something like uh bombs count"
2389040,2397840," right so how many bombs to place there uh bombs count something like that um but this one is rather"
2398880,2404640," rather interesting i don't really want to specify the like bombs count because what if it's bigger than"
2404640,2410960," the amount of fields amount of cells so we have to be a little bit cautious in here you know what i"
2410960,2417120," think i'm gonna define bombs count instead of bombs count i'm gonna actually define bombs"
2417120,2424560," percentage right so how many percent how much how many percent is that how you can say that how many"
2424560,2431440," percent uh of the field should be covered with bombs right and let's say that maybe 20 percent right so"
2431440,2439040," this is going to be 20 percent or something like that um okay so you know what i'm thinking i think"
2439040,2445600," cleaning up the field should be part of the field randomization not part of the field uh resizing"
2445600,2451200," right so here we're just resizing the field so maybe the field may contain garbage that's fine"
2451200,2455280," uh but cleaning up the field is part of the randomization so the first thing we do we just"
2455280,2463920," clean everything up and then we're going to be generating the um the stuff right so okay let's define"
2463920,2471440," bomb a bombs count right so this is going to be an integer and bombs count is essentially"
2473200,2483440," filled rows filled columns multiplied by bombs percentage right so uh it's going to be so in"
2483440,2490960," bombs percentage is basically from zero to 100 right we have to keep that in mind bombs percentage divided by"
2490960,2498320," 100 uh but to for this thing to actually work we need to convert this to a float right we need to convert"
2498320,2508560," it to a float and uh multiply it and then convert it back into integer uh probably rounding it up or rounding"
2508560,2516000," it down to be fair using floating point numbers for a discrete game is kind of dumb"
2516000,2523440," what do you guys think i think it is kind of dumb to use floating point numbers for a discrete game"
2524240,2533920," so you know what we can do this is effectively equivalent to something like this right this is"
2533920,2542160," equivalent to something like this and this already gives you the correct number but round it down right"
2542160,2550960," and of course division has to be like rounded down to round it up we have to add 99 right so that will"
2550960,2559840," basically round it up so we'll have to decide do we round up or do we round down um yeah okay"
2559840,2567200," so that's that's pretty cool another interesting thing uh so it would be probably nice uh to check"
2567200,2571680," that the bombs percentage is not greater than 100"
2579760,2591840," how did you learn about coding uh i've been doing it for 15 plus years"
2591840,2598640," sorry for giving you such an unsatisfying answer but that's true"
2602400,2608080," you have to do it you have to do it all right so but the bombs percentage is actually"
2608080,2614080," constant so i cannot just reassign it"
2614080,2621920," so maybe i'm going to actually accept bombs percentage as the parameter of randomized"
2621920,2626720," bombs percentage and it's going to be an integer"
2628640,2638240," and here's the idea if bombs percentage is greater than 100 then i'm going to just assign it to 100"
2638240,2645360," right so essentially it's a parameter of randomized and it can never be greater than 100 if we try to"
2645360,2650080," do that you're going to end up with the whole field anyway right so that's basically it"
2652080,2659760," uh and uh we convert it to bombs count and there we go we can just do some stuff um now while bombs"
2659760,2661680," count is"
2661680,2665680," greater than zero"
2665680,2673840," do is that a good idea by the way or is it better to like use for loop let's actually use for"
2675920,2686480," right so for index one two bombs count right so and that's what we're going to try to do um so now we"
2686480,2693440," need to pick a random cell right we need to pick a random cell how are we going to be picking a random cell"
2696160,2709760," so this one is so all right uh what if we had a thing called random cell right"
2709760,2724560," so this is an integer and row column it might also accept the field why not right so it grabs a random cell"
2725280,2732800," in the field right the next thing we can do after that we can get that cell"
2732800,2741280," you know what what if we return that cell here as well so essentially it picks a random cell field"
2741280,2748800," random cell assigns role in colon to that cell and also returns that thing"
2748800,2755040," right and here is an interesting stuff uh why uh if this thing"
2756000,2767040," has a bomb we have to repeat it so essentially while this thing is equal to bomb do keep repeating that"
2767040,2774960," is that a thing we can do is there like a way in in pascal to say like here's an empty statement like do"
2774960,2781600," nothing nothing um that's a very interesting thing"
2781600,2796560," so and after that we can do field uh set field uh row column uh bomb like this"
2800160,2800880," um"
2800880,2805840," um"
2805840,2809040," um"
2809040,2809120," um"
2809120,2809600," um"
2809600,2811280," uh pascal empty"
2811280,2819200," statement is that a thing though is that a thing empty statement eerie pascal"
2821280,2825360," okay empty statement don't perform any action and are usually created when the rules of pascal"
2825360,2830880," require statement uh if you write begin then technically according to rules um okay"
2830880,2835280," to the rules of pascal there must be a statement between beginning"
2835280,2839760," since there is nothing there the empty statement is said to exist there"
2840480,2845280," uh also commonly occur when statement sequence have training semicolon in pascal"
2845280,2846320," uh"
2846320,2854960," okay i don't don't quite understand uh okay let's try to compile this entire thing and see"
2854960,2862400," uh identify rows uh so field rows field columns"
2863600,2867760," all right so another one uh field random cell we'll have to implement this thing"
2867760,2869680," field random cell"
2869680,2871840," procedure"
2871840,2880800," it has to be function by the way right so accept the field then we also accept a row"
2880800,2883600," column as a variable"
2883600,2890880," do i have to put like a variable on both of the names or do i have to put them only on a single one"
2890880,2893840," that's a good question i'm going to put them on the bottom of them just in case and see what the"
2893840,2899840," compiler says uh and then this thing should return the cell right this thing should return the cell"
2899840,2908720," begin end uh right row is going to be zero column is going to be zero and uh cell field random cell"
2908720,2913920," is going to be equal to empty right so it always just like finds the empty it's not implemented yet"
2913920,2919520," we're going to implement that in the boot layer uh okay so identifier var found okay so you only"
2919520,2927200," have to provide that in a single place and uh here we have to have a semicolon uh do we need to have"
2927200,2938320," anything else uh identifier not found okay again we have to maybe move all of these things there uh i"
2938320,2943360," think the gators and setters of the fields should be like the first things because everyone uses them"
2943360,2951920," right literally everyone uses them okay uh wrong number of uh this stuff okay randomized let's say"
2951920,2959360," that the we have 20 percent of the uh of this stuff all right and it kind of worked and i forgot what i"
2959360,2967680," was trying to test right yeah okay so it seems to be working now what if i just don't provide begin and"
2967680,2973360," end but i provide the semicolon will that work it okay it worked i can do it like that"
2973360,2981040," all right wait wait wait yeah i can do if i need to have a while with an empty statement i can do it"
2981040,2986240," like that i don't have to provide begin and end i can just this is so cool do i have to provide do"
2986240,2992800," yeah i probably have to provide do but that's actually pretty cool right so that actually makes it super"
2992800,2997600," convenient because you have an action in the condition and while this condition true you want"
2997600,3005120," to keep repeating that that's so cool all right so uh yep"
3005120,3014640," this is such a cool and elegant way of finding an like an empty cell"
3016400,3027520," um right this is so such a cool way of doing that huh all right and we're talking about the language"
3027520,3036960," from 1970 70 yeah very elegant language a bit outdated right but but at its core"
3036960,3044960," at its core it has pretty nice ideas pretty cool nice ideas uh okay so randomize all right so it doesn't"
3044960,3051200," really work because we need to implement a field random cell right oh another interesting thing another"
3051200,3060960," interesting thing um since it's always going to be 100 i think you always will find eventually all of"
3060960,3069360," these things i don't know so i'm thinking do i have to like implement some prevention mechanism that for"
3069360,3078880," like looping for too long there whatever okay so let me find random uh pascal random"
3088080,3092480," so random is just a random number larger or equal to zero and strictly less than l okay"
3092480,3097440," that's cool um so that means i need to do"
3097440,3104960," random cell has to be able to random field rows"
3104960,3113360," random field calls right and then what i have to do i also have to return"
3113360,3124640," uh field get field row column right so we generate like a random cell and we simultaneously also return"
3124640,3125360," its value"
3125360,3138640," there we go about that we generated a random field a random mind sweeper field"
3139760,3146080," isn't that cool is not cool i think it's pretty fucking cool all right and it's the same field"
3146080,3151600," every time so we also have unused variable in here which i probably have to remove but anyway yeah"
3151600,3157600," so that's pretty cool and this is because we don't really change the seat the seat is always the same"
3157600,3162800," and if i remember correctly to change the seat you have to do randomize right so you have to call"
3162800,3171040," randomize and it will change the seed every time and uh i don't really like the fact that it's so compressed"
3171040,3176560," if you know what i mean um right maybe i can make it a little bit wider"
3176560,3181280," all right so maybe the field could be a little bit wider but it's still a little bit too compressed"
3181280,3188240," if you know what i mean right it's it's a bit too compressed so what if when we're rendering everything"
3189440,3195200," we would actually wrap everything with spaces all right i think that's a pretty cool idea right"
3195200,3205280," uh space and another space right it's it's fine let's say i think it's pretty cool right so it's pretty"
3205280,3221200," readable uh all right so we already have like 100 lines and this isn't 100 lines how about that"
3221200,3233280," oh and look look look it uses time it uses seconds it actually changes every second right so it uses"
3233280,3242880," seconds as the seat uh hey sodding what do you think about odin programming language i think the same"
3242880,3252240," thing uh as about zig it's the same thing as zig 300 bucks all right so maybe we should make a small break"
3256320,3259600," maybe we should make a small break and i need to make a cup of tea what do you guys think"
3259600,3268160," so the next thing we'll do we'll probably introduce some sort of like a fog right essentially uh you know"
3268160,3273840," because some of the cells can be open some of the cells can be closed uh right so we probably should"
3273840,3284560," introduce something like fog array of uh boolean right and i suppose true may mean that it's open false it"
3284560,3295760," means that it closed right so open um and when we randomize the field right when we randomize the field"
3296640,3309760," uh uh so we're gonna do something like that um begin all right field open"
3309760,3318400," index false and we'll probably have to take that into account while we are rendering things i think"
3318400,3327440," right so let me let me see so where do we render it so here's the right and we're only gonna do that if the"
3329760,3344800," uh if field open oh this actually yeah yeah we probably have to do something like uh if field"
3344800,3357440," is open right field row column uh field row column then only then we're gonna try to get that thing there"
3359760,3371440," um oh yeah this one is rather interesting so in case of this thing being closed right in case of this"
3371440,3379200," thing being closed we probably have to write uh something that indicates that the cell is closed"
3379200,3384640," uh right since everything is sort of like wrapped in spaces in here maybe we can"
3386320,3392880," get rid of all of that and move that wrapping somewhere in here so it's applicable to everything"
3392880,3397840," right yeah that makes sense right it's applicable to everything in here"
3397840,3407200," and because of that this stuff uh should be wrapped in begin end right and there we go"
3407200,3424480," maybe this one is going to be simple okay okay so let me see uh field is open does not exist right field"
3424480,3429520," get let me let me find field get"
3432400,3440560," function field is open field field row column index"
3440560,3443760," integer"
3443760,3451520," cell so what's interesting is that i keep repeating the same formula over and over again like basically row"
3451520,3458080," columns and call which is probably kind of like error prone right one of the things i probably want to"
3458080,3465600," do i want to do i want to maybe abstract that away um so and introduce something like field cell index"
3465600,3473280," right which provides the field which takes the field uh row in column and returns you the index of the cell so"
3473280,3480160," we can well i mean it's actually kind of long as well uh yeah i don't think i think it's too much effort"
3481280,3488960," uh and it doesn't really worth it is open uh open all right"
3488960,3499040," oh this one have to return a boolean instead and it's sec faulted nice"
3499040,3503680," it actually sec faulted i'm i'm really happy about that"
3506160,3512480," oh this is because i never resized the open right so when i resize everything i only resize the cells"
3512480,3515280," but i never resize the open this is also quite important"
3515280,3518720," maybe the cell itself has to be a structure"
3518720,3522000," that's actually sounds like a good idea"
3522000,3525760," maybe it has to be a structure i will think about that"
3525760,3531360," maybe we'll have to do a little bit of a refactoring as you can see everything is closed right so"
3533520,3541360," we can make everything open right so it's going to be true everything is open but then we can say"
3541360,3548000," everything is closed and you can't see anything so it generates random field every time it generates"
3548000,3551440," random field every time but you can't see that because everything is closed"
3551440,3560800," so that's what we spend an hour on uh we spend an hour to just generate um 10 by 10 field that"
3560800,3567520," looks the same every time about that this is this is what programming is all about right doing some"
3567520,3574000," you know some work that nobody understands with a useless outcome right that's why nobody likes programmers"
3574000,3574960," so"
3574960,3584960," really fun thank you so much for for subscriptions uh thank you everyone who subscribed thank you thank you"
3584960,3592240," thank you um all right so i want to make a cup of tea because i need to coffee and eat myself a little"
3592240,3598240," bit and after the cup of tea and after the break we're going to continue developing this thing uh so i"
3598240,3604960," want this program to be actually interactive right now it is not particularly interactive um so i suppose"
3604960,3611760," after the break we're going to go into a system part of programming in pascal and we're going to try to"
3611760,3619440," maybe interface with termios right to put the terminal in sort of like a non-canonical mode where why is it"
3619440,3628000," in russian why are you exposing me uh so and put the terminal in a non-canonical mode uh where we can do"
3628000,3636560," like an interactive game uh all right let's make a some break and okay let's continue developing this thing so"
3636560,3644240," we need to learn how to make this entire thing interactive i suppose um so what i want to do i"
3644240,3649360," probably want to organize some sort of a loop right i want to organize some sort of thing so"
3649360,3653680," let's have a variable that indicates that we need to exit from the loop so we're going to have a quit"
3653680,3658400," which is a boolean and as far as i know you can instantly initialize the variable but maybe you"
3658400,3664400," don't have to do that maybe it's defaults in default initialized but i'm going to try to do that anyway"
3664400,3674080," right so and while not quit we're going to keep doing uh some interesting thing right i'm going to write"
3674080,3680960," the field right i'm right in the field uh main field and then i'm going to try to read a comment"
3681520,3688080," write or maybe um yeah let's call the read comment uh and every time you press something or press enter"
3688080,3694400," because it's read line uh it will print the field right it will print the field okay so as you can"
3694400,3699600," see it waits for the input but i don't want to work within emacs right because it's not a really good uh"
3699600,3707600," terminal uh i want to open team ux instead so we're gonna have something like mine and there we go"
3708560,3713920," so yeah it prints this thing every time i press enter so which is pretty great so we already have"
3713920,3718560," some sort of interactivity you know what i mean it's not particularly great interactivity but anyway"
3718560,3724640," so let's google up something about thermos like as far as i know pascal can interact with linux"
3724640,3730400," operating system right so it has some modules that allow you to do linux posix stuff uh so let's google up"
3730400,3740320," free pascal uh termos i cannot do the it straight up has a module for terms look at that that's actually"
3740320,3752320," pretty good um so i wonder can i just say all right use uh uses termos can i do that uh you can cannot do"
3752320,3758240," that is is that the termio yeah it is a termio so there is a thing called termio so i don't remember"
3758240,3764000," what's the difference between termos and termio uh but there is a difference between them and they're"
3764000,3772400," also pretty similar as well um well this looks like uh the data structure right so that's usually"
3772400,3777840," what you have in here uh example can we have a simple example for this kind of stuff"
3779440,3786320," um okay okay we can we can have that so it's a fp io ctl um"
3786320,3795760," but i'm not sure you know what i'm on a google c example uh termos termos example"
3795760,3799200," i'm pretty sure i'll be able to port that stuff"
3805040,3814160," non-canonical non-canonical mod mod example yeah there we go"
3814160,3820240," yeah so that's what we need to see"
3820240,3821360," uh"
3821360,3834560," cool so first we need to create t-a-t-t-r data structure with the name termios termios"
3835440,3838480," right so i wonder if that is going to work"
3838480,3846400," uh a t-t-r so this is the structure that basically stores these settings for the terminal right so"
3846400,3853680," that's what it does uh and it works so let me actually not um run the game every time i recompile"
3853680,3857360," it right there we go so everything seems to be working so we have this data structure in here"
3858160,3860320," um as far as i know we should be able to"
3860320,3865440," then do the following thing"
3865440,3870240," where i can try to print the parameters in here"
3870240,3877120," um so the problem with the basket by the way i cannot use my usual trick when i have several entry"
3877120,3879440," points right so essentially in c"
3880720,3885920," quite often i can have a main entry point right where i have my program"
3885920,3891920," right i do some stuff in here and then i decide okay i want to keep the same program i want to keep"
3891920,3893120," using the same"
3893120,3896400," uh sub procedures that are used in the main program"
3896400,3902160," right but i don't want to call the main program so what i do usually i rename the entry point to"
3902160,3907840," something else and i create my second entry point where i experiment with something"
3907840,3912240," right so i basically preserve the environment of the program but i don't use the main program"
3912240,3917120," and it's kind of convenient and i can always like comment it out and go back this is a very convenient"
3917120,3922240," trick right if you want to use something like that but in pascal since in pascal entry point is not a"
3922240,3928160," procedure or function i cannot really do that so but here is an interesting thing as far as i know"
3929040,3938640," whatever you put after the end dot is completely ignored by the compiler you can put literally"
3938640,3946480," anything in here and it's going to be ignored because after the end dot the pascal stops parsing anything"
3947600,3953280," which makes me think can i do a similar trick if i just do and dot"
3953280,3964560," i just i just realized that right so i didn't prepare for the trick beforehand i just realized that"
3964560,3975280," i can probably do that and uh it works it's even better i think it's even better trick well almost like"
3975280,3980000," because i cannot preserve both of the entry points so that's actually a pretty cool trick right so i can"
3980000,3985120," experiment with something and when i'm done i can just remove that and there you go so this is the"
3985120,3992640," main problem uh that's pretty cool i do remember that the the reason i do remember that is that my"
3992640,4000400," school teacher uh who taught me all like majority of the algorithm and who taught me to love like computer"
4000400,4008000," science uh he was using pascal and he was explaining algorithms and data structure after the end dot he"
4008000,4015040," always used that space that area for different sort of visualization explanations and stuff like that"
4015040,4021600," while having the main program somewhere here this is such a cool way of using that space right so"
4022560,4028320," and this is the only reason why i remember that because he was always using that sort of like space um"
4028320,4030480," to to explain things that's so cool"
4032800,4045520," so holy holy shit i'm so old it's been like more than 10 years ago"
4045520,4052720," anyway maybe i should do the same right maybe i should put some explanations in here and stuff"
4054720,4063600," but anyway the thing i wanted to do essentially uh i wanted to just try to print just check if this thing"
4063600,4074320," has uh you know the fields uh the fields i care about is a cl flag for instance cl flag right then i'm"
4074320,4085120," gonna do something like this cl flag and let me see if it's going to work right so and of course of course"
4085120,4092720," i keep forgetting that it's it's a single thingy in here okay so we do have such field so this thing has"
4092720,4100720," like literally like literally the same fields i also wonder where uh where all that stuff is located right"
4100720,4119840," so fp i o ctl bun xh oh it's a b unix h i wonder if i can do the following trick i can take the name"
4119840,4128160," of this source code and go somewhere and user share and try to find such file with exactly that name"
4128160,4134000," will i find anything because i want to find all the place where uh the free pasca stuff is located"
4134000,4141120," so i can just go there and okay there we go so this is where it's located uh so it's uh fpcsrc"
4141120,4153040," and yeah so i can just literally go there user um share fpcsrc so it's usually in rtl right and"
4153040,4161600," this is where we can look for things and for instance instance i want to search for um termos"
4161600,4168720," equal right because this is where it's defined all right so there are several uh you know implementations"
4168720,4171520," for the termos right in here specifically"
4171520,4180480," it's in linux and the module i should probably use all pascal mode"
4180480,4189120," right consts uh it really doesn't understand that it's that but what if i use pascal mode it kind of"
4189120,4200160," understands the pascal mode right okay that's very cool uh termos equal record here is all that"
4200160,4209280," uh pack records oh you can even specify to to pack this structure to not pad it or to pack it uh you know"
4209280,4214880," the way as c packs them it's so cool actually uh all right"
4214880,4227360," okay i like that so now i want to go here and see so tc get attr do we have to see get attr in here no"
4227360,4235200," we don't uh but do we have that somewhere in here unfortunately pascal has already said case insensitive so"
4235200,4240080," we probably should search in case insensitive mode okay so we do have something like that"
4240080,4248080," uh tc get termios proc uh and yep here it is uh term ios"
4248080,4252320," is that what it stands for like a terminal input out"
4253360,4262880," ah so that's what it stands for it's a terminal input output system did you guys"
4262880,4273280," did you guys know that it's that okay anyway um so we also have to provide fd and"
4276400,4281920," so this is a saved attributes um set input mode"
4281920,4294640," is atty i wonder if we have such function in here we do have that so and it's a handle but do we have"
4294640,4305680," like uh std in anywhere uh can we even refer to std in somehow um so open std"
4307040,4314720," uh probably not right so i suppose we can just refer to that standard input output why the"
4314720,4322160," um how it's called why the the numbers right so we can easily do that"
4323600,4329200," uh all right so this is mine pass uh where is the end"
4329200,4344160," is a tty right and uh std in is std in zero because i know std out is one and std error is two"
4344720,4354320," right so std must be zero uh so we can do that if this thing is not that uh we're gonna do something"
4354320,4354640," like"
4358640,4365920," to write ln this is not a terminal right maybe even error"
4365920,4371280," uh all right and here can we just do something like exit"
4371280,4375920," with one i'm not sure if it's gonna work so i'm just like curious"
4379120,4384240," so fpc mine pass all right"
4384240,4395840," all right so we have incompatible types um i guess i can just exit but as far as no exit"
4395840,4400240," exits from the current procedure right so it doesn't really exit from the entire program"
4400960,4413600," incompatible type long int oh so it doesn't return boolean it returns a number right so if it's equal"
4413600,4425600," to zero we'll have to do that okay because it's it's from c okay so that is very interesting but now let's"
4425600,4431760," redirect that to some file and when you're redirecting right so the input kind of"
4431760,4443280," well we're checking for the input right so yeah so that means if i use the input like so"
4443280,4452320," in the output we'll get this is not a terminal right so i set the standard input to a file and it"
4452320,4457520," actually detected that so we can detect that uh we're currently running not in the channel"
4457520,4466160," that's pretty cool so we already can do that in pascal right so pascal is a practical language you"
4466160,4480320," can actually interact with the terminal in it by the way is the is the camera lagging is the camera it"
4480320,4484160," feels like the camera is lagging doesn't it huh"
4484160,4500800," i don't know why is it better now i think it's it's it's a bit better so why nobody told me that the"
4500800,4506560," camera is lagging probably because i wasn't reading the chat but anyway so anyway"
4506560,4515200," so now now it should be fine so is it fine now please tell me"
4515200,4519040," i thought it's just my tired eyes yeah"
4522400,4529440," it's perfect okay i'm ready to hear that cool so maybe like i mean why do i care about that the main"
4529440,4534560," focus is the code if the code is visible that's the only thing that matters if the code doesn't lag"
4534560,4542960," that's perfect okay so we can check for the terminal all right so then we need to do tc get attr right dc get"
4542960,4558000," attr zero and then we have to provide the tattr but i don't remember how to take the pointer"
4558000,4564640," of the uh for the structure right so but we also need to check uh how this stuff is defined termios"
4565760,4571840," yeah um term ios i wonder if i"
4571840,4579040," oh it's it's a var i didn't even have to specify it as a pointer this is perfect"
4579040,4589520," uh all right so now let's try to run oh we got something 35 something something something"
4590240,4597040," we got some stuff this is actually cool uh so if we don't get anything right as you can see we don't"
4597040,4601920," have any parameters in the flag right so this is basically the state of the terminal right we're"
4601920,4607120," trying to query the operating system tell us what's the current settings of the terminal right so that's"
4607120,4609840," what we're doing essentially um okay"
4609840,4619760," um and what's funny is that we have a separate structure called saved attributes right so we"
4619760,4626000," save the attributes so then we can restore them later but i'm not really sure if i care about that so"
4626000,4637040," whatever uh all right so i suppose this is what i need to do now right so what i'm gonna go ahead"
4637040,4643680," and do is i'm going to translate this c code to um to pascal"
4643680,4651040," t-a-t-t-r"
4651040,4656560," t-set"
4656560,4666080," a-t-t-r right maybe i can actually do the following thing who said i can't define such constant"
4667120,4673760," no who said i can't do that stdin file embed you know what would be funny if such content"
4673760,4681200," constant is already defined that would be actually very funny uh okay so here i'm gonna do that"
4681200,4689520," and does anyone remember what are the bitwise uh operators are they the same i think it's just"
4689520,4699040," basically dispatch that compile time um somehow i don't quite remember but yeah this one is just or"
4699040,4710160," yeah so basically it's overloaded essentially yeah it's resolved by the times pascal bitwise operators"
4711760,4718000," uh bit operators to tutorial points oh wait really"
4718000,4722400," oh okay"
4722400,4727840," you can it's probably like a modern pascal or something"
4732880,4738400," so we have um so we have a semicolon a legal expression"
4738400,4746560," thank you for such a good compiler message so cool all right"
4749440,4768640," the question is like what ah okay okay so yeah yeah i keep forgetting you could have told me that"
4768640,4775040," it's a lower separated compiler why don't you tell me that uh okay so it seems to be working uh which"
4775040,4782080," is nice so here we're essentially setting non-canonical mode without like echo and stuff like that"
4782080,4785280," right right so let me try to run uh this thing"
4785280,4791200," so i'm gonna exit i didn't really want to exit but i did that anyway"
4791200,4801840," why can't you just go there mine oh and i can't type anything look at that i can't really type anything"
4801840,4808000," right so but i can one thing i can do i can actually blindly set reset and should be fine that's actually"
4808000,4819840," pretty cool all right i'm super happy now uh i'm gonna do that so we resize we randomize then we set"
4819840,4827920," the terminal right so the terminal has been set successfully uh and then i might as well just to read"
4828560,4837520," in here and let's try to recompile it this is not what that one is that's for sure okay cool"
4837520,4848720," uh yep that's pretty cool what i'm curious about is what to read actually returns right but i don't"
4848720,4857760," remember how to use reading pascal how do you use read in pascal does it just return something um so you"
4857760,4868400," provide the text you provide the arguments uh oh okay so we are looking for a character right so"
4868400,4877120," so let's call it like that character and then i'm gonna say okay read the character right and maybe on"
4877120,4884080," top of that i'm gonna just like always bring that character because i want to see how exactly this thing"
4884080,4888160," interacts um you know with the operating system"
4888160,4898400," okay so it doesn't buffer anything and stuff like that so as you can see i can like literally control"
4898400,4903360," all that that's actually pretty cool so i don't have to press enter or anything like that that is very"
4903360,4905120," very very cool all right so"
4905120,4917920," okay and every time i press something it actually re-renders this entire thing that is so cool holy"
4917920,4932160," okay um when we are re-rendering the field i need to use the codes right the um the terminal unsafe escape"
4932160,4940560," codes that set the uh cursor to the beginning of the field so when i render it again it basically refreshes"
4940560,4946160," so that's what we need to do in here right that's what we need to do somehow but i don't remember how"
4946160,4954400," to do that but i um i use that multiple times in port so maybe i'm going to steal some code from port"
4954400,4960160," you know what i mean uh but it's not going to change anything so one of the things i want to have"
4960720,4966800," is probably the position of the cursor we need to introduce the cursor that we can control with"
4966800,4974400," wasd so let's actually go ahead and do that we can kind of make it part of the field right so we can"
4974400,4982800," do cursor cursor role which is going to be an integer and cursor column right so this is a cursor column"
4983360,4992400," when we resize and randomize field random randomize field maybe it makes sense in the field to do cursor"
4992400,5003200," role equal to zero and cursor column equal to zero as well yeah there we go and when i do field right"
5004240,5019440," i also check a very important thing right if field at cursor right i provide the field i provide the"
5019440,5029360," role i provide the column then i write this thing otherwise i write this thing uh-huh and in here"
5034240,5050160," uh-huh and in here this is going to be a simple function that checks if the role and column column is"
5050160,5063680," equal to the cursor role column field field role column integer integer boolean begin end"
5064240,5079360," field field add cursor role field cursor role field cursor role equal to role and field cursor column"
5079360,5090560," equal to code we have the cursor we can't really control that cursor yet but we're getting there"
5093040,5100960," so one of the things we can do we can do case cmd and here we can have several cases we can have w"
5100960,5111280," we can have s we can have a we can have d and in case of w what do we do we're gonna go up right"
5111280,5121200," so it's a field cursor role decrement by one right it's it's just a decrement but it only makes sense if the"
5121200,5127200," cursor role is greater than zero otherwise it doesn't really make much sense so if we want to go down"
5127200,5136000," uh right essentially what we do we increment field cursor role right but if the"
5136000,5146640," cursor role is greater or equal to field rows right we can't do that we can only do that if it's"
5146640,5156880," it's less than minus one yeah we can put it this way yeah so that's the conditions in here um so a"
5156880,5166960," is essentially left right but it's for the columns right so we just replace columns and here uh it's the"
5166960,5175520," the same if it's something else we're gonna simply ignore that um"
5175520,5178960," okay"
5178960,5190880," variable identifier oh it's a main field yeah okay query place field with main field"
5195680,5206080," oh that makes sense and then align then cool so now can i do okay so i can move around"
5206080,5213920," right in a very interactive fashion as you can see i'm literally moving around uh but it doesn't refresh"
5213920,5220720," it right uh it doesn't refresh it so we need to before rendering anything right before rendering anything"
5220720,5227200," kind of have to go back so here we do the first rendering then we have to perform the command"
5227200,5237040," then we need to go back right we need to go back and then render it again so i already have"
5237040,5245920," an example that can do that in port specifically uh right example i think it's a game of life right so but"
5245920,5252960," i probably have to recompile the game of life we go port right there we go uh so this is a goal as you"
5252960,5259200," can see this is what i do here right so it's constantly refreshes and to achieve that i'm using the"
5259200,5266560," nc escape codes right so that's what i'm doing here uh fourth right so and the codes that we use"
5268080,5281040," are this okay so that seems to be pretty pretty easy um right we have to put escape right escape"
5281040,5289440," symbol then open bracket then a number of like how much we have to go back and then a uh that's how it"
5289440,5295600," basically works uh let's see if we can easily do that so right we have to put a new line no we don't"
5295600,5300960," have to put a new line so this is a right uh escape the question is how we're going to do escape um"
5300960,5310160," i remember that in passcode is ord right so there's ord and it takes"
5312160,5318480," uh returns the ordinal value of the uh didn't have type class so it you can use that"
5318480,5326800," uh to get numbers but what's the opposite of ord chr yes this is what i was looking for i keep"
5326800,5332240," forgetting that so this is chr and it can construct this thing so chr 27 so this is escape code"
5332880,5344080," uh then we literally put this thing right then uh we have to put uh where am i uh we have to put amount"
5344080,5353200," of rows and amount of rows is essentially filled uh rows right so this is a field rows and then we put a"
5353200,5358080," and i wonder if it's going to work right i'm actually really curious if it's going to work"
5359600,5368480," uh this is the same but we have to use columns and the d but here's an interesting thing uh we have"
5368480,5374880," to we have columns multiplied by three right we actually have columns multiplied by three because"
5374880,5382000," we pad them from left and right with spaces for the cursors right so uh that's why we have to multiply"
5382000,5388000," it by three uh and hopefully that will work let's actually see uh okay so we could replace"
5388880,5399680," um so identifier uh it's a main field okay so it seems to be compiling let me go back in here"
5399680,5409120," look at that this is written completely in pascal holy shit"
5412640,5421120," okay so uh okay so uh let's do another cool thing um so if you press space we can do something like field"
5421120,5436960," uh open at cursor main field there we go so open at cursor field open uh i think it was field is open yeah"
5436960,5446880," yeah yeah yeah yeah function field open at cursor field bar uh field it's actually procedure by the way"
5446880,5464480," begin and uh and then field open field row multiply it by field calls cursor plus field"
5466080,5477120," uh cursor column uh is equal to true"
5477120,5492960," well you technically can already play it we technically already implemented the game"
5492960,5505280," so the only thing we don't check in here is the you know condition right so when you open uh the the"
5505280,5508720," field with with the bomb we should say something like oops you lost"
5508720,5521280," so yeah and maybe we can also add uh pretty cool uh features when you basically okay so here you have three"
5521280,5526720," right so we have three neighbors and all of the three neighbors are sort of like marked uh right so when"
5526720,5531440," you press this thing it should automatically everything that makes sense also we should probably"
5531440,5534720," implement the the flag right"
5534720,5542320," uh so we should implement like uh setting a flag on on the closed thing"
5544160,5555600," all right so that's pretty okay so i think this thing is already worth uh putting on the github right"
5555600,5561760," so because already it almost feature complete like you can already play this thing to some extent uh"
5561760,5566800," doesn't check any conditions or anything like that but it's already playable um okay"
5568560,5576320," so the license i'm gonna release all of that on the mit license uh and read me md um"
5576320,5584080," minesweeper uh in yeah so the terminal minesweeper"
5585920,5593680," uh quick start uh quick start it's uh written in free pascal"
5593680,5597680," uh sorry about that"
5597680,5600000," right"
5605040,5616560," just just just go and download it uh now i'm gonna do console uh fpc mine may mine pass and then"
5616560,5622160," you just run it right so it doesn't really require any special building process or anything like that"
5623040,5632480," um okay so git ignore mine mine mine oh and let's do git init"
5632480,5643520," and let's do a committee committee of everything already set a go"
5648320,5673600," um um mine mine mine sweeper this is public and let's create a review"
5673600,5687920," okay so you can find this uh this source code in here if you're interested in this thing"
5687920,5696400," and i'm also going to put that in the description just in case i ever release this um you know this"
5696400,5709520," stream on youtube uh mine pass there we go okay so what do we need in here what do we need in here"
5709520,5717360," we need a simple condition like a field open at cursor right so we can have uh like different things in"
5717360,5725680," here for instance we can return the value of the cell that was opened right so this is something we can do"
5726400,5736240," uh uh so field and because of that it has to be a function field uh open at cursor equal field cell"
5736240,5742960," and in here let me take this thing and put it into the index"
5745440,5756480," bar index uh bar index uh it's an integer right so here we can do just index just index there we go"
5756480,5769280," so and if open at cursor is equal to bomb then um well we have to probably do begin and end"
5771840,5785680," and here we're going to write ln oops and we just exit yeah"
5789440,5791600," so now it's fine"
5791600,5797440," okay"
5797440,5806480," it didn't really open it properly though right um it would be kind of nice"
5806480,5816400," if we like literally opened everything yeah i really like that idea so essentially uh for"
5819040,5826640," so we we do need to have something like field open everything right field open everything uh then"
5826640,5829120," i would love to"
5829120,5838400," move that somewhere right so to have a function uh cursor cursor"
5838400,5840800," back"
5840800,5844240," field so we have to"
5845840,5853360," two notions of the cursor we have a built-in game cursor right and we have another cursor that is"
5853360,5857280," the terminal cursor i wonder if we can actually"
5857280,5869200," okay i can't really control what if i just used this cursor as the main cursor"
5869840,5874800," it's not going to be particularly portable then what if i want to port this game to web assembly"
5874800,5881680," or something like to some sort of like a front end that doesn't have the notion of the cursor it would"
5881680,5887040," be nice to have our own cursor then uh but maybe depending on the front end you just like use a"
5887040,5892240," different notion of the cursor and so it's it's kind of hard to tell but just don't really want to"
5892240,5897040," spend too much time on that uh so because of that i'm not going to try to think too much"
5897040,5909840," all right so open everything all right then write the field one more time then write oops and then exit"
5909840,5918160," completely so that's what we can do uh main field field open everything open at cursor"
5918160,5922400," function"
5922400,5924880," war field"
5924880,5930560," field this is not a function this is a procedure"
5931760,5952960," begin begin and var index integer for index 0 to field row field rows field columns do field open"
5955520,5959760," true that is basically it"
5959760,5963920," not bad"
5963920,5976640," maybe opening everything is not a good idea so in the original game you wouldn't open everything we open"
5976640,5977360," only bombs"
5977360,5983520," like make sense i think this is exactly what we should do we should open only the bombs"
5984320,5988640," right and by the way there is another problem is that we don't restore the state of the terminal"
5988640,5995680," so this is something that we should probably do uh when we exit in here let's be sure"
5995680,6006240," so can i break out of the loop in here so is is breaking a thing breaking apparently is a thing"
6006240,6013040," right because what i want to do in here is i want to have like a saved attr"
6014160,6022400," saved t and attr yeah so we just do two of these things saved"
6022400,6028400," and then"
6028400,6033520," when we reset everything back"
6033520,6040160," we have to use tca now i'm not really sure what the fuck is that but"
6040160,6044000," uh sure so when i go here"
6044000,6049440," because of that we don't really need quit all right"
6049440,6052720," quit is kind of weird but that's fine"
6052720,6055120," uh-huh"
6055120,6058960," saved"
6058960,6061040," okay"
6061040,6064720," this is not what i want"
6067520,6073600," yes yes and it reset okay so perfect uh okay let's go uh open everything"
6073600,6078080," query place open bombs"
6081040,6087520," and here we can actually do that relatively easy if field cell index"
6087520,6094800," is a bomb only then open it right so cells"
6094800,6097600," uh no"
6103520,6105280," uh it's uh it's kind of difficult to see them"
6105280,6110400," uh the yeah"
6110400,6120320," so what if instead of star"
6121840,6126800," we used at is that is that a very thing"
6126800,6138480," or maybe instead of this we use dot"
6138480,6148080," so it's just like this is way better i think this is perfect look at it look at that that is absolutely"
6148080,6158560," perfectly perfect i really like that"
6158560,6161280," okay"
6161280,6164000," oops"
6164000,6170080," uh interestingly enough interestingly enough i have the following idea"
6171440,6172000," um"
6172000,6176000," i forgot what idea i had"
6176000,6178800," oh"
6178800,6193120," so in the original um in the original game in the original game"
6194160,6200000," uh the not really original game but in the one that came with windows i don't know who invented this"
6200000,6204400," game is the windows developers invented that and anyway uh in any case"
6204400,6211840," there is a thing that the field is not generated until you make the first click"
6211840,6219120," right so the field is completely unknown and until you make the first click and it is generated the"
6219120,6226000," way that your first click never clicks on the bomb right because it's fair right it will be kind of"
6226000,6230560," unfair if the first click you make is actually the bomb itself you instantly lose you didn't even have"
6230560,6236560," a chance to start the game you know what i mean uh i think it's actually pretty cool idea so maybe we"
6236560,6242800," should do a similar thing right maybe we should do a similar thing and it's actually not that difficult to do"
6243760,6249520," right so we do randomization in field randomize and we have an access"
6249520,6254880," we have an access to the field and field also stores the cursor"
6254880,6261680," so when we do field random cell right we can also additionally check"
6261680,6269600," we can also additionally check that uh the current cell that we got random cell that we got is not a cursor"
6270480,6274080," right and we even have the field"
6274080,6280400," at cur yeah so this is actually perfect so let me show you a randomize"
6280400,6286720," uh randomize while field random cell is equal bomb"
6286720,6290640," um or"
6290640,6300320," field at cursor row and column just keep generating a new one right so it never allows you to put a"
6300320,6305600," bomb at the cursor but that creates an interesting problem that creates an interesting problem what"
6305600,6307600," if your bomb percentage is hundred percent"
6307600,6314400," and what if it's hundred percent it's going to actually go indefinitely uh to be fair i don't really"
6314400,6327360," know so uh let's actually put it to do prevent this loop going indefinitely because i don't really"
6327360,6333440," want to think about it too much right now i know that like it's possible for this loop to go like"
6333440,6338560," forever and by the way we're using original pascal in the original pascal we have to use these comments"
6338560,6343920," i know it's possible for it to go forever but it's just like i need to come up with the elegant design to"
6343920,6350960," prevent that and it's not really in the mood so and the the percentage is hard coded to 20 anyway so"
6350960,6358320," who cares everything is hard coded right now so it's fine um okay so essentially what we can do we can"
6358320,6368480," when we resize everything right when we resize everything uh we can as well close everything right"
6371040,6384400," so this is not what i want resize there we go"
6384400,6394320," uh we resize everything and we close the everything and in randomization only then we set all of them to"
6394320,6401840," empty so there is a difference between this stuff uh and then index here is going to be index integer"
6401840,6408480," right index integer fill resize all right so we do not randomize right away"
6408480,6416960," right we only resize it and maybe we're gonna also keep track of something like first right so this is first"
6417600,6428240," uh i'm not sure if it will work um now"
6428240,6441840," what do we do if first if first then we're gonna do slightly different thing uh we're going to"
6444480,6446480," field for randomize"
6446480,6449760," main field"
6449760,6452000," yeah"
6452000,6460960," so and field randomize by the way kind of guarantees uh that is going to work"
6460960,6467760," yeah this is two separate things by the way"
6467760,6472640," yeah two separate uh separate expressions"
6474480,6477040," mm-hmm"
6477040,6481360," i don't know so if it's the first time we're randomizing it but on top of that"
6481360,6487760," it probably makes sense to say first false oh yeah so"
6487760,6500240," we need to say first equal to true yeah first equal to true if the first time we do field randomized"
6500240,6506800," field randomized should guarantee that you don't click on uh on the bomb right you don't click on the bomb"
6506800,6510320," and then um yeah we'll do everything else"
6510320,6516480," field add cursor it's probably defined down below"
6516480,6518560," add cursor"
6521520,6528080," okay okay"
6528080,6530960," i probably don't need to do that because it's an expression"
6530960,6539200," uh randomize 20 so we don't call it anywhere up there right so that's the only place where we call"
6539200,6541760," that okay so everything's fine let's try to play that"
6543840,6554800," ah okay i forgot that uh randomize sets the cursor here so i think maybe we should do that with resize"
6554800,6555840," let's do the process"
6558320,6571280," we need to close it yeah okay"
6571280,6577280," so this is still not ideal"
6577280,6581840," uh i think"
6585760,6591440," i think we should guarantee that you click on the empty cell with zero neighboring bombs"
6591440,6597360," that would be way better right that's what we need to do what do you think"
6597360,6605840," we need to guarantee that when you click you actually get like completely empty thing um somehow"
6610880,6619200," but that will actually require a little bit more sophisticated stuff right so field open at cursor"
6619200,6623600," where is that so we use that in"
6623600,6631920," a couple of places no it's not at cursors at cursor it's is at cursor"
6638480,6644160," i might be an idiot yeah feel the app okay yeah feel that cursor"
6644160,6652880," we can always just like"
6663920,6668800," essentially if the role falls into this region around the cursor"
6668800,6672800," we also ignore it"
6672800,6680800," at around cursor"
6687600,6699760," field it's good"
6699760,6707440," uh all right so this is rolling cone and we need to do the similar thing zero d column"
6709120,6718480," and integer and integer and then for d row minus one to one for d column minus one to one"
6718480,6720560," right and"
6720560,6726080," if field at cursor"
6726080,6727920," row"
6727920,6731600," plus d row"
6731600,6744560," if"
6744560,6744560," so"
6744560,6752560," if"
6752560,6757520," if"
6757520,6767840," my brain actually just for it okay field"
6767840,6774240," uh cursor row is equal to that"
6775920,6784960," it's actually something like this plus zero"
6784960,6787600," is equal to"
6787600,6790480," this thing"
6790480,6796400," yes that's probably what we want i was thinking why i can't use this thing because it's not the same"
6796400,6798800," right yeah i'm already getting tired so"
6800320,6801040," uh-huh"
6801040,6809840," column then if upon that we can instantly just return true i think this is how you can do that yeah"
6809840,6817520," and then field around the cursor is false right"
6817520,6818720," um"
6818720,6825760," round cursor okay so that should be fine now let's try to play that"
6826560,6834000," it's empty so we know that around we don't have any of these things okay so here we know for sure"
6834000,6836160," we don't have anything i can open this stuff"
6836160,6843280," uh so here i also don't have anything so here we have something right so this is definitely where"
6843280,6847840," we have that um so here we don't have anything i can continue playing"
6851440,6858160," okay cool so here we definitely have a mine so that means uh here we don't have it have it um"
6858160,6864160," this comes here so maybe there is mine in here so probably okay i'm gonna miss"
6864160,6870800," so as you can see i i can't really play anymore because i'm already done uh but yeah this is a minesweeper"
6871840,6882560," um okay so uh fair bomb generation i'm gonna push that right into the ripple"
6882560,6894560," um so isn't that cool everyone so we achieved the goal we implemented minesweeper in uh free pascal"
6894560,6901200," so that's actually pretty cool so there's this one so there's nothing in here"
6901200,6911200," okay so and if i click on that one i'll get this stuff"
6911200,6916800," uh another thing i want to implement"
6918480,6924960," oh man like how are we are we gonna implement the flags right so if i want to implement the flag how"
6924960,6934720," is exactly is it going to go um so maybe open should in fact be some sort of like um"
6934720,6946320," like a separate layer right so this thing can be either open close or flagged when it's flagged"
6946320,6953040," it's closed but it's just like uh shows the you know the the thing"
6953040,6966880," um"
6966880,6970400," all right"
6974560,6980240," because it would be kind of nice to have the flag but the problem is that i'm not sure how to call"
6980240,6988480," this thing yet so i kind of thinking about calling it fog all right uh and it can be open"
6988480,6997440," so initially it's it's closed open and flagged right"
7002240,7007200," but then i can call this folks uh how would you call that"
7007200,7011120," is like um"
7011120,7019520," shutter a good name for that that thing what do you guys think how would you call such thing"
7021600,7022640," like like i'm not really sure"
7022640,7022640," like i'm really sure"
7022640,7032640," all right so let's go through the compilationers"
7032640,7038480," um so fog is open uh okay"
7038480,7040720," open"
7040720,7044080," um"
7044080,7049360," state okay that's actually a good uh good name state"
7050720,7054960," yeah states and this is a state"
7054960,7061280," okay so this is states and this one is open"
7061280,7070320," uh state so open at cursor right you just do the open"
7075360,7086800," uh so here we open only the bombs states"
7086800,7088080," set length states"
7088080,7096000," states okay when we resize everything we actually keep them closed"
7098160,7104240," and that is it surprisingly okay so we get the field"
7104240,7110880," but if it's open we do that so here we have to do slightly different thing"
7113840,7116960," we should do field"
7116960,7119840," get state"
7119840,7123680," all right so get state"
7123680,7127120," um"
7127120,7127600," field"
7127600,7138320," and get state"
7138320,7143760," open so that means here we in fact can do keys keys"
7146000,7148080," of open"
7148080,7150960," all right so something like this"
7150960,7158480," so open then uh close and this is where we do that"
7158480,7161920," and then flag uh this is where we do that"
7161920,7164240," yeah there we go"
7167280,7170160," good enough good enough so here is the step"
7170160,7179760," wrong number closed"
7179760,7183200," uh flagged"
7183200,7187200," all right so now"
7189520,7191120," open at cursor"
7191120,7195440," field flag at cursor"
7195440,7198880," field"
7198880,7210480," do we want to do that no we don't really care so that means it's a procedure"
7213120,7213520," begin"
7213520,7219920," and then i'm going to take this thing"
7219920,7223760," oh it probably makes sense to"
7223760,7226800," check the state of this thing"
7226800,7227840," right"
7227840,7232320," if field state"
7232320,7236640," index is closed"
7236640,7242000," only then you can change it to flagged"
7243120,7244400," uh-huh"
7244400,7245840," okay"
7245840,7247040," case"
7247040,7249760," like this i think we want to do case"
7249760,7251600," if it's closed"
7251600,7254080," it becomes flagged"
7254080,7256720," if it's flagged"
7256720,7258720," it becomes closed"
7258720,7260720," if it's open"
7260720,7264160," it doesn't do anything so we just basically ignore that"
7264160,7266480," yeah so that's the only things we care about right"
7266480,7269440," so closed flag open don't do anything"
7272480,7273920," mm-hmm states"
7273920,7277120," all right and now"
7277120,7280560," if we press f"
7280560,7283840," if we press f"
7283840,7289840," field flag at cursor main field"
7289840,7292960," so that's what should we have"
7292960,7296560," okay"
7300800,7301760," i can't flag that"
7301760,7301760," i can't flag that"
7301760,7306480," all right that's cool"
7306480,7309120," and we'll probably have this thing in here"
7309120,7317440," so this is fine"
7317440,7320320," and we'll probably have something in here as well"
7320320,7321600," all right cool"
7321600,7326800," so we have a functionality that flags something and if i do something like this"
7327520,7328320," it shows you that"
7328320,7335520," i also really like that it just keeps the flags here as well"
7335520,7339840," okay that is that is cool that is super cool"
7339840,7345360," and now i'm going to commit the flag functionality flagging feature"
7345360,7347360," there we go"
7347360,7353680," cool an actual minesweeper the terminal minesweeper in pascal"
7354560,7358800," in two hours that's what we managed to do managed to implement that in two hours"
7358800,7362000," that's very cool so you can find the source code here"
7362000,7368320," right you can find it in here or in the description if you're watching uh watching on youtube"
7368320,7376720," so give it a star give it a like subscribe and yeah how everyone is doing so isn't it wasn't it cool"
7376720,7381840," i think it's actually pretty cool right so pascal is such an underrated language"
7381840,7387360," everyone hates it because everyone is forced to program it in school and universities and stuff like"
7387360,7391440," that but i think by itself it's not a bad language actually"
7391440,7395440," uh it's not a bad language"
7395440,7399280," so remember what's up what's up"
7399280,7408560," all right i guess that's it for today thanks everyone who's watching me right now i really"
7408560,7414640," appreciate that have a good one and i see you on the next stream how about you so maybe we should"
7414640,7417600," raise somebody we haven't rated anyone for quite some time already so"
7417600,7428560," is anyone programming in pascal right now is anyone on the science and it's not the science"
7428560,7434080," and technology but software development section who still uses that language except us right because"
7434080,7440880," we're already finishing the stream forcing we should rate forcing that's for sure"
7440880,7451840," so i have some of the channels that i follow so this call reverse engineering packers"
7451840,7457520," well reverse engineering sounds actually pretty good i don't remember who that is to be fact so i'm sorry"
7458400,7465360," so we're gonna read them but if i follow them that means they are a good streamer right so i usually"
7465360,7474720," follow people that i want to raid later at least i used to do that um raid i only wish the twitch was a"
7474720,7484240," little bit faster than this this school uh already okay so painful"
7484240,7492880," i put that in pause and it's still okay it still plays the video even though i paused it"
7492880,7497760," unbelievable anyway thanks everyone for watching uh love you"
7497760,7498800," unbelievable you"

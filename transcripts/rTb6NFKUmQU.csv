start,end,text
480,6320," looks like we're live hello everyone and welcome to yet another recreational programming session"
6320,11120," with the mr zodin about that but you don't expect that to happen so let's make a little bit of"
11120,17360," an announcement and officially start the stream red circle live on twitch and what are we doing"
17360,25360," today on twitch.a.tv website today we're doing post-apocalyptic software if that makes any sense"
25360,29840," so i'm gonna give the link to twitch.tv turning and i'm gonna ping everyone who's interested in being"
29840,37440," pinged and go the stream has officially started the stream has officially started so uh hello hello"
37440,42480," everyone welcome welcome welcome i can see people in the chat so on the previous stream we checked this"
42480,49840," a very interesting thing called uxian ecosystem which is a personal computing stack and essentially"
49840,56480," this is a very small virtual machine uh with different devices attached to it right and"
56480,61120," essentially you're writing software for that virtual machine in a special force-like language"
61120,67920," and uh so then you compile that uh you know your program written in that language into a rome that"
67920,74000," you can distribute around and stuff like that so and generally like i looked around the website and"
74720,83120," um so the software behind all of that has a very interesting philosophy of being um i suppose offline"
83120,91440," first and uh right so overall it's very interesting philosophy um and it gives me all these like post"
91440,97040," apocalyptic vibes which i really really like and that's why i call today's stream a post-apocalyptic"
97040,102240," software development so i think it's pretty much fitting it's pretty much fitting uh we wrote a very"
102240,108640," very simple like hello world like uh things in that uh in that programming language and i think the time"
108640,114960," has come to implement something more substantial something more complex and i was thinking that what"
114960,121520," could be more complex than hello world a very simple hello world probably uh you know a game of life"
121520,127840," right let's implement the game of life we know how to put graphics uh on the screen uh right we know how"
127840,134560," how to do loops and stuff like that right so let's just go ahead and uh ramp up the complexity of um"
134560,141040," of our challenges right so and after that maybe we can ramp up even more we'll see we'll see so um"
141040,147440," what's interesting is that the communication um for this entire thing is all over the place"
147440,156160," and kind of difficult to use and track things so what i tried to do off screen i tried to read the source"
156160,163760," code of this entire thing instead and it worked out better than reading documentation honestly like"
163760,169920," if you want to learn more about uxn don't read documentation maybe read like the first like hello"
169920,176960," world and stuff like that to get the idea but if you want to get a deeper understanding and more details"
176960,183120," just read the source code seriously just read the source code of the virtual machine itself of the you"
183120,190000," know barbaric system and stuff like that so it gives you more precise information because uh this is what"
190000,196000," the documentation lacks it kind of lacks the precision and you know systematicness like as already said it's all"
196000,200240," all over the place so you can find the source code of this thing here i'm going to copy paste it in the"
200240,205440," chat and for people on youtube it's going to be in the description of course uh right and let's go ahead"
205440,212400," and maybe i don't know clone this entire thing let's go ahead and clone it so i'm going to be just doing"
212400,216960," this i wonder what would be better i think it would be better to just use https protocol"
218400,230240," um so uh git clone and let's say go we're cloning this thing we are in fact a cloning so it is actually"
230240,239120," super small and uh it has just like a build sh script uh right so you can just run the build sh and"
239120,244960," it's going to build the entirety of the thing uh it's going to have the emulator and the assembler and"
244960,252640," everything uh and it even starts it even starts like a small like a boot rom automatically with a"
252640,259760," simple like small file manager and stuff it's it's really really cool uh right so you can like walk"
259760,266320," around but i don't know how to use the keyboard in here so uh what i can say right i can just use mouse"
266320,272560," and i can read things in here uh right so it has a small built-in text i think i can even yeah i can"
272560,278880," like go full screen and it like feels like a temple os or something it kind of feels like a temple os"
278880,284080," like i don't know how to use the keyboard there is some sort of like a shortcuts in here but i have no"
284080,290480," idea what is bl like i press bl it doesn't work it doesn't do anything so the whole thing doesn't really"
290480,296080," explain that well how to use it right so the mouse works uh the mouse works which is already great so the"
296080,302880," arrows work uh but enter doesn't work so i have no idea how to use this thing honestly right but if i"
302880,309600," just do something like this it seems to be working uh right so that's pretty cool so and that built"
309600,317360," uh all the necessary binaries that we already had and uh so the most interesting thing in here is probably"
317360,324960," the virtual machine itself it's uxnc uh and it's extremely simple actually it's extremely simple"
324960,333040," um right so here are all the opcodes uh and for all of these opcodes there are different macros that"
333040,340320," modify the state of the virtual machine i suppose uh so that's what they do anyways anyways anyways anyways"
340320,348000," so let's go ahead and try to like recreate the hello world again so to start something with uh"
348000,353120," right to start something with so this is going to be hello tal uh and i already have a highlighting"
353120,360080," for this entire thing i already have a highlighting so we need to take some devices to be"
360080,365920," fair you still kind of need documentation for at least devices right so because i want to have"
365920,372880," i want to be able to do console that so you know what i'm gonna actually copy paste the hello world"
372880,379520," from uh whatever we were doing in the previous stream so let me actually grab that so there was my stuff in"
379520,387040," there i do remember that quite well and there we go so here we basically laid out the you know the"
387040,394160," device thingy right so now we have a console and here we wrote a hello world so we can do something like"
394160,404880," that in here so if i now try to do bin uxian azim um hello tal hello rom uh that seems to be working"
404880,411040," that seems to be twerking and then bin uh uxian emulator so we don't really have to use emulators"
411040,418000," so as far as i know we can just do cli uh right so we can just do cli and it's basically an emulator"
418000,423440," without the event loop and without any of these things so if i want to just print something on the"
424240,429200," right on the screen i can just do that right so we can do try to do something more complex"
429200,435680," right so here we're just doing the loop i can of course factor out to something like this print text"
435680,445040," um so i think it's jump to r right so that's what it is so essentially when you call to this function"
445040,451200," it will put a return address to the return stack which is going to be two bytes right and to return out of"
451200,458560," that you have to jump to something that is on return stack and i also have to use the short mode uh you"
458560,463600," also have to do the short mode why there's only one person actually spamming in the chat so i have to put"
463600,470480," put like a subscriber mode um all right so let me let me see so i'm gonna factor out this and i think"
470480,476800," uh all right and uh there we go so this is going to be something like that"
476800,487680," so uh print text uh there we go and that should be basically it that should be basically it so let me try to"
488400,496720," um you know just do that there we go so what i've noticed is that's quite often something messes with"
496720,503040," my compilation mode right so and i think this is the uxn tile mode but let's not focus on that i don't"
503040,507760," think it's that important uh all right so that seems to be working so we managed to factor out hello world"
508320,514720," and uh we may try to just like repeat that several times let me try to put maybe like a zero on the"
514720,520720," stack so we're going to put we're going to keep the number at the top of the stack as sort of the counter"
520720,525840," uh right so it's going to be one byte counter it's going to be one byte counter so we're going to duplicate"
525840,532720," this and then i think and i suppose i just want to compare to um to some value let's say that we're"
532720,537600," going to do five iterations in here right so we're going to do five iterations and now i need to compare"
537600,548320," that this thing while this thing is sort of like uh less than um you know that that five we're going to"
549200,557680," let it fall through and perform one single iteration so let me take a look at the opcodes all right so"
557680,564960," maybe i'm going to even start using the virtual machine in here like uxnc um so i think there was"
564960,572400," something like a less than l yeah there we go so there is a less than and how does it even work okay so"
572400,581520," it's literally um t and n and i'm not even sure what is that are they popped out of this stack"
581520,591680," so there is this t which is a capital t and i okay so it is basically part of the state you know what"
591680,598160," you know what i need like a tags file chat chat i need a tags file because i want to be able to actually"
598160,606400," jump around in that virtual machine uh right so let me find all of the files all of the files from here"
606400,613040," right so um yeah there we go so here are all of the files of the source code and i'm gonna just feed them"
613040,619440," into e-tags right i'm gonna feed them into e-tags and that gives me the tags file so that gives me"
619440,630000," everything and um so let me let me see i'm gonna go back into the virtual machine and less than uh i"
630000,635280," should be able to do the following things so for example i'm gonna press on that it asks for the"
635280,643680," tags file and i can jump right here right so set x is basically this shift thingy i can go inside of"
643680,649840," shift and basically then go back you can jump around and figure out things which is kind of cool i think"
649840,657040," which is kind of cool uh so i still don't understand what is 2 minus 1 in this particular case it's uh x and"
657040,665280," y um right so maybe it's something about the offsets something about the offsets so the t itself i think"
665280,673600," it's a variable allocated here on the scope of the of the function right and suppose it's basically c89"
673600,678640," i think i think it's basically c89 because all the variables are no no not not all the variables at"
678640,683840," the beginning of the scope actually they are i mean at the beginning of the body so some of them are here"
683840,685120," and they're using tabs"
688160,694960," ready you're using tab i mean i don't judge i don't know anyways so"
694960,705600," i don't judge but oof oof oof oof uh so what do we have in here so t uh we already defined t so s"
705600,716080," you have data plus pointer uh right it's a data plus pointer and s i suppose is a global variable so it"
716080,726160," not necessarily has to be global variable it's um it's a stack s is a stack s is a stack s is a stack"
726160,734160," so that means t stands for the top of this stack it stands for the top of the step uh stack and n"
734160,740720," i suppose is something below the yeah there we go so here is the where data starts and here is the pointer"
740720,750560," so that's the top n is something below the top of the l is even lower x is even lower y is even lower"
750560,757840," z is even lower that's a very interesting convention minor friend t n l x y z"
757840,765600," okay so yeah maybe n is equal to next yeah maybe n is equal to next but what is l"
767040,773600," so i mean it's fine we figured it out it's so it's that that doesn't mean it's that cryptic"
773600,778480," so l is last okay why do we have x after l then"
778480,786640," so it's more last than last so what is x then"
788720,793920," because math moment yeah exactly i think that's because just like you know i think the names are"
793920,800640," kind of semi-arbitrary uh i think they are semi-arbitrary yeah it does feel like like hallucination"
800640,807120," like twitch gpt so it's funny how people quite often also hallucinate similar to to the language models"
808880,817040," uh similar to the language models um anyway um so oh yeah they even explain that right so there we go"
817040,826640," oh these are oh these are registers huh that's a very interesting yeah so they're sort of like a"
826640,834720," register so top five elements on the stack are kind of registers uh and oh that's pretty cool so this is"
834720,842160," also layouting of these things so when you refer to t2 you're referring to these two things and then"
842160,849120," yeah that's very cool like you see it's already more productive than reading documentation like chat i'm"
849120,858160," fucking telling you code is the best documentation code is the best code is the best documentation you can't"
858160,864480," argue with that it's been proven over and over and over and over again because it always"
864480,872720," explains precisely what it does and it never gets outdated it never gets outdated because if it does"
872720,881120," it doesn't compile so it forces you to update this thing code is the best documentation code is the best"
881120,891040," documentation all right so um less than so and here we have a top and here we have a thing below the top so"
891040,905680," that means we are comparing yeah we're comparing think oh that's actually interesting so um if i do less i think"
905680,912400," that means i'm actually doing that incorrectly if i'm doing less it's going to be comparing top"
912400,922880," uh yeah so this is going to be that uh this is going to be that and this is going to be that"
922880,928960," so it is going to no it's going to be fine it's going to be fine though i'm not really sure about the set"
928960,941040," two minus one so you do the shift uh and aha it's something about updating"
941040,953440," consume to aha maybe maybe that's what it is right so you basically explain the amount of bytes you consume"
953440,963840," and that kind of yeah huh but why is it minus three what is it minus three it has something to do with"
963840,971040," updating the stack yeah that's definitely has something to do with updating the stack anyway um"
976400,985120," all right so i think that means it is correct and um we just gonna do lth"
985120,994240," we're gonna do lth so if it is true we actually have to continue this thing so i suppose it's gonna"
994240,1002480," be negative is there something like uh great so i'm pretty sure there's a greater than uh but is there"
1002480,1011680," something like greater equal uh greater or equal uh greater or equal maybe not uh so this is not equal uh"
1011680,1023360," is there something like not maybe there is maybe there is there is nip the over equal"
1030000,1034720," i don't see i don't see i don't see that that's that's that's very interesting so there is some"
1034720,1045120," multiplication maybe there is an inversion no uh so is there something that inverts the bytes or maybe okay"
1045120,1048160," uh-huh"
1048160,1050640," so"
1055360,1063120," that's bizarre that's bizarre there's nothing that also inverts the bytes so the i don't see the"
1063120,1069280," inversion the negative is only not equals but maybe that's the limitations you have to deal with"
1069280,1077440," maybe that's the limitations you have to deal with and that's fine uh so you also do zor in here so this"
1077440,1078480," is the division"
1078480,1084240," uh this is the division"
1084240,1095040," but okay so you are uh zor with one technically yeah i see i see what you mean i see what you mean"
1095040,1103840," all right all right all right so we can do zor then so less than um and uh so we can do just can i just"
1103840,1116880," do something like this f funnily enough yeah um so you are and if it's greater or equal we probably want"
1116880,1127120," to basically skip right so this is going to be like over right so this is going to be like over and over is"
1127120,1135840," going to be located in here and i'm not even sure if um having like a relative uh label in here is"
1135840,1141280," generally a good idea right so without the main label so maybe i have to do something like on reset"
1141280,1149280," in here just in case um right so and after that so i suppose all of that stuff kind of consumes uh"
1149280,1156720," right and in here we're gonna just increment and um at the end in here we're gonna maybe jump to again"
1157280,1162720," and i suppose this is how you immediately jump right so this is how you immediately jump and this is"
1162720,1171520," basically the thing that we can do in here uh right so uh invalid token um zero in console"
1171520,1182160," invalid token zero in console and what uh well yeah yeah so this is what my experiments okay so that seems"
1182160,1190320," to be working and it doesn't really work at all which is rather weird honestly which is rather weird"
1190320,1202640," because um so is that the other way around so if i do gth uh no it doesn't work either so lth it doesn't work"
1202640,1215440," either so that's not what i wanted actually um so that is bizarre right so if it's yeah let's put it this"
1215440,1224960," way right if it's greater right because i'm thinking about this operation in the same order as it would be"
1224960,1235200," applied to uh to this thing so if it's greater uh greater i wanna basically be over so that means"
1235200,1241040," it's gonna be it's gonna be okay right so it's gonna be okay so let me double check the um you know"
1241040,1249120," the virtual machine let me double check the virtual machine gth uh right so top no it's not the same"
1249120,1257440," the same the same the same thing so we're applying the greater not to the top but to the thing that is"
1257440,1268720," below that is bizarre right so that means we have to do lth and that's is going to no it still doesn't"
1268720,1273200," work it doesn't even perform a single time and this one also doesn't perform a single yeah it does perform"
1273200,1282720," a single time so it is it is greater so if this thing is greater right um and that's basically"
1282720,1289280," performed five times right so if you want to do uh 10 times it is going to be like that so and then uh"
1289280,1294400," so i want to bring back the the new line in here so when we can literally see it's probably not 10"
1294400,1300640," actually it's actually 11 because we have that extra thing in there um all right so that means i want"
1300640,1307360," to do this thing which is not going to perform a single time uh and i want to invert it right so i"
1307360,1318000," want to invert it uh like so with a zor right so where do we have zor uh so e or r um so this is"
1318000,1324080," how we're going to and it doesn't work this idea of inverting it like that literally doesn't work"
1324640,1331920," and um i have no idea why right so why doesn't work"
1331920,1342880," because do i so if you have zor like zero and you zor in it with one you get one if you have one and"
1342880,1349200," you zor in it with one you get zero so that makes sense if i put a truth table in here so there's something"
1349200,1361200," weird is going on i don't quite understand um all right so let me repeat what is going on let me repeat"
1361200,1370000," what is going on so we have zero we duplicate it we have zero a uh so then we perform lth right so we"
1370000,1379840," we perform lth uh lth right which is literally checking the one that is below with this thing"
1379840,1388640," so that becomes true right so that becomes true which effectively um right turns it into a one i"
1388640,1394240," suppose right so i suppose it turns it into one this is at least what i see because you're assigning one"
1394880,1405920," two t right so that's what you do and then if it is true right if it is uh right then we're doing zor"
1405920,1414560," uh which is not entirely so that means uh what we have to do in here i suppose is just do that"
1414560,1421360," to actually invert it because instead of just doing that uh right so you should have not listened to the"
1421360,1428560," chat right so should have just like did everything myself all right so that is going to probably work"
1428560,1435440," all right there we go so that seems to be working and that uh all right is actually equal to exactly"
1435440,1442480," 10 so that seems to be okay that seems to be okay so we know how to do the loops we know how to iterate"
1442480,1454800," and everything so that's pretty cool um so um now what we so originally the virtual machine like"
1454800,1461280," directly is way more um efficient than reading documentation right so it's just like literally"
1461280,1469680," explains you how it works uh it literally explains you how it works uh now if we're going to be doing the"
1470640,1475840," um you know game of life if we're going to be doing the game of life we need to probably"
1475840,1483520," um so know the size of the area in which we're doing all that right so like how big of a size of"
1483520,1489920," the area it is um usually i like to know this kind of information at compile time right so i usually like"
1489920,1496160," to know at compile time so and as far as i know there there was some macros in the in the entire thing"
1496160,1502080," there was some market macros in the entire thing um so let me see so if i take a look at some of the"
1502080,1508480," examples if i take a look at some of the examples uh where are the examples i remember uh projects okay"
1508480,1520400," so examples demos um so there's a move i wonder if there is any macro so i know that macros start with"
1521040,1527040," uh dollar right so the macro start with the dollar let me just grab everything and just look for the"
1527040,1534240," dollar i don't remember if it's um uh okay so here what we have in here so here's what we have here so"
1534240,1539280," this is what i'm talking about right i want to be able to define things like width and height and"
1539280,1546240," everything right so i want to be able to do that and apparently you do that with the dollar um but how"
1546240,1553760," what exactly the macros do they're probably literally replaced with this value in here"
1553760,1558800," but we can try to confirm that actually because we have a source code of the assembler itself in here"
1558800,1567920," right so here is an assembler uh right so an assembler what it does uh it's actually pretty simple"
1567920,1574320," all right so it opens the file right and then it assembles the file okay so when it assembles the file"
1574320,1580560," it copies on reset into the scope right so on reset is sort of like a thing that is automatically"
1580560,1587920," existing there so then it scans a word checks that the word is not bigger it's kind of funny how the"
1587920,1594240," entire project always use a hexadecimal and quite rarely uses decimal uh that's what's interesting about"
1594240,1599680," this is just like primarily hexadecimal so slen is basically a sterlian right nothing particular"
1599680,1604960," special it's a custom slen doesn't even use anything from standard library okay so it uses at least input"
1604960,1611440," uh right so then we do the parts right and we're just looking at what it is do you have the case for"
1611440,1618320," the yeah there we go so this is the macro and we're just doing the macro when you're doing the macro"
1618320,1626240," you just check for the duplicates then i don't know what that is what is that um so while you iterate"
1626240,1633520," through this thing and if it's not alpha numeric oh string is hexadecimal you just check whether this"
1633520,1642000," thing is hexadecimal if it's a hexadecimal and the length is divisible but okay that's it's kind of"
1642000,1651280," interesting oh right so hexadecimal has a so this is a criteria of a hexadecimal it's a thing that"
1651280,1658080," consists of the hexadecimal digits and the length of that thing is divisible by two that's what it is"
1658080,1665280," apparently right because of the each character represents a nibble uh okay that's probably why by the"
1665280,1674560," the way the the mode um so there is a rule 110 that's this kind of um yeah it's that's a rule what"
1674560,1680880," so you also probably have a game of life then right so because rule 1 1 0 is basically game of life but"
1680880,1688400," one-dimensional but not really but i mean uh right so hello so that's probably why when i do something yeah"
1688400,1700240," there we go uh okay uh emacs so what's funny is that according to that tokenizer at least for the macros"
1700240,1707600," this should have been recognized as um as a hexadecimal number but emacs didn't recognize it"
1707600,1714560," the hexadecimal uh that's kind of funny maybe maybe it's only for for the macros but yeah generally so"
1715360,1723600," then what's the next thing we do so macroname is invalid it's one of the opcodes or smp brk brk"
1723600,1730640," is not an opcode is not one of the opcodes at least internally right internally it's not considered to be"
1730640,1739440," opcode oh probably because like the usual modes of you know short mode return keep are not applicable to"
1739440,1744560," that thing that's probably why so macro limit is exceeded so then you do macro and then you"
1744560,1751120," okay and then you basically iterate through rest of the tokens until you encounter the closing curly"
1751120,1759600," right so first you encounter the curly you basically skip it then you uh you go until you encounter um you"
1759600,1769280," know everything and you just basically append the tokens into the macro you just append the tokens into the macro"
1769280,1775680," all right so that's pretty cool uh and of course you can't define macros within the macros right so"
1775680,1781680," there's also uh like limitation and everything it's kind of interesting how okay so what is m"
1782320,1789120," m is a macro so let me take a look at the definition of the macro uh yeah it's funny how there's not a"
1789120,1796720," single malloc or free in here all of the arrays are static and everything has a size limitation"
1796720,1802400," so which actually simplifies the memory management which is kind of cool all right so it definitely"
1802400,1810560," simplifies the you know the memory management okay so there you go i didn't have to read an article about"
1810560,1815200," macro system of this language i just looked at the source code and now i understand how it works"
1815200,1821680," so the macro is basically like a single word uh that gets replaced with a sequence of tokens and it's"
1821680,1828320," literally what it's written in the source code again uh source code is the best documentation uh source code is"
1828320,1836080," the better condition um all right so let me see what we want to have uh right so we're going to have"
1836080,1840080," width all right so this is going to be the width and we're going to define width as what so i don't"
1840080,1846400," even have to do these hashes i honestly don't really understand what's the point of these hashes so they're"
1846400,1853200," supposed to be sort of like immediate something we can read it in source code like why am i even asking"
1853200,1857680," this kind of question let's just freaking read it in the source code right so what's up with that what's"
1857680,1866160," up with that okay so hex literal uh so if uh hex literal plus one um right if we think after that"
1866160,1876960," write lit byte so you just write a literal byte uh right if it's bigger you write short so is there"
1876960,1884880," any difference between something like this and something like this is there any difference we can find that"
1884880,1891280," out actually we can find it out so we know that um so to write a literal byte this is the function that"
1891280,1899440," you use right and then let's actually go down where yeah there we go there's literally no difference"
1899440,1904320," between them according to the code if i understood code correctly there is literally no difference between"
1904320,1911280," writing something like this and something like this can your documentation do that can you look at the"
1911280,1917200," documentation written by a human uh right and tell me this kind of stuff well i mean if it's literally"
1917200,1924560," written in the condition but in the code it is always up to date right because otherwise it's not going to"
1924560,1930720," compile it's not going to work code is the best documentation i'm telling you i'm freaking telling you"
1930720,1940480," okay okay um there is a difference using the hash rune adds lead up code preceding by short let me see"
1940480,1943680," um do i see that in the source code"
1943680,1957200," um yeah so there is a lead byte uh and if i just look at that there is no lead byte okay i see"
1957920,1963520," so the question is what is a lead byte code all right so what is a little right lead"
1963520,1971120," byte code so find up uh you know up byte code uh so one of them"
1971120,1980160," so maybe does it have a special meaning in the uh in the virtual yeah there is a special meaning here"
1981200,1994800," so what do we do so in case of a lead so we do shift um so we update pointer by one and"
1994800,2001600," just read something from the documentation from the ram"
2004080,2010800," uh that's very interesting that's very interesting that's very interesting so yeah"
2010800,2020240," all right so we'll figure it out a little bit better uh anyways so let me let me see i'm closing the chat"
2020240,2027120," um right now uh so what do we got maybe in this specific case"
2028560,2034480," um but to be fair if i take a look at the rule 110 they're using this thing right so they're using"
2034480,2043120," this thing so that means it's probably fine for me to use it here as well so um now so this is width"
2043120,2050800," and for the width i don't want to actually exceed one byte uh so let's say that we're going to have uh"
2050800,2055760," something like 10 right so this is going to be width and maybe the height is going to be the same right"
2055760,2062720," so the height is going to be roughly the same uh so when i'm using the width do i use the width"
2062720,2068880," similarly or do i just like use width directly as a word which is not even used anywhere in here"
2068880,2074560," throughout the thing really cool"
2077600,2085520," okay so what is used in here to mode do you even use okay so do you do you even use any of the macros"
2085520,2087120," you defined anywhere in here"
2087120,2098400," wait why there is so many macros defined in here none of them used okay this is how you use them jesus"
2098400,2104000," jesus brov jesus but why there is width but width is never used"
2104000,2111040," it's never used what's the point of defining it if you never use it that is bizarre my friend that is"
2111040,2115520," bizarre all right so but we're going to be using it we're going to be using it anyways"
2117360,2128640," um so i suppose what we want to have is in fact uh an ability to define all these things"
2128640,2133520," damn that kind of makes it a little bit difficult to define for instance if i"
2133520,2141120," want to allocate a board right so for instance i say i have a board and i want to allocate the size of the"
2141120,2147680," boards so essentially if i have 10 by 10 i have to allocate like 100 of them uh and by the way uh are"
2147680,2155040," the um things that are in a dollar are they also hexadecimal i can always check it out in the assembler"
2155040,2160320," that's what's cool about it right so let's actually check it out uh so yeah they are hexadecimal i can"
2160320,2169040," already instantly see that i can already instantly see that so uh oh what that is very interesting so"
2169680,2176400," if the if this thing starts with dollar and it's hexadecimal is just like the usual padding but if"
2176400,2184240," the next character in the token is on percent you can literally put sub labels in there you can put"
2184240,2192080," sub labels in there huh that is very interesting is that even written in any of the documentations"
2192080,2197600," this is a uh you know this is an easter egg that the developers don't want you to know they don't want"
2197600,2203200," you to know that right so you can only find the documentation in the uh this kind of stuff in the"
2203200,2213120," in the code so uh thank you so much ruby and see 40 months a question lead a bite lead bite indeed"
2213120,2224000," uh lead bite indeed uh so what are we are going to have so here's the thing right so i want to be able to"
2224000,2232000," define width and height and then i want to be able to say right okay so pad all of that with width"
2232000,2239840," and height multiply it together but i won't be able to do that because the well i mean uh this is"
2239840,2245360," probably how i have to do that right so there's probably no compile time evaluation not even like"
2246720,2253200," know any form of compile time evaluation right so there is a way to assign a sequence of tokens to"
2253200,2259840," one token and it's going to get expanded um because i think that's the entirety of the macros at least in"
2259840,2266400," the in the source code i don't see anything else right if you take a look at the macro uh right if"
2266400,2272640," you take a look at the macro it's just literally appending the uh the tokens right so it's not particularly"
2272640,2279680," fancy uh so there is a name and there's some items but this one is interesting actually so there's a"
2279680,2287680," it's a two-dimensional right though it's a two-dimensional one um so that means in the items"
2287680,2293040," ah i see it's two-dimensional because it's a like a string yeah yeah so it's a"
2293040,2299040," array of strings right so array strings and and how much is that by the way how much is that"
2299040,2306240," so it's 64. yeah not not not much right so essentially it's very much limited but that's"
2306240,2314560," how you're supposed to sort of like train your creativity right so what you impose limitations"
2314560,2320480," on yourself and that sort of like uh forces you to come up with more creative solutions that's that's"
2320480,2326560," cool uh that's cool that's cool that's cool so and yeah so that that is not going to work"
2326560,2333760," that is definitely not going to work uh but i wish it kind of worked um so i wonder if i can"
2333760,2340720," um do something wait a second i remember there was a calculator"
2340720,2348880," there was a project calculator in there somewhere and it was all hexadecimal i think i'm starting to"
2348880,2356560," understand why because everything in the project is kind of like in hexadecimal and like it's nice to"
2356560,2364160," have a calculator that just helps you with all of that right so i can do uxian emulator calc rom uh"
2364160,2371600," right so there we go but it's i'm not really sure how to use that uh so if i want to have uh like a"
2372400,2385440," uh multiplied by a uh and where is equal i can't can't see equal plus minus that there is no equal"
2389840,2401840," uh there is no equal i don't know how to use that uh so yep too bad too bad they didn't add the equal"
2401840,2408400," button unfortunately uh so anyway uh what i want you to do uh i want you to take 100 which is 10"
2408400,2416240," multiplied by 10 and take a look at the hexadecimal uh so this is going to be basically 64 right so and the"
2416240,2421040," macro system doesn't really allow me to easily do that so maybe that's why uh it's not particularly"
2421040,2426240," used in that case but i mean that that's not really fine so and essentially we just pre-allocated the"
2426240,2432800," border the board um i'm not even sure if i had to do this kind of stuff like that right so because"
2432800,2438800," maybe i just have all of the memory available to me um like right after the execution but if i'm going"
2438800,2445920," to be adding something afterwards um i think i definitely need to have this sort of thing so i think"
2445920,2460480," that's totally fine i think that is totally fine um so interestingly uh i remember uh i remember there"
2460480,2473120," in the language there were so-called lambdas uh let me find them let me find them so so uxn design"
2475040,2481760," uh lambdas it's kind of difficult to find anything in the documentation because it's just a bunch of"
2481760,2487200," fractured articles and sometimes you just want to have like a list of all of them but"
2487200,2492960," it's it's it's weird honestly like it's difficult to find anything so i'm going to actually stick to"
2492960,2501040," the just source code but there were lambdas and as far as i know lambdas are just curly braces right so"
2501040,2509520," they're here they are so this is a make reference um so let me find the parse so where is the parse function"
2509520,2513920," so if you have curly it's not going to start in curly that's weird"
2518160,2528240," let me let me okay so this is in a map in a macro and this is in the reference all right so there's a"
2528240,2535600," macro reference and there is a bunch of reference no i still need to find that so there's a syntax does it"
2535600,2542560," refer to that okay so here are the lambdas okay they're fine you found it um right so the interesting"
2542560,2548560," thing about lambdas is that they sort of like define a block of code right they sort of define a block of"
2548560,2559440," code and they push um the address to that block of code onto the return stack uh right so they push it"
2559440,2566560," onto the return stack so which means you can kind of define functions right away but another interesting"
2566560,2573280," thing is that you can jump to that thing right so you can define block of code and jump to it and if"
2573280,2581120," you don't jump to it it will just skip it so uh let me let me see i think we should be able to"
2581120,2592960," even rewrite this entire thing um so if this thing um is going to be true it will fall through so that means"
2592960,2598560," we don't really even have to do something like that right we can just check for the condition"
2598560,2603920," right and if that condition is true if that condition is true it's going to fall through"
2603920,2611520," then do the thing and then uh it's going to work hopefully uh so let me try to run this entire thing"
2611520,2619520," and uh no it didn't work do i still need to uh have the inversion right do i still need to have the"
2619520,2626720," inversion yeah i still have need to have the inversions basically um it calls that thing if it is true"
2626720,2634480," so it's a bit confusing but that's fine so that seems to be working um all right"
2640080,2647200," so uh i would like to maybe make a small break i would like to make maybe make a small break and"
2647200,2651440," make a cup of tea so yeah let's make a break and then uh after i make a cup of tea we're going to"
2651440,2657920," continue so we already managed to allocate the boards right uh we kind of understand how to do loops so"
2657920,2663920," maybe we can try to print that board right because here is like a one-dimensional loop but i want to be"
2663920,2671120," able to um to think about that chunk of memory as a two-dimensional thing right so i need to a way to"
2671120,2678640," address uh like a two-dimensional stuff so we'll see how we can do that um okay so let's go ahead"
2678640,2686400," and try to maybe you know iterate through all of these things so we we have the board 10 by 10 right so"
2686400,2694880," we have the board 10 and that raises the question how can we even do uh the nested thing right how can"
2694880,2704080," we do the nested things um so we can think of it this way right so i have one sort of iterator"
2704080,2710720," right i have one iterator and um so i'm checking it like once per iteration and then i have a second"
2710720,2716160," iterator that i also check once per iteration i can even maybe duplicate it like that sure"
2716880,2722560," uh i can quite easily that's bizarre what is going on is that because of the"
2722560,2729760," just a second a tab sneaked in"
2729760,2733120," a tab"
2740160,2745920," you're trying to start the fight or anything but this is my code okay this is my code i do whatever i"
2745920,2754720," want in my code you can do whatever you want in your code okay uh you can do whatever you want so um now"
2754720,2759760," let's do this thing"
2759760,2769520," we have this nested stuff and that is going to work so that means effectively effectively we have"
2770160,2777440," two bytes on top of the stack but then at some point i want to be able to i want to be able to"
2777440,2785760," maybe transform these two uh like two indices into one in this index if you know what i mean we can try to"
2785760,2790080," do the following thing i can just do dupe two"
2790080,2799040," i think i think i got it did i get it i think i got it so uh let me let me let me try to do the"
2799040,2806320," following thing so you have two indices like uh maybe row and column let's call them row in column so which"
2806320,2811600," you're writing rolling which you're writing the column i just duped those things i just duped those"
2811600,2817600," things and the next thing i need to do i need to kind of multiply a row by the size of the row so to"
2817600,2824480," do that i probably have to have to swap them right so what if i swap them there's no such thing as swap"
2824480,2832560," is that okay there's svp so i do svp then i'm going to push the size of the row which is a i should probably"
2832560,2840720," use like this kind of thing but anyway so i push 10 and then i'm going to be doing multiplication"
2840720,2846480," multiplication does in fact exist look at that so i do multiplication that just pushes that thing in"
2846480,2854320," here and then i do add okay there is add and that adds these two things together i've got an index"
2854320,2858800," an index in here by which i can finally address things"
2862320,2871600," did i master concatenated languages are you impressed i still can't do that all of that in my head so i"
2871600,2877280," suppose people who program in concatenated languages all the time they can they can kind of do that in"
2877280,2883680," their head they can simulate this stack in their head i remember being able to do that when i was"
2883680,2889600," developing ports but i i have not developed port for quite some time so i think i lost my ability to"
2889600,2897040," simulate the stack in my head so so the more you do concatenated languages like the more you develop that"
2897040,2899200," stack simulator in your brain"
2899200,2905440," the cat line community is impressed thank you thank you so much"
2905440,2916240," uh so this is an index but that index is simply an offset it is simply an offset so what i need to do i need to"
2916240,2925680," now uh basically add that offset to the board i need to add that offset to the board um so but this is a"
2925680,2934160," one byte of sets right so we can kind of say that this is like one byte uh this is another byte uh this is"
2934160,2940560," another byte and this is another byte so if i try to do something like a board"
2943360,2953040," this thing is going to be actually two bytes at the 64 16 right so it's going to be two bytes so i won't"
2953040,2960000," be able to just add the thing like that right so add two probably operates on two bytes and so on and so"
2960000,2971280," forth right which raises the question so we need an extra zero in here right we we need an extra zero in here"
2971360,2985840," um so and that zero so the ndns is big end in here right so that means yeah so we need to put zero somewhere"
2985840,2990000," here uh we need to put zero somewhere here uh we need to put zero somewhere here"
2993200,3002560," okay so let me let me let me let me maybe think oh maybe by the way maybe i'm kind of over complicating"
3002560,3014560," this step maybe because maybe i could have just kept a general uh a pointer a general pointer somewhere"
3014560,3023680," here um now that would be actually easier to do it like that so this is the board uh so let me take a"
3023680,3032640," look at what kind of ads we have so where is the uxn uh machine where is the ad so there's add two and"
3032640,3044080," yeah so we literally just work with these two things um where is my code i can see code um i duplicated"
3044080,3054240," these two stuff but now like i want to be able to put zero here i want to be able to put zero here but"
3054240,3063360," duplicate is kind of like not going to duplicate the right thing or wait wait wait wait chat wait"
3068080,3081040," can i just zero swap"
3081040,3095680," i think by the way i i think i just killed something very important yeah yeah so yeah so essentially so dupe2"
3097200,3111120," um then i swap multiply add so we've got that uh and then i put zero swap yeah i put zero swap so that"
3111120,3123840," gives me that uh and then uh i'm going to do board i do have a feeling uh i do have a feeling that i'm"
3123840,3131360," over complicating a little bit but that's fine uh so and then we do add to so maybe i don't know how"
3131360,3139920," to split them well but uh essentially i get an address from which then i can read uh from which i then"
3139920,3146320," i can read so again i have row and column on the stack so the top of the stack is actually the right"
3146320,3154640," right so this is the right uh i dupe to them i dupe to them then i swap them so i have a row in here i"
3154640,3164000," have zero a then i multiply it like that right then i multiply it like that then i add this entire thing"
3164000,3171680," like that and that effectively is an index right this is an index and it's a one byte index then i put"
3172320,3180480," zero in here i swap it around i swap it around so that becomes an offset you can think about it"
3180480,3190320," an offset u16 then i put board which is u16 i add them together i add them together so now i have a board"
3190320,3195120," plus offset right i have a board plus offset"
3195120,3203040," and essentially now i have to just read it does that make any sense does that make any sense i think"
3203040,3218720," that's basically what i want to do yes yes yes yes uh and now um how do i read that so i suppose it's a"
3218720,3232400," ld something ld's not i really like this instruction ld's uh ld load r so i suppose ldz is from the"
3233040,3244480," um uh it's at the beginning right so this is ram uh and then ld r"
3244480,3259200," we're still listening to music chat why nobody told me that i'm still listening to the music i'm gonna get"
3259200,3269680," the dmca god damn it the music was nice okay well i mean of course it is nice because somebody actually"
3269680,3276960," spent time and effort uh and they're not gonna get paid for that so i'm gonna get dmca strike"
3280160,3286240," uh oh no he found so you knew you knew that the music was playing and you didn't tell me"
3286240,3294160," god damn it"
3294160,3296400," how do you read one bite"
3296400,3305440," uh so i i think the time has come to to go and just read the computation of codes and stuff like that"
3306080,3320320," um so in the hello world we already have okay so we do lda uh right uh and that thing is already"
3320320,3328160," uh is already two bytes so that means yeah that's what we want to do we want to do lda"
3328880,3338320," that gives us one byte that gives us one byte byte and we manage to read that furthermore now we can"
3338320,3347840," factor it out we can factor it out to maybe um a separate word if you know what i'm talking about"
3347840,3354160," we can factor this entire thing out to a separate word something like uh board get and we can say that"
3354160,3356960," uh row column uh cell"
3356960,3368080," i feel like a real fourth developer oh my god is it that the philosophy of fourth development because i"
3368080,3375440," remember watching some like a very like you know philosophical video by a fourth developer on youtube"
3375440,3382160," and they were saying that the point is that you'd write the code that manipulates the stack and then you"
3382160,3389040," realize that you saw a pattern and you can factor it out into a separate word and that's how you build"
3389040,3395760," up the dictionary and then once you build up the dictionary you write your code like your poem"
3395760,3402960," is that what it feels to be a fourth developer you're not writing code you're writing"
3402960,3414560," that's what you do uh i guess i don't know i'm not the first developer unfortunately i just know a little"
3414560,3420720," bit about concatenative languages i wrote one not the best one i can show you what kind of concatenative"
3420720,3431760," language i wrote so forth um so what do we have uh literally this one oh yeah so does it look like a"
3431760,3438160," concatenative language i already forgot how to use this language honestly but yeah uh so this is basically"
3438160,3448240," how it looks like um i can find proc or main yeah there we go so this is how it looks like so this is my"
3448240,3455680," concatenative language you would literally allocate memory like this that's a very interesting one so you have"
3455680,3463280," while loops and everything that's a that's a pretty cool one it's by the way it's written in itself it's"
3463280,3468080," itself hosted right itself it's written in itself um"
3468080,3478960," so you try to compile it uh with itself and you get an assembly file that looks like this right so you get a"
3478960,3485920," a bunch of assembly and it is equal to the executable that you just run so it's self-hosted like this"
3485920,3494000," anyway so uh i kind of stopped developing a long time long time ago i basically considered it an"
3494000,3501760," exercise in like how to write self-hosted languages it's it was actually very educational exercise i"
3503280,3513680," it literally helped me to understand and internalize the thompson's hack uh right so thompson"
3515600,3523840," uh i hope i pronounced it i think it's thompson i don't remember uh hack right so the basically"
3523840,3535120," the piece of code right that persists across the compiler so essentially you have a compiler that has"
3535120,3540720," a piece of code embedded into it right so maybe it could be like a malicious piece of code some sort of a"
3540720,3545600," virus right and you have the source code of that compiler but source code of the compiler does not"
3545600,3552480," contain that malicious piece of code you take your compiler you compile the source code of your compiler"
3552480,3558240," it produces an executable and the that malicious piece of code copies itself to the next"
3558240,3564400," instance of that compiler even though that malicious piece of code never was written in the original source"
3564400,3571440," code so you have a malicious piece of code that persists even though in the source code it's never"
3571440,3578240," present just because it's present in the original executable and by implementing a soft self-hosted"
3578240,3586240," compiler i understood how it could be technically implemented like without trying to implement uh your"
3586240,3591680," own self-hosting compiler you won't even understand like how exactly to pull that off but now i understand"
3591680,3597680," it and it's actually super cool uh this is something that he understood when he was writing like c compiler"
3597680,3607680," i suppose uh right so for anyone who's interested to like let me put it somewhere here the thompson's hack"
3607680,3617120," anyways so we have a board get and uh so that means i can just do it like that uh all right so i can just do it"
3617120,3628240," like that and in here i'm supposed to do jump to r right so essentially when i call uh board get when i"
3628240,3638160," call board get um it jumps here but it saves the return address on the return stack so that means i have to"
3638160,3645120," return in here so okay that's cool that is pretty cool so i also have to do increment in here"
3645120,3653360," uh huh and this is where it becomes very interesting so at the end at the end i have a column right i have"
3653360,3666240," a column that i probably wanna uh right so i should not forget to do it in here and okay so yeah this is"
3666240,3673360," where we're starting to um to get a very interesting thing so we can actually give it some sort of a name"
3673360,3684480," uh columns right so this is a columns and this is rows yeah that's not bad actually that's not bad uh so"
3684480,3697840," increment right so we have a two-dimensional loop uh which is probably extremely unnecessary if you think"
3697840,3703040," about it it's probably unnecessary and the only reason i'm writing that nested two-dimensional loop"
3703040,3709840," is because i'm still thinking like i'm using mental model of c right because that's what they would do in c"
3711520,3715760," so if i spend a little bit more time with this language i will probably come up with something"
3715760,3721760," more simpler right so but my brain right now just refuses to come up with anything anything simpler"
3724400,3733920," unfortunately unfortunately unfortunately um okay so we get this thing and the question is um"
3733920,3744960," what can what can we do about that uh we can maybe um print cell right so let's actually have something"
3744960,3753120," like this uh print cell so we're going to be accepting the cell and it's going to simply print a character"
3753120,3759200," for that cell uh right it's simply going to print a character for that cell and it the question is"
3759200,3765920," what is it going to be so the cell if the cell is"
3767760,3777600," zero all right if the cell is zero it's probably going to oh this one is cool by the way"
3777600,3786560," so this thing just jumps to the lambda but it doesn't update the return stack that's a very"
3786560,3793040," interesting question i think it doesn't update the return stack i think it doesn't but we can look at how"
3793040,3804960," the yeah it should probably do that um so if this thing is true we're simply going to print uh maybe"
3804960,3814400," star let's print a star uh so asking what's the star maybe there's some way to have uh like a character"
3814400,3828240," literals so do we have no we don't i was thinking maybe there is wait i know what i can do i know what"
3828240,3840720," i can do mind i know what i can do uh i can do something like this yeah wait a second i could never understand"
3841360,3853120," what the hell is lit opcode let me take a look at the at the virtual machine so we have a lit right"
3853120,3859840," so you have a lit and what should do you basically"
3864480,3872640," so you take an instruction but you already incremented the counter so whatever you're looking at right"
3872640,3883120," now uh in ram is already the next byte so essentially it pushes the next byte no matter what it is"
3883120,3892320," i remember reading somewhere in the documentation of uxian that um basically any value"
3893760,3905760," um not really any value but some bytes some bytes uh in in a byte code may be accidentally interpreted"
3905760,3916320," as opcodes which may result in some sort of like effects so essentially lit is needed to make sure"
3916320,3920400," that you push in a byte and it's not going to be interpreted as opcode"
3923040,3930960," delete or hash puts it on the stack uh while just zero simply puts that byte there in okay okay i think"
3930960,3938800," i get it right so essentially if you just put that by there it may be a valid opcode right which doesn't"
3938800,3945840," mean that you push that thing onto the stack right so maybe you just want to write that up code in fact"
3946720,3954320," you can probably program directly like this right if you know all of the opcodes right if you know all"
3954320,3962000," of the opcodes you can probably program directly like this and it's uh just yeah uh you can do that"
3962000,3969200," right so that makes a lot of sense right so that makes all the sense and i suppose if you"
3970720,3978320," let me take a look at the uxian assemble right so let me take a look at the uxian assemble um so yeah"
3978320,3988240," you okay you're writing just the bytes without delete so that means if i really want to push like a"
3988240,3995680," you know a character if i really want to push like a character uh i have to do it like that so this is not"
3995680,4003280," really going to cut it right because it may be interpreted as an opcode that makes all the sense"
4003280,4008720," yeah that makes a lot of sense like having source code again like i'm sorry that i keep repeating"
4008720,4015520," myself but like this is just like a perfect example on uh on everything i keep saying right why source code"
4015520,4019680," is the best documentation just because you can figure out things like that from the source code"
4021600,4027680," i know that it looks cryptic but to that i can only answer a skill issue just learn how to read c"
4027680,4033840," oh cheers by the way"
4033840,4046720," all right so and how do i put stuff into la console okay this is how we do that"
4047680,4054160," uh this is how i do this so i can do something like that uh and then i can actually yeah i can"
4054160,4061920," actually do something like this like return right away or if it was in fact zero okay can i put space"
4061920,4063040," how do i do space"
4063040,4065440," okay"
4065440,4072000," so ascii ascii ascii ascii ascii"
4074080,4082320," so what's the hex hex is 20 thank you so much ascii man page like it's kind of weird"
4082320,4085760," that there's literally man page for ascii"
4085760,4092400," isn't that cool right so every time you need to like look up ascii codes you can just do man ascii"
4092400,4098000," and just like there you go here's the page of ascii things it's pretty cool okay i learned that from"
4098640,4107760," dennis clark uh aka uh last miles on on twitch right so i never knew about that before i watched"
4107760,4115600," his streams right so it's actually super cool um i made my own ascii app before knowing that there"
4115600,4118000," was a man page for ascii yeah it's kind of interesting"
4121760,4127120," and what's funny is that it's probably my most visited man page believe it or not"
4127120,4134800," so the most visited the second most visited is probably um f right because i can never freaking"
4134800,4140160," remember the order of the arguments of these things like i can never remember like what in what's the"
4140160,4145200," size of the element and what's the amount of element like in which order they are so i always have to look"
4145200,4153600," up uh this kind of thing so the the first is asking the second one is if right afraid always consult"
4153600,4160880," on those main pages always consulting them um all right so uh we just put it like okay okay i can do"
4160880,4171200," it like this and then uh yeah i don't have to do the second thing but um so i suppose that's how we're"
4171200,4180800," going to be doing all that uh and that's potentially uh may actually print what i want except not uh i"
4180800,4186240," want to be able to also print the new line so at the end of this entire thing let's actually say new"
4186240,4195760," line right so this is going to be new line and um let's call it maybe break line so this is a break line"
4196320,4202560," and it doesn't have any effects whatsoever on the stack uh and in here we're going to have a new line"
4202560,4214480," uh so slash um it's supposed to be 10 or something right so yeah boy yeah boy zero a"
4214480,4223120," okay i'm a little bit scared i feel like it may not work but maybe it will work look at that it's"
4223120,4228080," it's actually growing right so it's a serious problem right it's actually a serious problem"
4228080,4236240," and this kind of stuff by the way this could be a macro actually if you think about it right yeah it's"
4236240,4242880," kind of some things could be it could be functions some things could be macros"
4244880,4253440," but if you're using macros instead of functions and you call to that macro like too much the size"
4253440,4262240," of your executable is going to be growing very very quickly so something to to worry about i suppose"
4262240,4270320," so and the size of the executable by the way for this specific platform is important right so because"
4270320,4279200," you have a limitation of memory this is so cool right so you really want to be aware"
4279200,4286000," how much code you're writing because if you're making a thing too complex you may not even fit into"
4286000,4291680," the limitation the into the memory limitation so you have to be super careful you have to be aware of that"
4291680,4298400," it reminds me of the of the challenge that i did where i was trying to write a game in in the mbr"
4298400,4306880," bootloader 512 bytes pin pog honestly uh pin pog i'm gonna give you the link so it was such a cool"
4306880,4316160," challenge because that's the that's the challenge that completely um completely changed my perspective on"
4316160,4324000," programming honestly uh right so i would even say that i can divide my uh programming journey"
4324000,4331040," into two phases before i tried implementing pin pog and after i tried to implement pin pog once i"
4331040,4338000," implemented i i can i can quite confidently say that i came out as a different person five years five years"
4338000,4346480," ago i became a completely different person because uh this challenge imposed like a seemingly impossible"
4346480,4357200," limitation on me and then i realized that i can do so much in 512 bytes like i never realized until i"
4357200,4364960," actually imposed that limitation on myself like oh my god so i just realized that how many interesting"
4364960,4372240," things i can do with these memory limitations and i basically woke up to realization how much"
4372240,4381200," blow there is around me like it's just like if this is enough to implement this much what i can do with"
4381200,4391440," more how much computing where it's it's insane so it this challenge literally changed me yeah so maybe after"
4391440,4397520," this challenge i became such a simplicity junkie because i really oh my god how much like you know"
4397520,4403760," resources we're wasting i can do so much in such a little amount of like space it's like it's insane"
4403760,4406000," like i wrote an entire game that looks like this"
4406000,4411120," it has a kebab mechanics so"
4414400,4418080," i came up with that myself because i was too lazy to check for the collisions"
4418080,4423840," so if you you get points if you actually you know skewer it"
4423840,4431760," uh so yeah if anyone is interested so let me did we copy paste the yeah i already copy pasted so i'm"
4431760,4437520," going to put that in the description for for youtube people if anyone is going to be watching uh on youtube"
4437520,4443280," probably we'll see we'll see we'll see but anyway so i'm actually procrastinated because i'm afraid"
4443280,4452560," uh to run this thing uh i'm afraid to run this thing first try uh first try so we have unused things"
4452560,4458880," uh it's kind of interesting is that maybe on reset is not really necessary to be fair"
4459600,4466240," maybe i really like this notations for vectors honestly right it kind of reminds me of"
4466240,4470720," notation in rust where you have like a function"
4470720,4479760," and you say let's put it like exit and you say that it never returns sort of but i mean the vector"
4479760,4484960," kind of returns but i mean it's just kind of it's kind of funny right so it's a special indication"
4484960,4488560," and it's not really a fourth thing i think i'm pretty sure it's not the fourth thing it's"
4488560,4495200," specifically tall thing um okay so it seems to be compiling and uh it's doing that first try so"
4495200,4507520," first try got quarter ha ha ha ha did it yo"
4507520,4514320," i'm unstoppable i i have no idea how i pulled that off honestly"
4517120,4520480," pure luck pure luck pure luck i'm telling you"
4520480,4527760," uh so what's the size of the rome by the way it's it's not that much actually look at that"
4527760,4532160," so i didn't waste that much uh you know that much space which is already pretty cool"
4532160,4538160," uh though like it's kind of weird why is it"
4539760,4550800," um is um is it star so if we so there is something in there right there is something in there so maybe"
4550800,4560080," is the memory even initialized with zero at the start that's the real question is it initialized with zero"
4560880,4570720," so let me check something interesting i'm going to do the following thing uh so um so what if i put zero and"
4570720,4575120," i'm gonna say uh print cell all right and break line"
4578240,4585680," so uh failed to uh failed to assemble rom uh is it not cell"
4585680,4595600," excuse me where is the compilation unknown absolute reference a print cell"
4596160,4603280," uh uh just a second just a second just a second i think i can figure it out i think i can figure it"
4603280,4614880," out um in console in console uh would be nice if i oh"
4624800,4629120," uh knowing where exactly an error has happened would be beneficial actually"
4629120,4638000," um to be fair we we can say that it's one of the limitations right if you"
4638000,4645360," cannot find the error in your source code your source code is too complicated make it simpler"
4645360,4652640," keep it simple there you go so that's how we can explain that no need to uh report any locations if you"
4652640,4658800," can't find an error in your source it's too complex bloat bloat simplify it so yeah that's how we're gonna"
4658800,4670880," explain it skill issue exactly exactly skill issue uh i mean why not right if it's if we're trying to"
4670880,4680320," impose limitations to keep things simple why not um so the question is so we are falling through um"
4682640,4689280," we're falling through so we're calling to this thing when it's true but this is not true isn't it"
4689280,4700480," this is not true so if i put one in here right it's space so it's kind of inverted"
4700480,4712240," it's kind of inverted like and i didn't really expect that so um let me where is the lambda thingy"
4712640,4720560," uh-huh so gci so"
4720560,4731840," essentially the logic is like this if we have a true on the top of the stack we jump to here"
4733680,4735120," did i understand that correctly"
4735120,4745040," right so and if we don't we have false we fall through that's the logic essentially in here do"
4745040,4750080," it i probably that's what it is i guess uh we can take a look at the assembler right so"
4750080,4755040," uh so we have a question mark so we have a reference"
4756400,4766240," uh-huh make a reference okay so what's what's this so this is parts uh-huh so and when we're making the"
4766240,4774960," reference while we're making the reference we have in the lambda right so there's a lambda count"
4776480,4781280," and we are making the lambda we're making the lambda"
4781280,4790640," so when we have a lambda stack so essentially uh we're figuring out the"
4790640,4798560," ends of the lambda when we encounter the closing yeah there we go uh-huh then"
4798560,4805840," we just so we have a lambda stack we take the thing at the top of the lambda stack and we make the lambda"
4806720,4819040," uh right and we make the label uh-huh so i suppose yeah i guess i'm gonna"
4819040,4827440," so probably it makes sense for me to take a look at the gci instruction instead and just try to understand"
4827440,4834640," what it does uh gc so it's a conditional jump yeah it's a conditional jump so we have"
4834640,4849280," something at the top of the stack and if it's not um if it's not we're just doing we're skipping it oh"
4849280,4856880," that confused me a little bit i never"
4858480,4867280," seeing break inside of switch under a condition honestly i mean it makes sense but"
4867280,4874880," well i mean you you can do that yeah sure"
4874880,4883360," i guess you can do that so i never thought why i never thought about it right"
4884880,4893360," so wait wait yeah you you can do that you you can have a you can have a conditional fall through"
4893360,4898880," yeah you can have a conditional fall through why not why not who said you can't do that yeah"
4898880,4901680," conditional fall through um so"
4904080,4917680," that's all good to me so if it is false we are um yeah so just a second if it's true it's gonna be"
4917680,4925600," we're gonna do a jump all right so if this thing is true it's becomes false"
4926400,4931840," right right right it becomes false it falls through and it acts like gmi which is basically you know"
4931840,4942880," jumping uh if it's false this becomes true and we're going further uh so because of that i thought"
4942880,4949840," that this thing is going to work but it literally didn't so that means i'm not understanding this thing"
4950960,4960400," but i can do the following stuff all right so just just a second so this is false and it is going to print"
4960400,4963680," uh all right and if it's true"
4974960,4980480," i'm still don't understand the implication of this thing so"
4980480,4988800," all right"
4988800,4994480," so let's not question it so i can just like"
4995520,5003680," um i can swap it around but for some reason it still doesn't doesn't make sense to me honestly"
5003680,5010800," it doesn't make sense to me but i mean maybe uh maybe i'll understand at some point uh so yeah"
5010800,5016160," something something weird it's uh"
5019280,5027040," what is going on so that's uh-huh but if i say do that it never printed anything"
5027040,5039840," wait a second why"
5039840,5044880," and here i probably want to delete"
5047440,5052160," yeah okay okay figure it out figure it out figure it out figure it out okay"
5052160,5056480," so um it would be kind of nice for us to"
5056480,5066640," initially maybe have something uh to initially have something for instance i can maybe put zero one"
5066640,5074160," uh zero one zero one so it's gonna be 61"
5077440,5081520," one two three four one two three four five"
5081520,5088160," actually mine throwing the mine throwing the mine throwing the mine throwing this so we have 10 by 10"
5088160,5090080," one two three four five"
5090080,5102080," one two three four five"
5102080,5124080," Glider! A glider! That's cool. It's kind of cool that you can just directly like I did that."
5124080,5144080," So that's so cool. That's pretty cool. Yeah, so essentially we are basically printing the board, right?"
5144080,5152080," So we do print a cell, but we can now say, okay, print a board. Right, so it's not really accept anything."
5152080,5160080," So it's just going to be like that. Print a board. Like this."
5160080,5175080," And that will allow us to maybe even do that iteratively. So we may have a process where we sort of compute the next state of the board."
5175080,5183080," Right, and keep printing it. So since we factored out this operation, right? So it's pretty straightforward."
5183080,5193080," Obviously, I would like to maybe go with something like dot. Something like... Yeah, so we can clearly see the boundaries of the border."
5193080,5200080," So we can clearly see the boundaries of the border. So we're going somewhere. We're going somewhere. It's pretty cool."
5200080,5218080," So the question is, how are we going to be computing all of that stuff? Interestingly, so there is some sort of like a clever process of computing the next generation of Game of Life in place."
5218080,5228080," But I'm too dumb to actually pull that off. So what I usually do, I have like a backboard. Right, so let's call it backboard."
5228080,5245080," I'm going to create a place one zero. Backboard. And yeah, so we're going to be computing the next generation into that backboard."
5245080,5269080," So I think I would like to make a small break, because I feel like I already ran out of tea. And to implement the, you know, function that competes the next generation, I definitely need some more tea."
5269080,5282080," So yeah, let's make some more tea. So yeah, let's make some break. And all right, so what we need to do, what we need to do, we need to be able to maybe count the neighbors."
5282080,5292080," One of the things that you want to be able to do when you're implementing Game of Life is knowing your neighbors. Know your neighbors."
5292080,5309080," So yeah, the question is, how can we do that? So maybe we can have a function that is literally called count neighbors."
5309080,5318080," To be fair, neighbors is a very annoying word. What I like to do, I actually like to call it neighbors. Right, neighbors."
5318080,5331080," Jump to R. So and essentially, we can say that maybe it accepts row and column. Right, so it accepts row and column, and will just return your count. Right, it will just return your count."
5331080,5340080," So and essentially how we're going to be doing all of that. So it's rather straightforward, honestly."
5340080,5356080," We can do dupe2. Oh, this is fun. Right, so I can just check like the board get or maybe get sell. What was the function? I think it was board gets. Yeah, yeah, yeah."
5356080,5371080," So to be fair, I don't really like the convention that we have in here. So we have a print sell and the board get returns sell. Maybe I could rename it to something like board get sell."
5371080,5398080," Maybe that is a better name for this kind of stuff. Right, board get. Yeah, board get sell. So, and in here, we have a board get sell. And that thing, as we know, takes the pair of these things and returns you the sell. And what we can do, we can essentially increment something like, I don't even know, like, what's the best way to do that? What's the best way to do that?"
5398080,5422080," Can we have some sort of counter? So what if we, so what stack operations do we have? I think I need to take a look at the stack operations. So we have opcodes. And so this is break. This is GMI."
5422080,5433080," So pop. It's kind of like, I really like how you augmented sign language with opcodes."
5433080,5445080," There's something interesting about that. So I suppose it's, it was for accessibility. I'm not 100% sure. But at the same time, it has a really interesting implication."
5445080,5454080," You can pass ROMs in silence from one person to another through a sign language."
5454080,5469080," So think about that. Right. So it's just like, nobody can hear anything, but you have a person in the other room. Right. So, and you just like passing ROMs to a different person."
5469080,5477080," Just like, just like, just like, and they then write them down, they run it and they just like save the world or something."
5477080,5486080," Just like imagine that. It's kind of interesting. If you think about this, like the implication of like, having a sign language for opcodes."
5486080,5495080," Isn't it cool? This thing is pretty cool."
5495080,5498080," So yeah."
5498080,5503080," What do we have? So we have pop. So I don't remember nip."
5503080,5509080," Nip is just like you're removing the one that is underneath the top. Right. So you have a swap that is fine."
5509080,5522080," Rotate. Rotate. Oh, rotate could be actually useful. Rotate. I love rotate. It's my favorite."
5522080,5547080," So when we are rotating. So you're rotating to the left. Yeah, I see. I see. So basically you just to the left and a kind of overflows and becomes here, which is something that we could use probably."
5547080,5553080," Mm-hmm. So there's also rotate k is interesting."
5553080,5564080," Rotate k. So it just kind of preserves that. So duplicate is understandable. Over. You just take that."
5564080,5572080," Equal. I'm just thinking what's going to be the best way to keep track of that single count. Right."
5572080,5584080," What I was thinking is that maybe I have dupe and then I would have something like left. Right."
5584080,5591080," And essentially left is going to accept this thing and return you this thing."
5591080,5600080," But it is going to increment, I suppose, actually not increment, but decrement column by one."
5600080,5602080," You know what I mean?"
5602080,5613080," Right. So you duplicate. Right. So you have row and column, you duplicate them, you duplicate them, but then then you do left and that, you know, updates one of these things."
5613080,5624080," Then you do board, get cell. Right. That gets you the cell, the neighboring cell, the neighboring cell, and then you add that cell to some sort of a counter."
5624080,5629080," But where do you keep the counter? That's the real question. Where do you keep the counter?"
5629080,5640080," So I have a feeling that, um, I don't even know what's going to be the best way to do that."
5640080,5648080," Maybe the best way to do that is to store that counter somewhere in the memory or in a, in a return stack."
5648080,5657080," Like why not keep it in the return stack? Yeah, we can do that. We can keep it in the return stack. Who said we can't do that?"
5657080,5671080," Uh, so, and if I want to push something in the return stack, um, I can basically, okay, so this is zero and, uh, how do I transfer a thing to a return stack?"
5671080,5687080," My chromium is dead. Huh? Oh, I accidentally press something weird. So something like STH, I think, moves the value at the top of the stack to the return stack."
5687080,5701080," Okay, so I can do STH. So I put zero, then I move it to STH and now I can do, uh, things there. So that allows me to, uh,"
5701080,5702080," Uh-huh."
5702080,5703080," Uh-huh."
5725080,5750080," Uh-huh. Isn't that poggers? And it's just, like, need to implement all of this, like, left, right, and, uh, you also need to do diagonal things. Though, not necessarily. You don't really need to do diagonal things in the sense that, okay, so you have left, uh, down. You can always do something like left down."
5750080,5778080," Uh-huh. Wait, what the hell? That is so good. Cool. So left, left down. Right, left down. Uh, right, uh, maybe left up. Right, left up. Uh, right, right down. Uh, right up. Um, and that's basically it."
5778080,5794080," And that's basically it, I think. Right. That's basically it. So, so then you move this thing back and you return from there."
5794080,5798080," It's another cool way to do that. Wait a second. Like, come on."
5798080,5807080," That is so cool. Like, I keep, like, I forgot about the second stack. The second stack is actually very useful, right? So you can do things there."
5810080,5815080," You can do things there. Like, you can do things there. This is actually regrettable. I'm still not sure about the name for this thing."
5815080,5819080," What if we, like, it's too long, honestly. It is too long."
5819080,5823080," Um, nah, let's keep it like this. Let's keep it like this."
5823080,5836080," Uh, so, and when we have the left, uh, right, so jump to R, jump to R, jump to R."
5840080,5855080," Um, uh, it's rather straightforward. You just decrement, and that's it. So, uh, and in case of write, you just increment."
5860080,5864080," Okay. So, if you want to do up..."
5864080,5874080," So, up is minus row. I know, by the way..."
5874080,5884080," Ah."
5884080,5887080," Thank you, chat. Thank you."
5889080,5891080," What the hell was going on?"
5891080,5896080," So, wait. There is no such thing as deck?"
5896080,5898080," Are you serious?"
5898080,5899080," I do not believe you."
5899080,5901080," Uh, yuxi and..."
5901080,5903080," Uh, deck?"
5903080,5906080," Nah, that can't be true."
5906080,5915080," What is it called?"
5918080,5922080," Um, deck, I mean..."
5922080,5924080," So, is it increments?"
5947080,5956080," I mean, that makes sense, right? So, yeah, you need to know tooth complement to actually use this thing."
5956080,5962080," But you need to have a lot of knowledge about computing to use this thing. That's kind of interesting, actually."
5963080,5980080," It's really, this whole project is interesting and deceiving at the same time, but not in a bad sense, by the way. Not in a bad sense. It's just like, it feels like it's a sort of like a, you know, like a language for school and just like for kids to learn programming for the first time. But the depth of the knowledge you need to have to just use it on the basic level is kind of very interesting."
5980080,5999080," And I wonder if that's intentional or not. I think it's intentional or not. I think it's intentional. I think it is intentional. It's kind of really interesting. Hmm."
5999080,6014080," Because I mean, yeah, so it does support negative numbers, but you need to like know tooth complement. Like it's, it's not a really like a basic knowledge. It's a pretty advanced knowledge in my opinion, honestly."
6014080,6029080," So, oh yeah. I mean, sure, I can, I can just do that. So we just add a negative. Hmm. Yeah, the key domains are deceptive. Yeah, they are."
6029080,6043080," Hmm. Hmm. Hmm. Hmm. Hmm. So we use tooth complement. So if you wanna, wait, there was like a negative, I think. Oh, there was a, yeah. So they're not equal."
6043080,6054080," So they're not equal, but there's no negative. And if you wanna do negative, you probably wanna do that yourself. You need to invert bytes, right?"
6054080,6066080," So if you have some sort of a number, right? So you just push some sort of a number or I don't know, like, yeah. Let's say I pushed 10 and I wanna get minus 10."
6066080,6089080," I need to invert bytes, but to invert bytes, I need to do XOR, right? And add one ink. So, well, technically, uh, you can even do something like, um, I don't know, negative, negative, and just do something like that."
6089080,6099080," Well, you can implement your own instructions, essentially, right? Out of like the basic things. I guess, I guess, I guess you can do something like that. But yeah."
6101080,6116080," Uh, so we're gonna do up. And this one is swap. Uh, so up is just this. Yeah. Up is just this. Um, swap. FF add. Swap."
6116080,6132080," Uh, jump to R. And then down, which is just add. Uh, so in that case, it's just increment swap, increment swap."
6132080,6145080," So we have these things. Uh-huh. So we get the board, right? It's just like, yeah, that should be it, essentially. That should be it."
6145080,6158080," Okay. Interestingly, we don't really have a way to print numbers, right? So if you want to be able to print a number, you literally can't do that."
6158080,6174080," Or can you? That's an interesting question. So essentially, well, as I, so I have, uh, the following thing. Like I have a number."
6174080,6193080," Uh, I can duplicate it. Um, grab its first digit. I can grab its first digit. And I can push it into the return stack. I can push it into the return stack. So this is basically the working stack. This is the return stack."
6193080,6213080," Uh, right, right. Then I can divide it by 10. Uh, then I can, uh, do that one more time. And then push it on the return stack and divide it by 10 again. And essentially, I'm going to be having it in the return stack in the reversed order."
6213080,6226080," So, which makes it kind of easy to implement the something like a print number kind of thing. Print number kind of thing."
6226080,6243080," Though, we know that we're not going to have a number that is, uh, oh my God. So, that is bigger 256. We can basically hard code all of that stuff."
6243080,6258080," Hmm. We can hard code all of that stuff. Or maybe even print hex. Print hex, which accepts a number. Right."
6258080,6263080," But it would be way easier to actually, but it would be way easier to actually, actually, the deck."
6263080,6265080," Yeah."
6265080,6283080," So, what I want is maybe duplicate this thing, then divide it by 100. Right. So, what's 100 in hex?"
6283080,6300080," Uh, okay. So, 64 divide. So, that's, I suppose, how it's done. Then what I want to do, I want to maybe add, add, um, zero. Right."
6300080,6312080," So, add zero and then print that specific character. Right. So, I print that one. Then, um,"
6312080,6330080," um, actually, if I'm going to be printing. Mm-hmm. So, yeah, 256, if I divide it by, like, 100, uh, I just get that."
6330080,6341080," All right. So, that's perfect. Uh, the next one I duplicate and I want to divide it by 10, but then I have to get the mode of 10."
6341080,6361080," Do we have mode in there? Do we have mode? So, where's uxnc? Mode. There's no mode. There's div. I remember there was div, but there's no remainder or anything like that. So, there's no even dollar."
6361080,6388080," So, uh, uh, uh, uh, uh, uh, I noticed. I already noticed. Thank you. So, but maybe I just do that incorrectly. Right. So, I want to do decimal, but maybe it's just like, uh, I need to do hexadecimal instead."
6388080,6395080," Or maybe not. Okay. Let's actually not waste time on that. Right. I don't think it's, it's worth doing it this way."
6395080,6403080," Uh, so, uh, so this is down. Uh, this entire thing should already work, I think."
6403080,6413080," So, one of the things we can do. We can put, we can take a look at the index, like, in here. Right. We can take a look at the index in here."
6413080,6433080," Uh, on reset. Where's, or at least, yeah, there we go. Um, so, one, one, count neighbors. Uh, count neighbors. Um, or what, what was that? Yeah, it was count neighbors."
6433080,6455080," Emacs doesn't auto completes. Boop. Oh my God. Neighbors. Um, boop. Um, so, and then we can just, like, do the usual loop. Right. So, we can do the usual loop."
6455080,6467080," Uh, so, if that's the, if that's the thing. If that's the thing, if that's the thing, we can do dupe."
6467080,6495080," Um, and, um, how do we say that? So, we want to invert this entire thing. Right. So, um, so print board less than. I still, this particular thing still kind of confuses me. If it's less,"
6495080,6511080," it's less. And it's not less. So, there's something with lambdas that I do not fully understand, so I'm not going to be using it. Uh, right. So, we can do over."
6511080,6523080," Um, I still have a feeling that you need to have a main label. You need to have main label if you have sub labels. So, um,"
6523080,6541080," um, if it's true. So, that means you can't really, like, easily invert this thing. Um, so,"
6541080,6569080," So, we can check whether it's greater than zero, I suppose. Right. So, we can put zero. If it's, um, if it's equal to zero. Right. So, where is the equality? Uh, equal, yeah, yeah, yeah. Eq. So, duplicate equal to zero. It's over. Okay. So, I managed to do that. So, the, uh, equal, yeah, yeah. Eq. So, duplicate equal to zero. It's over. Okay. So, I managed to do that."
6569080,6576080," So, I managed to do that. So, the lambda with the question mark, I, it's kind of confusing. I still don't fully understand it, but I want to use it at some point."
6576080,6593080," Uh, right. So, in here, what I want to do, I just want to print hello world. So, this is going to be hello world print text. Right. Print text. And then, uh, we simply decrement. Right. And we know that to decrement, we have to do that."
6593080,6618080," Uh, right. Uh, right. And then, we do again. Uh, okay. So, first of all, let me check whether this entire thing works. If I put zero in here. Right. If I put zero. Um, is it going to perform? Okay. So, if it's one. Uh-huh. Two."
6618080,6628620," Okay. Okay. It tells us. So, now, if I count the neighbors correctly, we should see exactly five hello worlds and we didn't see anything at all."
6629080,6640960," Uh, we didn't see anything at all. Uh, which is rather interesting. So, if I just do something like this. Um, hmm."
6643300,6653720," So, maybe one of the things I have to do here, by the way, is also pop two. I completely forgot about that one. Right."
6653720,6661520," So, I also need to pop two. But I don't think it's going to sort of like solve. Yeah, it doesn't really solve any problems in here."
6662300,6675300," Um, so, let me put it like this. And I'm going to put zero one in here. Right. So, it is one. It does return correctly. So, it does return two."
6675300,6684300," So, I'm moving this thing, uh, to here. So, we definitely don't have any. Right. So, here is zero."
6684300,6697120," So, I'm moving the zero at, into the return stack. I'm moving the zero into the return stack. Then I'm popping it out and I'm returning it back. Right."
6697120,6706640," So, that works. And if I'm doing it like that, it's one hello world. It's two hello worlds. That seems to be perfect."
6708060,6722000," Interestingly, interestingly, interestingly. So, if I do something like this, move it to here and add it, that is one. No. So, here is the problem."
6722000,6731960," So, I push something here. I move it to the return stack and I completely forgot R. That is cool."
6732400,6744640," So, that's basically what, the kind of the problem we have, uh, in here. Uh, right. So, that's pretty cool. Uh, that's returning back."
6744640,6753920," And there's two of them. Okay. So, uh, which is, again, incorrect. We're supposed to have five of them. Right. So, we're supposed to have five of them."
6753920,6760920," That's kind of, it's kind of interesting. Uh, right. But again, I just want to double check some other things."
6760920,6776460," So, zero, one, STH, ADDR. Uh, right. So, that's one. That's, uh, two. That's three. So, that means that particular pattern, that particular pattern works correctly."
6776460,6786800," That particular pattern works correctly. So, we can try to see. If I go to the left, it should not increment. Yeah."
6786800,6799560," So, that is true. Uh, so, that is true. Uh, do we have at left down? So, we do, in fact, have at left down a thing. Right. So, if this is one, one, left down."
6799800,6813660," So, we should have one neighbor there. We should have, yeah. This is true. So, left up. We should not have anyone. Okay. That's cool. Do we have anything at the right?"
6814800,6823280," We do have something at the right? That is true. Because, uh, that's the glider. Right down. We do have something at right down. That is true."
6823280,6832560," Right up. I think this is one of the cases when we, yeah. Right up is this one. So, we don't have anything. That is true."
6833800,6842840," So, uh, up. What about up? Do we have something at up? Yes, we do. That is cool. Uh, do we have something at down? Yes, we do."
6842940,6856900," So, that entire thing must work. And, uh, something is fishy. So, there's still two in here. Uh, is that because it cannot process"
6856900,6865720," the, uh, you know, five of them or more than five of them? I can always do ADDR. So, where is the mistake, though?"
6865720,6872060," So, if I have five in here. If I have five in here. So, it is true. Okay."
6872060,6889380," So, is there something incorrect in getCell? When I do getCell, um, mm-hmm. So, I dupe those things."
6895720,6902780," I don't have to. I don't have to dupe them, actually. I consume them, don't I? And when I do getCell,"
6902780,6914340," by the way, this is where I have to dupe them. Right. And, uh-huh. Yeah, yeah, yeah."
6916500,6934500," And, uh, I fixed the problem. Who needs debugger? I, it's not even a printf debugger because I don't have"
6934500,6941040," a proper printf. I literally have one function that prints hello world and I debug with that and I fix the"
6941040,6952500," problem. There is a debugger. Goddamn. Okay. But, I mean, I don't need it. I don't need it. I can,"
6952500,6954440," I can debug with hello world."
6962200,6970240," This is more fun. It is indeed fun. It is indeed fun. Uh, right. It's sort of like a binary search."
6970240,6975220," You're basically bisecting the problem. Right. So, because this is literally what I was doing. I was"
6975220,6981420," bisecting. I was trying to figure out where exactly the bug occurs. Right. And I kind of nailed it down"
6981420,6987740," and I found that it's like somewhere around like a, you know, board getCell. So, I think,"
6987740,6994460," I think we managed to do that. So, this entire stuff doesn't take into account, uh, wrapping around."
6994460,7001980," Should it though? That's the real question. Should it though?"
7001980,7008380," And usually I do wrapping around, uh, by,"
7012460,7017020," by mode, but we don't have mode. Oops."
7017020,7032220," We're back to mode. We're back to mode. Though, you know what? We can do some magic in this left,"
7032220,7039420," right, up, and down functions. Right. So, essentially, we can just like literally make a condition. Uh, if,"
7040860,7050140," um, so, for example, column is zero. Right. So, we're literally gonna set it to the right edge or"
7050140,7055260," something like that. Um, so, it complicates it a little bit, but I mean, I think we can,"
7055260,7056460," I think we can figure it out."
7056460,7063260," I think we can, in fact, figure it out. So, if it's,"
7064700,7073580," yeah, so, we just incremented this thing, we can duplicate the right column and if right column is"
7073580,7088140," greater, um, than the, the edge, uh, right. So, how can we do that? So, d, a, h. Um, so, we can"
7091580,7100540," see, uh, the, I'm going to, I'm going to show you a little bit more, uh, I'm going to, uh,"
7100540,7105900," I really need to understand how this conditional lambda works. Uh, I really need to understand how"
7105900,7120220," this condition lambda works. Um, so, we can actually factor this thing out. Uh, so, print text. Um, so, we can say,"
7121980,7127580," print hello world, yeah, n times."
7127580,7131900," Uh, and we can"
7131900,7143500," do something like this. So, which is a rather useful function to have. Print hello world, n times."
7145900,7162460," Uh, it's times. Okay. So, that's cool. So, that means here, uh, if I have, like,"
7162460,7169820," two. Uh, it's not how you do that. This is how you do that. Yeah. So, that's, that's a very useful function"
7169820,7176540," for debugging. It's a very useful function for debugging. So, I have this thing. So, where I can"
7176540,7186060," just print, uh, print hello world. It's kind of weird that Emacs doesn't auto complete any of that"
7186060,7193020," stuff, even though it can find this function here. So, the mode kind of messes up out the completion"
7193020,7197660," for whatever reason. So, when I do something like this, I think it's literally not going to do anything."
7197660,7204540," It's only when I do something like this, it kind of falls through and performs this thing."
7205340,7217900," So, if I have one in here, it ignores it. If I have zero in here, it actually falls through. So,"
7217900,7225340," what's the meaning of question mark in here? So, it's a conditional jump, but it's a conditional jump to"
7225340,7232780," the opposite side. So, that's what it is. It's a conditional jump to the opposite side. If it's true,"
7232780,7237820," skip skip. So, that's the meaning of this thing. And for some reason, it messes up with my brain."
7237820,7245180," I swear to God. I don't know why. It's just like, yeah, because when you're doing this kind of a"
7245180,7254620," conditional jump, you jump when it's true. So, the action, when it's true, perform the action, right?"
7254620,7260220," That's why. When it's true, perform the action. And in here, my brain thinks, okay, if it's true,"
7260220,7264380," perform the action. If it's true, perform the action in here. Maybe I'm just thinking about it"
7264380,7272460," incorrectly, but I don't know why. It just messes up with my brain. Right. So, maybe I should switch the"
7272460,7278540," way I think about this thing. If it's true, jump to the opposite side. That's probably what it is."
7278540,7293580," So, what I was doing? I forgot what I was doing. Right. So, we..."
7296540,7304700," Yeah, we have counting. Yeah. So, I was trying to do wrapping around. So, I was trying to do wrapping"
7304700,7321340," around. So, when we have zero, when we have zero in here, we can do the following thing. Yeah."
7323260,7334060," So, this is zero. We just pop that element and we push a, but we actually have to push"
7334060,7338860," nine because it's a minus one. And we can kind of do the following thing, right?"
7338860,7347660," So, because I want to explicitly use the, you know, the width in here. And by the way, this particular width"
7347660,7352940," is actually occurs here way too many times. Maybe the time has come for me to"
7352940,7361500," like really factor it out to a macro. Right. So, I can have width and let's call it size, actually."
7361500,7372300," So, this is size. And this is going to be zero A. So, that's the size. Unfortunately, I can't use it to"
7372300,7379420," allocate this kind of stuff, but maybe that's fine. Maybe that's fine. So, and every time I refer to"
7379420,7383660," these things, maybe I should refer to this stuff. Right. So, this is the..."
7383660,7392060," That's absolutely accidental, right? So, the new line is also 10. Like, I didn't think about that,"
7392060,7405260," but yeah. So, print board, it's the size, then get cell, then the size. Yeah. So, in here, let's do print"
7405260,7414540," board. So, let's just see. Okay. So, that seems to be working. We didn't break anything. So, now, if"
7416540,7428940," if I duplicate this entire thing, if it's false, it will fall through. It will fall through. And what"
7428940,7439260," we'll have to do is, I guess, pop and replace it with size, but maybe I can have a deck. You know what?"
7441900,7457660," Who said I can't have that? Yeah. I can do that, actually. So, that's another one."
7457660,7468620," That's another one. There we go. Deck opcode. Good. Yeah."
7470860,7477100," So, if this thing is zero and you're trying to decrement it, we're actually gonna..."
7477100,7481580," To be fair..."
7481580,7489980," Damn! Look at that. Look at that sexy code."
7489980,7494860," Ha-ha!"
7498860,7504140," That's pretty cool. Anyways."
7504140,7513740," So, let me think. That's very cool, actually. So, it's basically... Yeah, it's basically wrapping"
7513740,7521740," around. This one, if it's... We need to check if it's greater. All right. If it's greater than that"
7521740,7531340," specific thing, we can take the size, but we can check if it's equal, right? So, because when it overflows,"
7531340,7538940," it's going to become equal, right? So, it's going to be a ""eq u"", right? So, it's equal to that."
7538940,7542220," And if it's kind of true..."
7542220,7549500," Right. So, we have to kind of invert that. We have to invert that. And if it's true, what we're going to be"
7549500,7554300," doing, we're going to be doing, we're going to be popping it and replacing it with zero. So, it's kind"
7554300,7558140," of the other way around, effectively. It's kind of the other way around."
7559820,7565100," So, increment. So, increment. Is it equal to size? And also, you have to invert."
7565100,7569340," You have to invert."
7569340,7576620," And I'm thinking, maybe I'm going to factor out invert as well."
7584140,7589180," But if I feel logical invert is not exactly... wait."
7589180,7592620," If it's..."
7592620,7598140," Yeah. I can do it like that."
7598140,7602220," All right. Essentially,"
7602220,7608460," if it's not equal, skip that. If it becomes equal,"
7609420,7614700," pop that and replace it with zero. So, that's basically what we have in here."
7614700,7616140," That's basically what we have in here."
7616140,7626700," So, this one ""up"" is kind of similar. So, that means we can repeat this logic for the ""up""."
7628300,7635500," We can repeat this logic for the ""up"". And that means in here, like ""down"" is kind of similar to ""right""."
7635500,7636940," That means we can repeat this logic"
7636940,7642620," for ""down"". It's literally the same code, except they are"
7644220,7656220," ""wrapped in swaps""."
7656220,7672380," By doing swap, we are rotating our dimensions."
7674220,7684220," So, essentially, yeah, when you're swapping, you're rotating your square,"
7684220,7687580," and you're using left and right, and you're rotating it back."
7687580,7695420," That is so funny. I don't know why it makes me laugh, but I mean, it's just like..."
7695420,7701900," Isn't it kind of funny how you notice these patterns, and it's just like they kind of make sense?"
7703980,7707900," It's actually... Is that because it's an inherently concatenative thing? Is that..."
7707900,7712140," Would I... I think this is because it's a concatenative thing."
7712140,7719180," I think I would not think about this kind of stuff in a classical, like, structural programming language,"
7719180,7725420," like C or whatever. I think it would not occur to me. I think this, like, concatenateness enabled that."
7726940,7729340," Oh, that's very cool, actually."
7729340,7738780," That is very, very cool. So, left is decrement, and right, so yeah."
7738780,7740700," All right."
7740700,7742540," And..."
7742540,7747900," Yeah. So, we already have overflow. That's what's cool about it."
7749900,7758380," We already have overflow. That means count_neighbors automatically checks for the overflows and just like, yeah."
7758380,7767340," I think it shares some properties to halibut curve and the likes, which are very concatenative in nature."
7767340,7769180," That is true. It kind of like a..."
7770620,7773020," It does feel like halibut in a sense."
7773020,7775980," I see what you mean. I actually see what you mean."
7775980,7777500," Damn."
7777500,7780620," That is so freaking cool."
7780620,7782300," Anyways."
7783660,7785980," So, let me see if all that still compiles."
7785980,7787020," Maybe it doesn't compile."
7787020,7787740," It still compiles."
7787740,7788380," Would you look at that?"
7788380,7791100," We have some unused labels, but I mean, that's besides the problems."
7791100,7796700," And the macro system is rather useful, right?"
7796700,7798540," So, it's very much limited."
7798540,7799900," You can't have parameters, but I mean,"
7799900,7802460," why would you have parameters in a concatenative language, right?"
7802460,7804060," So, you don't need that, right?"
7804060,7808220," So, you just need to be able to collapse a bunch of tokens into a single token."
7811900,7812220," Okay."
7812220,7819420," So, now what we need to do, we need to basically compute the next state, right?"
7819420,7820300," So, that's what we want."
7820300,7829500," We're happy to say that you're no longer under investigation."
7829500,7834780," I developed a self-hosted, statically compiled, concatenative language."
7834780,7837740," How am I under investigation in the first place?"
7840780,7845580," You know how hard it is to implement statically typed concatenative language?"
7845580,7848620," You know how hard it is?"
7848620,7856860," So, essentially, I was doing the WebAssembly style verification,"
7856860,7861740," where essentially, you do meta evaluation of all of the control flows,"
7861740,7868220," all of the control flows, and basically push on the stack, not the values, but the types."
7869260,7872780," But I actually did a more complicated thing than WebAssembly."
7872780,7879260," WebAssembly has the structured blocks, which makes it super easy to kind of check for that."
7880300,7884540," I didn't have structured blocks, I literally have gotos, right?"
7884540,7890860," So, and what I had to do, I had to have an exponential algorithm that simulates all of the control flows"
7890860,7896460," and makes sure that different control flows merge with the same state of the stack."
7898780,7906300," Think about it: I simulate at compile time several control flows that meet at the single point,"
7906300,7910220," and I make sure that they end up with the same state of the stack."
7910220,7917980," And the initial algorithm was exponential, I managed to actually improve it to a linear one."
7918700,7926460," So, and I had to develop a special persistent data structure that keeps track of all of the stacks,"
7926460,7930460," of all of the control flows simultaneously, and reuses parts of them."
7930460,7938460," And after that, I'm under investigation for not liking concatenative languages?"
7940220,7940780," Seriously?"
7940780,7940860," Seriously?"
7940860,7946940," I'm sorry, I'm joking."
7946940,7953820," Like, that algorithm that I came up with was so cool,"
7953820,7956540," I was thinking to write like a paper about it, because like..."
7956540,7957580," Damn!"
7959180,7961260," I never thought I would come up with something like that."
7961260,7964060," I should definitely write a paper about it."
7964060,7967900," So, as far as I know, that algorithm is not really something new."
7967900,7975260," And it already existed, but somebody invented that algorithm in kind of like a slightly different..."
7975260,7975900," I think..."
7975900,7976460," No, I think..."
7976460,7979420," No, I think it's a very common thing."
7979420,7979660," Damn."
7979660,7982460," Yeah, I think I reinvented a very common thing."
7982460,7985980," It's called something like a tree of stacks."
7985980,7987260," I think that's what it's called."
7988140,7988860," tree of..."
7988860,7991500," Forest of stacks or something like."
7991500,7994780," Forest of stacks."
7994780,7996380," So..."
7996380,7999260," Forest stack climb..."
7999260,8000300," No, not really."
8000300,8001980," God damn, I don't remember, but..."
8001980,8008540," Yeah, so it's basically a persistent data structure that is kind of like a directed graph,"
8008540,8014300," but it's also keeping track of several stacks simultaneously, if that makes any sense."
8014300,8015660," Like, there is something like that."
8015660,8017980," People have invented this thing before me."
8019020,8019260," Um..."
8019260,8022540," It's kind of like a const cell stacks."
8022540,8023660," Yeah, yeah, yeah, yeah, exactly."
8023660,8025580," Maybe."
8025580,8027020," Let me Google it up."
8027020,8028380," So..."
8028380,8030780," But the cool thing is that I reinvented it myself, so..."
8032300,8035500," So that's what makes it special for me."
8035500,8037500," I think that's what it is."
8037500,8038380," Yeah, maybe."
8038380,8038940," I'm not sure."
8038940,8041420," Is it highly influential?"
8041420,8043020," Virtual machine?"
8043020,8044220," Nah, nah, nah."
8044220,8045900," It was specifically data structure."
8045900,8047660," It was specifically data structure."
8047660,8052140," Anyway, so I should probably find it at some point."
8053740,8054060," Anyway."
8054060,8061580," So to compute the next thing,"
8061580,8062700," to compute the next thing,"
8062700,8065660," we just need to iterate the board yet again."
8065660,8067580," We already know how to iterate the board."
8067580,8068220," So there you go."
8068220,8073020," We already know how to iterate the board."
8077020,8077580," So..."
8077580,8079180," But here we're simply..."
8079180,8082940," We're simply..."
8082940,8091260," I know a cool shit chat."
8093100,8095420," I know about Lambdas."
8095420,8097900," I know something about Lambdas."
8097900,8105980," So Lambda can be used to store data such as stack amongst the GSI Lambda,"
8105980,8109660," assembles to subroutine that puts the return address,"
8109660,8114380," or in this case, the location of the data memory and return stack."
8114380,8118220," So I know that if you do something like that,"
8118220,8122060," you effectively get a Lambda on the return stack."
8122060,8127340," So you kind of need to do something like this."
8127340,8135020," And what you have effectively is an address to this Lambda."
8135020,8137260," This Lambda was never called because it was skipped,"
8137260,8139980," but now you have an address to this Lambda."
8139980,8146060," Can I have a function iterate board?"
8150940,8163900," I don't know how to annotate that."
8163900,8164540," So if I..."
8164540,8167580," Yeah."
8167580,8172380," So it's essentially here you have a row and column,"
8172380,8174860," and you don't have to worry about that."
8177820,8179100," Yeah, you don't have to worry about it."
8179100,8181980," So you have a row and column, and at this point, you can just do"
8181980,8185900," count neighbors, right?"
8185900,8188380," You probably want to dupe this entire thing."
8188380,8191580," Or maybe we assume that you consume that thing anyway."
8191580,8192780," So you count neighbors."
8192780,8198380," And in here, depending on how many neighbors you have..."
8198380,8207500," Well, I mean, actually, you dupe two, board, get, sell, right?"
8207500,8209980," And then you count neighbors."
8209980,8213900," So on the stack, you have two things."
8213900,8217660," The current state and how many neighbors you have."
8217660,8224620," And honestly, that just means that I can count neighbors like later."
8224620,8226220," Okay."
8226220,8231340," So I can first count the neighbors and then get the cell state."
8231340,8233980," So first, I check whether we are alive or not."
8233980,8235900," That's what I do."
8235900,8241500," So if I'm alive, if I'm alive..."
8241500,8243340," Right."
8243340,8245100," So this is where I'm alive."
8245100,8251500," So if this is true, I will skip that."
8252060,8254140," So that means here I'm alive."
8254140,8256380," Here I'm dead."
8256380,8260060," Jump to R."
8260060,8264460," Jump to R."
8264460,8267180," Right."
8267180,8273020," And what that means that here, I have the neighbors."
8273020,8273980," I need to check."
8273980,8281020," So if I'm dead, when I, you know, go to life..."
8281580,8282700," Game over life."
8282700,8297500," Also known as symbol is a board game originally created in 1960 by Milton Bradley,"
8297500,8299020," the checkered game for life."
8299020,8307260," Classic."
8311100,8331660," Any dead cell with exactly three live neighbors becomes a live cell as if by reproduction."
8339660,8340620," Why not?"
8340620,8340700," Why not?"
8340700,8340780," Why not?"
8340780,8341500," Why not?"
8341500,8341500," Why not?"
8341500,8342460," Why not?"
8342460,8353500," So, 0.3, eqq, uh-huh, and in this case, we can even do something like this, I think."
8353500,8354540," Oh, this one is interesting."
8354540,8370620," So we need to be able to set a particular board."
8370620,8372540," We need to be able to set a particular board."
8373340,8380060," In any case, so I think I'm getting into like a very complicated territory, but I think I roughly"
8380060,8381260," outline what I want."
8381260,8384940," I'm not sure if this idea for iterating the board will work at all."
8384940,8386300," So I first want to check that."
8386300,8387180," Right."
8388300,8389260," Okay."
8389260,8397260," So, yeah, essentially, how do I call something that is on the stack?"
8397260,8410220," I guess we have things like gci, which is a conditional jump, immediate jump."
8410780,8412140," So what is GSI?"
8412140,8414700," Is that what I think it is?"
8414700,8415900," Is that what I think it is?"
8415900,8419980," So let me take a look at the op codes."
8422220,8424700," jump stash return instance."
8424700,8431420," Aha, pushes to the return stack and that's what it is."
8431420,8433100," That's what it is."
8433100,8439260," So it basically, if you have on top of the stack the some sort of address that you want to jump to,"
8439260,8442380," you can use this instruction and it basically calls that thing."
8442380,8450780," So, and if you have some sort of a word, some sort of a word, like iterate board,"
8450780,8459740," it compiles down to pushing the absolute address of this thing and then calling GSI."
8459740,8464700," We can even confirm that by looking at the assembly."
8464700,8466220," All right."
8466220,8469980," So if we encounter some sort of a word."
8469980,8475900," So, op code, we're not interested in op code."
8476620,8478620," robot macro."
8478620,8483020," And now we have a make reference."
8483020,8484380," I think maybe that's what it is."
8484380,8485180," Make reference."
8485180,8487500," If it's a label."
8487500,8488860," Aha."
8488860,8491420," Aha."
8491420,8492300," Find label."
8492300,8496460," So we find the label."
8496460,8497260," All right."
8497260,8498540," So we're finding the label."
8499100,8500860," And then we're copying it."
8500860,8504620," Though I'm not really sure."
8504620,8507180," So maybe I'm not looking at the right thing."
8507180,8509180," Well, I think I am looking at the right thing."
8509180,8511180," Um."
8511180,8516220," I would expect the call to be somewhere here."
8516220,8517020," Right."
8517020,8518300," So this is the macro."
8518300,8520940," Ah."
8521900,8522940," Wait, wait, wait, wait, wait, wait."
8522940,8531180," Are those the bytes that perform the thing?"
8531180,8531820," The call."
8531820,8533340," So make a reference."
8533340,8535580," So that means we kind of push the reference."
8535580,8535820," Right."
8535820,8537020," If you find the reference."
8538220,8540780," I think we kind of copy the reference maybe."
8540780,8543420," And if I take a look at the uxn."
8543420,8545500," uxnc."
8545500,8548220," So do we have 60?"
8548220,8550540," And 60 is a freaking GSI."
8550540,8553980," I cracked the code."
8553980,8555020," I understand."
8555020,8556220," Literally."
8556220,8557180," If you use the."
8557180,8558780," Yeah."
8558780,8560700," The label directly."
8560700,8563900," It compiles down to pushing the reference."
8563900,8565420," And then doing GSI."
8565420,8566860," Not sure about this thing."
8566860,8568140," Like, what the fuck is that thing?"
8568140,8569020," But I mean, whatever."
8569020,8573180," So."
8573180,8578140," Is Mojo going to replace Python?"
8578140,8580540," You know what's going to replace Python?"
8580540,8583100," I'm going to show you what's going to replace Python."
8583100,8584460," This thing."
8586220,8591740," This is the future of AI programming."
8591740,8592460," I'm telling you."
8592460,8596540," All of the modern AIs are going to be written in this language."
8596540,8597180," You know why?"
8597180,8601260," Because in a post-apocalyptic world,"
8601260,8604940," you're not going to have huge data centers to run your Mojo."
8604940,8608780," So all of the AI is going to be written in that."
8608780,8611980," Welcome to the future computing."
8611980,8613740," Anyways."
8614220,8616140," So, yeah."
8616140,8618860," Iterate board."
8618860,8625660," So I'm just thinking."
8625660,8630540," How I'm going to approach that."
8630540,8633660," So if I get the function."
8633660,8635900," So I'm getting the lambda in here."
8635900,8636140," Right."
8636140,8637740," So I'm getting the lambda in here."
8637740,8641820," I suppose what I want to do with that lambda."
8641820,8643260," I want to do sth."
8643260,8645340," But I want to do sth too."
8645340,8648540," So I'm going to move the entire thing there."
8648540,8651820," So when I'm printing the board."
8651820,8653180," When I'm printing the board."
8655180,8656620," I'm doing this thing."
8656620,8657340," All right."
8657340,8658220," I'm doing this thing."
8658220,8661980," So by the way, this has to be gmp2r."
8661980,8664780," All right."
8666460,8669100," So, uh-huh, uh-huh."
8669100,8677020," So I'm, it, well, this is kind of annoying in the sense that I won't be able to implement"
8677020,8683500," print using this thing because you need to have extra code to break the line."
8684860,8687340," So you need to have an extra code to break the line."
8687340,8692060," So maybe you're going to have like two things in there."
8692060,8698060," Um, so, yeah."
8698060,8704460," I feel like, so the reason why I want you to have iterate board is because I want to,"
8704460,8709820," I want you to reuse the same piece of code for print the board, for print the board,"
8709820,8712860," and for compute the next state."
8712860,8720540," But for print the board, you need one extra additional piece of code, which is breaking"
8720540,8725420," the line, which is kind of annoying, honestly, which is kind of annoying."
8725420,8729740," So, which means that I can't really factor out iterate board that easily."
8729740,8731420," But maybe I don't have to, right."
8731420,8733580," So let's just, let's just copy paste."
8733580,8733820," All right."
8733820,8734780," So we'll just copy paste."
8734780,8737420," I think, I think there's nothing wrong with copy pasting."
8737420,8741980," It's kind of a cool idea, right, to, to have this sort of functional style."
8743580,8744620," Uh, functional style."
8744620,8747900," But I mean, maybe it's going to be reserved for something else, right."
8747900,8749500," So it's going to be reserved for something else."
8751020,8753340," Uh, so, yeah."
8753340,8758700," Um, I would like to maybe make another break, honestly."
8758700,8764460," So, I'm already starting for three hours, but I almost there, actually."
8764460,8765420," I'm almost there."
8765420,8768060," So I need another cup of tea."
8768060,8769260," So let's make a small break."
8769260,8773500," I'm going to make another cup of tea and we're going to finish this because we're almost there."
8773500,8773740," Right."
8773740,8777180," So just look, we have all of the necessary mechanisms to do the thing."
8777180,8778380," Uh, right."
8778380,8781340," So, um, all right, I got my tea."
8781340,8786220," So we are now iterating the board, right?"
8786220,8787820," So we're just iterating the board."
8788300,8792700," Um, and in here, um, what we're trying to do."
8792700,8800460," Uh, so we probably first want to, as already said, count the neighbors."
8800460,8800940," Right."
8800940,8808140," Count neighbors and then, uh, get the cell."
8808140,8810940," But we don't have to print anything in here, as you can see, right."
8810940,8812140," So we don't have to print."
8812140,8814860," To be fair, so do we need to duplicate?"
8814860,8817420," Yeah, we do need to do the duplication."
8817420,8818860," We do need to do the duplication."
8818860,8828300," So if the cell is alive, right, if the cell is alive, what do we have to do?"
8830940,8841020," Um, so honestly, what we have at the top of the stack is just the count, uh, count and the cell."
8841020,8842700," So we have two numbers in here."
8842700,8848780," What we have to do, we have to now transform it maybe into a number, right?"
8848780,8856700," Maybe into a number, um, that we can then somehow consume."
8856700,8859020," Uh, it's kind of interesting."
8859020,8867180," So we could just have a function, uh, next cell, right?"
8867180,8870380," So we can have a function, something like next cell."
8870380,8876140," Uh, so, and what it does, it accepts, uh, the count."
8876140,8885020," It accepts the count, uh, and the cell and just returns you next cell, cell like one, right?"
8885740,8888780," So it returns you the state of the next cell."
8888780,8892780," So we have not applied it yet."
8892780,8894700," I don't know what the hell is going on in here."
8894700,8896700," Uh, let's book to do."
8896700,8901900," Uh, and essentially afterwards, what do we have in here?"
8901900,8907900," We have row, column, and cell one, right?"
8907900,8916060," And basically what we need to do, we need to save that new cell to the backboard, to the, to the sort of next board."
8916060,8920780," Uh, so the question is, how can we even do that?"
8920780,8922940," How can we even do that?"
8923980,8934140," Uh, the problem here is that I need to, um, not lose this row thingy."
8934140,8936860," I need to not lose, uh, this row thingy."
8936860,8940300," So initially I have a row column."
8940300,8947100," Uh, what I'm thinking is that I can duplicate it an extra time."
8947980,8950140," Right, I can duplicate it an extra time."
8950140,8953100," So I do the first duplication, like so."
8953100,8954300," All right."
8954300,8966460," Um, so then I duplicate it again and turn it into count."
8966460,8968700," So that's basically what happened in here."
8968700,8976860," Uh, and this is where, yeah, so this is not going to work that easily."
8976860,8978300," Yeah, yeah, so this is kind of the problem."
8978300,8981100," So I need to probably have a rotate."
8981100,8982620," So how do we do rotate?"
8982620,8992620," Um, so that takes this thing and brings it to the top."
8992620,8994940," Right, that takes that thing and brings it to the top."
8995740,8998140," Um, which means..."
8998140,9002380," Uh-huh."
9002380,9006380," I see what is going on."
9006380,9011580," I see what is going on."
9011580,9015580," So we can maybe do the following thing."
9015580,9022140," Where we consume the count, right?"
9022140,9028620," So if the count is zero, right?"
9028620,9029900," The count is zero."
9029900,9033580," Yeah, so I'm repeating the thing that I was trying to do, right?"
9033580,9035580," So I'm repeating this thing that I was trying to do."
9037020,9041020," Okay, so that's basically the thing."
9041020,9043660," If it's zero, it's gonna fall through."
9043660,9044860," That means it's dead."
9044860,9049900," Right, so let's just do that thing over again."
9051500,9052940," Uh, it's dead."
9052940,9059580," Otherwise, it is something..."
9059580,9062140," Something else, but..."
9062140,9070860," Mm-hmm."
9070860,9071340," Mm-hmm."
9071340,9074780," So..."
9077580,9079820," I'm actually already tired."
9079820,9083660," I'm actually already tired, but I really want to finish it."
9083660,9087180," I really want to finish it because it's almost there, right?"
9087180,9087980," It's almost there."
9087980,9088540," It's just like..."
9088540,9090300," Oh, man."
9091900,9094060," So maybe I can push through."
9094060,9095260," Maybe I can push through."
9095260,9095900," Okay, okay."
9095900,9097020," So let's actually push through."
9097020,9101660," So..."
9101660,9111740," So we need to duplicate whatever we're doing and just do next cell."
9111740,9115660," Okay, so let's reform the notion of the next cell."
9115660,9119820," It's going to be a row column and it's going to update this entire thing."
9119820,9122060," Right, so it's going to update this entire thing."
9122060,9122300," So..."
9122300,9125820," Yeah."
9125820,9127820," This is going to be that."
9127820,9130460," Uh, dupe2."
9130460,9135580," Dupe2."
9135580,9140140," No, okay."
9140140,9145100," So I'm already streaming three and a half of an hour and it's already too much for me."
9145100,9146940," It's already too much for me."
9146940,9148300," I think I'm going to stop here."
9148300,9152860," I'm going to stop here and we're going to continue this thing tomorrow."
9152860,9154300," Uh, right."
9154300,9156940," And tomorrow we're going to finish all of that stuff, right?"
9156940,9160060," So I'm going to implement the computing of the next state."
9160060,9164780," And hopefully I'll also implement the graphical part."
9164780,9169100," I think graphical part is going to be also important."
9169100,9174860," So, and I'm going to concatenate the, you know, all of that into a single vote as I usually do."
9175260,9175660," All right."
9175660,9176940," So that's it for today."
9176940,9179180," Thanks everyone who's watching me right now."
9179180,9180460," I really appreciate it."
9180460,9181100," Have a good one."
9181100,9183660," And I'll see you all on the next recreation programming session."
9183660,9184780," I'll see you tomorrow, right?"
9184780,9186940," Tomorrow we're going to continue all of that stuff."
9186940,9187820," Love you."
9187820,9190140," All right."
9190140,9191660," So this is the next day."
9191660,9196380," So let's go ahead and continue developing the game of life, right?"
9196380,9200780," So here we have a loop that iterates through all of the cells and stuff like that."
9200780,9204060," I really don't like how cryptic it is, right?"
9204060,9209420," So it's just like, who knows that this is basically a knot, right?"
9209420,9213100," So essentially we duplicate the iterator, right?"
9213100,9219740," Then we push a size and then we're checking that this iterator is less than a size, right?"
9219740,9226460," But since this thing jumps to the opposite label when it's true, we actually don't want to jump."
9226460,9230140," So we negate that true to false."
9230140,9232940," And because of that, execution falls through."
9232940,9235180," So this is basically the logic."
9235180,9239660," So what I'm thinking is that maybe we could come up with something like, I don't know, knot, right?"
9239660,9245980," Because I know that knot is not an opcode in UXCN, right?"
9245980,9248220," So it's not an opcode in UXCN."
9248220,9250140," So there's no such thing in here."
9250140,9254300," So we might as well just go ahead and factor it out, right?"
9254300,9255660," You know, the usual thing."
9255660,9261420," It's very common in concatenative languages to just notice a particular pattern and notice a particular"
9261420,9264540," pattern and just factor it out like so."
9264540,9266620," But here's an interesting thing."
9266620,9273820," That knot only works when your true is equal to one, right?"
9273820,9283100," But as far as I know, the jumps, conditional jumps are more like how the web developers like to call it"
9283100,9284940," truthy, right?"
9284940,9291660," So I think web developers came up with this beautiful, beautiful world called truthy."
9291660,9298780," Because I've never heard that word outside of web development, honestly."
9298780,9301420," I've never heard that word outside of web development."
9301420,9304300," It's only the web developers that name it like that."
9304300,9307180," So the idea is that zero is false."
9307180,9309500," Everything else is true, right?"
9309500,9310940," So zero is false."
9310940,9311820," Everything else is true."
9311820,9316060," And we can see that in the implementation of the virtual machine, right?"
9316060,9319980," So here's a conditional jump and T is the top of the stack."
9319980,9323980," And if it's basically not, if it's true, all right?"
9323980,9325740," So if it's actually true, it's going to be false."
9325740,9327500," So it will actually perform the jump."
9327500,9329180," So it's not going to perform this condition."
9329180,9330860," So, yeah."
9330860,9338060," Essentially, we want our knot to be aware of truthiness."
9338060,9347420," So what I'm thinking is that the easiest way would be to just say equal to zero, I think."
9347420,9348940," Something like that."
9348940,9353740," Because essentially, if you have zero and it is equal to zero, it's going to become true."
9353740,9356620," If you have something that is not zero, right?"
9356620,9359100," So maybe negative number or positive number, it doesn't matter."
9359100,9360460," It's not equal to zero."
9360460,9361980," So it's going to be false."
9361980,9364300," So something like that is better."
9364300,9367980," So it's actual logical knot, I think."
9367980,9369900," It is actual logical knot."
9369900,9372460," So let's actually see if it works or not."
9372460,9377020," So I'm going to go and find the other places where we needed to have knots."
9377020,9378140," So this is another one."
9378140,9381020," This is where we sort of print the board."
9381020,9382860," And now it's a little bit better, I think."
9382860,9383820," Now it's a little bit better."
9383820,9387900," So I have, you know, the iterator, then the size."
9387900,9392140," I check whether, like, iterator less than the size."
9392140,9393580," And I take negative of that."
9393580,9398220," So basically, while it's greater or equal, right?"
9398220,9403100," If it's greater or equal, then basically skip this entire body, right?"
9403100,9405660," But if it's not, it's actually going to fall through."
9406540,9408220," I think that's the logic in here."
9408220,9411180," So let's actually double check if this entire thing is going to work."
9411180,9417260," So this is basically like a loop that tries to compute the next state of the board, right?"
9417260,9419500," So we don't really want to have it right now."
9419500,9421180," Let's just print the board."
9421180,9424220," Does printing the board accept any parameters?"
9424220,9425100," No, it does not."
9425100,9426620," As you can see here, we have nothing."
9426620,9431100," So, and let's just try to compile this entire thing."
9431100,9436140," So, of course, the ROM is located, the assembler is located in here."
9436140,9437260," There we go."
9437260,9438940," So we managed to compile everything."
9438940,9440380," 453 bytes."
9440380,9442540," 69% used."
9442540,9443820," 0, 69% used."
9443820,9444140," Nice."
9444140,9447900," But anyway, we're slowly getting to 1%."
9447900,9451260," We're slowly getting to 1%, so I don't know."
9451260,9453740," We're getting bloated, more bloated, and bloated."
9453740,9455500," So we have to be really careful with that."
9455500,9458780," So I suppose we only have like 64 kilobytes, right?"
9458780,9466060," So, and I suppose like the program itself is also stored in the memory."
9466060,9472540," So that means the more code we write, the more code we write, the less data we can store."
9472540,9477660," So something to think about, I guess, right?"
9477660,9478540," Something to think about."
9478540,9483420," And also maybe the code part is also limited to some extent."
9483420,9487820," I don't know the actual technical limitations of the UCN virtual machine, right?"
9487820,9490460," So I can look them up, but I'm too lazy right now."
9490460,9491180," So he cares."
9491180,9496940," I'm not going to care until I actually bump into the limitation, right?"
9496940,9499820," Before that, I'll just, you know, keep piling code."
9499820,9505740," So after that, after we compile this into, I think I'm going to do UCN CLI, right?"
9505740,9510380," UCN CLI, goal, ROM, and boom, it's working."
9510380,9511420," It's working."
9511420,9514700," So now we have a proper not, right?"
9514700,9515660," We have a proper not."
9515660,9522140," And now when I look at that specific loop, it doesn't fucking blow my brain off, right?"
9522140,9523500," Because at least I can read it."
9523500,9533420," It's kind of an interesting idea that essentially UCN implements like a bare minimum of instructions."
9533420,9538860," And if there is an instruction that can be implemented in terms of other instructions,"
9538860,9539740," it doesn't do that."
9539740,9542140," It's kind of interesting, right?"
9542140,9545660," So like there is no such thing as not because you can implement it like that."
9545660,9548620," There is no decrement because you can just add a negative number."
9549500,9553260," Right, so it's kind of funny."
9553260,9554940," Like why would you need a sub-instruction?"
9554940,9559100," Yeah, so like you don't need a sub-instruction."
9559100,9560380," You don't need a sub-instruction."
9560380,9562220," Thank you, Mr. Botko, you're right."
9562220,9566300," And it's kind of cool."
9566300,9571100," And on top of that, the language gives you a system of macros."
9571100,9578940," So you can basically wrap these compound instructions into new instructions if you want to."
9578940,9581660," Right, so that's kind of cool, I think."
9581660,9582780," I think that's pretty cool, actually."
9582780,9588540," But there is sub-instruction."
9588540,9589980," There is sub-instruction, I don't remember."
9589980,9592780," Wait, oh yeah, there is sub-instruction."
9596780,9601260," So the author of the program was actually trolling me."
9601260,9604220," Okay, the author of the program was actually trolling me."
9604220,9608700," I suppose, yeah."
9608700,9613420," Anyway, so well, in that case, we're going to continue doing that."
9613420,9615660," Like in that case, we're going to literally continue doing that."
9615660,9621740," If the author said so, right, so we're going to do that, right?"
9621740,9623820," Because that's the official, that's the canon."
9623820,9625420," That's the canon way of doing that."
9626780,9630620," All right, so let's go ahead and see what we can do in here."
9630620,9633580," So here, we're obviously iterating through all of the cells, right?"
9633580,9635420," So two-dimensional loop and everything."
9635420,9645420," And so here, I basically came up with a function that I expect to compute the next state of the cell."
9645420,9650780," So essentially, it's going to accept the row and column, right?"
9650780,9657580," And then look at the current cell in the board, right?"
9657580,9660700," Look at the neighbors, look at the neighbors around and stuff like that."
9660700,9668700," And then it's going to write the next state of that cell into the backboard, right?"
9668700,9674940," So that specific function is supposed to just look at the current cell and compute the next cell in the backboard."
9675500,9683100," And then we're going to separately have a thing that basically copies backboard back into the original board so you can repeat the process, right?"
9683100,9684780," So this is basically what we're going to have here."
9684780,9689340," Right, that's going to be the idea."
9689340,9701660," So yeah, and the first thing we want to do, we want to know whether we are dead or are we alive."
9701660,9709660," Because depending on whether we are dead or alive, we're going to just actually treat the neighbors differently, right?"
9710300,9721180," So if we are dead, we are ignoring our neighbors, if we are alive, I don't know, we're bothering our neighbors."
9721180,9728780," So let's duplicate, let's duplicate this entire thing, and so board get cell."
9728780,9731180," Is it just get cell?"
9731180,9734700," Yeah, so it's a board get cell, board get cell."
9734700,9741100," And if it's true, right, so that is going to skip this entire block."
9741100,9745020," So that means we're only going to get into this block if we are dead."
9745020,9753580," So and we can sort of like a short circuit the execution of this entire thing, like so, where short circuit is there."
9753580,9756220," So that means here we have alive."
9756220,9761020," So essentially, it turns into sort of like a if else, right?"
9761020,9767180," So here is the, you know, then branch, this is the then branch, and this is the like else branch."
9767180,9770140," But I think it's more like unless, right?"
9770140,9773260," Because if it's true, it's going to go in here, right?"
9773260,9774540," So it's going to go in here."
9774540,9777500," So basically like that."
9777500,9783180," So after that, we probably want to take a look at the neighbors, right?"
9783180,9786860," So we're going to duplicate this entire thing."
9786860,9790620," Yet again, we're duplicating it, and then we're going to count the neighbors."
9790620,9791820," We're going to count the neighbors."
9791820,9797660," And so if we are dead, a game of life."
9797660,9800700," So I actually need Wikipedia, by the way."
9800700,9806860," Game of life, Wikipedia, maybe conveys a game of life."
9809740,9811260," Conveys game of life."
9811260,9817820," So if the dead cell with exactly three neighbors becomes alive as of reproduction."
9817820,9818300," Okay."
9818300,9824780," So essentially, we count the neighbors and we want to compare it whether it's equal to three or not."
9824780,9825020," Right."
9825020,9826300," So this is going to be EQ."
9826300,9833260," So if it's true, if it's false, nothing is going to happen."
9833260,9833580," Right."
9833580,9836620," So that means, right."
9836620,9840380," So new cell dead."
9840380,9842140," It stays dead."
9842140,9842460," Right."
9842460,9845020," New cell stays dead."
9845020,9846860," Jump to R."
9846860,9852380," Otherwise, new cell alive."
9852380,9855260," So that's basically what we're doing here."
9855260,9856780," that's basically what we're doing here."
9856780,9864860," So the question is how exactly we're going to do that."
9864860,9870060," We already kind of have a row and column at the top of the stack."
9870060,9879180," So that means we may want to like put one in here."
9879180,9879420," Right."
9879420,9886380," So we're pushing one and we need something like a backboard set cell."
9886380,9887740," Right."
9887740,9894700," So and effectively, backboard set cell is a function that is going to accept a row and column."
9894700,9899260," And we do have that thing at the top of the stack and the cell."
9899260,9900220," Right."
9900220,9904780," And it's just going to set that entire thing like so."
9904780,9913980," Otherwise, otherwise, we setting zero in this entire thing."
9913980,9915660," Right."
9915660,9916380," Something like this."
9916380,9919020," So that's pretty cool, isn't it?"
9919020,9921340," And that's pretty cool."
9921340,9923260," So we're essentially dead."
9923260,9924540," So we look at the neighbors."
9924540,9930380," If it's exactly three, we set, you know, backboard set cell to one."
9930380,9931740," Otherwise, we set it to zero."
9931740,9934220," Very simple, very straightforward."
9934220,9940220," So essentially, we're looking into four possible situations, four possible situations."
9940220,9941820," Right."
9941820,9949420," And now, if you are alive, if you are alive, you need to take a look at the neighbors as well."
9949420,9957420," And I suppose neighbors has to be if two or three, you stay alive."
9957420,9962380," If neither two or three, you become dead effectively."
9962380,9964940," So this one is going to be a little bit more complicated."
9964940,9970220," I think it is going to be a little bit more complicated because we counted the neighbors."
9970220,9982780," So if it's equal to zero, all right, if it's equal to zero, we have to also check it if it's equal to three."
9982780,9986060," So what's the easiest way to actually do that?"
9986060,9991420," So let me take a look at the state of the stack."
9991420,9991740," All right."
9991740,9994780," So on the stack, we have a row column."
9994780,9996220," Then we do dupe two."
9996220,9999500," So that works like this."
9999500,10004300," Then we count neighbors and we get neighbors in here."
10004300,10008700," Then we do zero two and we do equals."
10008700,10009020," Right."
10009020,10011100," So that gets rid of this entire thing."
10011100,10014460," And we have just like the first condition."
10014460,10016140," So condition one."
10016140,10019980," So what I'm thinking is that is there a QK?"
10019980,10025260," Is there a QK that basically keeps the things?"
10025260,10027180," Well, maybe not necessarily."
10027180,10027420," Right."
10027420,10028700," So maybe not necessarily."
10028700,10034380," What if after we counted the neighbors, we just dupe the neighbors?"
10034380,10034620," Right."
10034620,10037740," So now we have this amount of neighbors."
10037740,10040300," So then we check this thing."
10040300,10040700," Right."
10040700,10042460," Which is the first condition."
10042460,10043260," Condition one."
10044300,10049900," Then I suppose we can swap this entire thing."
10049900,10051420," We can swap this entire thing."
10051420,10052460," And this is what we get."
10052460,10053980," We get neighbors again."
10053980,10057180," And we can compare this entire thing to three."
10057180,10058620," Right."
10058620,10059660," And yeah."
10059660,10061020," So we push this entire thing."
10061020,10063740," And this becomes the second condition."
10063740,10065500," And then we OR them together."
10065500,10067260," I have no idea how you do OR."
10067260,10069420," So there is an OR."
10073740,10074140," Yeah."
10074140,10075340," So we need to do OR."
10075340,10080220," So we do OR and we end up with this specific condition."
10080220,10083420," Isn't that a poggers minor friend?"
10083420,10084860," What do you guys think?"
10084860,10086700," Is that a poggers line?"
10086700,10090300," So here's the thing."
10090300,10090620," People."
10090620,10094380," When people start working with concatenative languages for the first time."
10094380,10097900," It really blows their mind."
10097900,10098140," Right."
10098140,10102940," Because you have to sort of like keep track of the state of the stack."
10102940,10104060," And it's really hard."
10104060,10105820," So because of that."
10105820,10110700," Don't be ashamed of actually like visually keep track of the stack."
10110700,10113660," Maybe only on the paper or in the comments like that."
10113660,10115580," Or in the comments like that."
10115580,10117340," It really helps a lot."
10117340,10119020," Don't feel ashamed about that."
10119020,10121420," Because I do that all the time."
10121420,10123180," And I'm the author of Ports."
10123180,10125500," Right."
10125500,10132540," It's like similar to how there is no shame in keeping track of pointers and references."
10132540,10134300," when you're implementing a linked list."
10134300,10135660," Right."
10135660,10140220," Even the most like prominent computer scientists."
10140220,10142380," When they need to implement linked lists."
10142380,10146140," Quite often like keep track of the references on a piece of paper."
10146140,10147820," Because it's goddamn fucking hard."
10147820,10148860," Right."
10148860,10150860," So it's totally normal."
10150860,10151660," It's totally normal."
10151660,10155500," Like over time you kind of develop a mental model."
10155500,10158380," Where you don't really have to do that anymore."
10158380,10161020," You can kind of like come up with the simple patterns."
10161020,10163660," That you can just like reuse over and over again."
10163660,10165580," So you don't have to like keep track of the stacks."
10165580,10167180," Like anymore."
10167180,10175900," Very funny."
10175900,10176460," Very funny."
10176460,10177580," Anyways."
10177580,10179100," So."
10179100,10180140," And for example."
10180140,10182380," I just wrote this piece of code."
10182380,10185260," And I don't know if I made any mistake in here."
10185260,10188460," I don't know if I made any mistake in here."
10188460,10189500," So what I want to do."
10189500,10190780," I want to actually double check that."
10190780,10193180," So let's actually go through all of this shit yet again."
10193180,10195820," So I know that at the top of the stack."
10195820,10197500," Right now we have row and column."
10197500,10199820," I duplicate this entire thing."
10199820,10200300," Okay."
10200300,10201020," Cool."
10201020,10203420," Then I do count neighbors."
10203420,10203660," Right."
10203660,10205260," So I do n neighbors."
10205260,10205900," Cool."
10205900,10208060," Then I duplicate the neighbors."
10208060,10208620," There we go."
10208620,10210220," I've got duplicated neighbors."
10210220,10211900," Then I push 0 to in here."
10211900,10214460," Then I check if they're equal."
10214460,10214860," Right."
10214860,10217820," So this is one thing that I've gotten here on the stack."
10217820,10219180," That's cool."
10219180,10221980," Then I swap whatever I have on the stack."
10221980,10225100," So that means I move this thing below this thing."
10225100,10225980," Very cool."
10225980,10228140," Then I push 0 to 3 on the stack."
10228140,10229340," So I've got that."
10229340,10231100," I check if they are equal."
10231100,10232380," So I've got that."
10232380,10234300," That is very cool."
10234300,10236380," So and after that I do aura."
10236380,10240700," And that allows me to combine this thing into a single condition like that."
10240700,10244380," So basically I treat this entire thing as a single element on the stack."
10244380,10244940," Right."
10244940,10245900," So and there you go."
10245900,10247900," I've got a condition on top of this stack."
10247900,10249900," So that's pretty cool."
10249900,10251900," So and if it's true."
10251900,10252860," Right."
10252860,10253580," If it's true."
10253580,10261180," That means here we have to set the new cell."
10261180,10263180," Next cell to alive."
10263180,10263420," Right."
10263420,10267100," Because we are alive ourselves."
10267100,10269020," We are alive ourselves."
10269020,10271740," And this entire thing is within two and three."
10271740,10273020," It's two or three."
10273740,10275580," So that means it has to be kept alive."
10275580,10277340," And in fact, I can just right away."
10277340,10280380," Do this backboard set cell."
10280380,10282380," And I don't have to worry about that."
10282380,10283980," Otherwise, what I have to do."
10283980,10284780," I have to keep it."
10284780,10286620," I have to keep it zero."
10286620,10289980," So it has to be zero to jump to our boom."
10289980,10292700," Can your C do that?"
10292700,10294700," So that's pretty cool."
10294700,10295820," So here is an Excel."
10295820,10301020," So interestingly, interestingly."
10301900,10305580," Yeah, that's actually the computation of the next state of the board."
10305580,10306700," Right."
10306700,10310620," So essentially, I just iterate each individual coordinate."
10310620,10313100," And for them, I do next cell."
10313100,10318860," And the next cell does all of this checking of different states and stuff like that."
10318860,10322540," And computes all of that stuff into the backboard."
10322540,10329340," So interestingly here, what we have to do, we have to implement it."
10329340,10329580," Right."
10329580,10332700," So we don't know how to set things into the into the backboard."
10332700,10341820," So first thing we need to do, I suppose we need to get a row in column to be here."
10343020,10345180," I think that's the thing we have to do."
10345180,10351020," And I'm pretty sure that to do that, we have to use the rot opcode."
10351020,10352300," I think that's what we have to do."
10352300,10356780," But I'm not really sure if rot opcode works exactly as that."
10358300,10363580," So let me take a look at the visual representation of the opcodes."
10363580,10366460," So here is the language."
10366460,10369500," Where are opcodes?"
10369500,10370620," Where is the rot?"
10372860,10383180," So you essentially take this thing and move it at the top."
10383180,10391980," So rot is probably not going to work for us that easily because it basically does that."
10391980,10395580," What if we do another rot?"
10395580,10398540," What if we do another rot?"
10398540,10401740," I think that should be sufficient."
10402380,10403820," I think that should be sufficient."
10403820,10405420," Right."
10405420,10411660," So just let me double check if I understand everything correctly."
10411660,10417900," So essentially, we take a, the one that is like below the first two at the top of the stack,"
10417900,10419420," and we bring it to the top."
10419420,10420780," So that's basically what it is."
10420780,10422780," We just like bring this thing to the top."
10422780,10424780," And that's basically the rot operation."
10424780,10428300," So the first rot is going to bring that to the top."
10428300,10429020," Okay."
10429020,10434300," And second rot is going to bring a column to here."
10434300,10434860," There we go."
10434860,10435500," That's pretty cool."
10435500,10442860," And essentially, we need to convert that into an index or into an offset within the board."
10443340,10447420," In fact, we already have a code that does that in a board get cell."
10447420,10450460," Let me find that."
10450460,10451340," So here it is."
10451340,10455740," Here is the code that actually performs all of that."
10455740,10465580," But that code, on top of just computing the, you know, the offset, it also reads this stuff from the board."
10465580,10469740," So we need to factor out this entire thing."
10469740,10469980," Right."
10469980,10470940," We need to factor out."
10470940,10472620," So I think."
10472620,10475660," Yeah."
10475660,10476380," I think."
10476380,10479660," So it returns."
10479660,10482540," Like, I'm not really sure why do we do swap in here."
10482540,10486380," But maybe that's sufficient enough."
10486380,10488780," So let me actually see what is going on here."
10488780,10489980," So when we do swap."
10489980,10490860," Right."
10490860,10492780," So we just swap this thing around."
10492780,10493820," We push size."
10493820,10495980," We multiply, multiply size."
10495980,10498220," And then we add this entire thing."
10498220,10500140," We add this entire thing."
10500140,10501420," Okay."
10501420,10502460," And then."
10502460,10505820," Ah, I see."
10505820,10506220," I see."
10506220,10511420," So then we add zero."
10511420,10512220," Right."
10512220,10513260," Then we add zero."
10513260,10519900," And then we swap it because we need to have like a short that represents the offset."
10519900,10521580," That makes sense."
10521580,10524940," So and only then we're adding the board."
10524940,10527180," We're adding the board and then reading it."
10527180,10536460," So the whole thing that computes the offset is actually this up until when we push the board."
10536460,10537020," Right."
10537020,10539020," So up until that we push the board."
10539020,10540380," How can I do that?"
10540380,10542540," So let's call it board of sets."
10542540,10546300," So here it accepts the column and it returns the offset."
10546300,10555340," So maybe there is a, you know, how to say that kind of like a convention that indicates"
10555340,10558540," that this is like a U16."
10558540,10561340," I don't know the conventions of this language."
10561340,10562300," So I apologize."
10562300,10564700," I just make up my own conventions."
10564700,10564940," So."
10564940,10568780," So it is what it is and it isn't what it isn't."
10568780,10569020," Right."
10569020,10570620," So this is basically a short."
10570620,10571900," Right."
10571900,10572140," So."
10572140,10575580," This is basically a short."
10575580,10576860," I kind of like this notation."
10576860,10583900," So that should allow us that should allow us to do the following thing where we just do."
10584540,10584940," Okay."
10584940,10586940," Board of sets."
10586940,10587820," Right."
10587820,10589580," So this is the board of set."
10589580,10591500," So here's the role called board of set."
10591500,10594780," Then we take the actual board in here and we're loading it up."
10594780,10595100," Okay."
10595100,10598620," So and this thing is now more generally useful."
10598620,10599580," Right."
10599580,10604540," More generally useful."
10605340,10609740," I think because now we can use it with the backboard."
10609740,10610220," Right."
10610220,10611900," So now we can use it with the backboard."
10611900,10619740," So as you can see, I over abstracted board get cell a little bit."
10619740,10625500," So apparently there was some useful code that could be factored, factored out, out of that function."
10625500,10627020," Right."
10627020,10628460," So and I fixed that."
10628460,10628700," Right."
10628700,10629420," So I fixed that."
10629420,10633580," So let me, let me go here."
10634380,10635900," So we've got that."
10635900,10638620," So now I can do board of set."
10638620,10642540," Then I want to push actually backboard, right?"
10642540,10643500," Is it backboard?"
10643500,10645900," I think it is backboard, in fact."
10645900,10647500," So here's the backboard."
10647500,10653100," And then I do add to and I, and I suppose need to load up."
10653100,10656700," No, I actually don't have to load up anything."
10656700,10660780," I can just do STA."
10660780,10662380," Right."
10662380,10666380," And STA expects the point at the top of the stack."
10666380,10669980," STA expects the point at the top of the stack."
10669980,10673100," So I think that's the case, but we can always check."
10673100,10675660," I think that's the whole implementation of this thing."
10675660,10677100," I'm pretty sure."
10677100,10680540," I'm pretty sure that's the whole implementation of this thing."
10680540,10685340," That is very progress."
10685340,10687260," So let me sip my tea."
10687260,10697420," Now."
10702700,10703500," Let me see."
10703500,10704620," Let me see."
10704620,10706700," Uxn.c."
10706700,10709500," How do you do STA?"
10709500,10710940," So STA."
10710940,10711980," Yeah."
10711980,10714540," So the top of the stack is T2."
10714540,10719580," So that means it really takes the absolute address, like two bytes of the absolute address."
10719580,10721260," And then it takes L."
10721260,10724060," And if I remember correctly, L is the third value."
10724060,10724380," Right."
10724380,10729340," So basically we take T2 and then we take the L below it."
10729340,10730940," So that's basically how it works."
10730940,10732860," Right."
10732860,10737820," So, and because of that, it works out kind of naturally."
10737820,10740540," It works out kind of naturally."
10740540,10749660," And funny enough, like we could have maybe accepted them in a right order right away."
10749660,10751500," So we didn't have to do rot rot."
10751500,10758140," But then we'd have to, we'll still have to do rot rot in here."
10758140,10758540," Right."
10758540,10759820," We still have to do it in here."
10759820,10763100," So we might as well just like do it inside of the function anyway."
10763100,10764940," Right."
10764940,10768940," So let me actually compile everything and see if I didn't, I didn't make any mistakes."
10768940,10770220," Right."
10770220,10774540," So invalid token, board of set."
10774540,10774780," Right."
10774780,10776140," So here's the board of set."
10776140,10776700," Yeah."
10776700,10777180," There we go."
10777180,10781500," So board of set."
10781500,10786540," So there we go."
10786540,10790220," You don't even need reporting of the location in here."
10790220,10795020," You just like, you see incorrect token and you just search through each individual instance"
10795020,10797180," of that incorrect token and you just fix that."
10798300,10800780," Because that was the, that was the idea of it."
10800780,10801100," Right."
10801100,10802460," So maybe, I don't know."
10802460,10808220," To be fair, the syntax of the whole language is actually simple enough that you don't really"
10808220,10815100," need like, like you don't even have that much of a room for making a syntactical mistake."
10815100,10817980," If you know what I mean, because it's just a sequence of tokens."
10817980,10818700," Right."
10818700,10822940," So if any mistakes you will make, they will appear only in runtime, I suppose."
10822940,10824220," Right."
10824220,10826860," They will only appear in the runtime."
10827660,10830860," What's funny is that like, we can try to do this entire thing."
10830860,10831100," Right."
10831100,10836060," So we can just try to do this entire thing and run it and see if it doesn't have any errors."
10836060,10836300," Right."
10836300,10837660," It doesn't produce any errors."
10837660,10838780," So it doesn't sec fold."
10838780,10841740," But I mean, I don't know, probably this thing doesn't like never sec folds."
10841740,10843420," Right."
10843420,10847260," So we don't really know if we manage to compute the next state."
10847260,10851900," So we probably have to print the board."
10851900,10864860," So we can print the board, but it's not going to help because we are printing the previous state of the board."
10864860,10866140," Right."
10866140,10868300," So we're essentially printing the previous state of the board."
10868300,10870300," So it's not particularly helpful."
10870300,10872380," It is not particularly helpful."
10872380,10881900," What we need to do, we need to actually copy the backboard into the main board and then do the print."
10882780,10884380," So that's what we need to do."
10884380,10886860," So let's come up with the operation."
10886860,10889180," I would call it maybe a flip board."
10889180,10889500," Right."
10889500,10891820," So flip board, it's not accepting anything."
10891820,10893180," It's not returning anything."
10893180,10898140," What it's going to do is it's going to iterate through the board as usual."
10898140,10903100," And it's going to copy the bytes from backboard into the original board."
10903100,10905260," So that's going to be basically the idea."
10905260,10905500," Right."
10905500,10907100," So that's going to be basically the idea."
10907100,10908700," Right."
10908700,10910300," So here we're doing that."
10910300,10914780," So and here at the top, we have basically row and column."
10914780,10918140," So we can quite easily just dupe to them."
10918140,10918460," Right."
10918460,10919660," So we dupe to them."
10919660,10922220," So we get that."
10922220,10924300," And then we can do board of set."
10924300,10927740," Man, board of set is actually such a cool function."
10927740,10929580," Right."
10929580,10934220," So, yeah, maybe I'm going to get rid of the board get cell."
10934220,10934540," Right."
10934540,10936620," And it's going to be basically like board of set."
10936620,10942220," And then I'm going to push the specific board that I want to read or write or something like that."
10942220,10942460," Right."
10942460,10944460," So here we do board of set."
10944460,10944780," Right."
10944780,10946540," So here we have board of set."
10946540,10952380," And essentially, first thing I want to do, I probably want to read the backboard."
10952380,10955340," So let me duplicate that specific of set."
10955340,10955580," Right."
10955580,10961180," Let me duplicate that specific of set and push the backboard backboard."
10961180,10963420," I'm pushing the backboard."
10963420,10970140," By the way, I should not forget to do increments and updates and stuff like that."
10970140,10975820," To be fair, to be fair, I think I'm a little bit overcomplicating this entire thing because"
10976780,10983420," when I'm copying one board into another, I don't really care about the shape, about the specific"
10983420,10985020," shape of that board."
10985020,10989420," So I might as well just iterate that thing as a continuous buffer."
10989420,10989580," Right."
10989580,10993820," So I don't need to iterate over like rows and stuff like that."
10993820,10995580," So let me let me see."
10995580,10997180," So essentially, I have 10."
10997180,10997420," Right."
10997420,11002060," So if I multiply 10 by 10, I have that in hexadecimal, it's 64."
11002060,11002380," Right."
11002380,11003260," So that's pretty funny."
11003260,11007420," So essentially here I can do 64."
11007420,11007740," Right."
11007740,11010940," So I'm just iterating and I already have the offset."
11010940,11016060," So I already have the offset."
11016060,11016300," Right."
11016300,11024140," I usually need nestiness here when I'm printing something or when I'm competing the next state"
11024140,11026620," because I need to look around the neighbors."
11026620,11035100," Though I could still do not nested version and then recover rows and columns from the index."
11035100,11036060," Right."
11036060,11040380," So I could do the division and mod, but mod is a pain in the ass in UXUN."
11040380,11042380," So probably don't want to do that."
11042380,11044620," Don't really want to go into the mod territory."
11045180,11049660," So, yeah, so it's better to do nestiness in here when you do care about the shape."
11049660,11053260," But when we don't care about the shape, it's like easier to just like do it like that."
11053260,11055740," I think, I think, I think, I think."
11055740,11060540," Anyways, so we've got the offset and here we probably want to duplicate it."
11060540,11060780," Right."
11060780,11062860," So I just duplicated the offset."
11062860,11065660," Then I'm going to push the backboard."
11065660,11066620," Right."
11066620,11069260," Backboard."
11072060,11077420," So the offset of this thing is rather interesting, actually, because it has to be two bytes."
11077420,11078780," Right."
11078780,11079820," It has to be two bytes."
11079820,11087820," So that means to actually get the proper set, I have to do zero swap."
11087820,11090780," Right."
11090780,11091580," Zero swap."
11091580,11095020," So I duplicated it, then put a zero, then swapped it around."
11095020,11096540," And this is the proper address."
11096540,11097740," And then I do add to."
11097740,11099180," Right."
11099180,11101260," So board get sell."
11101260,11101580," Right."
11101580,11103340," So let me find it."
11103340,11106140," Board get sell."
11106140,11106540," Yeah."
11106540,11106780," Yeah."
11106780,11106940," Yeah."
11106940,11107260," Yeah."
11107260,11107580," Yeah."
11107580,11107980," Yeah."
11107980,11107980," Yeah."
11107980,11110380," So offset is actually two of these things."
11110380,11112060," Yeah."
11112060,11113340," Maybe it's fine."
11113340,11114380," Maybe it's fine."
11114380,11115260," Maybe it's fine."
11116700,11118940," So we're flipping the board."
11118940,11121100," We add all of that together."
11121100,11127180," So that means we have a, you know, plus backboard."
11127180,11129740," And after that, we want to do LDA."
11129740,11129980," Right."
11129980,11131180," We want to do LDA."
11131180,11136860," So that means this entire thing essentially turns into the value of X."
11136860,11138540," So this is basically the sell."
11138540,11140700," This is basically the sell."
11140700,11141820," So we've got the sell."
11141820,11143980," Might as well maybe keep this thing like that."
11144620,11145180," Okay."
11145180,11145980," So I've got the sell."
11145980,11149340," I need to copy offset from here."
11149340,11151020," I think this is over."
11151020,11152540," I'm pretty sure."
11152540,11154380," If I remember my concatenation."
11154380,11154700," Yeah."
11154700,11155180," There we go."
11155180,11162300," So basically over is like dupe, but it copies the thing like over that thing."
11162300,11162860," Yeah."
11162860,11163980," So we do over."
11163980,11166300," So that's the state of the stack we have."
11166300,11167900," That's the state of the stack we have."
11167900,11170540," We do this thing yet again."
11170540,11172300," So that creates."
11172300,11173900," So there is a very interesting thing."
11173900,11175100," So what is nip?"
11175100,11180460," I remember nip was something, something interesting."
11180460,11183900," Oh, removes behind the thing."
11183900,11186460," So maybe I was like, yeah, I just don't remember."
11186460,11187420," Okay."
11187420,11188940," So we'll get that thing."
11188940,11193180," Then I do board and I do add two."
11193180,11198380," So I have a proper offset for the second board, right?"
11198380,11204940," So I have a proper offset for the second board, which basically allows me to do that."
11206620,11209100," And effectively, I just end up with this thing."
11209100,11213260," So with offset and I can just go ahead and implement this in that one."
11213820,11219980," And so let's call this offset, right?"
11219980,11221740," And yeah."
11221740,11226940," GotCooder, gotCooder."
11226940,11227740," It even looks nice."
11227740,11228460," Look at that."
11228460,11229020," Look at that."
11229020,11229980," It even looks nice."
11229980,11230540," I really like that."
11232140,11236860," Actually, actually, actually, actually, another interesting thing."
11236860,11244940," We can maintain offset as two bytes right away."
11246380,11253100," We can maintain offset as two bytes right away, which means we can do stuff like that."
11253100,11255820," Right."
11255820,11257580," And probably like that."
11257580,11262380," Except maybe, well, in case of not, right."
11262380,11268940," So, well, I mean, when we do this thing, we're going to end up with a single byte anyway."
11268940,11269500," Hopefully."
11269500,11270540," I'm not actually sure."
11270540,11272140," Are we going to end up with a single byte?"
11272140,11274380," Let me see."
11274380,11277500," So it's not obvious if we're going to end up with a single byte."
11277500,11279340," Yeah."
11279340,11282460," We're going to end up with a single byte because T is a single byte."
11282460,11282700," Right."
11282700,11287180," So regardless of the mode, whether it's a one byte mode, it's two byte mode."
11287180,11289980," You're going to end up with a single byte anyway for LTH."
11289980,11290220," Okay."
11290220,11291100," That's pretty nice."
11291100,11292620," Right."
11292620,11293740," So you do not."
11293740,11298380," So that means here you have offset, which is actually 16."
11298380,11298620," Right."
11298620,11300780," So that means you don't have to do that."
11300780,11301980," You don't have to do that."
11301980,11303340," And that makes it even simpler."
11303340,11305100," But here you probably want to do something like that."
11305100,11306940," Right."
11306940,11311500," So that simplifies it quite a bit, which is very cool."
11311500,11312540," Which is very cool."
11312540,11313180," I really like that."
11313180,11315500," So, yeah."
11315500,11317180," Here we compute the next board."
11317180,11317740," Right."
11317740,11320380," Then we want to flip the board."
11320380,11321420," We want to flip the board."
11321420,11323340," And then we want to print the board."
11323980,11330300," So maybe we can even factor out this thing like this next board."
11330300,11332460," Let me see."
11332460,11336860," So this is going to be Emacs next board."
11337980,11339420," I'm going to put this thing in here."
11339420,11344300," And this one is going to be GMP to R, GMP to R."
11344300,11345660," And boom."
11345660,11346140," There we go."
11346140,11351260," So here on reset, next board, flip board, print board."
11351260,11356140," We can even first print the board, then compute the next board, then flip the board and print it again."
11356140,11359180," So that means we're going to print actually two things in here."
11359180,11364540," But I would like to maybe separate them maybe by new lines, so they don't fuse together."
11364540,11370380," As far as I know, we have a break line, so we can do it like that."
11371020,11375740," So it's kind of cool that we developed like a whole vocabulary of actions."
11375740,11378060," And now I can just write my code like this."
11378060,11381020," And it's kind of hard to believe that this is assembly."
11381020,11382620," This is assembly level language, right?"
11382620,11388220," So if you come up with the proper vocabulary of things, it's just like, yeah, it's just like actions."
11388220,11390540," But we don't even know if that thing works, right?"
11390540,11391740," So we'll see."
11391740,11392060," We'll see."
11392060,11394300," Is it going to work?"
11394300,11395180," I have no idea."
11395180,11395580," Let's go."
11395580,11397260," And it didn't work."
11397260,11398380," Epic."
11399660,11401100," It didn't work at all."
11401100,11401820," I'm really happy."
11401820,11406780," So, well, I mean, technically we do have two boards, right?"
11406780,11409180," So here is the first board."
11409180,11410300," Here is the second board."
11410300,11415020," But it didn't actually compute the state of the next board whatsoever."
11415020,11415340," Okay."
11415340,11417420," So that's very interesting."
11417420,11421820," When I flip the board, when I flip the board."
11421820,11425980," So let me double check what is going on."
11427180,11427900," So here."
11427900,11434140," Of course."
11434140,11437900," Okay."
11437900,11440700," So I have to do probably dupe two."
11440700,11442780," First of all, I probably have to do dupe two."
11442780,11443180," All right."
11443180,11443820," All right."
11443820,11444220," All right."
11444220,11445180," Dupe two."
11445180,11448220," Then load blah, blah, blah."
11448940,11454140," So essentially what I do, I end up at the end of this endeavor."
11454140,11457420," I end up with just a cell, which is a single byte, right?"
11457420,11459340," So this is basically what I have."
11459340,11462060," So I end up with a single byte."
11462060,11467260," Now I have to, yeah, that's actually a little bit more complex."
11470220,11471900," It's actually a little bit more complex."
11471900,11475500," How can we do?"
11475500,11476620," Can I rotate?"
11476620,11482620," But rotate brings the below item."
11482620,11485580," It brings that from, no, no, maybe."
11485580,11488220," Know what?"
11488220,11488860," You know what?"
11488860,11493980," That thing with a single byte was actually kind of simpler, honestly."
11495980,11497740," I'm going to go with a single byte."
11497740,11499420," To be fair."
11499420,11500140," To be fair."
11500140,11501980," I think it was a little bit simpler."
11501980,11505180," So let's go back to simpler times."
11505180,11509180," Let's go back to simpler times, right?"
11509180,11513500," Where we just also do swap."
11513500,11515100," All right."
11515100,11520780," So we duplicate, then swap this thing."
11520780,11525420," Then essentially add two and then LDA."
11525420,11527740," And we end up with the cell."
11527740,11529260," All right."
11529260,11531980," So we end up with the cell."
11531980,11537020," So then we do over swap, then add two STA."
11537020,11539820," But then we do increment one, right?"
11539820,11542460," So I think that's a simpler situation."
11542460,11544300," That's the simplest situation."
11544300,11546700," Let me try to go through all of that one more time."
11546700,11556620," This, this, zero, swap, backboard, backboard."
11556620,11560380," And we end up with, let's call it pointer."
11560380,11563100," Then we read a cell out of that, right?"
11563100,11564620," So that's basically the first thing."
11564620,11566860," We can even put something like that."
11566860,11568220," We can even put something like that."
11568220,11569740," Right."
11569740,11572780," Because as far as now, the brackets are basically ignored, right?"
11572780,11574700," So the brackets are basically ignored."
11574700,11576620," Then we do over offset."
11576620,11579340," We repeat the whole thing, right?"
11579340,11581100," So then we do board."
11581100,11582060," Then we add it together."
11582060,11584300," Then we, right."
11584300,11586780," So we end up with a pointer at the end."
11586780,11589820," And we just store this entire thing."
11589820,11590380," Cool."
11590380,11593500," And we end up with something like this."
11593500,11595660," And then we increment the offset."
11595660,11599260," And we just jump around like so, right?"
11599260,11605260," So let me actually double check if UxC and Azam actually ignores this entire thing."
11605260,11607180," Yeah, I think I looked into that already."
11607180,11609580," Yeah, yeah, yeah."
11609580,11610940," So I remember looking into that."
11610940,11616700," So if the token starts with one of these things and the length of the token and token is one,"
11616700,11620140," if it's equal to one of these things, just break out of it."
11620140,11621580," Just literally ignore this token."
11622780,11624460," Right, so let me..."
11624460,11628620," So we don't know if it's going to fix the problem, right?"
11628620,11630700," So this is one of the problems that I noticed."
11630700,11633420," So maybe we're going to have more, right?"
11633420,11637260," So, but first, let's just see if it compiles, right?"
11637260,11639580," So let's just try to run this entire thing."
11639580,11641420," And we've got something."
11641420,11642060," We've got some..."
11642060,11643020," That's already better."
11643020,11644780," That's already better."
11644780,11645740," Look at that, right?"
11645740,11649260," So at least it's something new, right?"
11649260,11650460," At least it's something new."
11650460,11657420," We can now maybe don't flip the board."
11657420,11660380," What if I don't flip the board, right?"
11660380,11661580," So we print the board."
11661580,11663820," Yeah, no, no, no, no, no."
11663820,11666220," We don't do the next board."
11666220,11667100," We print the board."
11667100,11668860," We flip the board."
11668860,11674940," Which means that whatever we have in the backboard is going to be copied into the front board."
11674940,11677340," And then we print this entire thing, right?"
11677340,11681580," So that means in the front board, now we have nothing, right?"
11681580,11685980," So we know that there is no errors in any of these functions."
11685980,11691260," In fact, I can probably put something in here just in case in the backboard."
11691260,11694060," Let's put like this kind of line."
11694060,11697340," And yeah, that copied perfectly."
11697340,11699740," That copied perfectly into the front board."
11699740,11707660," So that means in none of those functions, right, that are not commented out, we don't have any errors."
11707660,11710380," So the error is within the next board."
11710380,11713740," The error is somewhere here, which is nice."
11713740,11716700," So we narrowed down the, you know, the error."
11716700,11722540," We narrowed down the bug, which is quite important, which is quite important."
11722540,11723420," You know what?"
11723420,11726940," I ran out of tea chat, chat, chat, chat."
11726940,11729900," I ran out of tea already the fuck."
11729900,11733260," Actually, I still have a little bit more tea."
11733260,11733900," So just a second."
11733900,11741260," Okay, we can actually go for like more like for 10 minutes now."
11741260,11746380," So do we have any errors in here?"
11746380,11748540," Probably not."
11748540,11750700," Probably not."
11750700,11757180," Because that's basically the usual, the usual, you know, iteration over the board, right?"
11757180,11760380," So if I compare it with print board, so it's basically the same."
11760380,11765420," So I suppose the error is somewhere within the next cell."
11765420,11771660," In fact, one of the things we can do, we can factor out this entire thing."
11771660,11774380," We can factor out this entire thing, like so."
11774380,11777340," And then say, okay."
11777340,11780380," Board of set."
11780380,11782540," Please compute board of set."
11782540,11785180," Maybe, maybe even something like this."
11785180,11788700," Always set one to the backboard."
11788700,11789980," No matter what it is."
11789980,11791180," Always set one."
11791180,11794140," And then basically jump to R, right?"
11794140,11795420," So let's just try to do that."
11795420,11799340," So that means no matter what it is within the board, right?"
11799340,11801420," It's going to be filled with once."
11801420,11806860," And that will confirm that there is no at least error in this function."
11806860,11808140," Right?"
11808140,11809740," That will confirm at least that."
11809740,11810460," Which is good."
11810460,11811020," Which is good."
11811020,11812860," All right."
11812860,11813740," So, okay."
11813740,11814860," That got confirmed."
11814860,11815660," That got confirmed."
11815660,11817980," So the error is somewhere here."
11817980,11820620," The error is somewhere here."
11820620,11823580," And honestly, I'm not fucking surprised."
11824940,11829580," To be fair, I'm not fucking surprised that the error is somewhere goddamn here."
11829580,11830860," Because look at that code."
11830860,11832140," Look at it."
11832140,11833900," What the fuck is this shit?"
11833900,11835820," Anyways."
11835820,11837580," You got the idea, right?"
11837580,11838460," You got the idea."
11838460,11842140," So board get cell, right?"
11842140,11842780," So board get cell."
11842780,11844140," I'm pretty sure it works correctly."
11844140,11846460," We already double checked all that, right?"
11846460,11848060," Okay."
11848060,11852780," So we duplicate the row and column."
11852780,11859260," And board get cell does in fact consume the whole thing, right?"
11859260,11861820," So board offset consumes that."
11861820,11864060," We consume that and we get the cell afterwards."
11864060,11865820," So everything seems to be all right."
11865820,11868460," And see, any problems with any of that stuff."
11868460,11872940," Honestly, there is some fucky-wocky going on in here."
11873500,11874620," In all fairness."
11874620,11879500," Why we duplicate count neighbors?"
11879500,11883340," Next cell is supposed to consume row and column in its..."
11883340,11885980," Well, yeah, that's fine."
11885980,11890780," It's so row and column is going to be fully consumed by backboard set cell."
11890780,11891100," All right."
11891100,11892940," It's going to be fully consumed by that."
11892940,11895420," That thing does in fact fully consume that."
11895980,11897020," All right."
11897020,11898860," So we do just that."
11898860,11900700," And everything seems to be okie-dokie."
11900700,11904860," All right."
11904860,11907100," So let me think."
11907100,11911820," So if this thing is alive, it is going to jump over."
11911820,11913340," It is going to jump over."
11913340,11913980," Okay."
11913980,11915580," So then we count the neighbors."
11915580,11916780," Then we count the neighbors."
11916780,11918140," Then we duplicate this."
11918140,11920940," And I think we do some stuff."
11920940,11922380," Right."
11922380,11924300," And if it's true."
11924300,11927500," What the fuck is zero two in here?"
11927500,11931260," Who put zero two in here?"
11931260,11935260," Did I put that accidentally there?"
11935260,11936460," That's supposed to be zero."
11936460,11937100," What the fuck?"
11944540,11948540," Everyone should try implementing the text editor at one point or other."
11948540,11950860," Have you seen my text editor?"
11950860,11960620," I'm not sure if it still works, by the way."
11960620,11961020," Let me see."
11961020,11965020," Yeah, it doesn't work anymore, unfortunately."
11965020,11967180," So it doesn't have glue."
11967180,11969420," Can I install glue?"
11969420,11971660," Or maybe you have to..."
11973900,11976780," Let me try to build and see what kind of stuff I have in here."
11976780,11977660," So we have glue."
11977660,11979420," Yeah."
11979420,11980540," There's no glue in here."
11980540,11981180," Look at that."
11981180,11983100," ""apt-search-glue""."
11983100,11986620," Why do I use glue in here?"
11986620,11987260," I don't remember."
11987260,11989900," So there's a ""lib-glue-dev""."
12001260,12001900," Ah, shit."
12001900,12010540," Drama queen of text editors."
12010540,12011820," Yeah."
12011820,12013740," That is the drama queen of text editors."
12013740,12016460," Yeah."
12016460,12017260," We're almost there."
12017260,12018300," We're almost there."
12018300,12019180," We did it."
12019180,12020060," Can I build it now?"
12020060,12022540," Yo!"
12022540,12023820," I think I will be able to build it."
12023820,12024460," Look at that."
12026140,12026540," All right."
12026540,12027980," So let me try to do that."
12027980,12030380," Okay."
12030380,12033020," This is the text editor."
12033020,12035020," This is the text editor."
12035020,12038700," So by default, it supports, I think, C highlighting."
12038700,12040380," So you can just start typing."
12040380,12042060," And that's how it looks like."
12042780,12043740," And as you keep typing."
12043740,12050700," That's what basically happens."
12050700,12057020," So as far as now, there's also."
12057020,12057260," Yeah."
12057260,12059340," There's also file management."
12059340,12062700," Right."
12062700,12064220," So you can open files and stuff like that."
12064220,12065420," So you can navigate here."
12066460,12068540," So there's some shaders and yeah."
12068540,12070540," So there we go."
12070540,12072380," It's a dead text editor."
12072380,12075420," So obviously OpenGL is just shits with the errors."
12075420,12076700," I don't really understand why."
12076700,12078540," Right."
12078540,12080460," So if anyone is interested."
12080460,12081340," So here it is."
12081340,12083980," Dead."
12083980,12085660," I don't really actively develop it anymore."
12085660,12086140," But yeah."
12086140,12087900," So it stands for dramatic editing."
12088860,12090380," It's a very dramatic editor."
12090380,12090940," I'm telling you."
12090940,12093100," It's a very dramatic editor."
12093100,12097420," So I didn't use any like a text editor components."
12097420,12100380," Components like scintilla or whatever it is."
12100380,12100620," Right."
12100620,12102940," So it's like literally developed from scratch."
12102940,12105420," And rendering is done with OpenGL."
12105420,12107660," Well, I mean, I used this deal."
12107660,12110780," But I just used this deal as a glorified OpenGL initializer."
12110780,12112060," Because let's be honest."
12112060,12115740," Nobody uses SDL and like differently."
12115740,12118940," Everyone uses SDL as an OpenGL initializer anyway."
12118940,12119820," So yeah."
12119820,12122460," Right."
12122460,12123740," So let me put it in here."
12123740,12123980," So."
12123980,12128380," Yeah."
12128380,12129340," That's pretty cool."
12129340,12132380," So I wonder if this thing fixes the problem."
12132380,12132700," Right."
12132700,12134140," I wonder if that fixes the problem."
12134140,12134940," Maybe it doesn't."
12134940,12136620," So I'm not quite sure."
12136620,12137500," I'm not quite sure."
12137500,12138380," So that."
12138380,12138700," Yeah."
12138700,12140060," It doesn't fix the problem at all."
12140060,12142300," Doesn't fix the problem at all."
12142300,12143340," All right."
12143340,12146700," So I suppose the time has come to make a small break."
12146700,12148220," Chat, chat, chat."
12148220,12151100," The time has come to make a small break."
12151100,12156220," So and after the break, we'll try to figure out what the fuck is going on in here."
12156220,12162940," So it is very likely that the problem is somewhere within the function."
12162940,12165340," But I have not figured out what it is yet."
12165340,12167420," So, um, all right."
12167420,12171340," So let's see what the hell is going on."
12171340,12171580," Right."
12171580,12174380," What the hell is going on?"
12174380,12178460," So I'm using next cell correctly."
12178460,12178780," Right."
12178780,12181180," So I'm iterating pair of indices."
12181180,12181420," Right."
12181420,12183100," I'm duplicating this pair of indices."
12183100,12187180," And then I have next cell that in fact consumes that next cell."
12187980,12193420," So here I'm duplicating this entire thing and I'm instantly consuming it."
12193420,12196220," So let me actually just go through this entire stuff."
12196220,12197580," Right."
12197580,12198700," So I'm duplicating it."
12198700,12202220," I'm consuming it, getting the cell."
12202220,12202460," Right."
12202460,12204620," I'm consuming it, getting the cell."
12204620,12205900," And I already see the problem."
12205900,12209020," Damn."
12209020,12211260," Or do I already see the problem?"
12211260,12212140," I'm not really sure."
12212140,12213260," Because there is."
12213260,12214380," Yeah."
12214380,12219020," So maybe there is a condition in here and that thing consumes that cell."
12219020,12221020," So there's no really a problem in here."
12221020,12221980," So that's totally fine."
12221980,12226300," So at this specific point, we don't really have any problems."
12226300,12230220," Unless this jump does something weird in here."
12230220,12231100," But anyway."
12231100,12232780," So then I just do that."
12232780,12235980," That consumes the neighbors."
12235980,12237580," Then we push this thing."
12237580,12241820," And then we have this condition, which is consumed."
12241820,12243180," And that's totally fine."
12243180,12245020," All right."
12245020,12247580," And then we set one."
12247580,12249740," And we know that this thing works fine."
12249740,12251820," We know that this thing works fine."
12251820,12254620," And it consumes this thing to its entirety."
12254620,12255420," Right."
12255420,12257820," And then we jump back out of that."
12257820,12259980," So that should be fine, I think."
12259980,12261660," That should be fine."
12261660,12265420," So I'm just assuming that this thing consumes the value."
12265420,12266780," I think it consumes the value."
12267580,12272860," I found it's pretty unclear if this thing consumes the element on the stack."
12272860,12273820," So, all right."
12273820,12274700," Let me see."
12274700,12277420," I think what it does, it uses GCI."
12277420,12277900," Right."
12277900,12279260," So it uses the GCI."
12279260,12288700," So, and shift, if I'm not mistaken, it basically consumes that."
12288700,12289820," So, plus one."
12289820,12292220," When you do plus one, you actually do minus one."
12292220,12294220," So it does, in fact, consume the value."
12294220,12295740," I think it does."
12295740,12298140," Like, that shift indicates that straight up."
12298140,12307260," So, and I'm pretty sure the, you know, conditional lambda is basically implemented through GCI."
12307260,12309660," We can look into the assembler to confirm that."
12312860,12314140," So here's the, yeah."
12314140,12314140," So here's the, yeah."
12314140,12315500," So it's straight up GCI."
12315500,12324620," So I think it's like generally used for references and for lambdas as well."
12324620,12325420," So, yeah, yeah."
12325420,12328700," So it's, it basically has almost no like distinction."
12328700,12330140," It's, it's the same mechanism."
12330780,12333740," Uh, it's literally the same mechanism and it's part similarly."
12333740,12334940," Okay."
12334940,12338220," So then we have that."
12338220,12345980," Uh, and in both of the cases, we like reach this thing and we jump out of the next cell."
12345980,12347340," Unless GCI."
12347340,12349020," Uh, yeah, yeah, yeah."
12349020,12353420," So this is literally what I see from the code of the UXN assembler."
12353420,12353740," Right."
12353740,12357180," So it's just like, if you take a look at the parser, you can see that there,"
12357180,12363340," basically there is a distinction between whether it's a ampersand or the curly brace."
12363340,12363500," Right."
12363500,12365980," But the idea, the mechanism is sort of like the same."
12365980,12370300," Um, the mechanism is sort of the same."
12370300,12371580," All right."
12371580,12375740," So this part, I don't see any problems with this part."
12375740,12378780," Honestly, I don't really see any problems with this part."
12378780,12385820," Um, so then if this thing is like true,"
12386540,12390140," let me, let me, let me go through this entire stuff one more time."
12390140,12394140," We do dupe two, dupe two, we count the neighbors."
12394140,12395260," All right."
12395260,12396780," We duplicate it."
12396780,12398220," Then do zero two."
12398220,12399980," Check of its equal."
12399980,12402220," Swap around this thing."
12402220,12404380," Uh, zero three."
12404380,12406540," Check of its equal."
12406540,12407980," Uh, right."
12407980,12409020," Then do aura."
12409020,12410860," Right."
12410860,12412140," So then we do aura."
12412140,12415820," Uh, then we do aura."
12415820,12421580," Uh, and do the following thing."
12421580,12431260," So if this is true, if this is true, we right away, just set one to that."
12431260,12433100," We just right away set one to that."
12433100,12437340," Um, so, so far, so good."
12437340,12437980," So far so good."
12437980,12441660," Like I don't see any errors in here anywhere."
12441660,12447580," So maybe, uh, there is something with the count neighbors, but we double check count neighbors"
12447580,12448380," before."
12448380,12450220," Didn't we?"
12450220,12452460," Uh, I think we double check the count neighbors before."
12454460,12458700," Um, we can try to double check count neighbors one more time."
12458700,12464060," So let's go here."
12464060,12472540," Uh, I'm going to comment out all of these things and essentially zero one zero one count neighbors."
12472540,12474540," And I think we have print text."
12474540,12474780," Yeah."
12474780,12478540," We have things like print hello world and times, uh, right."
12478540,12480620," Which allows us to basically test."
12480620,12482620," So we can even try to do the following thing."
12482620,12484380," Uh, just do that."
12484380,12487180," Uh, and hello world was printed one time."
12487180,12491900," So two times, uh, five times, boom, everything seems to be fine."
12491900,12495580," So then we can do count neighbors, right?"
12495580,12498860," We can do count neighbors and all right."
12498860,12501420," So we found an error count neighbors is broken."
12501420,12505340," That's really funny because we didn't, we literally check it recently."
12505340,12508780," Didn't we literally check it?"
12508780,12511340," Yeah, we checked it on the previous stream."
12511340,12512780," So count neighbors is broken."
12512780,12514620," Who broke count neighbors chat?"
12515980,12517900," Chat, who broke count neighbors?"
12517900,12520060," They worked before."
12520060,12520700," What the fuck?"
12520700,12525500," Um, so that's kind of, it's kind of weird."
12525500,12531180," Uh, so yeah."
12531180,12535660," So now it is one, but if I put zero zero in here, right."
12535660,12539020," If I put zero zero like here, there should be five of them."
12539020,12541420," There should be literally five of them."
12541420,12542460," Okay."
12542460,12545660," So what if I put, uh, like zero zero like that?"
12546700,12550860," Yeah, there's literally no neighbors in here whatsoever."
12550860,12552620," So count neighbors is broken."
12552620,12553820," We found the error."
12553820,12555980," Damn."
12555980,12556300," Okay."
12556300,12559900," So, uh, let me see."
12559900,12562140," Where is the count neighbor implementation?"
12562860,12568300," So we move zero into the second stack."
12568300,12571980," So can I just do pop two in here?"
12571980,12572540," Pop two."
12572540,12575180," And just return six."
12575180,12576780," Uh, right."
12576780,12577580," Zero six."
12577580,12578940," So pop two, zero six."
12578940,12581100," Uh, that seems to be working."
12581100,12583260," So that is in fact, correct."
12583260,12585260," Uh, all right."
12585260,12586220," So we're moving that."
12586220,12590860," Um, so then I duplicate the rows and columns."
12590860,12594460," Then I move things to the left, right?"
12594460,12599100," So I move the whole thing to the left and then board the get cell."
12599100,12601740," But I know that board get cell works correctly."
12601740,12602300," Doesn't it?"
12602300,12602540," Right."
12602540,12603740," I know that for a fact."
12603740,12606300," So I can double check it."
12606300,12607180," Of course."
12607180,12607500," Right."
12607500,12609340," So board get cell."
12609340,12613900," I can get the cell at, for instance, zero zero."
12613900,12618060," And then I can print this thing and it has to be zero."
12618060,12623100," And if I get, for instance, uh, column one, right?"
12623100,12625500," If I get the column one, it has to be one."
12625500,12627180," So everything works correctly."
12627180,12631420," Board get cell is in fact, correct."
12631420,12633180," Uh, let me see."
12633180,12634140," Where is the implementation?"
12634140,12635980," So we do board of set on this entire thing."
12635980,12637100," Then we add this thing together."
12637100,12638700," When loading up, everything's fine."
12638700,12641180," Um, okay."
12641180,12642700," Count neighbors."
12642700,12646860," So something may be wrong with this thing."
12646860,12647980," Like left."
12647980,12651020," I remember like messing with them a little bit."
12651020,12652780," I do kind of remember."
12652780,12655180," So maybe this is because of the overflows and stuff."
12655180,12658460," That could be because of the overflows."
12658460,12659900," Yeah."
12659900,12660220," Okay."
12660220,12662940," Know what?"
12662940,12668860," We may try to get rid of the overflows."
12668860,12669180," Right."
12669180,12670940," So left is just decrement."
12670940,12673260," Left is just decrement."
12674860,12680220," And right is simply increments, right?"
12680220,12681740," We got rid of the overflows."
12681740,12683820," I think the overflow broke it."
12683820,12685580," It might've been actually overflow."
12685580,12687820," Uh, right."
12687820,12689820," So overflow broke it."
12689820,12695100," Um, so up is that we swap it around."
12695100,12695340," Okay."
12695340,12696460," So that's totally fine."
12696460,12701500," So now if I try to get the amount of neighbors at one, one."
12701500,12702300," Right."
12702300,12703340," If I try to get them on."
12703340,12706460," It is zero."
12706460,12709020," Because I commented out."
12709020,12709260," Okay."
12709260,12709500," Okay."
12709500,12710060," That's fine."
12710060,12710380," Chat."
12710380,12710940," That's fine."
12710940,12712060," Count neighbors."
12712060,12712540," That's fine."
12712540,12717420," So I want to make sure that the problem is with overflow."
12718940,12720300," Overflow broke it."
12720300,12721820," We added overflow."
12721820,12724780," We were really proud on the previous stream."
12724780,12727340," We pat ourselves on the back."
12727340,12729580," But shit didn't fucking work."
12729580,12732140," Damn."
12732140,12737420," All right."
12737420,12737820," Okay."
12737820,12739020," Yeah."
12739020,12742700," And if I do overflow, uh, it just does that."
12742700,12746460," Uh, let me, let me see."
12746460,12748780," So what exactly is going on?"
12748780,12750220," What exactly is going on?"
12750220,12758380," Um, so, um, so I have a column, right?"
12758380,12766780," If it is positive, if it is positive, I just skip this entire thing and simply decrement it."
12767820,12768700," Make sense to me?"
12768700,12770220," Make sense to me."
12770220,12771420," I don't see any problem with that."
12771420,12772380," That's kind of bizarre."
12772380,12783420," Um, so if it is, um, equal to zero, if it is equal to zero, so it's going to underflow."
12783420,12792220," So that means we pop that thing and we replace it with the size and we decrement the size instead,"
12792220,12794620," which is precisely what we want."
12795180,12798380," I don't see any problems in here whatsoever."
12798380,12802140," Honestly, I don't see any problems in here whatsoever."
12802140,12808860," Um, so I think the underflow, underflow in here is correct."
12808860,12812140," So, all right, let's take a look at this thing."
12812700,12817260," We do increment, uh, and"
12817260,12824540," if after incrementing this thing becomes"
12824540,12835660," um, equal to the size, we go into here and we replace it with zero."
12836540,12837980," That seems fine as well."
12837980,12839900," This one is kind of weird, honestly."
12839900,12846460," Um, right, we incremented it."
12846460,12852140," It's not equal to the size."
12852940,12863740," We just leave it as it is."
12864060,12882780," One character, one character, one character, one character."
12889420,12889660," Okay."
12889660,12893500," It didn't work."
12893500,12896220," Um..."
12896220,12902780," Failed to assemble wrong, just a second."
12902780,12905580," Um..."
12905580,12915100," Just, okay, so let me, let me follow this stack."
12915100,12916300," All right, let me follow this stack."
12916300,12917260," So, I have column."
12917260,12920940," Then, uh, I put the size."
12920940,12922540," I put the size."
12922540,12928300," And, uh, I suppose I can just do dupe2 on this stuff, right?"
12928300,12931180," No, not really."
12934860,12941100," What I want to do, I want to duplicate the column, duplicate the column."
12941100,12942700," After I incremented this entire thing."
12942700,12944380," Then push the size."
12944380,12945260," I push the size."
12945260,12949180," Then I want to do not equal on this entire thing."
12949180,12950380," Not equal to this entire thing."
12950380,12951660," And, of course, let's remove the key."
12951660,12955660," And then I do the checking, right?"
12955660,12956700," And I do the checking."
12956700,12959260," And that thing, in fact, consumes it."
12959260,12960700," I think that's what needs to be done."
12961660,12962940," That's what needs to be done."
12962940,12972700," Exactly five."
12972700,12974860," Exactly five of them."
12974860,12975980," My god."
12975980,12979020," We can even double check how that stuff is going to work."
12979020,12980540," So, there's only one."
12980540,12982220," Is that correct, my new friend?"
12982220,12984060," Okay, so that is, in fact, correct."
12984060,12986460," So, because if you look around, there's only one neighbor now."
12986460,12988700," What if I put one in here?"
12989580,12990220," There should be two."
12990220,12992700," There's two of them."
12992700,12994060," Chad, there's two of them."
12994060,12995500," It actually wrapped around."
12995500,12999020," Okay, so..."
12999020,13003340," We're Gucci."
13003340,13005420," We are, in fact, Tamaguchi."
13005420,13006540," Okay, so I'm going to print the board."
13006540,13008060," Cool."
13008060,13010300," I'm going to compute the next board."
13010300,13011900," The next board is computed."
13011900,13012700," Everything is correct."
13012700,13013980," We're going to flip the board."
13013980,13015100," We're going to break the line."
13015100,13016860," And we're going to print the next board."
13016860,13021340," Okay, so..."
13021340,13025420," I'm pretty sure where we had..."
13025420,13028460," Um..."
13028460,13040060," So, did we had some testing code somewhere where we just set next cell to every..."
13040060,13040300," No."
13040300,13044460," No, that could not be true."
13044460,13046300," That could not be true."
13046300,13048700," Damn."
13048700,13049820," All right."
13049820,13051580," Wait a second."
13051580,13054220," Let me just not do next board."
13054220,13056940," Okay, next board is fine."
13056940,13060700," So, next board does not contain, like, anything in here."
13060700,13061020," Right?"
13061020,13062060," So, this is just that."
13062060,13063820," Flipped too much."
13063820,13065660," Yeah, I think I flipped too much."
13065660,13067900," But if I do the next board..."
13067900,13070700," That is actually worse than it was before."
13070700,13071340," What the fuck?"
13071340,13077660," Uh..."
13077660,13078060," All right."
13078060,13081660," Um..."
13081660,13083420," So, but flipping the board works, right?"
13083420,13085820," Flipping the board works, which is..."
13085820,13086540," Which is fine."
13086540,13090620," All right."
13090620,13093180," So, there's still problem with the next board."
13093820,13094060," All right."
13094060,13095820," There's still problem with the next board."
13095820,13098060," The next cell."
13098060,13099820," Um..."
13099820,13100060," Right."
13100060,13101580," So..."
13101580,13103900," Now..."
13103900,13108220," Let me take this entire stuff."
13108220,13109340," So, I'm gonna set..."
13109340,13113500," Maybe 01 backboard setCell."
13113500,13115020," Aha!"
13115020,13120940," So, there is some incorrect stuff in the backboard setCell."
13121820,13122380," Which is..."
13122380,13123660," Excuse me, what the fuck?"
13123660,13125820," All right."
13125820,13128220," So, if I do next..."
13128220,13128940," Well, I mean..."
13128940,13129980," I forgot to..."
13129980,13131420," To do this thing, of course."
13131420,13132860," Yeah, okay."
13132860,13135260," Um..."
13135260,13136620," So, that's everything."
13136620,13137980," Everything seems to be fine."
13137980,13140940," Now it's that."
13140940,13147020," Maybe I just have to flip some of these things."
13147020,13148860," Maybe I just have to flip some of these things."
13148860,13151660," Let's go through that stuff one more time, okay?"
13151660,13152700," So, uh..."
13152700,13155260," Let me take a look at the definition of the way of being alive."
13155260,13158620," So, if the dead cell, exactly three, it becomes alive."
13158620,13161260," If a live cell has fewer than two, it dies."
13161260,13162460," It has more than three."
13162460,13163020," It dies."
13163020,13165340," So, it basically stays alive in one of two, three."
13165340,13165580," Okay."
13165580,13166380," So, that makes sense."
13166380,13168220," That makes sense."
13168220,13170140," So, we get the board cell."
13170140,13171580," We get the board cell."
13171580,13175660," If it is false, that means it is dead."
13175660,13184140," If it is equal to three exactly, we set the backboard to one and jump out of that."
13184140,13185900," Otherwise, we set it to zero."
13185900,13186860," That makes sense."
13186860,13187740," Everything's fine."
13187740,13195020," So, after that, we count the neighbors, right?"
13195020,13197820," So, this one is okay."
13197820,13199020," This one is okay, but..."
13199020,13207100," So, it's only something with the next board."
13207100,13210220," So, let me do the following thing."
13210220,13211660," The board gets cell."
13211660,13214940," So, we do zero, zero."
13214940,13216060," Print."
13216060,13217740," Print."
13217740,13220140," What's that?"
13220140,13222380," Print."
13222380,13224220," Hello, world."
13224220,13227020," Print."
13227020,13228220," Hello, world."
13228220,13228620," Print."
13228620,13229820," Hello, world."
13229820,13231820," So, that should be zero."
13231820,13235740," One, one is zero."
13235740,13239100," Zero, one is okay."
13239980,13241100," Count neighbors."
13241100,13242140," I want to double check that."
13242140,13244380," I'm sorry that I want to double check that one more time."
13244380,13247820," The mode is kind of weird."
13247820,13249820," Who wrote tokenization for this mode?"
13249820,13251260," Honestly, count neighbors."
13251260,13255820," It's one, but one, one has to be five."
13255820,13258860," All of these things are correct."
13258860,13260700," And I know that for a fact."
13260700,13262460," So, all of these things are correct."
13262460,13263820," And I know them for a fact."
13263820,13268140," So, then I just duplicate that."
13268140,13269420," That is fine."
13269420,13270620," And then next cell."
13270620,13272540," Yeah."
13272540,13277420," So, there must be problems somewhere in this logic."
13277420,13278940," Backboard set cell."
13278940,13281740," I really don't see."
13281740,13283740," So, row cell."
13283740,13287420," So, row column cell."
13287420,13291740," So, we rotate a couple of times."
13291740,13294860," Rotate a couple of times."
13294860,13298940," Then we compute the offset."
13298940,13302700," The offset actually returns the short."
13302700,13304780," We know that also for a fact."
13305900,13307100," Then we add them together."
13307100,13309020," Then we load."
13309020,13309020," Then we load."
13309020,13312860," We store."
13312860,13313100," Right."
13313100,13314780," So, we have a pointer."
13314780,13315100," Right."
13315100,13315740," Like this."
13315740,13318060," And which is U16."
13318060,13319180," And we store it."
13319180,13320860," Everything is fine in here."
13320860,13323420," Everything is totally fine in here."
13323420,13328620," So, there must be problem with the logic in here somewhere."
13328620,13330940," There must be a problem with the logic in here somewhere."
13333420,13335980," So, we get the cell."
13335980,13341180," If it's alive."
13341180,13343340," We duplicate this thing."
13343340,13344700," We look at the neighbors."
13344700,13346140," Let me double check this thing."
13346140,13348860," Let me double check this thing."
13348860,13349580," Row column."
13349580,13351500," Duplicate."
13351500,13354140," Neighbors."
13354140,13355900," Duplicate them."
13355900,13358380," 02 equal."
13358380,13361260," Swap."
13361260,13365100," Three equal."
13365100,13367420," I can't even read this entire thing."
13367420,13370540," So, I don't see any problems in here."
13371580,13377580," And if it is true, we must set the backboard to one."
13377580,13380220," So, that is correct."
13380220,13382300," Otherwise, we set it to zero."
13382300,13384060," This entire thing is correct."
13384060,13385180," I don't see any error."
13385180,13389260," So, if it is false, we compute the neighbors."
13389260,13390460," Is it equal to three?"
13390460,13395180," So, if we're dead and equal to three, we set it to one."
13395180,13395980," Jump out of it."
13395980,13397740," Right."
13397740,13399980," So, and otherwise, we set to zero."
13399980,13402700," I literally don't see any problem in this logic."
13402700,13405980," I literally don't see any problem in this logic."
13405980,13407260," One of the things we can do."
13407260,13413420," So, one of the things we can do is."
13413420,13419420," Can I just basically."
13421580,13422540," Maybe take."
13422540,13422620," Maybe take."
13422620,13431180," Duped to."
13431180,13434620," Board get cell."
13434620,13436220," Not."
13436220,13438860," Not."
13438860,13443100," Backboard set cell."
13443100,13447340," Jump to R."
13447340,13451340," So, essentially, we're going to invert the current board."
13451340,13455500," We're going to invert the current board."
13455500,13457740," So, that way I'm going to."
13457740,13458700," Yeah."
13458700,13460060," That is."
13460060,13460780," That is correct."
13460780,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13462060," That is correct."
13462060,13463060," That is correct."
13463060,13464060," So, everything is correct."
13464060,13466060," So, I do not understand."
13466060,13472620," I might be not understanding something about this shit."
13472620,13475580," About this shit."
13475580,13478220," So, something is wrong in here with..."
13478220,13480860," I don't know, man."
13480860,13484060," Maybe with labels."
13484060,13489580," So, we can do the following thing."
13491100,13494700," We can say ""alive""."
13494700,13497900," And this is going to be ""alive""."
13497900,13498380," Like so."
13498380,13500940," So, yeah."
13500940,13502220," So, you do that."
13502220,13503580," You become ""alive""."
13503580,13503900," Right?"
13503900,13507420," So, and that is basically the logic for ""alive""."
13507420,13513580," So, here."
13513580,13517180," If you equal exactly to 3."
13517180,13519420," We can say ""born""."
13521100,13523980," Like so."
13523980,13526140," You get ""born""."
13526140,13532380," So, and in here you basically stay alive."
13532380,13533980," Here you basically stay alive."
13533980,13537420," Stay alive."
13537420,13542540," Stay alive."
13542540,13546620," So, I double checked literally everything in here."
13547180,13551100," So, all of these functions that we use here work correctly."
13551100,13555660," All of these functions work correctly."
13555660,13559580," So, that means I don't understand something about the lambdas."
13559580,13566780," Don't understand something about the lambdas."
13566780,13568300," Yeah."
13568300,13569900," So, that didn't change anything."
13569900,13573020," So, what is incorrect in here?"
13573020,13574860," What is incorrect in here?"
13574860,13578460," So, that's really bizarre."
13578460,13580140," That's really bizarre."
13586140,13588540," I keep bisecting this entire thing."
13588540,13593420," And everything basically brings me back to here."
13593420,13596780," Like everything literally brings me back to here."
13596780,13603740," So, even the fact that if I simply just invert whatever we have in here."
13603740,13605820," Just simply invert whatever we have in here."
13605820,13612220," To just not backboard setCell."
13612220,13614140," And then jump to R."
13614140,13615740," Jump to R."
13615740,13617340," So, yeah."
13617340,13620300," So, it just basically reverses this entire thing."
13620300,13624620," So, that means everything works correctly."
13624620,13625500," Everything."
13625500,13627740," Literally everything works correctly."
13627740,13628860," Except that piece of code."
13629580,13632700," Why that exact piece of code doesn't work correctly."
13632700,13634860," Is kind of beyond me."
13634860,13640380," And it's not about lambdas doing something unexpected on the stack."
13640380,13643340," Because I replace them with just labels."
13643340,13646620," I replace them with just labels."
13646620,13648300," And that didn't change anything."
13648300,13653740," So, that means there is a problem with the logic in here."
13653740,13657900," There is some sort of a problem in logic in here."
13657900,13661820," And I wonder if something on the edges of this entire thing."
13661820,13663660," What if I do the following thing."
13663660,13667900," What if I kind of change this entire stuff."
13667900,13669420," This entire stuff like so."
13669420,13671180," Right."
13671180,13673500," So, what if I move this thing away."
13673500,13677580," And it literally inverts that."
13677580,13680540," But why does it invert the code?"
13680540,13683820," Like I don't understand."
13683820,13687420," So, that means I just misunderstand the lambdas."
13687420,13689180," Lambdas are extremely confusing."
13689180,13689660," Honestly."
13689660,13691980," They are extremely confusing."
13691980,13701260," So, what if I literally invert these two things."
13701260,13702300," And I don't think."
13702300,13704700," It's just so bizarre that."
13705660,13705980," Okay."
13705980,13712460," But that is not the next state of the glider."
13712460,13713580," So, that's the problem."
13713580,13715900," I don't think it is the next state of the glider."
13715900,13721580," Because if we try to go to the next iteration."
13721580,13723100," If we try to go to the next."
13723100,13723340," Yeah."
13723340,13725820," This is not the next of the glider."
13725820,13728300," It's just like not correct whatsoever."
13728300,13728940," So, no."
13728940,13732540," That kind of works in an interesting way."
13732540,13732780," Right."
13732780,13735100," That kind of works in an interesting way."
13735100,13736060," Right."
13736060,13736380," And then."
13736380,13739740," That definitely should not disappear by the way."
13739740,13741180," That definitely should not disappear."
13741180,13741420," So."
13741420,13746380," What is wrong with lambdas?"
13746380,13748620," They are so confusing."
13748620,13749100," But maybe."
13749100,13749420," Okay."
13749420,13750700," So, the problem is not lambdas."
13750700,13752140," Again."
13752140,13753740," I replaced them with labels."
13753740,13755260," And they worked fine."
13755260,13756860," There's something else somewhere."
13757420,13758860," There's something else somewhere."
13758860,13761820," When I count the neighbors."
13761820,13762380," By the way."
13762380,13763980," Speaking of the counting errors."
13763980,13766060," I'm messing with the return stack."
13766060,13769020," I'm messing with the return stack."
13769020,13769260," So."
13769260,13772220," That means."
13772220,13775100," But I'm actually restoring everything from the stack."
13775100,13776220," So, that should be fine."
13776220,13777180," Right."
13777180,13779820," So, I'm actually restoring everything from the stack."
13779820,13780060," So."
13780060,13781580," Right."
13781580,13783340," I'm accumulating all these things."
13783340,13785100," And just like go back."
13785100,13786220," And that's fine."
13788380,13788940," That's fine."
13788940,13789020," That's fine."
13789020,13789420," That's fine."
13789420,13789420," That's fine."
13789420,13789420," That's fine."
13789420,13789420," That's fine."
13789420,13790460," That's fine."
13790460,13791020," Interestingly."
13791020,13795180," So, maybe I had to reverse only one thing in here."
13795180,13799020," So, I don't really like that I'm now trying to guess things."
13799020,13800140," This is really bad."
13800140,13802380," This is really bad."
13802380,13804620," So, when you're guessing things."
13804620,13806540," That means that you."
13806540,13807900," Okay."
13807900,13809900," Why this shed is opposite."
13809900,13811500," This is correct."
13811500,13813340," This is correct."
13813340,13814540," Why this shed is opposite."
13814540,13815500," Right."
13815500,13818220," So, it should not be opposite."
13818220,13819260," If."
13820780,13822380," So, this thing is true."
13822380,13824220," This thing is true."
13824220,13826780," So, we're jumping over it."
13826780,13828940," We're duplicating it."
13828940,13835100," This has to be end."
13835100,13837100," This has to be end."
13837100,13841180," This has to be end for that shed to work."
13841180,13841980," I got it."
13841980,13842860," It's not aura."
13842860,13844460," Do I have ender?"
13845820,13847660," But why is it not called ender?"
13847660,13848780," It has to be called ender."
13848780,13849420," I'm telling you."
13849420,13850780," Ender."
13850780,13851020," And."
13851020,13851980," Sorry."
13851980,13854140," I figured it out."
13854140,13856620," Without a debugger."
13856620,13856860," Okay."
13856860,13859500," So, let's actually see if it works or not."
13859500,13859740," Right."
13859740,13860860," So, two."
13860860,13863100," No."
13863100,13863900," It's actually or."
13863900,13864460," It has to be."
13864460,13865260," Wait, wait, wait, wait."
13865260,13866140," It has to be or."
13866140,13870300," So, if this thing two or three."
13870300,13871500," We."
13876300,13876540," It."
13876540,13879820," They were the confusing lambdas."
13879820,13883020," They were the confusing lambdas."
13883020,13883900," They were the confusing."
13883900,13885660," But I figured it out without the debugger."
13885660,13888140," I figured it out without the debugger."
13888140,13891180," I figured it out without the debugger."
13891180,13896540," I'm still holding a strong opinion that lambdas are confusing."
13896540,13897660," They are confusing."
13897660,13898540," I'm sorry."
13898540,13899420," They are confusing."
13899420,13901900," It's just like."
13901900,13902380," It's like."
13902380,13902860," I'm sorry."
13904380,13905900," You can say whatever you want."
13905900,13907500," You can even threaten me with."
13907500,13909340," The skill issue."
13909340,13910220," But it's confusing."
13910220,13910940," It's just like."
13910940,13911900," It is confusing."
13911900,13913100," I've been programming for 20 years."
13913100,13913740," It's confusing."
13913740,13914940," Sorry."
13914940,13921500," Because it feels like an oppositive statements."
13921500,13922780," Because it feels like unless."
13922780,13925820," Though there's honestly nothing wrong with unless."
13925820,13926620," You know."
13926620,13928380," So, in Lisp."
13928380,13929180," There is this thing."
13929180,13930700," Unless."
13930700,13932940," Right."
13932940,13933500," So, it's like."
13933500,13933740," So, it's like."
13933740,13934140," Not."
13934140,13934140," Not."
13934140,13935100," Thing."
13935100,13937900," So, yeah."
13937900,13940380," Figured it out."
13940380,13942060," We've figured it out."
13942060,13944860," That's actually very much poggers, my new friend."
13944860,13946060," That's very much poggers."
13946060,13948460," Okay."
13948460,13948620," So."
13948620,13949820," Yeah."
13949820,13952060," And now we can actually keep repeating this entire thing."
13952060,13952540," All right."
13952540,13953740," We can keep repeating it."
13953740,13955660," Several times."
13955660,13956940," As many times as."
13956940,13958380," Where is the."
13958380,13959660," Yeah."
13959660,13961340," And now this thing is moving."
13961340,13963740," This thing is moving."
13963740,13966460," I can actually do that in a loop."
13966460,13969660," So, let's actually do the fun thing."
13969660,13971180," I'm going to put the iterator here."
13971180,13974060," So, then I'm duplicating the iterator."
13974060,13975180," Then I'm say."
13975180,13975420," Okay."
13975420,13977340," Let's do that for three iterations."
13977340,13977580," Right."
13977580,13980140," So, it's a less than."
13980140,13983660," And if it's not."
13983660,13986620," Right."
13986620,13987900," If it's not."
13987900,13991020," We're going to keep doing that."
13991020,13994380," Yeah, boy."
13994380,13996140," And then we just."
13996140,13998460," Increment this entire thing."
13998460,14001580," And then we pop."
14001580,14002940," All right."
14002940,14003420," So, that's."
14003420,14006060," They're kind of useful for."
14006060,14006940," For loops."
14006940,14007180," Right."
14007180,14008140," For loops like this."
14008140,14008780," That's for sure."
14008780,14009340," Well."
14009340,14009580," No."
14009580,14012780," I don't think that's what I wanted to do."
14012780,14014700," Yeah."
14014700,14017500," So, what I wanted to do actually."
14017500,14023020," Again."
14023020,14026380," I wonder if we can."
14026380,14029180," Well, probably not."
14029180,14029660," But then."
14029660,14030140," Yeah."
14033900,14034140," Yeah."
14034140,14034780," Look at that."
14034780,14043420," I'm going to start calling this weird loop."
14043420,14044860," Really."
14044860,14046700," This is not how you do loops."
14046700,14048060," This is not how you do loops."
14048060,14049340," Let me actually see how you do loops."
14049340,14051100," Let me take a look at the projects."
14051100,14053660," So, there's some demos."
14053660,14056540," Bonnie mark."
14056540,14056860," Okay."
14060780,14061740," So, I suppose."
14061740,14062300," It's just."
14062300,14064060," Honestly."
14064060,14065420," There's not that much of a."
14065420,14066780," Like a structure to it."
14066780,14067260," So, you."
14067260,14072220," It's just a regular."
14072220,14073500," So, here is the regular loop."
14073500,14073900," In here."
14073900,14077740," Fact."
14077740,14078940," Tall."
14078940,14080380," Okay."
14080380,14081100," Just a second."
14090780,14093820," That doesn't exist."
14093820,14096220," Um."
14096220,14098780," Example."
14098780,14099020," Oh."
14099020,14099660," It's fibs."
14099660,14100860," Okay."
14100860,14102860," Wait."
14102860,14103820," Am I missing something?"
14103820,14105900," Project."
14105900,14107340," Examples."
14107340,14115420," All right."
14115420,14119580," All right."
14119580,14120540," So."
14120540,14126060," Um."
14126060,14129020," Okay."
14131260,14132140," Just a regular."
14132140,14133740," Jumping around."
14133740,14134140," Nothing."
14134140,14135100," Nothing particular special."
14135100,14135500," I see."
14135500,14136700," Um."
14136700,14137820," Anyways."
14137820,14140780," So, we got this thing."
14140780,14142540," But that's not enough."
14142540,14143420," Right."
14143420,14143900," So."
14143900,14145100," What I wanted to do."
14145100,14146220," I wanted to actually."
14146220,14148140," Um."
14148140,14149820," Maybe do some graphics."
14149820,14150220," Right."
14150220,14150460," So."
14150460,14153180," We wanted to display."
14153180,14153900," All of that."
14153900,14154940," On the screen."
14158700,14158940," But."
14158940,14164060," How much time."
14164060,14164940," It will take."
14164940,14166140," To do so."
14166140,14166860," How much time."
14166860,14167340," It will take."
14167340,14167900," To do so."
14167900,14169180," That's a very good question."
14169180,14171020," Um."
14171020,14171500," So, maybe."
14171500,14172140," We could."
14172140,14173660," Actually."
14173660,14176780," So."
14176780,14177100," We."
14177100,14177580," Uh."
14177580,14178460," We already know."
14178460,14179180," How to do."
14179180,14179420," The."
14179420,14181020," Sprites."
14181020,14182060," Right."
14182060,14182300," So."
14182300,14182780," We know."
14182780,14183260," How to do."
14183260,14184300," The sprites."
14184300,14184540," So."
14184540,14185020," Essentially."
14185020,14185340," We know."
14185340,14185900," That sprites."
14185900,14186700," Are 8x8."
14186700,14187820," We could."
14187820,14189020," predefine."
14189020,14189900," Uh."
14189900,14190620," Sprites."
14190620,14192460," Essentially."
14192460,14193020," Something like."
14193020,14193580," Alive."
14193580,14194540," Uh."
14194540,14195020," Alive."
14195020,14195580," Sprite."
14195580,14196540," Um."
14196540,14196780," So."
14196780,14197100," Maybe."
14197100,14197820," Something like."
14197820,14198700," Uh."
14198700,14199260," It's going to be."
14199260,14199500," Like."
14199500,14199820," F."
14199820,14199980," F."
14199980,14201660," 8x."
14201660,14202940," Right."
14202940,14203260," F."
14203260,14203500," F."
14203500,14204220," 8x."
14204220,14206620," Just a second."
14206620,14209100," All right."
14209100,14209340," So."
14209340,14209660," This is."
14209660,14210140," Alive."
14210140,14210460," One."
14210460,14211100," Can I."
14211100,14211580," Do something."
14211580,14211740," Like."
14211740,14211900," This."
14211900,14212140," And."
14212140,14212380," This."
14212380,14212460," Is."
14212460,14212700," Going to."
14212700,14212860," Be."
14212860,14213020," The."
14213020,14213340," Dead."
14213340,14213660," One."
14213660,14214700," And."
14214700,14215500," So."
14215500,14215900," Here."
14215900,14216140," I'm."
14216140,14216300," Just."
14216300,14216780," Replacing."
14216780,14217740," F."
14217740,14217980," With."
14217980,14218300," Zero."
14218300,14218700," Boom."
14218700,14219580," Right."
14219580,14219740," And."
14219740,14220060," Just like."
14220060,14220220," We're."
14220220,14220380," Going to."
14220380,14220540," Be."
14220540,14221180," Drawing."
14221180,14222460," These."
14222460,14222940," Sprites."
14222940,14223100," At."
14223100,14223660," Corresponding."
14223660,14224060," Places."
14224060,14224380," And."
14224380,14224540," Stuff."
14224540,14224700," Like."
14224700,14224860," That."
14224860,14227740," And."
14227740,14228060," That."
14228060,14228380," Should."
14228380,14228700," Be."
14228700,14229420," Enough."
14229420,14229980," That."
14229980,14230220," Should."
14230220,14230380," Be."
14230380,14230780," Enough."
14230780,14230940," So."
14230940,14232060," The."
14232060,14232300," Only."
14232300,14232540," Thing."
14232540,14232700," We."
14232700,14232860," Have."
14232860,14233020," To."
14233020,14233260," Do."
14233260,14234060," Honestly."
14234060,14235740," Is."
14235740,14236700," Just."
14236700,14237420," Prepare."
14237420,14237580," The."
14237580,14237980," Screen."
14237980,14238300," We."
14238300,14238460," Need."
14238460,14238540," To."
14238540,14238860," Prepare."
14238860,14239020," The."
14239020,14239340," Screen."
14239340,14241420," And."
14241420,14242860," On."
14242860,14243020," The."
14243020,14243660," Callback."
14243660,14243900," On."
14243900,14244460," Screen."
14244460,14244700," And."
14244700,14244780," The."
14244780,14245260," Callbacks."
14245260,14245420," Are."
14245420,14245660," Called."
14245660,14246220," Vectors."
14246220,14246540," In."
14246540,14247020," Uxian."
14247020,14247900," We."
14247900,14248380," Compute."
14248380,14248540," The."
14248540,14248940," Next."
14248940,14249740," The."
14249740,14250060," Next."
14250060,14250460," Board."
14250460,14251340," And."
14251340,14251660," The."
14251660,14251900," Only."
14251900,14252060," Thing."
14252060,14252140," We."
14252140,14252220," Need."
14252220,14252380," To."
14252380,14252620," Write."
14252620,14252700," We."
14252700,14252860," Need."
14252860,14252940," To."
14252940,14253180," Write."
14253180,14253580," Some."
14253580,14253980," Code."
14253980,14254940," That."
14254940,14255580," Iterates."
14255580,14255820," Through."
14255820,14255980," The."
14255980,14256300," Board."
14256300,14256780," Right."
14256780,14256940," It."
14256940,14257420," Iterates."
14257420,14257580," Through."
14257580,14257660," The."
14257660,14257980," Board."
14257980,14258140," And."
14258140,14258540," Depending."
14258540,14258700," On."
14258700,14258860," The."
14258860,14259260," State."
14259260,14259420," Of."
14259420,14259580," The."
14259580,14259900," Cell."
14259900,14260060," It."
14260060,14260300," Just."
14260300,14260940," Renders."
14260940,14261980," Different."
14261980,14264940," Different."
14264940,14265740," Sprites."
14265740,14265900," At."
14265900,14265980," The."
14265980,14266620," Corresponding."
14266620,14266940," Places."
14266940,14267260," So."
14267260,14267660," That's."
14267660,14267820," What."
14267820,14268060," We."
14268060,14268220," Need."
14268220,14268380," To."
14268380,14268620," Do."
14268620,14269180," That's."
14269180,14269340," What."
14269340,14269500," We."
14269500,14269660," Need."
14269660,14269740," To."
14269740,14269900," Do."
14269900,14270060," So."
14270060,14270220," Let's."
14270220,14270460," See."
14270460,14271100," What."
14271100,14271260," We."
14271260,14271500," Can."
14271500,14271740," Do."
14271740,14271900," In."
14283180,14283420," I."
14283420,14283980," Did."
14283980,14284300," The."
14284300,14286060," You."
14286060,14286220," Know."
14286220,14286380," The."
14286380,14286780," Heart."
14286780,14287260," Thingy."
14287260,14288220," Right."
14288220,14288620," So."
14288620,14289020," Where."
14289020,14289180," I."
14289180,14289340," Did."
14289340,14289500," The."
14289500,14289820," Heart."
14289820,14290140," Thingy."
14290140,14290300," So."
14290300,14290380," I."
14290380,14290540," Think."
14290540,14290700," It."
14290700,14290940," Was."
14290940,14291660," Graphics."
14291660,14292140," Style."
14292140,14293100," Yeah."
14293100,14293980," So."
14293980,14294060," Let's."
14294060,14294220," Go."
14294220,14294460," There."
14294460,14294860," So."
14294860,14295100," You."
14295100,14295340," Can."
14295340,14295340," See."
14295340,14295660," N."
14295660,14297420," Graphics."
14297420,14297900," Rome."
14297900,14299100," Graphics."
14299100,14299500," Rome."
14299500,14300380," And."
14300380,14301020," So."
14301020,14301260," It's."
14301260,14301500," Actually."
14301500,14301660," You."
14301660,14301820," See."
14301820,14302060," An."
14302060,14302540," Emo."
14302540,14303660," Yeah."
14303660,14303820," There."
14303820,14303900," We."
14303900,14303980," Go."
14303980,14304140," So."
14304140,14304460," Here."
14304460,14304540," Is."
14304540,14304700," The."
14313180,14313340," To."
14313340,14313500," Do."
14313500,14313580," The."
14313580,14314140," Graphics."
14314140,14315820," So."
14315820,14316540," Now."
14316540,14316780," I'm."
14316780,14316940," Gonna."
14316940,14317260," Go."
14317260,14317580," Back."
14317580,14317740," To."
14317740,14317900," The."
14317900,14318300," Goal."
14318300,14318700," Tal."
14318700,14319740," And."
14319740,14319940," On."
14319940,14320460," Reset."
14320460,14320860," So."
14320860,14321900," We."
14321900,14322700," Have."
14322700,14323020," The."
14323020,14323900," Notion."
14323900,14324060," Of."
14324060,14324220," A."
14324220,14324540," Set."
14324540,14324940," Theme."
14324940,14326060," I'm."
14326060,14326220," Not."
14326220,14326380," Sure."
14326380,14326620," How."
14326620,14327020," Useful."
14327020,14327180," It."
14327180,14327260," Is."
14327260,14327420," For."
14327420,14327580," Me."
14327580,14327740," But."
14327740,14327820," I'm."
14327820,14327980," Gonna."
14327980,14328140," Just."
14328140,14328380," Like."
14328380,14328620," Copy."
14328620,14328860," Paste."
14328860,14329260," Like."
14329260,14329420," When."
14329420,14329580," I."
14329580,14329780," Don't."
14329780,14330140," Understand."
14330140,14330220," A."
14330220,14330620," Particular."
14330620,14330940," Code."
14330940,14331100," I."
14331100,14331260," Just."
14331260,14331660," Copy."
14331660,14331900," Paste."
14331900,14332140," It."
14332140,14333740," So."
14333740,14334060," In."
14334060,14334380," Here."
14334380,14335340," In."
14335340,14335740," Here."
14335740,14336060," I."
14336060,14336460," Also."
14336460,14336860," Going."
14336860,14337180," To."
14337180,14338140," Set."
14338140,14338380," The."
14338380,14338620," Theme."
14338620,14340220," And."
14340220,14342060," We."
14342060,14342380," Need."
14342380,14342700," The."
14342700,14343340," System."
14343340,14343820," We."
14343820,14343980," Need."
14343980,14344140," The."
14344140,14344620," System."
14344620,14345420," And."
14345420,14345580," We."
14345580,14345820," Need."
14345820,14346060," A."
14346060,14346620," Screen."
14346620,14347260," We."
14347260,14347500," Need."
14347500,14347580," The."
14347580,14347980," Screen."
14347980,14350940," System."
14350940,14351180," And."
14351180,14351340," The."
14351340,14351660," Screen."
14351660,14351980," And."
14351980,14352300," Then."
14352300,14353580," What."
14353580,14353900," We're."
14353900,14354300," Doing."
14354300,14354700," We're."
14354700,14354940," Just."
14354940,14355420," Setting."
14355420,14355740," Up."
14355740,14356140," The."
14356140,14356940," Vector."
14356940,14357180," We're."
14357180,14357340," Just."
14357340,14357660," Setting."
14357660,14357820," Up."
14357820,14357980," The."
14357980,14358300," Vector."
14358300,14360140," And."
14360140,14361580," Our."
14361580,14361980," Vector."
14361980,14362140," Is."
14362140,14362220," Going."
14362220,14362300," To."
14362300,14362460," Be."
14362460,14362860," On."
14362860,14363260," Screen."
14363260,14364060," On."
14364060,14364540," Screen."
14364540,14365020," Like."
14365020,14365260," So."
14365260,14365500," So."
14365500,14365740," This."
14365740,14365820," Is."
14365820,14365980," A."
14365980,14366220," Vector."
14366220,14366540," Right."
14366540,14366860," So."
14366860,14367180," Let's."
14367180,14367420," First."
14367420,14367580," To."
14367580,14367820," Forward."
14367820,14369580," So."
14369580,14369820," It's."
14369820,14370140," 60."
14370140,14370540," FPS."
14370540,14370780," Right."
14370780,14371020," So."
14371020,14371260," That."
14371260,14371500," Means."
14371500,14371740," We."
14371740,14372060," Probably."
14372060,14372300," Need."
14372300,14372620," To."
14372620,14372860," Have."
14372860,14372940," A."
14372940,14373180," Way."
14373180,14373500," To."
14373500,14374940," Maybe."
14374940,14375340," Skip."
14375340,14375580," Some."
14375580,14375740," Of."
14375740,14375820," The."
14375820,14376060," Frames."
14376060,14376300," Because."
14376300,14376380," It's."
14376380,14376540," Going."
14376540,14376700," To."
14376700,14376860," Too."
14376860,14377260," Fast."
14377260,14377420," If."
14377420,14377500," You."
14377500,14377660," Think."
14377660,14377900," About."
14377900,14378140," It."
14378140,14378460," Right."
14378460,14378700," So."
14378700,14378860," It's."
14378860,14379180," Definitely."
14379180,14379340," Going."
14379340,14379420," To."
14379420,14379500," Be."
14379500,14379660," Too."
14379660,14379980," Fast."
14379980,14380220," But."
14380220,14380460," Maybe."
14380460,14380700," That's."
14380700,14380860," Fine."
14380860,14383260," So."
14383260,14383500," We."
14383500,14383740," Need."
14383740,14383980," To."
14383980,14385340," Compute."
14385340,14385420," The."
14385420,14385660," Next."
14385660,14385980," Board."
14385980,14386380," We."
14386380,14386700," Compute."
14386700,14386780," In."
14386780,14386860," The."
14386860,14387060," Next."
14387060,14387580," Board."
14387580,14387900," Then."
14387900,14388140," We."
14388140,14388460," Flip."
14388460,14388620," In."
14388620,14388700," The."
14388700,14389020," Board."
14389020,14389820," We."
14389820,14390060," Flip."
14390060,14390220," In."
14390220,14390300," The."
14390300,14390540," Board."
14390540,14391340," And."
14391340,14391580," Then."
14391580,14392220," We."
14392220,14392780," Already."
14392780,14393020," Have."
14393020,14393100," A."
14393100,14393340," Print."
14393340,14393660," Board."
14393660,14393980," But."
14393980,14394140," We."
14394140,14394220," Need."
14407260,14407820," Graphical."
14407820,14408220," Display."
14408220,14408700," Stuff."
14408700,14408940," So."
14408940,14409100," The."
14409100,14409260," Only."
14409260,14409420," Thing."
14409420,14409580," We."
14409580,14409660," Need."
14409660,14409740," To."
14409740,14409900," Do."
14409900,14410060," We."
14410060,14410140," Need."
14410140,14410220," To."
14410220,14410540," Implement."
14410540,14410700," The."
14410700,14411100," Display."
14411100,14411420," Board."
14411420,14412140," And."
14412140,14412380," Also."
14412380,14412620," Maybe."
14412620,14412940," Skipping."
14412940,14413100," The."
14413100,14413420," Frames."
14413420,14413500," And."
14413500,14413740," Stuff."
14413740,14413900," Like."
14413900,14413980," That."
14413980,14414140," So."
14414140,14414220," Let's."
14414220,14414460," Actually."
14414460,14414620," Go."
14414620,14414780," To."
14414780,14415020," Print."
14415020,14415340," Board."
14415340,14416140," And."
14416140,14416860," We."
14416860,14417180," Can."
14417180,14417820," Do."
14417820,14418540," This."
14418540,14418860," Thing."
14418860,14419020," In."
14419020,14419100," A."
14419100,14419500," Similar."
14419500,14419980," fashion."
14419980,14420380," Right."
14420380,14420780," So."
14420780,14421580," Like."
14421580,14421900," This."
14421900,14424460," So."
14424460,14425020," Jump."
14425020,14425260," To."
14425260,14425580," R."
14426700,14427180," And."
14427180,14427420," In."
14427420,14427740," Here."
14427740,14427900," We."
14427900,14428060," Don't."
14428060,14428140," Need."
14428140,14428300," To."
14428300,14428620," Break."
14428620,14428780," The."
14428780,14429100," Line."
14429100,14429340," We."
14429340,14429420," Don't."
14429420,14429580," Need."
14429580,14429660," To."
14429660,14429900," Do."
14429900,14430140," Any."
14430140,14430380," Of."
14430380,14430620," This."
14430620,14431020," Stuff."
14431020,14431220," And."
14431220,14431580," Everything."
14431580,14434140," So."
14434140,14438700," Now."
14438700,14442380," We."
14442380,14442700," Need."
14442700,14442940," To."
14442940,14445100," Get."
14445100,14445300," The."
14445300,14445820," Board."
14445820,14446140," So."
14446140,14446460," This."
14446460,14446700," One."
14446700,14446940," Is."
14446940,14447340," Really."
14447340,14447900," Interesting."
14447900,14449580," This."
14449580,14449820," One."
14449820,14449900," Is."
14449900,14450140," Really."
14450140,14450620," Interesting."
14450620,14451020," Because."
14451020,14452620," We."
14452620,14453100," Probably."
14453100,14453340," Want."
14453340,14453340," To."
14453340,14453580," Have."
14453580,14453660," A."
14453660,14454060," Separate."
14454060,14454540," Function."
14454540,14454700," For."
14454700,14455020," That."
14455020,14455340," So."
14455340,14455660," Here."
14456220,14456540," We."
14456540,14456780," Have."
14456780,14457900," Row."
14457900,14458380," Column."
14458380,14458620," And."
14458620,14459020," Cell."
14459020,14459420," Right."
14459420,14459580," We."
14459580,14459740," Have."
14459740,14459820," A."
14459820,14460060," Row."
14460060,14460380," Column."
14460380,14460540," And."
14460540,14460860," Cell."
14460860,14462060," Maybe."
14462060,14462300," We."
14462300,14462460," Could."
14462460,14462700," Have."
14462700,14462780," A."
14462780,14463260," Function."
14463260,14464220," Something."
14464220,14464380," Like."
14464380,14465100," Display."
14465100,14465740," Cell."
14465740,14467020," Display."
14467020,14467420," Cell."
14467420,14469580," Display."
14469580,14469980," Cell."
14469980,14471100," Accepts."
14471100,14471420," Row."
14471420,14473420," Column."
14473420,14473660," And."
14473660,14474060," Cell."
14474060,14475260," Does."
14475260,14475580," Nothing."
14475580,14476540," And."
14476540,14477660," Just."
14477660,14478220," Basically."
14478220,14478940," Displays."
14478940,14479020," The."
14479020,14479740," Correspondent."
14479740,14480620," Sprite."
14480620,14481180," Depending."
14481180,14481500," On."
14481500,14481820," Like."
14481820,14482060," What."
14482060,14482140," We."
14482140,14482380," Have."
14482380,14482380," In."
14482380,14482620," Here."
14482620,14482860," So."
14482860,14483260," Honestly."
14484220,14484460," It."
14484460,14484780," Is."
14484780,14485180," Actually."
14485180,14485580," Super."
14485580,14486060," Easy."
14486060,14486380," To."
14486380,14486700," Do."
14486700,14486860," It."
14486860,14487020," Like."
14487020,14487260," That."
14487260,14487340," I."
14487340,14487660," Think."
14487660,14489260," So."
14489260,14490220," We."
14490220,14490380," Can."
14490380,14490860," Treat."
14490860,14491180," The."
14491180,14491500," Cell."
14491500,14491740," As."
14491740,14491820," A."
14491820,14492220," Boolean."
14492220,14499420," Can."
14499420,14499660," How."
14499660,14499900," Can."
14499900,14500060," We."
14500060,14500300," Even."
14500300,14500460," Do."
14500460,14500700," That."
14500700,14501260," Good."
14501260,14501580," Question."
14501580,14505820," Maybe."
14505820,14505900," I."
14505900,14506220," Can."
14506220,14507660," Yeah."
14507660,14511660," Because."
14511660,14511900," I."
14511900,14512380," Know."
14512380,14512940," That."
14512940,14513660," In."
14513660,14515100," Here."
14515100,14516620," When."
14516620,14516780," You."
14516780,14516860," Are."
14516860,14517180," About."
14517180,14517420," To."
14517420,14517900," Render."
14517900,14518300," Something."
14518300,14518540," So."
14518540,14518620," There."
14518620,14518780," Is."
14518780,14519020," A."
14519020,14519180," D."
14519180,14519340," D."
14519340,14519660," Yeah."
14519660,14519900," There."
14519900,14519980," We."
14519980,14520060," Go."
14522060,14523260," So."
14523260,14525740," What."
14525740,14525820," I'm."
14525820,14526220," Thinking."
14526220,14526380," Is."
14526380,14526620," That."
14526620,14530380," If."
14530380,14530540," We."
14530540,14530780," Had."
14530780,14530940," A."
14530940,14531500," Function."
14531500,14532380," Something."
14532380,14532700," Like."
14532700,14533740," Cell."
14533740,14534780," To."
14534780,14535580," Sprite."
14535580,14537740," Cell."
14537740,14537900," To."
14537900,14538380," Sprite."
14538380,14539020," So."
14539020,14539260," This."
14539260,14539580," Thing."
14539580,14541420," Accepts."
14541420,14541580," The."
14541580,14541980," Cell."
14541980,14542380," And."
14542380,14543100," Returns."
14543100,14543340," The."
14543340,14543900," Address."
14543900,14544060," Of."
14544060,14544220," The."
14544220,14544860," Sprite."
14544860,14547260," So."
14547260,14547580," It."
14547580,14547820," Should."
14547820,14547980," Be."
14547980,14548540," Relatively."
14548540,14549100," Straightforward."
14549100,14549420," If."
14549420,14549580," It."
14549580,14549900," Is."
14549900,14551820," True."
14551900,14552620," Right."
14552620,14552860," If."
14552860,14553020," It."
14553020,14553180," Is."
14553180,14553500," True."
14553500,14553980," We."
14553980,14554780," Return."
14554780,14555500," Sprite."
14555500,14557020," Alive."
14557020,14557980," Right."
14557980,14558220," We."
14558220,14558620," Return."
14558620,14559100," Sprite."
14559100,14559660," Alive."
14559660,14559980," And."
14559980,14560220," Then."
14560220,14560780," GMP."
14560780,14561020," To."
14561020,14561260," R."
14561260,14562220," If."
14562220,14562300," It."
14562300,14563020," False."
14563020,14563260," We."
14563260,14563660," Return."
14563660,14564860," Sprite."
14564860,14565420," Dead."
14565420,14566060," And."
14566060,14566380," Also."
14566380,14566860," GMP."
14566860,14567100," To."
14567100,14567340," R."
14567340,14571260," So."
14571260,14572140," That's."
14572140,14572620," Basically."
14572620,14572780," What."
14572780,14572860," We."
14572860,14573100," Have."
14573100,14573180," In."
14573180,14573420," Here."
14573420,14574140," So."
14574140,14574300," We."
14574300,14574460," Have."
14574460,14574820," Cell."
14574820,14576140," We."
14576140,14576660," Convert."
14576660,14576980," That."
14576980,14577420," Cell."
14577420,14577780," To."
14577780,14578020," A."
14578020,14578580," Sprite."
14578580,14579460," And."
14579460,14579700," Then."
14579700,14580100," We."
14580100,14580580," Send."
14580580,14580900," That."
14580900,14581380," Sprite."
14581380,14581620," To."
14581620,14582020," Screen."
14582020,14582420," Address."
14582420,14584820," So."
14584820,14585460," The."
14585460,14585620," Only."
14585620,14585860," Thing."
14585860,14586020," That."
14586020,14586180," Is."
14586180,14586500," Left."
14586500,14586580," In."
14586580,14586820," Here."
14586820,14587860," Actually."
14587860,14590580," So."
14590580,14590740," The."
14590740,14590980," Only."
14590980,14591220," Thing."
14591220,14591380," That."
14591380,14591540," Is."
14591540,14591780," Left."
14591780,14591940," In."
14591940,14592420," Here."
14592420,14592820," Is."
14592820,14592980," To."
14592980,14594900," Find."
14594900,14596660," You."
14596660,14596820," Know."
14596820,14598180," X."
14598180,14598340," And."
14598340,14598660," Y."
14598660,14598820," The."
14598820,14599380," Corresponding."
14599380,14599700," X."
14599700,14599780," And."
14599780,14600020," Y."
14600020,14601460," To."
14601460,14601620," Be."
14601620,14601860," Fair."
14601860,14602260," Column."
14602260,14602500," Is."
14602500,14602900," Already."
14602900,14603380," X."
14603380,14603940," Column."
14603940,14604020," Is."
14604020,14604340," Already."
14604340,14604740," X."
14604740,14605380," So."
14605380,14605540," The."
14605540,14605700," Only."
14605700,14605860," Thing."
14605860,14606020," We."
14606020,14606180," Have."
14606180,14606420," To."
14606420,14606500," Do."
14606500,14606660," We."
14606660,14606820," Have."
14606820,14607300," To."
14607300,14608340," Multiplied."
14608340,14608900," By."
14608900,14609300," 8."
14609300,14609860," Right."
14609860,14610500," Multiplied."
14610500,14610740," By."
14610740,14611060," 8."
14611060,14612260," And."
14612260,14612500," This."
14612500,14612660," Is."
14612660,14612820," The."
14612820,14613300," Position."
14613300,14613700," It's."
14613700,14614180," Actually."
14614180,14615140," Yeah."
14615140,14615460," So."
14615460,14615780," It's."
14615780,14616100," Not."
14616100,14616400," What."
14616400,14616520," I."
14616520,14616780," Want."
14616780,14617000," But."
14617000,14617340," Whatever."
14617340,14618540," So."
14618540,14618680," We."
14618680,14619020," Multiply."
14619020,14619140," It."
14619140,14619300," By."
14619300,14619660," Eight."
14619660,14620900," We."
14620900,14621380," May."
14621380,14621580," It."
14621580,14621900," Over."
14621900,14622260," It."
14622260,14622500," Probably."
14622500,14622840," Never."
14622840,14623020," Going."
14623020,14623100," To."
14623100,14623540," Overflow."
14623540,14623900," Honestly."
14623900,14624260," Because."
14624260,14624560," We."
14624560,14624720," Have."
14624720,14624920," 10."
14624920,14625060," By."
14625060,14625320," 10."
14625320,14626380," And."
14626380,14626740," So."
14626740,14626860," We."
14626860,14626980," Going."
14626980,14627020," To."
14627020,14627200," Have."
14627200,14627540," 80."
14637300,14638700," What."
14638700,14638860," Is."
14638860,14639020," It."
14639020,14639340," Called."
14639340,14639740," Into."
14639740,14640360," Short."
14640360,14640860," That."
14640860,14641060," We."
14641060,14641280," Can."
14641280,14641840," Basically."
14641840,14642340," Save."
14642340,14642880," Into."
14642880,14643460," X."
14643460,14644380," That."
14644380,14644540," We."
14644540,14644680," Can."
14644680,14644980," Basically."
14644980,14645340," Save."
14645340,14645660," Into."
14645660,14646020," X."
14646020,14646780," Then."
14646780,14647180," We."
14647180,14647460," Only."
14647460,14647740," Have."
14647740,14648120," Row."
14648120,14650120," Multiply."
14650120,14650520," We."
14650520,14650760," Turn."
14650760,14650900," It."
14650900,14651200," Into."
14651200,14651780," Short."
14651780,14652720," Zero."
14652720,14654920," Screen."
14654920,14655840," Y."
14655840,14656760," Del."
14656760,14657080," Two."
14657080,14657320," And."
14657320,14657440," There."
14657440,14657520," We."
14657520,14657680," Go."
14657680,14658020," So."
14658020,14658340," We."
14658340,14658620," Got."
14658620,14659000," Cell."
14659000,14659280," Row."
14659280,14659520," And."
14659520,14659880," Column."
14659880,14660080," And."
14660080,14660260," We."
14660260,14660820," Translated."
14660820,14661120," All."
14661120,14661420," That."
14661420,14661640," To."
14661640,14662280," Sprite."
14667300,14667420," We."
14667420,14667700," Could."
14667700,14668140," Probably."
14668140,14668740," Factor."
14668740,14669100," Out."
14669100,14669440," This."
14669440,14669780," Thing."
14669780,14670160," To."
14670160,14671280," Something."
14671280,14671780," Like."
14671780,14674640," Coord."
14674640,14675160," To."
14675160,14676200," Screen."
14676200,14677300," How."
14677300,14678120," Let's."
14678120,14678380," Put it."
14678380,14678580," This."
14678580,14678780," Way."
14678780,14679000," Maybe."
14679000,14679520," Board."
14679520,14679920," To."
14679920,14680760," Screen."
14680760,14682020," Right."
14682020,14682400," So."
14682400,14682640," You."
14682640,14683200," Accept."
14683200,14684140," Like."
14684140,14684360," A."
14684360,14685000," Board."
14685000,14685560," Coordinate."
14685560,14685800," A."
14685800,14686020," Single."
14686020,14686280," Board."
14686280,14686700," Coordinate."
14686700,14686900," And."
14686900,14687020," You."
14687020,14687140," Get."
14687140,14687300," A."
14687300,14687700," Screen."
14687700,14688200," Coordinate."
14688200,14688480," Or."
14688480,14688780," Something."
14688780,14689000," I."
14689000,14689200," Didn't."
14689200,14689320," Sure."
14689320,14689440," If."
14689440,14689560," It."
14689560,14689720," Makes."
14689720,14689920," Any."
14689920,14690100," Sense."
14690100,14690320," But."
14690320,14691240," That."
14691240,14691580," Way."
14697300,14697440," So."
14697440,14697620," That's."
14697620,14697820," Actually."
14697820,14698120," Kind."
14698120,14698220," Of."
14698220,14698560," Cool."
14698560,14699100," Isn't."
14699100,14699320," It."
14699320,14701320," I."
14701320,14701480," Think."
14701480,14701880," It."
14701880,14702200," Is."
14702200,14702600," I."
14702600,14702820," Think."
14702820,14702960," It."
14702960,14703080," Is."
14703080,14703220," And."
14703220,14703380," The."
14703380,14703780," Screen."
14703780,14704220," Is."
14704220,14704980," Supposed."
14704980,14705100," To."
14705100,14705220," Be."
14705220,14705380," Like."
14705380,14705480," A."
14705480,14705640," Two."
14705640,14705960," Bytes."
14705960,14706100," And."
14706100,14706320," Stuff."
14706320,14706500," Like."
14706500,14706700," That."
14706700,14708320," Right."
14708320,14708620," So."
14708620,14708900," Then."
14708900,14709060," You."
14709060,14709300," Just."
14709300,14709820," Display."
14709820,14711320," This."
14711320,14711560," Entire."
14711560,14711760," Thing."
14711760,14712500," But."
14712500,14714160," We."
14714160,14714520," Never."
14714520,14715320," Specified."
14715320,14715640," The."
14715640,14716060," Size."
14716060,14716240," Of."
14716240,14716420," The."
14716420,14716860," Screen."
14716860,14720100," We."
14720100,14720380," Never."
14720380,14721060," Specified."
14721060,14721300," The."
14721300,14721560," Size."
14721560,14721660," Of."
14721660,14721800," The."
14721800,14722160," Screen."
14722160,14723500," Um."
14723500,14724300," And."
14724300,14724600," What's."
14724600,14725000," Interesting."
14725000,14725260," Is."
14725260,14725600," That."
14725600,14726220," Uh."
14726220,14726400," I."
14726400,14726540," Don't."
14726540,14726820," Remember."
14726820,14727040," How."
14727040,14727200," To."
14727200,14727320," Do."
14727320,14727500," That."
14727500,14727840," So."
14727840,14728860," There."
14728860,14729100," Should."
14729100,14729280," Be."
14729280,14729660," Something."
14729660,14730120," Like."
14730120,14731880," You."
14731880,14732360," Probably."
14732360,14733220," Set."
14733220,14734360," Screen."
14734360,14734820," So."
14734820,14735020," Let."
14735020,14735140," Me."
14735140,14735740," Find."
14735740,14736240," The."
14736240,14738360," The."
14738360,14738860," Device."
14738860,14739420," The."
14739420,14739920," Devices."
14739920,14740180," The."
14740180,14740620," Description."
14740620,14741140," Of."
14741140,14741560," The."
14741560,14742120," Devices."
14742120,14743120," The."
14743120,14743560," Description."
14743560,14743900," Of."
14743900,14744100," The."
14744100,14744580," Devices."
14744580,14746740," Oof."
14746740,14747740," I."
14747740,14747880," Would."
14747880,14748360," Expect."
14748360,14749180," Maybe."
14749260,14749600," It's."
14749600,14753240," Memory."
14753240,14755840," Honestly."
14755840,14756320," I."
14756320,14756480," Would."
14756480,14757020," Expect."
14757020,14757280," To."
14757280,14757520," Get."
14757520,14757780," The."
14757780,14758260," Reference."
14758260,14758560," Of."
14758560,14758700," The."
14758700,14759160," Devices."
14759160,14759600," In."
14759600,14759860," A."
14759860,14760140," Thing."
14760140,14760500," Called."
14760500,14760840," Uni."
14760840,14761600," Uxian."
14761600,14761920," Tile."
14761920,14762440," Devices."
14762440,14762700," But."
14762700,14762840," I."
14762840,14763060," Didn't."
14763060,14763300," Get."
14763300,14763460," That."
14763460,14764080," I."
14764080,14764260," Think."
14764260,14764420," It's."
14764420,14764840," Because."
14764840,14765060," It's."
14765060,14765180," A."
14765180,14765500," Varvar."
14765500,14765900," Okay."
14765900,14766220," So."
14766220,14766380," I."
14766380,14766540," See."
14766540,14767060," Uxian."
14767060,14767280," Is."
14767280,14767460," Just."
14767460,14767580," A."
14767580,14767840," Virtual."
14767840,14768160," Machine."
14768160,14768560," Varvar."
14768560,14768840," Is."
14768840,14769040," The."
14769040,14769520," System."
14769520,14770340," That."
14770340,14770740," Includes."
14770740,14770900," The."
14770940,14771340," Devices."
14771340,14772340," That's."
14772340,14772660," Probably."
14772660,14772900," The."
14772900,14773200," Case."
14773200,14773740," Yeah."
14773740,14774020," Okay."
14774020,14774280," So."
14774280,14774940," That's."
14774940,14775060," The."
14775060,14775280," Thing."
14775280,14775820," That."
14775820,14776180," Includes."
14776180,14776600," Devices."
14776600,14776920," Okay."
14776920,14778400," So."
14778400,14779080," Okay."
14779080,14779220," You."
14779220,14779420," Have."
14779420,14779760," Width."
14779760,14779920," And."
14779920,14780360," Heights."
14780360,14781360," And."
14781360,14782360," Ports."
14782360,14782580," Can."
14782580,14782780," Be."
14782780,14783140," Set."
14783140,14783400," To."
14783400,14784240," Resize."
14784240,14784480," The."
14784480,14784880," Screen."
14784880,14785140," For."
14785140,14785280," The."
14785280,14785580," System."
14785580,14785800," That."
14785800,14786340," Supported."
14786340,14787020," That."
14787020,14787240," Makes."
14787240,14787540," Sense."
14788980,14789340," Okay."
14789340,14790280," So."
14790280,14792800," That."
14792800,14793140," Is."
14793140,14794800," Bizarre."
14794800,14796800," So."
14796800,14797380," What is."
14797380,14798360," Sft2."
14798360,14799160," I don't remember."
14799160,14799500," What is."
14799500,14800020," Sft2."
14800020,14800300," So."
14800300,14800680," Let me."
14800680,14801440," Let me."
14801440,14801940," Take a look."
14801940,14802240," At the."
14802240,14802720," Uxian."
14802720,14804040," M."
14804040,14804600," Like."
14804600,14805120," Uxian."
14805120,14805720," C."
14805720,14806600," Sft."
14806600,14807980," Some."
14807980,14808300," Sort of."
14808300,14808460," A."
14808460,14808740," Shift."
14808740,14809180," Stuff."
14809180,14810020," Right."
14810020,14810220," So."
14810220,14810520," We have."
14810520,14810860," Top."
14810860,14811260," And."
14811260,14811540," Thing."
14811540,14811820," Below."
14811820,14812040," The."
14812040,14812300," Top."
14812300,14818160," Okay."
14818620,14819100," So."
14819100,14821320," Yeah."
14821320,14823380," What."
14823380,14825720," Shift."
14825720,14826460," Two."
14826460,14827100," Maybe."
14827100,14827840," It doesn't really matter."
14827840,14828160," Honestly."
14828160,14828600," Maybe."
14828600,14829080," It doesn't matter."
14829080,14830400," But."
14830400,14830620," That's."
14830620,14831360," Such a."
14831360,14831960," Bizarre."
14831960,14834100," Explanation."
14834100,14835360," Reading from this port."
14835360,14835840," Always."
14835840,14836180," Return."
14836180,14836360," The."
14836360,14836780," Actual."
14836780,14837200," Size."
14837200,14840940," I."
14840940,14841300," Suppose."
14841300,14842360," What I have to do."
14842360,14842720," Is."
14842720,14842920," To."
14842920,14843360," Just."
14843360,14844180," Maybe."
14844180,14844880," Set."
14844880,14848040," Why."
14848260,14849160," We."
14849160,14849560," Why."
14849560,14850000," We are."
14850000,14851080," Reading in here."
14851080,14855980," This is such a bizarre example."
14855980,14858620," Right."
14858620,14862300," I would expect an example that just sets and like shows how to set it."
14862300,14862520," Like."
14862520,14862800," Why."
14862800,14865260," Why is it so complicated for what it."
14865260,14865800," Okay."
14867240,14867700," So."
14867700,14867720," So."
14867720,14871020," We set that."
14871020,14872200," Screen."
14872200,14873200," Width."
14873200,14874660," And."
14874660,14875400," I suppose."
14875400,14876300," I want to."
14876300,14877020," Just do."
14877020,14877680," 80."
14877680,14878760," Multiply by 10."
14878760,14879120," So."
14879120,14879500," And."
14879500,14880960," We can take a look at the hex."
14880960,14882260," So."
14882260,14883820," It's 50."
14883820,14884160," Okay."
14884160,14884480," So."
14884480,14885480," This is going to be 50."
14885980,14886300," And."
14886300,14886740," I suppose."
14886740,14887500," I just do."
14887500,14888460," Del."
14888460,14888980," But."
14888980,14889280," Maybe."
14889280,14889600," I do."
14889600,14890000," Del."
14890000,14890920," Can I just do."
14890920,14891580," Del 1."
14891580,14891880," Or."
14891880,14892680," Do I have to do."
14892680,14893320," Del 2."
14893320,14895740," Where is the width."
14895740,14896820," Where is the width."
14896820,14897660," Maybe."
14897660,14898200," I can have."
14898200,14898460," Take."
14898460,14900380," We can take a look at the width in here."
14900380,14902860," Width is actually 2."
14902860,14904500," Width is actually 2."
14904500,14906760," Which probably means that I have to do something like this."
14906760,14907880," Right."
14908320,14909400," So it's going to be height."
14909400,14910840," And of course it's a del 2."
14910840,14912480," Let me take a look at."
14912480,14912740," Yeah."
14912740,14913180," So."
14913180,14913920," Because."
14913920,14919480," Like you definitely want to have width that is bigger to 156."
14919480,14920200," That's for sure."
14920200,14920440," Right."
14920440,14922000," So that's why it's 2 bytes."
14922000,14924820," You said the width and stuff like that."
14924820,14925280," So."
14925280,14927460," To double check everything."
14927460,14928580," Let me."
14928580,14930980," Just compile this entire stuff."
14930980,14932700," And see if it works."
14932700,14933720," So."
14933720,14936020," Invalid label dead alive."
14936020,14937040," Really?"
14938320,14939920," So you have to put a new line in here."
14939920,14940980," Is that what you're telling me?"
14940980,14942000," Or."
14942000,14942680," Oh."
14942680,14942920," No."
14942920,14943120," No."
14943120,14943820," Probably not."
14943820,14944380," Probably."
14944380,14946040," Alive."
14946040,14946920," No."
14946920,14950600," So."
14950600,14953520," Do I have to put a new line in here?"
14953520,14955340," I want to put a new line in here."
14955340,14955660," No."
14955660,14956960," It's not the case though."
14956960,14959980," But I don't know where exactly the problem is."
14959980,14962440," And dead."
14962440,14967820," Let me go to that."
14968320,14973360," Invalid label dead in alive."
14973360,14978280," What?"
14978280,14978960," I don't know where I'm going to go."
14978960,14979900," I don't know where I'm going to go."
14979900,14980440," I don't know where I'm going to go."
14980440,14980840," I don't know where I'm going to go."
14980840,14981900," I don't know where I'm going to go."
14981900,14982460," I don't know where I'm going to go."
14982460,14982900," I don't know where I'm going to go."
14982900,14983900," I don't know where I'm going to go."
14983900,14984840," I don't know where I'm going to go."
14984840,14985840," I don't know where I'm going to go."
14985840,14986900," I don't know where I'm going to go."
14986900,14986900," I don't know where I'm going to go."
14986900,14987900," I don't know where I'm going to go."
14987900,14988900," I don't know where I'm going to go."
14988900,14989900," I don't know where I'm going to go."
14989900,14990900," I don't know where I'm going to go."
14990900,14996940," I don't know where I'm going to go."
14996940,15001040," I don't know where I'm going to go."
15001040,15003080," I don't know where I'm going to go."
15003080,15005080," I don't know where I'm going to go."
15005080,15006440," I don't know where I'm going to go."
15006440,15007640," I don't know where I'm going to go."
15007640,15009580," I don't know where I'm going to go."
15009580,15011580," I don't know where I'm going to go."
15011580,15013640," I don't know where I'm going to go."
15013640,15015520," I don't know where I'm going to go."
15015520,15018520," I don't know where I'm going to go."
15018520,15019520," I don't know where I'm going to go."
15019520,15020520," I don't know where I'm going to go."
15020520,15042700," I need more tea."
15042700,15044200," I need more tea."
15050140,15051140," Plot thickens."
15051140,15054460," The plot thickens."
15054460,15058700," I can't even call a label coffee, babe."
15058700,15065260," I can't even call a label coffee, but I can't even call a label coffee."
15065260,15067260," I can't even call a label coffee."
15067260,15069020," I can't even call a label coffee."
15069020,15071260," I can't even call a label coffee."
15071260,15073260," I can't even call a label coffee."
15073260,15074260," I can't even call a label coffee."
15074260,15075260," I can't even call a label coffee."
15075260,15076260," I can't even call a label coffee."
15076260,15078260," I can't even call a label coffee."
15078260,15080260," I can't even call a label coffee."
15080260,15081260," I can't even call a label coffee."
15081260,15082260," I can't even call a label coffee."
15082260,15083260," I can't even call a label coffee."
15083260,15084260," I can't even call a label coffee."
15084260,15085260," I can't even call a label coffee."
15085260,15086260," I can't even call a label coffee."
15086260,15087260," I can't even call a label coffee."
15087260,15088260," I can't even call a label coffee."
15088260,15089260," I can't even call a label coffee."
15089260,15090260," I can't even call a label coffee."
15090260,15091260," I can't even call a label coffee."
15091260,15092260," I can't even call a label coffee."
15092260,15093260," I can't even call a label coffee."
15093260,15094260," I can't even call a label coffee."
15094260,15095260," I can't even call a label coffee."
15095260,15096260," I can't even call a label coffee."
15096260,15097260," I can't even call a label coffee."
15097260,15098260," I can't even call a label coffee."
15098260,15099260," I can't even call a label coffee."
15099260,15100260," I can't even call a label coffee."
15100260,15100260," I can't even call a label coffee."
15100260,15101260," I can't even call a label coffee."
15101260,15102260," I can't even call a label coffee."
15102260,15103260," I can't even call a label coffee."
15103260,15104260," I can't even call a label coffee."
15104260,15105260," I can't even call a label coffee."
15105260,15106260," I can't even call a label coffee."
15106260,15107260," I can't even call a label coffee."
15107260,15108260," I can't even call a label coffee."
15108260,15109260," I can't even call a label coffee."
15109260,15110260," I can't even call a label coffee."
15110260,15111260," I can't even call a label coffee."
15111260,15112260," I can't even call a label coffee."
15112260,15113260," I can't even call a label coffee."
15113260,15114260," I can't even call a label coffee."
15114260,15115260," I can't even call a label coffee."
15115260,15116260," I can't even call a label coffee."
15116260,15117260," I can't even call a label coffee."
15117260,15118260," I can't even call a label coffee."
15118260,15119260," I can't even call a label coffee."
15119260,15120260," I can't even call a label coffee."
15120260,15121260," I can't even call a label coffee."
15121260,15122260," I can't even call a label coffee."
15122260,15123260," I can't even call a label coffee."
15123260,15124260," I can't even call a label coffee."
15124260,15125260," I can't even call a label coffee."
15125260,15126260," I can't even call a label coffee."
15126260,15127260," I can't even call a label coffee."
15127260,15128260," I can't even call a label coffee."
15128260,15129260," I can't even call a label coffee."
15129260,15130260," I can't even call a label coffee."
15130260,15131260," I can't even call a label coffee."
15131260,15132260," I can't even call a label coffee."
15132260,15133260," I can't even call a label coffee."
15133260,15134260," I can't even call a label coffee."
15134260,15135260," I can't even call a label coffee."
15135260,15136260," I can't even call a label coffee."
15136260,15137260," I can't even call a label coffee."
15137260,15138260," I can't even call a label coffee."
15138260,15139260," I can't even call a label coffee."
15139260,15140260," I can't even call a label coffee."
15140260,15141260," I can't even call a label coffee."
15141260,15142260," I can't even call a label coffee."
15142260,15143260," I can't even call a label coffee."
15143260,15144260," I can't even call a label coffee."
15144260,15145260," I can't even call a label coffee."
15145260,15146260," I can't even call a label coffee."
15146260,15147260," I can't even call a label coffee."
15147260,15148260," I can't even call a label coffee."
15148260,15149260," I can't even call a label coffee."
15149260,15151260," I can't even call a label coffee."
15151260,15152260," I can't even call a label coffee."
15161260,15162260," I can't even call a label coffee."
15162260,15163260," I can't even call a label coffee."
15163260,15164260," I can't even call a label coffee."
15164260,15165260," I can't even call a label coffee."
15165260,15166260," I can't even call a label coffee."
15166260,15167260," I can't even call a label coffee."
15167260,15168260," I can't even call a label coffee."
15168260,15169260," I can't even call a label coffee."
15169260,15170260," I can't even call a label coffee."
15170260,15171260," I can't even call a label coffee."
15171260,15172260," I can't even call a label coffee."
15172260,15173260," I can't even call a label coffee."
15173260,15174260," I can't even call a label coffee."
15174260,15175260," I can't even call a label coffee."
15175260,15176260," I can't even call a label coffee."
15176260,15177260," I can't even call a label coffee."
15177260,15178260," I can't even call a label coffee."
15178260,15179260," I can't even call a label coffee."
15179260,15180260," I can't even call a label coffee."
15180260,15181260," I can't even call a label coffee."
15191260,15193260," How do I scale it up?"
15193260,15196260," Oh, I can just yeah, I can do shit like that."
15196260,15197260," Yeah, boy."
15197260,15202260," Okay, so now where is on screen?"
15202260,15205260," I want to go ahead and just display the board."
15205260,15206260," That's what I want to do."
15206260,15208260," I want to just go ahead and display the board"
15208260,15211260," and see how it's going to display it."
15211260,15212260," How it's going to get displayed."
15212260,15218260," Honestly, I can just do something like this."
15218260,15222260," I can always do something like this where I..."
15222260,15224260," Yeah, it's not that big of a deal."
15224260,15225260," I can always dupe to."
15225260,15227260," Dupe to."
15227260,15229260," Get cell."
15229260,15231260," Convert cell to sprite."
15231260,15232260," Convert cell to sprite."
15232260,15234260," Set it to the address."
15234260,15237260," So, yeah, I think that's even better."
15237260,15239260," I think that's even better."
15239260,15240260," Right, so let's go."
15240260,15242260," Can't see shit in this mist."
15242260,15243260," Fuck."
15243260,15245260," Can't see shit in this mist."
15245260,15247260," Okay, that didn't work."
15247260,15248260," Okay, that didn't work."
15248260,15250260," I'm disappointed."
15250260,15253260," I'm actually disappointed."
15253260,15265260," So, we have coordinates there."
15265260,15268260," Then we multiply it by eight."
15268260,15269260," I think that's correct."
15269260,15270260," Then swap."
15270260,15275260," And that's what we have in here."
15275260,15276260," Aha!"
15276260,15278260," Well, I mean..."
15278260,15281260," So, we do actually include like a..."
15281260,15283260," You know, it's 16."
15283260,15286260," All right."
15286260,15287260," So, on..."
15287260,15290260," So, I remember there was also..."
15290260,15293260," You have to do the call to the sprite."
15293260,15294260," Yeah."
15294260,15297260," You have to do the call to the sprite."
15297260,15298260," On screen."
15298260,15300260," Display the board."
15300260,15303260," Display the cell."
15303260,15305260," So, you also have to do this thing."
15305260,15306260," That's for sure."
15306260,15307260," Boom."
15307260,15308260," Boom."
15308260,15308260," Boom."
15308260,15309260," I see."
15309260,15310260," I see."
15310260,15311260," I see."
15311260,15341240," first try dab dab dab dab dab so we need to skip some frames"
15341240,15371220," I think that's so freaking funny we did it we did it without using any debugger debugger waga so how can I skip the the frames though so we need to allocate some sort of a like a like a frame skipper I suppose so I don't know like a count"
15371220,15383660," and it's gonna be like literally single byte let's call it frame count it's called frame count and in here on screen on maybe yeah"
15383660,15412920," so let me see on screen there we go so we take the count right so this is the frame count frame count and of course you want to do something like that of course you LDA this thing so you read one byte you literally read one byte sure"
15413640,15428300," then you want to increment that you want to increment that and you want to kind of store it back so STA sure"
15428300,15453960," on top of that we can read it again we can read it again and if it is equal to zero right if it's equal to zero right we're gonna let it through we're gonna let it go through and do the thing otherwise we're gonna break out of that we're gonna literally skip"
15453960,15455100," so essentially"
15455100,15457340," so essentially yeah it's gonna go"
15457340,15463240," so for every four seconds"
15463240,15468680," every four seconds it's gonna compute the next state so it's kind of too slow"
15468680,15492560," one two three four one two three four so one of the things we can do okay we can say that it is"
15492560,15496940," and how many how many frames"
15496940,15501600," the frame count is"
15501600,15501620," the frame count is"
15501620,15506340," greater than 10"
15506340,15509460," it's greater than 10"
15509460,15513680," the frame count is greater than 10"
15513680,15543660," we want to we want to actually skip and start doing this thing and if it's greater than 10 we kind of want to actually reset it to 0 we want to reset it to 0 like so if it's less than 10 if it's less than 10 we're keep incrementing it so that's how we can kind of control that right so we have a count we're loading it up it's greater than 10 okay"
15543660,15552660," so we're resetting it to zero and we're doing this stuff okay if it's less we keep incrementing it but we keep kind of skipping from that stuff"
15552660,15554660," here we go"
15554660,15564660," and now we can even control the speed so i can say okay five frames so that should be a little bit faster so that's a little bit better"
15564660,15594640," so yeah that's my first more or less substantial program in uxie n i still have no idea what the fuck it is this is really confusing i'll probably never master it but i implemented a very simple game of life we can"
15594640,15610640," maybe add more interesting stuff in here so let me actually put the glider somewhere here so this is going to be another glider in fact we can keep piling yeah so we can keep piling gliders here"
15610640,15617640," so yeah that's pretty cool"
15617640,15619640," yeah let me maybe can i um maybe i can place them somewhere here so this is going to be another one like here"
15619640,15626640," zero one one zero zero zero zero zero so and in here we're going to place probably another one so i want them to marsh"
15626640,15633640," i don't know what i mean right so i want them to marsh i don't know what i mean right so i want them to marsh um i hope they're not gonna"
15633640,15644640," collide too much okay so they collided too much oh okay so they collided too much i mean that's fine at least we tested"
15644640,15659640," how the game of life actually works so how the game of life actually works so yeah make it bigger so making it bigger kinda means that i have to like restructure literally everything"
15659640,15666640," right so because like the size is literally hot coded in here um right so the final thing is gonna be like this uh huh"
15666640,15693640," right so i think this is gonna be basically the final thing uh basically the final thing uh basically the final thing uh basically the final thing uh basically the final thing uh uh so i think this is gonna be basically the final thing uh basically the final thing uh so i think this is gonna be basically the final thing uh basically the final thing uh"
15693640,15723620," uh so let me uh so let me see i'm gonna can i release it under mit right so where is the uh so how do i do mit i don't remember yeah there we go so this is mit and can i put that behind um the copyright is that a good copyright uh and i suppose i'm going to just upload it to github for"
15723620,15753600," for anyone who's interested so i'm going to put it on the gist uh mit opcode to indicate um oh it's i just read it and i thought that it's actually like legit true i didn't think uh there is such opcode uh yeah yeah but that will be fun honestly that will be fun uh right"
15753600,15766500," i'm gonna upload it on the public domain to be fair i uploaded one patch on the public domain once somebody took it made an entire project around it and got uh viral on twitter so"
15766500,15773940," i don't know man i don't know so i'm probably not gonna do that stuff anymore"
15773940,15803920," create a public domain to be fair yeah there we go here's the first program in uxie uxie n by zozin if anyone is interested uh feel free to extend it feel free to do whatever you want with it uh you know within the mit license and stuff like that and for people who's watching on youtube uh i'm gonna put it in the description if i ever go in the"
15803920,15818480," upload it to youtube i'm gonna upload it to youtube i'm not sure if i will because the final word is going to be pretty huge i think it's going to be around four hours right so i didn't expect that it's going to take four hours but i was learning this entire system on the fly"
15818480,15833040," uh honestly uh honestly uh i didn't prepare i tried to prepare for for this thing uh but the documentation i couldn't read documentation honestly like i couldn't understand documentation but then i looked into the source code and realized that"
15833040,15848000," okay i can quickly look up like very specific details about the implementation in the source code the source code is readable and i just jumped into implementation and here's the result it took me four hours actually five hours to implement it"
15848000,15870000," right so right so but now yeah so is it good you you can probably implement it uh way simpler if you put more thoughts into that and learn the entire system a little bit better i'm pretty sure a lot of things i did here are really weird cucumbersome and stuff like that but that's just my first attempt at this entire thing"
15870000,15888400," uh did they do well well okay the creators say that it's good okay thank you so much but the creators also trolled me with minus one with this thing so i'm kind of hesitant to trust them so anyway uh i guess that's it for today"
15888400,15895600," um so we got some sub by the way uh we got some subs uh corerunner thank you so much for everyone with the message"
15896160,15902640," uh modern javascript i'm more of a post-modern javascript user myself i don't use javascript i have no idea where"
15902640,15907120," you see javascript on the screen but i thank you so much for uh for giving money to jeffrey badens"
15907120,15913200," uh that's it for today thanks everyone who's watching right now i really appreciate that"
15913200,15922560," have a good one and i see you all on the next recreation programming session with a mr azuzio love you"

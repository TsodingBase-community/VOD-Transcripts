start,end,text
160,6880," bro i hate how easy it is like what the excuse me it's literally go look at that it's literally go"
6880,12240," here i just accept connections and just do go client and pass it there and then the client is"
12240,18560," just like who needs go like it works and it's convenient and what the it's a"
18560,22960," almost 10 years old library think about it and it hasn't been updated much it's"
22960,29840," basically the development has stalled and it works just like go like what the"
30000,36000," all right so uh let's do another library review shall we i've got this interesting library which"
36000,45200," is called libmule uh and allegedly it is a library that introduces go style concurrency to c so here's"
45200,52960," they have a bunch of examples and yeah that that looks like that looks like go choose"
52960,59840," help wait wait how the did they implement that is that like a based on macros or something like that"
60000,66320," that so yeah let's take a look at that um i know nothing about this library right so somebody"
66320,71440," posted this library in the discord um uh in our discord server some time ago and i just put it in"
71440,78160," to-do list so uh this is the only thing i know about this library whatever is on the front page i haven't"
78160,83120," looked into this library before the stream right so because i wanted to be like a raw reaction i'm a"
83120,89280," library reaction streamer uh right so i wanted to be a raw a genuine reaction to this library so let's"
89280,108880," fucking go let's download this well i mean to be fair to be fair 2017 was probably the last good year"
109920,115760," uh it's it's been it's been a downhill since then that's how you know the library is probably good"
115760,122800," right so because they they realized that to 2017 was peak and there's no point in doing anything after"
122800,129760," that it's not gonna get better than that so they just stop honestly pro move i i fucking respect that"
129760,137360," so let's download this thing uh so let's go ahead and just like see what we have in here uh w gets and"
137360,142640," i'm going to just copy paste this stuff in here i should have probably created a separate folder for"
142640,150160," lib mill uh right so i'm going to put that stuff in here and unboxing experience let's do the unboxing"
150160,164880," there's something suss about 573"
164880,169120," there's something suss about 573"
172160,184160," um um oh it's it's are you serious you really served me html by such link"
184160,190160," so i really have to download it through a"
190160,194320," so i really have to download it through a little bit and i'm going to do it through a little bit"
194320,195440," and i'm going to go to"
195440,206720," all right let's do development i suppose uh oh there is a okay suss"
206720,211280," okay um"
214960,222480," four years ago i mean it's actually it's actually two four years ago was not 2017 that's for sure"
222480,229840," so it's kind of semi-active kind of semi-active is there any releases um so there are no any release"
229840,237520," releases yet there are some release tags but honestly fuck all of that choice let's actually uh you know"
237520,243280," grab the latest version right grab the latest version maybe the with the latest fixes and stuff like that"
243280,249040," so it is implemented primarily in c 91 c a little bit of a c plus plus but i'm pretty sure it's"
249040,255040," entirely in c right so because github is dumb because it's owned by microsoft right so they"
255040,259680," couldn't distinguish c and c plus plus and it's actually on par with microsoft brand they don't"
259680,264800," even have a c compiler msvc is a purely c plus plus they literally don't understand the difference"
264800,270320," between c and c plus plus like at all it's just like uh uh c slash c plus"
273120,277120," that that's literally microsoft when when it comes to developing like c and c plus plus compilers"
277120,282160," right so i'm not surprised that uh they think that there's a little bit of c plus plus in this library"
282160,287360," 10 years ago holy fucking shit anyway let's let's fucking clone that uh thousand commits uh maybe we're"
287360,293040," not gonna do a full deep throat clone let's do a shallow clone right so let's do a shallow clone"
293040,297920," we're gonna do clone and we're gonna set the depth to one uh right and hope for the best"
299040,304880," let's hope for the best okay so that was no that was all right and let's actually remove this garbage"
304880,312400," uh what do we have in here so we have auto again auto gen but we also have cmake look at that chat"
312400,321120," uh epol incorporated i have no idea what the is that um so well usually the files with ink are template"
321120,327120," files if you know what i mean so essentially ink files they're like include files but i don't really know"
329040,335360," this is the files that are used by the build system to then uh you know generate some other files"
335360,339920," right so they have some parameters and stuff like that so they're substituted by scripts and everything"
339920,346080," oh i think it's it's usually in not ink okay forget everything i said so let's actually build this"
346080,350560," entire thing so i'm going to create a build folder right this because this is how we use cmake"
350560,356800," uh i'm a professional cmake developer i know what i'm doing then you do cmake dot dot and uh it will just"
356800,362320," configure this entire thing uh duplication warning so that's the usual for cmake and that was wasn't"
362320,371200," that hard you know when cmake outputs only how many lines uh only 15 lines you start to question do you"
371200,379120," really need cmake my guy or are you just like doing that because of the reflexes or i i don't know like"
379120,386640," like look at that do you really need cmake uh like you're introducing problems for no actual good reason"
386640,391840," it's just like are you sure but anyway we're not not questioning that we're not questioning that so"
391840,396480," let's actually build this and i think with 16 threads this motherfucker is built"
396480,404400," uh why am i acting like it's my achievement right it's it's it's a laptop's achievement"
405760,413440," so it did some things um but honestly um honestly i think it would be better to actually install it"
413440,419200," somewhere the usual trick i like to do is to configure this entire thing with cmake install"
419200,423760," prefix right and still perfect is basically the folder where it's all going to be installed"
423760,430960," usually i like to install additional stuff into home opt uh lib new like this right so this is basically"
430960,435920," where i install all the open source stuff i don't like to install it system-wide right so especially"
435920,440080," when i'm experimenting so i just installed for for the current user right so this is going to be the"
440080,445840," prefix right so then i'm going to rebuild it one more time with the 16 threads uh okay prefix didn't"
445840,451360," affect any of the source code but now if i do make install uh right if i do make install it will"
451360,456320," install all of that into the opt home folder and stuff like that so that's basically the final"
456320,463680," distribution you're supposed to have what's funny is that it also have executables right so it has meal"
463680,473200," meal s and some other things but it didn't really install them in a final installation right which is"
473200,478240," okay so this is a library but it's also a library that has an executable so what are these executable"
479200,486480," what are these executables does anybody know uh just a second so i'm gonna do find type a name uh let's"
486480,495600," actually just find all the executables uh executable uh right meal oh maybe it's just a name of a target"
495600,502160," but majority of them are just tests and the main thing in here is just a library okay fair enough"
502720,508240," fair enough so this is what we got so we got include right which is just one header file and"
508240,513760," we get the library right so and we have a static library and we have a dynamic library and we also"
513760,521840," have some cmake modules that help you to find uh libmyo so far so good so far so good right so if the"
521840,530320," uh this link worked and it gave me this installation i would have said based library but something broke"
530320,535280," right so it's kind of interesting so the library seems to be promising uh right so it seems to be"
535280,541520," very simple uh but this website itself is kind of neglected right so it's kind of neglected which is"
541520,546560," understandable right so the author probably has their own lives their own job and this is sort of"
546560,550960," like maybe their pet project maybe a recreational programming project so we're not going to be judging"
550960,556320," it too harsh right so because it feels like it's somebody's pet recreational project and i really"
556320,562800," respect that as a fellow recreational programmer i fully respect that so um let's see what we have in"
562800,571120," the include headers what do we have in here uh so um yeah that that's that's see that's sequels"
571120,577200," uh it doesn't support honestly okay look look look"
579840,588480," this is based this is based this is literally based not gnu c not clang go yourself msvc get the"
588480,598080," out of here already bro bro bro bro that's that's already star like i only opened include include"
598080,604000," file and i already see based i fully support that that's an insta start for me"
607840,614720," so what else do we have here please don't take me too seriously i'm just trying to be entertaining okay"
614720,623760," uh okay so i also use msvc from time to time i mean life is more complicated than means okay life"
623760,629680," is more complicated uh coroutines right so it has this coordinate honestly like i don't really know what"
629680,637360," is coroutines can anybody explain to me what the is coroutines because i keep hearing that word over and"
637360,643280," over again and nobody can like properly explain them to me what's the difference between coroutines and"
643280,651920," goroutines coroutines is nuts yeah that's the most uh you know in you know insightful information i got"
651920,658320," about coroutines so far honestly right so um so"
660960,665760," a routine that is a routine that is cooperative coroutines are computer programs components that"
665760,668480," allow execution to be suspended and resumed"
668480,680000," can you think about futures as coroutines in some sense because uh we were developing uh this library"
680000,689280," basically futures for c3 so c3 foot i'm gonna put it in here uh right and futures are just basically classic"
689280,695120," futures but one of the things that they do you can actually suspend them until some sort of event"
695120,702080," happens ah so yeah yeah okay okay okay so coroutines is things that yells and generator functions like in"
702080,709840," python okay so that's what is called coroutines so when you do yield and uh okay okay okay okay"
709840,714880," so that means i know what it is right i just didn't know that it's called like that"
715840,719040," pretty cool pretty cool pretty cool so now now we know it's kind of cool that they managed to"
719040,723840," implement it and see i wonder how you implement that in c actually so you probably need to save the"
723840,731280," content up we have content as i'm thinking about how you implement that i literally encounter the code"
731280,735280," that is responsible for that so there's some sort of a way to sort of take a snapshot of the current"
735280,741520," context and maybe recover the current context or something like that stacks okay okay so we are talking"
741520,747520," about stacks i suppose it's a call stack of some sort uh it's also using the avx instruction"
747520,762560," all right so we're getting deep we're getting really really i thought it's gonna be like on the level of c"
763280,771040," but it's a probably very specific feature that requires you to go underneath c which implies that"
771040,778000," you won't be able to run it easily on for example arm right so because it's x86 64 right so it's a set"
778000,786240," it's a custom implementation of set jump uh right so kind of interesting so set jump is like long jump"
786240,795120," thing right c set jump uh let me see so i'm you microsoft i'm not opening your website you uh right"
795120,801040," so there is a mechanism in c and c plus plus that allows you to sort of like save an environment right"
801040,807120," so you do set jump all right and you save it into environment and then you can perform a long jump um"
807120,813680," right i think long jump performs the jump and stuff like that and the way it works uh my hypothesis is that"
813680,819520," it literally saves the state of the registers right in in that buffer where you do set jump and then it"
819520,824640," recovers them and honestly i think this is literally what this function does it literally"
824640,829600," takes all of the necessary registers in here and just saves them somewhere in the memory where rdx is"
829600,836000," pointing i suppose right and yeah so that that's literally what's going on here just say that i wonder"
836000,840880," why they implemented it themselves right so because if anything it just feels like it's limiting"
840880,848400," the amount of platforms that can work on um so oh maybe there is several implementation of these things"
848400,853920," right so yeah maybe there are some several implementations and stuff like that so that's"
853920,864720," pretty cool uh new goal uh new goal all right so let's try to maybe link with this how about that how about"
864720,872160," that how about that uh so i feel like i have not acknowledged this up so let me let me actually"
872160,878000," quickly acknowledge this up uh so uh thank you so much in lois for twitch prime with the message hey"
878000,884880," hey new year same recreation programming sessions dub dub dub exactly exactly uh author vocale 343"
884880,889200," thank you so much with each prime and stupid engineer thank you so much for trying with the message two"
889200,898720," months let's go panger exactly let's go so uh here's the prob uh lib meal um so what we're gonna do in"
898720,905760," here is i suppose maybe i'm gonna create a separate thing i'm gonna call it test uh right and in here i'm"
905760,913760," gonna create a main dot c so the first thing we're going to do we're going to just include lib meal dot"
913760,922320," h right so lib meal dot h and i'm going to just try to uh you know build it as it is so let's use make"
922320,931040," files why not uh why not use make files i'm gonna do clang o main main dot c let's enable all of the warnings"
931040,938400," and all of the extra stuff uh right and i'm gonna just go ahead and try to build it right so it cannot"
938400,948160," find lib meal dot h so let's go ahead and say that you should find this entire thing in home opt lib meal"
948160,954000," um include right so that's the place where you can find all of that stuff so we tried to build that"
954000,966160," it didn't work so um lib meal include um that's very interesting is that because i should should have"
966160,969040," let me take a look at that stuff oh"
977680,988320," this is not this is not shell so um yeah thank you so"
988320,1000720," or you we could use tilde right so but let's actually do home uh so is it going yeah there we go"
1000720,1006800," it built it right so but since we don't use any of the functions so it like didn't really matter right it"
1006800,1012560," really didn't matter uh so let's go ahead and maybe try to call some of the functions in here"
1012560,1021440," uh so let's go to home um the first thing we have to do we have to do go for arg one or two or something"
1021440,1029840," like that uh so i have no idea how to use this entire stuff so does for is for supposed to have some sort"
1029840,1037760," of a signature right so they just say okay wrap full call into go and it will automatically work somehow"
1037760,1045040," okay so the signature doesn't matter is that what you're telling me um i can maybe put some stuff in"
1045040,1053200," here so this is going to be uh something like this right and um so in here i'm going to just print those"
1053200,1061040," arguments right so why not uh so i'm going to put it like that arg one uh so clear place one two boom"
1061040,1069520," uh clear place two three boom uh so and you're telling me that if i do something like 69 421 37"
1069520,1075760," right so it will just compile and it will just work you telling me that obviously it won't work well i mean"
1075760,1082320," i just didn't include stdio all right all right all right all right uh okay now we're talking so"
1082320,1087200," there's linking errors all right so we need to probably link with the with the library itself"
1087200,1092080," okay so we need some sort of a runtime let's go ahead and do that uh so i'm going to do lib"
1092080,1098560," mill i suppose if the naming convention is right that's how i supposed to do that so it's going to"
1098560,1105200," be lib uh here it is right so usually like lib is emitted automatically when you do l"
1105200,1111760," mill so that additional lib is kind of implied uh we can actually put a colon in here and explicitly"
1111760,1116080," say what we want to link with maybe i want to link with specifically static libraries so i don't have to"
1116080,1121200," deal with dynamic library paths and stuff like that so if i try to build this entire stuff it's not going"
1121200,1126480," to work because it can't find this choice so we have to specify where you're supposed to search for these"
1126480,1132960," libraries right so you're supposed to search them in here but in lib right so and now uh libs"
1134720,1140640," i forgot what was what it was it was not libs uh it was lib actually um"
1140640,1149760," am i going crazy it's a it's a big ah it's l for some reason i thought i actually put l in there"
1149760,1156560," still doesn't work okay so um what if i just say lib new is that what you want"
1157280,1164240," huh minus l but i already did minus l so is it's our lips okay"
1164240,1171520," right so guys i know how to do programming okay i know what i'm doing all right all right all right"
1171520,1179200," so uh let's actually link with a static one okay okay okay so and we end up with a pretty small executable"
1179200,1185840," that okay so it actually doesn't introduce any more dependencies than that uh much professional"
1185840,1191680," okay whatever so but this is because we linked it with the static one all right so if i link it with"
1191680,1198080," dynamic one i suppose it's going to be the dependency on that uh only that uh as so yeah there we go and"
1198080,1203760," it's not found this is precisely what i'm talking about right so it linked with it right but now i have to"
1203760,1209520," explicitly point it at the folder where it is located i could fix that with our paths and stuff"
1209520,1214400," like that but i usually prefer just like statically link everything right so because it just like creates"
1214400,1219520," less moving parts uh so you don't have to think about like whether the library exists on the machine"
1219520,1224800," or not just like link everything with with all of that stuff right there we go so we've got the uh"
1224800,1233440," pretty simple executable and if i try to run this entire thing okay so that go thingy that go"
1233440,1239360," thinky literally just run it and i suppose the signature of this thing literally doesn't matter"
1239360,1246080," right so if i just return uh 420 in here right so it's still going to compile right it's still going"
1246080,1252720," to compile all right so that means go is some sort of a macro right and it rubs this expression into"
1252720,1258080," something and just runs it in a separate sort of thread or routine i'm gonna sneeze by the way soon"
1260080,1268000," uh debated um so anyway let's let's actually take a look at what uh go macro does i think it's kind of"
1268000,1277040," interesting so let's try to find define go okay so when it calls to meal go meal go um"
1279920,1286480," is there like a like a formatting macro in new that prints formatted messages and called"
1286480,1294160," anyway so it's a it's a macro okay so it's an inline macro as you can see it creates a body"
1294160,1300720," right and what is it doing here it creates something called sp i have no idea what the it is"
1301280,1309440," so then it creates the meal context right then it saves the current state of the execution in that"
1309440,1316240," context this is what i can see so there's a meal prologue so it's i suppose it is some sort of a"
1316240,1324560," boilerplate but it also returns sp i still have no idea what is sp right so meal here uh right so meals here"
1325360,1335520," i swear to god is there meals in here there is no meals in the meal library what bro bro martin"
1335520,1341520," why did you miss such a good opportunity to create a milf variable or milf function"
1341520,1351120," i'm disappointed right honestly so far like not the link not working link was the biggest disappointment"
1351120,1360800," this was the biggest i'm joking so maybe it's underscore right is there something like new well i mean"
1360800,1372080," yes milf d wait thank you thank you"
1372080,1380880," my inner child is satisfied thank you thank you so much milf d wait she's waiting she's waiting for the"
1380880,1390640," me to grow up to you uh holy shit when i'm going to grow up i have no idea anyways so define go"
1390640,1391680," so mil go"
1391680,1401040," uh so there is some sort of a prologue right and milf here right so milf here okay so this is just a"
1401040,1406880," location where you called this macro right so we have a milf string right so this is a mil string and"
1406880,1411840," it's a classic is to stringify macro nothing particularly special so it basically captures"
1411840,1418800," the location where you call that macro right so everything is classic so far some sort of an anchor"
1418800,1427920," right so and it's a array allocated on a stack of this size so then it cannot be optimized what is"
1427920,1436560," unoptimizable ah this is very funny so they're allocating some sort of an anchor which is a region in a"
1436880,1442640," stack and they want to make sure that the region actually exists right so because of that they say"
1442640,1448080," that its size is volatile so which means that it's not going to be optimized by the optimizer of the"
1448080,1454080," compiler right so they create a bunch of stuff in here right preparing this is some sort of a boilerplate"
1454080,1459520," right so very low level boilerplate right they are probably manipulating something with assembly on the"
1459520,1465040," stack and stuff like that and then they're calling the expression that we passed in there right that's"
1465040,1472000," why it works like this vla yes it is vla uh right so that means it's allocated on the stack right so that"
1472000,1477200," means this thing doesn't have to be a const value it could be a runtime value but since it's on the stack"
1477200,1482720," it's going to work right so here we put this expression that we put into go and then we just clean"
1482720,1490800," things up and this is epilogue very interesting honestly very interesting so yeah so it's it's all"
1490800,1495440," needed so you don't have to do all of that stuff manually right so it's sort of like obstructed"
1495440,1499920," uh away from you all right that's pretty cool that's pretty cool so what else do we have in here so"
1499920,1504960," we create channels you can create channels and i suppose they are kind of similar to go channels"
1504960,1510800," and go channels if i remember correctly they're sort of like pipes through which you can send data"
1511360,1517760," right so and it's they become a queue right so usually you have two sort of like threats but"
1517760,1524480," in go they're usually called go routines right so they're called go routines and those go routines can"
1524480,1530320," put something into the channel so then another go routine can read that stuff from the channel"
1530320,1539440," right uh so we can put semicolon inside the go macro uh maybe we can right so but then we'll spend three"
1539440,1542400," hours debugging"
1542400,1551920," anyways uh right so yeah let's actually try to create some channels and let's see what is going to happen"
1551920,1554160," um all right"
1554160,1566880," all right so one warning generated okay so nothing really bad happened"
1567600,1579040," um right um right so chs is equivalent of putting something into the channel but in go as you can see"
1579040,1584400," you can just put that into the channel but in c with this specific macro you also have to provide"
1584400,1593840," uh the type of the thing that you're putting in there all right so s i suppose s stands for store or maybe send"
1593840,1599600," i'm not really sure but maybe it doesn't really matter so but but it feels like it's sent right so"
1599600,1605760," channel sent you can send data into the channel and r probably stands for read so you you're reading this"
1605760,1613440," entire thing right and then you should not forget to uh mark the channel as done right which is close"
1614480,1620960," but then also you have to do close right but that is equivalent to garbage collector in go"
1620960,1625520," all right that's very interesting okay okay okay"
1625520,1634560," so you know what i would like to do you know what i would like to do i would like to maybe create two go"
1634560,1642960," routines all right i would like to create two go routines so um i this is the sort of like the"
1642960,1648480," capacity of the of the channel right so usually you provide the capacity how many like elements"
1648480,1652800," you can store in there until things are blocked and stuff like that right so what i want to do in"
1652800,1659120," here is that maybe create something like producer right so this is going to be a producer and it's"
1659120,1667840," going to accept the channel like this and let's actually make it maybe push or maybe send uh 10"
1667840,1674000," messages in there like literally integers right so it's going to be uh sent this entire thing i and then"
1674000,1680160," uh you know just finish right so in in here so it doesn't really have to be void uh in here we're"
1680160,1686000," going to have a consumer consumer which also going to accept the channel but it's going to read things"
1686000,1692960," from that channel and print them um right so and how do we do that so this is the truth but it suppose"
1692960,1701120," something like chr should be enough right so i should be able to just do something like d uh chr ch"
1701120,1710000," right so and yeah i wonder for how long can i do that so i i obviously"
1710000,1717200," need to do that indefinitely right i must do that indefinitely until it's closed or something but how"
1717200,1729280," do i know that the channel is closed so i suppose one of the things i have to do is maybe do ch done"
1729280,1737680," right i must do ch done on the producer uh and then i close the channel and that means on the consumer end"
1737680,1743440," something will happen with the channel so it will be marked as closed or something this is my hypothesis"
1743440,1749360," but i have no idea how to do that so they don't actually tell you this function in here at all"
1749360,1754240," and honestly this example is kind of mad right so because it's not a complete working example"
1754240,1762480," but we can try to maybe go into the lib mill uh right and try to find somewhere nearby uh some of the"
1762480,1771760," functions right so deadline um so you can duplicate some of these things you can close you can send you"
1771760,1779360," can read you can do done uh in out have have no idea what the is that and this is probably the the the"
1779360,1787840," choose stuff but i honestly don't see how to check whether the thing is closed maybe um closed no it's just close"
1789120,1798880," they have explicit support for tcp"
1798880,1808720," so that means with this library you can already do networking right so without writing your own stuff on"
1808720,1814160," top right so it just like already have like adapters for tcp connections and stuff like that so you can do"
1814160,1828160," asynchronous stuff in echo so echo server is the new meta who needs raylib raylib speedrun raylib speedruns"
1828160,1831280," echo servers echo servers are the new meta"
1831280,1842800," this is fascinating right if if it works why why it's not developed why it's like okay i guess like"
1842800,1846720," once you have go nobody really needs this kind of stuff but i mean it's like it's kind of cool"
1846720,1853840," echo server is the new hello world to be fair echo server is basically the hello world of"
1853840,1859520," asynchronous programming and networking right isn't it um next right channels in china"
1859520,1866320," well yeah jaya can pretty much do anything c can do so i'm pretty sure you can have you can have"
1866320,1872400," channels in there and maybe you can even have them in a more convenient way because there is a really"
1872400,1879040," powerful meta programming right so they could be actually as convenient as in go right so it's just"
1879040,1885520," like it depends on how much effort you put into into the library enjoy um so why software thank you"
1885520,1891280," thank you so much for uh the tier one subscription um so crusty thank you so much for tomorrow with the"
1891280,1894720," message panger waving thank you thank you thank you thank you lander braga thank you so much for"
1894720,1901120," twitch pipe uh thank you thank you and welcome everyone so how do i know that the channel is"
1901120,1912000," cooked uh how do you do that and go by the way uh so because i don't really know um so go check if channel"
1912000,1920080," is closed is there any way to do that how to check a channel is closed uh without reading it ah so if you try to read it"
1920080,1927760," it's right so right if you try to read it maybe it will fail okay so let's actually just go ahead and try"
1927760,1933840," to run this entire thing right so let's just try to run it and maybe it will crash if i try to read the"
1933840,1939760," closed channel maybe that's what happened so anyways uh the first thing i'm gonna do i'm gonna just do"
1940800,1952160," um the producer ch right so i'm gonna just call it like that um maybe it would make sense to actually"
1952160,1962880," print what we're sending uh so print f uh producer producer d so that's what producer has sent right so"
1962880,1970400," this is what the producer has sent and this is what the consumer uh consumer have have uh has received so"
1970400,1975280," this is how we're gonna go about that right so i think it makes sense i'm gonna run only producer"
1975280,1980720," now only producer no consumer right just see what's going to happen all right so it doesn't compile let's"
1980720,1985920," see what's going on uh so i suppose to provide uh the type in here so that's understandable what else do"
1985920,1991840," we have in here so there's no true understandable let's provide the true uh okay okay okay what else do"
1991840,1999200," we have in here so chr chr chr also accepts the type of the thing you're trying to read understandable"
1999200,2006080," understandable uh all right so in producer managed to do only zero and then it just finished"
2006080,2013200," right so let me make sure that i didn't make any mistakes in here right so here is the loop it's supposed"
2013200,2021760," to do 10 iterations it managed to do once it tried to put something into this channel and then it just"
2021760,2030560," died right and it literally exited with a zero code this is fascinating i wonder if this is expected"
2030560,2038640," behavior if i only run one routine one core routine what is going to happen if i try to now provide the"
2038640,2045200," consumer right so i run producer and consumer uh right so what is going to happen nothing happened"
2045200,2053600," i wonder if there is some sort of a function that says start right so you know what i mean uh essentially"
2053600,2059840," you just register those things it's not coroutine yeah exactly it is not coroutine maybe i should call"
2059840,2067440," something in here so it only compiled it didn't run yeah i understand uh so there should be something"
2067440,2074880," channel capacities ah okay let's go back then so let's actually put like 100 in here uh right let's"
2074880,2081120," put 100 in here and try to run this and that okay right so that didn't change anything so the capacity"
2081120,2089840," 100 that didn't change anything but now with the consumer so we managed to send that to the producer"
2089840,2095840," and to the consumer but the consumer didn't receive anything right so and then we managed to send the second"
2095840,2102080," one so we went on the next iteration and then we kind of stopped or locked or something happened in there"
2102080,2107840," fascinating fascinating so i feel like this is not how we're supposed to do that"
2107840,2113280," um all right so thank you so much for all this up we have a lot of subs today"
2113280,2120560," uh gaogao q wq thank you so much for tier one uh mr force uh thank you so much for twitch prime core dian"
2120560,2125920," corp thank you so much for the message today another chunk of sas tricks to make c language superior in"
2125920,2132320," the future rust style memory management but in c honestly i don't really know how to implement"
2132320,2137520," borrow checker in c without like an you know external pre-processor of some sort"
2140160,2145040," i think you need to wait in maine that's a good hypothesis right so essentially i can look into the"
2145040,2151440," documentation but i kind of want to try to figure it out right so because it's kind of a testimony to how"
2151440,2160080," intuitive the intuitive the um the library is right try run consumer first um yeah we can try to run the"
2160080,2169280," consumer first sure uh no didn't do anything but it runs some stuff in the producer uh right so we can try to"
2169280,2172000," sleep for one second okay um"
2172000,2182400," no didn't change anything didn't change anything at all i wonder if something is broken in the library"
2182400,2188880," right so because we actually downloaded the latest version of the library um right what is breaking the"
2188880,2198160," while loop i have no idea something is breaking right so let's actually try to grab the latest the latest"
2198160,2204880," release rather than the you know cutting edge version uh so let's actually go here and so we have some"
2204880,2211120," untracked files which is just built nothing particular special how can i uh fetch the tags okay so let's"
2211120,2219120," fetch all the tags from origin uh so hopefully that is going to work all right so what was the latest"
2219120,2226320," release release it's kind of difficult to tell uh but we can take a look at the tags in here so 118 okay so"
2226320,2233200," 118 can i just check out 118 uh-huh so"
2233200,2235840," all right"
2237600,2242720," uh it's it's it's basically the previous one so they merged some pull request"
2242720,2248320," uh-huh fascinating i wonder what the was this pull request"
2248320,2255040," that's actually a lot of changes if you think about that that's a lot of changes um"
2255760,2258640," right so and this thing was actually eight years ago"
2258640,2265600," and so i'm actually maybe it's a hacked version and my computer is hacked already so what was this"
2265600,2272320," pull request that emerged four years ago this fixed issue when can be compiled or gcc but fails but it's"
2272320,2277040," actually"
2277040,2285520," maybe it's something with my git in here that is sus so it's kind of it's kind of difficult to to see"
2285520,2293520," um so yeah it hasn't been touched for like uh eight years and by the way it hasn't been touched by eight"
2293520,2301040," nine years and it just compiled on my machine it just compiled on my modern machine actually this is"
2301040,2306320," the latest void void linux and stuff like that can your web infrastructure do that"
2306320,2314320," can it survive at least one week of updates this i survived almost 10 years"
2314320,2320960," another star yeah so it deserves another star um so i'm actually not sure that"
2320960,2328480," i can simply switch to other commits in here so easily um because this is a shallow clone i think"
2328480,2332640," first thing i need to do i need to unshalow the clone but i don't remember how to do that git"
2332640,2339680," unshalow clone uh so it's actually quickly do that uh so i'm gonna go to the master"
2339680,2344400," uh how to convert git shot there was a one command i remember that so but"
2344400,2349440," yeah it's just fetch unshalow all right uh so let's just unshalow the clone i didn't want"
2349440,2353920," to do that because i thought uh right that is going to take too long it didn't take too long"
2353920,2357200," honestly right so that was relatively fast um all right"
2357200,2368400," so uh four years ago aha all right so i'm gonna go here so now we are here so there was a couple of"
2368400,2375520," fixes and stuff like that gc9 compilation fix and so on and so forth so now uh what i want to do i want to"
2375520,2387360," just rebuild everything uh right so in here oh so that's why you needed this fix i guess c can't do"
2387360,2394640," that just like a web environment so you you need to explicit oh okay okay okay so i got too cocky too too"
2394640,2404960," soon uh so that's that was the uh the pull request about that's what it was about um all right so the"
2404960,2415120," fixed compiler flags for windows build and then gcc build uh all right so okay so let's actually see"
2415120,2422320," is it compile them now it's still not compiled so where's the log and we can go here so let's go here"
2422320,2428720," and try to rebuild that yeah okay so we can't even build the previous versions right so we can't even"
2428720,2434400," build the previous version so that this is what we stuck with okay so i'm gonna dismiss the idea"
2434400,2439760," that maybe it's it's broken in the latest release right so we're not going to consider that idea at"
2439760,2444880," all so that means i'm just like using it i'm holding it incorrectly right so just like any apple"
2444880,2450640," products uh so documentation introduction so how the do you do that okay"
2452320,2464400," why this is not on the front page bro okay so yeah i should not be too harsh in this library because"
2464400,2469040," again it's kind of abandoned it's not actively developed but i think this should have been on"
2469040,2476400," the front page right so yeah at least this this is the first thing by the way i asked when i looked at the"
2476400,2482320," front page like how do i define the worker right so just like how they define it right so if it was"
2482320,2487920," on the front page that would have been easier right so i would have wasted place time so uh let's take a"
2487920,2494080," look so i suppose the only thing i need to do in here is just like put coroutine in here uh okay so and"
2494080,2501200," let's take a look at lib mil dot h uh so what is the core routine uh it's definitely it's an attribute"
2501200,2512160," known in line okay so so you have to make sure that it's not in lineable otherwise oh and you do in fact"
2512160,2520560," have to sleep you do in fact have to sleep uh right so yeah let's let's sleep a little bit i wonder where"
2520560,2526960," m sleep is coming from m sleep is their function okay okay okay okay so it's their function that"
2526960,2536400," you have to use and what does it do um i don't see where it is implemented actually it's an l expert oh"
2536400,2542640," it's it's it's the header file right what what does it actually do so it does something internally uh let's"
2542640,2554800," go to leave me in here and let's find where it is defined so it's a polar so it does fd wait uh-huh"
2554800,2565360," a current is i suppose i don't know what the fuck it is the new dot h ah it's it's the current location"
2565360,2572240," right so it's at this specific location it does fd wait milf waits for the d milf waits for the d"
2572240,2580960," so okay this is not a regular sleep by the way this is a little bit deceiving this is straight up"
2580960,2590320," deceiving right so because it makes you feel like just a regular sleep will work right so uh milf sleep"
2590320,2597680," so just a regular uh sleep will work but it won't you have to specifically use their milf sleep you have"
2597680,2606160," to sleep with their milf right uh because look it does a lot of internal stuff right so it's polling"
2606160,2613280," it's rolling it's roly-polling right it's doing all sorts of things with your milf uh right so this is"
2613280,2618400," a little bit deceiving maybe it should have not been called sleep right so because it makes you think that"
2618400,2624720," it's just like doing nothing in fact it's kind of like polling things right so it's a polar um"
2624720,2630240," so that's one criticism for the library i would say that it's a little bit deceiving"
2630240,2636320," all right so okay but i mean it's it's fine if it works whatever so uh this has to be coroutine and"
2636320,2639840," coroutine is not really that important the only thing it does it just ensures that this thing is"
2639840,2646080," not going to be in lineable right so then you have an opportunity to make it take a pointer of it or"
2646080,2654240," something right so i don't know but anyway so we do m sleep so and what's funny is that you provide"
2654240,2660560," a timestamp you provide that's why it was called deadline by the way this is why it was called the"
2660560,2666480," deadline because you don't provide how much you sleep you provide until what point you sleep"
2667200,2673600," so you're kind of scheduling it's a real-time system you give it a real-time like deadlines and"
2673600,2684640," that's interesting like a is that a thing is that is that what people do in this real-time"
2684640,2692480," systems they don't sleep a certain amount of time they sleep until very fixed deadline right specific"
2692480,2703120," fucking deadline um so let's go ahead and try to do that right so this is this is fascinating chat chat"
2703120,2708720," this is fucking fascinating uh all right so this is what we have to call right so now i understand that"
2708720,2714080," uh i perfectly understand that and now let's try to run this entire thing uh"
2720320,2721280," this is cool"
2721280,2732400," so yeah it's it worked the schedule is kind of weird right so first it sent two things in here"
2732400,2736720," and consumer kind of received them a little bit lagging but i mean they're interleaved"
2736720,2747600," it works after eight nine years with only fix of uh you know fixing the compilation errors and stuff like it"
2747600,2754560," works at the end we have some sort of um panic receive of type not matching the channel so i"
2754560,2762000," presume this is because the channel was closed right so this is what i presume the reason um so one of the"
2762000,2770080," things we can do in here is like have the same amount of iterations as uh like in consumer as in producer"
2770080,2775760," right and in that case it's not going to panic so it only panicked because we try to do this extra read"
2775760,2782000," from the channel that's the only reason it panicked and this is why i was asking how can i just check"
2782000,2785760," that the channel is not closed or anything um"
2785760,2791680," so yeah that's kind of cool and that's kind of cool actually"
2792480,2794480," um"
2794480,2795280," all right"
2795280,2797600," meal go"
2797600,2799760," it's just like"
2799760,2805840," without a go i don't know like what's the difference between just a regular go and meal go"
2805840,2809840," uh so coroutines like we already know that this is a coroutine"
2818720,2825760," select yeah i probably have to do select that's for sure you can do yield you can yield to the next"
2825760,2832080," coroutine and there's a lot of text probably useful right and i probably want to read it but i don't"
2832080,2837440," want to read it on the stream but maybe i could read it on the stream i mean so coroutine is defined"
2837440,2841760," using coroutine keywords and launched using go construct okay so that's an example we already know"
2841760,2848480," that although coroutine can return a value a value keep in mind that it is executed asynchronously and"
2848480,2854640," thus there is no way to retrieve the result understandable note that your program may work"
2854640,2859600," perfectly well even if you omit the coroutine keyword yeah so we already know that we already"
2859600,2864560," looked how the coroutine keyword works it just adds the attribute uh non-alignable however such"
2864560,2870560," program may break randomly when compiled by different compilers or with a different um with a different"
2870560,2877440," optimization levels a known problem is with clang and o2 optimization levels understandable so also"
2877440,2883600," bear in mind that coroutines are scheduled in a cooperative fashion if one coroutine blocks for"
2883600,2888240," example by calling sleep it blocks the entire process therefore coroutines friendly versions of"
2888240,2895840," blocking functions such as m sleep nfd c below should be used okay in case uh of you in case of need"
2896480,2902880," in case of need that's really weird english but anyway you can yield cpu to other coroutines"
2902880,2909360," explicitly this reminds me windows before being like a separate operating system like when it was"
2909360,2917440," like a desktop environment for dos i think it had like a similar cooperative multi like a multi-processing"
2917440,2923520," or something like that right so each process had to explicitly uh you know yield to the next one or"
2923520,2930000," something like that uh go before 1.14 so go before 1.14 was was like that right so you also have to"
2930000,2936480," yield things this is actually kind of cool hmm this kind of gives me a goal of ideas"
2936480,2947520," so essentially um things like chr and chs probably yield implicitly do i understand correctly"
2949280,2956560," they probably yield implicitly so everything is executed up until chs or chr or explicit yield"
2956560,2961760," then the schedule switches to another function right executes a little bit until another switch and so"
2961760,2968960," on and so forth you can check that is true that is actually absolutely true so chs uh all right so"
2968960,2974720," this is the function and that means i probably have to go somewhere here into the uh into the source code of"
2974720,2984880," this entire stuff can just like grab this entire thing so chan all right so what do we do in here"
2984880,2998720," uh so mill slow right no channel used hmm choose in it chs struct close choose wait"
3000640,3009440," hmm it calls to wait but i have a hypothesis that maybe yield does a similar thing maybe does a similar"
3009440,3018640," thing so yield right it's also a function all right so and it's not defined within chan uh right so let's"
3018640,3027680," try to grab this entire thing uh so where it is defined uh and it does suspend but not wait but"
3027680,3035360," maybe they're kind of related right so i'm not sure this looks fishy but yes we can resume the coroutine"
3035360,3038800," even before suspending it"
3038800,3044880," i really appreciate the comments like that"
3044880,3059280," very welcome very well then all right so i think i i understand the gist of this library i understand the"
3059280,3064320," gist of this library um so the thing we want to do like jblow style yeah so johnson blow style"
3064320,3072400," um so we probably need to do select right so let's let's try select uh so you do choose uh out ch int"
3072400,3082160," um so yeah i don't remember how to use this entire shit um so then you do end and some other stuff"
3083200,3091920," um and i suppose so on the default you just do something else"
3091920,3099520," but one of the things you can do with the channels like you can"
3099520,3107360," you can just never finish right so we kind of have a really weird use case in here right usually you have"
3107360,3112480," a service that is just like serving things and it doesn't really need to be finished and if it needs"
3112480,3119600," to be finished i suppose usually what the producer does it sends determination uh message of some"
3119600,3124640," sort and this is something that we could do in here as well right so we could do something like int"
3124640,3131360," minus one right and instead of doing this kind of thing right we can just do true uh all right so and"
3131360,3139600," then we do something like int x and if x is less than zero then we just simply return otherwise we print x"
3139600,3145360," and that's basically how we can do that we don't really have to explicitly know whether the channel"
3145360,3151360," is closed or not like it doesn't matter so if you try to read from a closed channel that means it's sort"
3151360,3156400," of like an exceptional situation that means you your protocol between coroutines didn't communicate"
3156400,3162560," properly this is just my my hypothesis so maybe in go you also can't really do that right so you're"
3162560,3167360," supposed to just coordinate and cooperate properly so you never really need to check whether the channel"
3167360,3174320," is closed do i understand the philosophy of go routines and go generally correctly um right so"
3174320,3180880," context done with select it's probably done with select maybe i don't really know how select works"
3180880,3187840," properly so my entire bot by the way is written in go but i still don't know how to properly use channels"
3189280,3196800," um so i think the ch calls goes together with this ch make yeah that's probably true there's also ch done"
3196800,3204640," uh which can accept integer and zero which is rather bizarre so which makes a question like what exactly is"
3204640,3216000," that uh what exactly is that so lib mil dot h ch done value size and doesn't just like send it as a last value"
3216000,3222160," maybe that's what it does actually so essentially maybe what i could have done in here is just like"
3222160,3229440," remove this thing and just do minus one right so is it going to work no it doesn't it doesn't i was"
3229440,3238000," thinking maybe it just sends that value in here so also a closed channel is a common thing yeah i suppose"
3238000,3243120," so i suppose i have to do select thing and stuff but maybe there is a something in tutorial for that"
3243680,3251840," so let's take a look at this um so business logic oh this is already tcp well let's not do that yet"
3251840,3259200," right so we're going to go into tcp at some point uh right so yeah uh making it robust maybe internal"
3259200,3268960," uh documentation uh channels okay so this is how you create channels when center is done with sending it can"
3269600,3275600," i'm going to announce the fact using ch done function the value third parameter passed the function is used to"
3275600,3281440," signal uh to the receivers that sender is done once all the actual messages are read from the channel"
3281440,3287760," any subsequent calls to ch won't block and will return the specified message instead"
3287760,3293040," but this is wasn't it exactly what we did in here"
3294800,3298320," right so i just did that but i didn't receive that thing"
3298320,3303520," yeah i didn't receive it like what the excuse me"
3305120,3312880," um maybe this maybe this is because i closed it right because i closed the channel so who's supposed"
3312880,3318960," to close the channel then so is that the consumer uh the code receive said typically looks like this"
3318960,3324960," uh the quote on the receiver side typically looks like this okay so you receive this thing and then break"
3324960,3330000," to delegate the channel use ch function no the search delegates any element remaining in the channel"
3330560,3336080," um oh it's it's deallocated hmm"
3336080,3338880," hmm"
3338880,3349680," so i suppose i have to probably close it in here"
3349680,3359680," uh-huh so i close it in here uh but this will only work because i have one consumer so we have several"
3359680,3366640," consumers this is kind of something that should shouldn't do ch close uh ch right so if i try"
3366640,3372320," to do something like this it works without any problems so if i have several consumers i probably"
3372320,3378720," have to do it somewhere here honestly probably have to do that somewhere here uh but if i'm going to be"
3378720,3386560," doing it somewhere here that means i have to pull it in here um right but i don't have to pull it in here"
3386560,3392800," because i have sleep right so because this thing will kind of block for this function for this amount"
3392800,3399520," of duration right it will block for this function for this amount of duration and yeah that's it and"
3399520,3406880," and usually you you have channel per consumer anyway right so yeah i think i think i understand how"
3406880,3414080," it all works right so i think i understand how it works okay so i think i'm mentally ready to write an echo"
3414080,3420480," server chat i think the time has come to introduce an echo server uh all the service were not echo"
3420480,3429360," friendly uh right so but i need to make a small break and uh refill my capacity right so because i'm"
3429360,3434240," listening for yeah for for an hour right so the time has come to make a small break and after the break"
3434240,3440080," we're gonna look into the networking capabilities of this library because it does have some stuff right so as you can"
3440080,3448480," see network uh right so ip address to use tcp or udp you need ip address first uh the wrapper type for ip"
3448480,3455440," addresses both ipv4 ipv6 is called ip address right it also includes port number unlocks addresses blah blah"
3455440,3462320," blah there are two functions to construct ip addresses okay so it has its own sort of wrappers and and"
3462320,3469280," everything so which is kind of cool right which is kind of kind of cool so you can do like a while"
3469280,3476320," loops in here and everything uh and stuff like that so anyway let's make some break and um all right we"
3476320,3481520," are back so let's go ahead and try to implement the echo server right so this is going to be the final"
3481520,3487600," testimony for the library can i implement the proper echo server which is asynchronous and doesn't create a"
3487600,3495120," thread per connection right so let's see if we can do that uh so here are the um networking capabilities"
3495120,3500960," right so we can actually see them uh the first thing you have to do you have to create an ip address"
3500960,3510640," right so uh ip local oh you can even provide the interface which i'm not even sure like we need that"
3510640,3518320," that's really weird but i mean it's ip address so that means on the level of ip protocol right so yeah"
3518320,3525120," we don't really create any specific address or whatever i don't even know um so"
3525120,3534240," ah i suppose if you want to work directly with ip protocol and ip addresses and stuff like that"
3534240,3539920," because ip is rather like a low level protocol right you can't really do much with this protocol so"
3540720,3548320," speaking of tcp um oh it's it's just an intermediate step before you connect somewhere okay that's that"
3548320,3554560," makes sense so we can be listening to incoming connection and we can be listening on a certain"
3554560,3559520," interface or we can be listening on a certain address and so on and so forth to start listening"
3559520,3566560," for incoming tcp connections use tcp listen function to accept new connection use tcp accept function um"
3566560,3572000," i wonder like do i do that in a separate coroutine i suppose i do that in a separate coroutine so i"
3572000,3582240," want to actually store like save this entire thing uh right so um so this one is basically first let's"
3582240,3590080," call it just first uh right so and let's rename this entire thing to first this is our first uh example"
3590080,3595040," using lead meal um and i suppose another thing we need to do we need to copy paste this entire thing"
3595040,3600720," and we're going to call it uh something like echo right so this is going to be echo and if i want"
3600720,3606560," to build all of them i'm going to build building first and echo so i suppose i want to maybe"
3607840,3620320," factor out all of these flags into c flags uh like so uh huh so this is our c flags uh c flags and this one"
3620320,3629920," is also c flags uh so we need that so they don't look too scary uh and all of that i i think it's usually"
3629920,3637520," called the leaves right so this is a little bit about emacs magic as usual and there you go so now"
3637520,3645280," if i do uh g2 minus b uh there we go it couldn't build anything because there is no such thing as echo"
3645280,3650080," right let's create it first uh i'm going to go to the first and because i want to just steal a bunch of"
3650080,3658800," things in here right so i'm straight up stealing from my own own source code um so and i suppose"
3658800,3665520," i can already try to build this entire thing so uh minus j2 it actually runs into threats so both of"
3665520,3671600," these uh executors are going to be built simultaneously and minus b basically doesn't do incremental build so"
3671600,3678640," no matter what was a rebuild or not what was not rebuilt it will rebuild everything right regardless of"
3678640,3683920," whether it was changed or not right it always rebuild thing uh yeah that's what it is so just"
3683920,3690480," in case so it doesn't cache anything um okay so we can try to create maybe server right so it's going"
3690480,3696640," to be called routine and this is going to be server right uh we're not going to accept any channels i"
3696640,3701440," suppose at least for now uh what we're going to do here we're going to organize the loop right so we"
3701440,3707280," want to first create the address and i think i'm going to be listening right now only to uh local"
3707280,3713200," connections right and obviously i'm going to be listening to the port 6969 obviously and zero"
3713200,3723600," what the fuck is zero so um so what does it take um so local address gets a previous remote in addition"
3723600,3733680," to certain um it's not obvious right away what the fuck is this third argument and why it is zero but"
3733680,3741440," we can take a look at this thing uh right it's a mode okay so maybe we're going to be using a default"
3741440,3748000," mode and that's why it is zero understandable uh perfectly understandable so where is the"
3748000,3754640," listening and so the next thing we do we do the listen and if i remember correctly from"
3754640,3761200," just a listen sys call of linux this is a backlog this is the size of the connection queue or whatnot"
3761200,3768640," right so here we set 10 let's set 69 in here so and this is a tcpsoc this is the listen and then what"
3768640,3776400," we're doing here we in an infinite loop just accept connection conniptions right so we accept connections"
3776400,3783200," i don't really remember what is minus one uh right so let's take a look at the accept c skull um right"
3783200,3790400," and it's oh it's an address i suppose right so usually in the original c skull in posix uh you"
3790400,3795680," can specify the pointer to the address so you know the like the address of the connected socket or something"
3795680,3800240," like that but here you provide minus one which is rather interesting so we can take a look at what the"
3800240,3811280," focus tcp accept um yeah oh it's ah ah all right in the milfs library this is not an address of the"
3811280,3817760," connected socket it's actually deadline and then we provide minus wait a freaking second you can provide"
3817760,3825840," minus one as a deadline so that means i don't have to sort of like uh allocate enough memory for all of"
3825840,3833440," these things to finish i can simply do minus is that what you're telling me i can just do sleep my really"
3833440,3845360," really bro brovski brovski what the what why wasn't that told me wasn't why didn't they told me that"
3845360,3851200," right in the front page of the of the website ah i see i see why"
3853040,3860640," yeah because this m sleep does not finish sleeping after all of the co uh coroutines have died right"
3860640,3865360," so as you can see both of them have died but we keep sleeping uh right"
3865360,3873600," all of the coroutines have finished but the milf keeps sleeping"
3873600,3877360," i'm so sorry chat"
3879840,3887440," uh the true sleep grinder okay so but maybe it can be useful how can you get out of the sleep"
3887440,3894880," though i think you can try to panic what if we try to panic in here let's go ahead and try to panic"
3894880,3903920," uh right so we're gonna do that ah look at that oof oof oof oof oof so that means what i have to do"
3905760,3911760," yeah it's a valid strategy of actually you know waking up uh after an infinite sleep just just"
3911760,3919040," panic right so just like forcefully okay but let's not do that let's actually go back so i suppose you"
3919040,3924880," you do need deadline in here uh but for the echo server minus one we can just keep the infinite"
3924880,3930720," deadline right so we can just keep an infinite deadline and i suppose yeah so it's it's a timeout"
3930720,3936480," for accept because it's kind of like a asynchronous and stuff but i but i expect that tcp accept is"
3936480,3943680," going to switch to other coroutines while we're waiting for for the connections right so um after"
3943680,3951120," that maybe we can print something in here uh accepted can conniption right so accepted conniption"
3951120,3956720," and i wonder like right now i don't really want to do anything with the conniptions so i think i'm gonna"
3956720,3964880," just close can it do tcp close uh i feel like i can um so tcp close yeah i actually can so it is a"
3964880,3970960," thing that i can do and then i can just repeat that and continue accepting the conniptions uh right"
3970960,3979520," so something like that um so in here we can maybe even do some nice stuff so this is the host we can just"
3979520,3986960," save that to host so this is the host and in here we want to provide the port but what's the type of"
3986960,3991840," the port in here what's the type of the port it's just integer okay i really like that because usually"
3991840,3998720," some of the implementations some of the libraries accept specifically unsigned unsigned the shorts"
3998720,4005280," right so because ports are shorts and they're unsigned so the maximum value that you can have in here"
4005920,4011200," uh is actually what two to the power of 16 yeah so that's the sort of like the maximum value i"
4011200,4016880," suppose it's actually minus one uh right so because of that they want to reflect that in the in the"
4016880,4022000," signatures and they only accept unsigned short or whatnot this library being kind of liberal about"
4022000,4027600," that so they just just they just being a chill guy library like you you wanna you wanna put an integer"
4027600,4032640," there here we go it's an integer don't worry about this unsigned shorts and all of that nerdy"
4032640,4039120," shit we accept integers just relax you can put minus 69 in there yeah exactly thank you so much"
4039120,4050480," so who cares all of these like uh you know sizes of integers sinus and unsigned is for nerds nerds"
4050480,4056880," nerds nerds javascript being a chat language it's just all flows it's just all flows because real"
4056880,4062080," chat software developers ship shit they don't think about the sizes of integers they got they got a"
4062080,4067680," ship they got a fucking ship they have no fucking time to think about integers have no fucking time"
4067680,4078800," that's why everything is flowing all of that shit is for nerds fucking nerd i should ah too much tea so"
4078800,4085040," so what i want you to do i just want you to like create separate variables and the reason why i want you"
4085040,4091520," to create separate variables so then i can use them in logging uh right so i can now just start listening"
4091520,4102880," uh right and say listening to uh s and d right s and d um maybe linux kernel should change ports to be"
4102880,4106960," fair enough fair enough"
4109360,4114880," was some sugar in the tip cup surprisingly i don't drink tea with sugar right i think it's a purely coffee"
4114880,4122480," right so um anyways you haven't seen me on sugar yet"
4122480,4132560," uh um so yeah um so this is what i wanted right so that's why i needed uh reusable variables and stuff"
4132560,4138640," like that because i want to have some sort of a logging uh logging a pogging so let's do go server"
4138640,4144560," and let's um let's actually sleep indefinitely on this one right so because we can always just like"
4144560,4150400," control c this mother flipper right so let's go ahead and just do aqua boom and if we're listening"
4150400,4161120," to this entire shit and then if i do uh tell net boom man you this is so easy bro"
4162560,4166800," i i hate how easy it is like what the excuse me"
4166800,4180000," all right so that means core routine void client so and i suppose here we have to accept the tcp"
4180000,4185840," socket right so here's the tcp sock uh and it's going to be client right maybe we're going to call it s"
4185840,4195200," right so and essentially when we accept the connection uh we just do go client s and that's it"
4195200,4202880," right so um yeah we can even put this kind of stuff in here uh right and in here we can do tcp close so"
4202880,4209040," essentially it is done in a separate routine right so we just do go client so there's one routine that"
4209040,4215520," keeps accepting connections and then this routine just like handles them and stuff like that so and"
4215520,4221920," if i try to build this entire thing uh right compilation drop everything builds so in here i"
4221920,4227440," suppose what we have to do now we have to read some stuff right so here we're sending data doesn't matter"
4227440,4232400," we can receive the data okay so let's pre-allocate the buffer we can pre-allocate the buffer on the stack"
4232400,4239440," right so let's allocate one kilobyte so this is our buffer uh so and we can do just receive"
4239440,4248160," i suppose tcp receive uh where is the the nice wrapper parapa the wrapper"
4248160,4258240," holy this is a perfect name for utility for generating bindings for libraries or something"
4260160,4267840," parapa the wrapper oh my goodness has anyone actually used that name for a bindings generator of some"
4267840,4272560," sort no the wrapper"
4272560,4278640," this is genius i like"
4278640,4281600," i'm sorry"
4284640,4292480," um yeah kick punch it's on the mind um so let's do that so here we have to provide the buffer uh"
4292480,4297760," also we have to provide the size of the buffer and here let's just set infinite deadline because who"
4297760,4304080," fucking cares anyway who fucking cares so this thing returns the size uh all right so this is probably and"
4304080,4312080," how much we received and essentially we can just print that stuff i suppose uh right we can say the"
4313120,4320240," client send um this thing right so but we also have to print that as a size thing so that means"
4320240,4326640," we have to put n and it accepts integer specifically and the buffer in here and let's also not forget"
4326640,4333200," to do this kind of stuff so also let's do while true uh this is while true and we're going to put"
4333200,4338320," it like that so it's a little bit of unreachable code but that's fine that is totally fine so let's try"
4338320,4345280," to rebuild it okay so that seems to be working and now let's try to do this kind of thing uh huh so"
4345280,4354400," what do we have in here uh so this is a telnet okay uh hello and that didn't work all right so this is the"
4354400,4370800," that is fascinating so it didn't switch to the next thing chat it didn't switch actually right so one"
4370800,4379040," routine created another one but there was no switch i wonder if i have to explicitly do yield uh on this one"
4380400,4384960," is that something i have to do is just to go and then yield um"
4384960,4390480," recursive"
4390480,4400400," uh buff should point to buffer though what are you guys talking about anyway um so what was it saying"
4400400,4409680," by the way yeah client sent hello and then something is weird with receive so it kind of blocked and we"
4409680,4418240," didn't receive anything um so i'm not really sure so receiving data similarly as we send returns number"
4418240,4425280," of bind received and the value should match the number of byte requested uh so there is a receive until"
4427440,4432640," so that's a very interesting function uh so it it just like makes sure that we read this exactly"
4432640,4439120," yeah exactly this amount of bytes except that the read stops when one specified character is in count"
4439120,4441840," ah ah"
4441840,4450800," oh that's interesting maybe that's what we should have done right so it reads until new line for instance"
4452000,4458400," um go routines on a single line yes exactly they are on a single uh thread in a single thread"
4458400,4465920," that kind of the point so in the runtime switches between them constantly sort of simulating you know"
4465920,4472720," parallelism but it's not really parallelism it's concurrency right so in that way you can do asynchronous"
4472720,4478880," like concurrent code without um introducing like without switching the paradigm right you still kind of"
4478880,4486080," programming in imperative synchronous style um right i wonder like what happened in here right so because"
4486080,4494400," here i just did accept and i just created a new thing in here and that's it did i have to do something"
4494400,4502640," else or maybe you know what maybe creating core routines like that is not really a good idea"
4504080,4514480," what i probably should have done is maybe have two coroutines right uh two coroutines the one accept"
4514480,4520400," connections and as soon as it gets accept connection it sends the socket to the client coroutine which"
4520400,4524880," already kind of handles it so this thing should be already pre-created and maybe this thing should"
4524880,4532400," handle several connections but then how does it handle several connections um so yeah that's bizarre"
4532400,4542400," honestly that is bizarre so for instance i want to do a little bit of a test what if i create a core"
4542400,4550720," routine uh which is a counter right so and what it does essentially it just like you know counts things um"
4550720,4562080," right counts things um maybe each second or something um right so here so we print we should print accept"
4562080,4573440," connections right print f accepted connection uh-huh um and so i suppose maybe we're going to just continue"
4573440,4582880," printing indefinitely so we print uh z u but maybe it's going to be just d because it's an integer uh-huh so"
4582880,4592000," this is that so we're just doing something like that and we're going to be m sleeping now plus uh one second"
4592720,4600320," right so one second we're going to be doing the count uh right so and in here every time i accept the"
4600320,4607440," connection i simply start the counter but it doesn't really accept the circuit right so i just want to see"
4607440,4614800," if the coroutines created from the server coroutine actually exists and actually like working and counting and"
4614800,4621280," stuff like that right that's what i want to see uh so it's rather interesting like what is going on here"
4621280,4630160," okay so we're listening and if i try to do telnet uh all right so it is counting all right and while it is"
4630160,4636480," counting can i accept more i can accept more connection now we have two counters right and then accept can"
4636480,4643200," accept more connections and we have now three counters so it is working like roughly as expected actually"
4644560,4654160," um right so yeah we don't see any problems honestly that's kind of funny um so yeah as you can see"
4654160,4657680," there is a scheduling there things are going on uh right"
4660640,4668880," that's really funny is that because yeah so let's go to the client now all right let's go to the client"
4668880,4678800," and i just took client uh s right and this is where it stops working maybe i should have done something"
4678800,4687520," like tcp receive until right so maybe this is what should have done count maximum uh right i'm count"
4687520,4695120," maxing so this is the delimiter counts uh yeah so essentially i have to provide buff then i have to"
4695120,4699760," provide the delimiters and the delimiter for our case is going to be new line the amount of them is"
4699760,4705440," going to be obviously one and a deadline is going to be minus one and then every time i receive the thing"
4705440,4710880," i'm going to be just like printing it in here uh all right so maybe i don't even have to have new line"
4710880,4717280," in here because the new line is going to be in buffer or something like that so if i try to now"
4717280,4722640," build the whole thing will i be able to just do telnet"
4722640,4725120," okay"
4725120,4729600," all right"
4732080,4735680," okay so that seems to be working so then i do telnet"
4735680,4744640," okay so that's pretty cool so let me close that and it's something is really weird going on when i"
4744640,4753920," just close this entire stuff and it also doesn't really accept the connection right away right it"
4753920,4759520," doesn't really accept the connection right away only when i send some data then tcp accept wakes up"
4760720,4765200," uh is it blocking until buffer buffer is full no as you can see this is not what happened"
4765200,4771440," right so because we were receiving some messages we were receiving some messages like in here"
4771440,4778560," um but maybe tcp receive specifically actually waits until it's full so let's actually read about it"
4778560,4786320," uh tcp receive um right so first argument is the circuit reads the data from tcp second is point to"
4786320,4793600," the buffer third argument is the size um well i mean if it was waiting until the full buffer is read it"
4793600,4801920," would not return the amount of things read so do you need to handle n equal zero in client i think i do"
4801920,4810960," all right so if n equal to zero return i actually break yeah let's let's give it a try so maybe this is"
4810960,4818240," what happened in here so let's do that so because yeah i forgot about it thank you so thank you so much"
4818240,4827360," uh all right all right so that's that's pretty cool uh okay tell net hello okay the client sent hello"
4827360,4835120," we can actually send uh probably several of them all right so then i can close this connection it was it"
4835120,4843280," thank you who who said the equals zero alex over i'm gonna give you vip why aren't you vip uh alex over"
4843280,4851120," because you you've been helpful already uh very much in the streams okay so and here i can close"
4851120,4856960," the connections as well so everything seems to be working so we can even maybe log this entire stuff"
4856960,4867280," right so uh client closed the connection there we go so that's pretty cool um but now i feel like what"
4867280,4873120," we need to do in here we need to actually send that data back right so we need to send that data back"
4873120,4884080," to be proper uh echo server right so let's go ahead and do that tcp send uh and um let me see tcp send"
4884080,4889040," so it accepts only buffer length and deadline and the usual stuff right so this is the buffer this is"
4889040,4894720," the length and the deadline is going to be minus one so it also probably returns how much it's sent"
4894720,4901120," right so and if it's sent n equal to zero we're also breaking in that case as well right so it's kind"
4901120,4907280," of a common situation in here all right so let's give it a try uh let's restart the whole thing uh it"
4907280,4915120," doesn't compile look at that so just a percent declared here um socket buffer protocol so i think"
4915120,4920880," i forgot to provide the socket yeah that's true understandable thank you so much thank you thank you"
4920880,4930480," thank you right so telnet hello we didn't receive the hello back unfortunately so i have no idea what the"
4930480,4934480," what the f has happened why we didn't receive back"
4934480,4938800," hmm that's bizarre"
4938800,4947440," that's bizarre do i have to flush uh somehow tcp send"
4948720,4958560," um yep to optimize through may store the data into our tcp flash freaking flash okay so we have to do"
4958560,4967520," flush all right all right um so does it return anything doesn't return anything tcp uh flush um so"
4967520,4974640," this is the s yeah just just flush and you have to provide a deadline as well uh all right so let's"
4974640,4978000," try to re restart the whole thing hello holy"
4978000,4990960," we've got this synchronous echo server look at that look at that uh so telnet world okay so what about the uh"
4990960,5008880," it's that fucking easy without a horrible uh it's literally go look at that it's literally go right"
5008880,5015200," so here i just accept connections and just do go client and then pass it there and then the client is"
5015200,5015600," just like"
5015600,5022960," who needs go like it works and it's convenient and shit right and"
5022960,5031680," what the fuck it's a almost 10 years old library think about it it and it hasn't been updated much"
5031680,5037760," it's basically the development has stalled right the only changes that this library had in the past 10"
5037760,5042960," years were basically fixed for the latest compilers right so because apparently the latest compilers"
5042960,5047600," broke some compatibility or shit like that freaking classic modern software you open but"
5047600,5051280," it still works and it works just like go like what the"
5051280,5054320," this is so cool"
5054320,5060720," like this deserves like a two stars seriously go start this library like holy"
5060720,5062320," this is so beast"
5062320,5070160," the library the idea of the library is cool the implementation is cool and it works after"
5070160,5074000," being abandoned for 10 years just think about that"
5074000,5080240," well i mean yeah so there's some latest changes like it like nine eight ten years right so"
5080240,5091840," honestly like it since it's kind of abandoned and since there's like download links are not working"
5091840,5098160," and everything i didn't have any high expectation on this library right at the beginning of the stream you"
5098160,5102560," you you saw that you heard that i said that i don't really expect too much from it right"
5102560,5106320," so because it's probably like a recreational thing but this thing just surpassed all of my"
5106320,5110160," expectations like it's just like it works you can use it for some stuff"
5110160,5115200," like the next time i need to create like a server like a synchronous server to serve some"
5115200,5117280," things like i'm probably going to be using this library"
5119840,5130160," that's cool what the what a base library i wonder what else does it have uh so it has networking okay"
5130160,5134960," so does it have any anything else right you have you you can work with unix sockets and stuff"
5134960,5143840," uh so there is a m f read please know the file operation if blocked will block all running coroutines"
5143840,5150320," oh it's just like for general blocking operations i guess it doesn't really have anything except for"
5150320,5159120," just like channels and networking right so it just has this explicit support for networking but i think"
5159120,5164480," honestly like it's kind of enough right do you really need anything else usually you need a synchronous"
5164480,5172240," stuff specifically for the networking anyway uh time to make websockets in c again well i mean the websocket"
5172240,5180480," library in c3 that we developing in here right so c3ws so this library um i'm going to put that in the"
5180480,5189040," description for for youtube people who are interested it was translated from a c library that i developed"
5189040,5198960," cws right but but to be fair the development of c3ws is more advanced than the original library right so"
5198960,5204560," this thing straight up passes the autobahn test suite right so and it tests autobahn test suite"
5204560,5210320," like tests uh the websocket protocol implementations very extensively and it passes all of them like it's"
5210320,5214800," with flying colors the only problem with this thing is just it's synchronous right it's not asynchronous"
5214800,5221040," this thing doesn't pass yet one of the things i can do i can take whatever i developed in this"
5221040,5226560," library and kind of backport it back to here and then make it asynchronous with libmil"
5226560,5233440," does the cws is right it doesn't use anything it's just like a very dumb very naive synchronous"
5233440,5243840," implementation um the the author made a sql library okay uh so let me see let me see let me see so this is"
5244400,5250240," uh leap leap leap deal uh dot org okay oh it's"
5250240,5254000," what's the difference between one"
5254000,5264480," is it actively developed though is it actively okay"
5268880,5271760," i'm gonna put that in uh in the description as well"
5271760,5275680," sql uh to mil"
5275680,5280240," wait so this is a dealf library now"
5280240,5285360," holy shit we gotta we'll get a whole family in here"
5285360,5287280," um so but i mean"
5287280,5292400," i feel like so far i can use it as a drop-in replacement for milf"
5293920,5300560," right so dealf is a drop-in replacement for milf essentially uh so okay let's do a comparison can i"
5300560,5308560," download this thing at least uh all right so can i download this thing um so maybe i'm gonna put it in"
5308560,5308960," here"
5308960,5322480," all right that's an obvious improvement from milf is that the download link working"
5324160,5330320," okay so the the library has improved obviously the download link working okay so let's unpack this"
5330320,5336400," entire thing and does it have cmake it doesn't have cmake another improvement this is the second"
5336400,5343120," improvement it doesn't use cmake it only use uh auto tools okay that's pretty cool so let's take a"
5343120,5350240," look at the configure uh so configure help uh all right so let's see so does it have a prefix"
5350240,5355040," yeah well i mean configure script usually have prefix so let's also install it at home opt"
5355040,5362160," leap deal uh right so let's do configure oh emacs has a highlighting thing for for the configuration"
5362160,5368000," scripts that's pretty cool so let's build the whole thing all right uh and it doesn't build"
5370480,5382080," well um nothing much to say maybe uh if we take a look at the github repository let's take a look at"
5382080,5390720," the github repository so there's some also changes uh from three years ago okay um so retrieve open"
5390720,5397520," itself maybe the thing i have to do in here um it's it's also thousands of commits so bro literally"
5397520,5404160," re-implemented the entire library again from scratch with the same interface that's dedication"
5404160,5418720," check if iq uh all right so where is the faq okay uh mill okay different from uh was a project that aimed"
5418720,5425680," to copy go's coroutine model in c1 to 1 without introducing any innovations or experiments the project is"
5425680,5432000," finished now and it will be maintained but won't change in the future oh okay the deal is a follow-up"
5432000,5437440," project that experiments with the structured concurrency and diverges from the goal model"
5437440,5442560," technically these are the differences okay so this one is really interesting libdeal is ideomatic c"
5442560,5450320," whereas libmill makes go concurrency api and implements it in a in the most identical manner in c libdeal"
5450320,5456640," tries to provide the same functionality via a more c-like and posix-like api for example choose is a"
5456640,5465120," function in libdeal rather than a language construct in goes panic is replaced with error returns okay okay so"
5465120,5470320," there's not that much difference in there right so there's sort of like ideological philosophical"
5470320,5476400," differences and stuff like that oh and they have a web socket implementation look at that apparently just a"
5476400,5488080," the second oh yeah so that's really funny okay so they live cool but i mean i can't compile it with my"
5488080,5495760," modern compiler right so i i need to at least test uh all right so just see if it's compilable at all"
5495760,5502240," right so let's remove this entire thing uh huh so let's git clone the whole thing uh i'm gonna clone the"
5502240,5509600," the entire thing not shallow clone it i'm not a pussy i'm gonna i'm gonna deep throat clone it okay so"
5509600,5516000," here's a libdeal does it use cmake doesn't use cmake still improvement is there well i mean why i'm"
5516000,5523600," creating build so let's do configure uh let's configure the whole what do you do when you don't have a"
5523600,5534000," configure script does it i'm not familiar with the auto tools and like uh so cmake was there ah there was a cmake"
5534000,5537680," oh okay so i'm an idiot i don't know why i didn't see cmake i'm sorry i'm sorry so"
5537680,5550160," something is fishy why the download page gives you this thing that doesn't have c or did it have cmake or am i being stupid i think i'm just being stupid as usual right so"
5550160,5556320," i think i'm just being stupid and i really apologize for that so okay so this is a lib deal"
5556320,5564480," uh let's do that and let's just build the whole thing okay not a single warning though look at that"
5564480,5572480," the download out the classic i think it's a i think it's a signature of the author right it's a sort of like"
5572480,5578080," a signature of the author like all of the download links are broken right so deal with that right so you"
5578080,5585600," know that that's the author of the lib mill and lib deal library uh so anyways uh let's actually install"
5585600,5593040," this entire thing right so it's going to be in install right it installed it and it feels like the interface"
5593040,5598720," is pretty much the same like at least for our application that we are doing right so because"
5598720,5603920," we're not doing select or anything like that uh it yeah it's a gatekeeper it's it's a gatekeeping"
5603920,5608960," strategy right so you have to prove that you're worthy to use this library so at least for the"
5608960,5614480," simple application that we're using the interface is pretty much the same isn't it right so here's"
5614480,5623520," the test and i can probably literally just replace mil with deal boom and then within echo i replace"
5624160,5632400," mil with deal and first uh i replace mil uh with deal right and i compile all of them"
5632400,5639600," okay almost almost almost there's there's some differences in here so there's no chan in there"
5639600,5646000," at least okay so but this is for the first example let's actually emit the first example let's only build"
5646000,5652640," echo okay so in echo there's no tcp sockets or anything like that so they're probably called something"
5652640,5663280," different uh what are they called tcp uh-huh so and what does it return it ah you have to"
5663280,5670720," the difference is that it doesn't return it through return it returns us through the argument so"
5671840,5678160," okay i see i see like i don't want to don't really want to do that honestly right it's like"
5678160,5683200," kind of a mechanical refactor just change the style of calling all these functions you're going to get"
5683200,5691840," the same thing right so okay um i think it's nice to be aware of this library but honestly i kind of like"
5691840,5696960," the interface of meal right if i had to choose between these two interfaces i kind of like the interface"
5696960,5703600," of meal because because of its simplicity right maybe it's not going to scale well uh right because"
5703600,5709680," it's c maybe it's not going to scale well and in c there is a huge problem is that you can't be that"
5709680,5716480," careless as in go with return values and stuff because you don't have a garbage collector right so"
5716480,5724960," usually c code converges into this really weird state where return values of functions are always used for"
5724960,5732480," errors and any useful results are returned through the arguments anyway by providing pointers and stuff"
5732480,5739440," like that right and because of that c code usually not that convenient right and when you have this"
5739440,5745520," interface where which actively uses return values it kind of like feels nicer but then it doesn't scale"
5745520,5752320," well then it just doesn't scale well because again it's a stinky c it's a stinky half of a century old"
5752320,5760160," language that we're kind of stuck with so yeah i see i see i see it's kind of cool right so it's just"
5760160,5768800," like a new new library was sort of a challenge for the author to recreate the goal right and deal is"
5768800,5775760," already okay so how would i actually do it in c if i didn't have this like creative limitations of"
5775760,5781840," recreating go i really appreciate that this is literally the definition of recreational programming"
5781840,5787520," right so he didn't have to do that right so there is just go right so just use go if you want to"
5787520,5792320," deliver the value to shareholders just use go and don't think about that all of that shit is for"
5792320,5800880," nerds but this author right so um he's an artist right so just he's a philosopher right so what if"
5801440,5807040," what if let's try that okay we created a cool library but what if that we created another cool"
5807040,5816560," library that's what recreation programming is all about and i highly respect that base library 10 out of"
5816560,5824160," 10 so this one also receives my star both of them both of the libraries absolutely love them visionary"
5824160,5835200," exactly exactly exactly eggs fucking acly eggs fucking acly all right so i think i'm gonna use it for"
5835200,5841840," something right i have a i had a couple of ideas of uh for network applications for simple network"
5841840,5850880," applications and i was thinking to maybe use c3 with c3 foot for that um but since we have milf i might as"
5850880,5858640," well just try to use new for that okay thank you thank you whoever suggested uh so yeah i i know who"
5858640,5863840," suggested that thank you so much secondary the sorcerer i'm gonna give you vip right so because"
5863840,5871120," you suggested such a base library there we go your vip now okay so let's take a look at the uh subs and"
5871120,5877760," resubs recommitments um thank you so much kawai thank you so much for twitch prime uh team martiro thank"
5877760,5887520," you so much for this with the message milf is awake deal with that right okay wind dump thank you so much"
5887520,5896880," for this prime encoding butter thank you so much for tier one subscription subscription all right uh so i guess"
5896880,5904640," it is it is time for us it is time for me to go haha uh we haven't rated anyone for quite some time already"
5904640,5912080," maybe the time has come to maybe raid somebody so i forgot how to raid uh do we have any recreational"
5912080,5922640," programmers streaming right now anybody who's doing recreational pog ramming uh john may be streaming i don't see john"
5922640,5937280," on streaming do we have any suggestions on who to raid um um t2de to t2 uh let me see just a second"
5937280,5948000," t2de i have no idea who that is but we can try to raid them so um so yeah oh t2z all right"
5948720,5956320," so let's raid them i wonder if it works through the chat arena uh you started to raid do i have to now"
5956320,5962560," go to my dashboard and just confirm that i feel like i have to go to the dashboard and confirm this"
5962560,5970400," entire shise because twitch because freaking twitch yes so we have to wait until everyone has gathered"
5970960,5982720," right and we are uh raiding now there you go okay that's it of the day thank you all love you all"

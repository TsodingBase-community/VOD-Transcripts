start,end,text
240,5600," Hello everyone and welcome to yet another recreational programming session with Mr. Zosin."
5600,12880," So, recently we worked on this very interesting thing called RayLib.js which is an unofficial"
12880,19360," implementation of subset of RayLib API and JavaScript. Right, so essentially it's the idea"
19360,26160," to have a simpler web version of RayLib which is just like a single JavaScript file and then"
26160,34000," you can have your RayLib game compiled as WASM module. That RayLib.js file picks up your"
34000,40800," compiled WASM module and just run it. Right, so, and the main point here is that it doesn't depend"
40800,46160," on mscripten. Right, I personally don't really like mscripten. I feel like it is needlessly"
46160,53360," over complicated. It has a lot of moving parts. It is really great for just taking existing, you know,"
53360,63360," POSIX compliant software and simply, you know, porting it to web. It works really great with that"
63360,69520," but when it comes to simplicity, and I do unfortunately care about simplicity, it is really not that great."
69520,75200," Right, it is not that great. It also introduces some problems that you can't predict. So,"
75200,81200," as far as you know, RayLib recently had like an issue because of the new version mscripten,"
81200,87120," like it doesn't work anymore. Right, so essentially when you depend on these kind of complicated things,"
87120,93440," it's always a gamble. It's always a gamble and I don't really like that. So, and here we have a subset"
93440,101280," of RayLib. A subset of RayLib that doesn't require any mscripten. So, we basically traded stability and"
101280,107680," simplicity, right, in exchange for like a full fullness of implementation. I'm not sure if I said that"
107680,113760," correctly, but essentially, right, so you have like a less featureful API, but it's much simpler and"
113760,119040," much more stable. And if you have an application that depends only on that API, you can use that,"
119040,123680," right. So, it's always a trade-off in software engineering. It is always a trade-off, right."
123680,131280," There is no magical silver bullet that solves it all. So, and essentially, I don't really actively maintain"
131280,136560," that thing, but I'm open to contribution to this entire thing. So, I'm going to actually post it in"
136560,141600," in the chat. And for people on YouTube, right, so who's watching me on YouTube, it's going to be,"
141600,150160," of course, in a description, as usual, as usual. So, and people were contributing a lot of different,"
150160,156480," you know, examples from the official RayLib repo. So, here is my example that I implemented, right. So, it's"
156480,162880," basically this thing in action, right. And we already have quite a few examples from RayLib ported"
162880,167840," in here, right. So, at least five of them, right. So, there is, you created a window. You can't really"
167840,175040," see shed because of the color of the text, right. But, for instance, recently people"
175040,180800," ported this example, which allows you to move the ball around. This is an official RayLib example."
181440,188160," It's from the official RayLib source code that works with our library that we're implementing"
188160,194240," from scratch. It just works, right. So, also, mouse will support, right. It's not really fully"
194240,199040," implemented, right. So, text format is not implemented yet. So, as you can see here, we have printf style"
199040,205520," formatting, but we can implement that later, right. So, it's not fully implemented yet. And also, we have"
205520,211200," these kind of things, right. So, it's all that are examples from the official RayLib repo. And thank"
211200,215280," you everyone who submitted the pull request. I really appreciate that, right. So, because I do"
215280,220320," not actively maintain that, but people still contribute things and implement more and more different APIs."
220320,227280," So, it becomes more and more useful, right. So, usefulness is not particularly like a binary thing."
227280,232480," It's sort of like a continuum, right. So, the more sort of like functions from RayLib you implement,"
232480,236480," the more useful this thing becomes, right. So, obviously, it's not particularly useful for if"
236480,243600," you do 3D, but if you have a very simple 2D game, maybe it's going to be useful for you."
243600,251200," And speaking of 2D games, and speaking of 2D games, I have a 2D game that implemented quite some time ago,"
251920,258480," right, in a similar style to RayLib.js. It is called SnakeSea. Wasm, right. So,"
258480,262960," you can find it in here, of course. I'm going to actually copy paste this entire thing into the chat."
262960,267680," So, this is how the game looks like, right. So, and for people on YouTube, I'm going to put that"
267680,272640," in the description as well. So, this is how it looks like. This is the game. You cannot see the egg,"
272640,277840," because the initial position of the egg in here, but here's how the egg looks like, right. So,"
277840,283440," and it's a usual snake game, right. So, it's a usual snake game. And it's pretty cool, right."
283440,289280," So, the kind of the main point of this snake game is that it's so smooth, right. So, the focus while"
289280,293440," I was developing this game like two years ago, I think I developed it two years ago, the main focus"
293440,298320," was on smoothness. Everything has to be smooth. There's no discrete jumps or anything like that."
298320,305760," And if you hit yourself, this is how you sort of like, you know, die. So, and it is developed in a"
305760,310640," similar style. It is developed in a similar style. So, essentially, the entirety of the logic of the"
310640,318320," game is a single WASM module. It is, in fact, a single WASM module. And then you have a very small"
318320,326080," JavaScript runtime that wires up different functions like drawRectangle, drawText and stuff like that into"
326080,331920," JavaScript. And not only that, I also implemented a native platform for this game. So, you can actually"
331920,337920," compile it to SDL, right. So, we can actually take a look at this entire game. So, I think it's going"
337920,344160," to be very much beneficial. So, I wonder if I have the latest changes fetched. So, let me quickly fetch them."
344160,351600," And yeah, I do have a little bit of the changes in here. And so, this is how a native version of this"
351600,358400," game looks like, right. So, this is using SDL, right. This is using SDL. This is not in the browser. It is like,"
358400,366080," literally a native thing. It is literally a native thing. And so, if we take a look at the source code,"
366080,372000," there is a game translation unit, right. So, game.h and game.c, right. So, it comes with the header."
372000,378960," So, if you take a look at the header. So, the thing that the WASM module, the translation unit imports,"
378960,385520," actually exports. I'm sorry, it exports. It exports these functions like game init, initialize the game with a certain size,"
385520,392960," game recites, game render, game update, which is called every frame with delta t, and a game key down,"
392960,401280," which handles the keys. And what the game uses, it only uses these functions. It uses fill_rect,"
401280,410880," stroke_rect, fill_text, stroke_line, panic, and log, right. So, and essentially, in here, in JavaScript, we"
410880,415040," implement all these functions, right. As you can see, in JavaScript, you have platform_rect, and it's"
415040,421680," basically passed into the WebAssembly environment. And then, there's also SDL_Main, that also implements"
421680,431040," platform_fill_rect, which essentially uses the SDL, fill_rect. There we go. So, as you can see,"
431040,437040," it does SDL_set, render_draw_color, and stuff like that. And it's basically implemented in a very similar"
437040,444000," style to raylib.js. So, and the reason why I'm using SDL in here is because two years ago, I didn't know"
444000,455280," about raylib, right. So, but now I know about raylib.js. And raylib.js is basically that idea. So, what I"
455280,466960," thought, what I thought, what if I try to take this game and port it to raylib.js and get rid of my custom,"
467680,473760," you know, custom layer. So, I have this layer that adapts the game to the platform and stuff like that."
473760,480480," What if I replace this layer with the raylib.js? Because raylib.js basically does that. And not only"
480480,488240," that, if I manage to port that game to raylib.js, it should technically work with the native raylib as well."
490240,496400," Isn't that an interesting experiment, right? So, again, raylib.js is a research project,"
496400,501280," right? It is a research project. It's not guaranteed to be useful in present or future, right? I do not"
501280,506640," recommend it to use, but I'm going to use that. It's a project for myself. And the goal of this project is"
506640,515200," to see how far we can push this approach, right? So, and I think porting this kind of game to raylib.js is"
515200,520960," going to be pretty good testimony for this approach, just to see how far you can push it,"
520960,527360," right? It's not a particularly complicated game, right? But it's more complicated than whatever"
527360,533280," examples we have in here, right? So, in raylib.js, right? So, because these are very simplistic examples,"
533280,539360," right? So, it's better than nothing. It is better than nothing, but they're very much simple, right? So,"
539360,544880," snake game is going to be like a step up from these examples. It's going to be a step up from"
544880,552240," this example. So, maybe we can even include that snake game in the demos as well. Why not? Sounds"
552240,562480," interesting. Sounds good. Sounds Gucci. Sounds Atamaguchi. Let's go. All right. So, let's try to implement,"
562480,569200," to port this game to raylib first, just the native raylib, right? So, I think it's going to be the"
569200,574880," first step. And once we have this, you know, game going in like a native and stuff like that,"
574880,580240," we can try to port it to raylib.js. And obviously, it's probably going to use some of the functions that"
580240,584080," we have not implemented yet, but that's going to be an opportunity for us to implement it."
585040,592720," So, now let's go and I'm thinking like how I'm going to do all of that. I'm probably going to"
592720,600640," just create a raylib version, raylib version folder, and I'm going to copy paste"
600640,608240," this entire thing in here, right? So, I want to kind of separate everything from that because obviously,"
608240,614960," this API is going to go away completely, right? This API is going to go away completely and replace"
614960,627360," with something. So, maybe I could do that gradually. So, essentially, maybe I could implement like a third"
627360,637120," platform that basically implements all of that in raylib. And then, I could try to merge them together"
637120,644240," into a single executable, if that makes any sense. All right. So, essentially, the way it works is that"
644240,652400," you simply have to implement these APIs on your platform somehow, on your platform somehow."
652400,657520," And obviously, in raylib, it's going to be one-to-one. So, and I think that approach,"
657520,661200," just implementing a new platform as a raylib, is going to be more interactive,"
661200,664800," thus, it's going to be probably better, right? So, I'm going to go with that approach then."
665920,673040," So, let me quickly do that. So, that means I want to have something like arraylib_main.c"
673040,676000," I didn't want to create a folder. Actually, I want to create a file."
676000,683520," main.c. There we go. So, we're going to do something like that. And there we go."
684800,694960," So, this is going to be arraylib_support. So, we have a building here. So, what does it do? It builds this"
694960,701920," thing like that, right? So, it builds this thing as a separate translation unit. So, the next thing it does,"
701920,709920," it builds sdl_main. So, I suppose we have to now build arraylib_main, right? So, we have to build arraylib_main,"
709920,717280," but we don't have to actually link with sdl2 and sdl2ttf. We have to build a link with arraylib, right?"
717280,721840," So, this is going to be just that. So, it's like an alternative platform for which we are porting our"
721840,727840," game, an alternative platform. So, I think that's an interesting approach nonetheless. I think that's the"
727840,735840," interesting approach. And so, maybe I'm going to actually create a arraylib folder. And this is where I'm"
735840,743280," going to keep my library. I'm going to keep my library. So, arraylib.js. So, in arraylib, by the"
743280,749600," way, I call this library specifically lib. I think it's a cool idea, actually. What if I really call it lib?"
749600,756080," Yeah. So, arraylib_a. And now, if I try to build this entire thing, so what is going to happen? So, s not"
756080,764080," found. Let's remove the s. And so, is it building? Okay. So, it cannot find arraylib, which is understandable,"
764080,771920," which is, in fact, expectable. So, let's actually add the library path to lib, right? So, this is going"
771920,777280," to be lib. And that means we also need to have includes, right, for arraylib. So, we also need"
777280,783600," to have includes. So, I'm going to go to arraylib.js as well. And here, in the includes, we do have this"
783600,792080," thing, right? So, I'm going to copy-paste it here as well. All right. So, now, if I try to build that,"
792080,798640," so everything should be building correctly. All right. So, yeah, it is complaining, right? So,"
798640,804960," because we have not implemented any of these functions yet, we can actually go ahead and"
804960,812000," simply copy-paste all of these functions and we can stub implement them somehow. We can stub implement them"
812000,818560," somehow. So, this is a feel-wrecked chat, chat, chat, chat. Tell me, tell me, chat. Do you feel wrecked?"
818560,827280," Very funny. Funny streamer making funny joke. Isn't that the content you subscribe for, motherflippers?"
827840,834400," Right. So, nobody gives a shit about programming. Everyone cares only about memes"
834400,839680," and laughing. Nobody fucking wants to slap the code like in good old days."
839680,848160," Well, joke scares the joke. Do you feel wrecked? Ha-ha! Look, funny name function. Feel wrecked."
848800,859440," Anyway. So, now, let's go ahead and try to build this entire thing. And, okay. So,"
859440,866240," it doesn't know what the i32, which is quite surprising. Which is quite surprising. I thought"
866240,875040," that all of these things were... Oh, it's in... Okay. So, they are in game.h. All right. They are in game.h."
875040,884480," Which means I have to include game.h. Game.h. And there we go. First try, motherflipper! First try!"
884480,892320," It compiled. It doesn't work, but it compiled. And, as you know, if it compiles, it works. Oh!"
896240,902960," Anyways. So, what are we going to have in here? What are we going to have in here? We're going to also"
902960,913120," include raylib.h. Raylib.h. And we're going to initialize the window. So, what's going to be the"
913120,920160," width and height? So, I think width and height is kind of hardcoded in here. It is kind of hardcoded in here."
923360,930960," Yeah. If we take a look at sdl-main, and where do we call game init, right? So, because... Yeah. So,"
930960,937440," width and height is located in here, and it is, in fact, hardcoded. It is, in fact, hardcoded. So,"
937440,944000," maybe it should have been actually inside of the game, sort of speak. But, I mean,"
944000,951920," it's like... It's the platform that dictates you the size of the window. So, it's up to the platform to"
951920,958400," decide how big you're going to be. So, it's up to the platform. So, let's actually experiment with that a"
958400,965920," little bit. Right. Snake. So, let's actually give it non-usual, like, ratio. Right. So, and let's"
965920,972560," organize the loop. Window should close. Is that how it's called? I think it's window should close."
973120,978640," And while window should not close, we start begin drawing. Right. So, we start begin drawing."
978640,987200," Then we end drawing. Then we end drawing. And that is basically it. So, we can here close the window."
987200,996240," Close the window. And I suppose... I suppose we now need to call some of these game functions that we have."
996240,1000480," Right. Things like game_init. Game_resize. I don't think I'm going to be calling game_resize."
1000480,1007680," Unless I want to, like, resize. Right. So, but to be able to resize window in RayLeap, I have to"
1007680,1013600," specifically set the flag and stuff like that. So, I don't want to do that. Right. So, let's actually"
1013600,1020160," first call game_init. That basically, you know, gives the game an opportunity to do some initializations"
1020160,1025360," accordingly to the size of the window. And because I'm repeating myself with the size of the window,"
1025360,1029920," it probably makes sense to, you know, factor them out to something like this. Right. So,"
1029920,1038160," let's actually go ahead and factor all of that shit out. So, let's say 800. So, this is going to be"
1038160,1045280," width. This is going to be height. And there we go. So, after that, I suppose what we have to do,"
1045280,1050960," we have to continuously call these two small little functions in the loop. Right. So, first thing we"
1050960,1056160," have to do, we have to update. We have to update the state of the game. So, we need to have a delta"
1056160,1062960," time. So, we can do something like a game, you know, get a render, get frame time. Yeah, there we go."
1062960,1068480," So, I think that's how it is called. It's called game frame time. And then I'm going to just render"
1068480,1073440," this entire thing. So, that is basically it. So, we're not going to be touching key down or, you know,"
1073440,1079520," resize or anything like that. So, that should be enough for now. So, after that, the game is probably"
1079520,1084960," going to be calling all of these functions. Right. So, maybe one of the things we can do, in fact,"
1084960,1091440," we can do something like assert. Right. So, let's actually crash on trying to call any of these functions."
1091440,1097520," So, it's going to be assert. And so, this is going to be platform fill erect. I wonder if I can use a"
1097520,1102320," little bit of Emacs magic if you know what I'm talking about. Chat, chat, chat. Do you like Emacs magic?"
1102320,1108080," I can do something like this. And then boom, assert zero, something like this. So, this is going to be"
1108080,1117680," to do a boom. Can your Vim do that? Can your Vim do that? It cannot do any shit. Easy,"
1117680,1123520," fucking peasy. All right. So, what do we have in here? It doesn't compile. It doesn't fucking compile"
1123520,1129680," because it cannot find any Raylib.h. All right. So, let's go ahead and update maybe the build script,"
1129680,1135440," maybe the build script. So, I suppose what we have to do in here is we have to add the"
1135440,1143440," the include path. Right. So, we have to just add include. There we go. So, does it work? Does it work?"
1143440,1149200," It seems to be working. It seems to be at working. All right. So, we have a Raylib main in here,"
1149200,1155040," which is 2.8 megabytes, which is basically the game. Right. So, if we try to run this entire thing, it"
1155600,1163920," initialized and then this mother flipper crashed. This mother flipper crashed. Right. At 37. Okay. So,"
1163920,1172320," Raylib 37. So, it was trying to log some scheisse. It was trying to log some scheisse. We can actually"
1172320,1178800," allow this thing to log. If I'm not mistaken, Raylib, in fact, has some sort of a logging system,"
1178800,1188000," right. I think it has a trace log. There we go. So, that seems to be interesting. So, essentially,"
1188000,1200640," we can say log info and we can just pass this thing as a message. Right. As a message. Who knows why"
1201520,1213040," if you have a string const char s? You have to do it like that and not just like that. Who knows why?"
1213040,1224240," Who knows why? Do we have any professional infosec people in the chat for safety? But what's the safety"
1224240,1231280," concern here? What's the safety concern? Any professional hackers? If percent is in the string,"
1231280,1240160," it might crash. Well, I mean, crash, it's just like one of the things that can do. Right. So, it's one of"
1240160,1248960," the things that can do because printf does not see the first string as just the string. Right. It's just"
1248960,1256240," the string. It basically sees it as a small sort of program that describes how you have to format the"
1256240,1264960," string. How you have to format the string. And if s is, for example, imported by a user, user can abuse the"
1264960,1272720," fact that printf treats the percents differently. Right. It can start, the user can start putting"
1272720,1278480," percents there. Right. So, and they may call some buffer overflows and stuff like that. So, it's very"
1278480,1282880," dangerous thing to do. Right. That's why you have to do it like that. And for the same reason,"
1282880,1288800," I do that with trace lock as well. Printf injection. Yeah. Printf injection. It's kind of a similar"
1288800,1294320," situation as with SQL, honestly. Right. So, it's kind of a similar situation as with SQL."
1294320,1302640," To be fair, like SQL injections are like part of the class of vulnerabilities where you basically confuse"
1302640,1320080," code and data. Right. So, let's actually continue this process. Right. So, we implemented another"
1320080,1327280," function, one function. So, let's see on which function it is going to crash next. So, we didn't"
1327280,1332000," recompile. So, it crashed on that chat again. So, let's try to recompile this. Scheissung."
1332000,1340640," And, so, are you going to crash somewhere? It crashed on fill rect. Right. It crashed on fill rect."
1340640,1349600," So, let's go ahead and maybe try to just do draw rectangle. Right. So, draw rectangle. X, Y, W,"
1350160,1355760," W, H. I'm going to provide the caller. But I suppose it's not going to compile that easily. If you know"
1355760,1362080," what I mean, chat. It's not going to compile. It is not going to compile because draw rectangle expects"
1362080,1370320," you a struct, not U32. Right. It expects you to provide, you know, struct and U32. But here's an"
1370320,1377600," interesting thing. The struct that RayDeep expects you to provide can actually fit into 32-bit value. It can"
1377600,1381920," actually fit that. So, if you take a look at the definition of color, here it is. It expects you"
1381920,1386000," to provide that. So, one of the things we can do, we can actually take a pointer to the color."
1386000,1394480," We can savagely cast this pointer to the pointer to the color and then dereference it as the color"
1394480,1401600," structure. So, we essentially take the region of memory and we just view it differently. Right. We take"
1401600,1408560," a pointer as U32. We cast that pointer to something else. So, now we view that thing as something else."
1408560,1415920," But because that something else has exactly the same size as U32, it's fine. It's going to just"
1415920,1423120," reinterpret it as that thing. Right. So, essentially, it's going to reinterpret this 4-byte integer as a 4-byte"
1423120,1431360," structure where each byte is the color channel. Can your Rust do that? Right. So, I'm pretty sure"
1431360,1437440," Rust can do that. Right. It can do that. It's just like through unsafe. Right. So, it's just like you have"
1437440,1443360," to... I think they call it transmute. How do the trust people call that? I think they call it transmute."
1444000,1451040," Yeah. Yeah. It's something like transmute. Yeah. Remember that. Gaslighting the compiler. Actually,"
1451040,1458160," this kind of trick has an official name. It's called typepunning. Typepunning. And that name has been"
1458160,1463840," around for ages. It's been around for so long that Zoomer Rust developers don't even know that this thing"
1463840,1471040," exists. Transmute is basically like a tree shaker version, but for native languages. You know what is"
1471040,1478560," a tree shaking? Like, web developers simply didn't know that there is such thing as dead code illumination."
1478560,1483440," Right. Because they're Zoomers. Like, they have no idea. They didn't study CS. They didn't read"
1483440,1487760," actual, like, programming books or anything like that. They didn't know that there's such thing as dead code"
1487760,1494400," illumination. So, they came up with a tree shaking. Oh. So, it's the same with typepunning. So, the Zoomers"
1494400,1498640," didn't know that there's such thing as typepunning. So, they call it transmute. So, that's basically how it"
1498640,1503360," goes. Right. So, it's just like a newer generation. They invent their own terms. They reinvent their own"
1503360,1512960," wheels. Right. So, got it. Oh, got it. Got it. Got it. Anyways. So, let's continue."
1512960,1523120," So, we are drawing a rectangle in here. So, but to be fair, I think the endiness is slightly different."
1523120,1527600," Right. So, the endiness is slightly different. So, I think because of that, all the cores are going to be"
1527600,1532400," fucked up. I think all the cores are going to be fucked up. I predict that, but I'm going to do"
1532400,1538320," nothing about that because I don't care. So, we'll see. Well, I mean, we're going to fix that as we get"
1538320,1544640," that problem. Right. So, like, I don't want to start fixing things, you know, before I do the stuff."
1544640,1553600," So, before I encounter that. So, fill text. So, what we have in here, this is very interesting. So,"
1553600,1561200," this specific platform actually accepts not only the size of the text, it also accepts the alignment."
1561200,1567440," It also accepts the alignment. The reason it accepts the alignment is because in web,"
1567440,1576800," it was easy to just provide the alignment and align the text to the center. It was easier to center the"
1576800,1583680," thing like that. And what's funny is that because I was relying on the alignment of the web platform,"
1583680,1592320," I had to implement the alignment mechanism in SDL. Right. So, that was kind of weird and everything."
1592320,1599760," So, I think the alignment of the text should have been implemented in the game module itself using"
1599760,1606480," text measure and stuff like that. Because, do you remember how I usually center the text in"
1606480,1612800," radio? Right. I call to the function something like a text measure. Right. So, it's not text to"
1612800,1618720," measure the text measure. Is it cool? Is that how it's called? Maybe it's a text size."
1620240,1626000," Maybe it's a measured text. Oh, it's a measured text. Okay. So, essentially, I just call to this"
1626000,1630160," function. And in this function, you can actually provide the text and the font size and stuff like"
1630160,1634880," that. And it doesn't really render anything. It returns to a vector, which is width and height of"
1634880,1640080," the rectangle where the text is going to fit. So, then you can use that size to adjust the position of the"
1640080,1645440," text that you are about to render. And if you want to render things, like I just use the size to just"
1645440,1651520," position it correctly. So, essentially, in this game, the position in the correct position in the center of"
1651520,1659200," the text was done by the platform, not by the game. But I feel like it should have been done by the game."
1659200,1665680," Right. So, the game should have had a thing called measure text exe and then just like align everything"
1665680,1674400," properly. But I don't know if the web platform allows you to measure the text, to get the size"
1674400,1679280," of the text and stuff like that. Like, I don't really know if it provides you something like that."
1679280,1682560," Maybe we're going to have some sort of a problem because of this. We'll see. We'll see."
1682560,1690560," So, I don't really want to go into the text. So, what I'm going to do, I'm going to simply say,"
1690560,1694720," okay, it's implemented. I'm going to just ignore that. Right. So, I'm not going to do anything."
1694720,1703120," So, let's go ahead and just try to recompile it one more time. And there we go. We just ported the game"
1704480,1715280," using Raylib. Like, I just literally took a different rendering library and I ported my game"
1715280,1723680," to that library. So, that's the power of this approach of abstracting away your game"
1723680,1730560," and your platform and establishing very narrow, small, very narrow, small API between these two things."
1731680,1736000," So, the call is actually fine. Yeah. I'm actually quite surprised that they turned out fine. So, maybe"
1736000,1740640," maybe that's good. But, you know, the keys don't work. The keys don't work. And by the way,"
1740640,1744480," resolution is actually fucked up. So, one of the things we want to do, we want to maybe introduce"
1744480,1752880," some sort of a factor. Right. 100. And I'm going to do this. 16 multiplied by factor. The faces factor."
1752880,1757360," So, it should have been called factor. Factor. And then the factor."
1758960,1763840," So, this is what we've got. We've got the factor. So, let's rebuild all of these things."
1763840,1770960," Okay. So, now we have like a proper thing. This is actually quite surprising."
1770960,1778640," Right. And this is Raylib. Right. So, it's using Raylib. Now, we probably want to do the following thing."
1779440,1788960," So, and this is so freaking funny. Right. Because the API is kind of designed to work with events."
1788960,1797040," The API is designed to work with events. So, instead of polling what kind of keys were pressed,"
1797040,1804480," it actually waits until the platform calls to the function key down. Right."
1804480,1811040," So, how can we adapt this interface? How can we adapt this interface? To be fair,"
1811040,1819120," we can just check if any of the relevant keys that the game expects are pressed and just forward them to"
1820240,1824800," there. Right. So, something like that. Right. So, this is one of the things we probably could do."
1824800,1832080," So, but what are the relevant keys that the game cares about? Here they are. So, it only cares about"
1832080,1838000," these keys. Right. So, A, D, W, S, K. Can you even see this thing? I don't think you can see this choice."
1839680,1845360," So, here are the relevant keys. So, we might as well actually maybe copy paste them, but maybe not. So,"
1845360,1854400," let's actually do if is key, you know, pressed. Maybe, yeah, let's say pressed. So, key A,"
1854400,1862880," right. If it is key A. But I suppose these keys are ASCII. Right. I'm pretty sure they are in fact ASCII."
1862880,1872480," So, if I go to RayLip and find key A, is it ASCII? It feels like it's ASCII. So, that means I can do"
1872480,1880640," the following thing. In fact, I can even be way smarter than this. I can turn this entire into a"
1880640,1891680," single string literal, clitoral, aka clitoral. And so, for those who do know RayLip has a thing called"
1891680,1897520," clitoral. Right. So, I'm not making that up. Right. So, RayLip does in fact has a macro called clitoral."
1897520,1906800," So, anyway, we can have something like keys. Right. So, we have keys. And this is sort of like the pointer"
1906800,1912400," and stuff like that. And I wonder how can I iterate all of that. So, I might as well just put N in here."
1912400,1918560," Right. So, it's going to be strlen keys. Hopefully, this thing is going to be optimized out and everything."
1918560,1927200," But in any case, I can just iterate through all of this stuff like so. And if any of these keys that"
1927200,1935200," we care about is pressed, if it is pressed, we just say game key down. Or maybe..."
1938880,1946960," maybe we could have actually then checked down. But I mean, that means it's been held. Right. It is being"
1946960,1950880," held. I don't know. Let's actually keep it like that. So, maybe it doesn't really matter that much."
1950880,1956960," Maybe it doesn't really matter that much. But all of those are relevant keys that we may care about."
1956960,1963200," So, let's actually try to reset it. So, it doesn't know about a sterile end. But that's fine. And it didn't"
1963200,1976240," fucking work at all. Freaking at all. I'm actually surprised why. So, is that because... I don't know. I don't"
1976240,1986080," know. So, do we have any logging when we do key down? So, we can go into the game and find the game key down."
1986960,1994880," Right. And essentially, we can do platform log. And we can try to basically log these keys."
1994880,2001200," We can probably log them. So, I remember I think it had a printf implementation. Yeah, there we go."
2001200,2010800," So, we can do log in here. So, you can do log. And how do you use log? Yeah, you just use it like that."
2010800,2020320," So, game key down. And I can provide the key like this. And I don't remember if log actually puts a new"
2020320,2026800," line in there. I don't think so. Right. So, I don't think so. But maybe it doesn't really matter. So, anyway."
2030080,2042960," Okay. It doesn't even detect them whatsoever. Okay. So, A is 97. A is 65. Okay. So, I suppose that means they"
2042960,2048240," have to be capitalized. They have to be capitalized. So, let's actually go ahead and capitalize them."
2049120,2057920," Because we're capitalists. Okay. Code capitalizing on the keys. Yeah. So, all right. So, it is receiving"
2057920,2066720," all of these mother flippers. Right. That's pretty cool. But something is terribly still wrong. So,"
2066720,2072800," we receive them. But we can't really handle them for some reason. We can't really handle them."
2072800,2079680," Especially if we are in a gameplay state gameplay. Right. And okay. I see what's going on."
2084240,2090880," Freaking. Like, the game expects them to be lowercase. But we can only check them to be uppercase."
2090880,2098400," And it's just like a motherfucking motherfucking motherfucker. So, we can do something like C type."
2098400,2106080," And the key is I. And we can just do to lower or something like that. It is as dumb as this. Yes."
2106800,2120800," It is as dumb as this. But we ported the game. We. We. Epico. Epico. Epico. Epico."
2120800,2127120," Isn't that Epico minor friendly? That seems to be pretty freaking Epico. Right. So."
2127120,2136320," Okay. And then I can boom. So, that's pretty cool. And what's funny is that we have two"
2136320,2143840," executables in here. We have raylib main and sdl main. Right. Raylib main is actually 2.10 megabytes."
2143840,2149040," Okay. That's fair. And sdl main is actually less than megabyte. But we can take a look at how"
2149040,2157040," many things they depend on. Right. So, sdl. So. It depends on mp3."
2157040,2164400," Right. So, it depends on mp3. It doesn't even have any sound, by the way. It doesn't even have any sound."
2165280,2170640," Right. But this one, this game depends only the math library and libc."
2170640,2178000," So. But maybe it also queries something in the runtime. I think it queries some of the dynamic"
2178000,2184640," libraries in the runtime. So, it's not like a full picture. But this thing is already more portable"
2184640,2193040," across several Linux distros than this thing. Right. Because you never know if the user has any of these"
2193040,2199520," libraries installed on their machine and whether they are located in these specific places or they have"
2199520,2205040," the same exact versions and stuff like that. The less this kind of dynamic library dependencies your"
2205040,2212400," executable has, the easier it is to distribute among several distros and stuff like that."
2214000,2220000," So, wayland, it also depends. Yeah, it also depends on wayland. Right. So, but maybe because of that,"
2220000,2223120," it's just like easier to use it on wayland and stuff."
2223120,2231920," Why so big? Is there any statically linked libraries? Yeah. So, Raylib actually depends on a"
2231920,2237040," lot of different small libraries. And all of them are statically linked. Right. So, that's kind of the"
2237040,2244720," secret. So, basically linked all of them together. But it doesn't probably depend on MP3. In fact,"
2244720,2252240," I think for like parsing sounds and everything, it uses, you know, it's like a stb style libraries or"
2252240,2263280," something like that. Stb libraries. So, now it seems to be working. It seems to be twerking. So, what I would"
2263280,2270480," like to do maybe is to make a small break because I ran out of my tea. I ran out of my tea. I want to"
2270480,2276160," refill the tea. And after that, we're going to probably try to port the rest of the things in"
2276160,2281680," here. Right. As you can see. So, we have probably panic. Panic is not going to happen that very often."
2281680,2289120," So, what do I use panic for? I use panic for platform assert. So, it's only going to happen in"
2289120,2295760," case of an assert. Yeah, there's some assertions in here. And in case of an unreachable. And I think we"
2295760,2302080," do have a bug somewhere which creates an unreachable situation. But I'm not sure if I want to, you know,"
2302080,2308400," set up reproduction for that bug. So, yeah. So, we're going to implement the rest of the"
2308400,2318000," rest of the functions. Right. So, then we'll try to see how we can then replace this API with the"
2318000,2325760," RADIP API. Because notice a very interesting thing. It's like one-to-one mapping. Right. It's one-to-one"
2325760,2332960," mapping. Fillerect is just drawerect. So, platform log is just a trace log. And it's going to be true for"
2332960,2337200," like majority of them. Except maybe fill text. But this is because fill text is a little bit weird"
2337200,2342960," for what we're trying to do in here. Right. So, an alignment. I'm not sure what exactly the alignment"
2342960,2348640," is doing. But we can still maybe some code from SDL. So, and essentially my point is all of these things"
2348640,2353600," are one-to-one mapping to RADIP. So, maybe once we have this implemented, we can just go ahead and"
2353600,2359680," within the game replace the calls to this platform things to actually RADIP things. And the RADIP is going"
2359680,2366960," to become that platform API that the game depends on. Right. So, it's not going to be this made up API"
2366960,2373200," that I made. Right. RADIP is also made up API. But we're going to use RADIP as that API and see how"
2373200,2377360," suitable it is for these kind of things. You know what I'm talking about? You know what I'm talking about?"
2377360,2384640," So, yeah. So, we're going to do that after the break, after I refill my tea. So, all right. So, let's go and"
2384640,2390240," continue. So, what other functions do we need to implement? So, we need to implement the text. But"
2390240,2396880," to implement the text, we need to actually load the text. Right. We need to load the font, not the text."
2396880,2404160," So, the font is located where? Where is it located? I don't remember. So, is it ttf? No, it is not ttf."
2404880,2411920," So, I remember it is in fonts. Oh, yeah. Here it is. Somehow I missed this entire folder that contains"
2411920,2417520," the font. So, let me copy paste the name of this thing. And one of the cool thing that"
2417520,2424560," RADIP has, it has like a function to easy load the fonts. It's actually quite amazing, honestly."
2425120,2432720," It is actually quite amazing. So, let me go into the RADIP main and simply load the font. So,"
2432720,2438960," I suppose we can do that after the, after we initialize the, you know, the window. Right. So,"
2438960,2446640," that should be fine. So, I'm pretty sure it is as simple as load font. Right. It is as simple as load"
2446640,2453200," font. And since this font is going to be used in these functions, I think we have to make this thing like a"
2453200,2460400," global, global font. Right. So, we might as well even initialize it with zero and make it static."
2460400,2467600," Right. And then I'm going to say font. There you go. There you go. And let's go to the compilation errors."
2467600,2474480," Let's go to the compilation errors. Let's go to the compilation errors. So, what do we have? It also"
2474480,2485200," keeps complaining about strlen. Right. So, I'm going to do the string. Right. I'm going to do the string."
2485200,2499280," So, let me, let me see. Okay. So, now, if I try to run RADIP main, did it load the font? It, in fact,"
2499280,2505520," loaded the font successfully. It loaded the font successfully. All right. So, that's cool."
2505520,2514400," Now, what we can try to do when you call fill text, we can simply try to draw the text"
2514400,2520160," at that specific position. We're going to ignore the alignment for now. Right. So, because, I mean,"
2520160,2526800," it's kind of outside of the scope of just getting it working. So, how do you do arraylib.h? So, it's a"
2526800,2536400," draw text. Draw text. So, that's the things we have to have in here. So, text. So, we provide the text"
2536400,2545600," here. So, this is x. This is y. Font size. It's just the size and then the color. It's almost one-to-one"
2545600,2550800," correspondence. Like, it's really funny how it is one-to-one correspondence, basically. But it's"
2550800,2556160," going to probably break at some point. All right. So, we take the pointer. We pun. It is called"
2556160,2568160," punning. Not transmute. Punning. Type punning. Because it's haha funny. Haha funny. You can take a chunk of"
2568160,2577200," memory and view it as one thing and simultaneously as another thing. It's a pun. It's a type punning."
2577200,2584320," Makes sense. Makes sense, right? What the fuck is transmuted? Transmute."
2584320,2597040," Type pun. Self-explanatory name. Type pun. Anyways. So, let's go and see how badly or"
2597600,2605680," well it is going to perform. And so, RayLib is probably going to look horrible. I predict that it's..."
2605680,2613040," Yeah. It looks horrible. Because it uses RayLib text, which is actually fine, believe it or not."
2613040,2617920," It looks okay. I kind of like how it looks like. All right. Surprisingly."
2617920,2623040," Okay. So, it's actually... Boom. Game over. But it's not aligned."
2623760,2629680," Oh, yeah. I remember what you use aligned for. You use aligned so it's aligned to the center where it's"
2629680,2634800," drawn. Okay. So, that makes sense. So, that means it's super easy to implement that actually. Right. So,"
2634800,2639360," it's super easy to implement that actually. So, the reason is that because we don't use the RayLib"
2639360,2645120," for the font that we just loaded. So, we use the default RayLib font, which is fine. Right. So,"
2647120,2654800," here we just have to specify LePosition and LePosition is going to be simply X and Y. So,"
2654800,2660400," that's the LePosition. Font size is just going to be size. Spacing is going to be just zero."
2660400,2669360," And the color is going to be just pound color. And that should be actually it. So, I need to rebuild"
2669360,2672080," this entire stuff and also super quickly."
2672080,2679440," Thank you. So, there we go."
2682160,2688800," It's good. Okay. Look at that beautiful, beautiful anti-aliasing."
2688800,2693840," What the fuck is this shit?"
2693840,2703440," My eyes, they're bleeding. What the fuck is this shit?"
2707520,2716480," Disgusting. Disgusting. Disgusting. By the way, it keeps logging shit."
2716480,2721440," So, where is the game key down? Let's remove this thing. Right."
2725440,2750880," So, yeah. Seems pretty cool. Now, what do we want to do? I suppose one of the things we probably have"
2750880,2758880," to do. We have to set maybe the size of the font. I do remember that you have to do special voodoo."
2758880,2765280," Some sort of a special voodoo to make the font look better. I think there's a load font X. Yeah,"
2765280,2771520," of course, there's like an extended version and professional version and so on and so forth."
2771520,2777680," So, we can try to use that one instead of the previous one. Right. So, this is going to be"
2778400,2785120," just that font size. Let's say it's going to be 69. And as far as I know, we can just put null in here"
2785120,2790320," and zero in here and it will just like load everything essentially. Let's give it a try."
2790320,2799680," So, and then... Yeah, that looks a little bit better, I think. I think that looks already a little bit"
2799680,2807040," better, but it's still kind of meh. And I do remember that in Musializer, another project that I have,"
2807040,2813680," which is a music visualizer. So, this is how the font looks like. And it looks like... It looks fine."
2813680,2819120," It actually looks good. Because we did all of that like voodoo magic that Raylip wants from you."
2819120,2825680," So, and we can try to just steal that magic from Musializer. So, let me see. So, there's a plugin."
2825680,2833840," And when I load the font, there you go. One of the things I do, one of the things I do, I actually"
2833840,2840880," generate mipmaps. Mipmaps for the texture of the font. So, that's one of the things we do."
2840880,2847360," Which raises the question, how the fuck exactly we're going to implement in Raylip.js? But maybe we're"
2847360,2852960," going to just stop this function and ignore. Right. So, that's one of the things we can do."
2852960,2860560," And essentially, yeah. So, you have to generate mipmaps. It generates separate texture for each"
2860560,2866800," individual resolution of the font. Right. So, and that way, when you scale the fonts and stuff like"
2866800,2872640," that, it looks better. And we also enable bilinear interpolation, right, to smooth things out. This is"
2872640,2878720," one of the things we can just steal from Musializer and just straight up put in here. So, hopefully,"
2878720,2886720," that will improve the overall quality of the font. So, let's go. I just stole the code. But I stole"
2886720,2893280," my own code that I wrote. And look at that. Doesn't it look beautiful? That looks much better. It looks a"
2893280,2899920," bit soapy, to be fair. But I mean, that's fine. So, let's actually not die. And there we go. So,"
2899920,2905440," there's a game over. But there's a little bit of a problem. There is no proper, you know,"
2905440,2913600," alignment. No proper alignment. And I suppose the alignment that we care about, right, is alignment"
2913600,2919200," left and alignment center. Because I don't really see alignment to right. So, but I mean, we could"
2919200,2925680," implement that. But anyway. So, let me see. We can do switch and we can just switch on different alignments"
2925680,2932320," that we can have on here. So, here it is obviously the alignment left, right? So, this is a left alignment."
2932320,2943600," We can even maybe put that in brackets, brackets. And then we can do align center, I suppose. So,"
2943600,2949760," we are aligning center. And we'll have to implement that. And is there something like align right? So,"
2949760,2955360," we do in fact have align right. But for this specific thing, we're going to say that this thing is not"
2955360,2967840," implemented. So, align right is not implemented. There we go. So, how are we going to do align center?"
2967840,2973360," Align left is super easy. It's by default align left, right? So, that's what you expect."
2974160,2980720," Align center is basically we need to know the width of the text, right? So, we need to know the width of"
2980720,2987200," the text. So, if I go to raylib, there should be something like measure text. And there we go. That's"
2987200,2993280," how we get the size of the text. We can actually provide the size in here and the text. And this is"
2993280,2998000," how we get the width. And width is going to be integer. We can actually do floats. So, this is width."
2998000,3005520," And essentially, when I'm constructing le position, when I'm constructing le position,"
3005520,3014480," I have to shift this entire thing accordingly to the le position. So, essentially, I have to subtract"
3014480,3021040," half of the width. I'm pretty sure about that. And that will align it to the center, I think."
3021040,3026800," I think that is going, this is how it is going to work, right? And then we just draw this entire thing,"
3026800,3032880," which also means that we could have just defined the position outside of this switch case,"
3032880,3040240," right? Maybe even with zero. And then, in all of these things, we could have simply"
3040240,3050000," just assigned things like that. Assign things like that. So, this is going to be position. So,"
3050000,3056960," and then just have a single draw at the end, right? Depending on alignment, we just do a different"
3056960,3063040," position. And that's basically it. Because of that, we could have actually stubbed this thing with"
3063040,3066960," something. But I mean, that doesn't really matter. Let's go ahead and just rebuild this entire thing."
3066960,3070640," Maybe go through the compilation errors. Maybe we're going to have some compilation errors. I don't see"
3070640,3077840," compilation errors. Here is the compilation error. This is a semicolon. This is supposed to be la semicolon."
3079520,3090320," All right. So, and let's try to die chat. It is centered. Is it not? I think it is, more or less."
3091200,3100240," So, yeah. We effectively ported this entire shit to RayDeep. So, that's pretty cool, I think. I think"
3100240,3106800," that is pretty cool. So, there's still some things that are not fully implemented. So, we can do"
3106800,3113760," stroke-rect. But I don't remember where stroke-rect is actually used in the game, right? So, stroke-rect."
3113760,3119200," It's used for the development features, right? It is used for the development features. So, maybe that"
3119200,3122640," doesn't really matter that much."
3122640,3131200," Native RayDeep restorizes all the fonts to an atlas when they're loaded. Yes, exactly. That's what's"
3131200,3138160," going on. Draw rectangle eyes in RayDeep. Sure, makes sense. We can give it a try. So, the thing we have to"
3138160,3145360," do, we have to, in the game, enable the development feature. So, let's go ahead and try to do that. So, let's build it."
3149200,3161680," And yeah, it instantly broke, right? It instantly broke. So, let's go ahead and take draw rectangle lines."
3161680,3177760," To be fair, you know what I can do? I can just copy-paste"
3177760,3188640," lines. I'm telling you, almost one-to-one implementation. Almost one-to-one implementation. All right. So,"
3188640,3199840," yeah. So, now fill text, but it... Oh, it wanted the right. Okay. This one is actually very cool. So,"
3199840,3206720," we probably need to have that stop here as well then. So, the position is going to be actually straight up"
3207360,3214160," like, like minus full in here. Minus full in here and that. Because of that, I think we can actually"
3214160,3221840," compute the width everywhere like that. And there's also... they also share position y, right? They also"
3221840,3230640," share position y. So, which is actually rather interesting. So, maybe we can do position y like that"
3230640,3237120," and remove it from all of these things. So, because the alignment is basically about how you treat the"
3237120,3244640," the x. So, that's basically the alignment. And because of that, we can maybe make it a bit shorter."
3245680,3256320," just a bit shorter like so. So, does that look good? Align position and also align break. Does it look"
3256320,3262160," gucci? Does it look tamaguchi chat? I think we could actually also remove that and look at that. Look at"
3262160,3271280," that beauty. Look at that beauty. All right. So, we just explicitly sort of show how exactly this works."
3271280,3272320," There we go."
3272320,3282480," Okay, good. All right. So, that's basically the development mode. So, in that development mode,"
3282480,3289200," we actually see how the animation is... Oh, I think I... I think there was also a way to,"
3289200,3294560," you know, scale the timestamp. I remember that. This is actually pretty cool."
3296720,3307680," So, there was something like... Yeah, I remember that. So, define def... Yeah, yeah, yeah. So, we are..."
3307680,3317520," So, d is to reset. I think it's scaled down. Yeah, we'll give it a try. But we don't catch them. Yeah,"
3317520,3323360," so that's the problem. We don't catch those things. So, that means for them to work in array leap,"
3324400,3331440," we need to put them here. So, zxc and then just put it like that. So, this is the keys that we're going"
3331440,3332080," to be catching."
3332080,3341440," Yeah, that's basically what's going on. So, we can slow it down. So, we can see how the animation is"
3341440,3347040," playing. So, we can see like the transitions and stuff like that. So, the reason, for example,"
3347840,3357520," is I want to be able to see how this entire thing sort of like eats. So, just a second."
3357520,3366320," So, we can see how it eats this thing."
3370320,3376800," And this is how it grows, for instance. You can clearly see that. So, essentially, it doesn't really"
3376800,3382000," move into the egg. It just extends into the egg. And that's how it smoothly grows."
3382000,3388720," So, because it happens so quickly, you can't see that. You can't actually see that. But that's"
3388720,3394960," literally what's going on, right? So, that's literally what's going on. We can actually"
3395920,3403840," look at that one more time. That's so funny."
3403840,3411440," Yeah, and that's what the development mode was used for. Yeah, I was using it to"
3411440,3416240," debug this kind of behavior. It's all the egg hole. Yeah, exactly."
3416240,3425200," But because it happens so quickly, your brain kind of merges all of that together and you can't really"
3425200,3431440," see how it grows. It keeps growing, but you don't understand how that happens. It's just, it's so cool."
3431440,3434720," Right, because you can't see that, actually."
3434720,3442240," Well, I mean, you can basically pay attention to the tail when it eats the egg,"
3442240,3447200," but it happens so quickly and naturally that it's just like, what the is going on there?"
3448320,3453680," Right. It says a lot about society."
3453680,3454080," Exactly."
3454080,3454960," Okay."
3454960,3463680," Well, now, what do we have? We have the panic, right? A stroke line. I don't think stroke lines used that"
3463680,3471040," often in here. So, it's not used at all. It's just not used at all. We can straight up remove the"
3471040,3479360," shed from here, right? So, it's not important. And let's actually rebuild everything. And that's"
3479360,3484000," a good opportunity to clean up this API, right? So, we found a function that is not used in the game. So,"
3484000,3494240," why do we need it? We don't need it. What's funny is that we managed to rebuild all of these things and I"
3494240,3500080," suppose SDL platform never even implemented that function. I mean, if it implemented it,"
3500080,3508080," it didn't really matter. Right. So, SDL main dot C stroke line. Yeah, it does implement stroke line,"
3508080,3511840," but it doesn't matter. But I'm not going to remove it, right? So, it just means that for me, in Raylib,"
3511840,3517280," I don't have to implement it. So, and in case of the panic, the panic is rather interesting because"
3518000,3524960," we can, we also provide file path and the line so we can print where exactly that thing has happened."
3524960,3534640," So, and the thing we can do in here is basically print f as the line and the message, right? And we"
3534640,3542800," just provide file path, line and message and we can simply abort in here. So, if something like that"
3542800,3550000," happens, we just abort specifically in here. Okay, so let's try to rebuild this and I think."
3550000,3557680," So, abort is not available. Implicitly declaring library function abort. Let's take a look at the,"
3557680,3564880," you know, implementation of abort. I mean, the documentation of abort. So, it requires SDLib. Okay."
3566720,3570320," So, let's include SDLib. Let's maybe put it in here."
3570320,3579760," So, what abort is usually used for? So, what's the semantic of this function? Cause abnormal process"
3579760,3587200," termination. This is basically panic, isn't it? So, abort function first unblocks the sig abort"
3587200,3595200," signal and then rises the signal for the calling process through rise as though rise was called."
3595200,3600480," This result in abnormal termination of the process unless the sig abort signal is caught and stuff"
3600480,3607040," like that. So, the sig abort is ignored or caught by Hender. I suppose this is what, for instance,"
3607040,3614880," in Rust's panic use, right? I think this is like literally for abnormal situations, right? So, that's"
3614880,3622560," literally what it's used for, for abnormal situations. And for instance, in game, if you reached something"
3622560,3627840," unreachable, right? It is pretty much an abnormal situation. It's something that should never happen."
3628640,3635760," So, yeah. I think that's a fair thing to use in here. So, remember what we use in SDL."
3635760,3643040," So, what do we use in SDL? So, panic. I just used exit. We could have used abort."
3643040,3651200," Sure. So, game assertion fail. This one is actually better. So, it's like capitalizes and everything. So,"
3651200,3657360," maybe I'm going to use the same. So, to preserve the same sort of style of this stuff, right? So,"
3657360,3664720," this is what we're going to have in here. This is what we're going to have in here. Cheers, by the way."
3671120,3687280," So, let's go ahead and try to maybe get rid of the align, right? So, that's what I'm basically"
3687280,3694240," thinking. If we manage to get rid of the align, this is going to be one-to-one mapping,"
3694880,3702000," essentially. One-to-one mapping. And how can we get rid of the align? We can get rid of it by"
3702000,3708480," introducing measure text, essentially, right? We can get rid of introducing measure text and moving"
3708480,3717600," this entire logic into the game.c. That's what we can do, essentially. That's what we can do. So, yeah,"
3717600,3728640," go ahead and do that. And now, if I go to game.h, we can say, so, platform fill text, platform text width,"
3728640,3737440," and we can provide the char text and u32 size. So, that's basically what we need in here. So,"
3737440,3744560," this is going to be text width. Then, we can simply implement this entire thing like so."
3745920,3752240," So, we do measure text and, to be fair, it has to return it. So, it has to be u32."
3752240,3757040," Right. So, that should be fine. That should be fine."
3757040,3766560," In measure text itself, measure text itself is an integer. So, that is going to be fine as well."
3766560,3774080," So, we simply just return that. We simply just return that. Though, I didn't have to do that, honestly."
3775120,3781760," Right. So, I just can keep both of the versions in here. I can keep both of the versions."
3781760,3792080," So, usage to pointer, that means I have to allocate it somewhere. And if I'm going to be implemented that"
3792080,3797040," in JavaScript, I will have to mess with memory allocation in JavaScript? No, thank you. I don't"
3797040,3802480," want to do that. So, let's go ahead and see if it's going to compile."
3802480,3818000," It's pretty cool. So, let's take this code and maybe see how we can implement all of that. So, in a game,"
3819280,3826160," we can still keep the notion of the alignment. Honestly, we can just still keep it. That is totally"
3826160,3835920," fine. However, the fundamental function that renders text is not going to have alignment anymore."
3835920,3848080," So, as you can see here, right away, we are just like doing an alignment."
3849840,3860720," We could introduce a wrapper that is essentially something like ""fillTextAligned""."
3860720,3867120," Right. And apparently, I have this interesting convention that the thing that are calling directly"
3867120,3872640," to the platform, they're always prefixed with the platform. Things that are not directly"
3872640,3877360," going to the platform, they don't really have any prefix. Right. So, because of that, I think I want to call this"
3877360,3883120," function ""fillTextAligned"". Right. Because it's not the fundamental function. Right. It is not the"
3883120,3895280," fundamental function. So, now, what we're going to do? We need to do ""game.h"". And let me just do the"
3895280,3902560," ""fillText"". So, it's going to have literally the same signatures in here. Right. So, it's literally the same signature."
3903520,3912000," However, however, in raylib.main, it is going to compute these kind of things. Right."
3912000,3921840," So, position x. So, we can basically work with y directly. We can even get rid of y."
3921840,3927840," So, this is more of a platform text width. Right. So, this is more of a platform text width."
3928480,3936560," So, we take the text. We take the size and everything. So, in here, we're going to store it as u32. So,"
3936560,3944240," we've got a width in here. And then, we are modifying x that is on the stack because it is a parameter"
3944240,3953200," like so. And then, we're calling to ""platform.fillText"", which is not supposed to have an alignment. It is"
3953200,3959520," supposed to have just x and y and text and size. Right. So, that's what it's supposed to have but"
3959520,3965440," it's not going to have an alignment. Though, for the time being, we can just keep it in here. Right."
3965440,3970240," We can just keep it in here. Though, we should have actually removed it right away. So, we can start the"
3971120,3981600," compiler-assisted refactoring like so. Right. So, and every time I use ""platform.fillText"", I should be using"
3981600,3988720," ""fillText.aligned"". Right. So, I'm sort of like putting that behind like a layer of abstraction. So,"
3988720,3994800," now, it is a wrapper. Right. That does the alignment. So, we moved the alignment logic inside of the"
3994800,4000240," platform. We moved it inside of the platform and inside of the wrapper and inside of the game. We"
4000240,4004320," moved it inside of the game. Now, the platform doesn't know anything about alignment. Right. But"
4004320,4010480," it knows how to compute the size of the text. Hopefully. Hopefully. Right. So, and because of that,"
4010480,4016560," I suppose the game.h is not supposed to expose alignment anymore because the only"
4017200,4025200," party that cares about that is the game itself. Right. It is the game itself. So, that's how we're"
4025200,4030160," shuffling around the obstructions. Right. So, we have like obstruction border and we're just moving it"
4030160,4038080," slightly. We're just moving it slightly. So, and this is obviously going to break a lot of things. And"
4038080,4044320," let's actually go through all of these things. So, we have a vector. So, this is another thing that we care"
4044320,4054080," about in here. What else do we have? X explicitly assigning value of, yeah, this one. Can you just do"
4054080,4065280," minus zero? To be fair, we can just make it like this. And because of that, I can replace this entire thing"
4065280,4075200," with this. Right. Does it make sense actually? So, here we can explicitly say that it leaves X as it is."
4075200,4080480," If you want to align center, you just subtract half of the width. If you want to like align right,"
4080480,4087600," you subtract whole width. That is, and it's pretty clear, like it's like very straight up. Right. So,"
4087600,4094400," I think it's a pretty cool alignment. I really like that. So, two few arguments. Excuse me."
4094400,4103360," So, platform fill. That is bizarre. So, where exactly it is happening? So, because I remember that in"
4103360,4112400," game.h platform fill text, I removed alignment. So, what does it say?"
4112400,4125360," Aha. To unused argument color. Aha. So, I should have actually provided color last."
4126240,4132000," just a second. Yeah, I should have provided the color last. So, let's actually put the color in here."
4132000,4142080," And so, now SDL breaks. Okay. So, that is expectable. So, SDL breaks exactly at here. So, this is..."
4142080,4151600," Excuse me. Look at that shit. It's literally that. And I wrote that code like two years ago or something."
4152240,4158560," Holy fuck. Like, I even think the same way. That is so bizarre. Holy shit."
4158560,4168560," And yeah. Like, look at how much shit I had to do just to align the text and at SDL. Right."
4168560,4174800," It's so, it's so funny. Yeah. So, I know that I wrote that code because I went through the same logic,"
4174800,4179920," literally through the same, you know, process thinking about that. That's so funny."
4181920,4190640," Hmm. That is actually so funny. So, and the problem here is that, yeah,"
4190640,4199520," we don't have to care about any of those things. So, the first thing we do, we take the font out of"
4199520,4205600," the cache. Right. So, for SDL, because SDL doesn't really implement much. Right. So, I had to implement"
4205600,4211680," the font cache. So, we do the font cache. We take that out of the font. Then I cache the"
4211680,4219520," text. Right. So, it's a text index. And everything. And, oh, that's interesting."
4220560,4237440," This is so cool. So, I'm actually caching the rendered text. So, I do not re-render them all the time,"
4237440,4245760," every time. Which makes it super easy, actually, to factor out this stuff. To factor out this stuff to,"
4247280,4254800," you know, to a function like a, you know, measure text or something like that. Or text width or whatnot."
4254800,4264000," So, that is so fucking cool. Anyway. So, we might as well actually do a platform. So, what is that? Text width."
4264000,4268080," So, text width. Right. So, text width. Right. So, text width. Right. So, text width. And we have to provide the"
4268080,4279440," char text. U32 size. U32 color, I suppose. Right. We don't have to do that. It's just like a text and size."
4279440,4290720," It's simply text and size. And interestingly, so, maybe we could have factored out this thing to a separate"
4290720,4298560," functions. We could have factored out these things to separate functions because they, yeah, they basically"
4298560,4308560," query font and the query text. The query font and the query text. So, and we're going to be reusing the"
4308560,4316240," same thing in here too. Right. So, we are querying the font. Right. So, that specific font that we got."
4316240,4322720," So, for that specific size also. Right. So, it's more of like a size."
4323520,4331360," And then, we're querying the text. Right. We're querying the text. But then, if I want to get"
4331360,4340800," the width of that thing, how can I do that? So, this is the text surface. Then, we render the text. Right."
4340800,4347520," We render. We're preparing everything and stuff like that. And the thing I want to do is just"
4349120,4356800," take the texture. So, we're taking the surface that we've got. We're taking the surface that we've got"
4356800,4365040," in here. And later, we can take its width. Okay. That's perfect. Actually, we can just return the"
4365040,4371520," surface width and that's the width of the text. So, that's pretty cool. I almost don't want to remove"
4371520,4380320," this code because it's kind of cool. It's actually kind of cool how it is. Right. So, because I have an"
4380320,4387440," entire font cache and text cache and everything. Right. So, maybe we could have like, again, we probably"
4387440,4397840," need to factor out all that stuff. So, we can say something like font cache get size. Right. So,"
4400000,4408000," So, in here, we're going to have ptr dip t. And we're going to accept the size. Right. So, we're going"
4408000,4418240," to accept the size. And that's where we're going to do all of that. That's where we're going to do all"
4418240,4426720," that. So, we can just do it like that. We factored it out. And afterwards, do we assign it back? Yeah,"
4426720,4434320," we do assign it back. So, then I can just return it like this, which means I can just do font cache get"
4434320,4450080," size size. That's it. And I can get rid of that. And then I can do text index ptr dip t font cache get text."
4452880,4467120," And that means I can provide the text, provide the text and font index."
4467120,4476000," You know what I'm thinking? So, we don't really use font index any... We do use font index in here. Well,"
4476000,4482560," I mean, just in the text, but later. Do we use font index later anywhere? We do use it, actually."
4482560,4488080," So, we do use it. So, it is important. It is actually important here. So, that means I have to keep it"
4488080,4500640," separated. I have to keep it separated. So, it's a get text and ptr dip t font index. And I have to move that"
4500640,4515520," step in here like so, return text index. So, now ptr div text index, font cache get text, font index"
4515520,4523920," text. There we go. So, that gets compressed into just four lines. And that also means that I don't have to do"
4523920,4530400," that. Don't have to do that. And I just have to do this little thing. So, I factored out. I compressed"
4530400,4535040," this entire logic. I haven't worked with this code for two years, by the way. I don't remember"
4535040,4545600," like how I wrote that, but it makes a lot of sense and I like that. So, yeah. That's all right. So, that makes"
4545600,4551440," sense. And it makes it super easy. I feel like I intentionally wrote it like that. So, it's easier"
4551440,4559680," to factor out these functions into like that later. I have a feeling. Knowing myself, I probably, when I"
4559680,4564640," was writing this code, I was probably thinking, okay, I'll probably move these pieces of code into a"
4564640,4569040," separate function at some point when I'll have to reuse it. So, that's why I organized it like that."
4570480,4575680," That's pretty cool. That's actually pretty cool. And it's like, it's super easy. It's just like I"
4575680,4581840," was lazy to do it right now. And it was not needed to be done right now. Right. But now it is needed."
4581840,4588320," Right. Because I need to get the text, the width of the text separately. So, that makes a lot of sense."
4588320,4594320," That makes a lot of sense. Okay. That's pretty cool. That's pretty cool. So, let's try to compile this"
4594320,4604320," thing and see how it goes. It doesn't compile. Right. Which is fine because I need to continue the thing."
4604320,4614720," So, and in here, surprisingly, I suppose I simply don't have to do any of that stuff. So, dst"
4616160,4625280," in terms of x, I can just keep x equal to x and I can remove this entire thing, essentially."
4625280,4631680," Custom color for sdl2 platform. It doesn't care about the color. It just ignores the color."
4631680,4638320," That is so funny. I suppose the reason why I didn't implement this, the color thingy,"
4638320,4644000," is because it requires additional dimension in the cache. Right. So, it requires an additional dimension"
4644000,4649920," in the cache. And that's why I didn't do that. So, yeah. I kind of understand myself. Right. So,"
4649920,4661840," my decision making. Once... This is probably some sort of a... Yeah. This is some sort of a testing code."
4661840,4669040," It is definitely some sort of a testing code. This is such a funny trick. Since this code is called"
4669040,4672960," So, this is a test code. So, if you want to print each individual frame, but I want you to only see"
4672960,4681200," the value once, I introduce this trick that prints a value once. Right. But it's not needed. I didn't"
4681200,4688960," think it is needed. So, I don't really use it for anything, do I? Ascent... I was just like thinking,"
4688960,4697680," like, which one do I need? So, and I decided to pick descent. I suppose. I suppose that's what I decided to pick."
4697680,4705440," And that means I can remove that. And that simplifies the function even further. So, can I recompile it?"
4705440,4714560," All right. So, we have ""FillTextAlignUndefined"" function in here. The question is why. So, let's go here."
4714560,4722640," ""FillTextAlign"", but I implemented it in here. Ah, I see. So, it's aligned. Let's go replace."
4724160,4731280," Like this. Boom, boom, boom, boom, boom. I want you in my room. What else do we have? Okay. So,"
4731280,4740560," we still accept aligned. Well, I mean, in here. But we don't have to. Right. So, now I have to do that for"
4740560,4745120," the... for this platform. Right. So, now I have to do that for this platform. And I suppose it"
4745920,4754960," it is not needed anymore. I can just do ""le position"" where I just do ""x"" and ""y"". And just ignore this entire thing."
4754960,4760720," Right. Because the logic is done in the game. The logic is done in the game."
4761840,4767440," So, let's try to run the ""RayLibMain"". Right. So, that seems to be working. That seems to be twerking."
4767440,4774000," And now, let's also try to run ""SDLMain"". Right. So, that seems to be working. That seems to be twerking. But,"
4774000,4780560," as you can see, it is actually aligned higher. Right. It is actually aligned higher. And because of that,"
4780560,4789120," maybe we have to do something about that. Right. So, because I can actually have the width of the"
4789120,4797520," ""RayLibMain"" in there. Right. So, I still can take the height. So, ""measureText.exe"". Right. So,"
4797520,4806080," I can do something like that and take the height of the whole thing. So, ""vectorToSize"". I can do it here."
4806080,4811520," So, it's going to be ""font"". This is going to be ""text"". This is going to be ""size"". And ""spacing"" is"
4811520,4818400," obviously going to be zero. So, we don't really care about that. So, ""x"" is going to be ""x"" whatever. ""y"" is"
4818400,4830480," probably going to be something like ""minus size y"". So, that's probably what we want. So, let's do ""build.sh"" and semicolon."
4834800,4840320," So, redefining ""size"". Okay. So, let's call this ""fontSize"". Let's call this ""fontSize""."
4840320,4845280," What else do we want? So, this is a ""fontSize""."
4845280,4854320," And this is the ""fontSize"". Anything else? I think that's the last thing. I think that's the last thing."
4854320,4862480," Let's try that. That seems to be okay. Right. So, we raised it up a little bit. And then ""sdl""."
4864000,4869840," It also seems to be okay. So, there's a slight difference in how we render everything. But overall,"
4869840,4873520," I think that's fine. I think that's fine. And of course, ""sdl"" just has a better"
4873520,4882000," font rendering, generally. But, I don't know. Like, what's the size of the font that we pick in ""sdl"""
4882000,4895280," specifically? When I load the font? Maybe it's about the game, ""platform game""."
4895280,4906000," Yeah. Where is the font size? So, because I can see ""fontSize"". 48. So, it is, in fact, 48. So, maybe for the"
4906000,4916320," ""raylib"", what we have to do, we have to just also use 48. Maybe that will help to make it look a little"
4916320,4923840," bit better. But maybe it doesn't really matter. So, let's actually keep it 48. So, we got that. And then"
4923840,4929680," ""raylib main"". Oh, it actually helped. It actually looks better now. Thank you. So,"
4929680,4932000," now they look identical, actually."
4933280,4934160," So, that's kind of funny."
4934160,4947600," Okay, that's cool. So, I really like that. So, essentially, what we did, we implemented the"
4947600,4953920," ""raylib"" platform. Right. So, we kind of proved that the game can be ported to ""raylib"" platform."
4953920,4960240," But I don't think it's enough, because we've broken the web platform. Right. We have broken the web"
4960240,4967360," platform. So, let me see how we can fix it. Because in wasm.main.js,"
4967360,4974480," we have ""platformFillText"". We have ""platformFillText"". And we use this."
4974480,4978160," This is the reason why I implemented alignment on the level of the platform."
4978160,4982800," Because it just makes it easy to do that."
4984800,4992000," Literally. That just makes it easy to do that. But how do I measure the width of the text?"
4992000,4997600," PlatformTextWidth. Like, how do I do that with a canvas?"
4997600,5001040," Like, how do I do that? That's actually a very interesting question."
5001040,5005840," So, canvas.html. SizeOfText."
5009200,5015520," SizeOfText. FontProperty. CanvasText. That's very interesting."
5015520,5029680," Change... Maybe I should say something like ""measure"". Because I remember, how can you find the height..."
5029680,5033360," Well, okay, height of the text. But maybe there is also size of the text."
5034640,5040000," Maybe there is also... ""metric"". There is literally ""measureText"". Did you guys know that?"
5040000,5050320," ""MeasureText"". Okay. Okay. ""Canvas"". Ah, fuck. ""CanvasContext"". ""MeasureText""."
5053920,5060640," Yeah, there is literally ""measureText"". So, I suppose... I feel like I was just too lazy to implement that."
5060640,5066320," So, what does it return? It returns ""textmetrics"". Okay. So, we can just do that. So, let me go."
5066320,5076880," First of all, I think I'm going to just run as this. This entire thing. So, I'm going to do ""python-3m-https-server-6969""."
5076880,5081600," So, like, something like this. And then I'm going to go open this thing in here."
5084640,5096000," So, uncot ""platform_text_width"". Okay. So, that's cool."
5098400,5110960," Function ""platform_text_width"". And in a game.h. So, that's the signature of this entire stuff. So,"
5110960,5122240," this is a text pointer. This is a text pointer. Size. Right. And what we can do? What we can do? We take the"
5122240,5129840," buffer. We extract the text out of the buffer. Right. So, then we have to do the ""measureText""."
5129840,5135040," But that probably also means that we have to set the font appropriately as well. So,"
5135040,5139040," let me see how we can do that. So, this is going to be the size."
5139600,5147600," And then we do ""ctx-measureText"". And we are just measuring the text. And that gives us the"
5147600,5151040," metrics and stuff like that. So, we can just do width and we return it like that."
5151600,5160000," So, now we don't have to have ""align"". We can just remove that. ""align_names"". This is not needed"
5160000,5166480," whatsoever. So, do I use IOTA anywhere else? I think that's the only place. Yeah."
5168320,5174640," I can just get rid of that. And let me find ""align"". So, ""align"" should not be a thing in the platform"
5174640,5180480," whatsoever. Right. So, it should not be a thing in the platform whatsoever. ""text with"
5180480,5188720," measureText"". And we just don't align it anymore. Okay. So, that's cool. And let me get rid of the"
5188720,5195120," mobile thing. And what does it say? So, it still doesn't have a platform text because it's not in"
5195120,5201360," the platform. So, let's actually add it in here. ""platform_text_width"". ""platform_text_width""."
5201360,5208080," And it does work. And yeah. Everything works perfectly. Everything is aligned perfectly. And"
5208080,5216080," I really like that. So, yeah. We also modified the interface. We also modified the interface."
5216080,5224480," And the funniest thing in here is that now the whole implementation for the arraylib platform"
5225280,5234560," is literally one-to-one. Basically one-to-one. Right. So, you can see that the ""fill_rect"" is"
5234560,5242000," ""draw_rect"". The ""stroke_rect"" is ""draw_rect"". ""text_width"" is ""measure_text"". ""fill_text"" is basically one"
5242000,5248480," single ""draw_text"". But, I mean, I do additional ""measure_text"" thingy in here. I do the additional thing in"
5248480,5254320," here. And the panic... I mean, yeah, panic log, it's the same thing in here. Right. So, it is the same"
5254320,5264160," thing in here. So, yeah. So, that means I can implement the version of the game that uses arraylib as the"
5264160,5271040," interface to the platform. As the interface to the platform. And essentially, effectively ported to"
5271040,5280960," arraylib.js as well. But, I ran out of tchat. I ran out of tchat. So, we need to make a small break."
5280960,5289760," And after the small break, I'm going to basically remove the border between game and platform. And"
5289760,5294400," now it's going to be a single thing. And now the border between the game and platform is going to be"
5294400,5299920," the arraylib API itself. So, as you can see, we have this, like, API border. And we keep pushing it,"
5299920,5306640," pushing it, pushing it until we reach arraylib.js. So, that's basically how we do that. That's basically"
5306640,5315120," how we do that. So, let's make a small break. And, alright. So, I think I want to commit whatever I've"
5315120,5320560," done. Right. So, we ported our game to arraylib. And it would make sense to actually commit that. I think"
5320560,5325280," it's a good idea. So, I have a couple of stuff that I would like to get ignored. Specifically,"
5325280,5331680," the executable of arraylib main. Right. So, let's go ahead and ignore that. So, we have arraylib main."
5331680,5339280," Also, sdl main. Maybe I'm going to keep both. I think it does, in fact, makes sense. And let's go."
5339280,5350400," Let's go and commit all of that stuff. Commit all of that stuff. So, add arraylib platform."
5351520,5355360," Yeah. Yeah, arraylib platform. I'm going to push that right at the river."
5355360,5361920," So, since we have the arraylib platform, and the platform itself is actually just one-to-one"
5361920,5368240," mapping of the platform function to the arraylib function, we can try to take the game itself."
5369200,5378720," And basically, add the main function, the event loop, and remove all of the platform functions and see if"
5378720,5384240," we can just, following the compilation error, if we, following the compilation error, can adapt"
5385040,5388880," the entire game into arraylib API instead of the platform API."
5388880,5396720," Right. So, I'm going to do arraylib version. Right. So, arraylib version. And I'm going to"
5396720,5400880," copy paste this entire thing. So, essentially, the thing that I wanted to do at the beginning of the"
5400880,5404480," stream. Right. So, the thing that I wanted to do at the beginning of the stream, but I decided not to"
5404480,5411200," because I think the game was not ready to do that yet because, yeah, we needed to introduce the text"
5411200,5416320," with function because otherwise it's not really one-to-one mapping, unfortunately. It's not really"
5416320,5421440," one-to-one mapping. So, anyways. So, let me see."
5421440,5432800," So, I might as well copy the lib and include. Right. So, lib and include. So, here is the include folder."
5432800,5439760," Right. So, here is the include folder. And here is the lib folder. Right. So, here they are."
5439760,5446080," And the build script. Let's also copy paste the build script. I think it's going to be useful."
5447120,5453360," Here we're going to be building only the game without any web assembly. And the game is probably going to"
5453360,5465200," contain only, right, the main loop as well. All right. So, if I try to go to the game and just introduce"
5465200,5474800," int main void, int main void, it is not going to compile. Right. I'm pretty sure it is not going to"
5474800,5480160," compile because it doesn't implement everything we need. Right. So, undefined reference main,"
5480160,5483680," which is weird. Right. Because didn't I..."
5483680,5492320," I accidentally removed game C for whatever reason. I don't know how that happened."
5492320,5497520," All right. So, let's try to..."
5502560,5513120," For a second I thought I'm f***ing hacked, but then I noticed..."
5513120,5523760," That is so f***ing funny. Holy sh*t."
5523760,5528800," Main. Let's see."
5532560,5537120," I'm f***ing funny."
5537120,5541920," So, if I just do clang o, main. Let's see."
5541920,5545200," But in the build..."
5545200,5555760," This is because I had some..."
5555760,5559360," Aha. I think I know."
5559360,5564400," And it just deletes."
5564400,5576320," This specific command line of C compiler fails with undefined reference"
5576320,5582720," domain and deletes your main.c. That is so f***ing hilarious. Holy sh*t."
5584640,5587200," You guys know this and why it is happening like that."
5587200,5596320," Self-destructive compilation. Yeah, exactly. So, the thing is, since you're linking with the library,"
5596320,5601280," it thinks that you provided the input. Technically, you did provide the input."
5601280,5608240," Right. It's just located somewhere in the library path. But since it's just a math library, obviously it"
5608240,5614720," doesn't contain any entry points, so it fails with the undefined reference domain."
5614720,5620800," But since it's failed and it already has this executable, it just deletes it."
5620800,5627520," I suppose it deletes it because it links and generates the binary simultaneously."
5627520,5633520," So, it opens the binary, starts to link and just looks up all the sections and just, like,"
5633520,5639840," appends them to the file. And then it encounters the error. And since you have unfinished executable,"
5639840,5644640," it needs to delete it. So, it thinks that this thing is an unfinished executable."
5644640,5651040," Right. It tries to link this thing, doesn't have a main entry, so it's an unfinished executable,"
5651040,5656480," just deletes it. That is funny. That is really fucking funny."
5656480,5666400," I love it. I fucking love it. Can your javascript do that?"
5674480,5682400," I was like, what the fuck is going on? It's just, you know. It's a very, very rare and very specific"
5682400,5692320," situation. Very rare and very specific situation. I love it. I love it so much. Anyways, so now,"
5692320,5697920," let's just try to build this entire thing. And of course, it fails with not being able to find stb"
5697920,5705920," sprintf, which is very interesting. So, essentially, stb header-only libraries have implementations of"
5705920,5714880," stb sprintf, which kind of looks stupid, if you think about it. Like, why do you need sprintf if the"
5714880,5721280," standard library, like, already has it? Like, why the fuck do you need that? But here's the interesting"
5721280,5727760," thing. This implementation works without the standard library. It works without the standard library."
5727760,5733840," So, it doesn't need it. It's implementation specifically of sprintf without the standard"
5733840,5740800," library from scratch. So, that means you can use it, for instance, in embedded. Right. If you're writing"
5740800,5745680," embedded program and you need printf and you can't use the standard library, you can use this thing."
5745680,5750880," It will work. Right. Because it's a standalone implementation of sprintf. And because of that,"
5750880,5755680," it is usable in WebAssembly when you don't use mscript and stuff like that because you can't use the"
5755680,5761280," standard library. So, that's why I'm using it in here. So, isn't that cool? I think it's pretty cool."
5761280,5766000," So, anyway. Right. So, that's why I keep it in here."
5767840,5777200," Now. So, what do we have in here? So, yeah. It tries to use the platform log, the platform panic,"
5777200,5787440," and so on and so forth. Interestingly, interestingly, I'm pretty sure I can basically do something like"
5787440,5798640," that. I swear to god. I can basically do something like that. ArrayLib this. ArrayLib main. I can just grab"
5798640,5805280," the entry point, the main, like this, copy paste it in here,"
5805280,5812640," as the entry point. And then implementations for each individual thing in here."
5814320,5819280," I can literally concatenate these things together. And there you go. This is going to be"
5819280,5827520," just a standalone thing that I can easily then port to a WebAssembly. I think it's going to work. I'm"
5827520,5832880," pretty sure. Almost. Right. So, because we also need to include"
5836160,5853760," raylib. So, what do we have expected? So, ah? So, you didn't like something in here. I don't understand."
5853760,5855040," Raylib."
5861840,5869120," Am I going crazy, chat? Like, what the fuck is going on? So, if I just put this thing somewhere, maybe"
5869120,5881600," here, that doesn't make much sense to me. Like, what? Oh, print tab. Okay. So, there is a collision"
5881600,5888080," between, I see, I see. There is some sort of a collision between sprintf and some other shit. So,"
5888080,5898320," oof. Maybe I can basically, I can basically rename it to something else. Right. So, in stb itself."
5898320,5905040," Can I have some special prefixes or what not? Is there some sort of a special prefix?"
5905680,5908160," sprintf. Do you?"
5908160,5913440," So, usually, these kind of libraries, they provide"
5913440,5921680," a thing to, you know, disable aliases or something like that. Floats and doubles. So, this is different"
5921680,5927520," performance. So, let me take a look at the compilation error one more time, because I'm"
5928480,5937120," really confused by it. So, it wants to have... Okay. So, maybe I can just put stdio in here. Is that..."
5937120,5943680," Okay. So, it's an abort. Right. And this is stblib. Right. So, that's probably what's going on."
5943680,5950800," A bit confusing. But now, we also have urandom_static_logger and follows non-static declaration."
5952960,5954880," Aha. Oh, I see."
5954880,5966560," Ah. All right. So, how can I... How can I call that? Random? Right. So,"
5966560,5974480," previous declaration is also... Random is also in here. Man, how can I call my random? Like,"
5974480,5985440," what do you want from me? Uh, yeah, sure. Uh, strlan. Uh-huh. So, implicitly declaring libraries."
5985440,5991600," Okay. So, when it comes to keys, handling the keys, I feel like we should get rid of the"
5991600,5999760," game key down or something. I think we should get rid of that. How do you think so?"
6003120,6008720," So, essentially, we have to check all of that stuff, uh, separately."
6008720,6016880," Uh, game... Maybe in the game update. We should be doing that in a game update. So,"
6016880,6021360," we have to merge those things together. We have to merge those things together. So,"
6021360,6031600," let's actually go to game key down. Uh, right. So, and now, I might as well copy-paste this entire thing. So,"
6031600,6039840," as already said, arraylib doesn't really handle things, um, in an event-based style, right? It"
6039840,6046000," doesn't handle things like that at all. It handles them in sort of like a polling style, style, right? So,"
6046000,6057120," what you have to do instead is basically check, uh, if, uh, is key pressed, uh, key z, right? You just do"
6057120,6064000," think like that. All right. You just move it like that. Uh, please do not realign things like this."
6064000,6074640," Thank you so much. So, this is the first thing. Um, then, we need to do if is key"
6076400,6089680," pressed key x. All right, we can move that stuff in here. And if is key pressed c, uh, key c, we have to"
6089680,6097680," do this thing in there. So, there we go. So, that's how we have to do that. Excuse me."
6098720,6105920," Ooh. Um, so, I would also like to maybe align it like this so it's clear that this is a development"
6105920,6114080," feature. Uh, so, game key down. Game key down. So, we've got that. So, that doesn't matter. And now,"
6114080,6120240," depending on the situation and depending on the state, right? So, we already kind of handle states"
6120240,6127760," differently. So, I can see that. So, in game play state. So, this is a game play state. We probably"
6127760,6136560," want to do this handling of things, right? So, this is a game play state. Um, right. And then,"
6136560,6142560," we also have a separate pause state, uh, and so on and so forth. Right. So, that's kind of cool."
6144640,6152000," Uh, so, I wonder if we can, um, do something like a little bit of emacs magic. I wonder."
6152000,6159440," I wonder if a little bit of emacs magic is going to do the trick, uh, because we can do if, uh, is key"
6159440,6168080," pressed like that. I'm gonna just remove that and then boom. And this is one line and then boom. There we"
6168080,6176720," go. So, that should do the trick. Then we can remove that. Boom. And that's basically it. I'm pretty sure."
6176720,6183520," That is basically it. So, we also do the restart. Uh, and the question is what is... So, yeah, this is"
6183520,6193120," something like this. So, if... Uh-huh. So, we can do it like this. So, if you are in a game, uh, state"
6193120,6198640," gameplay, right, if one of these things are pressed, if one of these things are pressed, uh, you're gonna"
6198640,6207680," do the thing. Uh, so, and key up. We can just rename them to something like key A. Uh, this is a key D."
6207680,6217760," Um, key W. Ooh, this is... Yeah, because we already have these kind of names in Raylib too. Right. I'm"
6217760,6223920," pretty sure we already have them. So, that creates a little bit of an unfortunate situation."
6223920,6232960," So, um, maybe I could get rid of the Raylib and follow the compilation errors or something like that."
6232960,6240960," This is a little bit annoying. Not gonna lie. This is a little bit annoying. So, maybe we can query key"
6240960,6249040," left. Key A. Right. So, yeah, there's not that many... Okay, that's fine. Key right. Key D."
6249040,6263920," All right. So, then, uh, key up. Key, uh, W. All right. And, yeah. Yeah. W. And key down. Uh,"
6263920,6274480," right. Key down. Key S. Uh, key accept. This is gonna be key space. Uh-huh. So, there's quite a few of these"
6274480,6285360," things. And, uh, key restart is key R. Right. So, we can remove that stuff now. We can remove that stuff now."
6285360,6291280," Uh, okay. So, what do you want here? So, there's a key space, but this is because we have not included"
6291280,6297280," Raylib. That's fine. What else do we have? So, there's a str len. So, we don't have to do that"
6297280,6304080," stuff anymore, by the way, because we are not handling that stuff as key came down. Um, so, but we also"
6304080,6311280," have to port the rest of these things. Right. So, game key down. Right. So, we are done with this state."
6311280,6318160," Now, we have to do the pause situation. So, game update. Uh, right. So, here's the game update. And this"
6318160,6325840," state is game play state. So, that's fine. In the pause, in the pause, we have to handle those things."
6325840,6331360," We're gonna be moving them in here. Uh, right. So, let me quickly do a little bit of an emacs magic."
6331360,6340960," Right. So, this is going to be if, uh, is key pressed. It's one of those. Uh, and if that happened, boom."
6340960,6351520," There we go. There we go. I hope no problems have occurred anywhere. Uh, so, let me try to recompile."
6351520,6356560," So, there's something incorrect in here, because we have something like this. In case of a game over,"
6356560,6363120," um, I suppose we have to just press anything. Uh, but I don't know if we can easily"
6364080,6370240," check, uh, in the Raylib that any key was pressed. Like, any key was pressed. But maybe it doesn't"
6370240,6376560," really matter. So, we can just check for directions and, uh, space or something like that. So, that's one"
6376560,6384800," of the things we can do. Um, so, where is the game update? Where is the game update? Uh, and"
6386560,6394160," so, this is the game play. This is the game pause. Uh, and where is the game over? So, here is the game"
6394160,6401840," over. Uh, tail ignore. That's really funny. So, I have some sort of to do's in here. So, we can do"
6401840,6407200," something like, uh, yeah. So, this function is done. So, it's not going to be a thing anymore. We moved"
6407200,6418080," everything in there. Uh, if is key, uh, pressed, uh, key a, and we can copy paste all of them like this."
6418080,6429920," A, S, uh, D, W, space. If any of them are pressed, we're going to restart the game."
6432320,6439840," Game restart. Game restart. Okay. So, let's go to the compilation errors. Uh, so, what you didn't"
6439840,6444480," like might have found, uh, so, I forgot to put this thing in here and this thing in here."
6444480,6453600," Okay. My random. So, and we don't really use rand that often. Yeah. So, we're supposed to use my rand."
6453600,6461760," So, is there any other usages? Okay. So, here is another one. Might as well just query"
6461760,6471040," replace this thing with my rand. Mm-hmm. And that's basically it. Uh, so, and I probably"
6471040,6479280," want to get rid of these things because the game is not supposed to use, really use a standard library."
6479280,6485600," Right. So, it uses that kind of stuff. Right. It uses that kind of stuff, but, um, I'm not really sure."
6488720,6498160," how we're going to be doing all of that. So, we can basically panic. Um, maybe it's going to be one"
6498160,6503760," function that the platform is going to implement, but maybe, uh, maybe not. We can do trace log."
6503760,6512000," Log error. Trace log error. And then we're aborting. So, maybe we should not even use trace log"
6512000,6516320," whatsoever. Right. So, it feels like maybe these things have to be"
6516320,6525360," part of the platform anyway. The ability to panic or log. It should be something very much"
6525360,6530080," platform specific. So, I'm not really sure how we're going to go about that. So, but anyway."
6531840,6539680," Uh, so, abort. Uh, let's just keep standard library in that case then. Uh, okay. And let me see if I"
6539680,6545600," didn't break the game. So, we create, we managed to create the game. That is fine. Uh, but I want to"
6545600,6552560," actually name it slightly differently. Not .a.in. Not .a.in. So, I'm going to do that. And, uh, here we go."
6552560,6559920," The game. It is working. It is twerking. Though, except we can't, uh, really have the font. So,"
6559920,6567120," let me quickly do that. Let me quickly print, uh, bring the font in here. Uh, all right. So,"
6567120,6574000," and now if I run the game, uh, it is working. It is twerking. So, I'm actually super happy about what I"
6574000,6588160," see. Uh, so that's super cool. Okay. And if I die. All right. So, now it is a standalone thing. It is now"
6588160,6598000," standalone thing, which I may try to compile to the, um, to the WebAssembly and port it to Raylib.js."
6598000,6604560," Basically, the goal of today's stream. So, the only thing we have in here is stdlib, uh, right? So,"
6604560,6610480," which is relatively easy to get rid of, right? So, you basically get rid of that and you try to build it."
6610480,6616720," And the only problem you encounter is inability to just call to abort. And that's about it. So,"
6616720,6622480," maybe trace log also uses something from the standard library. So, let me double check including here."
6623200,6629360," Uh, so, Raylib, trace log, uh, I feel like, no, it's, it's an actual function actually."
6629360,6638080," That is super cool. That is actually super cool. Uh, right. So, that means I can use trace log. Is"
6638080,6647200," there, does Raylib have anything for panicking? Like, uh, panic, uh, abort. Like a Raylib specific"
6647200,6654240," aborting thing that is specific to Raylib. Does anybody know? Right. Because that, this is the"
6654240,6662160," only thing that is kind of missing in this cross-platform API. An ability to crash your game"
6662160,6664560," in a crash, in a platform independent way."
6664560,6672880," So, does anybody know? Do we have any professional Raylib developers in the chat?"
6672880,6679600," Did Raysun provide any sort of platform independent way to crash your game? Right. To,"
6679600,6687280," maybe there is some sort of an assert. Uh, right. So, assert. Is there a common assert? Probably not."
6687280,6694240," Uh, so, that's bizarre. So, this is something that I don't really like, but I mean, it is what it is."
6694240,6701840," Uh, library for assert or panic. Yeah. Uh, fatal login. Oh, this is good."
6703680,6709760," Yo. Thank you. Thank you so much. So, we do have professional Raylib developers in the chat."
6709760,6717600," That is super poggers. So, uh, log error. Uh, perfect. So, that means we can simply,"
6717600,6728480," it's already error actually. So, oh, it's fatal. It has to be fatal. Um, yeah. So, it's basically fatal and I can"
6728480,6741280," move that. Mm-hmm. Okay. Uh, platform, uh, panic. Uh, platform panic again. Assertion failed. Uh-huh."
6741280,6748560," All right. And we can use it only for that, which means that we can"
6750880,6767840," do something like that actually. Um, platform panic. Uh-huh. Panic. Uh-huh. It's just an assert"
6767840,6774640," condition true. Yeah. So, that should, should be fine."
6776800,6783120," That should be fine. That should be fine. Um, so, and yeah, we basically covered everything."
6783120,6788880," We literally covered everything and I'm pretty sure I can now just rebuild this entire thing."
6788880,6791840," Uh, file path is just a file. Sure."
6791840,6801680," Yo, that is so cool. And I'm not including, I'm not including any standard libraries in here. Look at that."
6802480,6808320," I'm not including any standard libraries. Uh, assert true. Yeah, assert false. Thank you so much. Uh,"
6808320,6812880," that's true. That's true that it has to be false. That is true that it has to be false."
6812880,6830080," Anyways, excuse me. Uh, now, I have a feeling that we can go, uh, like, right away into raylib.js folder."
6830640,6835520," Excuse me. I think I'm fucking dying. So, let's try to take this game"
6835520,6842160," and port it as one of the raylib.js examples, right? So, basically, let's take a look at raylib.js."
6842160,6845840," Uh, so, this is how... This is not what I want. Bravo."
6850960,6859600," This is me. This is me. It's Tsonga. Mr Tsonga. It's me."
6859600,6877920," Uh, okay. So, um, so we have this sort of demo that has different examples and stuff like that. And we have some of the, um, you know, official examples ported already. So, here they are."
6878560,6887680," What if we go right away into this project, into the raylib.js project and try to, um, and try to,"
6887680,6891600," like, add this game as one of the examples in raylib.js."
6893200,6896080," Let's go ahead and try to do that. I think that's, that will be interesting."
6896080,6907520," So, uh, I'm going to go to raylib.js, raylib.js, and, um, we already have, uh, game.c in here."
6908160,6914560," But the game.c in here is actually, like, the ball, right? The jumping ball, uh, right? If you go here."
6914560,6919760," So, this is basically the, the jumping ball. So, maybe because of that, I want to rename it to into the ball,"
6919760,6928960," right? So, this is going to be the ball. And, uh, in the build, I'm going to query replace game with a ball."
6930560,6938160," Uh, so, this is that. So, now we have balls. Another interesting thing is that in index.html,"
6938800,6944960," we have a list of all of the examples, right? We have a list of all of the examples, uh, here,"
6944960,6951760," where they are. I don't see them. What the is going on? Is that an old thing? I feel like, yeah,"
6951760,6958960," uh, I feel like it's an old thing. So, let, let me go back then. Uh, I feel like I need to fetch the"
6958960,6966160," other changes because the, the project have changed a lot since the previous stream. Yeah, there we go."
6966160,6969680," If you take a look at the, yeah, that's how many changes we've made. That's a lot of changes, actually."
6969680,6975040," Uh, it looks completely differently. So, because we have a lot of examples here and stuff like that."
6975040,6983920," Yeah. So, that's all the examples we have. Uh, and in index.html, we have a list of all of these things"
6983920,6990400," in here, specifically, uh, different examples and they're split into different categories, right? They're"
6990400,6995920," split into different categories and game is under the category of sorting, right? So, it's the examples that"
6995920,7003600," I added. Uh, so, and maybe it would make sense to, right, move all the sorting examples into sort of"
7003600,7010960," like a sorting folder, right? So, uh, and, uh, move the game in here, right? Because the regular examples,"
7010960,7019040," the regular examples are like here. So, that makes sense. Um, or maybe since the categories of the examples,"
7019040,7027520," they're usually prefixed with the category, maybe it would make sense to actually put, uh, this stuff"
7027520,7035440," in here like that and rename this thing to sorting, uh, ball, right? So, it has to be sorting ball now. I"
7035440,7041760," think, I think, I think that's a, it's a good way. It's a good convention to follow. Maybe we'll see."
7041760,7050160," So, now I'm going to do it like that. I'm going to go to the build.sh and let's find the game. So,"
7050160,7060880," here's the game. So, it's a sorting ball, uh, examples, sorting ball dot C, right? So, it's a sorting ball dot C,"
7060880,7071440," okay, sorting ball dot C. And where is the game? So, here is the game, uh, sorting ball, uh, examples,"
7072160,7079280," uh, sorting ball, right? There we go. So, did, why didn't you save it, mother flipper?"
7079280,7087760," Fucking save it. Stop asking questions for sake. I'm sorry. Sometimes Emacs gets it into this mode."
7087760,7091840," It's just like, you sure? You sure? Something changes on the hard drive? You sure? Just"
7091840,7101280," fucking save it. Thank you. All right. So, uh, now, uh, right. So, here we have sorting and it's basically"
7102160,7110880," uh, sorting ball, right? There we go. So, sorting ball. Uh, yeah. So, let's rebuild everything in here."
7110880,7120880," Uh-huh. So, I think I already have the async, but I don't care. Uh, now, I want to restart the server. So,"
7120880,7128560," I have this locally in here, uh, and it doesn't fucking work. Because why? I forgot to update something,"
7128560,7135200," right. Of course, I forgot to update something. Uh, could not find wasm game. All right. So, that is"
7135200,7140080," understandable. Uh, that is absolutely understandable. I don't really know why. Is it because it's cached?"
7140080,7151040," No, it's not because it's cached. Uh, sorting. Yeah. I see what's going on. That is honestly bizarre."
7152000,7154480," That is honestly bizarre. Don't we just start..."
7154480,7161440," Selected wasm. Wait, bruv."
7161440,7169200," Why didn't you try to load game? You're supposed to..."
7172480,7180560," I honestly don't understand. Uh, so, it's a con... It's hard coded in here. Okay. So, I see. That makes sense."
7180560,7186000," Okay. Finally. All right. So, that's cool. Finally, we restructured this thing. So, we have totian examples."
7186000,7194560," We have core shapes and whatnot. Cool, cool, cool. So, I'm going to now bring something interesting in here."
7194560,7199680," We're going to try to bring the snake, right? So, we're going to have a snake source code, but it's"
7199680,7208080," going to be a separate, its own thing. Uh, right. So, snake c, uh, snake c. And, uh, so, this is a Rayleigh version."
7208080,7213440," And, obviously, this thing needs quite a few things, right? So, specifically, it needs the, uh, you know,"
7213440,7222160," game.h and, uh, game.c. So, we need to bring them. It also needs stb as printf. Um, why do you ask me shit?"
7222160,7231680," Okay. So, and I'm going to copy. There we go. Uh, and the fonts. We also need to do the fonts."
7231680,7239360," So, another font that we really need in here is, uh, Anic, Anic Latin, right? So, I suppose this is"
7239360,7247200," another, uh, right, license that we need to have in here. So, yeah. So, this is for the Anic. There we go."
7248240,7253920," So, that's pretty cool. And now we need to build this entire thing, right? So, now we need to build"
7253920,7260800," this entire thing and embed that into the entirety of the project. Uh, should be relatively straightforward,"
7260800,7270160," I think. Uh, so, the build is going to be, yeah. I want to call this example similarly. So, let's actually"
7270160,7276800," call it sodding snake. All right. So, it's sodding snake. All right. So, it's sodding snake. And this is"
7276800,7292000," going to be, uh, sodding snake h. All right. Uh, could we replace game.h sodding snake h."
7294480,7302480," And in here, we're going to be including sodding snake h. So, that should be enough. I think we're"
7302480,7308720," onto something. I think we're onto something. I really like that, actually. I really like that."
7308720,7317920," So, let's build the executable. Uh, so, it's going to be sodding snake. Sodding snake. Uh, and here we have"
7317920,7324320," sodding snake. Uh, sodding snake. I'm just trying to follow the conventions, right?"
7324480,7329360," So, that I established for myself. And let's try to build that and see if it builds the snake"
7329360,7338000," correctly. It didn't build that shit at all. At all. Because I forgot g. I forgot the g. Um,"
7338000,7350960," I forgot the g. All right. Seems to be cool. Seems to be epic. I forgot the g. So, let me try to run the"
7350960,7358320," executable now. Sodding snake. Uh, and it is working. So, this is the sodding snake. That is pretty cool."
7358320,7364720," Uh, all right. Cool."
7364720,7377760," Uh, so, now, this is the moment of truth. We can try to compile, uh, this entire thing to, um,"
7379120,7388000," to web. Right. So, it's going to be sodding snake. Uh, sodding snake. Um, actually, it's just a wasm."
7388000,7399520," It has to be just wasm. Wasm. And, uh, here it's going to be sodding snake. Uh, sodding, come on,"
7399520,7405840," snake. Okay. So, we're trying to compile that to, uh, web."
7405840,7413200," We could have actually skipped some of these things. And it's successfully compiled. It just"
7413200,7417840," successfully compiled. In fact, we can probably comment out the rest of the things because they"
7417840,7424800," take too much time to, uh, to, you know, compile. So, we're only going to be compiling the web thing."
7424800,7433600," Uh, so, that's pretty cool. And now, let's try to add this snake to one of the examples. Uh, where is the list of"
7433600,7441360," the examples? So, there you go. So, this is a sodding snake. Uh, so, and now, I'm going to refresh"
7441360,7447600," the entire stuff. And we should have, uh, sodding snake in here. We should have sodding snake in here."
7447600,7453120," So, now, I can try to switch to the thing. And it doesn't work because there's no trace log."
7453120,7460400," And now, we have something to work with. Now, we can actually, uh, you know, start implementing things. To be fair,"
7460400,7468880," we also need to adapt this snake example. To, um, you know, we need to adapt its entry point."
7468880,7474720," Right? So, we need to adapt its entry point. So, first of all, we probably have to factor out"
7474720,7481280," something like a game frame. Uh, the usual thing you do in here. So, the game frame. And inside of the"
7481280,7488160," game frame, we're going to be just calling that. Right? So, this is the game frame. This is a single game frame."
7488160,7498400," Um, and depending on the platform, right? So, if we are, uh, on the platform web, on the platform web,"
7498400,7507840," I set, uh, we simply do set, uh, maybe array lib.js set entry. And we just set the game frame."
7508640,7515040," Uh, otherwise, we are organizing the loop where we do game frame. Where we do game frame. And that is"
7515040,7519440," basically it. Uh, and also, we can include, uh, you know, closed window in here."
7519440,7528560," So, that's going to be the thing. But, uh, we also need to forward declare array lib.js set entry."
7528560,7532560," Otherwise, it is not going to work. Otherwise, it is not going to work. There we go."
7532560,7538560," So, let's try to compile this entire thing. And it seems to be working. Um, okay. So, let's actually go"
7538560,7546480," in here. And we don't have trace log. So, and what's the usual process for ray lib.js implementations"
7546480,7552320," of a new function? Is that, so, this thing is not implemented. So, we just go and, uh, add it to the"
7552320,7561520," ray lib.js class, right? So, uh, let's do something like a trace log. And what do we, uh, expect in here?"
7561520,7570160," I suppose, uh, if we take a look at the ray lib.h. Where is ray lib.h? Um, so, this is a trace log,"
7570160,7579760," trace log function. So, this is a log level, uh, log level and the text, uh, log level and the text."
7579760,7586400," Didn't we already have, uh, format text or text format? Text format. Where is the text? Yeah,"
7586400,7593040," here it is. Um, so, let's actually bring it a little bit closer to the text, uh, text format."
7593040,7600000," There we go. So, this is a text format and then we have the rest of the arguments in here. Um,"
7600720,7610880," now, so, if log level, right? Depending on the log level, we have to do different things actually,"
7610880,7615280," right? Um, so, what's the usual"
7615280,7629200," format for this, uh, for the logging? Uh, yeah. So, it's something like this. Okay. Uh, we could try, um,"
7630000,7642480," log level. I don't really want to do all of that, but I think I could do something interesting. Uh,"
7642480,7653200," I could do simply iota zero and then I can define all of these constants in here, right? And this is"
7653200,7666480," basically something like this. Um, right. Ah, this is annoying. Okay. So, let me try something. Um,"
7666480,7676640," can I simply get rid of these things like this? Uh, and then I can do something like that."
7678640,7689680," Uh, I need to plus plus. Uh, no. All right. So, that basically you just creates all of them."
7689680,7693280," So, we're just like increments"
7693280,7702000," in order. Might as well even do something like this and then, uh, something like this."
7703200,7712320," So, now we can use all of that sh*t, uh, which is pretty cool in my opinion. So, the trace log, uh, we can"
7712320,7726160," then remove that and then remove that. Uh-huh. Case console log."
7731120,7740720," And that's about it, I think. Uh, so, it's gonna be also break. So, and we have to switch upon, um,"
7740720,7752160," switch upon the log level, right? So, log level. So, we have that. We have that."
7753600,7763200," Uh, not really query replaced, but align console. All right. And then align break. So, that's pretty cool."
7763200,7768240," Uh, maybe it also makes sense to, you know, add the texts."
7768240,7776880," All right. So, we're gonna put the text in here. But it's gonna be just a formatting. So, it's not gonna be"
7776880,7784880," that particularly helpful. Uh, text equal, yeah. So, we have to do something like this. And the text"
7784880,7793680," here is the pointer. Uh, implement for... It's just like, yeah, for this one as well. Trace log. And we"
7793680,7800000," already have a printf implementation in stb printf. So, that's the thing. We already have that. Maybe we can"
7800000,7807920," reuse that. Um, so, that would be kind of cool, I think. That would be kind of cool. Ah, so, we have"
7807920,7816240," a trace log. Um, so, in the case of a fatal, by the way, we are literally throwing an exception. That's"
7816240,7824320," what we're gonna be doing. Might as well even return, uh, like, remove this. Uh, right. So, because that's"
7824320,7834880," what's going on in case of a fatal. Uh-huh. So, I think that's going to work rather well. Uh, so,"
7834880,7842800," let's go ahead and just rebuild the whole thing. Build this edge. Uh, and now, uh, let's refresh this"
7842800,7852320," enter, I think. And go here. Uh, load font XC. This one is goddamn interesting. This one is goddamn"
7852320,7857440," interesting. Uh, because... Yeah."
7857440,7872560," Uh, actually, we can do something interesting here. Uh, we can also include"
7872560,7882240," args, at least for now. Uh, though, I feel like it's not going to be that useful either. All right,"
7882240,7887760," if we just include args, um, I think, I think it's not going to be that useful either. Yeah,"
7887760,7892080," it's not that useful because they are pointers. So, there, there is nothing much you can do anyway."
7892080,7897920," Uh, so, you, you need to dereference, like, dereference this point. It's like,"
7897920,7901520," parse the structures, like, depending on the type and stuff like that. So, I don't think it's,"
7902560,7906960," it should be probably redirected to, like, stb print app, but I'll think about that."
7906960,7912480," It doesn't really matter that much. Um,"
7912480,7922080," so, uh, what I was doing. So, load font XC, uh, raylib.js,"
7924080,7933840," arraylib.h, load font XC. So, we're probably not gonna fully implement that thing, right? We're"
7933840,7937680," probably not gonna fully implement that thing. So, we could probably implement just a file name."
7937680,7942720," Um, if we are trying to load the font, if we're trying to load the font,"
7944400,7956800," we have a path. What can we do with that path? We could probably, um, add a special node that loads"
7956800,7966400," this font. So, then we can use that font with a certain name. Uh, right. That's a very interesting"
7966400,7970960," approach. Like, if you want to load the font dynamically in JavaScript, how do you usually do"
7970960,7982640," that? Right. JavaScript, uh, load font. So, how do you usually do that? So, font face is such a font face."
7982640,8005360," Very deep. Uh, so, font face. Uh, CSS loading API. The font face interface of the CSS font loading API"
8005360,8011760," represents... Okay. So, there is a thing called CSS loading API. Uh, interface for dynamically loading"
8011760,8018880," concept and usage. Uh, huh. Okay. All right."
8018880,8039680," Sounds good to me. Uh, I wouldn't have expected it to be that hard yet."
8041440,8047920," So, let's give that a try. Sounds like something that could have been used, actually. Uh, I don't think,"
8047920,8059040," I think, I think, I think so. Um, let me go down. Uh, load font xc. Uh, no."
8059040,8071120," So, what do we expect in there? We expect, uh, file name, uh, font size. Uh, uh, uh, uh,"
8071120,8080240," Uh, font size. Uh, quote points. Uh, I'm sure if I care about the quote points, though. So, I think we're"
8080240,8088080," going to be ignoring them. Um, right. So, this is something like this. To do, uh, quote points, uh,"
8088080,8100800," uh, is not, are not implemented. Uh, the font size is also kind of ignored. So, all of that also doesn't really matter. Uh, at least for now. So, in JavaScript,"
8100800,8105840," JavaScript, we can actually ignore them, right? So, that's how JavaScript works. So, this is a file name pointer,"
8105840,8117440," and we have to extract all of that choice from here. So, this is going to be file name, and this is a file name ptr,"
8117440,8130480," which will enable us to do something like, uh, this. All right. So, this is going to be file name, uh, my font, and another to do I want to do in here. To do,"
8130480,8159760," dynamically generate the name name for the font, right? Because the client program doesn't really have to know anything about that. It's sort of like a special identifier that we use to identify this thing. Uh, so, and I had coded it for now because I just, like, couldn't care less. Right? Uh, so, we add that. We do the load, and I don't care, honestly, when it's ready or not. So, it's just like, yeah, whatever."
8160160,8167040," Whatever. And we're supposed to return, what are we supposed to return? Actually, we're supposed to return the structure."
8171840,8178240," We're supposed to return some sort of a structure, um, that is allocated on the stack and whatnot."
8178240,8184720," Uh, so, and the font is, in fact, a structure. Right? Oh, my God. Fuck."
8184720,8186960," Shit, fuck."
8186960,8201520," Uh, yeah. So, essentially, we can, I suppose the structures are, yeah, the structures are returned through a pointer. Right? That's, that's what I remember for sure. The structures are returned through a pointer."
8201520,8210800," So, this is kind of the stuff that should, should have been abstracted away. This kind of stuff should have been abstracted away, but I mean, it is what it is."
8210800,8216160," And it isn't what it isn't. Is it not? I think it is."
8216960,8223120," So, if I want to be allocating the thing. All right. If I want to be allocating this thing. So, I also have a heap."
8223120,8230720," We need to start working on this heap. Right? So, let me take a look."
8231840,8239680," So, we do have raylib.js and inside it should have wasm. Right? So, here it is. So, we have this thing."
8239680,8241520," And"
8244560,8253520," In terms of experts. Right? So, there is a heap underscore underscore heap base. Right? So, there's this thing."
8253520,8265120," Uh, heap base. Uh-huh. And we can use that to sort of, like, allocate some stuff. All right."
8266240,8278160," Okay. Um, heap base. Yeah, there we go. So, it's probably also maybe, um, um, something allocated on the stack. But, um, yeah."
8278160,8287120," Data end. And where do we keep track of the stack, though? All right. Where do we keep track of the stack?"
8288400,8292320," I have a feeling that if I just allocate it on the heap, it's not going to really work that well."
8292320,8295040," That's the feeling I have. But maybe it doesn't really matter that much."
8295040,8298640," Honestly. Maybe it doesn't really matter that much."
8298640,8308560," So, the trick I can do. The trick I can do. Uh, raylib dot, uh, where is the..."
8308560,8316800," I definitely need to just export it. So, I wonder if I can simply, um,"
8318560,8322960," in the build, specifically, say, export that thing."
8322960,8336960," So, export. So, it's wl export heap base. I wonder if it's going to just work."
8336960,8344160," So, it compiled, which I really like. So, I have this thing opened."
8344960,8354880," Let's refresh. And raylib.js wasm. I wonder if now I have a heap base in N. No, I don't."
8354880,8361280," So, because it was not defined. You can't... Ah, well, I mean, I only recompiled the snake,"
8361280,8364240," not all of the examples. That makes sense. So, let's give it a try one more time."
8364800,8372320," So, raylib.js wasm. All right. So, get that. And in the exports, what do we have in the... Yeah,"
8372320,8380080," we do have a heap base. So, I'm going to do a very dumb thing. I'm going to literally return the heap base."
8382000,8392960," So, the heap base. Let's see. What do we need to do? So, what I was thinking, actually,"
8392960,8399360," I wanted to simply return the heap base. Compile with stack first to avoid headache later."
8399360,8406320," You're wasting my time. You didn't explain what it even means. Right. So, what I want to do is just,"
8406320,8412960," like, maybe return the heap base. All right. So, maybe return the heap base and hope that it will"
8412960,8420400," just use that and it will get sort of like an empty, you know, font or something. Right. So, the empty font."
8420400,8426880," But I feel like it's not gonna, like, work correctly. Right. Because it's supposed to be on the stack."
8426880,8433840," Right. It's supposed to be on the stack. Now, return..."
8436000,8446080," So, let's do this. Wasm instance. Wasm instance experts. Wasm experts."
8446080,8453120," Heat base. There we go. So, it's kind of like a dumb hack, but that's exactly what we need right now."
8453120,8462800," So, it's passing an out pointer to already stack allocated memory as the first... Really? Wait a second."
8462800,8465840," That's interesting. That's interesting, I think."
8465840,8473760," So, I missed that point."
8473760,8481120," Ah, okay. That's cool. Thank you. So, we can use that, actually."
8481120,8486640," So, I can just... I didn't even have to do anything then yet. So, I didn't have to return anything, I suppose."
8488160,8492160," Right. One of the things, by the way, I can do is probably..."
8492160,8502240," Base size glyph count. I can store some sort of an ID"
8502240,8509920," in one of the fields, actually. I can store some sort of an ID. So, next time I can kind of distinguish"
8510800,8516240," what is used there. But it can hard code... Yeah, when I render in the text, I'm going to be rendering the"
8516240,8520800," text through a special font. Okay. So, none of that is required. Okay. So, that's actually cool."
8521520,8528960," We don't need to do anything. Right. Because we only have one custom font. We have default font. Right."
8528960,8535280," So, we have default font. And one custom font. And we can hard code all of that. Right. We can hard code"
8535280,8545200," all of that. So, that is pretty cool. That is pretty cool. So, let's recompile it one more time. Right. And"
8546320,8553680," now switch to this kind of thing. Right. So, generate texture mipmaps. This one is interesting because"
8553680,8560320," I don't think you can do anything in Radiant.js as of right now. Right. So, I'm going to just, like,"
8560320,8570720," remove this thing. Like, I mean, define this thing. No. So, set texture filter also doesn't mean anything in"
8570720,8578960," this context. Right. It also doesn't mean anything in this context. So, right. MeasureTextExit. That is"
8578960,8586240," perfect, actually. That is perfect. Right. So, let's go ahead and implement that. So, if I take a look at the"
8586240,8594320," ArrayLib.h. MeasureText. So, yeah. It accepts two arguments, but there is three of them. Actually,"
8595760,8606240," no. One, two, three, four. And there is a five in here. Right. So, I suppose what we're going to be"
8606240,8614240," doing in here. So, result and this. So, this is going to be font. And I don't really care about the"
8614240,8619520," fonts. The text is going to be this. So, this is the pointer. Font size is going to be that. Spacing is going"
8619520,8625760," to be that. None of that really matters. So, and this is the pointer. It's going to be pointed to"
8625760,8633760," a vector of floats. It's going to be a vector of floats. So, it should be relatively easy to implement."
8633760,8644000," So, text ptr. Let me find the text ptr. So, we're going to be doing that. Uh-huh. So, this is also"
8644000,8656000," result ptr. And we can do something like result, which is a new float 32 array buffer. And actually,"
8656000,8663200," yes, I think it's a buffer. A result ptr. And we have two of them because it's a it's a big thing."
8663200,8669760," And that's basically it. So, we can just do result 0 and result 1. So, that's what we can do. I'm pretty sure."
8671280,8682480," So, if I go into wasm main measure text. What was the measure text? So, essentially,"
8682480,8692320," we take the context and we set the font to font size plus pixels my font, which is obviously"
8692320,8697440," hard-coded, but that's fine. It's not finished yet. It's not finished yet. That's totally fine."
8698560,8707200," So, then we can do ctx measure text, uh, measure text, uh, text, and we can take the width. Um,"
8707200,8714560," right. And maybe I have to cache that thing. Uh, so, what does it return? I suppose it's something like"
8714560,8726560," metrics, metrics, right? So, this is a metrics, metrics, right? So, that's what we can do. So, since we only have"
8726560,8735840," one custom font, uh, we can just head code that. All right. So, we can just head code that. Um, so, support"
8737200,8750480," more than one custom font, right? So, that's it. I don't see anything else that can be done here. So, that"
8750480,8758880," should be fine. I don't really think I need to rebuild anything. So, uh, that is pretty cool. Uh, ctx is not defined."
8759520,8773120," Let's find, uh, 281. Uh, it's because it's this. All right. Uh-huh. Uh-huh. Uh-huh. 282. I am that dumb,"
8773120,8781760," apparently. Okay. Well, did you see that? It already rendered shit. What the fuck? This motherfucker already"
8781760,8795520," rendered shit. Holy fuck. I mean, yeah. So, that's pretty cool. Um, so, we're almost, we're almost there."
8795520,8801680," We only need to draw the text, right? So, we only need to draw the text. So, let's go ahead and do that."
8801680,8813840," Let's draw text. That's so fucking funny. I love it. Uh, raylib.h, uh, draw text exe. Uh, what do we have"
8813840,8819280," in here? Well, it's not that one. It's that one. So, we don't return anything here. So, that should be"
8819280,8826400," fine. Uh-huh. So, font doesn't matter. I don't give a choice about that. The position is obviously going"
8826400,8838240," to be pointer. The font size is that, spacing, tint. There we go. So, we need buffer, uh, and then we need"
8838240,8847760," the text, la text, uh, position. We'll definitely need the position, uh, as a, as a value. So, we can do"
8847760,8855680," position pointer, pointer, and then we can do x and y. There we go. So, we can extract it like that. Uh, and of"
8855680,8860960," course, since this is a custom thing, right? So, this is a custom thing, uh, we're using the custom font."
8860960,8872400," So, um, fill text. We already, yeah, we already have fill text. So, here's the text. Here's the position,"
8872400,8880960," x, position y. We can do it like that, uh, so to, to follow the convention. Um, and also do plus font size."
8882480,8888720," Why do we plus font size? Because of some weird reason, but whatever. So, we don't really have to do"
8888720,8900320," that. I guess that's it. Uh, I guess, I guess that's it. So, that should be basically it. So, uh, text was"
8900320,8910480," already declared 289 and because it's a text pointer. Uh-huh. All right. I'm a little bit anxious."
8910480,8917440," It just worked. This motherfucker just worked. Holy fuck."
8920320,8923200," I mean, I mean, it doesn't render text, but I mean, it works."
8923200,8933360," Uh, so yeah, the text, the text kind of didn't work. So, let's see what, what happened in there."
8935440,8948480," Um, where's my dev tools. Thank you so much. Uh, so let me, let me see. Uh, load font. Exim."
8948480,8960560," So, name PTR. Um, so I forgot to load. Font load. I think that's what I forgot to do."
8965440,8982000," Um, didn't work. Uh, network error occurred. Uh, so it's probably some, it's so slow. God damn."
8982000,8994160," Oh my God. Oh my God. Uh, can I, I don't see. Should I see? Um,"
8995760,9003280," network error occurred. And it doesn't really tell me, uh, what exactly happened there."
9003280,9014880," Um, um, so I forgot the out. Okay. So that makes sense. All right. So result PTR. That's true."
9021760,9031840," Okay. Still doesn't have text. Still doesn't have text. It doesn't help. Uh,"
9031840,9041200," that is really strange. Look, maybe it's not actually loading anything."
9044080,9054240," can. So do I actually show every, okay. So I didn't show everything. Uh huh. And if I switch to here,"
9054240,9066640," it loaded it up, it loaded it up for sure, which is cool. All right. Which is fine. But then, uh, maybe we"
9066640,9073280," didn't measure text correctly. Okay. So let's try to sort of debug all of that. So what I want to do,"
9073280,9080080," maybe this doesn't really assign anything. Right. So maybe it's not like a view or on, on anything."
9081040,9091600," Uh, so let me do, let me do the funny thing. New, uh, error, uh, measure text XC, uh, just"
9091600,9102240," results and just throw this entire thing. So when we measure the text, um, okay."
9107040,9124320," Okay. That is cool actually. So something with the height, I don't really know. What if instead of"
9124320,9131600," this, I'm return font size. So I suppose, yeah, it's didn't like something about that."
9134000,9145920," Uh, all right. So that seems to be... didn't help. Um, all right. So let's go to draw text. Let's go to draw text."
9145920,9160720," So we can see if we have draw text XC. So we have position X, uh, position Y, text,"
9162240,9166560," and probably the font size. All right."
9166560,9182480," Score 0, 152."
9190240,9200320," I think I forgot something important. This CTX fill style. Okay. Okay. Tint is a color."
9200320,9208720," Uh, color PTR. Uh, get color from memory. Uh, fill style."
9208720,9218080," Get color from memory. Buffer, tint, PTR. Might as well, maybe,"
9218880,9230400," do tint, like this. And also print tint in here. So we can see, uh, if it is correct or not."
9230400,9234000," It seems to be correct. Holy shit, it worked."
9234000,9244960," So, and remember that when we were filling up the text, uh, we were also adding the font size, just in case."
9245520,9249120," We were also adding the font size. Uh, yep."
9249120,9256640," It throws an exception, right? Yeah, because we have a debugging."
9256640,9261440," But it is working. It is twerking."
9264400,9275920," Oh, shit. You have to be careful, by the way, because the focus..."
9275920,9277920," That's pretty cool."
9277920,9293760," So, now it's one of the examples for RayLibJS."
9293760,9301440," So, I think it is, it is a feasible approach. I think it is a feasible approach."
9301440,9303600," So, what it feels like is that..."
9303600,9313040," Let me actually think about that, because there is something weird about that from the philosophical"
9313040,9317680," point of view. There's something weird about that from the philosophical point of view that"
9317680,9324000," bothers me immensely. And it's generally about the modern software development, right?"
9324000,9331920," So, let's actually get philosophical a little bit. So, how RayLib is organized, right? How RayLib is organized?"
9331920,9338400," So, essentially, you have your app, right? If we take a look at the web, all right? So, you have your app."
9339040,9350080," It's built on top of RayLib. It's built on top of RayLib, right? Then RayLib, kind of, if you look at it very"
9350080,9361040," carefully, ultimately RayLib is built on top of JLFW, at least the core, at least the core, without any,"
9361040,9367600," you know, sound or, you know, any other stuff. But as far as I know, they recently started to abstract"
9367600,9376080," away, and now it is basically called platform. So, there is so-called platform. And JLFW is one of the"
9376080,9387600," platforms. JLFW is one of the platforms. And I suppose then JLFW got ported on the browser, right? Through"
9387600,9401120," mscripten, right? mscripten, right? So, and then that just goes to WASM, to WebAssembly, right? And then,"
9401120,9408160," ultimately, it gets executed in the browser, right? Get executed in the browser. You know what bothers me?"
9408160,9416720," You know what bothers me? Is that browser probably uses hardware acceleration for canvas, or for"
9416720,9421600," anything graphics related, right? So, it definitely uses hardware acceleration for WebGL, and it probably"
9421600,9430880," uses hardware acceleration for canvas. That means that it might be using somewhere along its own"
9430880,9446400," architecture. And here's the thing. Here's the food for thought. We got so caught up with"
9446400,9452800," piling abstractions on top of each other that we kind of haven't noticed that we kind of started to repeat"
9452800,9463360," ourselves. Don't you guys think? It's like... How something like that is justified? And I'm not blaming"
9463360,9472480," anyone in specific. By the way, I'm also actually, you know, guilty of this kind of shit. We, as an industry,"
9472480,9482240," how did we end up in here exactly? Where we can actually justify piling the same abstraction, the same"
9482240,9491360," layer of abstraction. Twice. Twice. Twice. And that is normal. Like, just think about that. Like, where did all"
9491360,9502320," go wrong? Where did all go wrong? So, and interestingly, okay. So, essentially, what I effectively doing,"
9502320,9511760," what I'm effectively doing, array leap basically finishes its own abstraction here. This is the official array leap,"
9511760,9521360," right? So, this is how official array leap, you know, implements web. It says, okay, so this is where"
9521360,9529440," we end the abstraction. So, this is where abstractions end. What array leap JS does, actually, it says, no,"
9529440,9530960," the abstraction is in here."
9534160,9542000," and that's why we end up kind of re-implementing the same thing twice. But the thing that we get, we get"
9542000,9549040," less bloat out of that. So, essentially, it's kind of interesting that along the stack you can sort of"
9549040,9556400," vary where you say is the border between your application and the platform. And depending on where"
9556400,9563520," exactly you pick that border, you can end up with less complexity or more complexity. And it's really"
9563520,9571040," difficult to find that exact point where exactly we want to split the app and the platform."
9571040,9576400," So, RayDeep.js decided to say, okay, so this is where we split. This is app. And this is everything that is"
9576400,9583120," a platform. But the official re-deep said, no, let's actually do that in here. So, and I feel like"
9583920,9588640," you pick that point depending on your application, right, depending on your goal and what you're"
9588640,9595600," trying to achieve. And finding that point feels like an OOP trying to come up with the perfect"
9595600,9601600," hierarchy of classes or something like that, right? So, there is not like one single hierarchy of classes"
9601600,9606720," that solves anyone's problem, right? It's just like, depending on your situation, you're going to be"
9606720,9610960," building that hierarchy differently. And that's why programming in OOP is actually kind of hard."
9610960,9617760," I'm not sure if I make any sense. But yeah. So, that's actually kind of interesting."
9617760,9623680," The game of trades-off. The game of trades-off. Yeah, exactly."
9623680,9632160," It is the game of trades-off. So, that's pretty interesting. That's pretty interesting."
9632160,9640080," And again, I'm still not sure if this thing is going to be useful."
9640720,9647760," Right. So, it is still an experiment, right? And I ask people to view it as such. It's an"
9647760,9654720," unofficial implementation of a subset of RayLib API in JavaScript. And it is an experiment."
9654720,9659280," Right. So, and it is a very interesting experiment, right? So,"
9659280,9666640," this is how much of the RayLib you can implement. So, then you can, you know, play this kind of game."
9667280,9673360," And again, this game works natively without any browser. It's not like something not portable and"
9673360,9679120," strictly for the browser. No. Here is the native version of the same game. This is literally the same game."
9679120,9684640," Right. It is literally the same game."
9689760,9697600," So, yeah. I just wanted to conduct this little experiment of, you know, taking my old game that I"
9697600,9704560," developed two years ago, right, and just making it an example in the demo for RayLib.js to see if it's"
9704560,9709760," all feasible and learn something new. Like, I actually learned like something new, specifically how to return"
9709760,9719120," structures from JavaScript right into C. And it's actually very useful. So, yeah."
9719120,9734560," All right. I guess that's it for today. Thanks everyone who's watching me right now. I really appreciate that."
9734560,9740960," Have a good one. And I see you all on the next recreation programming session with Mr. Azuzin. I love you."

start,end,text
800,9420," looks like we're live hello everyone and welcome ah this is so fucking funny yeah yeah so we"
9420,15480," actually reverted back all of the changes yeah we reverted back all of the changes sure sure"
15480,26380," god i hope this platform dies anyway so hello everyone and welcome to yet another uh recreational"
26380,31920," programming session hello hello welcome welcome welcome so let's make a little bit of an announcement"
31920,41440," and officially as that uh the stream and uh so let's do the usual thing uh just a second um red"
41440,49860," circle right uh live on twitch and what are we doing today on twitch dot a television website what's the"
49860,56240," topic of today's stream today the topic of today's stream is who needs css when they have a pure c"
56240,62960," right that's the topic of today's stream all right so let me give the link to where we're doing all"
62960,69260," that unfortunate twitch.tv and i'm gonna ping everyone who's interested in being pinged and"
69260,76400," there we go the stream has officially started the stream has officially started so today we continue"
76400,84280," working on uh n.h which is a deep learning framework in pure c that we've been developing for quite some"
84280,90820," time oh shit uh you can find this thing uh here i'm gonna copy paste it in the chat and uh for people"
90820,97440," who's uh watching on uh on youtube i forgot to prepare the description file what the hell right so i'm gonna"
97440,105740," put that in the description as well so this is the references and uh and then dot h right so that's"
105740,112020," basically the uh the source code of this entire thing so and what i want you to do today is actually not"
112020,118820," related to machine learning or uh neural networks right so to do today i want you to do some sort of"
118820,122060," like a maintenance work but not really so i think it's going to be rather interesting"
122060,128880," uh right so um as a part of our framework we actually have a little bit of a ui"
128880,136580," we could have done uh something like um you know the uh terminal interface where all of the information"
136580,142960," is printed on a standard output in the form of a log and that would have been uh enough right"
142960,149040," so but i believe it is more education to have something more uh visual and we are educating"
149040,154780," ourselves we are learning how to do uh artificial intelligence neural networks and stuff like that"
154780,161620," and primarily i learn how to do all of that right so i'm sort of like the main learner of this entire"
161620,166280," stuff right so and i just share what i learned and stuff like that so for me it's quite important"
166280,171820," to have the visual things that i can like see and just like you know drag around and stuff like that"
171820,177420," and because of that i have this uh sort of like a ui right so which visualizes the current neural"
177420,181860," network i believe this kind of visualization of the neural network is not particularly useful"
181860,187920," right so the deeper and more complicated neural network becomes the more useless this visualization"
187920,193120," becomes but i have a couple of ideas on how to improve the visualization of a fully connected neural"
193120,199280," network right and so this is basically the ui we have right not a terminal not a log nor none of that"
199280,203460," stuff you you can actually drag things around you can interact with this thing you can just adjust"
203460,208220," the learning rate and i think this is actually super useful right i like it way more than just like"
208220,212660," looking at the numbers in the terminal and stuff like that right because i can interact with this"
212660,219640," entire thing and see like the actual feedback uh right so but the problem here is that like developing"
219640,225980," ui applications is rather difficult like anyone who tried to do that will agree with me right because"
225980,234080," they're very much um how some people said in our discord chat boilerplate right so very much boilerplate"
234080,241280," in here we are using array leap for visualization right so uh array leap is this entire thing and this is"
241280,248780," just a graphical library for making games it doesn't have a ui stuff well it does have a ui stuff but it's"
248780,254060," it's a separate library build on top uh of ray leap i don't really use it because i don't really want"
254060,260040," to depend on too many things so because of that i just use ray leap uh right and essentially uh what"
260040,265200," we have in here in terms of ui is just like things that we develop ourselves from scratch"
265200,272680," right so what i came up with is a system of widgets right so essentially uh things like this plot"
272680,279180," things like this plot things like this uh neural network and things like this visualization and these"
279180,286460," uh sort of sliders and stuff like that they are separate widgets they are separate widgets and each"
286460,292020," individual widget is just a single function that is called on each individual individual frame of the"
292020,298420," game loop it's kind of like a similar to immediate ui it's it's basically is immediate ui and each of"
298420,305280," this function accept a rectangle within which they have to draw themselves right so if we take a look at"
305280,310000," some of the stuff so we can take a look at some of the widgets uh right so i think they're located"
310000,316120," somewhere here so for instance uh here's the the plot the thing that renders the plot right the gym plot"
316120,323020," it accepts the plot itself which is array of floats array of points that you need to plot and as you can"
323020,328740," see it accepts a rectangle straight of a rectangle the the left top corner and the width and height of the"
328740,337100," rectangle and that's it and it's only uh goal is to like render itself go render yourself in that"
337100,343240," specific rectangle right and on a higher level when we are rendering all that when we're calling those"
343240,348420," functions right when i call gym plot uh right so let's actually find this function so here it is"
348420,355760," i have this sort of like a very crude uh layout management system where i just do all of the layouting"
355760,362220," manually uh right so basically here i allocated the rectangle right allocated some sort of a rectangle"
362220,368840," and then i rendered the plot within that rectangle then i upset the um you know the coordinate the"
368840,374500," horizontal coordinate of that rectangle and render the next thing and then uh offset even more and then"
374500,381660," the next thing and so on and so forth so essentially as you can see i actually manage all these pixels and"
381660,388120," little things like literally manually and it can become very messy very quickly and it's like at some point"
388120,395120," you may not want to even touch this entire stuff because how messy it become uh right so what i want"
395120,402200," you to do today i want you to implement um you know a reusable layout system that would do all of that"
402200,408660," stuff for us automatically right sounds interesting sounds interesting so the inspiration that i got"
408660,414880," for for this thing comes from the library called qt i don't know how many of you have heard of this library"
414880,420580," so it's not particularly a thing these days because uh all of the desktop applications are developed"
420580,426280," on top of electron right so all of the web application all of the applications these days are web applications"
426280,433820," but back in my days if you wanted to write a desktop application you would use this and i think it's still in use"
433820,439620," right so chat arena is written in in this stuff so look look they're trying to they're trying to portray that"
439620,445740," they're still relevant or something maybe they are i don't really know uh maybe they are relevant"
445740,453740," so but anyway uh so in essentially this particular library uh actually uh has a very interesting system"
453740,460700," uh based on q layout right so it's an object-oriented library like object-oriented whatever that means uh"
460700,467580," right so it has a class a q layout and q layout is basically a container into which you can just basically"
467580,475580," add widgets and it has two uh different kinds of layouts uh i think uh i don't quite remember i think"
475580,484060," one of them was called uh q vertical layout or something like that uh q yeah it's it's qv box"
484060,491180," as far as i know it inherits the q layout and essentially if you created qv box and you put a"
491180,498700," bunch of buttons into it it will render all of that like this so it's a vertical box and on top of that"
498700,505420," there is a q h box right q h box layout right so it's basically"
505420,512300," uh a horizontal one right so and if we take a look at how it behaves uh all right so essentially"
512300,518780," it renders things like that right so the vertical is vertical and the horizontal is horizontal so what's"
518780,524940," interesting is that you can actually nest them right so one of these elements can be for instance q"
524940,530540," horizontal layout and within the horizontal layout you can have a bunch of vertical ones"
530540,537340," and though so by nesting these different kinds of layouts that are oriented in different ways you can"
537340,545740," create a pretty complicated uh ui right so and so what's interesting is that i think it has more uh"
545740,551420," different kinds of uh like sort of layouts it has a grid layout as far as i know there's something like"
551420,558540," grid uh yeah so there's also grid layout but i don't particularly know how useful it is because you can kind of"
558540,566060," simulate grid layout so essentially you can say okay so i have a vertical layout and each element of the"
566060,571820," vertical layout is a horizontal layout with equal amount of elements and there you go you got a grid"
571820,578940," so essentially i suppose having this vertical and horizontal is more like atomic more fundamental and"
578940,587260," you build a grid layout based on that uh right so and essentially i kind of want to replicate this kind of"
587260,595580," system uh right i want to replicate this kind of system uh but in immediate in an immediate style in"
595580,600060," immediate ui style if you never heard about immediate ui i really recommend to google it up it's actually"
600060,607420," kind of becomes more and more relevant these days as things like i'm gui become more popular right so i think"
607420,613420," knowing what is immediate ui is kind of valuable today even though like developing in a web style"
613420,621260," where you have sort of like a pre-computed uh like a tree of elements um is still sort of like a dominant"
621260,626220," way of doing ui because of web and stuff like that uh immediate ui becomes more and more popular maybe at"
626220,630860," some point that's how we're going to be doing ui uh i don't really know but it's it's kind of important"
630860,635660," for any you know professional to be aware of different approaches of the same thing we're"
635660,643340," engineers after all right aren't we are we engineers so as an engineer you need to know you need to be"
643340,648540," aware of different approaches and you have to evaluate them and you have to pick the best approach for a"
648540,655100," current situation so you cannot just like shrug away oh it's not relevant today no no no no you have"
655100,659580," to be aware of different solutions for the same problem so you can pick the best one because you"
659580,663980," are an engineer are you an engineer if you're not you're going to be replaced by chat gpt"
663980,671500," right so you know what i'm talking about yeah so be aware of all of the solutions if you want to be"
671500,678780," professional right so i'm going to put this in here so here is the thing so i'm going to put this kind of"
678780,685180," stuff so this is i'm gui uh all right so if you want to learn more about immediate ui just read about"
685180,693500," this entire thing and uh we're basing all of our stuff uh on uh qlayout right so this is basically this"
693500,702140," entire thing and generally on qt i think this library is kind of like yeah still useful um all right um so"
703500,710700," uh this is basically the intro so let me take a look at who subscribed at today thank you so much"
710700,716140," felix699 for which prime subscription it was today days ago but i want to acknowledge that right so"
716140,721500," because which shows me that moldy soul thank you so much for tier one subscription eleonty thank you so"
721500,727260," much for tier two uh subscription with the message so doing cool a very cool indeed thank you thank you"
727260,733340," thank you thank you and shy thank you so much for tier one subscription with the message a a and shy hi hi"
733340,739580," thank you thank you so much i really appreciate all of that i really appreciate all of that okay so how"
739580,746220," we're going to do all of that how are we going to achieve that uh goal right so let's actually take a look"
746220,755580," at this entire stuff so as already said uh a widget is something that accepts um that accepts the rectangle"
755580,761260," right maybe we need to introduce the notion of the rectangle right so maybe what we're going to have"
761260,767420," uh at some point in here i'm going to actually start writing code in the example right and then as the"
767420,773020," code becomes working as the code becomes working i'm going to be copy pasting it back into the framework"
773020,779740," right so this is actually kind of cool way of uh developing things right so i just write a very specific"
779740,786300," solution for where very specific application and as it develops into more and more robust thing i just"
786300,792540," pull it out of the example into the framework so it can be reused across several applications like that"
792540,799100," right so first i sort of like battle test some idea in the application and it if it works out it might"
799100,804380," become more general thing so i pull it out if it doesn't work out if it dies out inside of that application"
804380,809660," maybe it's not it was not worth even looking into so it just stays there or dies out and eventually"
809660,816060," gets removed right so uh i'm gonna start writing inside of the uh application not in the framework"
816060,820460," right so we want to have something like a rectangle right so we want to have something like a layout"
820460,826300," uh rect right so this is a layout rect and what do we have in here we have the"
827420,834060," x right and y which is the left top corner of the rectangle right and on top of that we want to have"
834060,841260," the width and the height of the rectangle right so this is basically what we want to have uh all right"
841260,847900," so and i suppose we'll probably have to refactor our widgets uh to accept this specific rectangle right"
848700,856780," so yeah so we can say that the widget is something uh that accepts a rectangle and just renders itself"
856780,862300," within that rectangle so i'm not going to implement uh like anything in here right so this is basically"
862300,868620," an idea of a widget widget is just something uh that uh accepts the rectangle and renders itself within"
868620,873820," that rectangle all right and as already said we're going to have different orientations"
874460,881900," of the layout so so we maybe we can call it uh layout orient all right and we're going to have only"
881900,885820," two of them right so it's going to be horizontal and vertical one so it's going to be law"
885820,897820," anyway so it's going to be um horizontal and the vertical one right so it's going to be horizontal and vertical one"
899740,909660," right so and then we i want to have a sort of a thing uh that keeps track of the sort of like of the"
909660,917180," rectangles that were allocated right so uh essentially what i want to be able to do right i want to be able"
917180,925020," to say uh okay so layout and layout is allocated within that specific rectangle right so this is the"
925020,933260," rectangle uh for that specific layout right so and uh then of course it's going to have the uh orientation"
933260,941660," right so this is the orient uh right and then i want to be able to say okay give me sort of like the"
941660,949660," next slot within that rectangle so essentially it will subdivide uh this thing uh it will subdivide this"
949660,957100," and i think it would be kind of nice to actually maybe uh like render that somehow uh it would be"
957100,961900," kind of nice to render that somehow so maybe it should be like a different application i don't really want to"
961900,965100," keep everything within that application"
965100,979340," right so let's uh create maybe layout dot c uh right so i'm gonna just do something like this"
979660,989020," uh image to nn uh and let me move all of that stuff in here right so i kind of want to have"
989020,993260," a separate application within which i'm going to be experimenting with all of that"
993260,1001660," uh right so this is going to be the main so basically nothing distracts us from focusing on the layout system"
1002300,1009820," so we've got some subs uh we've got even more subs thank you so much uh i will pronounce your name"
1009820,1013820," correctly thank you so much for tier one subscription with the message love your content thank you thank"
1013820,1019020," you so much i'm really glad you like what i'm doing and god modulator thank you so much for tier one"
1019020,1023900," subscription as well thank you thank you i think you really appreciate all of the subs"
1025100,1032860," i really appreciate all of the subs uh right so let's imagine that we have a thing of the size of"
1032860,1041900," the you know the full hd right so the full hd so the width is going to be 100 uh 10920 right so something"
1041900,1046860," like this it's not a widget it's actually width right so and then we're going to have a height and which"
1046860,1056060," is 1080 right so it's basically 1080p right so it is basically 1080p and then i can say okay i want to"
1056060,1064300," have the layout all right so this is going to be the root layout and the root layout is oriented uh let's"
1064300,1072220," say horizontally right so it's going to be a low horse and the rectangle within which it is oriented we can"
1072220,1076460," say that it's going to be the whole screen right so we can say that it's going to be the whole screen so"
1076460,1083660," it's going to be width and this is going to be height right so this is the layout and uh essentially i"
1083660,1092300," want to be able to ask that layout give me the next slot within that layout all right give me the next"
1092300,1099260," slot within that layout uh similarly to how we do that in here right so here we have like the whole thing"
1099260,1107580," and we have three widgets in here right so but we need to kind of know so to give you a specific size"
1107580,1114140," of the rectangle we need to know how many uh elements we're going to have in there right how many elements"
1114140,1121660," we're going to have in there and then uh we will be able to tell you the width of the element that we're"
1121660,1127980," giving away to you um maybe this is something that has to be part of the layout maybe this is something"
1127980,1134700," that i have to uh sort of declare up front right so you have to say okay so here is the layout and i'm"
1134700,1142460," going to have the count amount of elements within that layout you know what i mean right so you kind of"
1142460,1147580," you kind of need to know up front because that will make it easier so the reason why we have to do"
1147580,1154300," that is because it's immediate ui so essentially we need to know up front how many elements we"
1154300,1161660," want to render in case of the uh retained ui you first build the tree and then based on how many"
1161660,1166380," elements you have within the certain layout you'll be able to compute all of that but we don't know that"
1166380,1171900," up front we don't have that information up front and because of that we have to give it to the layout"
1171900,1177420," you see what i mean so because of that we have to yeah we have to say that we're going to"
1177420,1187260," have three elements in here all right so and all right so then i want to be able to do something"
1187260,1193660," like this okay so this is going to be layout slot it is going to accept the layout all right so this is"
1193660,1200780," going to be the l and uh maybe we're going to ask for a very for the ith slot right maybe we're going"
1200780,1207180," to ask for the ith slot and it's going to give us the uh rectangle right something like this and"
1207180,1212700," based on the ith slot we're going to um actually like give you the rectangle so we may want to"
1212700,1217740," allocate the rectangle like this so this is going to be the rectangle let's zero initialize the center"
1217740,1224220," i think and we're going to say okay so it's going to be and here is an interesting thing the specific"
1224220,1230220," slot that we're going to give to you actually depends on the orientation of the layout right so"
1230220,1234700," that's kind of important uh right because"
1234700,1244220," so if you have a vertical uh horizontal layout here are the slots right here are the slots"
1244220,1251180," one two three and since we are programmers right it has to be zero one two of course right we're not"
1251180,1257500," mathematicians we start cutting from from zero so if it's horizontal if it's vertical it has to be like this"
1257500,1266780," right it has to be like this so like how exactly we compute the rectangles for the slots depends on the"
1266780,1273900," orientation right so it very much depends on the orientation so because of that we need to have a"
1273900,1280220," switch case in here right some sort of a switch case right so let's actually do switch and uh this is"
1280220,1289020," orientation of the layout right so this is the orientation so if it is a horizontal layout right"
1289020,1294620," so how we're going to be doing all of that how we're going to be doing all of that so horizontal layout"
1294620,1303900," so we need to know the width of a single element right so the width of a single element so essentially"
1304780,1310780," that width is the width of the whole thing the width of the whole thing i think divided by the amount of"
1310780,1316780," elements right so because of that because of that it should be relatively straightforward to do the"
1316780,1324140," following thing so let's actually maybe define something like w and we can take the width of the"
1324140,1329020," whole thing and of course it's only for the for the horizontal one right so it's only for the horizontal"
1329020,1335900," one and divide by the amount of elements we're going to have in here right so and that's the thing we're"
1335900,1341500," going to have all right so and the rectangle is basically x right so this is the horizontal thing"
1341500,1349980," it's going to be equal to um i multiplied by w right and offset by the rectangle right so because"
1349980,1357260," it's offset by the rectangle y kind of stays the same all the time right y kind of stays the same all"
1357260,1364300," the time so we can keep it like this the width of that thing is actually this thing right so it becomes"
1364300,1372780," this and height is the same as the erect erect height so what's interesting is that uh we can kind of"
1372780,1382780," replace this thing like directly in here and then it will allow us to reuse our w in here right that's"
1382780,1389900," actually kind of cool so there we go so this is a horizontal thing right so the width is basically"
1389900,1394540," the width of the whole thing divided by the amount of elements uh height is always the same because"
1394540,1400460," it's a horizontal thing and x is just basically depends on i uh right it very much depends on i and"
1400460,1409900," y also just do the same thing right so uh now we should be able to essentially um mirror this entire thing"
1409900,1418700," but vertically when we mirror this entire thing vertically all right we are dividing dub uh h instead"
1418700,1427900," of w right we're dividing h instead of w and we're offsetting y instead of x like this so yeah so we're"
1427900,1434780," basically mirroring this entire thing we're basically mirroring this entire thing uh all right so and we"
1434780,1445660," got this thing that basically uh picks ith slot right this entire thing picks ith slot uh so and then so we"
1445660,1450460," allocated the the the root thingy the whole root thingy and then we should be able to do something"
1450460,1457580," like uh layout slot uh root and give me the zero slot and then we should be able to actually render the"
1457580,1466220," widget within that uh zero slot right and then the first slot and then the second slot uh and so on and so"
1466220,1474380," forth right and so on and so forth but we don't have more than three slots in here so um right so essentially"
1474380,1480460," this entire thing with overflow and will require you to actually put more things in here maybe one of the"
1480460,1485820," things we want to actually uh you know put in here is some sort of an assertion right so we may want to"
1485820,1493500," assert that i is less than uh the count right so i is less than the count so if you try to put more"
1493500,1499820," it will fire an assertion and will remind you that you probably need to add more of these things right"
1499820,1504860," you kind of need to add more of these things so uh let's actually try to build this entire thing and see"
1504860,1511420," if it compiles or not so it's going to be clank layout layout dot c it doesn't compile and uh this is"
1511420,1518060," because this is not an enumeration it's a structure uh all right so it doesn't know about assert and"
1518060,1529900," it's it's kind of funny how in c when you don't include assert header it is also causes linking error"
1529900,1538220," which i never understood right how the lack of declaration of assert causes you to have a linking"
1538220,1545820," function error maybe because the the function assert doesn't actually exist in a library and it's"
1545820,1551180," actually a macro but since this macro was never defined the compiler thinking that it needs to find"
1551180,1557340," this function from where from from linked libraries and it can never find them i guess that's the reason"
1557340,1563020," why it uh says that it's implicit function declaration but also there is no such function because it"
1563020,1569020," actually doesn't exist and it's probably a macro uh or something like that so you know what i mean you"
1569020,1570620," know what i mean"
1570620,1582220," oh we've got more subs uh i think i didn't acknowledge cater waiter 98 thank you so much for twitch prime thank"
1582220,1591100," you thank you thank you that is very very cool all righty uh so let's continue but once you include the"
1591100,1596140," assert it actually works and we have like a non-void thing in here and we're supposed to return this"
1596140,1602780," rectangle in here all right so here we just like declare the zero initialized rectangle then depending"
1602780,1609020," on the retention of the layout we filled it with different things we just like give you the ith slot"
1609020,1614140," and then we return this internet thing so one of the things i would like to do maybe i in case of the"
1614140,1621260," the default thing i would like to say that this stuff is unreachable so assert uh unreachable"
1621260,1628940," so in case we introduce a new thing in here it will complain about that at the runtime there is"
1628940,1633900," a way to make it complain at compile time but just in case i wanted to complain in the runtime as well"
1633900,1640300," right if you know what i mean because it's c uh it's never it never hurts to be a little bit more"
1640300,1646860," safe in such language as c am i right am i right rust developers rust fellow developers what the"
1646860,1656220," is going on outside so all right so let me see okay it seems to be compiling and um right so it would be"
1656220,1664300," nice to actually see the consequences the unforeseen consequences of uh you know of our application so"
1664300,1670940," maybe in a widget i'm gonna actually print the the rectangles right you know what i mean"
1670940,1674460," we can actually print the rectangles so let's actually go ahead and do that so this is the"
1674460,1680940," uh let's call it the widget all right and we're gonna have something like this so these are the the"
1680940,1690140," values of the rectangle so r r h um actually it has to be x and y right it has to be x and y uh and there"
1690140,1694300," we go right so we're gonna put this stuff in here right and let's actually take a look"
1694300,1703100," layout there we go so this is basically how it allocated the slots for the uh for the widgets"
1703100,1712700," right as you can see the x is growing but y stays the same right x is small but y but i mean width is"
1712700,1718940," small but the height is full right if you change the orientation of this entire thing if we say something"
1718940,1726860," like it's a vertical one now uh it's a vertical one now x stays the same zero but it's the y that is"
1726860,1733980," keeps modifying right and the width uh stays big and the height stays small right so basically depending"
1733980,1740460," on the orientation it's just like orients these allocated slots differently uh right so maybe it"
1740460,1745740," would be nice to actually see like actually see what the is going on if you know what i mean"
1745740,1750460," right so let's actually turn it into a raylib application right well let's turn it into a"
1750460,1758300," raylib application so i'm going to include uh the raylib.h right the raylib.h and let me"
1758300,1761100," try to recompile this entire thing and as you can see it cannot find ready"
1761100,1768220," so let me go to the builder the sage and i'm gonna just like build the layout as the rest of the"
1768220,1773260," application right so i'm gonna not build the rest of the application so to not waste time on building"
1773260,1777980," them i'm gonna only build the layout right so i'm gonna build this entire thing i'm gonna bring"
1777980,1784300," the raylib uh environment in here and uh there we go so it managed to build this entire thing but it"
1784300,1789740," doesn't really print anything because we haven't implemented the game loop yet we've got some sub"
1789740,1794780," thank you so much koala koala underscore thank you so much for which prime thank you thank you thank"
1794780,1803260," you really appreciate at that i really appreciate that so uh let me see let me see so i suppose we"
1803260,1810140," need to initialize the window first all right so init uh window and we can put width and height in here"
1810140,1816380," that will create a huge window actually do i really want to do that so maybe i want to make a smaller window"
1816380,1821500," right so you know the usual thing i like to do is to have some sort of a factor which is going to be"
1821500,1827340," like 80 and it's going to be 16 multiplied by a factor and 9 multiplied by a factor so it's the ratio"
1827340,1834380," still stays 16 by 9 uh right but then i can actually decide how big or small i want the the whole thing to"
1834380,1840860," be right so it so the the actual full hd is 120 right if i remember correctly right if you take a"
1840860,1849580," look at python 3 and you say 16 120 that and 9 that this is full hd right but you can make it smaller"
1849580,1855660," right so 80 and uh 9 and it's kind of you've probably seen this kind of resolutions before right so all of"
1855660,1861740," them are 16 by 9 it's just they have different factors in here right but the ratio the aspect ratio"
1861740,1866940," is the same right so that's what i'm doing here so i have a single factor that kind of controls"
1866940,1872380," this entire thing and i don't care about width and height right so that's the usually usual thing i like"
1872380,1878460," to do so if i remember correctly you have to put a layout in here uh title you have to put the title"
1878460,1885340," in here so init window accepts width and height and the title of the window right so uh we've got another"
1885340,1892220," sub thank you so much droka 87 thank you thank you thank you with a message ayo ayo droka thank you so"
1892220,1896780," much for 19 months right that's a lot of months actually it's more than a year thank you thank you"
1896780,1900060," thank you really appreciate it almost two years by the way 24 months"
1904380,1911180," so and we've got uh 10 gifted subs from hans underscore underscore g thank you so much for"
1911180,1917980," gifting so many subs to to the viewers and giving so much money to the jeffrey bases because i don't"
1917980,1926620," really get any any of that i wonder if by the time oh like this entire like will be over"
1927340,1934220," and i'll be able to get the money but by that time twitch actually will go bankrupt and won't be"
1934220,1936060," physically able to give me my money"
1936060,1944300," oh that would be actually okay i kind of low-key wanna want that to happen because that would have been"
1944300,1949340," the funniest just ever actually if you think about it it's just like as the"
1950300,1958460," as the as the god's joke as the universe joke that would have been hilarious i kind of want i kind of"
1958460,1966700," want that to happen uh right that would have been so fun anyway"
1966700,1975660," um right because it's kind of going like really on downfall right as some people say in in the twitch"
1975660,1982380," chat right so i actually not sure if by the time i'll be able to get this money the twitch will be"
1982380,1989180," physically able to give me those money right i'm actually not sure uh so yeah but anyway it doesn't"
1989180,1996060," matter there are things that are more important than money in our life and that is immediate mode"
1996060,2002780," layout management system that is way more important than mine uh right so let me let me see"
2003660,2007900," so the other thing that we're usually doing here uh apart from initializing the window"
2007900,2019260," uh right um we need to set the frame rate right so we need to set the framework uh set uh target fps"
2019260,2026060," 60 right so we're gonna put this thing in here so this is gonna be 60. so we are rendering this at 60 fps"
2027740,2034140," we're rendering this at 60 fps and all right so the next thing we have to do we have to organize the"
2034140,2040220," event loop of course we're going to be initializing the layout before the event loop right so in here uh"
2040220,2049660," should uh window or maybe window should close i don't quite remember yeah window should close it checks"
2049660,2054540," whether the window should close and within this thing we are rendering the widgets and as far as i know"
2054540,2062460," you can also say close window or something so that's basically it but you also have to do begin drawing"
2062460,2069740," so you start drawing here we are drawing the widgets and then we're ending the drawing right so we're ending"
2069740,2076940," the drawing um so do we need to do anything else i think we also can clear the background uh right so i'm"
2076940,2083580," going to clear it with black right so let's actually clear the black and that's basically everything so"
2083580,2089820," i wonder if it's going to work it kind of worked uh and i think to maintain the event loop i have to put"
2089820,2095180," not in here should not close and there you go this is what we have and as you can see widget prints"
2095180,2101100," this entire shed right so instead of printing what we want to do actually we want to render that rectangle"
2101100,2113740," right so we want to do draw uh rectangle right draw rectangle r x r y r w r h and the the quarter we have"
2113740,2119740," to pick maybe we could pass the color in here let's actually pass the color in here i think that would"
2119740,2131260," would make way more sense uh right and here we can say red uh green like red green uh blue there we go"
2131260,2139260," and there we go right so this is uh right so this is a vertical layout this is a vertical layout"
2139260,2145820," uh right and if i change the orientation of the layout right so it becomes a horizontal one and you can"
2145820,2152220," literally see uh what i was talking about right you can literally see all of that isn't that cool"
2152220,2155740," right so i think that's pretty freaking cool you can literally see all that choice"
2155740,2167020," uh so okay we've got that but the the thing is that to change the order to change the order of these"
2167020,2173740," things you have to really like you cannot change the order like it by changing the lines right because"
2173740,2180140," if i put green last it's still going to be in the middle because of the index so you also have to"
2180140,2187740," change the index like that which basically means you have to like yeah managing the order of this entire"
2187740,2194940," thing is really really finicky and i don't really like it like that so what i'm thinking is that maybe"
2194940,2200460," what we have to do we have to keep track of that index inside of the layout"
2200460,2207980," right so we we don't really want to manage the indices in here so the whole point of the of this"
2207980,2215660," layout system is to not manage anything right we don't want to manage anything right so let's actually"
2215660,2222860," make the layout keep track of those goddamn indices right so essentially what i want to do is i want"
2222860,2232380," to say okay i now is part of the layout right and it's initially going to be zero so and here is going"
2232380,2242860," to be just i and here this is the i and here this is the i and then i'm going to increment the i right so"
2242860,2253740," essentially by calling the layout slot you increment its internal i you increment its internal i uh and"
2253740,2261100," then it always gives you the next slot it always gives you the next slot you know what i mean right"
2261100,2265820," so and essentially here if we try to recompile this entire thing uh right we don't have to provide this"
2265820,2271180," entire stuff right so we always say layout slot and then next layout slot and next layout slot and"
2271180,2278540," so on and so forth and uh something went wrong and this is because we do not reset the index on the"
2278540,2285020," next iteration right because essentially it will keep incrementing that i on the next iteration so one of"
2285020,2289740," the things we can do in here i suppose we can just move this entire thing inside of the loop right because"
2289740,2295900," it's such a lightweight object recreating such lightweight object on each iteration that costs"
2295900,2302700," nothing uh right and that will effectively reset i anyway right that makes sense actually here right"
2302700,2308860," so there we go so uh that seems to be working and what's cool now the order of the widgets it"
2308860,2314140," is determined by the order of these things i can say okay i want red to be last now i just moved it to"
2314140,2321900," the last one uh right and now it's it's the last one okay that's kind of cool isn't it i think i think"
2321900,2330060," that's pretty cool right i think that's pretty cool uh all right so you can now change the order in here"
2330060,2338460," and then here you can do actually a vertical one uh and that seems to be working uh it seems to be at"
2338460,2344700," working so all right all right all right that sounds interesting so one of the things i want"
2344700,2350140," to be able to do actually we want to have a nested choice right we want to have a nested choice because"
2350140,2355420," if we take a look at the uh the original thing that we have in here we have a lot of nested stuff"
2355420,2362460," right so here obviously this is a horizontal layout right so with three elements and then the third"
2362460,2368700," elements is actually split into like three elements in here and then within this thing we have even more"
2368700,2374700," split elements so as you can see we want to have like a complicated nested stuff right complicated and"
2374700,2383580," nested stuff uh he used i didn't really speak german i really apologize i just like the word scheisse"
2383580,2390540," i think it's the most beautiful word in any language i've ever heard so yeah thank you thank you germans for"
2390540,2396140," invented such a beautiful beautiful word i absolutely i unironically love this word i don't know why"
2396140,2400700," out of all of the words i love i love the word scheisse"
2400700,2412300," all right the most beautiful swear word yeah that's true it's the most beautiful swear word"
2412300,2418540," all right so and how can we do all of that all right how can we do all of that"
2419900,2425260," interestingly right we can do some some cool shit okay so we have a layout root"
2425260,2433740," right uh we have a layout root and we can say okay uh we can have the sort of like a third layout"
2433740,2440460," right the third layout is going to be uh it's going to have the orientation of a vertical one right"
2441020,2448220," and it's a rectangle freaking neighbors are drilling shit in"
2448220,2457660," it's a fucking midnight almost a midnight and my neighbors are about to drill some"
2457660,2462380," shit"
2462380,2467020," what the fuck is wrong with these people i have no anyway so"
2467020,2472860," neighbors drilling shits yeah exactly"
2472860,2480300," oh it's a fry it's it's a friday night yeah it's a friday friday night okay i forgot"
2480940,2483900," recreational drilling recreational drilling"
2483900,2486780," um so"
2486780,2497020," anyways so uh and the rectangle what's going to be the rectangle can we literally say okay use the layout"
2497020,2506700," slot of the root so we take out the slot of the root and we set it as the rectangle of another sub layout"
2507420,2512700," and because of that the sub layout sort of naturally work out by themselves"
2512700,2518220," you know what i mean uh right so here we can say we're gonna have three of these things in here so"
2518220,2522860," uh so a third let's actually call it panel right so this is the panel"
2523980,2530380," all right all right and in here i want to say okay so this is the panel uh panel this is a green uh and"
2530380,2539980," here we can have uh yellow and magenta right so and we are actually uh rendering widgets for the panel"
2539980,2545340," suddenly out right for the panel suddenly out uh this is not what the point is actually going to different"
2545340,2551980," thing uh there is no magenta is there purple purple uh i don't know what kind of colors do we have"
2551980,2561260," in raylib it works out look at that that actually worked out what the uh so yeah that's basically"
2561260,2569660," the layout system that i wanted to to implement uh right so there's a question how can i access the"
2569660,2576780," discord uh channels i subbed just a few minutes ago you have to connect your discord and twitch account"
2576780,2582460," together right i think in the discord settings there is a way to connect your twitch account"
2582460,2587340," uh if you're still not sure how to do that just google it up there are tutorials how to do that and"
2587340,2592860," as soon as you connect uh your twitch account to your discord account it will automatically grant you"
2592860,2601660," uh the the permission to talk in a discord server so that's how basically it works right um all right so i"
2601660,2605100," i want to be able to actually resize this entire thing you know what i mean i want to be able to"
2605100,2611980," resize this into i think so i think i need to set this entire stuff resizable uh let me see so flag window"
2611980,2618540," uh resizable and i think it's not going to even work yeah okay as you can see this doesn't update well"
2619580,2628540," look how it's look how the yellow stripe is twerking yeah it is okay um so i suppose we actually have to"
2628540,2635980," set not the original width and height in the root layout but rather the actual width and height of the"
2635980,2641580," window right the actual width and height of the window so uh how do we get the width and height i"
2641580,2647420," remember it was something like get yeah get render width and get render height or something like that i think"
2647420,2657020," it was something like this uh let it go and uh we can just do like this maybe you can probably can i put"
2657020,2665180," that stuff in here uh i think you should be able to put this stuff in here i think it will work out"
2665180,2672380," yeah it will work out like after programming in jive for for a little bit i'm still under the impression"
2672380,2679340," that you can't put uh non-constant expressions in here because jai right now it is right now by the"
2679340,2684220," way in future it's probably not going to be like that but right now in its current state it doesn't"
2684220,2690380," allow you to have a runtime expressions in compile time expressions like this in here uh right and you"
2690380,2696860," have to always work around that by actually saving that to a variable right and this is not because it's how"
2696860,2702780," it was designed this is because this is how it is implemented right now so it's in a transitional"
2702780,2707660," state so it's easier to make it like that right and because of that i developed this like sort of like"
2707660,2713180," habit uh thinking that oh i need to pull all of these like non-constant things in a separate variable"
2713180,2720620," or something but here this is a c i'm still looking forward when i will finally be able to just put"
2720620,2728220," whatever in this place sng right but it's not implemented yet i'm sure that they don't allow"
2728220,2735580," that yet well maybe because it's not a high priority right so right so this kind of stuff is probably not"
2735580,2743260," really super important compared to other problems john is trying to solve in the language right so because"
2743260,2748540," john as far as i know trying to solve like very complicated fundamental problem with those language"
2748540,2755100," and being able to just like put this kind of stuff in uh you know const literals it's not that"
2755100,2761580," fundamental and you can always work around that it's not a show stopper right just because you can't do"
2761580,2766220," that it doesn't make the language unusable right it's just like it's minor inconvenience that will"
2766220,2771500," eventually be fixed right so this is sort of like the um you know the the general approach within the"
2771500,2777100," language right so this kind of thing they usually has like less priority and again the language isn't finished"
2777100,2784700," right so uh we're not allowed to criticize it so anyway uh right so this entire thing works and that's"
2784700,2794540," pretty cool uh but i don't really like how inconvenient that is i don't really like the fact i don't really"
2794540,2802380," like the fact that i have to come up with the name for these panels and stuff like that like how do you call"
2802940,2811020," uh the third panel in here does it even have the name should it have the name like i don't really like"
2811020,2818700," that like i have to like create a separate freaking variable uh just to be able to like subdivide the"
2818700,2825340," layout this is not like a convenient shise in the chat already says inconvenience"
2827020,2834780," so we we need to do something about that right so what we can do we can maybe turn that into"
2834780,2845020," into a stack some sort of a stack uh but turning that into a stack will require you to"
2845020,2851980," maybe allocate dynamic memory and doing dynamic memory in here is not particularly like a pleasant thing"
2853340,2858540," all right you know i've got an idea i'm gonna do a small break i'm gonna make a cup of tea while i'm"
2858540,2863180," making a cup of tea i'm also gonna think like how we're gonna resolve this entire problem and i'm"
2863180,2869180," gonna come back with a cup of tea i'm gonna solve that shy set together how about that all right let's"
2869180,2877580," make some break um all right so uh let's try and introduce the stack how about that so before we"
2877580,2885260," introduce the stack i kind of want to replicate the look of the ui as it was in the original application"
2885260,2890220," so to speak right in this one because in this one there is a little bit of a padding between like a top"
2890860,2897180," uh like and top and at the bottom right so there is a little bit of a padding and i put these elements"
2897180,2903980," within that padding uh right so i kind of want to replicate that so what if we had uh something like"
2903980,2911660," size t padding is going to be 100 of these things uh and it's going to be top and bottom so that means"
2911660,2916060," in terms of y it's going to be equal to padding and in terms of height it's going to be minus"
2916620,2922300," padding but it's twice of the padding right so it's twice of the padding and let me rebuild the"
2922300,2928060," entire thing emacs come on you can do that all right so this is what i was talking about right as"
2928060,2933500," you can see there is this padding but it's kind of i don't like this ui by the way"
2933500,2943500," can you see anything can you click anything or anything i kind of don't like this pixel stuff"
2943500,2952780," it's probably because of the because of how we round things all right so what if we don't floor"
2952780,2959980," them because here we're basically flooring them we're truncating them and in case of the positive"
2959980,2966220," uh values it's basically flooring them uh we can try to do the following thing we can try to seal them"
2966220,2973180," instead sylph right so let's actually do sylph and i wonder if it's going to make this stuff a little"
2973180,2981020," bit better so yeah so they kind of they kind of overlap a little bit now i think but you can't see"
2981020,2986940," that anyway because it's just like one pixel overlap but yeah we're basically taking a seal of it instead"
2986940,2993100," of the floor and they are just like you know um yeah they're flesh with each other is that how you"
2993100,2999580," say that in english i don't speak english i'm sorry i'm trying i'm trying to speak english for the last"
2999580,3006620," 10 years and i still suck at it because i never been in an actual english speaking environment right so"
3006620,3010940," yeah all the practice i had is from the internet"
3010940,3022620," all right so yeah so the problem with this padding is that it's like always the same regardless of the"
3022620,3028940," size of the window which results in this kind of situation which is kind of fun so one of the things"
3028940,3036380," we can do we can actually make the padding a function of the of the height so to speak"
3036780,3041580," well i mean it depends you know what i mean so we can take height and we take a fraction of the"
3041580,3048380," height uh maybe it's going to be one hundredth of the height uh does it look good does it look okay so"
3048380,3057340," it's uh right so what we have to do we have to take oh so yeah i need the height of the window which"
3057340,3065580," means that i kind of want to factor out uh the height into a separate variable in here all right and"
3065580,3071900," since i already factored it out maybe i can do that with the width as well right so let's actually do"
3071900,3077020," that with width as well and in here maybe this has to be float and still i'm already starting to use"
3077020,3084060," floats maybe this stuff also going to be full right so floats infected everything floats infected everything"
3084060,3090940," so that's basically what happened uh all right so it's yeah so this stuff kind of worked but i suppose"
3090940,3100620," this thing has to be a little bit bigger uh there we go now this padding is a fraction of the height"
3100620,3106780," right so it becomes bigger or smaller depending on the height of this entire thing isn't it cool"
3106780,3112940," i think that's pretty cool so this is adaptive ui without css and javascript"
3113580,3121820," holy can your shitty web do that i don't think so mate uh nobody needs your web web is dead"
3121820,3130860," i don't know what the is wrong with me but anyway uh so let me see"
3131820,3138300," uh that that looks okay maybe maybe i would say something like uh 15"
3140140,3150460," uh yeah 15 that's actually that looks a good year that looks a good year all right so let's introduce"
3150460,3157260," the stack finally right so let's introduce the stack uh people from web absolutely love"
3157260,3161740," the word stack i'm not even sure that they know what that word originally meant"
3165020,3173100," right so actually this is an interesting question do web developers know uh about such data structure as"
3173100,3179100," stack right do they know this this is a data structure where you can put elements on top"
3179100,3183660," and you can only pull off the elements like pop elements off of the stack or they only heard that"
3183660,3188780," word in the context of the technology and the latest stickers for their macbooks or"
3191900,3196380," actually nobody actually checked that i think somebody should actually go ahead and try to"
3196380,3200220," check whether the web developers actually heard of the stack data structure"
3200220,3207500," because i feel like they never heard about such word outside of the context of the stickers on the"
3207500,3215740," macbooks uh so yeah anyways so i i think we got some subs i think we got some sub thank you so much"
3215740,3220380," a moldy soul for gifting a one-tier sub to the community thank you thank you thank you"
3221660,3226780," uh as a web dev i can confirm we're on the stack of those garbage linkedin posts"
3226780,3233180," i feel you yeah i feel you to be fair how often do you need like a stack data structure"
3233180,3240940," how often do you need it it's just like even if you need it you usually need it"
3240940,3250140," in the cases where you can just do recursive thing so not very often you go and just like aha i need this"
3250140,3256380," stack data structure that we learned in university in clrs uh course no you never go like that it's just"
3256380,3260940," like usually oh it's some sort of like recursive algorithm or something it's just like whatever"
3260940,3268620," usually right so it's quite rare like in actual like production programming uh you really need stack"
3268620,3274540," regardless of your area of expertise whether it's web or something else uh right"
3277500,3287260," so yeah anyways anyways anyways anyways anyways anyways so let's implement the stack"
3287260,3294940," uh what i'm going to do like let's create like literally data structure right so it's going to be"
3294940,3301260," layout uh stack and i'm not really sure how to exactly to organize the stack but let's assume that the"
3301260,3308700," whole stack is going to be a dynamic array right so and how would i do i design dynamic arrays yeah"
3308700,3315020," right so my dynamic arrays usually have three fields uh the first field is items which it points at the"
3315020,3321820," beginning of the items in dynamic memory so this is going to be basically the array of layouts right"
3321820,3328700," so we used to have just a single layout now we have an array of them right now we have an array of this"
3328700,3337500," layouts on top of that we have the count how many items we have on in the stack and uh then uh we also"
3337500,3342300," have the capacity how many elements we allocated right so because we're working with dynamic memory"
3342300,3347900," which is kind of not something that i want to do in a event loop right"
3347900,3355420," right so it kind of reminds me because we're going to be doing like a malloc"
3356220,3361900," we're effectively going to be calling malloc in a loop do you guys remember that loop uh that meme"
3361900,3368140," of uh of a man on on the drums and it's just like when i forgot to free in the in the in the loop"
3368140,3376860," you know you know what i mean right that meme so this is basically where we're creating this situation"
3377500,3383500," effectively so it's going to be fun uh we'll see how it goes"
3383500,3393580," um all right so i need to bring the the macro that allows me to push into the dynamic arrays so"
3393580,3400460," the append uh it's it should be available in n.h the append uh that that background right so it's a very"
3400460,3405260," simple macro that allows me to push into dynamic arrays i'm going to just bring it in here and that"
3405260,3412460," effect will allow me to push into dynamic arrays so what i'm thinking is that uh maybe uh what we're"
3412460,3419100," going to have we're going to have layout stack and you're going to basically push into the layout stack"
3419100,3423580," and what we're going to be pushing into the layout stack so first of all we're going to accept the"
3423580,3428940," pointer into the layout stack into which we're pushing things and i suppose we're going to be"
3428940,3433740," accepting the whole layout do we want to accept the whole layout or do we want to"
3433740,3444540," actually accept the parameters so where is the layout layout uh here it is so suppose one of the things we"
3444540,3452540," want to be able to accept is the orientation rectangle and account right these three things are super"
3452540,3458380," important orientation rectangle and account uh all right so this is the three things that are super"
3458380,3466540," important for us so we're going to be accepting layout rectangle uh all right the layout orientation"
3466540,3473420," right layout orientation orient and uh the the count how many elements we want to have in here right so this"
3473420,3479100," is the count and effectively what we're going to be doing in here i suppose is just constructing the layout"
3479740,3486620," uh out of these things right so the orientation is orientation uh rectangle"
3486620,3496380," is rectangle and count is count maybe i should create a constructor uh a constructor for the layout"
3496380,3500780," you know what i mean right because it will make it actually a little bit easier to add more parameters"
3500780,3506140," that require any initialization for the layout right essentially if i do something like uh"
3506940,3514140," new layout or maybe make layout and i'm going to accept all of these things in here layout rectangle correct"
3514140,3525900," then um layout orient right so how is it going to help us to make the code more maintainable in case if"
3525900,3531180," we add a new field right let's imagine that we're going to add another field in here i don't know caller"
3531180,3536700," right and that thing will require initialization so the only thing we'll have to do is basically add"
3536700,3542220," the caller in here and that will break all of the calls to this function forcing you going through"
3542220,3548620," them and providing the caller so and we have to do that because c is kind of a math language right i think"
3548620,3554300," maybe in a better language you wouldn't have to do that right so but to make the c compiler to warn you"
3554300,3560380," that you forgot to initialize one of the fields uh right this is one of the things we can do right and"
3560380,3565260," it kind of makes sense does it make sense i think it makes sense right because if you add a new field and"
3565260,3570540," you may quite easily forget to initialize that field right so then you have to search for all of the places"
3570540,3575100," where you need to initialize all of that and that might not be obvious and this is specifically for c"
3575100,3581900," programming language right so this is a specifically c issue right so in other programming languages you may not"
3581900,3584860," want to do this kind of stuff right it just like depends very much"
3584860,3594060," uh it is what it is and it isn't what it isn't is it not i think it is the missa knows where it is"
3594060,3601420," because it knows where it isn't uh all right so we need to initialize the count and uh i uh and i"
3601420,3607180," we can keep it just zero initialize right so we can just keep the i zero initialize because nobody gives"
3607180,3616780," a chance uh all right so and in here uh what we can do we can effectively we can effectively just"
3616780,3622620," yeah we can just like make layout uh out of these things orient"
3622620,3628780," rect because if i add a new field in here it will break in here which means that i will be able to quite"
3628780,3633020," easily break it in here by adding additional parameter if it's going to be a color and so on"
3633020,3637660," and so forth so it it basically maintains the chain right it basically maintains the chain"
3637660,3643580," and then i can do da append and i'm going to provide ls and i'm going to just put l in here"
3643580,3651180," uh right might as well just inline this entire thing but i feel like this is a little bit more readable"
3651180,3659980," right because this is the thing right you no matter if what you do whether you split this into two lines"
3659980,3665900," or you put that into a single line you still should interpret it as two actions"
3665900,3673580," in case of this single expression you have to read the actions inside out first of all with this kind"
3673580,3679340," of style you don't even know where the actions begin so they begin roughly inside of the expression and"
3679340,3685580," then you have to read the expression outwards to understand the sequence of instructions of actions"
3685580,3690700," if you do it like that you just have to read like top to bottom which makes it kind of easier to read"
3690700,3697980," i think but personally for me right so for other people it might be maybe uh maybe different right"
3697980,3702620," so and of course for this kind of example it's a very simple expression but imagine more complicated expression"
3702620,3709900," so and this is one of the problems so for me um when i see like a lisp style of programming right"
3709900,3716380," where everything is a single huge expression because you can't really make out where the actual"
3716380,3721580," actions begin because you have to read the expression inside out and you don't even know from which"
3721580,3726860," from which point inside out you have to start reading you know what i mean right i'm not sure"
3726860,3732380," if i'm the only one who has this kind of problems but when i read this like a purely functional expression"
3732380,3738540," based stuff it's really difficult for me because you have to read them inside out and it's not clear"
3738540,3745500," from like where exactly does it even start inside out uh you know what i mean uh right"
3746380,3754540," and if you just unfold it into imperative think you just have to read it top to bottom and that's"
3754540,3758380," it you don't even have to think like how you have to read it's just like a very straightforward"
3758380,3766380," uh direction of reading so maybe it's something wrong with my brain but i've been doing pure functional"
3766380,3773900," programming for basically 10 years i know a thing or two about functional programming i created one of"
3773900,3780540," the uh one of the probably most popular functional programming tutorials on youtube just think about"
3780540,3787980," that and also my purely functional programming algorithm was cited in a scientific paper about"
3787980,3795500," making pure functional programming faster so here's my credentials i know a thing or two about pure"
3795500,3801740," functional programming expression based programming so and this kind of stuff comes from from me right"
3801740,3808140," after all these years and all this stuff that i've done i kind of think imperative programming is easy to read"
3808140,3815260," hate me as much as you want but that's just my opinion after so many years of doing this kind of"
3815260,3825260," shit sorry again i might be wrong but i've created a lot of cool tutorials about haskell and functional"
3825260,3830780," programming and also my work being cited in a scientific paper i don't know maybe i know a thing or two"
3830780,3834460," maybe not well maybe all of that is bullsh*"
3840300,3852860," anyways uh so let's continue so we push some stuff all right and i kind of want to create the version of"
3852860,3862620," the layout slot but for layout stack so which basically proxies it to the layout on the top"
3865820,3874220," so yeah essentially let's actually do something like this layout rect uh layout stack slot and we of"
3874220,3882140," course going to be taking a layout stack ls and let me take a look at the lay uh layout slot yeah there"
3882140,3890140," we go so and in here basically we have to take the top element the top element is basically items uh ls count"
3891340,3899020," minus one and uh we can just say layout uh slot and we have to pass it by a point and we just return that"
3899020,3905660," so but this is a very dangerous thing what if this entire thing is empty so one of the things we probably"
3905660,3913100," have to do we have to assert that the count is uh greater than zero there we go so essentially this thing"
3913100,3918140," allows us to push new layouts right new layouts"
3918140,3927980," and then uh right and then just basically draw the slots out of this entire thing yeah basically"
3927980,3931660," draw the slots out of this entire thing but one of the things i want to be able to do i want to be able"
3931660,3940380," to say okay take a slot out of the inner layout right take a slot out of the inner layout and push it into"
3941100,3947740," uh as the next layout so this is one of the things i can do so i should be able to already do that i"
3947740,3953100," think i should be able to already do that so let's actually give it a try so essentially essentially"
3953100,3961820," instead of layout root we may have layout stack um i have the following idea so let's say layout"
3961820,3968220," stack this is ls and we're going to initialize it with zero so the first thing we're going to be doing"
3968220,3972140," in here right the first thing we're going to be doing in here we're going to be pushing layout"
3972140,3980300," stack push all right so let me actually copy paste this into that thing so we're going to be pushing uh"
3980300,3986860," right so we give this thing and we have a horizontal one so it's going to be low horse and the rectangle"
3986860,3992060," that we need to put in here is this rectangle maybe we need to create a constructor for the rectangle"
3993020,4002620," but uh the rectangles fields do not change very often uh make layout erect we can we can try to do"
4002620,4008220," something like that i mean why not let's let's just quickly create that sure let's just quickly create"
4008220,4023500," that uh layout erect make layout erect uh float x float y float w float h and let's just uh do this kind of"
4023500,4031180," stuff so this is going to be zero or x uh y w"
4031180,4039420," h and return r right so we just created this entire thing"
4039420,4049500," uh-huh so we can actually put it in here all right and then we can say everything is rendered within"
4051500,4058940," this block at the end of which we probably want to pop an element out of that uh stack"
4058940,4066380," right so we basically pushed la out onto the stack we rendered some stuff in here and we want to pop the"
4066380,4072380," element out of that i think we didn't create the pop uh right so let's actually quickly create that"
4072380,4079580," so we're going to accept the layout stack uh ls and in here you cannot pop a thing uh if it's empty"
4079580,4085180," so one of the things we probably have to check is if count is greater than zero if it is greater than"
4085180,4091260," zero all right so we're just going to increment it by one and there go we basically popped the thing"
4091260,4098140," out of it uh right there we go so and the reason why i put layout outside of the loop is that i expect"
4098140,4105900," that once we reach the end of the iteration it's going to be empty right so effectively you push the thing"
4105900,4113740," for every push into the layout stack i expect to have a corresponding pop that's what they expect"
4113740,4122060," right for every push i expect the corresponding ball so that means uh the the layout stack is not going"
4122060,4128620," to allocate more memory than needed so it's not going to start leaking memory like crazy all over"
4128620,4133500," the place there is another interesting thing we can put in here we can basically assert that at the"
4133500,4139180," end of this iteration uh the layout stack the count for the layout stack is going to be zero"
4139180,4144540," so and if it's not that means we forgot a pop somewhere and that could leak"
4149500,4159020," you know what i mean right so that's very important"
4159020,4168140," um so because of that at the end of the iteration i want to kind of uh assert that we don't have some"
4168140,4172860," extra layout things because the next iteration we're going to push more and more and more and"
4173580,4181660," we ran out of memory right uh so yes we use using cover a freaking this"
4181660,4191580," okay so and when i'm doing like a widget right so what i'm doing is i'm doing layout stack slot on ls"
4191580,4201020," layout stack slot on ls right uh and then i need to push another sub thing right so that means i need to"
4202460,4210620," do another layout stack push layout start push but then instead of make layout rect"
4210620,4220060," i just have to use this kind of thing right so you see i'm taking the slot out of this thing"
4220060,4227820," and i'm using it as the rectangle for the next layout uh but this one has to like use the vert from here"
4227820,4232300," right uh and then the count is going to be three it's already three in here so we"
4232300,4238540," we can just like remove this entire thing uh right and we need to have a corresponding pop for this thing"
4238540,4239340," right"
4239340,4246060," and similarly here uh i have to use ls"
4246060,4253180," let's put it like this stack slot"
4254940,4263020," that looks cool isn't it right now i don't have to manage like several layout variables come up"
4263020,4270140," for the names for them or anything i just have a single layout stack i just push something on the layout"
4270140,4277980," stack uh and pop out of it and that's it that's that's the whole thing right this is actually kind of"
4277980,4283820," cool wait a second is it going to work i wonder uh all right so there's some stuff in here silv uh"
4283820,4288940," implicit declaration so let's actually include some math i wonder why i didn't complain about implicit"
4288940,4294460," declaration of seal before that's kind of weird okay diapend doesn't have a real lock this is probably"
4294460,4300700," because we have to do std leap right that's probably what it wants do we have anything else make layout erect"
4300700,4307740," uh maybe that's what i wanted actually in here what else do we want oh yeah for the pops we have to"
4307740,4317660," provide uh the ls of course uh anything else uh it's a dot it works look at that"
4319420,4326780," isn't that beautiful that that works so and what that means by the way that means we can subdivide"
4326780,4334460," that shade even further right who said i can't just okay uh take green right and subdivide this thing"
4334460,4340140," even further uh right so this one is going to be is going to have two but it's going to be horizontal"
4340140,4346300," again so it's going to be horse uh and here we're going to have like purple or whatnot so there's going"
4346300,4351980," to be two of them there we go so now we subdivide it even further and we can make it more and more"
4351980,4358780," and more complicated like we can keep subdividing this ship we can just keep subdividing it so"
4358780,4368700," isn't it cool i think it's pretty cool uh for for the yellow one uh so here we did the horizontal one"
4369260,4374780," uh all right we can subdivide it even further but this time it's going to be three uh all right so"
4374780,4385020," so it's going to be yellow white uh green something like that all right so there we go"
4385020,4390380," so this is kind of like the stuff that we can have in here and those are going to be widgets that"
4390380,4396540," you can interact with right so this those could be widgets that you can interact with we can even"
4396540,4402540," make them kind of interactable if you know what i mean right so essentially when we are rendering the"
4402540,4409260," widgets we can quite easily check we can quite easily check whether the mouse position is within"
4409260,4415020," the rectangle and we can highlight this widget so you can clearly see that you can interact with this"
4415020,4422540," kind of stuff uh right so let me open the raylib uh thingy so this is going to be a raylib include uh"
4422540,4431580," raylib get mouse yeah there we go so there is a get mouse position uh right um so get mouse position"
4431580,4436460," you know what would be cool so we have this position which is vector two"
4436460,4444380," uh position it would be kind of cool if we had a function that takes the position and checks whether it's"
4444380,4451580," within the rectangle and as far as i know arraylib had a structure had its own rectangle which is kind of"
4451580,4458620," similar to to our rectangle right our definition of the rectangle is this thing right so we created our"
4458620,4466620," own rectangle and here is the raylibs rectangle is there any way to check that we are inside the rectangle"
4466620,4475980," let's actually see rectangle uh is there any so there is a math uh rectangle okay so there is nothing related"
4475980,4483020," to rectangle in here maybe there is something in here so rectangle four components rectangle uh-huh so"
4483020,4487580," font we don't care about the fonts set shape for the texture draw rectangle i don't care about drawing"
4487580,4496460," rectangle i only care about checking within uh the rectangle check collisions wait wait check collision"
4496460,4505180," point rect check if point isn't this is precisely what we need right if we actually used the raylib"
4505180,4512860," rectangle right if we actually use the raylib rectangle we could have done something like uh r"
4516700,4525820," like this if check collision if it's inside of this thing we could have replaced color with something"
4525820,4531820," else we could have replaced the color with something else okay can we make the color brighter or something"
4531820,4537980," like that is there something that can modify the color right so uh let me find functions that return the"
4537980,4546780," color there's no such thing that's oh this is because they start with with some prefix right yeah rl okay"
4546780,4555260," rl api cola okay so this is loading the image i don't care about that fade okay fade is there something else"
4555260,4560700," uh tint we can change the t we can change okay so this is actually going to get color with brightness"
4560700,4567260," correction so this is something that we probably need in here um all right so and essentially what we could"
4567260,4577180," have done is just took the color and maybe made it brighter twice as much brighter or something like"
4577180,4586300," that right if we just used if we just used the rectangles from raylib one of the things we can do we can just"
4586300,4600140," convert them right we can say something like uh rectangle uh rr or or or or or or or or or or i'm sorry"
4600140,4607900," i'm ready okay so it's one and a half of an hour so and i had my second cup of tea so i'm just going crazy"
4607900,4615340," already all right all right all right so we could have done something like this and do we have a draw"
4615340,4620700," rectangle that accepts the rectangle of the array leap i'm pretty sure there should be something like"
4620700,4627020," that there should be something like that bro uh yeah okay so it's literally called get a draw rectangle"
4627020,4636940," rack uh so we can do something like this so this is so yeah and the question is do i want to switch"
4636940,4645020," completely to the um to the ray leaves rectangle so i don't really want to depend too much on ray"
4645020,4651740," leap to be fair right i want a really to be one of the graphical backends that our library can use"
4651740,4655820," but if you don't want to use ray leap you would be able to use something else right so we're going to"
4655820,4662380," define like a minimum api that the backend must implement like an ability to draw rectangles and"
4662380,4667980," ability to draw lines and stuff like that uh right and just for ray leap we're going to forward the"
4667980,4673660," corresponding things and if you want to forward it to something else you you're uh you are free to do"
4673660,4679820," that right so that will allow you to for example render in the terminal if you want to uh right so"
4679820,4686060," because of that i'm kind of hesitant on actually just like removing layout wrecked so but we'll see we'll"
4686060,4696620," see uh so yes so you can this and yeah one of the maybe targets rendering targets as the chat says"
4696620,4702460," could be olive c right it just like depends i don't want to sort of like vendor lock you on the ray leap"
4702460,4714620," all right so even though i have to admit that kind of like array leap has this tendency to try replace"
4714620,4721740," literally everything so you kind of like find yourself being locked on ray leap whether you want it or not"
4721740,4729740," and it's kind of gives me like similar vibes to qt qt library kind of does the similar thing right you know"
4729740,4734860," what i mean it's just like it grows and expands and definitely and it tries to replace everything"
4734860,4738060," right so if you've never programmed in qt you probably don't know what the i'm talking about"
4738060,4742380," but if you have experience with qt you know precisely what i'm talking about as soon as you"
4742380,4747740," start using qt it's kind of similar to apple products to be fair it's just like a closed garden"
4747740,4752700," right as soon as you start using one thing oh it's very convenient to use it with this another thing and"
4752700,4757980," with that thing you just find yourself being just like sucked into this like a quicksand"
4757980,4763740," and kind of really was cool don't get me work it's cool but it gives off that slight"
4763740,4769580," vibe similar to apple products and qt and stuff like that it's just kind of"
4769580,4775820," see what you're doing in here i see what you're doing i've been developing for too long anyway"
4779500,4784940," anyways um really was awesome don't get don't get me wrong it's a very cool library i really recommend"
4784940,4796380," what's the same um anyways so what do we have in here uh yeah this is what i wanted to do i just"
4796380,4805580," wanted to basically react on the uh on on the hover over and yeah yeah you can end but it just makes them"
4805580,4812940," white and this is this is not what i want is that it's one of this situation when it has to be"
4812940,4821900," less than one it's probably one of those situations oh yeah so it has to be less than one okay yeah so"
4821900,4828940," as you can see you can interact with that yeah yeah we have a simple ui yay isn't that cool i think"
4828940,4835100," that's pretty cool all right that's that's pretty awesome so by the way so there is a reason why i was"
4835100,4841100," using like different colors now since we have a highlight i can actually use the same colors"
4841100,4848380," right uh right so you won't tell that this yellow stripe is actually three elements until"
4848380,4853820," you try to interact with them now we can clearly see that the three well kind of uh so i think we have to"
4855340,4864300," make it even more bright right maybe 75 uh maybe 75 yeah there we go so now you can see that it's the"
4864300,4869820," three elements right uh and you can clearly see that this is one one and this is three because there is"
4869820,4874540," some sort of like a feedback without that feedback you would be never able to tell that it's a three"
4874540,4878620," separate thing so that's kind of important that's the importance of the feedback for the user"
4879740,4886940," so another thing that would actually signify that these are separate elements if we had some sort of a"
4886940,4895260," padding between them you know what i mean so maybe maybe we should add a little bit of a padding between"
4895260,4901020," them and you know what's cool is that we're getting all of that complications for free so the only thing we"
4901020,4906780," have to define in here is just like the structure of the layout how nested they are we just push a new"
4906780,4913180," thing we just pop the thing and so on and so forth and we can just hide all the complexity of figuring out"
4913180,4920780," the paddings and margins and stuff like that inside of uh functions like uh layout stack slot and so on"
4920780,4927420," and so forth right so that that's basically my goal right just to talk all of that complexity of like"
4927420,4932780," trying to do the pixel perfect like very sophisticated thing inside and they just like define the layout"
4932780,4936780," and it just does everything for you automatically so that's basically my goal and i think we're"
4936780,4946220," approaching it we're slowly approaching that thing so uh yeah is this beginning of the browser no i don't"
4946220,4951260," really want to over complicate this entire thing this is supposed to be just like a quick little thing"
4951260,4958540," for the deep learning framework right so we have a deep learning framework where you have ui components"
4958540,4964300," which lets you in inspect the model that you're training and essentially what i want to be able to"
4964300,4969740," do i want to be able to have a simple thing where you just take a pre-made components for different"
4969740,4975420," situations and just slap them on the screen in a particular fashion that's basically what i want and i"
4975420,4980700," i want uh anything more complicated than that right and because depending on the model you want to"
4980700,4986460," actually visualize slightly different things uh we don't try to make a super complicated application"
4986460,4991260," that is just basically contains everything no we just give you small pre-made components and it's up"
4991260,4996940," to you to combine them in whatever fashion you want right within the language and stuff like that so"
4996940,5002380," i don't think it has to be a browser uh right it has to be something super simple to just throw things"
5002380,5025500," together right uh this is electron can your electron resize so freaking easily without lagging or anything"
5025500,5030940," like that well it is lagging a little bit but this is because it's a 10 years old laptop and also i'm"
5030940,5037900," streaming on that laptop if you take any chromium like any chromium application and you try to resize"
5037900,5045420," it look look at the delay of resizing like you just resize it needs some time to recompute and only then"
5045420,5051820," it updates its layout this entire thing it's just like it resizes on the fly it just resizes on the fly"
5051820,5058780," and when i'm not streaming it's even faster so don't tell me this is electron this is not electron"
5058780,5064140," yeah it's a network latency yeah i forgot it's a network latency i'm sorry um"
5064140,5070140," electron lagging on your m1 macbook pro holy"
5070140,5076620," people are so got used to software being that they don't even notice that"
5079100,5087580," so uh i think i'm gonna i think i'm gonna push that to the to the repo yeah just a second chat uh just"
5087580,5093020," a second i'm gonna like literally push this thing right now to the repo"
5093020,5103340," like this so this is a like basically one file one single file that we implemented and one line added to"
5103340,5109100," the shell script that's it that's the whole framework right we need to organize a confer"
5109100,5115100," conference to actually announce that we made a new framework to the world right so literally one file"
5115100,5123900," so i'm gonna commit it right now and who has the ray leap on their machine build it on your machine run"
5123900,5132220," this thing and try to resize it and tell me that is not smooth just tell me that is not smooth it can be"
5132220,5139500," fucking smooth like butter holy shit that's the best butter you will ever experience in i'm sorry anyway"
5139500,5150780," so um add layout uh prototype right so and um yeah"
5150780,5159580," so and you can find the source code of this entire thing here in in the chat butter ui yeah this is"
5159580,5168540," actually kind of cool name for a ui library butter ui because it's going to be butter smooth yo finally"
5169500,5176140," um um so used to used to used to building right now yeah"
5176140,5187260," so it is not particularly smooth uh on my machine right now but this is the reasons there are reasons"
5187260,5196540," because it's because i'm also streaming"
5196540,5203340," super smooth so chat confirms super smooth here exactly"
5203340,5213420," exactly can you achieve the same shit with electron no you cannot don't even dare to compare that to"
5213420,5217820," electron please no all right"
5217820,5229740," uh so yes yes yes what it was then i want you to add the padding right i wanted to add a padding so"
5229740,5235660," let's go ahead and do that so i suppose uh one of the things we can do is basically say that padding is"
5235660,5242220," going to be part of the uh all the layouts right that's one of the things we can do in here right"
5242220,5248380," and how we're going to be using a padding right how are we going to be using the padding so my idea is"
5248380,5260620," my idea is we can effectively just allocate a slot right so here is the layout uh so basically the the rectangle"
5260620,5267020," within which we are allocating everything then we say uh please allocate the slot right so we allocate the"
5267020,5276060," slot like this so we allocated the slot and then we can try to maybe reduce the side of that slot like so"
5276060,5282060," according to the padding according to the padding or something like that or maybe half of a padding"
5282060,5288140," so when you allocate the second thing uh it is going the the actual distance between the thing is going"
5288140,5292620," to be the like the full padding or something like that we can try to do something like this so first you"
5292620,5299900," allocate this thing and then you just like shrink it according to the padding if you know what i mean"
5299900,5306700," right that's what we can try to do and maybe that will automatically give us the padding between the elements"
5308140,5316940," it's actually cool idea i think i think that's cool uh okay good so uh right so this is basically what we"
5316940,5326220," created right so this is basically what we created and after that uh i can say okay our x so we have to"
5326220,5330460," bring x to the right and y to the right so it's going to be plus"
5332140,5339260," um padding half of a padding and this one is going to be also half of a padding but in terms of w"
5339260,5347340," we actually subtract full padding right we subtract full padding and in terms of height we subtract full"
5347340,5353340," padding and we have to do the same on the second branch which kind of hints us that we have to do"
5353340,5360940," that maybe somewhere here right so here first of all we are allocating the slot right we're allocating the"
5360940,5367100," slot and then we are shrinking that slot according to the padding we want to happen there right so"
5367100,5372860," right now it's not going to change anything right because it's set to zero right so it is set to zero"
5372860,5380300," we need to update make layout and maybe accept this padding as a parameter in here and this is precisely"
5380300,5385900," why i created this function because now all of the places where we call this function are going to break"
5385900,5390860," which will initiate initiate the compiler assisted refactoring right so let's actually take a look"
5390860,5396300," at that well there we go so it's broken in here so that means we have to put padding in here but where"
5396300,5401420," we can get it we can get it from here and that breaks even more places so we go to these places and"
5401420,5408860," we are forced to actually do this stuff okay so we already have a padding and this padding is not"
5410060,5416380," the same as the padding that we just defined it's sort of like a frame let's literally call it frame"
5416380,5426700," then why not uh right so let me clear place padding frame all right and so here we have to provide the"
5426700,5432380," padding uh let's literally provide the padding and the padding is going to be let's say 10 pixels maybe it's"
5432380,5437100," also should depend on width or height but we'll see we'll see so let's go through the rest of the"
5437100,5442940," stuff so this is the padding uh this is the padding i also can't see don't worry about it so you can't"
5442940,5449580," see some of the code i also can't see it right i literally just like type it uh like blindly uh right"
5449580,5455180," i just pressed out the complete and i kind of hope that it was padding but i also can't see anything so"
5455180,5459660," if you want to see how it looks like for me it looks like this for me right i also can't see"
5459660,5466780," shit but they just like blind the type thing you know why because the compiler will tell me anywhere"
5466780,5469420," if i made the typo somewhere there so it doesn't matter there we go"
5469420,5475340," looks like shit but it works"
5481900,5491660," so um okay i see what's going on here so as you can see there's more padding between these things"
5491660,5497900," than between this so this is the this is one padding and here you have twice as much of padding here this"
5497900,5504620," is because like the more you nest the more it kind of uh god damn it you you can't god damn it"
5508220,5511820," god of fucking damn it mate god of fucking damn it"
5511820,5517020," it's kind of like a windows start menu now yeah"
5517020,5523980," uh so how can we"
5523980,5536460," i guess uh i feel like the thing that contributes to that if for example this thing didn't have the right"
5536460,5541420," padding if it didn't have the right padding it wouldn't contribute to that"
5541420,5548460," okay so i have a different idea on how to approach this entire stuff because i still want to kind of"
5548460,5556700," do that right so i just want to have the uniform padding between all of the elements regardless of"
5556700,5562380," their nestings you know what i mean right so it's kind of difficult to explain but i want this all of"
5562380,5567980," this uh padding to be universal right so literally the same thickness i think it's going to make it very"
5567980,5577820," satisfying uh but i'm thinking how to do that so we'll see so here's an idea uh what if we're gonna"
5577820,5587740," not do we're not gonna do the padding at the very beginning of the things right so essentially we say okay"
5587740,5593580," let me allocate three elements so this is going to be the first element and as you can see no padding in"
5593580,5600380," here right and no padding at the top and no padding at the bottom padding is only going to be between"
5600380,5610860," the elements like so right only between the elements and if something is vertical"
5610860,5618860," it's also going to be only between the elements in here and the elements in here which will result"
5618860,5626620," hopefully in a more universal uh you know padding between those things so it's not particularly"
5626620,5633980," padding it's more like spacing yeah spacing is actually better name so we need to introduce the"
5633980,5642220," spacing uh so and it only affects the things between the elements right gaps maybe gaps right so maybe gap"
5643260,5649500," um so in something gonna affect the thing between the elements and because of that it's gonna result"
5649500,5655820," probably in theory uh this is how i see that in universal thing like across all of the things"
5655820,5662060," regardless of how nasty they are i think so for example if i start uh you know splitting here uh"
5662060,5666940," vertically you're gonna end up with this yeah yeah okay so yeah i think it's gonna work i think it's"
5666940,5679660," gonna be universal yeah okay so let's go ahead and try to do that let's go ahead and try to do that"
5679660,5688780," how are we gonna be doing all that that's a good question uh so let me do padding a gap right so this is"
5688780,5697580," basically the gap uh this is the gap and where do we call this function uh this becomes a gap and where"
5697580,5704060," do we call this function we call this function in here this is the gap uh which means that we have"
5704060,5712460," to replace padding with gap three times if i remember correctly yeah actually four okay uh so let me try to"
5712460,5717660," recompile this entire thing and it complains about padding uh right so this is because it has to be gap"
5718780,5726860," what else okay so oh this one is interesting so because the way we apply the gap depends on the"
5726860,5733180," orientation so we cannot do universal thing anymore right so the cool thing with this padding approach"
5733180,5738140," is that they can slap it after the orientation and it's the same for both of the orientation but now"
5738140,5744540," uh yeah you have to do that like individually for each individual orientation fortunately or"
5744540,5753980," unfortunately i don't know right so if it's a horizontal so we can do if you are the very first"
5753980,5761340," element right if you are i uh equals zero right so this is basic i think we have effectively three"
5761340,5769020," cases in here right so let me see so this is the first case you basically just pad like this we can even"
5769020,5775900," offset the width by half of the padding right so we can just take a half of a padding in here uh right"
5775900,5784060," so if this is that we keep the x as it is but we take the width and we subtract half of the gap right"
5784060,5791980," it's not padding it's actually a gap uh right half of the gap and that's it in terms of y y stays the same"
5792620,5800220," uh it's only width right it is only width i don't see any like other channels right so the other thing"
5800220,5806940," is when you are in the middle right so and i suppose we can actually handle it last so the other case"
5806940,5812700," here is when you're the last one so when you're the last one it's kind of similar to be in the first one"
5812700,5823180," except you have set from the left rather than the right so let's do i uh greater or equal uh l count minus"
5823180,5836220," one yeah so this is basically the last one right so uh we can put something like first last middle yeah"
5836220,5845740," something like this so in this case we take our x and we add half of the gap right we just add half of"
5845740,5854620," the gap we keep y the same but width is going to be subtracted with the full gap so it's subtracted"
5854620,5860300," with the full gap because we have half of the gaps on both of the sides right so we have both of the sides"
5860300,5872060," oh it's a middle one so it means uh yeah it's a lot it's a middle one i confuse myself yeah it's it's a"
5872060,5879580," last it's it's a middle one it's a middle one uh all right so and the last one it's kind of similar to"
5879580,5888940," the middle one or x plus half of the gap but in terms of width we subtract half of the gap okay i guess"
5888940,5895580," that's it yeah that that's basically the case we can take a look at how it worked out if it worked"
5895580,5903980," out at all i think it worked out look at that yeah it worked out but i mean it's only for horizontal one"
5903980,5910380," but it worked out nonetheless right so the only thing we need to do is the vertical one uh right and i think"
5910380,5916940," for the vertical one we can basically use sort of like a the symmetrical rule right we can just invert"
5916940,5925260," instead of w use h right instead of wsh instead of x use y and that's it so and we implemented that for"
5925260,5931900," the horizontal thing and there you go right so and now we have a universal padding across all of them"
5931900,5935020," actually this is the universal padding across all of them"
5938620,5943020," that's actually pretty cool so"
5943020,5952060," yo yo what the but i think there is some sort of a problem in here um it kind of so"
5952060,5963020," the width of the last of the first and last one ends up being bigger being bigger than the middle ones"
5965900,5971740," by definition actually believe it or not by definition if you take a look at the definition"
5971740,5977660," right for the last one we subtract half of the gap and for the uh for the first one half of the gap and"
5977660,5983180," for the last one half of the gap but for the middle one we subtract the full gap so by definition the"
5983180,5987420," width of the first and last one are bigger than the middle ones"
5989580,5996460," so that's kind of important to to actually consider in my opinion right and uh yeah so one oh you can"
5996460,6005100," literally see that you can literally see how uh yeah if you actually shrink them uh you know enough"
6005100,6009340," you can literally see how first and last one are bigger than the middle one yeah that's precisely what"
6009340,6018460," i was talking about right so to it's kind of like not visible on such a scale right because the scale"
6018460,6023500," that we're going to be working that with is just like this one right that's the actual scale so maybe"
6023500,6028220," it doesn't matter but maybe it does matter who knows i don't really know"
6028220,6036300," so i wonder how easy it is to split even more it's actually so cool i really like that"
6036940,6042620," so at any point i can say okay i want to split this green one even more so i'm going to just pop"
6042620,6048460," stuff like this and i'm going to add another green in here and there we go so i actually split"
6048460,6052700," it or maybe i'm going to say okay no i don't want it to be horizontal and i'm going to make it"
6052700,6058300," vertical uh and there we go so this is the vertical one so that's that's how easy it is"
6058300,6063340," and then for the bottom one i can say okay i want to split it even further uh right so"
6065740,6072140," so this is going to be horizontal uh and this is something like this there we go"
6072140,6078140," uh what's interesting is that what if you don't provide you declare how many of these things you"
6078140,6083420," have in here right so here we declare how many things we have but what if we don't provide enough"
6083420,6087580," of these elements so one of the things is going to be yeah so one of them is going to be empty"
6088300,6094140," right so and it's never going to be this is actually kind of cool yeah this is actually kind"
6094140,6101900," of useful you just don't provide one of the things and yeah so you can skip some of them and it doesn't"
6101900,6106860," even interact because we never call widget on that right we never call widget on that"
6108540,6114380," so really who needs css like all of that was achieved without any css"
6114380,6121980," right what you need is just a turing complete language and an ability to place"
6121980,6132700," elements in absolute values right how cool would it be if css was just a simple small turing complete"
6132700,6137980," language and then all of these frameworks and layouts like flex boxes and some other"
6137980,6143820," shit were just frameworks on top of that very simple turing complete language and people will"
6143820,6148940," decide okay i don't like the flex box box approach because it's not modular enough or whatever the"
6148940,6153740," fuck where people come up with i don't know what that means yeah i'm gonna use that cool new approach"
6153740,6160140," block this whatever the fuck they say right so and they can fight with each other no that approach is"
6160140,6166380," better no that approach is better so and yeah but at the bottom it's gonna be like one simple turing"
6166380,6172860," complete language that just places thinking absolute values right and let's just let the web people do"
6172860,6178860," whatever the they want right so that would have been so much easier i think and what's here's an interesting"
6178860,6191660," thing uh the fact that html5 plus css3 is accidentally turing complete probably likely hints you that that's"
6191660,6198940," exactly what you want you want a freaking turing complete language right even the whole universe just"
6198940,6208620," screams at you brah you want a turing complete language just ah freaking universe like tells you here is"
6208620,6220140," the sign that's what you want also oh wait a second i think some some time ago is that still a thing"
6220140,6229260," there was a thing called jss is when people were doing styles with javascript how is that not another"
6229260,6235740," sign that you just want a freaking turing complete language like you have more than one sign that that's"
6235740,6240460," what you want and people are being completely oblivious to that they're just like no"
6240460,6245980," they wanted turing complete language that's what you want god damn it anyway"
6245980,6249740," i'm sorry"
6249740,6254860," cheers by the way i ran out of tea"
6263020,6269260," anyways uh what if you provide more elements than you declared i suppose it's gonna just crash uh with"
6269260,6274380," assertion yeah it just crashes with assertion because you're trying to push more elements than"
6274380,6280540," you declared and it kind of saves you from sort of it's sort of like a safeguard but that's the problem"
6283740,6289580," you don't really you don't really know where the fuck this happened right this is a huge reusability"
6289580,6295820," problem chat this is a huge usability problem right imagine that you have this monstrosity right"
6295820,6309020," uh imagine this piece of code looking at you right with its thousands of eyes saying be not afraid and it fails"
6309020,6316700," it fails somewhere and you don't really know where right so right so you probably basically forgot"
6316700,6324460," to uh to remove one of the elements but you don't know where i think this code must tell you where"
6324460,6333260," exactly you did a fucky walkie and potentially an oopsie doopsie how can we do that so to do that"
6333260,6341340," right i think we need to know uh the place where you called layout uh stack slot"
6342540,6350300," so one way you can do that actually you can pass the file path right where the file within which you"
6350300,6357580," call this entire thing and uh a line right where you call this uh like the line at which within that file"
6357580,6363180," you call this function right but you don't want to provide it on each individual line it's tedious"
6363180,6370620," right even though uh right so there is a special macros that allow you to just automatically grab the file"
6370620,6377100," path and line like so you don't want to pass this stuff every time right you don't want to pass this"
6377100,6381900," stuff every time so what we can do in here we can actually create a special macro we can define"
6381900,6388140," a macro layout stack slot where you just accept ls and here we can say this is sort of like"
6388140,6394620," implementation or maybe look because it has a location uh right and we're going to forward that code"
6394620,6400140," right we're going to forward that code uh there and for the file path we're going to provide the file"
6400140,6405980," and for the line we're going to provide the line so in here instead of assert instead of assert we're"
6405980,6413340," probably going to just use the regular if but it has to be inverted if uh count is uh less or equal"
6413340,6419180," than zero but i mean it's unsigned so it's equal zero all right so what i'm doing here we want to print"
6419180,6430940," something like um layout overflow right so error layout overflow right and we want to provide like s uh"
6430940,6437500," and d in here and we're going to provide file path and line in here and we're going to do like exit one"
6438380,6445180," so there we go so that thing should actually tell you where you potentially did an oopsie doopsie and"
6445180,6450620," fucky wacky but something oh yeah it has to be std error right so it didn't compile properly there we"
6450620,6457500," go so as you can see it tells you uh something like this wait i did that in the wrong place cat"
6457500,6462460," fucking damn it where did they do that um layout slot"
6462460,6468140," yeah"
6468140,6473020," i'm ah"
6473020,6481740," yeah it's the wrong place i it's supposed to do that in the layout"
6484620,6491660," so in this function uh in this function i was checking whether you're not yeah if you"
6491660,6497500," not uh under floor or something okay so i'm gonna fix it so but the idea is the same the idea is the"
6497500,6502380," same i just picked the wrong function because i'm already tired i'm streaming for two hours already so"
6502380,6508940," that's that's the reason you cut me some slack uh thank you so much microsoft nice nickname i really"
6508940,6514380," like your nickname for tier one subscription i thank you i thank you i thank you so scrap all of that"
6514380,6518860," shit but the technique is the same trust me the technique is the same you just have to apply it"
6518860,6527260," to a different function right uh i mean technically technically we still need to do that it's just like"
6527260,6536940," we have to uh forward the file path and line to here like layout slot right and the actual check"
6537500,6544780," has to happen within the layout slot instead of this assert uh right so and basically it has to be i"
6544780,6552220," uh is greater or equal to the the count right greater than equal to the count and then you just like"
6552220,6557580," exit like that but that means also you have to accept file path right because we have two layers"
6557580,6563660," of abstraction so the first layer is the layout itself and on top of the layout we build the stack of"
6563660,6569020," layouts so if we're going to introduce a new thing we have to penetrate two layers of obstructions right"
6569020,6574780," so that's quite important that's quite important uh the double penetrations or double penetration of the"
6574780,6580300," layers of abstraction is really really important with our architecture all right and then here i need"
6580300,6586540," we need to bring back the thing right so when i do this thing i need to be sure that the count"
6586540,6590140," is greater than zero right so it has to be an assert"
6590140,6602140," uh right so greater than zero what the hell my sub was cancelled uh i think maybe this is because i didn't"
6602140,6609580," accept the new contract or something or something like that oh i can see so the twitch actually changing"
6609580,6616060," some stuff with the contracts and everything and because of the current situation they may literally"
6616060,6623820," cancel my entire contract and never sign a new one so i may actually lose my partnership thank you"
6624460,6634300," very much so"
6634300,6645100," gonna pay 25 if you don't accept new contract oh i mean the question is are they gonna even allow me"
6645100,6650540," to accept it so that's the thing because they may say oh we don't work with your country anymore sorry so"
6650540,6655420," just like and and what's funny is they they may actually still take 25 out out with me"
6655420,6665340," but anyway anyways whatever i don't give a about this world anymore uh so what do we have in here so"
6665340,6671660," this is ls this is l it's if it's a greater or equal to the count we can't really do anything"
6671660,6675660," uh and then we go so here we have a layout overflow but here is an interesting thing"
6676700,6686300," it points exactly at the widget that over flew this stuff actually useful actually helpful"
6686300,6692060," right because it's very serious serious issue right so because look at the layout that you have in here"
6692060,6697100," like and the this layout tells you there is some problem in here go figure it out"
6697100,6702620," like how am i supposed to figure that i don't know even though i created this i still"
6702620,6708140," don't know where the error is but now this thing actually tracks all of the locations where you call"
6708140,6715820," this layout slot and if you overflow the layout it tells you precisely tell you precisely where you"
6715820,6723820," did a fucky walkie and oopsie doopsie how about that how about that we got this beautiful beautiful"
6723820,6736540," framework isn't that cool css we have pure c that that that i'm registering for two hours would you look"
6736540,6744540," that registering for two hours so uh yeah so that's basically everything that i wanted to do today i want"
6744540,6753340," you to like play with this idea of having like layouts for this system and uh yeah maybe we can try to"
6753340,6757500," apply this entire stuff but i'm already streaming for two hours so i think i'm gonna integrate this"
6757500,6764780," entire framework into uh into the library already off screen right so let me do a committee committee"
6764780,6769980," for people who are interested maybe you want to play with this thing on your on your machine right so"
6769980,6782780," let's say layout introduce gaps uh between the widgets uh right so and i'm gonna push that right"
6782860,6788940," into the report and move that right into the report did you push it i think it pushed it there we go so"
6788940,6795580," that's pretty cool and that's actually very useful uh we can keep adding more and more interesting things"
6795580,6803660," in here right uh so the kind of like it would be kind of cool to have some spacing like in uh at left"
6803660,6812300," in here and at right so maybe separate sort of margins would be very useful another interesting thing would be what if i have"
6812300,6820780," one element that has to have exact aspect ratio right so one of the elements has to be exactly square"
6820780,6829500," right so how would we manage such elements in here that's very interesting right because"
6829500,6835660," we do have situations when the aspect ratio has to be preserved uh and it's usually in case of uh"
6835660,6842060," textures right so these kind of textures there is a little bit of a challenge with these textures is that because"
6842060,6849100," they have to be square and really kind of makes it difficult to make them arbitrary sizes and stuff"
6849100,6853980," like that so we have to preserve that it would be kind of cool if the layout allowed you to push things"
6853980,6859900," that have very precise aspect ratio and it just preserves it and maybe even centers these elements if"
6859900,6867580," they don't exactly fit uh all right so and maybe you have an ability to align them or either to the left or to"
6867580,6874380," the right or uh at the center and stuff like that center the diff imagine center in a different 2023"
6874380,6879820," uh right so you need an entire ai system to do that right"
6882220,6890300," uh imagine developing a huge huge one trillion parameter language model just to be able to center a diff that's insane"
6890300,6898940," uh anyway so that's an interesting thing to play with actually all right so yeah that's a lot of fun and"
6898940,6905820," it's super simple right so you don't need anything complicated for this good uh okay i guess that's it"
6905820,6912300," for uh today thanks everyone who's watching me right now i really appreciate it uh have a good one and i"
6912300,6917980," see you all on the next uh recreational programming session with azusa and we're gonna come up with"
6917980,6933100," something else i hope today's stream was interesting and uh i see you next time i love you all"

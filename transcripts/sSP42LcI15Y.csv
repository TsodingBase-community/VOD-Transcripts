start,end,text
80,7440," hello welcome to another zozin session how about that a bitch you didn't expect that"
7440,13760," to happen so uh let me adjust my window and everything just to make sure that everything"
13760,23040," is good and today the topic of today's stream is uh a simple literate programming uh system in c"
23040,29360," so which is rather interesting so i don't think uh as far as i know nobody actually got"
29360,37920," the idea of literate programming right and neither we are we go how to say that neither we're going to"
37920,45200," as well how to say that anyway so and we're also not going to get it right but we're going to get"
45200,49840," some sort of like approximation to the uh literary programming idea so let's actually try to google"
49840,55680," that literate literate programming right so what is a literate programming so it's a thing that was"
55680,64640," invented by uh donald knuth right the creator of the uh four large books that nobody reads uh the"
64640,73680," creator of of things like later and meta font and stuff like that so yeah that guy right so um basically"
73680,78960," it's a programming introduced by donald knuth in which computer program is given an explanation of"
78960,86720," its logic in a natural language such as in english interspersed with snippets of macros and traditional"
86720,90880," source code from which the compilable source code can be generated"
95440,103040," you you describe the uh the program in a natural language but you also sneak a little bit of code"
103040,108960," in there and you have a special system that takes this thing and can generate uh a readable human"
108960,117200," readable documentation and executable program from the same thing right so uh maybe you can describe it"
117200,125200," with a with a little diagram some sort of a little diagram so let's wait uh for my paint and uh you"
125200,129920," basically have a single source code source but you're going to be associated let's actually pick a green"
129920,142320," color a nice green color s r s r c so here is your src and from that src you can for example generate uh"
142880,152080," a basically a tech file of a book that is documentation for your program right that is documentation for"
152080,160480," your program or uh you can generate uh also the c code the c code that is executable version of that"
160480,170560," program so it wording it this way actually makes it sound like you know like a javadoc system do you"
170560,180640," guys are you guys familiar with the javadoc right so um essentially um it's a i think java introduced"
180640,188560," this system first where you can annotate methods and stuff like that and then uh generate documentation"
188560,196400," from that methods so i wonder um if javadoc is a tool that you can just call like that apparently it is not"
196400,203600," so i probably have to do it like that i don't remember that i had uh jvm somewhere so here is"
203600,212480," the name so jdk so then i can go to here and do i have a thing that can generate stuff for me"
212480,219040," so yeah here's a javadoc so i can use this entire thing to to generate docs so if i go there"
220240,228320," for example i'm going to do something like probe uh javadoc probe uh right so and if i go in here"
228320,235680," right so main not mean main dot java right so let's program in java a little bit do you guys like java"
235680,242800," uh java is actually awesome language my favorite language of all time so okay can you even see what"
242800,248400," the is going on i think this this one is actually not really readable uh right so let's actually open that"
248400,260160," in emacs now that's what i call a readable code then public static uh static void main then we have"
260160,271040," arguments so this is going to be that and then system out for interln then uh hello world right so"
271040,279440," and then i can compile the entire thing um into a class right so i don't even have a java java c so"
279440,284160," the thing i probably need to do i probably need to enter some sort of like a environment for java i do"
284160,293280," remember that i had something like that uh so if i take a look at opt yes so here is the java environment"
293280,299680," and i can quite easily just do something like this and if i do which java so i have the latest jdk so i can"
299680,305520," turn this entire thing into a java class right so it will take some time but we'll turn it into a java"
305520,311360," class there we go so here is the java class you can see it's bigger than the original source code but i"
311360,317600," mean that's fine that's usually the case uh and then if i run it it says hello world right so then you can"
317600,322800," run a java doc on this entire thing i think this is how you use it i don't remember like how to use it"
322800,327680," properly but i'm gonna try to do that so it's loading the source and it generated the doc documentation and it"
327680,333280," generates a shit ton of html files like holy fucking shit that's all the html files so then you can open"
333280,339840," this entire thing uh this generates index i think it also generates an index and there you go you have"
339840,345840," documentation for your program so here is your main class and here is your main method and so on and so"
345840,355600," forth and furthermore if i remember correctly you can now put shit in here right so uh the entry point to the"
355600,360560," program right something like that and then you can close it in here and then you can have things like"
360560,369520," param right uh args and say something like arguments arguments to the program right so and you can have"
369520,377040," like this um you know small comments right so these kind of small comments and can we regenerate javadoc from"
377040,385280," that so it will construct javadoc and everything and let's take a look at what we've got and uh if i go into the"
385280,390240," the main method into the main method uh here it is here is the documentation the entry point for the"
390240,395440," program here is the parameters rx arguments to the program and so on and so forth and you can write"
395440,400240," i think there you can use a markdown language in here rust has a similar system like a lot of modern"
400240,407200," languages have similar systems these days and the first time i saw this system i think it was in java i"
407200,412880," don't know who introduced this system maybe it was the the sun micro system who invented that but maybe not i don't know"
412880,419520," so this kind of thing sort of fits into the definition of literate programming so you have"
419520,424800," a single thing and from that single thing you can create an executable program maybe maybe in this"
424800,431520," particular case maybe in this particular case we want to say something like dot exe right for the binary"
431520,437760," executable and then you have a documentation so in that case it's going to be something like html uh right"
437760,443200," uh right well i mean in our case it actually turned out to be class so let's actually be a little bit"
443200,450160," more precise so it's kind of is a literate programming system if we're using just that definition from"
450160,461120," wikipedia but um from what i heard it is really not because um so uh again as i already said i heard a"
461120,468480," lot of rumors that everyone gets the idea of literary programming wrong and this is this is basically the"
468480,475280," case if i remember correctly the original idea was that you can have snippets in whatever order and they"
475280,481760," can cross-reference them uh cross-reference each other in a particular graph and the tool actually"
481760,487680," collects that graph and sort of uh untangles it and constructs either documentation or a program or"
487680,492800," something like that it's actually a very complicated idea but since uh it's yet another knuth idea that"
492800,500240," nobody understood so nobody understood um all right so maybe uh we could read about that maybe there's"
500240,508800," some diagrams that indicate so by the way this system uh that uh uses like um that first implemented um"
508800,517040," literary programming was called web right so it was before web was a thing that's how old it is"
517600,524480," right it's before web was a thing uh that's why it was called like that um so it's probably to actually"
524480,529920," sort of indicate that it's a semantic web or something or whatever so i don't really know what's"
529920,538160," up with that so um so there's a documentation or workflow uh oh yeah so yeah it's kind of interesting"
538160,542880," so implemented programming consists of two steps weaving generating a comprehensive document about the"
542880,549120," program in its maintenance tangling generating machine uh executable code uh weaving entangling are done on"
549120,555840," the same source so that uh that they are consistent uh with each other right so and that's why it's"
555840,561040," called web because you're weaving entangling or something like that some sort of a pen upon i mean"
561040,568880," um oh yeah this is how it's supposed to look like apparently so you have uh some sort of human"
568880,575440," readable code then you have chunks of executable code uh and there's some sort of macros in here"
575440,581920," i suppose scanline fill buffer something something something and uh your actual program and documentation"
581920,590000," is supposed to be um you know built from that in any case uh what i'm going to be doing i'm not going"
590000,595680," to be implementing this literate programming right so i'm going to put the uh link to the literate programming"
596400,604960," in the description so here is here it is wiki pedia uh article on literate programming"
604960,616400," so i'm going to implement the idea um from haskell's literary programming so haskell has um"
616400,625520," basically uh a take on literate programming uh literate programming so let's take a look at it"
626400,638560," so and it's very simple um it is extremely extremely simple so you write uh so-called lhs styles lhs files"
638560,647200," files oh my god lhs files which look like uh later document so let's actually take a look at them so uh i'm"
647200,655680," i'm going to go to prob uh and i'm going to do lhs uh and in here i can create an lhs file"
655680,663600," so and in here you can start uh creating a document right so this is going to be a document"
663600,671520," uh right so i think it's something like an article right um how do you start the document does anyone"
671520,677440," remember i haven't used the later for quite some time do you do begin document is that is that how"
677440,684240," we do that um okay so nobody's gonna help me uh document okay so thank you all right so begin"
684240,692960," document and then you can put your stuff in there uh all right so hello uh world all right and then you"
692960,701360," can run pdf later uh in lhs right so and it didn't really work because there's no such thing in there"
701360,709840," okay so uh is it is it another call i think it's a document class if i remember correctly or something"
709840,718000," like that okay i need to google it up later um uh document class okay uh so let's try to recompile this"
718000,723920," entire thing and there we go we have a pdf document uh we have a pdf document there we go so we have"
723920,732320," article and hello world so what's up with this entire thing well if you write something like begin code"
732320,746160," and end code you can stick a haskell code in here all right so and um obviously if you try to compile"
746160,751920," this entire thing with later is not going to work because you don't have the code environment yet so"
751920,759040," i think you have to create the code environment first to actually be able to use it um to do two"
759040,767520," so i think um this impact another alternative is to use well yeah the easiest thing is to just create"
767520,774160," uh code environment and you know to be verbatim verbatim i don't know how to pronounce this thing"
774720,780240," uh but i'm gonna just stick it in here all right so i think i have to put it in here"
780240,789040," and that way uh it is going to compile hopefully right so and then if i open this entire thing right"
789040,795600," uh here is the haskell code oh my god i can't i can do that okay so here's the haskell code and on top"
795600,802640," of that uh you can write some um some documentation in here so let's actually try to do something like put"
802640,812800," strln uh hello world right so section uh hello uh world"
815760,826960," world in haskell hello world in haskell this is how you write the famous uh hello world um"
826960,834720," program in haskell right and then you have this code environment and then if you recompile the entire"
834720,842080," thing you refresh it there you go you have some sort of article that talks about uh how to write hello world"
842080,850800," in haskell but here's an interesting thing i'm in a lead haskell mode bird whatever that's supposed to"
850800,858400," mean but lead haskell mode and you can see that the haskell code is highlighted in here and lhs is an"
858400,869040," extension that haskell compiler does recognize so if i do something like um uh run ghc main lhs"
869040,880480," it will take some time because i mean i need to load up um so i wonder how much time it will take"
882160,889440," it will uh around hello world so essentially you have a single document from which you can produce"
889440,897680," sort of an article documentation and which you can compile as a program so that's the basically"
897680,904880," uh a little illiterate programming take uh in haskell right so this is basically what they do maybe"
904880,912080," there is more than that but that's basically it but the idea is actually super simple uh essentially"
912080,920560," they treat by default everything as a comment and everything between the code blocks environment"
920560,928640," as the code and that way you can treat the same document as the later document right so which describes"
928640,934880," an article right that does something or you can uh treat it as the executable code so basically you can"
934880,940880," write an article with the pieces of code and you can always make sure that those pieces of code compile"
940880,947840," every single time right so you automatically verify the pieces of code in your article so this is how it's"
947840,955360," usually used um does make sense sounds good sounds gucci sounds tamaguchi so that's basically what it is"
956000,963200," and um i was thinking this is such a simple idea actually it is a very simple idea you can implement"
963200,971040," it for example for c or for any language as a matter of fact basically make this uh sort of like a code"
971040,981280," brackets customizable and you would be able to mishmash markdown and javascript or maybe html and c plus plus"
981280,987680," and you can have a general single tool that takes all these things uh configuration on how to treat"
987680,996320," it and then produce documentation and an executable code that you can compile so my idea is to actually"
996320,1003280," make a more general version of this make a single command line tool that can uh you know where you can"
1003280,1008800," configure how you treat these codes and stuff like that and so it can generate two versions of the files"
1008800,1013040," right the version that is executable and the version that is basically documentation"
1013040,1018000," so that's the idea of today's stream that's the idea of today's stream"
1026960,1032400," jupiter notebooks how is that the same as with jupiter notebooks jupiter notebooks is supposed to be like"
1032400,1038720," uh interactive environment so interactive environment where you interactively re-evaluate"
1038720,1045200," the blocks and stuff like that uh it has nothing to do with how jupiter notebooks works i don't know"
1047440,1055200," um"
1055200,1060800," so all right okay so there's no questions i suppose"
1060800,1068720," uh let's go ahead and implement that so and the idea is actually super simple right and i think we'll"
1068720,1074640," be able to get the idea to implement that idea in a single stream because essentially what we need to do"
1074640,1082960," we just need to load the whole file uh find where the code begins and find where the code ends and uh"
1082960,1089200," then basically command out everything that is not the code and leave only the pieces of code"
1089200,1096080," so uh yeah so that's basically what we're gonna do sounds good sounds gucci sounds tamaguchi so maybe i'm"
1096080,1101280," gonna actually put the uh link to the literate programming in haskell to the uh description as well"
1101280,1111280," to the description as well so where is my uh description uh there we go uh literate programming in"
1111280,1116400," haskell there we go so here's literate programming in haskell"
1118160,1125600," uh so how should we call this literate programming system uh how should we call it so we should we"
1125600,1128480," need to come up with the name for it with the catchy name for this thing"
1128480,1132240," so"
1139680,1145680," i don't know i don't have a name for it so maybe something like literate programming in c but i mean"
1145680,1152400," it's it's not going to be actually specific to c that's the point right so i put it in c for click bait"
1152400,1157680," right because people you know uh have a very controversial opinion on c and they always want a"
1157680,1164640," person program and see just to see like you know um it feels like to me that people join the c streams for"
1164640,1170480," like for the same reason people go to the zoo right they think that nobody programs in c and if you put"
1170480,1176480," c they will just watch oh wow look a person programs in c in 2021 holy fucking so that's the the only"
1176480,1183440," reason why i put c in there but it has nothing to do with c per se right so because uh it's going to be"
1183440,1188720," written in c but it will work with any language that's kind of the point right so that's kind of the point"
1189920,1202960," um so um yeah so we need to think about that um so maybe we're gonna just call it lead then uh right"
1202960,1210720," so and let me go ahead and just create this entire thing"
1217600,1221920," so the first thing we probably want to do right the first thing we want to do we want to read"
1221920,1227680," the file into the memory and then iterate the file line by line you know as a matter of fact i think"
1227680,1236000," i'm going to take my uh main lhs file did i already removed i hope i didn't remove it so if i go to"
1236000,1244480," something like probe uh and what was that i think it was lhs here it is so i'm going to use this specific"
1244480,1252400," file as basically the test subject right so we're going to try to produce um both a later document"
1252400,1258320," from it and a haskell document from it so to produce a later document we don't have to change anything as"
1258320,1263920," far as i can tell well maybe that's the that's the point uh here you don't have to change anything"
1263920,1269920," but produce to produce a haskell document you'd have to uh basically command everything out like this"
1271120,1275040," right you have to comment it out like this and then comment it out like this and there we go"
1275040,1281040," you've got the haskell document that's exactly why i want to implement this idea because it's so simple"
1281040,1286240," right so then you uh look at the haskell mode and there you go you can just compile this entire thing"
1286240,1294480," you just basically need to remove uh all of these things in there um all of these things all right so"
1294480,1300880," let's go ahead and do that uh so how are we going to accept the uh command line argument i think we're"
1300880,1309040," going to check argc uh greater than if it's less than two right that means you didn't provide the input"
1309040,1318320," file so we're going to do something like s error error um um no input file yeah what is provided right no"
1318320,1325840," input file is provided so and on top of that maybe we want to print the usage um the usage is going to"
1325840,1332320," be printed to the standard error uh usage file uh stream all right"
1332320,1343040," so uh f print f uh stream uh usage lit and uh this one is going to be just input"
1344160,1349520," uh right so we don't have any options right now so but we're going to add them a little bit later"
1349520,1356160," so and after that we're going to just exit with this entire thing so uh let me also create maybe"
1356160,1362960," some sort of like a make file right so and uh this is what we're going to have in here so this is going"
1362960,1371760," to be cc c flags uh maybe i should use no build for this one yeah maybe maybe i should use no build let's"
1371760,1378480," actually use no build why not uh if we're using everything homemade so we might as well use no build"
1378480,1388080," so even though it's not particularly ready for production uh i might as well use that thing as well"
1392240,1406080," uh all right let's include this entire thing right and define no build implementation"
1406080,1419760," and uh create an entry point and let's just call um cc so we're gonna have some flags of course the output is"
1419760,1425440," going to be just lit and then we're going to provide the uh the input in here so it's going"
1425440,1432640," to be a single file so i want this system to be super simple right uh so define c flags uh and it's"
1432640,1437600," going to be w all we're going to enable all of the warnings we're going to enable all of the extra"
1437600,1442560," warnings uh then the standard that we're going to be using we're going to be using c11 uh we're going"
1442560,1448640," to be pedantic about it so here's a pedantic and we're going to enable the uh debug information in"
1448640,1454720," case we want to debug things all right so i'm not going to accept any arguments right now and oh almost"
1454720,1460400," forgot we we do need to accept arguments because we need to enable self-rebuilding so the uh the build"
1460400,1467440," system is capable of rebuilding itself so it has a special macro called go rebuild yourself right so where you uh"
1467440,1477120," uh provide the command line arguments right arc c arc v and uh then we can just uh bootstrap the build system"
1477120,1483120," once hopefully that will compile and then when we run the build system it will just uh basically go ahead"
1483120,1491920," go ahead and rebuild itself uh okay so it doesn't really allow me to like it complains that we don't"
1491920,1500000," use org v but this is probably because we need to actually do something like uh so input input file"
1500000,1507520," path arc v arc v zero actually it has to be one right so because the zeros element is the program name the"
1507520,1513360," first one is the first argument uh of the of the command line right so that's basically what it is"
1513360,1523200," it is what it is and it isn't what it isn't so um now uh if uh yeah so the cool thing about this build"
1523200,1528320," system right the cool thing about this build system is that you can add additional things in here hello"
1528320,1535120," uh right and you don't have to rebuild the script because look look look look look look the script will"
1535120,1541760," automatically detect that you modified it it will rebuild itself and it will rerun itself and then"
1541760,1547280," it will run the new version of that script it's not really script it's a program but then you can remove"
1547280,1552880," it and it detects that it was modified it rebuilds itself and so on and so forth so uh you don't have"
1552880,1558480," to uh you know constantly rebuild when you modify these things which makes it super convenient actually"
1558480,1561600," it's almost like using shell scripts and stuff like that you know"
1561600,1572000," isn't that cool isn't that cool i think it's pretty cool so uh we need to read the whole file"
1572000,1578880," we need to read the whole file so how can we read the whole file i like i like to memory map my files"
1580080,1585760," uh because it's like three calls but it's not particularly portable and i'm not sure if it's"
1585760,1593600," gonna work well on windows right i would like to for this thing to work on windows out of the box"
1593600,1600240," so maybe because of that i'll have to go with the you know the classical fc ftel thingy"
1600240,1606080," that basically estimates the size of the file and then allocates enough memory and just reads everything"
1606080,1614720," into that file i don't know how do you memory map files in windows does anyone know is it is it too hard"
1614720,1622400," to memory map file and windows um maybe we could write like a cross-platform uh library for memory"
1622400,1631840," mapping stuff uh on both posix and windows on posix it will just use a map uh on windows it will use map"
1631840,1638800," view of file okay map view of file let's actually google that um so is that how we do that is that the"
1638800,1643520," official way because i know nothing about windows programming right i'm not a casey moratorium right so i"
1643520,1650240," know nothing about this shit so uh i know how to memory map files on posix though maps a view of a"
1650240,1655920," file mapping into address space of calling process so you have to provide the handle as far as you know"
1655920,1663200," you open uh file to get this handle so then you can provide the desired access which is basically read"
1663200,1670000," write it's it's kind of similar to a map so file of set high and low this one is interesting so file of set"
1670000,1678000," high and low uh what's up with that um so high order do you word of the file set where the view begins"
1678000,1685840," hmm so the low order uh offset file where view is to begin i don't understand what's up with this"
1685840,1691840," file of sets but okay the number of bytes to map okay it's kind of similar so you need to have a handle"
1691840,1696560," which you probably get by opening the file then you need to estimate the size of the file so you can"
1696560,1702240," properly map everything so it's also like at least two calls open the file and estimate the size of the"
1702240,1710560," file right so win uh win api get size of file because you will need that size of file to number of bytes"
1710560,1716000," to map right uh you'll definitely need that get file size what does it accept does it accept like file"
1716000,1722480," path or opened file uh it actually accepts open file so basically it's it's literally pretty much the same as in"
1722480,1731760," posix is just like the functions are different right uh it's combined like oh it's for ah it's for very"
1731760,1738800," big files right so it's in case the file is so big it doesn't fit into 64 like bit addressing or something"
1738800,1748240," like that is that what it is also what is the d word is d word is 32 uh or a 64 um oh it's a 32 oh"
1749600,1759360," so it's like a it's a leftover from the 32 bit times okay so oh okay i see what's going on here all"
1759360,1765920," right that's a funny api so i mean i understand that it's sort of like a legacy thing but yeah it's just"
1765920,1773920," kind of funny uh all right so maybe at some point we can uh we can use that as well uh so"
1777200,1782720," it's funny to see a linux guy coming to a windows api i've been i was programming in bare windows api"
1782720,1788160," when i was in school a long time ago so before i switched to linux but i switched to linux long"
1788160,1794240," time ago more than 10 years ago so but i am kind of familiar with windows api i tried a lot of different"
1794240,1804960," things actually uh throughout my career um so anyways so let's actually go ahead and uh memory map the file"
1804960,1812480," and then we'll see if we can abstract the process of memory mapping the file into some sort of api"
1812480,1818480," which will make it easier than later to implement like a windows backend for that api because memory"
1818480,1822560," like reading files through memory mapping in this particular situation is going to be very very useful"
1828480,1834400," what kind of thing did you try with win api when i tried to do that i didn't know much uh about"
1834400,1841840," programming at all so i think things i did were creating windows putting some buttons on windows"
1841840,1849680," like making stuff with those buttons i think the best the coolest thing i did is i initialized uh open"
1849680,1856320," gl using only win api i think it's called wgl i mean yeah yeah so i worked directly with wgl"
1856960,1862240," um maybe i don't remember i don't remember how it's called i think this is kind of this is kind of"
1862240,1868400," stuff yeah so i was calling to these functions to try to initialize that yeah i do remember this kind"
1868400,1874720," of thing yeah so it was long time ago holy it was almost like a different life my gut"
1879680,1884400," mm-hmm but again it was long time ago so i forgot all the things"
1884400,1892720," uh so all right um let's uh open the file i suppose uh the first thing we want to do we're going to open"
1892720,1902000," the file so this is going to be open and uh we need to include these things uh yep yep so this already"
1902000,1906720," doesn't work on windows you just add these three lines and there you go windows support goes out of the"
1906720,1919440," the window uh so uh i call open input uh file path and we're going to be uh calling it uh with"
1919440,1927120," oh or dean or don yeah there we go so when this thing will return a file descriptive for us right"
1927120,1932720," it returns a file description if the file descriptive is negative uh we do not allow negativity on this"
1932720,1937920," positive vibe stream so we're going to throw an error about that uh we're going to report it to twitch"
1937920,1949760," okay uh could not open file s because of ass all right so input file path and then i can do something"
1949760,1959360," like str error error no and then exit one there we go so we successfully opened the app file so the next"
1959360,1967040," thing i like to do i like to grab the um size of the file i think you have to do uh f stat right so it's"
1967040,1976240," going to be something like this there we go um so we provide the file descriptor then we need to allocate"
1976240,1985520," this structure on the stack stat buff maybe even zero initialize it just in case why not uh struct and then i'm"
1985520,1992720," going to uh be taking a pointer to that and if this entire thing returns uh a negative value we yet again"
1992720,2007360," throw in an error so f printf std error error could not um determine this size of uh file s because of s and"
2007360,2017200," it's going to be an input file path uh str error error error no there we go and we exit with this code uh"
2017200,2022560," with this code so after we determine the size of the file as far as i know the size will be located in"
2022560,2029440," st size so let's actually save it into a variable called content size right and there we go we have a"
2029440,2035520," content size so once we have an open file and we have the size of the file we are ready to perform the"
2035520,2041920," mapping so we're going to call into memory map uh so i'm going to be including these things uh i think i"
2041920,2053120," also need to include um uni std uni std universal uh std universally sexually transmitted diseases that's"
2053120,2059840," what it stands for of course so uh for the address we can provide null which means that we don't care"
2059840,2064480," where exactly the operating system is going to place the file i literally don't give a"
2064480,2070640," shit uh the length is how much we want to map and we want to map content uh size in this case"
2070640,2076000," so protection as far as i know we only care about reading right we don't need writing we don't need"
2076000,2082720," anything else so i can say prot read and nothing else flags if i remember correctly in our case we need"
2082720,2089440," map private so we're gonna create uh private copy on write mapping updates to the mapping are not visible to"
2089440,2093920," other processes mapping the same file and so on and so forth we just want to read the contents of the"
2093920,2098800," file and nothing else so maybe i'm going to say something like map uh private and then we provide"
2098800,2104640," the file descriptor uh and then we provide the offset and in that case offset is going to be zero we don't"
2104640,2112160," care so after that uh we get the content data right in our case it would be um you know it would be"
2112160,2118000," reasonable to reinterpret this data to character right away right because we only care about the character data"
2118000,2125920," right and if this entire thing returns uh a null right if it returns a no well uh we couldn't uh we"
2125920,2131360," couldn't do anything so we got a raid from gamoza thank you thank you so much uh for the rating was i"
2131360,2143520," hope your stream went well uh is this rust yes it is rust uh yes it is in fact a rust as you can see"
2143520,2149520," it is very very safe thank you so much for the rate and thank you so much for the uh for 16 months"
2149520,2153360," of tier one subscription thank you thank you thank you so what we're trying to do we're just trying"
2153360,2160000," to memory map a file so nothing nothing particularly special right so we're just trying to memory map a"
2160000,2166400," file and grab the whole content of that file so we can just parse that file without any problems but"
2166400,2173360," on top of that i'm trying to design it so then i can take this entire process of memory mapping the file"
2173360,2179200," and factor it out into something more cross across platform that could be implemented uh with win api"
2179200,2183520," calls and stuff like that so i'm not really doing anything special and i'm for sure not using this"
2183520,2189840," shady f open f read f write whatever the fuck it is people like posix people want me to use uh so i'm"
2189840,2195440," definitely not using that so i'd rather just like you know ask operating system for for a proper api to"
2195440,2203520," read files um so yeah uh are you remember just for memory efficiency it's just more convenient to work"
2203520,2211760," it that way right it's just like it's it's three function calls and you got the whole file so and that's"
2211760,2217280," it so this is just that simple you don't have to organize loops or anything like that or something just"
2217280,2223440," yeah memory map that and just give me the content so that's that's why i'm doing that it's 2021 can"
2223440,2229520," we just like have a function that's just uh where i can say give me the file and just gives me the file"
2229520,2238800," i don't know i won't have that so anyway um here's the content if this entire thing fails right uh could"
2238800,2248400," not uh memory map uh file s because of s okay so and um yeah the file is going to be input file path"
2248400,2254640," and the reason is str error error no or something like that there we go so it's going to exit one"
2254640,2263280," uh there we go there we go so we've got that going for us which is cool um so now we can try to print the"
2263280,2269440," content of this thing so can i just use f right to quickly print it i suppose i think that's the"
2269440,2279360," easiest way to do that just to test things out content data content content size um so to be fair"
2279360,2283600," yeah so the content size is going to be the size of a single element that means here i have to provide one"
2283600,2288800," and i'm going to be printing that to std out there we go so std out and i don't really care about the"
2288800,2293840," return of this function because i call this function just test things out nothing particularly"
2293840,2301040," special so let's try to rebuild the entire thing there we go uh so what do we have in here str error"
2301040,2309280," so i think i need to do the string do we have anything else error no uh no there we go there we go"
2309280,2315200," everything seems to be compiling so if i try to call my program so this is going to be lit uh i forgot a"
2315200,2321920," new line yet again you see c doesn't have a borrow checker and borrow checker would have prevented this"
2321920,2328320," kind of problem so unfortunately it's a very unsafe language so you have to fix this kind of stuff manually"
2328320,2333600," so let's go ahead and put a new line in here and let's try to recompile the entire thing"
2334720,2344240," there we go so uh yep yep so no input file so we have tried to provide lhs uh there we go so we read"
2344240,2352000," the whole uh the content uh the whole content of the file that's basically it uh but i forgot one"
2352000,2358560," small thing uh one small thing i think i forgot to unlock the file but to be fair when you exit the"
2358560,2365600," process right it will automatically close and unmap all of the things so there's no reason for you to"
2365600,2370960," worry about that but i'm gonna do that just to keep things clean right so to unlock this thing we're gonna"
2370960,2378720," do uh mon map i think that's how it's called that's how you unmap right there we go and here we have to"
2378720,2386000," provide the content data right the content data and the content size let's go content size it can fail"
2386000,2394320," but to be fair when we are about to exit right and the unmapping fails do really give a if it fails or"
2394320,2401280," not like seriously who gives a if it failed we're about to die right so and uh the"
2401280,2407760," same with close right i can close it it can fail but do i give a i'm about to die"
2407760,2412640," so i don't know maybe not um so i just want to put it in there"
2412640,2423040," so let's try to rebuild the entire thing uh and then rerun it you know what i think i need to add"
2423040,2429520," a sub command for my no build system right so um in this sub command is going to be basically run"
2429520,2435040," on top of rebuilding everything it will also try to rerun the thing so for those who doesn't know i'm"
2435040,2442160," using my custom build system which is called no build and it's literally a c program"
2443360,2453760," yes i'm building a c program with a c program yes so here is that so for for new people who"
2453760,2459680," might be like not familiar with what what the i'm doing i'm using this thing i developed it long time"
2459680,2467440," ago uh right and uh you can find it in here so the idea is the following that uh to build a c um c program"
2467440,2474480," you don't need anything but a c compiler uh no make no cmake no shell no cmd no anything like you have a c"
2474480,2482560," program and you have a c compiler you should be able to build the whole c project with just a c compiler"
2482560,2490400," that's the idea so and what you do uh you bootstrap your build system so the bootstrap of the build"
2490400,2496880," system has to be as simple as just compiling no build.c into executable nothing else has to be"
2496880,2502400," provided and the rest of the bootstrapping and heavy lifting has to be done within this program"
2502400,2507040," if it needs several stages it will compile several stages that will bootstrap itself and stuff like"
2507040,2512320," that but you bootstrap like one little thing and everything is just done for you so that's the idea"
2512320,2517920," of no build so there's a couple of caveats to that of course there's disadvantages i documented as much as"
2517920,2524560," i could uh you can read through all of that but that's basically the idea so and by the way this"
2524560,2529360," thing is capable of rebuilding itself right so it has a special macro that detects that you modify the"
2529360,2535200," source code and if you modify the source code it will go and rebuild itself uh seriously so if i do"
2535200,2544960," something like uh did it rebuild itself right so and i just call no build without rebuilding this program"
2544960,2553040," and it will it basically detected that uh i modified the source code it renamed itself to uh no build.old"
2553040,2559040," recompiled itself and rerun itself and now it is running a new version so you don't have to ever like"
2559040,2565040," rebuild it it can detect that uh you know you modify the source code then you can remove that and you can"
2565040,2569920," treat it like just a script so it's a script that rebuild itself um so it's pretty convenient and"
2569920,2576960," by the way here's a bonus it works on posix and windows so uh on windows we are literally using win"
2576960,2581920," api so we basically detect whether you're building on windows or something like that and if you're on"
2581920,2587760," windows we're using windows specific uh function calls and so on and so forth so the entire build system"
2587760,2594880," is around like thousand lines of code right so this is the entire build system works on posix and windows"
2594880,2598720," uh using win api and stuff like that um"
2598720,2607440," so that's basically it actually that's basically oh there we go so we have a function is path one"
2607440,2613840," modified after path two just to detect that something modified and as you can see on windows we're using"
2613840,2621200," functions like get file time and so on and so forth and uh on posix we're using things like stat and we're"
2621200,2624880," comparing the times so basically we distinguish between different environments and use different"
2624880,2630800," things trying to be cross-platform and shit so that's basically it that's basically what we're"
2630800,2637920," doing here if anyone is interested so uh what i wanted to do here so now i can add uh sub commands right"
2637920,2645360," so if rxc is greater than one right so that means uh you provided a sub command so the sub command is"
2645360,2653280," probably located somewhere here we're gonna do strcmp uh and if it's equal to run on top of just"
2653280,2661440," recompiling the entire thing we're gonna go ahead and run that thing so we might as well uh run it uh on"
2662320,2668800," the test file that we have that's gonna be main lhs right if you provided an unknown sub command right"
2668800,2677840," we're gonna panic saying something like uh unknown sub command s and uh we're gonna put our v one zulu"
2677840,2682800," in here there we go so that's basically what we can have in here so all of these macros they come from"
2682800,2689440," the no build itself right so it's specifically designed to like create such build recipes there"
2689440,2695120," we go and then i can do run and it automatically runs it right so basically when i do no build run"
2695120,2699600," it will compile everything and then run the the main program in here and the main program just printed the"
2699600,2708240," content of the file uh so do cmd capture std out of the command means what you mean by capture so what"
2708240,2716720," do you mean capture the output so what is your use case what do you want right do you want to redirect"
2716720,2723040," it somewhere or something so when you do command it just forks the process and runs a child process"
2723040,2729680," that's what it does so um if you want to redirect a standard output we have a special function"
2729680,2737520," functionality called chains you can basically redirect the output to a command to a different file"
2738240,2745840," maybe i want to take a decision based on the output so that's a good choice right so uh we plan to"
2745840,2751920," implement that but it's not implemented yet right so at some point uh we'll have an opportunity we'll"
2751920,2757200," have a capability to actually save it to some sort of a buffer but not right now so this build tool is"
2757200,2763120," not finished yet so keep that in mind uh but if you want to like right now i suppose you can basically"
2763120,2768160," redirect it to a file and then read from that file as a workaround but in the future you'll be able"
2768160,2777840," to actually redirect it into write it directly into memory um so there we go uh all right so what i was"
2777840,2787040," doing um yeah on top of that i wanted to extract this entire thing to a more uh how to say that more"
2787040,2795520," cross-platform interface all right so then we can implement it also for windows so you know what i'd"
2795520,2801760," like to do i would like to introduce like a structure some sort of structure called mapped file right and"
2801760,2809440," the mapped file is going to contain basically yeah i think it will contain the opened file descriptor the"
2810160,2816640," the content size and the content data right so uh first the most important thing is going to be"
2816640,2821520," the content data and then we're going to actually point it as a pointer to void because you never know"
2821520,2826880," what's what's in there right so let's not make any assumptions on what's what's the content of the file"
2826880,2833520," and uh then we're going to have a content size so and then we're going to have a platform dependent"
2833520,2839920," part of the structure right so for for instance on posix it's going to be that right so and if"
2839920,2847200," you are on windows windows windows not windows um it's going to be something like handle i suppose"
2847200,2856880," right so yeah so open handle uh right so something like this uh but again we're not implementing it"
2856880,2862400," right now so i'm just like you know i'm making you know theorizing how it's going to look like for now"
2862400,2868960," it's going to be just uh like this fd uh so the next thing i want to have i want to have a function that"
2868960,2875760," basically maps the file right so you would provide uh path to the file so file path"
2875760,2883920," and um so it could return mapped file but i think it would be better if it would accept the mapped file"
2883920,2890560," structure as a pointer right so it's going to be mf so and then it is going to return i suppose boolean"
2890560,2895600," indicating uh whether there was an error or whether there was no error right and uh we're going to"
2895600,2900480," implement this thing in here so and another thing we're going to have in here is a function that"
2900480,2905680," unmaps the file uh it accepts a mapped file and basically unmaps the file"
2910480,2916560," all right what's different between the implementation of detecting file changes"
2916560,2919280," we don't have a detecting file changes and using something like"
2919280,2929760," i notify is needed when uh you want to detect changes in real time"
2930480,2934400," but uh what if you want to detect changes between executions of the program"
2934400,2937760," so"
2937760,2944240," the question implies that you don't know what is i notify and that means i have to explain you what is"
2944240,2953280," i notify now okay so i notify basically gives you a stream of events right uh when you start using i"
2953280,2962160," notify you basically tell the system okay here is the file observe what are the events on that file and"
2962160,2967600," also listen for these specific events like modified something modified something and you constantly get"
2967600,2971840," the stream of events right you constantly get the stream of events and you keep getting the stream of"
2971840,2979760," events as long as your program is running right once your program is not running you don't receive these"
2979760,2990320," events i notify is using is used for real-time file modification detections when your program is running now look"
2993040,2999040," when i run my build tool it runs and then it exits"
2999040,3006240," that's it so we can't receive the stream of events from i notify"
3006240,3013760," right but we need to detect that the source code of this thing was modified between the runs"
3013760,3019600," of the program i know i don't know much about i notify i used it only a couple of times"
3020160,3025680," but i think i notified cannot do these kind of things right it cannot uh basically um"
3025680,3033520," ask the system what kind of events happened from that time when it was last run so i can catch up or"
3033520,3037600," something like that i don't think it it's capable of doing that and if it was capable of doing that"
3037600,3041760," means that means operating system need to have some sort of a buffer to do that and so on and so forth"
3042640,3049440," right so the way we detect is just we compare the time the last time modification of the source code"
3049440,3056400," and the last time modification of the binary and if the binary is older than the source code that"
3056400,3060960," means the source code was modified and we repealed it does it answer your question"
3060960,3072560," okay uh so that's how we do that and that's the difference between that and i notify and i think"
3072560,3079120," i believe i'm not 100 sure i'm not expert i notify but i notify is not applicable to this specific case"
3079120,3086000," because of how i notify works again if you are annoyed i notify an expert please tell me that i'm"
3086000,3091600," wrong but if i'm wrong that means there is some sort of a buffer that operating system like keeps track of"
3091600,3097360," all of the events and you can query all of the events from a specific time of time but it doesn't"
3097360,3103440," really look feasible right so i don't think it's capable of doing this kind of thing so anyway"
3103440,3109040," so uh let's do this kind of thing just to do boolean dot h"
3109040,3123840," all right so um now um i want to actually take all of these function calls all of that mess"
3124640,3131520," and tuck it under these two functions calls uh so how are we going to do that um i suppose uh i'm"
3131520,3141200," going to just copy paste this entire uh and just and uh save it in here uh all right"
3141200,3146320," so when i open the file i'm going to be actually opening the file in here"
3149360,3156960," i have an idea actually i have an idea so what if your file is already mapped and you're trying to call"
3156960,3162320," this function the second time right so you have mapped file you allocate the structure on the stack"
3162320,3172160," then you say map a file mf and uh something like inputtxt and if it didn't uh map you basically uh panic or"
3172160,3178800," something if it mapped everything's okay but what if you try to do it the second time right so what"
3178800,3183760," should we do in this particular case we probably need to detect that you already mapped the file and"
3183760,3195120," not map it or we can basically first try to unmap the file right uh and map the file so and here is the"
3195120,3204960," function so we're trying to unmet the file uh and um now we know that it's not mapped and we can remap it"
3204960,3214960," again here's the interesting thing uh how do we know that file was unmapped or mapped well uh we can check"
3214960,3224480," if the content data is not equal to new that means that means the file is mapped to something and we want"
3224480,3230240," to close the file descriptor we want to close the file descriptor and we want to unmap actually we want to"
3230240,3240240," first unmap that content and uh with this data uh like this and then close the file descriptor and after"
3240240,3249440," that uh we want to maybe zero initialize to everything so it's going to be mem set mf uh zero size of uh mf"
3249440,3255360," there we go so this entire thing basically if something is mapped it will unmap it and zero"
3255360,3260480," initialize everything and the first thing we do when you try to map the file twice well we unmap it"
3260480,3265280," that will automatically zero initialize everything for you and then we try to remap it again i think it"
3265280,3273520," makes sense all right so in this particular case maybe uh we can simply yeah we can simply return"
3273520,3275440," something um"
3275440,3290640," i'm thinking what if do we really need to check for this kind of what if i unmap null is that something bad"
3291600,3297280," uh if i try to unnap no or close if you try to close zero it's probably definitely gonna be bad so"
3297280,3313840," so i will need to think about this kind of stuff we'll need to think about this kind of stuff but"
3313840,3320400," ideally ideally ideally i want the system to work like this right uh i want to do something like map"
3320400,3330000," uh mapped file right so it's gonna be a map i zero initialized if i couldn't map this specific file"
3330000,3341840," which is basically input file path i will say fprintf std error error could not read file s because of that"
3341840,3350320," reason so then i can say input file path str error error error no there we go and then i can exit with"
3350320,3359920," one there we go so then um i can take the contents provided in here i can print it um and then i can"
3359920,3366160," unmap the file so it's gonna be a map file uh pointer to a map and it will zero initialize everything so and"
3366160,3373360," then uh we could try to implement this interface for both um windows and linux or something like that"
3373360,3383520," so yeah i need to think about how to do that a little bit better so but i think i want to make"
3383520,3390960," another uh break and then a cup of tea right so once i have a cup of tea maybe i'll have more uh you know"
3390960,3395680," motivation to to think about this problem so let's go ahead and make a small break"
3395680,3405760," right so here's the problem um i'm trying to follow zero initialization rule meaning that uh if i have a"
3405760,3413120," structure and i zero initialize the whole structure uh i want this to be a valid structure and if i zero"
3413120,3420240," initialize the map file what i would uh what i would expect it to be i would expect it to be an empty"
3420240,3428320," unmapped file so and an empty unmapped file means that this is a null pointer this is zero and here's the"
3428320,3439840," thing the file descriptor could be zero so zero nfd does not indicate that uh the file is not present"
3440640,3445840," right but i still want to follow zero initialization rule because it makes it makes initialization of"
3445840,3452480," like several of such things super easy i can just mem set like an array of mapped files to zero and uh that"
3452480,3459680," will correctly initialize them so um and messing with like minus one and stuff like that is extremely"
3459680,3467840," annoying so i think i'm going to introduce additional field uh which is going to be boolean mapped and this is"
3467840,3475600," the uh flag that is going to indicate whether the entire file is mapped or not"
3475600,3483440," um but we can also have a weird situation where that"
3483440,3488160," oh this one is very annoying"
3488160,3494160," this one is extremely annoying because i had"
3497840,3511120," it's not gonna actually help anything it is really not going to help anything"
3511120,3523760," okay so uh let's actually do it like a different thing in here right so uh if we have nfd right so"
3523760,3533520," here is nfd and it's initially my minus one uh right and if uh this entire thing fails right"
3536400,3542880," it will be automatically negative value it will be automatically negative value"
3542880,3550400," it will be automatically negative value"
3550400,3556560," it will be automatically negative value"
3556560,3570560," i didn't even know how to make it better so the the whole idea that fd uh can be zero and zero is a valid file descriptor"
3570560,3588320," actually breaks a lot of logic that is that would be very very convenient and it's just like it annoys me to no end"
3588320,3600320," so um anyway so um anyway so um anyway so this entire thing is not null right if this entire thing is not null right we wanna uh basically unmap it right and after that i suppose we wanna set this entire stuff to null right and this entire thing to uh zero"
3600320,3608560," right we want to uh basically unmap it right and after that i suppose we want to set this entire"
3608560,3620000," stuff to null right and this entire thing to uh zero so and if fd was uh actually allowed to be"
3620000,3624880," zero and zero was an indication that like you don't have like you don't have a file in here"
3624880,3629360," right if it's not zero you would close it and then you would assign fd to zero and then you"
3629360,3634720," would be able to take these three lines and compress all these three lines into man's set and that will"
3634720,3642320," be actually nice and clean but unfortunately fd could be zero and zero could be a valid file"
3642320,3647760," descriptor so we have to do minus one but that breaks an idea of zero initialization rule where"
3647760,3653520," i want the structure to be like zero initialized and to be a valid unmapped file so it just breaks"
3653520,3658080," the whole logic and it's just so goddamn annoying right so um"
3658080,3666880," i don't know i don't know what to do so and then um"
3666880,3678000," and what's funny is that uh you can introduce this flag mapped but that flag is only needed for linux right"
3678000,3684080," because on windows right uh as we already saw you have a handle right and win api handle is just"
3684080,3690320," basically a pointer and a pointer if i understand correctly handle is a pointer right uh what's the"
3690320,3697360," definition of handle uh where can it see the type depth for the handle um can i see the type"
3697360,3705920," there for the handle i suppose it is uh like a nullable thing uh right hopefully it is p void like it's"
3705920,3711680," literally p void that means it could be nullable so on windows you don't need this kind of thing so um"
3713120,3721360," it's just like yeah it's just so annoying uh fd opened uh or something maybe like"
3721360,3728320," yeah fd open so that's basically what you need in here as an indication that uh yeah or maybe if you"
3728320,3732800," had option types right so you would put like it inside of an option if you don't know what i'm talking"
3732800,3742240," about postex is kind of weird right um postex is kind of weird invalid handle might be minus one uh"
3742240,3744640," invalid handle but why is it a pointer then"
3744640,3750880," handle is not a pointer"
3755760,3756080," well"
3756080,3769600," well i know nothing about win api so maybe you're right but i'm looking at what uh msdn microsoft.com"
3769600,3774800," is declared winning too"
3774800,3778160," maybe maybe you're right maybe not i don't know"
3778160,3782000," handle is not a pointer"
3784800,3787520," who knows anything is possible in windows world right"
3787520,3794480," it is a pointer oh okay"
3794480,3804080," but but but the confidence confidence that's what's important in the internet discussion"
3804080,3809040," it doesn't matter what's written in documentation what's important is just saying that out loud with"
3809040,3814000," the confidence and that way you don't need any documentation right so it is"
3814640,3818880," not a pointer right we have to say that constantly"
3818880,3827920," it declared as a point but that doesn't point oh okay so basically it's a value wrapped into void star"
3827920,3832560," and it's actually quite common in old code i suppose"
3832560,3836480," anyway so we can have something like this in here right um"
3838320,3839040," just a second"
3839040,3844560," look at memory in debugger"
3844560,3858080," just give me a second i'm gonna start up visual studio just just a second okay um so"
3862720,3867360," i want to cry i want to cry i literally want to cry when i read the chat it's just like"
3867360,3875600," maybe i should know just read the chest like yeah sure just give me a second i'm gonna look in the"
3875600,3881680," debugger yeah thank you uh okay so let's introduce this flag and it's gonna be like a platform dependent"
3881680,3898320," um so um you have that and then we unmap the entire thing and then this is fd open uh if thing is fd open"
3898320,3908320," we close the fd and that's it and then i can do mem set mf zero size of uh mf so there we go so after"
3908320,3920720," that um right i unmap the file uh mf right and then what we do mf fd i assign fd in here and after this"
3920720,3928480," thing uh succeeded i will say fd open uh true and there we go that's cool so furthermore i think it"
3928480,3934800," would be nice to have something like go to error right so the classical look chat do we have anyone"
3934800,3942480," who's left from gamoza right i'm using go to i'm yes i'm using go to i'm programming in a very unsafe"
3942480,3948560," language uh called c without like a boundary checks or borrow checker or anything like that and on top of"
3948560,3955520," that i'm using go to i mean probably majority of people already left but still uh so yeah just just"
3955520,3961760," just to let you know i want to emphasize on that um okay so what do we have in here if this thing is"
3961760,3969520," failed so here's go to error uh then we are getting the content size all right so this one is going to"
3969520,3977920," be mf content size and then mf content data and if the mf motherfucking content data"
3978960,3983280," mf content size mf file descriptor"
3983280,3987520," i really like this name actually"
3989760,4011120," this is such a good name so uh yeah so we don't need that uh and this one is going to be uh go to error"
4011680,4021200," all right so and in here right um we return true when uh it is successful so in case of an error uh"
4021200,4025280," the only thing we're doing we're just unlapping the thing and mapping it back"
4025280,4030640," uh and then returning false so you see the idea here it's basically defer"
4031280,4037680," right i'm doing a defer um or it's it's like array yeah yeah yeah there we go so it's like array it's"
4037680,4044320," like implementation of a drop interface like you know in rust uh right you have a drop treat a trade"
4044320,4050160," not not not interface i'm sorry uh right you have a drop which is a basically destructor and that's"
4050160,4055200," basically the code that will be executed when you exit the scope or something that's what we're trying"
4055200,4062320," to emulate that's what we're doing uh right so where is the drop trade um here it is here's here's the"
4062320,4072160," drop that's what we're emulating um get rid of all the function use only go to but it's not particularly"
4072160,4078640," convenient um it's it's actually kind of interesting you can probably do that but then you would have to"
4078640,4085840," maintain this stack yourself right it's actually a pretty cool idea just a second how would you implement"
4085840,4095600," that so um essentially well you're forced to have main uh because that's the entry point uh but then"
4095600,4103600," within the main you can have uh different functions like for example print function right um essentially"
4103600,4108720," what you'll have to do you'll have to have some sort of a global stack right and a global stack you're"
4108720,4114160," going to have frames right so this is going to be something like frame and uh i would say that it's a"
4114160,4118560," union right because i want to be able to reinterpret that union in different ways i want to be able"
4118560,4125680," to reinterpret it as a pointer right so it's kind of difficult because you also need to store a return"
4125680,4132960," location and arguments right so we're going to have a frame a stack uh some sort of a stack capacity uh"
4132960,4141360," and is it even possible to so does label have any type in c"
4143920,4152240," can i sort of take a pointer to the label and store that thing in a frame of a stack"
4152240,4161680," so i can go to to that thing later can you go to to an address somehow that's actually a very interesting"
4161680,4169840," thing if it i will allow that it would be actually possible to like have that somehow uh so c address of"
4169840,4174800," uh label uh label it's actually pretty cool it's possible to store the address yeah yeah so that's"
4174800,4181360," the point uh can you store the address and then jump to that address later maybe you can emulate that"
4181360,4187760," with the long jumps there's not a lot of this feature however the gnu compiler includes a non-standard"
4187760,4193680," exception for doing this as described this article so they have added a special operator"
4193680,4200080," uh and percent the percent that reports the address of the label as void star uh in other words instead"
4200080,4207680," of uh okay that's so in gcc it would be possible right and then you'll be able to actually jump there"
4207680,4216320," so you can save address of go to in gcc and jump back so you can emulate procedures right and when you're"
4216320,4221520," about to call a procedure you'll have to push the return well you also need to be able to push the"
4221520,4229600," return address of the current executing instruction so there should be a way to get the current execution"
4229600,4233360," instruction so uh yeah"
4236480,4244720," but i don't know maybe you can do it as an upset from something if you know the line number uh but"
4244720,4250800," yeah i think in the in the venue i see it's not particularly possible but yeah we're getting"
4250800,4255440," close we're getting close but maybe it should be possible in the standard sea with like long jumps or"
4255440,4263440," something um anyways so we're gonna have that we then go to two errors and everything seems to be gucci"
4263440,4270720," everything seems to be tamaguchi all right so and if i try to rerun the entire thing so uh open input"
4270720,4276320," so this is going to be file path uh what else do we have in here so some of the file descriptor then"
4276320,4287200," file descriptor yet again right uh and then content size and then the file descriptor"
4287200,4292880," and that is basically it there we go so i think we did everything so we have a sort of"
4292880,4300080," like a cross-platform way of um you know of doing all that so the only thing that we lack"
4300080,4306640," is an ability to report errors that have happened uh in this particular layer but uh we could just"
4306640,4314000," implement something i don't know report the last error or whatnot uh so yeah so that's how we map the"
4314000,4320160," files that's pretty cool so it took us one and half of an hour to map a file on a stream i'm super happy"
4320160,4326480," and it seems to be working it seems to be working so uh to be fair the input file is not correct"
4326480,4330640," so the input file is not correct we have to actually do it like this"
4330640,4338800," uh there we go so now it is in fact correct so and uh lit haskell illiterate haskell there we go"
4341040,4347120," okay so the next thing we need to do with this uh file we need to iterate it uh line by line all right"
4347120,4354960," to do that uh we are going to use this string uh string view library right i'm going to be using string"
4354960,4359520," view library that you can find in here if you're interested and i'm going to also put that in the"
4359520,4369520," description uh for people who's watching me on youtube so string view library there we go and also we were"
4369520,4374800," also using no build build system so and i think it would make sense to actually put this thing in the"
4374800,4388240," description as well no build build system there we go so uh let's go where is uh sv so let's go in here"
4388240,4397600," and let's grab the raw version of the string view right so we're going to do w get and uh i'm going to"
4397600,4407920," include the string view in here so as far as i know uh gotcha guys uh it's a stb style library that"
4407920,4412560," means i need to first include implementations right so it's going to be sv implementations"
4412560,4422480," and there we go so the string view library it has a function sv from parts so and this function accepts"
4422480,4429520," the data and the count right that's what it accepts so and it basically builds the string view from these"
4429520,4436320," two things and we already have the data and the size right you can get them from the"
4436320,4441520," content size and the content data uh so it's going to be content data and then uh"
4441520,4446880," content size and there we go we've got the content"
4448320,4457840," um all right so and then we can iterate line by line uh we implemented a mapped file api uh which"
4457840,4467120," stands for mf so now it's mf content data mf content size and so on and so forth uh so that's what we have"
4467120,4475360," in here content count uh all right so let's also chop off a line all right so it's going to be sv chop"
4476240,4483280," by delimiter uh the content and the delimiter in this case is going to be a new line right and we"
4483280,4491040," can try to print that line just to see if it actually you know works so it's going to be svfmt uh might as"
4491040,4498800," well wrap it in parentheses just approve that we're actually handling that stuff properly this is the arg"
4498800,4505840," line there we go and let's try to run this into i think and uh yeah there we go so as you can see"
4505840,4509200," we're handling everything we're handling everything properly so that means we're actually splitting"
4509200,4518000," the content of the file by lines that is perfect that is absolutely perfect uh another interesting"
4518000,4528400," thing now basically that is it believe it or not so we need to introduce two modes uh of um"
4529200,4536880," of the system the mode when we are handling the comments and the mode when we are handling the code"
4536880,4547200," right so um we need to introduce some sort of like a boolean um so comments maybe maybe basically doc"
4547840,4554800," right so and we are initially in the um i don't know maybe cold mode let's call it cold mode because"
4554800,4561200," by default it's not going to be in cold mode so and depending on the mode we're going to be um"
4561200,4570480," handling lines differently right if you are in a code mode right if you are in the code mode uh i think you"
4570480,4579600," simply uh print the lines as they are right you do sffmt then svarg and you just print that line that is"
4579600,4587040," it you don't have to do anything unless unless you encounter um"
4587040,4594800," end so you are in the code mode so you take each individual line and you treat it as the code and just"
4594800,4603520," print it as it is then you encounter uh end code like like this uh and that means you have to treat it"
4603520,4608800," as the comment and you have to switch to a different uh to a different mode"
4608800,4613520," all right"
4613520,4620720," to be fair maybe the mode switching has to happen"
4622400,4630240," like before you print anything yeah so essentially if you are in a code mode and"
4630240,4640160," and the line so we might as well maybe even no we don't have to do that maybe we do um"
4640160,4651600," sv equal sv trim line and it has to be equal to code end right so this is the code end"
4652720,4659760," so if something like this has happened you switch to uh code mode false you are not in the code mode"
4659760,4668240," anymore if you're not in a code mode you're in a comment mode and the line uh is equal to"
4668240,4672960," the begin right it is equal to the begin"
4674560,4685040," uh huh uh we're gonna be switching to the code mode like this so this is gonna be true okay uh"
4685040,4693680," then depending on whether we are in the code mode more if we are in the code mode we're just printing that"
4693680,4702800," line back so sv fmt sv fmt we're just printing this entire thing back um so"
4702800,4713440," and sv arg um so it's gonna be line right and if you're not in a code mode we'll have to"
4714400,4722720," like prefix it with a comment right it's gonna be sv fmt new line sv arg believe it or not"
4722720,4729840," that is it this is the entire core functionality of the program"
4729840,4739280," that's how simple the entire idea is we spend more time coming up with like a mapped file api but the"
4739280,4745920," core idea behind this little bit programming in haskell like this thing is just freaking this so"
4745920,4748240," that's literally it"
4748240,4755920," it's embarrassingly simple it is freaking embarrassingly simple okay so if i try to do run"
4755920,4761120," uh it does not compile let's actually go ahead and compile everything first so it has to be sv"
4762000,4771200," like this and this one also has to be sv uh boom and we have anything else so it complains about something"
4771200,4779280," yeah it has to be just print f and there we go so yeah there we go um and i think yeah we did the"
4779280,4790640," fucky wacky and even oopsie doopsie okay so when you encounter code oh okay"
4790640,4799280," so there is a little bit of like a wonky logic in here um so if you are"
4801360,4811040," not in a code mode but you encounter the begin you encounter the beginning you still uh treat it as no"
4811040,4818480," code and you still need to comment it out but uh you need to switch to the code mode right so something"
4818480,4825760," like this uh now you're in a code mode but if you are in a code mode and you encounter end line"
4826400,4835680," you have to comment it out so it's a little bit weird uh but it is what it is so uh just a second so"
4835680,4846160," can i grab this entire thing right if uh if this thing is end line that means i want to print it as"
4846160,4856240," commented out otherwise don't comment it out yeah uh the the idea is still relatively simple right"
4856240,4864640," it's just like kind of a weird logic but it is what it is uh there we go right and something happened"
4864640,4873520," at the end which i don't necessarily understand oh and yeah so you have to switch to uh not code mode"
4873520,4880960," let me go there we go so the original thing looked like this right the original thing looked like this"
4880960,4888080," and the transform things looks like this which is like a proper haskell code right it is a proper haskell"
4888080,4895120," code so we can now try to um write something more interesting so for instance let's actually ditch"
4895120,4903360," um haskell and let's write something like hello world in uh c this is how you write the famous hello world"
4903360,4911200," program in uh c right and this one is going to be something like lit right uh maybe technically it could"
4911200,4921520," be actually tech right so let's call it hello tech uh yep yep so and let's just write it so we'll have to"
4921520,4929440," include stdio right uh right and uh i don't know why it tries to indent it like that but it is what it is"
4929440,4934320," uh then i'm gonna do print f uh how um"
4937760,4951920," um so uh okay so it took a little bit of time for emacs realize it's a verbatim uh environment and"
4951920,4959600," it's finally switched to to this thing so it's gonna be hello world and then we have to return with zero no"
4959600,4967440," indentation no anything so let's just remove this entire stuff one two and this is one two there we go so"
4967440,4974000," here is the code and uh we're ready to do this kind of stuff and i'm going to switch the comment style"
4974000,4984800," to uh something else um something like maybe like this right and uh the input that we're going to run"
4984800,4991440," the input that we're going to run is going to be hello tech right so this is the hello tech thing"
4991440,4997120," and if i try to run this entire thing as you can see uh it now generated the c code right so"
4997120,5004320," that means i can just call uh lit hello tech and produce hello c right and then if you take a look"
5004320,5014240," at hello c it's it's a program that you can simply compile so that's the entire idea of the of this"
5014240,5023600," you know literate system uh and i want to test how this kind of stuff would work um so it would be nice to"
5023600,5030720," maybe uh have a separate environment where we can test this entire thing so i'm going to remove the c"
5030720,5036960," program right i'm going to remove the c program and i'm going to create a hello folder inside of the hello"
5036960,5043440," folder i'm going to put the hello tech and uh lit executable right and uh basically the idea is going"
5043440,5051440," to be you write uh this as your main uh program right you have um you know the um the documentation"
5051440,5056560," and the code in the same place right documentation and the code in the same place and you have some"
5056560,5062000," sort of like a make like or build system right so and what you're trying to build you're trying to build"
5062000,5067760," several targets right so this is going to be for new all and the first target is essentially a hello"
5067760,5075440," program and hello pdf so you're trying to build these two things so you have a single file and you want"
5075440,5084400," to generate executable and pdf from a single file that's the point right so uh let's try to generate"
5084400,5094240," uh pdf file so to generate a pdf file you need hello tech and um so you produce hello tech uh well you"
5094240,5102000," basically take hello tech and just do later hello uh tech and that is it so so then i can just do uh"
5102000,5109200," make uh hello pdf please make hello pdf and that generated a pdf for me and if i open this entire thing"
5109200,5117280," here it is so here is a hello world in c cool so then in make file right uh i want to produce hello"
5117280,5124560," executable i can only produce it from hello.c so once i have hello.c i am going to call a c compiler and i'm"
5124560,5131440," going to just create that thing so maybe i'm going to enable uh you know different uh things uh like this"
5131440,5138480," right um do i need to enable different standards maybe i can enable std 11 and be pedantic about it"
5138480,5145200," maybe i'm going to also include debug information you know the usual stuff and uh there we go so but"
5145200,5151920," we don't have a hello c program well you can create hello c from hello tech the same one uh that you use"
5151920,5160720," to create pdf uh and call lit hello tech and save this entire thing to hello c there we go so we have a"
5160720,5169680," system that constantly rebuilds the executable and pdf from a single source code right so from a single"
5169680,5175120," source code uh so let's give it a try i'm going to try to rebuild everything from here and uh something"
5175120,5180240," doesn't work because it's text right so where's the text i don't have a text to rebuild everything okay"
5180240,5187440," so it rebuild everything i have a hello world system right which printed hello world in here right and i"
5187440,5197520," have uh the pdf file so there we go i have the pdf file so yep that's the thing"
5200640,5208640," so now we can try to write some sort of article that is also an executable program right so can we"
5208640,5214080," try to do that so what should we write an article about what should we write an article about we"
5214080,5226880," can write an article about bubble sort in c uh all right so bubble sort uh in c uh so um bubble sort"
5226880,5243760," is the simplest uh is probably uh the first sorting algorithm uh everyone is introduced to uh okay"
5244480,5255200," let's first include the necessary uh necessary header files right necessary header files and in here i'm"
5255200,5263440," going to literally just go uh a code and uh right now i suppose we only need like stdio and std leap and"
5263440,5269920," that is it right so here are the files and as we need more we're going to be including more things in here"
5271280,5276480," um uh as well as we need more we're going to do the whole thing um"
5276480,5291760," okay so the uh the main operation of bubble sort is swapping two values um"
5291760,5299520," swapping two values and let's do something like code right and here we're going to do int swap"
5300560,5309920," um something like int x int uh y uh right so i wish it was a little bit less wonky but it is what it"
5309920,5314800," is maybe if you had the editor with the support for this kind of thing it would be a little bit easier"
5314800,5324960," to work with right uh then uh we're going to do something like x y and then uh y is going to be"
5324960,5333600," equal to x and we don't really need to return anything in here um okay so there we go uh maybe um"
5333600,5340400," so maybe we can do something like here is the entry point right here's the entry point and we can"
5340400,5349120," actually rework this entire thing a little bit later right so it's gonna be uh oh my god emacs doesn't make"
5349120,5356000," it easier for me one two three four return zero uh there we go so if i try to recompile the entire"
5356000,5363520," thing it seems to be recompiling so here is the c code that got generated from the documentation and uh"
5363520,5371200," the pdf file the pdf file uh looks like this so maybe i can actually open uh it like this okay so bubble"
5371200,5377120," sort is probably the first algorithm so the main operation blah blah blah so that's basically the"
5377120,5384560," point of literate programming in haskell right so this is how haskell like asks you to do this kind of"
5384560,5390880," stuff um which is okay i suppose it's a very interesting concept you can write an article or"
5390880,5397680," prepare maybe some sort of a talk that also simultaneously checks that um you know all of"
5397680,5403840," the code snippets there compile properly and believe it or not i already used this kind of technique"
5403840,5411040," for different talks that i gave so i actually prepared the talk for um you know iomanet in haskell"
5411040,5419520," and i prepared these slides um using later and stuff like that and i actually wrote all of the slides"
5419520,5426800," in literate haskell right so these are all of the slides they're written in literate haskell and all of"
5426800,5433840," these snippets and all of the code in here is ensured to be compilable right so i have a lot of"
5433840,5438400," different shad in here so i think there is even a pdf in here can i open i think there is no pdf let's"
5438400,5444800," actually clone it um so yeah i did this kind of shot like long time ago actually"
5447520,5454560," so yeah so i never gave that talk um so and instead i made a video about iomanet"
5454560,5455120," um"
5455120,5466960," that's a lot of shit by the way"
5470160,5477040," so i think it just populates the index it's needed for the the uh the the core stuff right for the uh"
5477040,5484480," you know for the syntax highlighting okay so and what this thing did uh i suppose it just compiled"
5484480,5491920," everything so there is all file and uh everything so and also there should be a pdf file do we have a pdf"
5491920,5498640," file there we go we do have a pdf file and uh here are the slides right 2008 it was actually a long time"
5498640,5500080," ago but yeah so"
5500080,5509680," so and here is me promoting myself and my husky rank series and i explain uh what is this kind of stuff"
5510240,5518080," and uh this code is actually constantly checked to be compilable right so this entire code is"
5518080,5523440," constantly checked to be compilable uh as they modify it so all of these things is ensured to be"
5523440,5530320," sorry i think i already made that i think so yeah i um you can probably find this thing in here if"
5530320,5537760," you're interested in it so i never actually gave that talk um because reasons um i don't know so i sort"
5537760,5544720," of like agreed to give that talk but then everything got cancelled and i made a youtube video instead so"
5544720,5551360," literally my io monat video on my main channel is basically this talk uh and i made that video"
5551360,5555680," because the the talk was cancelled right so and i never gave it so i decided i'll just make a video"
5555680,5567520," out of that why not uh so yeah studying uh i am on it um so that's that's basically this talk uh"
5567520,5573760," essentially uh you can find it in here if you are in fact interested so i'm gonna actually put"
5573760,5580000," all of that stuff in the description uh iomonet video um"
5580000,5592160," okay slides for the iomonet talk right and i'm gonna put all of that here as well so and i use the"
5592160,5597280," same technique i use the same technique to prepare this kind of slides so what i'm trying to do now"
5597280,5603040," i'm trying to take that technique and make it more general because i believe like it doesn't have to"
5603040,5609200," be specifically haskell thing because the whole process of taking this tech file and converting it"
5609200,5614960," to a source code that is compilable by some sort of a compiler is actually pretty straightforward it's not"
5614960,5621040," that hard you just like command out everything that is not a code and there you go you see that's it so"
5622080,5627600," that's how you can ensure that all of that stuff is compilable we wouldn't even have to introduce i"
5627600,5634400," think the entry point right because we can only compile the um the translation unit right so if right"
5634400,5639680," now i try to do something like this uh you see there's undefined reference domain but then i can do"
5639680,5648400," something like make file and i could try to simply do my c so i'm compiling only the the translation unit"
5648400,5654800," right so that's what i'm doing uh and yeah so it ensures that i didn't make any mistakes in here so if"
5654800,5663520," i got a semicolon right um the fact that i still have these comments in here right i still have these"
5663520,5669600," comments in here makes it super easy for me to find this thing in here and fix it it's still not"
5669600,5676320," particularly convenient it would be kind of nice to sort of like have a system that redirects back into"
5676320,5685600," into this file sort of like a source maps or whatnot but yeah it is what it is um it is what it is the"
5685600,5697360," main operation of bubble sword is swapping two values uh so the easiest easiest way to remember how to"
5697360,5718000," implement it is um when you uh assign something to uh the t uh variable right how do do i do like a verbatim"
5718000,5725120," but uh in line one i think it's something like verb and then i yeah this is how we do that so i can"
5725120,5730480," actually provide any sort of symbol in here right and it will just use that as a matching symbol for"
5730480,5735600," this thing if i remember correctly right so this is how i can do this kind of stuff if you are assigning"
5735600,5749920," something to the uh to the variable t uh like um verb um entity equal x"
5751680,5767600," you are saving that thing so uh on the next line you can override it uh override it uh verb"
5767600,5779600," x equal dot y so you see uh you can actually start with whatever variable you want you have two variables x and y"
5779600,5784400," and you want to swap them so obviously you're going to have like a temporary variable that involves"
5784400,5790160," like that is involved in the process so you can assign whatever you want to this variable once you"
5790160,5795920," assign it you know that you saved it so now you can override it and be sure that you never lose it"
5795920,5800800," because you already saved it right and then since you already assigned this thing you assign the second"
5800800,5807200," one from the from the temporary variable so and that way you can actually start with y for instance right"
5807200,5815200," you start with y and uh you know that i already saved y so i can overwrite y and uh so the only"
5815200,5820320," variable that i didn't decide is x and i assign it back from t so you can start from whatever like order"
5820320,5824320," you want right just remember that if you save the variable you can override it now and you're not going to"
5824320,5833440," order that's the idea essentially that makes sense makes sense hopefully so uh so you can overwrite it and"
5833440,5845600," and after that finish the process by assigning the second variable uh something like verb"
5848080,5857120," y equal t there we go and if i try to recompile the entire thing and refresh it everything looks good"
5857120,5864160," so maybe it would be better to have some sort of like a bullet point listing here right so um i forgot"
5864160,5870640," how to do that it's something like environment items so this is what i remember how to um when you send"
5870640,5880080," something to the variable t um this is what i remember how to implement it is um"
5880080,5889520," so this could be the first item right so this is one item uh"
5889520,5899040," i don't know maybe maybe it's fine i don't know it's it's kind of a huge paragraph but it is what it is"
5900240,5919520," um okay um all right all right now let's implement the bubble sort itself right and this one is going"
5919520,5927840," to be essentially code and who remembers how to implement the bubble sort so uh we're gonna start with a function"
5927840,5935440," that accepts a rate of integers right and since it's a c we also have to pass the uh the size of the array"
5935440,5942080," so it's going to be a exercise right i wonder if this entire thing will compile i think it will because"
5942080,5946240," uh yeah we will already include std lib which includes size t"
5946240,5954000," can you break apart your code block and use that as part of the text i think so i think you can do that"
5954000,5962320," um so uh so uh let me see so i can probably do something like this and then this one is going to be"
5962320,5974400," something like begin uh right and i can have some sort of a text some text here uh right so then uh some text"
5975760,5982480," there uh write some text here some text there and this is going to be begin code and this one is going"
5982480,5992000," to be end code uh if you keep um and that should be fine right if i do something like this some text here"
5992000,5999920," some text there and the entire thing compiles and in the c code it's going to look like this right so yeah"
5999920,6004000," yeah you can actually split apart you can basically comment on each individual line if you want to"
6004000,6008720," right so yeah because the idea is actually super simple but i don't think we're gonna do it"
6008720,6018080," right now um maybe we can probably also have comments in there but it's not particularly convenient"
6021040,6031040," all right so let's remove this entire thing so this is going to be that uh this is going to be like that"
6031040,6044880," so bubble sort so how we're going to be iterating through this entire stuff so you we usually iterate"
6046160,6052400," first the length right so we iterate the full length then smaller and smaller and smaller and smaller so"
6052400,6061040," that means we're going to do for i um and this is going to be well i mean let's let's make it int just"
6061040,6069040," in case so it's going to be exercise we're probably not going to include the last one so we're going to"
6069040,6078000," minus one uh i greater or equal actually greater than one and then we're uh you know decrementing it"
6078000,6085760," uh then i'm iterating starting from zero up until i uh plus plus j"
6085760,6089920," right and um"
6089920,6097040," emacs is extremely annoying you definitely need a special text editor to edit this thing that's for sure"
6097680,6109440," uh if axis i if axis i would say j is uh greater than axis j plus one we have to swap them right we have to"
6109440,6127600," swap them uh swap uh axis j axis j plus one there we go so uh do i want how can it test is that it i think"
6127600,6140000," that is it so we need anything else um so let's try to recompile the entire thing and it seems to be"
6140000,6141520," working so here is the bubble sort"
6148240,6157760," so uh we may also want to test this bubble sort to make sure that everything's okay um so"
6157760,6171200," let's check if this bubble sort algorithm uh works correctly um let's implement"
6172160,6184480," uh a function that can uh generate generate um like n uh random uh random numbers numbers for testing"
6184480,6195040," right so maybe uh n is going to be verb something like this so and this is going to be code uh and the"
6195040,6202000," function is going to be basically generate uh generate and numbers and we're going to accept the uh the"
6202000,6207840," numbers themselves and like basically the n right and here's the interesting thing so for the random"
6207840,6212880," do we need to include some stuff for the random maybe not i think it's it's part from stdlib"
6215280,6223120," and add the output to the doc that would be crazy the output to the doc maybe we could do that so"
6223120,6229120," but it's actually not really part of the uh of the literate programming i think"
6230240,6232160," so it's more of a like a kind of a different thing"
6232160,6246320," so all right uh one two three four four uh this thing plus plus i"
6250320,6266720," so access i uh rand um mod max right uh max um x size right"
6266720,6279200," okay so next x size let me go and we'll probably need to define it somewhere so"
6280320,6302080," we could probably um have a special section for uh like different controls and whatnot"
6302080,6309040," but maybe we're gonna extract it a little bit later as for now uh let's just try to recompile the entire"
6309040,6312800," thing and there we go we have a function that generates a number"
6312800,6323760," uh so so what's going to be the next thing i suppose what we want to have in here is"
6323760,6337520," and also an ability to check that uh the array is sorted right so uh we also need uh to be able to check"
6337520,6344480," uh that the array is sorted uh right so let's write that as well"
6344480,6356240," um is sorted uh we're gonna accept this thing and accept n and how do you check that an array is sorted"
6356240,6366160," right uh i suppose you iterated by players and if the players are ordered it is sorted if they're not they're"
6366160,6372240," or not so we might as well even return boolean uh but if i try to return boolean this is not going to"
6372240,6379920," compile uh as you can see so yeah it needs a known name boolean so we'll have to go back to our include"
6379920,6387120," section and include uh std boolean right so it's gonna be std boo uh and then i'm gonna recompile and"
6387120,6392160," everything seems to be okay so and here we have the the entire thing okay that's cool"
6392160,6401520," uh all right so here's the std boolean so how we're gonna be iterating for uh i less than n minus"
6401520,6409200," one right because we are essentially iterating uh all of that by pairs right so we're iterating all of that by pairs"
6410080,6416320," um so i wish there was like an easier way for me to to show that"
6416320,6425120," so we need some sort of like a way to draw diagrams does anyone know any cool way to like any cool package"
6425120,6437360," in uh in later to draw diagrams all the kind of news um um right we can do that by"
6437360,6445840," by iterating the array with a window"
6447920,6457840," of size two and checking if the pairs are ordered uh ordered right"
6457840,6464000," if the pairs are ordered so maybe we can put this stuff in here"
6464000,6472000," forest package before okay later forest so let's see package forest drawing trees"
6474640,6480880," so the package provides uh based mechanism for drawing linguistic and other kinds of trees"
6480880,6490640," uh so i'm not sure if it's gonna fit our goal but maybe maybe who knows i don't know"
6490640,6493600," it doesn't feel like it will okay so"
6497200,6510160," maybe i can put end code in here and then begin in here so uh right uh one two three four five"
6510160,6515920," uh six uh right so something like this"
6519520,6526400," so"
6526400,6533120," then we can swap some of these things in here uh and then the next thing is going to be just moving"
6533120,6542080," uh to the next one so then to the uh next one and to the next one"
6548880,6553360," um"
6553360,6554160," are"
6554160,6555360," are"
6555360,6559360," ascending"
6559360,6575040," all right so that's hopefully that describes the process well enough uh okay so in here i'm gonna"
6575040,6576800," comment all this thing for now"
6576800,6585360," so yeah that's basically how oh my god it actually split it into several lines no"
6585360,6591280," uh how to add a page break or something uh later uh page break"
6594560,6602240," so i think it's literally page break uh okay so after that i'm gonna just add a page break right"
6602240,6607520," so let me see and there we go so that thing is gonna be like that"
6613040,6618480," would be nice to be nice to be nice to also yeah so but that could be maybe a to-do to make it a"
6618480,6628720," little bit better uh right so and is sorted is essentially plus plus i uh right and"
6631520,6640160," axis i is greater than axis i plus one you instantly return uh false"
6640160,6643840," uh return false"
6643840,6650000," one two three four and this one is gonna be true there we go"
6650000,6664960," yeah because it's underscore so it thinks like okay so you need to give it some time to realize that"
6664960,6676080," it's a code uh code thank you thank you emacs very cool uh right so yes yes yes yes yes easy go away"
6676080,6685680," freaking this so is sorted um okay so the next thing we're going to be doing essentially is um"
6687280,6695040," so we we can generate a random uh we can also uh maybe check if it's sorted or not"
6695040,6709760," s to the power of orchid yes exactly it's s to the power of orchid uh yes yes yes"
6714960,6727520," so latex um um how to say that because i want to be able to uh to somehow draw just things like that"
6727520,6735120," but in later herself like i want to draw this sort of thing and you know what i'm talking about and i"
6735120,6742160," don't want to like do svg or like my own things like i just want to do that within the within the thing"
6742160,6746800," itself but uh i don't think it's possible right now look maybe i need a special package or whatever"
6746800,6754880," maybe i need a special package but you get the idea right so you can write some sort of article"
6754880,6760480," or maybe presentation and you can embed these pieces of code and then you can have a simple tool"
6760480,6767760," that uh can then turn that into the executable program right and uh there you go you can compile"
6767760,6774720," it and verify that it works correctly so that's the system that i wanted to make right that's the system"
6774720,6779280," i'm going to make and it turned out actually very very simple it's literally 100 lines of code"
6779280,6788480," the entire thing that enabled me to just show you this thing is 100 lines of c code um yep"
6789120,6794080," so actually it's a little bit more because i used some of the libraries in here so for string view"
6794080,6806560," library which is uh 300 350 lines of code um right so yeah so the thing how can we extend this entire"
6806560,6816560," program right uh if you make this thing these two things and this thing customizable for the user"
6816560,6824240," you will be able to again mishmash different markup languages and programming languages"
6824800,6832320," for instance what if i say that the uh begin let's actually uh put the begin and end to a separate like"
6832320,6840960," macros right so uh begin line is going to be something like uh begin code right so that's what"
6840960,6848880," we have here so this is a begin line so and the end line is essentially uh something like this so and"
6849680,6858880," i'm gonna literally just replace them in here right so um so this one is supposed to be uh begin line"
6858880,6866960," and this one is supposed to be end line and the thing here is the comment right so uh let's introduce"
6866960,6878880," something like uh a line comment and this is going to be like this uh so a line comment boom"
6879680,6888480," so now this thing is that for instance what if i want to use not um i mean all the modern languages use"
6888480,6899840," slash slash today anyway but uh not not all of them uh so here we have uh later and uh see like right"
6899840,6909440," later and see like just by switching this thing begin line i can say something like uh python right and"
6909680,6916240," and the line and the line is going to be like this and the line comment is going to be something like this"
6916240,6922720," now i'm working with markdown and python"
6922720,6929520," now i can integrate i can do the same chat with markdown and python everyone"
6932800,6938400," just by switching these two things uh so let's actually try to recompile and see if we can do that"
6938400,6949920," uh right so um yeah that would be interesting so hello dot uh c uh and uh well that one is actually really weird"
6949920,6955040," so oh because i'm actually looking at a completely wrong thing okay so let's actually rebuild the entire thing"
6955600,6963840," right so and let's create something like hello uh dot md right so and let's put something like i don't know"
6963840,6972080," uh inverting binary tree uh in uh python right so we're inverting binary tree in python"
6972080,6980320," and then i can have python uh and depth invert right so where i accept the root and then"
6980320,6987360," something like this uh actually pass and then i'm gonna close the entire thing oh yeah i forgot that"
6987360,6993520," my emacs is very annoying when it comes to do this kind of shit so then i can do something like lit"
6993520,7003920," hello md and it will basically comment out everything that is uh markdown related leaving only the python"
7003920,7011760," code so and then uh i can take md right and i can convert it to i don't know so so what what's the"
7011760,7017120," good markdown converter uh pandoc or something i think and with the panda i can convert it to to some"
7017120,7025840," other stuff you see it only took it only took changing three things and now i'm using a different markup"
7025840,7031760," language and a different programming language and we can try to take this thing and make them run time"
7031760,7037200," parameters so we can have configs and you can say okay so this is my begin line this is my end line"
7037200,7044800," and this is my line comment and this is like why i'm so surprised like why only haskell has to be the"
7044800,7051600," language where it's possible right because the idea came from literate haskell right so literally haskell"
7051600,7057920," doesn't do anything special to enable this kind of features it's just literally very simple parsing and"
7057920,7063760," you can make like a general tool that just does this parsing for you and that's what i just did"
7063760,7070000," i i just i just implemented the thing that haskell compiler is doing and it's super simple"
7070000,7076640," and it works on more languages and more programming languages and more markup languages so so yeah that's"
7076640,7083760," basically what i want you to do today essentially um practical to make this configurable outside of"
7083760,7088560," exactly that's what i was talking about uh i was talking about making it configurable outside of the"
7088560,7096320," program so uh but i'm already streaming for two hours uh i just wanted to show you guys that uh you"
7096320,7101440," know such a simple concept can enable such powerful things and stuff like that and also"
7102240,7111760," just share how i've used this thing before um so and i guess i'm going to go right so i'm gonna upload"
7111760,7117280," this thing on uh github at some point and maybe at some point we're gonna make this thing configurable"
7117280,7124400," right so you could have like a configuration file or maybe via the flag parameters or whatnot um oh by the"
7124400,7132480," way recently we're actually developed like a flag uh flag library do you guys do you guys watch the"
7132480,7141600," previous stream uh so yeah i think that stream is not really available yet on yeah it's not really"
7141600,7147040," available yet maybe it's going to be available in 20 minutes by the way so i scheduled it to to become"
7147040,7155600," public in uh 22 at 22 right so it's going to be available in 20 minutes uh right so and what we"
7155600,7162320," did on that stream we re-implemented a go flag module right so it's going to be go flag so it's a it's a"
7162320,7168480," very cool module it's a very cool module that is super simple and it just allows you to uh you know"
7168480,7175920," parse command line arguments we could actually just slap that module onto our program let's actually go ahead"
7175920,7188800," and do that so uh let me actually uh go to here and uh so go flag uh so goes flag in c uh rewriting goes"
7188800,7196880," flag and see video and i'm gonna do tbd and once it's up i'm gonna actually uh um edit here and the"
7196880,7204720," implementation of that flag uh library can be found on github i actually i think i call it flag dot h"
7204720,7209600," yeah yeah yeah yeah yeah so it's flag dot h and you can find it in here it's extremely simple it's"
7209600,7215120," extremely simple uh so you just call corresponding functions you want to have a boolean right you"
7215120,7220240," want to have a boolean you go flag boolean help the default value the description and you get the"
7220240,7227600," pointer where you go going to have the value of that thing then you declare all of your flags right and"
7227600,7233520," then you go flag parse and it just fills up all of these uh memory slots and then you can just use"
7233520,7239600," them down below right it's it's pretty straightforward so uh we might as well just go ahead and just slap"
7239600,7253440," it in here so uh flag h uh source code uh source code and i'm gonna just put it in here so and the"
7253440,7259360," whole implementation i think the whole implementation of this thing is like yeah uh 250 lines of code"
7259360,7265920," as you can see i like to write like this very very small but powerful libraries that are like a couple of"
7265920,7272080," hundred lines of code but they are powerful right so i'm collecting powerful ideas like string view"
7272080,7280000," or flags or something like jim i don't know if anyone remembers but jim is i think it's more than just a"
7280000,7286560," few hundred uh lines of code right oh well it's also like a 400 lines of code but essentially it's a"
7286560,7294160," immediate mode json uh serializer which allows you to just take any uh like a tree structure in c and"
7294160,7299520," just recarcerally traverse and just serialize it into json immediately without having intermediate"
7299520,7303840," representation and stuff like that so you can you can find this thing in here i really like"
7303840,7311120," collecting this like very small but yet impactful ideas right you know something simple but impactful"
7311920,7316320," when will you be making is even well i mean it's not that impactful i didn't think you need a library for"
7316320,7327840," that so uh all right so i'm gonna put this thing in here uh json immediate serializer uh maybe immediate"
7327840,7335520," json serializer all right so here is the flag so let's go back to flag"
7338640,7342880," um"
7342880,7353600," uh all right so w get and i'm gonna actually be putting it in here all right and let's include it uh somewhere"
7353600,7357520," here so let's define um flag"
7357520,7364720," implementation uh implement um i need to open this thing first"
7367920,7372160," yeah thank you so much uh then it's gonna find that h"
7372160,7376960," and here is the thing i'm going to take uh this entire stuff"
7376960,7383600," and turn it and turn it into uh flex"
7383600,7390000," so how are we going to be doing all of that i think i could call this begin"
7390000,7397600," and and comment so obviously begin is going to be a string right so this is going to be just a string"
7398240,7403760," then and all of them are just a strings okay so i think that's that's fair to assume that all of them"
7403760,7412480," are just strings uh yep so and the next thing is going to be flag str so this is going to begin the"
7412480,7417920," the default value is going to be this and the description is so what's going to be the description"
7417920,7430960," line that denotes the beginning beginning of the code block right and then we can have something like flag"
7431520,7440560," str this is end uh right line that denotes the end of the code block"
7440560,7448960," then we have a comment flag str maybe we're not going to put the space in here we're going to put that space"
7448960,7458000," ourselves uh so this is going to be comment the default value is that uh the inline comment"
7458000,7465520," of your of the programming language right so we need to have a distinction between the markup language"
7465520,7473040," language line that denotes beginning block of the beginning of the code block in the markup language"
7473040,7480400," right uh uh at the end of the code in the markup language because essentially we have two notions in"
7480400,7486400," here the programming language and the markup language uh all right so we don't need anything"
7486400,7491840," in here so here are several like three flags the next thing i need to do i need to"
7491840,7498560," uh do flag parse right so this is going to be flag parse i'm going to provide argc and i'm going to"
7498560,7507600," provide argv um so um since we're starting to use flags i think we need to have a special flag for the input"
7507600,7515760," right so i'm going to introduce it like that so this is going to be input flag str uh input um so and by"
7515760,7525360," default it's going to be null let's actually keep it null uh path to the input file there we go so if"
7525360,7531280," while parsing we had an error what we have to do we have to print the usage i'm going to print the usage"
7531280,7537760," uh and i'm going to print it to std error does usage accept and okay it doesn't accept anything else"
7537760,7544400," that's fine then uh after that i'm going to be printing the error to the standard error and then"
7544400,7550000," i'm going to be exiting with uh one there we go so we don't need anything in here and stuff like that"
7550000,7556480," so uh here when i'm printing the usage right when i'm printing the usage i want to bring the usage a"
7556480,7563840," little bit closer right um and here we're going to do flag print options i'm going to print it in here"
7563840,7571840," okay uh cool so here we declared all of the flags and we say that it's a string flags nothing special"
7571840,7577200," we parse everything uh and if there is an error we just print an error print the usage and so on and so"
7577200,7583840," forth we also want to check if uh the user provided the input right if the input is equal to null that means"
7583840,7591280," the user didn't provide anything and we have to throw an error about that so uh no input um so maybe"
7591280,7598880," it's going to be error no input file is provided um right something like this i'm going to exit with one"
7598880,7604000," we might as well also print the usage just to tell the user how you provide the input right"
7604000,7613200," all right is that it do i need anything else i don't think so all right so uh and in here the"
7613200,7619120," input is going to be like like this let's go so let's try to recompile the entire thing and uh it's"
7619120,7625840," going to be something like this so what do we have in here so it's std error uh another one is"
7625840,7636080," and a line uh okay so and the line is essentially a c string right so i should be able to do sv from"
7636720,7643360," see there we go i can do sv from sister so it's going to be sv uh from sister there we go so here's"
7643360,7650560," the sv from sister uh so and another thing so we need to integrate that so this is going to be the line"
7650560,7655840," comment uh we're going to put a space in here and then we're going to have a comment"
7655840,7661920," there we go so here's the comment here's the line and there we go and here's just the regular line in"
7661920,7667280," here so what's where is the next uh compilation error line comment okay so here we're going to have"
7667280,7675680," another one and this is going to be just a comment there we go anything else begin line so uh begin"
7675680,7686240," sv from sister there we go all right that's cool so i think this is done if i try to run lit it"
7686240,7694160," automatically uh gene uh tells me that i didn't provide the input file right uh i didn't provide"
7694160,7703920," the input file so now hello puppy now if uh i think i forgot a very important thing i forgot a very"
7703920,7711120," important thing i forgot to say that this is an options right so this is options now so this is options"
7711120,7720240," uh let me do no build right there we go so this help this help is generated by the flags library"
7720240,7727520," right it is generated by the flags library and uh we can now try to do something like input and the"
7727520,7734160," input is going to be what do i have in there uh hello md okay and hello md is not going to work because"
7734160,7741840," it is designed for python and markdown right so let's actually give it a try uh hello md there we go"
7741840,7748880," so you see it just commented everything out first of all in python uh we have comments that are uh"
7748880,7754400," you know the the hash signs there we go we just replaced the the the comments with the hash sign style"
7754960,7763760," and uh the begin in here is basically backtick three backticks and python and now it denotes the begin"
7763760,7770000," but it doesn't know about the end and i can provide the end like this uh there we go and now it works"
7770000,7780160," with python you see now you can essentially customize uh customize the uh this style like this so and i just"
7780160,7786320," use my pre-made uh you know flag library to do that it was actually pretty straightforward so and of course"
7786320,7794400," i can probably do it like that so so that's basically what we have in here so and this is almost"
7794400,7799680," production ready thing right so this is how we use it now you provide the input then you provide the"
7799680,7806240," comment style then you provide the code begin and the code end and it's customizable at runtime and"
7806240,7812800," it was super fast uh thank you piq9117 for four months of tier one subscription thank you thank you"
7812800,7818720," thank you really appreciate it so yep that's the whole thing we can also introduce like a help flag or"
7818720,7830560," something so uh it's gonna be flag boolean uh help by default it's gonna be false so bring this help uh to"
7830560,7841520," std out and exit with zero right so and then after we parsed everything uh after we parsed everything um"
7841520,7852080," we uh will check right we will check that the help is actually uh available in here right if it's actually"
7852080,7860320," true and if it is true uh we're going to just print the usage to the standard output and exit with"
7860320,7867920," zero exactly how the um how we set that in a message right so it's it's really easy to add a"
7867920,7874160," new flag in here it is very easy to add a new flag and as you can see right so this is going to be"
7874160,7878480," something like this so you run it like that but at any point well i mean it's kind of pointless because"
7878480,7883600," we have mandatory flag but you can just do help and it will tell you what kind of stuff you can do in"
7883600,7891920," here so it's kind of interesting when you provide a string that is null by default right that is no by"
7891920,7898560," default maybe it doesn't make any sense to print the default as no uh because it's kind of it's kind of"
7898560,7906400," weird maybe in a flag uh right so if i do something like this so there is a function that prints the options"
7906400,7914560," right and if you are printing the string uh maybe it doesn't make any sense to print it uh if it's"
7914560,7921600," null right so maybe we can check if this thing is not null only then you want to print the entire thing"
7921600,7927920," right so and for that we'll have to recompile the entire thing there we go so and as you can see if"
7927920,7933120," the default is null it's not going to be printing it and it's also kind of indicated that um you know but"
7933120,7939840," but i don't know maybe maybe it's fine maybe it's actually fine to to do it like that so um yeah so i"
7939840,7949360," haven't decided yet uh so thank you piq9117 for five tier one subs gifted thank you thank you thank you"
7949360,7958240," and everyone who got the subs welcome to our epic literate programming club uh all right does it extract"
7958240,7967440," code in later files uh what do you mean by that uh so essentially you probably missed the whole stream"
7967440,7972720," you probably want to watch the stream from the beginning but the idea is the following you have"
7972720,7983520," uh think like this and what this entire system does it generates file like this commenting out everything"
7983520,7988720," that is not a code block and then you can compile it as a program so that's basically what it is so"
7988720,7994160," you can generate the executable program and documentation to that program from a single file"
7994160,8000320," so this entire thing so this is some sort of article but if you take each individual piece of code in this"
8000320,8005840," article and can continue it together it's going to be a working program that compiles and actually works"
8005840,8012720," so while you're writing this article you can constantly rebuild your entire thing right you can constantly"
8012720,8019040," rebuild your entire thing and make sure that all of your code examples actually compile and then you can"
8019040,8026160," distribute the like both the article and the source code so that's the idea and the idea is to actually"
8026160,8034800," make it work for any markup language and for any programming language so that's basically the idea um"
8034800,8043040," so does it make sense so and that's precisely what we did already so yep"
8045600,8055120," that's precisely what we did uh so maybe the time has come to maybe i didn't know test that somehow uh"
8055120,8062400," it's kind of hard to tell so i need to i need i want to upload this entire thing to uh to github but"
8062400,8069200," it's like a little bit messy right now and i'd like to have a little bit more examples and whatnot"
8070160,8076080," so uh i'm not sure it's kind of difficult for me to decide what i want to do with this kind of stuff"
8076080,8082880," if you know what i'm talking about because uh here we have other examples like i will also want to"
8082880,8089680," include this hello example as a demonstration of how to use this entire thing so i'm going to start with"
8089680,8098160," just you know including only this stuff um do i want to do a no build let's actually not include no"
8098160,8102640," build i'm going to remove no build and i'm going to just leave like a make file uh right so it's going"
8102640,8106480," to be simple make file because i feel like later is going to be easier to integrate this into that stuff"
8106480,8118320," uh w all w extra std c11 uh pedantic uh pedantic ggdb all right and then we're going to have elite"
8118320,8130480," main dot c and it's going to be cc c flags all right and um okay so um"
8130480,8140640," so i'm probably going to be including so this is going to be bubble right so this is going to be bubble"
8141280,8150160," uh and uh i'm going to include this entire thing in here right so this is this stuff uh"
8150160,8159280," and there's food.c food.c um there's a lot of in here that i don't really want to include so let's"
8159280,8165360," create src folder and i'm going to put everything into src folder that is related to this thing"
8166000,8174960," uh right in the make file so this is src and this is src uh all right so this is make uh and that"
8174960,8182320," created lit and then with lit you can do input uh bubble right and it produces that thing okay"
8183440,8191600," uh so uh so read me uh well first let's actually release it on the mit license there we go read me"
8191600,8208160," simple uh literate programming system uh quick start uh it's going to be console you do make then you do"
8208160,8226160," lit input bubble bubble dot c uh then you do cc o minus c bubble dot c and then you do pdf later bubble dot"
8226160,8229280," okay so um"
8232880,8242400," uh inspired uh inspired by the literate literate haskell so and i'm going to give the link to the"
8242400,8255920," literate haskell in the read me oh come on don't be so slow okay no there we go quick start um the idea is to"
8255920,8266640," generate uh generate uh the um program the compilable the executable program and the"
8266640,8275360," documentation from the same file right uh there we go so that's how we can do that"
8279920,8288160," so i would also like to document that you can customize the um the begin and end block right"
8288160,8304000," so let's put it this way how it works uh how it works so the uh program just"
8306320,8318400," iterates uh iterates through the entire file line by line uh and if um"
8318400,8324880," okay so how to explain that i'm basically explaining the algorithm"
8324880,8335680," uh line by line and comments out everything that is not inside of the"
8335680,8340400," the uh code block leaving um"
8340400,8351360," so the program just iterates through the entire file line by line and comments out everything that"
8351360,8356240," is not inside of the code block uh generating"
8362400,8375680," so the final the final result can be passed to a compiler or an interpreter does that make sense does"
8375680,8380240," that explain what this thing is doing well enough think of that the program just iterates through the"
8380240,8385600," entire file line by line and comments out everything that is not inside of the code block so the final"
8385600,8398160," result can be passed to a compiler or an interpreter right so um um the uh uh so the begin"
8398160,8400320," um"
8400320,8402240," um so"
8406800,8434560," there we go i think that's a pretty good explanation of how this entire chat works more or less"
8436160,8442960," all right so and uh yeah i'm gonna do a committee committee so i need to generate the uh the entire"
8442960,8453920," thing right and let's uh also maybe git ignore uh the lead executable and we are offline luckily i am"
8453920,8460480," actually recording everything so it should be fine uh so i don't know what's up with that i think i kind of"
8460480,8464080," know what's going on so just give me a second um"
8464080,8472640," yeah yeah we're offline completely so it is what it is and it isn't what it isn't"
8472640,8479680," so but luckily since i'm recording everything offline i can just continue working on this thing and uh just"
8479680,8487600," make a committee committee all right so uh let's do ready set a go and i wonder if i i feel like i don't"
8487600,8493200," even have an internet right now i think i have a feeling just a second i'm gonna quickly just go"
8493200,8501440," yeah my internet is completely down uh oh it's it's up again okay it's up again so i wonder if i can just"
8501440,8511280," stop streaming uh yeah yeah so i'll have to wait a little bit anyway so uh let's go ahead and create"
8511280,8516800," the repo let's go ahead and create the repo so where are we going to be doing all that"
8531440,8542000," uh all right so this is going to be lit uh and where is this thing um simple literate programming"
8542000,8549120," system simple literate programming system so this is this one is going to be public uh so what's funny"
8549120,8555280," is that by the way youtube people uh you can see that but twitch people can't see us right so i cannot"
8555280,8562880," reconnect my streaming uh i actually said stop streaming right but since uh it stopped streaming"
8562880,8570240," while i was streaming obs have a has a hard time to just stopping right it is really difficult for obs"
8570240,8577040," to stop streaming when it disconnected by internet going down i have no idea why this is such a hard"
8577040,8583040," problem but it is what it is so i said it stop streaming and it's still stopping the streaming so now"
8583040,8589680," we have a situation when twitch chat cannot actually uh hear us or see us but youtube people can actually"
8589680,8600080," see that because i'm recording all of that so uh we can say something to them so uh low youtube uh people"
8600080,8612960," will be able to see more loop uh because uh because i keep recording because i keep recording"
8613040,8620000," um um i can't restart this stream um i can't restart this stream because it will"
8620000,8633360," up the recording um so i guess this stream is over for you guys thanks everyone uh for watching"
8634640,8644640," uh okay goodbye so and uh for youtube people we're gonna just quickly upload this entire thing and"
8644640,8650080," i'm gonna sign off and so on and so forth so uh there's not gonna be that much of an extra content"
8650080,8659520," anyway uh right so let's go ahead and do this entire thing um so i'm gonna add origin and uh there we go"
8660960,8669120," all right so and let me push that right into the repo right into the repo so uh the source code"
8669120,8675840," well maybe i can give that source code to twitch people as well so uh source code"
8675840,8687760," all right and i'm gonna put that source code into the description as well source code uh like this and"
8687760,8693840," maybe i'm gonna put it like here or whatnot all right i guess that's it for today thanks everyone"
8693840,8700400," who's watching me right now i really appreciate it have a good one and i see you next time see you all"
8700400,8708080," next time uh so hopefully today's session was interesting uh and maybe we're gonna turn eventually"
8708080,8713680," this entire thing into something something usable and maybe i'm gonna use this kind of thing for different"
8713680,8722880," explanations and what not in the future but until then uh i see you all next time love you"

start,end,text
0,5640," Hello, everyone, and welcome to yet another recreational programming session with Ahu,"
5640,13260," Mr. Azudin. So, today I decided to stream how I develop one of the tools that I actually use"
13260,20320," daily. Right. So, I developed some time ago this tool, which is called Tor, which stands for Total"
20320,28160," Recall. Right. And it's basically a reminder app. It's a very simple reminder app. So, the way I"
28160,34900," actually come up with the idea of Tor is that there is things that I need to do sometimes. Right. So,"
34900,41440," sometimes I need to do things daily or sometimes I need to do them weekly, monthly, annually, and so"
41440,47520," on and so forth. And I need some sort of automatic reminders to not forget about the things I need to"
47520,55580," do. So, I tried different things. Right. So, none of them really work for me because the services and"
55580,62200," the applications usually go out of maintenance eventually. And I kind of have to once in a while"
62200,68200," like frantically move to something else, export the data, convert the data, and put it... Like,"
68200,74980," it's usually a freaking mess. So, it has to be something that I control fully, something that I"
74980,81980," developed myself from scratch. Right. So, and also, I don't want it to be super complicated. So,"
81980,90980," it's difficult to maintain. So, I once sat down and thought, okay, so, what kind of thing I usually do"
90980,98360," daily? Right. So, like, daily I use email. Actually, I don't use email that often. Right. So, I could send"
98360,104200," myself emails. Right. But then that requires setting up all of that infrastructure and everything is usually"
104200,109880," pain in the ass. Right. So, then, like, I thought, like, I use Discord daily. But Discord is kind of"
109880,115600," unreliable in Russia specifically. Right. So, because it's banned, I can only access it over VPN. And the"
115600,121360," techniques that I use for bypassing the restrictions, they kind of have to change once in a while because"
121360,126400," the government also keeps up. Right. They also update their techniques of restricting the website. So,"
126480,132160," sort of like a tag war between people like me in Russia and the government. Right. So,"
132160,137200," they try to restrict the website. We come up with better ways to bypass the restriction. They also"
137200,142880," close that and so on and so forth. Right. So, at some point, whatever I'm doing may stop working."
142880,148480," Right. So, and I end up with, like, frantically trying to come up with something else. So, it has to be more"
148480,154360," reliable. Like, what do I use every day? Like, I use browser every day. Maybe I can come up with some sort of"
154360,159880," an extension for an extension for the browser. But browsers are just like a running fad. Right. So,"
159880,165480," they come and go. Right. So, in the changing. So, how do I maintain this extension and stuff like"
165480,167300," that? And then I realized something interesting."
167300,180620," This motherfucker. The terminal. The good old fucking terminal. It's not going anywhere. It's been there for"
180620,187020," decades. And probably will be there in 100 years. Right. So, we're going to be using this shit, like,"
187020,192540," probably in 100 years. I'm telling you. So, we've been always using it. So, it's terminal. And I kind of use"
192540,200860," it every day. So, unless I need to drag and drop some files, I also use terminal as the, as a file manager."
200860,206220," Like, like, I literally navigate things and I just, like, do, like, I open this motherfucker every single"
206220,213740," fucking day. Why not put some notifications there? Why not put some notifications there? And this is how I"
213740,219660," create a Tor. Right. So, essentially, what you do, you just, like, build an executable Tor. Right. So,"
219660,226580," you put it in the, in the path where you have a path. And you just, like, append Tor into bash.rc."
226720,232360," And that's it. Right. So, that's what you do. You append it into your bash.rc. And there you go."
232360,240160," You're good to go. So, in Tor, there's two kind of entities. I'm, the frame rate is actually dropping"
240160,244920," just a second. So, is it, is it there? Okay. So, sometimes the frame rate of my camera is dropping."
245060,252020," So, I have to just, like, wake it up a little bit. So, Tor has two kinds of things. Notifications"
252020,258960," and reminders. These two things sound similar. And because of that, I'm kind of thinking to rename"
258960,265440," them in the future. But the idea is the following. Notification is sort of like an email. So, it's,"
265440,270520," it's a notification of something that has happened. Right. So, the connection of notifications, you can"
270520,277520," think of it as your mailbox. You receive notifications into your mailbox and you can do whatever you want"
277520,282400," with them. Right. Usually, the only thing you can do with it, you can dismiss the notification. Right."
282400,292500," The second thing is a reminder. Reminder is a generator of notifications. Right."
292500,302060," And reminder can be scheduled to fire off once a day, once a week, once a month, once a year."
302060,309620," Right. So, essentially, you have a mailbox of things that you receive into your notification box and you"
309620,316840," have notification generators that fire off periodically. And that's how you manage things. Right. So,"
316840,321320," you can, for instance, create notifications directly. Right. So, there's like sort of like a,"
321320,328040," let's call them orphan notifications. Right. So, they are not generated by any reminder. Right."
328040,337000," For example, I don't know, Tor, notify by milk. There we go. So, and here is the notification. And what's"
337000,343080," interesting is that if you just call Tor, what it does, it just shows all of the current notifications. So,"
343080,351240," that means, since we put just Tor into bash.rc, you will always see these notifications every time you open"
351240,360760," your terminal. Right. So, you can create more notifications. Right. So, with test, full bar. Right."
360760,368120," So, you open it up. And then, you can dismiss them. So, I can dismiss. So, you dismiss them by an index. Right."
368120,372600," So, as you can see, it shows you an index. You can dismiss this one. Right. And you can keep"
372600,379720," dismissing them until you dismiss all of them. Right. So, how reminders work. Right. So, reminder"
379720,388200," first accepts the title. Right. So, buy milk. And we can probably put the today's date. Right. I think"
388200,394440," today's date makes the most sense. Right. So, if you do something like this. Right. It will just create you"
395080,402200," the today's date. What's interesting is that... Did it already create it? So, oh yeah. It just says"
402200,410520," that it's scheduled that notification. Right. So, then, the next time you open your terminal, that notification"
410520,420120," fires off. But since we didn't supply the period of that notification, the notification got removed. Right. It"
420120,428280," fires off only once. So, to make it fire off every single day, you just add something 1D. Right. And as"
428280,434360," you can see, this is a thing that will fire off like plus one days. You can also have one month,"
434360,441800," one year, and so on and so forth. Right. So, there's also a separate subcommand that, you know, manages"
441800,449640," notifications. If you just do remind, it shows your own notification. You can actually forget reminders and so on and so forth. Right. So, that's basically the"
449640,455960," the entire idea. It's not really well documented. And the whole process is kind of optimized for myself"
455960,462200," personally. So, because of that, I do not really recommend using it for anybody, for everybody. Right."
462200,468920," So, at least unless I fully document it. Right. But what's important to remember is just like you have"
468920,474280," notifications and you have reminders that generate notifications. And it actually worked for me really"
474280,480120," well. I used it for, I think, almost a month. Right. So, and it actually reminds me about very important"
480120,488120," things. So, what I want to do today. What I want to do today. Sometimes I want to, if I collect a lot"
488120,493960," of notifications over time and notifications, they don't really physically disappear from anywhere. Right. So,"
493960,502280," all of that is stored in the database in the home. Right. So, Tor automatically creates a .tor file,"
502280,508120," which is an SQLite database. You can actually open it with SQLite. You can take a look at all of the"
508120,513720," tables that you have in here. Right. So, obligatory migrations table. So, because over time with each"
513720,520200," version, the schema of the database may change and the application migrates your old schema automatically."
520200,526120," You don't have to worry about that at all. And here are the two entities. Notifications and reminders."
526120,531080," Right. So, and they have different schema in here. Right. So, schema of notification looks like this."
531080,536600," And here is an interesting thing. It has a field dismissed at. So, this is the point at which the"
536600,543640," notification got removed. So, it's not physically removed from the database. It is just marked as dismissed."
543640,546280," Right. So, it also has a date when it was created."
547080,552920," It has an ID of the reminder that created it. It can be new, by the way, because you can have orphaned"
552920,558680," notifications that are not created by any reminders. And you also have a time that it was dismissed at."
558680,564840," So, and over time, you're going to have this log of notifications, like a historical data of notifications,"
564840,572360," that you might be interested in analyzing, for instance. Right. So, the same goes for reminders."
572360,579000," Right. So, we can take a look at the reminders. So, here they are. So, for example, you have a date when"
579000,585800," it was created. You have a date when it's scheduled at, when it's going to fire off. You have a period,"
585800,592760," how often it has to fire off periodically. Right. Every time it fires off, the scheduled at is moved"
592760,599240," at the given period. Right. So, it basically reschedules itself. Right. And you have a date when it was"
599240,604280," basically removed. Right. So, when it got stopped. Also, like, you have some interesting historical"
604280,610200," data in here. So, and all of that is kept in the database for you to analyze maybe later, if you want"
610200,619960," to. So, what I was thinking is that, what if I actually build some, maybe, you know, plots, or maybe some"
620600,628520," table of stats as a web page. Right. So, how I was thinking. So, imagine that you do something like"
628520,636760," a tour serve. And what it does, it literally starts up, like, HTTP server that you can access,"
636760,643880," like, here in localhost. Right. At 6969, probably. And it just, like, shows you stats of your notifications,"
643880,648120," reminders, and stuff like that. It's just, like, it has a built-in web server. You can just open it up,"
648120,655800," and maybe look at it. Right. So, but here's the thing. The application itself is written completely"
655800,662440," in C. Not only that, it is actually, doesn't really have that many third-party dependencies."
662440,667640," It has SQLite, but it's statically linked into the executable. So, if you take a look at the Tor"
667640,673560," executable. Right. So, here it is. You can take a look at the file. And one thing you may notice,"
673560,681560," is that it's actually not a dynamic executable. It's a static executable. Right. So, that means"
681560,690280," whatever web server I will come up with has to be built in into the executable itself. This is something"
690280,697240," that I've already done before. Right. So, making an HTTP server that is usable locally and it's not meant to be"
697240,702920," used outside. It's rather easy. Right. So, it's just a TCP connection. You just respond with a very simple"
702920,710200," HTTP header request response. And that's it. Right. So, since you are the only user, you don't have to"
710200,717560," think about scaling this entire thing. You don't need HTTP 2, which, like, multiplexes the connections and"
717560,722760," shit like that. Like, there's, in the latest HTTP standards, there's a lot of crazy fucking shit."
722760,729320," Right. So, there's a lot of crazy fucking shit. But then, what if you have one single user every"
729320,736120," single time? Who fucking cares then? Right. So, just like open TCP connection and just like send HTTP"
736120,740840," headers and stuff like that. Right. So, purely locally. Right. So, I'm planning to use it purely locally."
740840,747240," And if you want to scale that approach, you can always slap Nginx reverse proxy on top of it and"
747240,755080," you're going to be Gucci Tomaguchi. Just saying. Right. So, I think sometimes people just like"
755080,760920," overthink it too much. No one needs HTTP 2. Nginx handles all that slope. Really? Like, I'm not a really"
760920,768840," infrastructure engineer. Like, I know very little about all of that. Right. So, like, Nginx just like does"
768840,778120," everything. Right. Another HTTP server in C. What about HTTPS? It's going to be literally the same. It's"
778120,785160," just like you're using OpenSSL. So, as far as I know, in GIST, I already did something like that. So,"
785160,794440," REXIM, HTTPS example in C. But again, locally, you don't really need that."
794440,802920," Right. So, some time ago, I just did this example that just shows you how to make an HTTPS request"
802920,811560," purely in C using OpenSSL. Which we may actually use today, but that's besides the point. It's not that hard."
811560,817400," It's like a little bit additional code with OpenSSL, bullshit and stuff like that. But ultimately,"
817400,822360," it's not that different. You're going to end up with just a socket, SSL socket from which you"
822360,828840," read and write the same way you do from any socket. It's just like additional layer of abstraction. Right."
828840,833000," So, you can actually like check it in here. And obviously, for people on YouTube,"
833000,838280," it's going to be in the description as well. Right. So, just saying the same."
838280,845880," Jai is spotted. Do we have Jai? Oh yeah, we have Jai. What if I don't remember?"
845880,848360," So, I suppose I just translated this."
854520,862680," Classic. Anyway. So, right. Jai being based as usual."
862680,872440," All right. So, what I was saying, yeah. So, we can do this shit locally. And so, the only problem is,"
872440,881320," how do you like do the frontend part? Right. So, we can do the frontend entirely in JavaScript. Right."
881320,886600," We can do frontend entirely in JavaScript. And then, just make maybe like a JSON"
886600,892600," REST API or whatnot. That's one way to do that. It's actually kind of"
892600,897160," kind of cool way to do that. I should have actually considered that because I also have"
897160,906360," a very cool project called Jim. There you go. It's basically JSON, like immediate mode JSON"
906360,911800," serialization. I could have, yeah. I could have just implemented like JSON REST API."
911800,920360," And, right. So, wrote the client side in JavaScript. Right. So, and it just like served this thing like"
920360,925800," that. But to be fair, I kind of don't want to do that because that kind of means that I now have to"
925800,933080," work with two languages, two programming languages. And it's just like, yeah. I'd rather go the old school"
933080,939480," way of doing things and just like have a server side with forms and stuff like that. Basically,"
939480,946120," the thing that I did for to do awesome for this one, because remember this thing like to do awesome is"
946120,953160," when I wrote a to do application in a sample. The thing is that like it uses completely server side"
953160,960280," rendering, right? So, it just generates HTML and stuff like that on the server side and it just like sends"
960280,966440," you a rendered thing. So, I'm going to actually put it in here. Right. So, I decided to go that route."
966440,972280," But the problem is that when you do the server side rendering, you usually need like some sort of like"
972280,979720," a template engine similar to things like I think like Jinja2. Do people still use things like Jinja2 and"
979720,987160," shit like that? Do people still use something like this? All right. So, is there any good examples"
987160,994600," on how it looks like? So, here is the Jinja2. I opened the commentation, but"
995400,1003160," where is an example introduction? Bro. Bro. Where is the..."
1003160,1013480," This is a really bad website. Like I just want to see an example of a template. Yeah, there you go."
1013480,1017000," Finally, I found something. I'm not sure if it's visible because Boomer doesn't really work on the"
1017000,1021720," machine anymore, but yeah. So, something like this, right? So, usually when people render shit on the"
1021720,1028520," server side, they usually have something like this. I suppose this is sort of like an old lost art"
1028520,1033960," because of the React and everyone is just doing everything on the client side because, I mean,"
1033960,1040520," we don't have enough money in our trillion dollar startup to, you know, do everything on the server side,"
1040520,1047000," right? But to be fair, like I heard server side rendering kind of having a coming back. Web devs"
1047000,1052280," rediscover it again that you can actually do that. Even though people have been doing that for decades,"
1052280,1057560," they suddenly realize, holy fucking shit, you can just concatenate strings at the server side and you"
1057560,1065160," have HTML there. Holy fucking shit. But anyway, right. So, we need something like that. And so,"
1065160,1073160," how do we have something like that in C? This is a template engine thingy for specifically Python,"
1073720,1078840," right. But we want to have something like that in C. How can we have something like that in C?"
1078840,1088920," Well, I have an interesting treat for you. A long time ago, a long time ago, I think like almost five"
1088920,1097640," years ago, I actually tried to implement like a web application entirely in C in a similar fashion with"
1097640,1103320," the server side, the rendering and stuff like that for a schedule website. I used to have a schedule website"
1103320,1108200," because I used to have a schedule for string, by the way, believe it or not. I used to have a schedule. Now,"
1108200,1115560," I abandoned the schedule, right? Because slope doesn't have a schedule. You always slope. You don't need a schedule for that, right?"
1116360,1127320," So, and there I came up with a very interesting fucking idea for for templating in PRC. So, let's"
1127320,1132520," actually take a look at it. So, it's a very old project. It's abandoned project, right? So, but it"
1132520,1135720," it was ambitious one. Let's say like that."
1136440,1143080," Skidoodle. Oh, no, no, no, no. It's a post. I'm sorry. I forgot. None of my projects are abandoned."
1143080,1151560," It's just post. I can come back to any project at any time like I do right now, right? So, look at that."
1151560,1158120," It's from 2020, right? So, it's from 2020, but I think it started way, way earlier, right? So, I think"
1158120,1163480," it's like maybe five years, four. Yeah. So, there you go. Some of the files are five years old. So, it's from"
1163480,1168680," five years. So, it's called Skidoodle, right? So, and it's basically simple event schedule web"
1168680,1174840," application in C. It's enhanced. Yeah, exactly. So, let me put that in the description as well. So,"
1174840,1181080," for us, we have a lot of references, right? So, it's a pretty packed, action-packed stream today."
1181080,1188040," Right. So, and goals is to implement back-end for the schedule. So, the cool thing about the schedule"
1188040,1193320," thingy that doesn't work anymore properly is that it's completely back-endless, right?"
1193320,1198680," So, I want to have a back-end, right? Implement enough web-related code to later extract it into"
1198680,1204200," an epic web framework in C. I'm still working on that. Maybe eventually it's going to work."
1204200,1213800," But here's the thing. Here's the thing. It has files which end with .tt."
1215480,1225560," They end with .tt. So, for example, error page. Look how they look like. Look how they look like. So, you have an"
1225560,1232680," actual HTML and then you have like an error code and stuff like that in here. I wonder if we have more .tt"
1232680,1240600," files. More .tt files. Just a second. It looks like it's the only one. So, I didn't really implement more of"
1240600,1245880," them, but I could've actually implement more of them. So, is there? Okay. So, there's a public."
1245880,1253480," Nah. I haven't implemented it. But let me show you the main idea. Look at default.nix. Oh,"
1253480,1261960," holy shit. Zozin, Zozin, have you heard about NixOS? Zozin, have you heard about NixOS? I heard that"
1261960,1268520," it's the future of Linux distribution. Zozin, you need to try NixOS. You will like it. You will really"
1268520,1276760," fucking like it. You need it. It's the next best thing. Anyways. So, yeah, I didn't use NixOS anymore"
1276760,1282040," because I grew up out of that phase. So, let's actually take a look at this thing. I think it's"
1282040,1290520," going to be interesting. Right. So, Zozin, and let's actually just just clone this entire stuff"
1290520,1301800," because I think it is really fucking cool. Okay. So, and so we have a make file, right? A make file. Yeah,"
1301800,1310040," this is actually kind of cool. So, make file builds out of this thing. So, the template renderer is called"
1310040,1321400," tt in here. Right. It's called tt and it's the thing that turns the .tt files into .h files. So,"
1321400,1327400," we have a template engine written in C that takes the templates and turns them into C code."
1327400,1335640," So, and you know what's funny about this template engine thing is how fucking simple it is. You won't"
1335640,1341400," believe how fucking simple it is. The entirety of this engine is, yeah, 60 lines of code. This is the"
1341400,1347560," entirety of the template engine. This is literally the entirety of the template. I'm not even"
1347560,1353320," fucking joking. It's just like that's really it. So, let's try to build this entire application. I"
1353320,1358920," wonder if it still builds. Well, I mean, I checked it off screen. It actually builds. So, one of the things"
1358920,1365880," it does, look at that. So, it calls tt on error page template dot ht and it just redirects the output"
1365880,1372520," to here. Right. It redirects the output to here. Let's take a look at the output. Right. Let's take"
1372520,1376840," a look at the output. This is how the output looks like."
1376840,1390040," So, what exactly is going on in here? What exactly is going on here? So, the way the thing works is"
1390680,1401000," it treats everything as just a text up until it encounters percent."
1401000,1407800," So, the template just follows the text, right? So, it loads everything into the memory and just follows"
1407800,1414440," the text. Okay. So, like I follow until I encounter the percent. Okay. So, I encounter the percent. I take"
1414440,1422360," this entire chunk and I transform this entire chunk into a single write call and which writes literally"
1422360,1432360," the bytes of that chunk. Okay. So, then I switch to a different mode where I collect everything I see"
1432360,1443800," up until the next percent and I treat that literally as C code. I paste this entire chat literally as C code."
1443800,1450920," Right. So, and there you go. Here is literally C code, int code. Then I switch back to this mode where I"
1450920,1457640," collect everything up until the next percent. I just treat it as a blob of bytes which I just write into"
1457640,1464760," some sort of output. Then the next thing I see the C code and here is the C code and so on and so forth."
1464760,1473080," So, you get this interesting thing that you can basically print huge blobs of text with just"
1473160,1480120," literally writing that text with just literally writing that text, which enables you to write"
1480120,1488360," very cool shit. Let me show you. For instance, let's do something like index. I don't know like"
1488360,1494360," index.h.tt. Right. So, something like this and here we can have some sort of a title."
1494360,1503080," Right. So, here is the title. And in here you can... So, title. You can just do... I don't freaking know."
1503080,1510520," Like, for loop. You can literally put a for loop in here. Just iterate 10 times. Just iterate 10 times."
1510520,1516920," Then you obviously need to open. Right. So, you need to open the body. Then you close... Where is the"
1516920,1523720," percent? Here is the percent. You close the body in here. Right. And you can just like generate items. Maybe"
1523720,1532280," header. Right. So, here you can have header i. There you go. So, after that, what you can do,"
1532280,1543000," you can then just go tt and index.h.tt. And you've got this literal code. Right. So, it prints something."
1543560,1550600," Then, it has a loop where it, in the loop, prints out new things. It just prints out new things."
1550600,1557400," Okay. How do we fucking use this code? Right. How are you supposed to use this entire shit?"
1557400,1563560," Let's actually search where do we even use this specific file. Right. So, we can do something like"
1564120,1570360," or ripGrap. And what's funny, it is literally included in mainc. Right. 37."
1570360,1571000," We..."
1571000,1580440," We literally take this entire header and include it as a body of the function. And in that body of"
1580440,1588760," the function, we specify what is out and how to treat this word int x. And that word int x,"
1588760,1593320," it basically just converts integer into like printable thing and stuff like that."
1593320,1600280," That's how it works. And every time you want to render this HTML page. Right. So, you just call this"
1600280,1607640," function with the output. For instance, it is designed like so because it's supposed to render"
1607640,1615080," progressively in a sense that the user made the request and we directly render the template into the"
1615080,1620840," response. Look how we're using it. Look how we're using it. Okay. So, an HTTP error has happened."
1620840,1627720," We accept NFD, which is literally file descriptor of the socket. It is literally a file descriptor of a"
1627720,1635080," socket. Right. So, here we render response status line, header, body start and stuff like that. And then we"
1635080,1642680," render the HTML error page. That code that got generated, it literally writes all of that shit into the"
1642680,1649880," fucking socket. And I came up with this system five years ago. When I discovered it again, I was like,"
1649880,1658600," holy fucking shit. Did I come up with that idea? Look, I like how fucking simple this idea is. Look at this."
1658600,1665560," Look at this. It's so fucking dumb. But it's as powerful as Ginger basically, isn't it?"
1666600,1672520," Right. Because essentially it allows you to render the templates literally with C, like you have embedded C."
1672520,1679400," This is fucking cool. I want to use this shit in Tor."
1679400,1687640," Right. I want to use that. Right. So, if Tor is going to have some sort of like a built-in web server,"
1687640,1692520," right. So, it's probably going to be generating like a list of notifications, right, for you to explore,"
1692520,1699320," or maybe a list of stats. It might as well do that through that thing. Right. Why the fuck not?"
1699320,1706440," It would be kind of cool. Okay. So, we generated this thing. Right. So, here's the template."
1706440,1714120," From that specific template, we can generate a new thing. So, let's actually redirect that thing into"
1714120,1721800," index.h. Right. So, here we got an index.h. Now, we can probably write a program. Right. So,"
1721800,1731240," something like index.c. Right. So, and we're going to do std.io. And in here, we're going to just do"
1731240,1739560," something like this. Return h. And we can come up with a function render index. Right. Render index."
1740440,1747640," And here, we're going to literally include index.h that we just generated in here. So, we include that."
1747640,1754920," The things that we have, we have out. So, we need to specify that out is std in file. No. I think that's"
1754920,1762120," how we do that. Right. So, that's what it is. And also, we have int i. And I suppose the thing we can"
1762120,1773160," do in here is we want to do printf. Honestly, it would be kind of cool if this thing actually"
1773160,1784040," was also a macro. Right. So, something like out. So, then it only accepted this byte array and its size."
1784040,1789640," So, then I can define what exactly this thing means. Like, depending on the context. Right. I think"
1789640,1795400," we'll have to rewrite this template thing to actually do that at some point. But anyway. So, then we have"
1795400,1804520," an int. All right. So, it accepts x. And I suppose, do you have like a e to a? No. I probably have to use..."
1804520,1811000," Oh, there is a dprintf. I forgot. Gnu actually provides you a very cool thing which is called"
1811000,1820120," dprintf, which instead of the libc file pointer, accepts file descriptor, POSIX file descriptor. So,"
1820120,1825240," we can use printf with the POSIX file descriptors. It's actually very cool, especially if you work with"
1825240,1830920," sockets. Right. So, you can literally printf into a socket using this function. But it's not a standard"
1830920,1838440," C function. It's a Gnu extension. I'm pretty sure it's a Gnu extension. Maybe it's a POSIX extension."
1838440,1845240," Look at that. It's not... Yeah. So, POSIX mentions that. X open source standards, like some open source"
1845240,1851480," standards... Well, I mean... No, no, no. Specifically dprintf is either POSIX or a Gnu. All right. So,"
1851480,1855560," yeah. It's actually a pretty cool extension, I think. I think for POSIX specifically."
1856440,1863080," So, anyway. Here, we can do std out, actually. I apologize. It has to be out. I'm sorry."
1863080,1869560," Right. And in here, we can just do d. Right. So, that's how it's going to go. And in here, we can"
1869560,1875560," just undefine all these things that we defined earlier. But honestly, if we're going to be rendering"
1875560,1880760," everything, this might as well be a global thing. Right. This might as well be a global thing. Right."
1880760,1885480," So, if we have several of them, it's going to be totally fine. And afterwards, what we're going to do,"
1885480,1890680," we're going to just do render index, which is going to call this entire thing. And I'm going to just"
1890680,1897480," try to compile this entire stuff. Index, index.c. Right. So, it doesn't like that there is no write,"
1897480,1905960," because we probably didn't include the right things. Right. So, let's do main write. It's not like two."
1905960,1913800," Yes. That's the second one. So, it's uni std. That's what we have to include. Uni std is basically"
1913800,1922600," windows.h of unix. Right. So, it doesn't like that I didn't put this thing in here. There we go. So,"
1922600,1929080," that compiled. So, that entire thing compiled. And now, if I try to do index, this is what it generated."
1932120,1939160," And we completely fucked up somehow. Which is funny, isn't it? Because I forgot to put x in here."
1939160,1944120," That's right. So, let's try to recompile it one more time. And let's try to do index. And as you can see,"
1944120,1950920," we have header 0, header 1, header 2, header 3. And it got generated originally from this template thingy."
1950920,1956600," And we literally have embedded C. And this is how it worked. Right. So, we can redirect this thing into"
1956600,1964520," index.html. And we can now open that index.html with a browser, like so. And here are all of the"
1964520,1971720," indices generated from C. So, that's the template engine implemented in C by me five years ago,"
1971720,1975800," out of stroke of genius somehow. I don't fucking know how I came up with this idea. But it's"
1975800,1984680," fucking dope. I freaking love this idea. Like, holy shit. And all of that is in fucking C. Like,"
1984680,1992840," how cool is that? How fucking cool. And what's cool is that it's how transparent it is. Like,"
1992840,1998440," when you use all of these template engines, they always feel like a fucking magic. Right. So,"
1998440,2004600," you have a template. You have a magic black box. You feed the template into that. And some"
2004600,2010680," additional parameters that the template may use. And it's just like... It spits out HTML. How exactly"
2010680,2015640," does it do that? How to configure this thing? You don't fucking know. Here, everything is transparent."
2015640,2024120," It doesn't hide how it works. Right. It's a very simple logic. Everything up until percent is just bytes."
2024120,2031400," We output bytes. Then, it's C code. We copy-paste that C code. Percent again. Bytes again. So,"
2031400,2038280," it basically, the template engine flip-flops between two states. Binary state, code state. Binary state,"
2038280,2042760," code state. And you use it however you want. You can put whatever the fuck you want. Right. And you can"
2042760,2050520," customize it however you want. Right. So, it's just... It's so fucking genius. If I do say so myself."
2050520,2058840," But honestly, I don't feel like I created that. Right. I'm like... I'm supposed to be proud,"
2058840,2063080," but I don't feel like I created that. I think like five years ago, I was a different person. It's just like..."
2063080,2071800," I feel like somebody else came up with that idea. Maybe I steal it? But from whom I steal it? Like,"
2071800,2076120," I don't remember stealing it from anybody. But I mean, this isn't a cool idea. It's so fucking cool."
2076120,2083080," Hybrid text preprocessor. Yeah. That's what it is. And let's take a look at the implementation of this"
2083080,2086360," TT. I don't remember why I came up with that. I think..."
2086920,2096120," using template as a variable name to piece of C++ devs."
2096120,2107240," So, because fuck C++ devs. They do not deserve simplicity. You can't compile this code with C++ compiler."
2107240,2114280," You can't do that. Anyway. It's so goddamn cool. Right. So, it uses..."
2115560,2130840," Oh. This is a proto version of the sv.h library. S.h. It's not even called string_view. That's how"
2130840,2144200," fucking all this code is. It's basically string_view, but it's not called string_view. Right. So, that is insane. This is a prototype of"
2144200,2155480," the famous sv.h. Oh, I mean, it's just sv. Right. So, it's like before I decided that I"
2155480,2161080," repeat this code enough times that I need to separate it into a library. This is how old it is."
2161080,2168120," It's so fucking cool. I need to look into my older projects more often because sometimes I just find"
2168120,2175800," gold nuggets like that. I can reuse. Right. So, that's basically this turned into sv library."
2175800,2180440," So, let me put that in the description for anyone who's interested."
2180440,2190680," So, and the way it works, it literally basically chops off by a percent. Right. And then"
2191400,2200200," just has two modes. C code mode. Okay. Compile C code. Then, if it's not a C mode, compile byte array."
2200200,2204840," And it just like literally flip-flops in the loop until it processes the entire template."
2204840,2209720," Like, this is the entirety of the logic of a fucking template engine. It's insane."
2211320,2216680," Just like flip-flop between two modes and just either compile C code or compile byte array. And"
2216680,2222600," compiling C code, I suppose, it's very simple. You literally just, you just fucking copy-paste this"
2222600,2228280," shit. Byte array is a little bit more involved. Right. So, we're converting each individual byte"
2228280,2233480," into this like the string literal and so on and so forth. And I suppose one of the things that"
2233480,2239160," probably would change in here today is to just like make it like that. Just make it out. So,"
2239160,2247240," then I can redefine this macro to something else, to whatever I need. Right. To output it to whatever"
2247240,2254840," place I want. Right. So, this is how I would change it. Just do out. Right. And also, it has a thing,"
2254840,2264440," which is a read entire file. Yeah. Just read entire file. Man, it's so fucking cool. I love it. I'm sorry."
2264440,2269640," I was like, I'm just gushing around with this old code. It comes from the time when I was, I don't know,"
2269640,2276040," when I was happier. I don't know, five years ago was better time, I think. It was less worse, less hatred,"
2276040,2280840," less all of this bad shit that's going on in the world. And it's just like, I look at this code,"
2280840,2286360," this code, this code was written by a happier person. And maybe that's why it makes me happy."
2286360,2290040," It's just like, it reminds me of those times. It reminds me of those times."
2290040,2297720," Old code before the world went to shit. Sadly. Truly sadly."
2297720,2308680," Good old days. Good old days indeed. So, one of the things we can try. We can try literally just"
2308680,2315400," copy-pasting this code. Right. Just copy-paste this code into the Tor project and maybe try to compile it."
2315400,2318760," Right. So, obviously, it will need third-party dependency and stuff like that. It will fail."
2318760,2325640," Right. But we will try to fix it and see how we can fix that. So, let's go into Tor."
2325640,2334920," All right. So, it even has JSON. This thing has JSON. Bro. What the fuck?"
2335640,2340040," I was parsing JSON manually? Am I an idiot? I think I'm an idiot."
2340040,2340600," But anyway."
2340600,2350040," Okay. That is hardcore. UTF-8. I was handling UTF-8 myself."
2350040,2358680," Damn. That is like almost full-fledged web engine or something. What the fuck?"
2359560,2363400," Who's this chat developer who developed all of that shit? What the fuck?"
2363400,2368760," Anyways. So, let's go and try to maybe build all of that. So, what a mess in here."
2368760,2379160," Okay. So, here we build. Yeah. So, first we build SQLite. Maybe here we want to build"
2379880,2388280," a TT. Nope. CMD. We can actually do CMD. Append. Right. CMD. Right. So, and we can do CC."
2388280,2396680," Let's enable all of the possible warnings. Right. And also the debug information. Right. So, that is very"
2396680,2404840," important. And let's redirect all of that into a build folder. Right. Build folder as TT. Right. So,"
2404840,2410200," let's actually build it into the TT. And we're building TT.C. So, that's what we're building."
2410200,2416440," Then, we're going to do CMD. Run synchronously. We're going to be running this command synchronously."
2416440,2423000," So, let me open node.h. So, I have out the completion. So, synchronously and reset. So,"
2423000,2428120," reset will just reset the dynamic array CMD so it can be reused for future commands. That's what it does."
2428120,2433080," Nothing special, honestly. If it fails, we just return one and we don't have to log anything because"
2433080,2437240," this command, in case of a failure, will log everything automatically. So, it's convenient"
2437240,2441560," like that. All right. So, let's try to build something and see what's going to happen. Okay."
2441560,2450040," So, it wants to have Cs.h. But it needs all of that for the string. So, you know what? I think we can"
2450040,2456280," depend on knob because knob has its own string view implementation, which we can utilize. Right."
2456280,2462760," So, we're going to do, I suppose, knob implementation. Right. So, I'm reviving old code, by the way. I'm"
2462760,2468920," just to rewind the old code. And also, I want to maybe strip the prefixes. Strip the prefixes. So,"
2468920,2474760," we don't have to do any of that. All right. So, everything seems to be compiling. So, it doesn't,"
2474760,2482520," yeah. So, it tries to use a string. All right. But it tries to use it in a function that reads the"
2482520,2491960," entirety of the content of the file and knob already has such function. It's a read entire file. Right. So, here it is."
2492440,2499320," We might as well. It's write entire file. Nob read entire file. So, here it is. Right. So, I suppose we"
2499320,2504920," don't need this function anymore because we can use the function from knob.h. So, that's what we can do."
2504920,2508760," So, let's actually take a look at the rest of the compilation errors. Compiling SQL. So,"
2508760,2515880," we're probably going to be using now string views. Let me query replace string with just string view."
2517240,2524920," like so. Right. So, that's what we're going to have. So, I understand that C++ compilers won't"
2524920,2529240," be able to compile it. So, let's actually replace template to something else. So, how are we going to"
2529240,2537560," call it? Maybe temp? Let's call it temp. I think that makes sense. Right. So, let's not be childish."
2537560,2543800," Okay. Let's not be childish. So, it calls it len, but in the string view library, it's actually called"
2543800,2551160," count. Let's replace that to count. Boom, boom, boom, boom. All right. So, what else are we having here?"
2551160,2557800," So, file is content. So, we're supposed to use the read-entire file. So, that's the function we're"
2557800,2566280," supposed to use. So, the path is the file path in here and the output is done through this string builder."
2566280,2572440," So, we enter. Yeah, I have a snippet for sb that creates a small break."
2576280,2579240," I keep forgetting about this prefix. It's so fucking funny."
2579240,2589800," So, anyways. So, and the snippet is usually activated when you press tab. So, and I also use"
2589800,2598520," tab for indenting. So, it got activated. Anyways. So, this is how we do that. And, okay. So, this is the"
2598520,2604920," thing. If it failed. All right. So, we just return one because it's automatically locked. And now we need"
2604920,2612440," to convert a string builder into string view. In knob.h, I recently introduced a function sb2sv."
2612440,2622760," Oh, shit. So, it's actually... I'm using a very old knob. What the fuck? So, the current version of knob"
2622760,2629640," is something like 1.9 already. So, this is a very old knob. It is time to update, chat. It is time to"
2629640,2639160," update your dependencies. Right. Legacy knob. Legacy knob. Yeah. So, 1.9 and shit. So, let's actually go ahead"
2639160,2649320," and download the latest one. So, and see how much different it is. So, okay."
2649320,2660920," And let's get it. Let's get it. Oh, we didn't replace it. Freaking. Okay. Look at the difference in size."
2661800,2669320," 48 kilobytes. 63 kilobytes. Look how much more slope we actually put into the knob.h. So, it's more"
2669320,2674280," bloated. More bloated. Which means it's better. Obviously. Obviously, that's what it means."
2674280,2684360," Anyway. So, 20 kilobytes of slope. Holy shit. So, but what we did, we introduced a very important"
2684360,2689800," function. Sb2sv. So, it's a very simple function that just like allows you to convert StringBuilder"
2689800,2695000," into StringView very easily. And what it does, it just goes to like this function. It's just like"
2695000,2699640," reconstruct StringBuilder as StringView. Because they're kind of similar if you think about it."
2699640,2708120," So, StringView has a pointer to where the data starts and how much data you have. Right. StringBuilder,"
2708680,2715640," on the other hand, StringBuilder. Where is the StringBuilder? Let me find it. Ah! StringBuilder."
2715640,2723240," It has a pointer, count, and capacity because it may resize. Right. Because it keeps resizing and"
2723240,2731320," everything. So, yeah. So, they're kind of similar. Because of that, you can very easily turn StringBuilder"
2731320,2737160," into sv. Right. So, I can do something like that. And there we go. I've got a template. And now, if I try"
2737160,2743560," to rebuild the whole thing, it almost works. So, chop until characters. So, I suppose..."
2743560,2751080," So, the current function is chopByDelimiter. So, that's how it's called. That's the name of the"
2751080,2757960," current function. Right. The chopsByDelimiter. And I think that's the last error that we have to... And"
2757960,2765400," it compiles. So, it compiles. So, it wants to... Oh, okay. So, opening files... Yeah, this is because I"
2765400,2776360," accidentally... Huh... DL... Oh, using DL open a statically opened library. It doesn't like something about..."
2776360,2784440," Ah! I think I know what's going on. I think I know what's going on. So, I'm compiling everything statically"
2785320,2793720," with SQLite. But SQLite has some features specifically for loading extensions that doesn't"
2793720,2800920," allow it to be compiled statically. So, what I have to do, I have to recompile my SQLite without extension"
2800920,2806600," support. So, I can then compile the entire thing statically. So, let me... Let me actually see. So,"
2806600,2814200," lib.c... So, when I'm compiling SQLite... Yeah! There we go. So, as you can see, I explicitly"
2814200,2819080," omit load extension because otherwise I won't be able to compile. So, the thing I have to do now,"
2819080,2827240," I have to remove my build thing. Right. And start again. But honestly, this is besides the point because"
2827240,2832680," that's already failing of the compilation of the application. The compilation of the template engine"
2833400,2840440," succeeded. We already have buildtt, which I just removed because I removed build. Anyway,"
2840440,2844360," let's just rebuild the whole thing anyway. So, the problem with rebuilding SQLite is because it"
2844360,2849160," takes 20 seconds. Right. So, while we're waiting for 20 seconds, right. So, I'm going to acknowledge"
2849160,2854520," the subs. I'm going to acknowledge the subs. Thank you so much all XRise for tier 1 with the message:"
2854520,2861880," Wanzo's in year. Pog, Wanzo's in year. Nice. Kafka... So, Kafka Fura, thank you so much for this, Brian,"
2861880,2866440," with the message: I love what you do. Thank you. Your passion for recreational programming has inspired me"
2866440,2870840," to keep learning, experimenting with programming concepts. Thank you. You're welcome. We need to do..."
2870840,2876280," We need to have more people like that. Right. So, we need to have more people who experiment and try new"
2876280,2881480," things and don't give a shit about best practices and stuff like that. Well, obviously, when you are"
2881480,2886360," at work, right, you just follow whatever your company tells you because they are the ones who"
2886360,2893560," pay you money. But when you are at home and doing your own pet projects, you don't have any checks and"
2893560,2899080," balances in place. So, you can do whatever the fuck you want. Like, at all. It's just like, try whatever."
2900040,2907160," Try to write, you know, mission critical code in assembly. But, I mean, be careful with that. But"
2907160,2911960," you can just try things. And it's fun. It's fun. You explore things. You become a better programmer over"
2911960,2917400," time. So, never normal. Thank you so much for your time. Al Swider, I hope I pronounced your nickname"
2917400,2921080," correctly. Thank you so much for your time. Chik Chiki, thank you so much for your time."
2921080,2929000," Sandy X with a message: one year of kudin. OMG. Ah! Thank you so much for tier 1. Dexsttp, thank you so much for tier 1."
2929000,2934840," Ochi 1. Thank you so much for tier 1. And Ysoftware with a message: Recreation Programming Love."
2934840,2938120," Recreation Programming Love, indeed. Thank you, everyone. Thank you, thank you, thank you."
2938120,2943080," All right. So, we compile. And everything's working. Everything's twerking. All right."
2943080,2951640," So, how are we going to be approaching that? So, let's maybe create a simple page"
2953240,2960120," that renders all of the notifications. Something like that, right? So, how can we even do that?"
2960120,2969080," So, maybe we're going to call it index h.tt, right? So, it opened the old thing, the h.tt, there we go."
2969960,2977400," So, doc type html. Maybe I'm going to switch to html mode. Do I have a tt mode? Maybe not. Whatever."
2977400,2988600," So, tag html, tag i head. But maybe I want to actually do it like this. So, and then tag body,"
2989880,2998440," tag i title. And then here we're going to have a tor, right? So, that's what we have. And essentially,"
2998440,3006680," we can start rendering things. So, I suppose how we're going to call the array that contains notifications."
3006680,3014600," So, in tor, when I load active notifications, I just call them notifs. Okay. So, in a template,"
3014600,3021480," we can also call them notifs. Notifs count plus plus i. And I open this entire thing, right? So,"
3021480,3029800," then I close this entire stuff. So, I need to realign this stuff like this. And okay. So, the indentation"
3029800,3036760," goes all over the place. But anyway, one, two, three, four. So, what do we want to have in here? So,"
3036760,3041800," maybe we're going to just have all of that in p, right? So, this is going to be just in p."
3042920,3054600," And so, let me think. Let me think. Afterwards, we just need to print this stuff as a text."
3054600,3060440," But we have to be a little bit careful, right? So, because you can accidentally inject some HTML."
3060440,3066440," We're not going to worry about that for now. But this is something that we'll have to worry about."
3067880,3079800," But maybe we can have some sort of like an escaped out, where I can just do notifs item i, right?"
3079800,3089960," Notifs item i. And a single notification has a title. So, we want to try to insert a title in here,"
3089960,3096440," right? So, maybe it makes sense to actually do it like this. I don't know. What's the best way to"
3096440,3101240," indent things? Starting from here, maybe? One, two, three, four. Looks a little bit silly,"
3101240,3107400," but maybe that's all right, right? So, yeah, I guess that's all right. So, that's going to be our"
3107400,3114040," sort of like a template. So, afterwards, after we created this template, we need to render that template."
3115320,3124040," So, we already have the tt. So, that means we can do cmd append, cmd. We can call to the builder folder"
3124040,3136040," tt. And then we can call upon the index htt. Right. So, after that, we just call this entire command."
3136040,3142040," Right. And as you can see, it just rendered this entire thing, but it didn't save it into a file."
3142680,3150440," So, how can we save it into a file? We can update tt.c to save that into the file somehow. I think"
3150440,3156600," that would be kind of nice. Or we can use a new feature of redirecting the files from knob. But"
3156600,3163720," honestly, it's a little bit a pain in the ass to do that. Right. So, because it's too low level in a sense."
3163720,3171160," So, there is this thing knob cmd redirect. Right. So, it's a structure that contains"
3171160,3180520," basically file descriptors. And you have to open file descriptors yourself and you have to close them"
3180520,3186840," afterwards. It's kind of a low level feature. And it's not particularly convenient to use if you ask me."
3187400,3192600," But we can try just to demonstrate how not convenient it is to use. So, I was thinking maybe to create"
3192600,3198440," some sort of wrapper that just allows you to run command with redirecting std out to a file,"
3198440,3204920," which just like wraps all of that nastiness around. So, the reason why it's so low level is because then"
3204920,3210120," in the future it's going to be used for pipes, for chains of the commands. Right. So, I want knob to be able"
3210120,3216200," to actually run several commands asynchronously and just chain them together like almost you do shell."
3216200,3220120," Right. So, but as of right now, this is not particularly convenient, unfortunately. But maybe in the future"
3220120,3227640," it will be. Knob cmd pipe would be cool. Yeah. And it will be. It will exist. I will implement it. Right. So,"
3227640,3233480," with this mechanism that I actually demonstrated. So, let's actually try to use the inconvenient"
3233480,3244600," approach just to see how inconvenient it is. So, what do we have to do? We have to do knob fd open for"
3244600,3251080," right. But we don't have to put a prefix in here. So, what we're going to be opening is probably just a"
3251080,3261240," build folder index.h because it's a generated thing. Right. So, we can create it as index fd. Right."
3261240,3268920," And of course, it may fail. So, index fd equal to invalid fd. Right. If it's an invalid thing,"
3268920,3276200," we have to return one obviously. So, here is the index fd. So, after that we not only run asynchronously,"
3276200,3283800," but we run with the redirect. Right. So, and what we supply in here is a knob cmd redirect. Right."
3283800,3292280," And we say that the fd out has to be equal to index fd. So, all of these things are pointers. Right. So,"
3292280,3298680," which means that if some of them are new, it will use the default one. Right. So, what's funny is that"
3298680,3303560," when I do reset, it should automatically close file descriptors. So, I don't have to do anything."
3303560,3309400," Honestly, it's not that inconvenient. Right. It's not that inconvenient. So, what you have to do,"
3309400,3314680," you have to just open the file, file descriptor, check that it opened successfully,"
3314680,3321800," and then just run with redirect, providing this thing as a pointer. And since it's reset,"
3321800,3325960," it will also close this file descriptor for you automatically because it's reset."
3325960,3331000," That's what reset does. So, let me actually find this entire thing. Yeah, here it is. So,"
3331000,3336440," if a redirect that your supply contains any of these things, it will just close them for you automatically."
3336440,3343640," Not only that, since it's a pointer, it will fill it up with invalid fd. So, then later in the code,"
3343640,3352120," if you reuse index fd, it will be equal to invalid fd. So, you know that it's cleaned up. Right. So, it's"
3352120,3359640," it's rather convenient. So, yeah, it's not that bad actually. Okay. Let's give it a try. Let's try to build it."
3359640,3365800," And now, if we take a look at build, it contains index.h and it contains everything in here. So,"
3365800,3374200," it also contains like spaces. But the spaces came from us, actually. Right. Because we put these"
3374200,3379640," spaces in here. We could have actually put them in here like that. So, it doesn't contain any additional"
3379640,3385960," spaces. So, it looks a bit nicer. Right. So, we can try to do that one more time."
3386520,3394920," So, as you can see, no additional trailing white spaces. So, it's not particularly readable."
3394920,3401960," But again, it's a result of the template compilation. It doesn't have to be readable. It's a generated code."
3401960,3408600," Right. It's supposed to work. And does it work? Well, I suppose it does. So, the only thing we need"
3408600,3416920," to do now in specifically knob, not really knob, tor.c. We have to just include this thing. Right. So,"
3416920,3425160," we're including index.h. Right. So, we included it from here. And now, we want to write a generator for"
3425160,3431400," this thing. Right. So, show active notification. Dismiss notification by ID. So, I'm just thinking"
3431400,3437960," where I'm going to put this entire thing. So, maybe I'm going to put it in here. So, render index"
3438680,3447000," right. And it's going to accept notifications. Like so. And now, we have to basically define"
3447000,3453800," what is going to be out. Right. So, honestly, we have two things in here. We have the out,"
3453800,3459800," which is built in. And we have escaped out. Right. So, and I don't really know how to implement"
3459800,3469240," escape out now. So, this is basically, you know, bytes, or maybe buffer, buffer and size. So, this is"
3469240,3476280," buffer and size. And we can use something like f right, std out. F right, std out. So, the buffer goes"
3476280,3481000," here. Then, the size of the buffer and the amount of this thing. I think that's how we do that. No,"
3481000,3486280," no, no, no. So, std out goes here. Why am I guessing? I can just do something like,"
3486280,3493000," like this, f right. Yeah. So, first pointer, then the size of that buffer, and then the amount of"
3493000,3500280," those buffers, and then std out. Okay. I don't remember if I have to put the semicolon. I don't"
3500280,3506520," have to put semicolon, but maybe I have to put semicolon in here. So, escaped out. So, I feel like I have"
3506520,3518040," to put semicolon in here. Okay. All right. So, this is out. And I'm going to actually do escaped out the"
3518040,3527240," same way. And I'm going to just put it to do. Escaped out does not actually escape anything."
3527240,3532760," That's how we do software development in here. All right. Right. So, why did I include this thing in here?"
3532760,3539240," I think I'm an idiot. Right. So, it has to be included as the body. So, undefined out, escaped out."
3539240,3545880," There we go. So, this is how we're going to be doing all that. So, let me try to compile the whole"
3545880,3551560," thing and see if it compiles. It doesn't compile because it cannot find the index. So, we can like"
3551560,3558840," literally do build. But that kind of means that if I change the build folder, I should not forget to"
3558840,3566360," change it in here. So, it will be maybe better to add build to the search path. When I'm building Tor,"
3566360,3571720," right. So, yeah. There we go. We already add Escalade Amalgamation to the search path. I might as well"
3571720,3580440," just do I build like so. All right. So, let's try to rebuild. And there we go. That seems to be working."
3580440,3590440," And it fails somewhere here. Oh, escaped out. Yeah. So, I suppose it has to accept the buffer. We can do"
3590440,3601480," something like strlem like this. Which is kind of stupid. But I mean, yeah, I'm sorry. I'm having a brain"
3601480,3612920," form. So, I suppose it has to be something like this. Right. So, strlem. Uh-huh. And that. Uh-huh. So,"
3612920,3620040," this is item su. Item su. And that seems to be working. That seems to be compiling. So,"
3620040,3627720," we successfully compiled this entire thing. So, what do I want to do? Let's go ahead and create maybe sub"
3627720,3638040," a sub-command. Right. So, we're going to do strcmd command name index. Right. So, just like another sub-command"
3638040,3647080," in here. And what is this going to do? It's going to load active notifications. How do we load active"
3647080,3657400," notifications? So, when you show active notifications, you need to... Yeah. Yes. So, we allocate"
3657400,3664840," notifications array. We load active notifications. That's right. And then we're going to be rendering"
3664840,3672840," index. Rendering index. Does it accept notifs? It does accept notifs. Like so. And so, essentially,"
3672840,3678280," what I created here is just a command that renders that template with the notifications that we have,"
3678280,3685400," just to test things. Right. Just to test things. Okay. So, let's actually try to compile this entire thing."
3685400,3692040," Do we have any notifications right now? We do have like three buy milks. We need to buy three milks in here."
3692040,3700360," Okay. So, that means I can now maybe run build tor with an index. Just index sub-command. And there we go."
3700360,3708280," We've got the HTML that says buy milk three times. And all of that was taken from the notification database."
3708280,3719720," We already can render HTML chat. We can already make a query to the database, extract the data,"
3719720,3724360," and render HTML. The only thing we have to do, we have to pipe it through a socket or something."
3724920,3731560," So, maybe we could actually like have a CGI thingy. But I mean, in case of a CGI, you still need to"
3731560,3736360," output some headers and stuff like that. So, it's not that different from the approach we are about to"
3736360,3743240," take. So, we just need to open the sockets. Right. And just do some things. So, but I'm already streaming for"
3743880,3748280," one hour. Right. So, we already did that for one hour. And I think the time for me has come to make"
3748280,3753400," a small break. Make a cup of tea. And we're going to establish the socket connection and stuff like that"
3753400,3759320," after a small break. Sounds good. Sounds Gucci. Sounds what? Tamaguchi. Let's go."
3759880,3766920," All right. So, we're back. Let's go ahead and maybe open some LeSockets. How about that? So, I'm going to go"
3766920,3773960," to, I suppose, index. Right. So, because what I wanted to do, I wanted to introduce the serve command"
3773960,3779880," that starts the server. So, this one is going to be the serve command. I don't freaking remember how to"
3779880,3789640," write a TCP server. So, but I mean, I can probably steal some code from the, from this schedule"
3789640,3796200," application. Right. So, because it definitely creates a TCP server. So, let's actually see how it does that."
3796200,3805160," So, src. So, does it have main dot main dot c? It does have it. Where is the main function? Okay. Cool."
3805880,3813080," So, what does it accept? It accepts file path, port as a string and an address. Right. So, it accepts"
3813080,3820440," port and address. Very cool. JSON memory. So, it allocates a little bit. So, I suppose that part"
3820440,3827240," that parses JSON, it needs some sort of a memory arena style thingy majingy. Okay. I see. So, there's also,"
3827240,3832920," oh yeah, I have, oh my god, this is so cool. I have different arenas for, oh my god."
3834760,3841400," And map, I even use a map to map files. This is such a fucking chat code. Holy shit."
3841400,3846040," Uh, I don't remember like writing this code. It's a very old code, but I'm coming back to it and it's"
3846040,3853160," so freaking cool. So, just parsing it. It's like, I am mapping JSON file. I'm parsing the JSON file"
3853160,3859000," myself and then I'm unmapping it. Okay. I see. All right. That's pretty cool. Uh, so,"
3859640,3865720," all right. So, here is we creating a socket. All right. So, we just create a socket for internet"
3865720,3874280," protocol and it's a streaming protocol specifically. So, here is an interesting thing. So, when you create"
3874280,3882600," a socket protocol, I suppose the exact protocol is actually defined with this argument, the third one."
3882600,3889640," But since the internet protocol has only one streaming protocol, it's by default going to be TCP."
3889640,3897240," If I remember correctly how it works. That's why you never really explicitly say that you want TCP"
3897240,3904040," because there's only one streaming protocol in the internet and it's TCP. So, uh, it can be picked"
3904040,3909960," up automatically. So, they developed this system sort of like, uh, yeah. So, there you go protocol. Um,"
3909960,3917000," they developed it sort of like, uh, with the hope that in the future, maybe there will be more protocols."
3917000,3921560," Maybe, maybe there will be more than one streaming protocol, but apparently we don't need more than"
3921560,3928200," one streaming protocol. We have enough bullshit with with a single one. So, uh, the main argument specifies"
3928200,3933240," this selects protocol family which will be used for more communication. This family is defined in socket."
3933240,3937080," Um, so, yeah. Okay."
3937080,3941080," It may be used for different types."
3941080,3948120," Uh, yeah. It might be good for different types, but for specific streaming, all right. So, you can just put"
3948120,3954680," there in here. All right. So, then, uh, obviously, we need to set the reuse address. Otherwise, if you"
3954680,3958920," don't close the socket correctly, right, so the address is going to be in use, you won't be able to"
3958920,3964360," reuse it and stuff like that. So, we just do it like this. Um, then we have to"
3964360,3975400," bind the server to the specific address, right? So, we created the socket, uh, we configured the socket"
3975400,3981800," with options and we bind it to a specific address so the server can listen to that socket and we listen"
3981800,3989640," to it through a listen command. Okay. So, as soon as we bound it to a server, to an address, and we"
3989640,3995240," said that we're going to be listening to it, uh, we just, like, continue accepting connections"
3995240,4000200," in a loop, right? So, every time we accept the connection, we handle requests, right? So, I suppose"
4000760,4008360," this particular function parses http header, right? So, that's what it does. Uh, it parses http header"
4008360,4015000," and, um, yeah. So, it extracts, uh, different information and stuff like that. So, one of the"
4015000,4020200," things we probably will have to extract is going to... I don't even know what we're going to be extracting"
4020200,4029560," them. Um, so, we definitely, definitely need to extract the endpoint, the, the resource path. That's"
4029560,4035320," what it's called, right? So, some sort of resource path. And the headers, I don't really think we care"
4035320,4040200," about headers that much, right? So, and what we're going to be doing, I suppose we're going to be"
4040200,4045560," appending all of that into the string builder, right? So, we're going to read a certain size,"
4045560,4051480," uh, right? So, we're going to be just keep reading stuff in chunks, um, and append it into string"
4051480,4057160," builder. Maybe we're going to limit the size of the string builder to maybe one kilobyte. And if"
4057160,4061880," somebody is trying to send too much data for the request, we're going to just, you know, close their"
4061880,4066200," connection, right? So, because they're trying to spam us or something or consume all of our memory."
4067000,4074200," So, we have to be secure like that, in a sense. Okay. So, let's create the socket. Let's do the"
4074200,4083640," first thing in here. Uh, in Tor, um, so, where is the serve? Um, I suppose. So, what we're going to do in"
4083640,4092600," here is just create the socket. Um, so, let's command out this code because I think it's going to be useful"
4092600,4099640," in the future. Um, and in here, so, we just open the socket. Uh, and if something goes wrong, we just"
4099640,4105400," fail. Uh, we actually want to do return defer because we have a little bit of a defer code."
4105400,4111560," I think somewhere here. Yeah. So, we're closing the database in case of a failure, right? So,"
4111560,4117480," because the first thing we do before executing any command, we open, um, SQL, SQLite connection and we"
4117480,4122200," keep it open. And I suppose this is something that we're going to do as we serve the, um,"
4122200,4125640," the requests and stuff like that. So, that's one of the things we'll probably have to do."
4125640,4132360," After we open the socket, we're going to configure the socket. So, that's pretty cool. And, uh, then"
4132360,4140120," we're going to bind the address, right? So, we're going to be binding the specific address, uh, like so."
4140120,4148040," So, just copy pasting the code, nothing particularly special. Then we're listening to that specific address,"
4149800,4157240," like so. And so, we probably need to say that we're currently listening to the address, um,"
4157240,4165640," to specific address. And then we are organizing the loop, right? So, here we're accepting, but we also"
4165640,4173720," want to know the address of the, uh, of the client that we accepted in here. Uh, and at the end in here,"
4173720,4180920," we should not forget to close the client. Honestly, we're trying to handle the error of the client,"
4180920,4188360," but who fucking cares, right? So, just, just freaking close the, the thing, right? Just freaking close it."
4188360,4194440," Uh, and afterwards, we just, you know, close the entire loop, right? So, that's basically what we have"
4194440,4200360," in here. So, we just process all of that in a loop. Um, could not accept connection. This is unacceptable."
4200360,4211800," Get it? This is unacceptable because we couldn't accept. Ah! Ah! I, I, I suppose I had the same"
4211800,4218040," sense of humor in the past as I do today. Very fucking funny. Um, I wonder why you may not accept the"
4218040,4227240," connection. Uh, um, so, it's so fucking funny. It's so stupid. Uh, yeah, I can see myself actually"
4227240,4236680," writing that joke, yeah. Yeah, fucking damn it. Um, so, this one is going to be one, obviously. Um, all right."
4236680,4244760," And since it's a, like, um, infinite loop, I suppose this thing is going to be unreachable,"
4245560,4254440," uh, right. This is going to be unreachable. Um, so, because the, the way you end this entire thing"
4254440,4261640," is by control C, but that kind of closes the database incorrectly. So, we'll probably have to,"
4261640,4267880," um, handle the control C, the interrupt. Yeah, single handler, right? But that was first."
4267880,4274760," I said that first. Don't try to backseat me. Don't try to backseat me."
4274760,4281720," Anyway, so, I think I want to put a to do in here. Uh, all right. So, it's going to be to do. Uh,"
4281720,4290200," and what we're going to say, um, the only, sorry, I'm slow. That's fine. That's fine. Don't worry about it."
4290200,4303800," The only way to stop the server is by, uh, sigint, but that, um, but that probably closes the db, uh,"
4305000,4312760," doesn't close db at all. Doesn't close the db, uh, correctly. Uh, so, we probably"
4312760,4326040," should add, um, a sigint handler specifically for this, uh, for this. All right. So, this code is going"
4326040,4329560," to be useful. Yeah, it's going to be useful at some point. So, let's actually put it somewhere here."
4330920,4336600," Uh, all right. So, I also use a bunch of exits, uh, which I probably don't want to do. All right."
4336600,4343640," So, what I want to do is replace them with, um, return defer, return defer, right? Because in case"
4343640,4349400," of an error, I want to go to defer, which is going to close the database, right? So, it's kind of important."
4349400,4356040," Uh, so, it's the deferred code. Let's try to compile this entire thing and go to the compilation errors,"
4356040,4360360," because obviously, it's not going to compile first try. So, it needs a socket. Yeah,"
4360360,4365880," because we need to include some of these things. So, that will kind of make it not cross-platform,"
4365880,4371240," but I don't really plan to support any other platforms as of right now. And if I need to,"
4371240,4375960," um, abstracting away some of these things is not that hard for me, honestly."
4375960,4386920," Uh, server address. So, I suppose this has something to do with bind. Let me find, uh, manbind"
4388920,4397560," socket. I already included sockets. So, what else do you want from me? Wait, wait, wait, wait, wait, wait."
4397560,4407000," Storage size isn't known. Where the socket address is located? Okay. So, let's go to main in here."
4408120,4414920," Um, so, this is probably some of the things we have to include. Net.in. Is that what we have to include?"
4414920,4422360," So, we're going to be guessing now. Um, okay. That's, that's cool. Uh, port is undeclared."
4422360,4427240," Okay. So, now we need to specify what's going to be port and what's going to be that and that and that."
4428040,4436680," Uh, so, yeah. We can kind of hard code these things, honestly. I think we should hard code them. I"
4436680,4444440," don't plan to allow custom, customizing them for now. So, let's just hard code them. Uh, port is going"
4444440,4452200," to be obviously, obviously, 69, 69. Uh, what else do we have in here? I net address. Um, implicit"
4452200,4460360," declaration. Where did we get that? Do I have a man page for, yeah, we do, I think. Aha. So, it wants to"
4460360,4471000," probably have the arpa in net. Uh, arpa in net. All right. So, seems to be compiling, seems to be working,"
4471000,4480440," seems to be at working. Cool. So, server like this. So, we're opening some stuff. And so, what we want to"
4480440,4488680," do in here as we handle the client connect deal. So, here, maybe I want to put error. So, this is"
4488680,4497000," going to be that. Uh, listening. I want to actually prepend error to all of them, just in case, just in"
4497000,4504520," case. Overall, it's just basically a classic TCP server. Nothing particularly special. Nothing"
4504520,4510920," particularly special. So, let's actually put some sort of a, like, um, I don't know. Regardless of the"
4510920,4516920," request, we can just, uh, print something, uh, like a hard-coded header. The, the usual thing that we're"
4516920,4523720," doing here, the hard-coded header. Uh, so, where can we get the hard-coded header? Um,"
4525960,4532360," So, handle, I think there was, yeah, handle request. And when we're handling the request."
4532360,4545640," I'm looking. So, you'd serve the file. Okay. So, when there is an error, for instance, http error."
4546440,4553720," Uh-huh. Okay. Response status line. Okay. This is good. So, there is a function for response status line."
4553720,4560120," It's not even defined in here. It's defined somewhere else. Uh, let's do RG. So, I'm looking"
4560120,4566920," into the, into the app that, from which I'm still in. Okay. So, there's a response.h. Response.h."
4568360,4581000," And status line. Ooh. This one is actually rather cool. But where is it? Response status line. Oh,"
4581000,4587320," it's a request. God damn it. I'm looking at the one. Okay. Ow. All right. That is funny. Um,"
4587320,4597080," I mean, okay. So, deep print app is actually super useful for this kind of stuff. Um,"
4598360,4605480," it's actually super useful. So, it's also put slash n. Why doesn't it put slash r? So,"
4605480,4611800," you're supposed to put slash r slash n. Was it my, was it dummy? I think it was a dummy dum-dum. This"
4611800,4620440," is not how you do HTTP. Dang. So, that means that now, today, I better programmer than I was in the past."
4620440,4626520," Because I know this kind of, I look at this code and I say, ""Shit. Crap. Slash r slash n."" Yeah,"
4626520,4631400," exactly. So, it has to be slash r slash n. So, this is a mistake on my part. But anyway. So,"
4631400,4637080," I'm not going to be copy pasting this exact code because it's crap. It's crap. Fuck that code."
4637080,4640280," So, what we're going to be doing instead, we're just going to be directly writing this thing. So,"
4640280,4647720," it's going to be client fd. So, the code is going to be, I suppose, just like a 200. Right. So,"
4647720,4655880," for now, slash r slash n. HTTP was created by Windows users exactly. Exactly. Exactly. Exactly. Exactly."
4655880,4663240," So, after that, we also have to print some basic stuff. Right. So, content type. Right. So, we have"
4663240,4668680," to do content type and content length. I don't remember if we have to do content length. Do we"
4668680,4672920," have to do content length? Maybe we have to do content length. But what if I don't provide content length?"
4673880,4680760," How about I say fuck you and not going to provide content length? Is it necessary? I don't remember."
4680760,4689880," Some of the browsers have been very fussy about it. So, they always want to have a content length."
4689880,4695400," But we're going to only provide content type. So, what is the HTML? Text HTML, isn't it? Right. So,"
4695400,4700840," is it text HTML? I think it's text HTML. And we're going to just do something like a client."
4700840,4709720," fd slash r slash n. And we can put something. I don't know. We can actually directly try to render"
4709720,4719240," the index. All right. Here, we can provide the fd. So, in the out is going to be basically write fd,"
4720680,4729160," like so. And this one is also going to be write fd. Honestly, we could have just like say that it's out."
4729160,4738520," Right. It's easier this way, I think. It's easier this way. And yeah. So, essentially, when we are"
4738520,4745880," rendering this, I think we do client fd. Right. So, here is the client fd. And what's interesting is that"
4745880,4753800," render index doesn't handle errors at all properly. But we can make it handle errors, honestly."
4753800,4761240," This is actually kind of cool. The templating is so flexible, we can make it handle errors. Right. So,"
4761240,4770040," because the out is supposed to be a statement. It is expected to be statement. Which means that we can"
4770040,4778440," rub this entire shit into if this thing is less than zero return false into all of them. So, each individual"
4778440,4785560," out is going to check for the error while writing. Right. And it will return your false in case"
4785560,4791720," something bad happened. And here at the end, you can just do. This is such a flexible. Holy shit."
4792920,4798840," This is such a flexible approach, isn't it? And like the template doesn't even have to know about any"
4798840,4805320," of that stuff, but it still compiles down to a very efficient C code that responds directly into..."
4805320,4807720," This is a fucking revolutionary idea, isn't it?"
4807720,4815560," This is so fucking cool. And it's as convenient as ginger. Like, why am I so excited about it? Like,"
4815560,4821240," I don't fucking understand. Because like, you can kind of make an entire freaking web framework out of"
4821240,4826760," that. That's probably why I was so ambitious about that website. Because like, it felt like you can"
4826760,4833800," make an entire web framework out of that. Maybe you should continue this project. Damn. This is so cool."
4833800,4840680," I'm sorry. I'm sorry, dude. I'm so excited about it. Yeah. ""My one connection close to always close the"
4840680,4845320," connection to ignore clients that want to keep up."" Yeah. So that's a good idea. So that's another"
4845800,4853640," another thing that we probably want to supply in here. Slash R, slash N. So connection close."
4853640,4862680," Right. So. So yes, yes, yes. And essentially, right. So we just like load notifications"
4862680,4870280," like this from the database and we just render them into the client. What's funny is that we can redefine,"
4872040,4879560," like we can define notification array in here. And before loading anything, we can just do notif count"
4879560,4885320," zero. We can reset it. So we reuse the same memory over and over again. Unless load active notification"
4885320,4892600," does it for us. But I don't think it does. Yeah, it doesn't clean up anything. Right. So it just appends"
4892600,4900760," notifications into that thing. Damn. This is so cool. I think I think that's it. So that will basically"
4900760,4907880," render that into into the socket while handling all of that stuff. All right. So let's try to build."
4908760,4916600," I'm building the wrong thing, by the way. Bro, where am I? I don't know where am I? So build."
4916600,4925480," Okay. So let's go. Okay. Too many arguments. Aha. Yeah, this is because I supposed to."
4925480,4932920," Yeah, I'm supposed to provide this thing in here. What else do we have in here? Still too many arguments."
4934040,4938520," Yeah, I don't have to provide that. So it's just FD and buffer size. Okay. So that seems to be compelling."
4938520,4943000," It's really cool how I just customize the way I output things."
4943000,4953960," In this. All right. So let's go ahead and maybe go to here. Right. And I'm going to..."
4955000,4964200," This is weird. I thought I copy pasted everything properly. Okay. So let's go here. And let's do build"
4964200,4979560," Tor serve. Okay. So we're listening to this thing. Let's open it up in the browser."
4983880,4989560," Oh, shit. It closed. Okay. So I don't know why it closed the connection. So let's take a look at the error."
4989560,4992040," Oh, it just exited. What the fuck?"
4992040,4998680," But I mean, it worked first try is that we couldn't handle the second request for some reason."
4998680,5002440," All right. So now buy bread."
5002440,5006360," But when I try to..."
5008840,5013720," It probably has something to do with length. Maybe it's still tries to..."
5013720,5017640," Yeah, that's a bit annoying, honestly. That's a bit annoying."
5017640,5021000," One of the things we can do... Okay."
5021000,5030200," We can render this entire thing into a buffer, into a string builder."
5031000,5037480," Look how freaking flexible it is. We can respond with the template into the socket, or we can render it into"
5037480,5045400," a string builder. Why the fuck not? Right. So, and essentially, like, we don't have to now fail with"
5045400,5050920," an error or anything. Maybe it failed with an error. Maybe that's what happened. But anyway, so essentially,"
5050920,5059720," in knob.h I have ""sb_append_menu"", right, or maybe ""append_buffer"". Yeah, there we go. So that's what we have."
5059720,5066920," So it's literally ""buff"" and ""size"". Right. So I can just do something like ""sb_buffer"" and ""size"", and I just,"
5066920,5077400," like, append it. I just literally append it. So, yeah. And now, what I can have in here, I can have basically"
5077400,5086760," like a response. Or maybe let's just call it ""sb"". And I can simply have string builder as being"
5086760,5093240," zero, which I also reset along with the notifications in here. So it's going to be count zero."
5093240,5103560," Right. And the thing I do, by the way, I render this entire stuff into the string builder before I do the"
5103560,5111240," response, which enables me to tell the client how much data I'm about to send. ""content_length"","
5111240,5122520," something like ""d"", maybe ""su/r/n"", ""sb_count"", right, and then I'll put this entire thing. So it's going to be"
5122520,5130920," right. ""client_fd"", so ""sb_items"", ""sb_count""."
5130920,5139000," Yeah, the beauty of programming. Yeah. So this is so freaking cool. And again, it's not a high-level"
5139000,5145960," language. It's just C, but the flexibility is insane. Right. So the way I render templates is"
5145960,5151480," completely abstracted away and I can just like do whatever. Okay. So let's actually try to rebuild this"
5151480,5159560," entire thing. We can start the server and we can maybe test all of that with curl. Right. So let's"
5159560,5166520," test all of that with curl. Let me copy paste this entire thing, because what I want to do, I just want"
5166520,5173000," to see the headers. Okay. So we got some things. Can we do that again? Okay. So the problem..."
5173000,5182200," Okay. Sometimes it just... Yeah. Sometimes it's just weird. How do I see the headers in curl? Does"
5182200,5190520," anybody remember? It's -k? No, it's not -k. So ""edit_q"". No, there was a single flag"
5190520,5196440," that just also shows you the headers of the response or something like that. There was a very simple flag"
5196440,5204200," -i. Okay. And there you go. Here is the content length. So the content type, text.html and yeah."
5204200,5215720," So you remember that talk Sean Barrett called ""Advice for writing small programs in C""?"
5215720,5221160," Revolutionary. It was about how to use C as a highlight. I don't remember his talk. In fact,"
5221160,5226200," I don't think I watched any of his talks. I remember only watching his streams. Right."
5227080,5231880," So I should look up his talks. Right. So he's very knowledgeable on C programming."
5231880,5237800," ""Imagine you hydrate tor... tor... t... t... t..."""
5237800,5244760," Yes. The hydration is such a bizarre concept to me."
5247000,5256040," The people who are talking about hydration in front of their VCs with a straight face might be either"
5256040,5262520," absolutely ignorant, clueless people who know nothing about software development or straight-up psychopaths."
5262520,5270520," It's either of these two things. Right. So because... What is hydration? Okay. Listen. It's when you"
5271640,5284920," serve HTML, then you load JavaScript, which then populates HTML callbacks and events handlers and stuff like"
5284920,5292440," that. Literally fucking loading the web page. That's what it is. It's so fucking annoying. So there..."
5294040,5301320," This is as an opposite to the current single-page application approach. Right. So you load the server-side"
5301320,5309240," rendered page and then you make it alive by hydrating it with the JavaScript law. Like literally what"
5309240,5312600," people have been doing for fucking decades. It's just like..."
5312600,5323480," Again, these people must be absolutely clueless and ignorant or straight-up fucking psychopaths. They're"
5323480,5328680," trying to scam VCs. Like I have no other explanation to this kind of shit, honestly."
5329720,5334280," How about dehydrate my balls? Okay. Anyway."
5334280,5343960," It's a big tech bros reinventing existing thing. Like I would like to think that they're just"
5343960,5350680," complete fucking psychopaths who are trying to scam people with money. Because at least in that case,"
5350680,5356440," I would understand the hassle and I would respect it. Okay. So you have stupid people with money. Okay."
5356440,5363880," So just like they deserve that. But if it's not that, and they're really thinking that they're pushing"
5363880,5370600," forward the tech and the progress of humanity, man, that just fucking sucks. That means we're in the"
5370600,5375640," decline, the civilization decline or something like that. Right. So it's just like..."
5375640,5382760," I would rather prefer them to be fucking knowledgeable psychopaths that are just trying to scam people."
5382760,5404360," So we have some weird shice in here. Sometimes it's just like the socket fails. But let's actually try to refresh."
5405400,5411640," Okay. At least we can refresh consistently, but not really. Sometimes the connection fails and I don't"
5411640,5418920," really know why. But overall it works. Right. You know what I mean? So let me see. Okay. So it failed with"
5418920,5428520," NS error reset. So sometimes it just reset the connection. But sometimes it works. Sometimes it resets."
5430040,5434040," See roulette. Yeah. Does anybody know what's up with that? That's really weird."
5434040,5438440," Maybe this is before I managed to"
5438440,5446120," finish handling the thing. I don't remember having that problem before. But I mean, that's kind of weird."
5448920,5454680," What's the error Chrome says? This is Firefox, by the way. So, and the error is connection reset."
5454680,5465160," So connection reset. And it's not really a synchronous connection as well. And it's a synchronous connection."
5465160,5470520," So that means it's wait and blocks. And we don't really have buffering here."
5471960,5476200," Does it need flushing? I didn't think so. Because again, we're working directly with the FDs,"
5476200,5479720," with the file descriptors and stuff like that. So I didn't think it needs flushing."
5479720,5483320," Maybe some of these things failed."
5483320,5491640," I don't know. It's kind of difficult to say. What if I don't do connection close? Maybe that's what's causing it."
5493080,5503320," All right. So maybe we could rebuild some of this stuff. All right. So let's restart this thing. All right. And..."
5503320,5515480," Okay. Sometimes it happens. And the error transferred reset. It's specifically..."
5519160,5524680," Is that because I don't read the request? And I just like... Maybe I should first read the request."
5524680,5527080," Maybe browser loads... Ah!"
5527080,5533640," So maybe browser loads Favocon. And there are two HTTP connections, I think. Yeah."
5533640,5538520," That might be it. That may be it. That may be actually it. So that's the case in here, probably."
5538520,5542200," But maybe we have to handle it."
5545320,5550280," So that means we have to parse this status line, which is not that hard. But..."
5550280,5558520," It's not... Wait, wait, wait. Okay, okay. So this is not true, by the way. This is not true."
5558520,5560520," Curl. Curl also sometimes fails."
5560520,5566440," Okay."
5566440,5571080," Curl also sometimes fails."
5571080,5574040," So it's not about the browser and the Favocon. It's something else."
5574040,5574920," Hmm."
5574920,5580840," No, no, no. It's not about the browser. It's something about the server. We already confirmed that."
5580840,5587160," So curl is reproducible as well. I personally use strace in these situations to check what happens"
5587160,5590600," at the syscall level. Maybe. Maybe that's a good idea."
5595080,5599240," But it's kind of too much. It's probably will do too much shit."
5599240,5600440," We can try to do s-trace."
5600440,5602840," Uh..."
5602840,5606200," All right. So we are waiting for the accept and..."
5606200,5608600," Okay, so curl."
5621240,5622520," Obviously. Heisenberg."
5622520,5624520," Freaking Heisenberg."
5624520,5632280," Some race condition. Yeah, probably."
5632280,5638360," I wonder if this is..."
5638360,5641000," Something with..."
5641000,5643240," I can't..."
5643240,5645080," Okay, so that's reproducible."
5645080,5646280," Let's trace one more time."
5647400,5655160," It's really rare to reproduce."
5655160,5658040," But what could it be?"
5658040,5664200," Okay, so let's do that in the browser."
5670440,5671000," I didn't even..."
5671000,5676840," Could it be because of the eskylite?"
5676840,5678120," Does eskylite..."
5678120,5681880," Uh..."
5681880,5682760," Throttle the..."
5682760,5683240," I don't know."
5683240,5685480," It's difficult to say."
5685480,5687080," So no throttling."
5694680,5695240," Excuse me."
5695240,5703080," 69 too hard, yeah."
5703080,5707160," That doesn't change anything."
5707160,5708920," It's yet another Heisenberg."
5708920,5712280," That sometimes happens and we can't really..."
5712280,5714680," Can't really reproduce that."
5718360,5722680," So if I try to do notify full bar buzz."
5722680,5726440," Okay, and then it appears here."
5726440,5731400," So I suppose essentially if you want to use this thing, you just have to do that under S trace."
5731400,5735720," You just have to do that under S trace."
5735720,5737640," So it works under S trace."
5737640,5741240," If you get rid of the S trace, it may stop working."
5742840,5743400," Yeah, there we go."
5743400,5744280," Connection was I said."
5744280,5751000," What I said while the page was loading, the site could be temporarily unavailable or too busy."
5751000,5754440," So yeah."
5754440,5757800," So it's a quantum bug."
5757800,5758760," Yeah, probably."
5758760,5759720," That's probably what it is."
5759720,5763320," Maybe I have to also specify the host."
5763320,5765240," Or do you have to specify the host?"
5765240,5765640," I don't know."
5765640,5768200," So let's take a look at the schedule."
5768200,5771240," So when it responds, we provide a response header."
5772200,5773640," So response status line."
5773640,5774200," It's that."
5774200,5776440," Content type."
5776440,5777960," Content length."
5777960,5781000," And then we do response body start."
5781000,5782840," But what is it?"
5782840,5786120," Does it have a special thing in here?"
5786120,5787640," So response."
5787640,5789880," It's just that slash n."
5789880,5793400," But I mean, it has to be also slash r slash n."
5793400,5796440," So."
5796440,5799480," Yeah."
5799480,5804840," Could it be HTTP 1.1 because it definitely indicates that the TCP connection can be reused"
5804840,5807480," as opposite to HTTP 1.0."
5807480,5809080," That's a good point."
5809080,5810600," What if we set O?"
5810600,5814920," But I mean, we explicitly say connection close."
5814920,5819400," Do we have to also say like a keep alive known or something?"
5820440,5821640," Um, so."
5821640,5823880," Something like that."
5823880,5827480," So let's actually set this connection."
5827480,5829000," 1.0."
5829000,5829960," All right."
5829960,5830840," And let's do sub."
5830840,5831800," And."
5831800,5839880," Doesn't change anything."
5839880,5841560," It doesn't change anything."
5842760,5846360," So something is weird going on."
5846360,5852120," And again, curl actually goes against this entity, I think."
5852120,5857240," And funny enough, it's like the server also doesn't print any error."
5857240,5859000," It just resets the connection."
5859000,5861000," Just resets the connection."
5861000,5861960," It's bizarre."
5861960,5862600," Like what?"
5862600,5865640," Like I would expect it to at least print something."
5865640,5867080," We can."
5867080,5867400," Okay."
5867400,5869960," So we can do something like this."
5869960,5871160," If this thing."
5871160,5873160," Less than zero."
5873160,5878280," We can just simply print F error."
5878280,5883720," Accumulate data in byte array and write once."
5883720,5884760," What do you think this is?"
5884760,5887640," Or you mean the this thing?"
5887640,5890440," Um."
5890440,5892040," I don't get it."
5892040,5892360," Right."
5892360,5892760," So."
5892760,5893080," Okay."
5893080,5893880," We can try to."
5893880,5896760," Yeah, I see what you mean."
5896760,5900520," So because we all accumulate rendering though."
5900520,5905320," But we don't accumulate the HTTP response thing."
5905320,5906600," We can try to do that."
5906600,5907560," Sure."
5907560,5911480," So let me try the following thing."
5911480,5915560," So this is going to be SB append sister."
5915560,5917080," Right."
5917080,5917880," And."
5917880,5921080," The way we're going to be doing all that."
5921080,5924040," But that also means."
5924040,5928040," That it has to be a separate string builder."
5928040,5929560," Right."
5929560,5931400," It has to be separate string builder."
5931400,5933800," Okay."
5933800,5935320," So let's have something like body."
5935320,5938360," String builder response."
5938360,5939640," Right."
5939640,5942120," So we have body and the response."
5942120,5944440," We are rendering body first."
5944440,5945240," Right."
5945240,5946520," Um."
5946520,5947960," Like this."
5947960,5949720," So this is what we do."
5949720,5951000," We're rendering the body first."
5951000,5953640," And then we're going to be rendering the response."
5953640,5957480," Let me do the following way."
5957480,5958440," So response."
5959240,5963320," And this one is slightly different."
5963320,5963560," Right."
5963560,5966840," So we have to probably use a TMP s print f."
5966840,5968440," Like so."
5968440,5972840," And here we're going to be using something like this."
5972840,5976040," So content length."
5976040,5978600," And so on and so forth."
5978600,5980680," That also means an interesting thing."
5980680,5982200," Is that at the end in here."
5982200,5985000," We also have to clean up a response."
5985000,5985880," Right."
5985880,5987240," Clean up response."
5987240,5990520," And also TMP reset."
5990520,5992200," Right."
5992200,5993960," I think that's what we want to do."
5993960,5994920," So it's a temporary."
5994920,5998040," Because we have a little bit of allocation in the temporary buffer."
5999480,5999720," Right."
5999720,6003720," So here we are just appending this kind of stuff."
6003720,6009640," And then we simply say if this thing failed."
6009640,6009880," Right."
6009880,6012120," So and we're printing specifically response."
6012120,6013800," All right."
6013800,6015000," If this thing failed."
6015000,6017640," We want to print something like std error."
6017640,6019320," Error."
6019320,6025400," Could not write a response because of this error."
6025400,6026440," Str error."
6026440,6028200," Str error."
6028200,6031320," Error null."
6031320,6033000," And return."
6033000,6035560," We're going to actually quit the server just in case."
6035560,6040760," Maybe there's something wrong with the closing the client or something."
6040760,6042440," Okay."
6042440,6043640," We can do something like that."
6043640,6046760," We also should not forget to append sb."
6046760,6051800," I think somebody recently actually suggested extend."
6051800,6052680," Ah."
6052680,6053880," It's for commands."
6053880,6054120," Right."
6054120,6056760," But for here we can do append many."
6056760,6058760," We can do response."
6058760,6063320," And we can provide body items and body count."
6063320,6065560," Body count."
6065560,6065880," All right."
6065880,6067000," So that's how we do that."
6067000,6068360," So we first render the body."
6068360,6071640," Then we render response with the, you know,"
6071640,6072600," HTTP and stuff like that."
6072600,6074680," And then we can continue them and send them."
6074680,6076600," And we also clean everything up."
6076600,6079640," So let me double check if the append many."
6079640,6081400," Ah, it doesn't exist."
6081400,6083640," I think it's a SB append buff."
6083640,6083800," Yeah."
6083800,6084440," That's what it is."
6084440,6086120," It says append buffer."
6086120,6087480," That's what it is."
6087480,6088360," Okay."
6088360,6090600," So let's rebuild the entire thing."
6090600,6092440," So it doesn't like something in here."
6093240,6095800," Uh, so this is specifically body count."
6095800,6096200," All right."
6096200,6099000," So content length and everything seems to be working."
6099000,6103640," So we first accumulate everything and we'll be sending everything at once."
6103640,6104200," Hopefully."
6105800,6106360," All right."
6106360,6106520," All right."
6106520,6108280," So let's do the surf."
6108280,6111000," And let me see."
6111000,6123560," I guess we fixed it."
6123560,6125880," Maybe that was the problem."
6125880,6126120," Right."
6126120,6126680," So that's."
6126680,6139240," I'm stress testing my page."
6139240,6141960," I'm just stress testing my page."
6141960,6142360," Don't mind."
6142360,6143800," Anyway."
6143800,6145240," So I suppose we fixed it."
6145240,6146120," Uh, right."
6146120,6148840," So it's actually honestly a better approach."
6148840,6149080," Right."
6149080,6153960," So you first kind of accumulate what you want to have in here."
6153960,6159960," Uh, and then you just send it out in a single, uh, in a single syscall."
6159960,6160280," Right."
6160280,6165240," Another thing we can have in here actually is a string builder, for instance, request."
6165240,6167000," Uh, right."
6167000,6174520," So we can have a request and we can just like basically first, like, read the entire request."
6174520,6175960," Just to read the entire request."
6175960,6178360," But maybe I'm going to do that later."
6178360,6178600," Right."
6178600,6182360," So for now it's not really needed to distinguish different requests and stuff like that."
6182360,6187400," So what I want you to do today is to just add the ability to surf notifications."
6187400,6188280," Um, right."
6188280,6191640," So what we can do is maybe some sort of a list."
6191640,6192120," Uh, right."
6192120,6198680," So in here we can do h1, uh, h2, maybe, maybe h1 is too much."
6198680,6199000," All right."
6199000,6200360," So notifications."
6200360,6201400," All right."
6201400,6203800," So here are notifications."
6203800,6206920," And, um, one of the things we probably want to do."
6207560,6211960," I have a very cool command for knob, which is called chroot."
6211960,6213720," Right."
6213720,6218840," Uh, no, this is not the correct one."
6218840,6220440," I need to rebuild my knob."
6220440,6226280," Um, so I'm going to touch my knob and then I'm going to do chroot."
6226280,6228680," It doesn't require password anymore."
6228680,6230200," Why does it still require password?"
6230200,6232200," I think there's something."
6232200,6236040," Um, just a second."
6236040,6237320," So this is bizarre."
6242200,6245480," Uh, funnily enough."
6245480,6248760," I forgot to fetch the latest changes."
6248760,6255400," I'm still using the old tor, uh, which uses actual chroot, right?"
6255400,6262600," So essentially what it used to do, it used to actually create like a chroot environment in build."
6262600,6266360," So it doesn't damage my production database in a home folder, right?"
6266360,6272200," So, because sometimes I develop it on my, uh, main account, which has a production.tor."
6272200,6274920," And if I do experiments, it may damage it."
6274920,6281000," So because of that, I can run it in the chroot environment somewhere here, but, uh, it used to"
6281000,6286760," use actual chroot, but then I realized that I can just, uh, what I can just do is to just set home,"
6286760,6291560," um, to the current build folder."
6291560,6295400," And that's going to be enough because the tor doesn't really use anything from the,"
6295400,6297880," um, anything else from the environment."
6297880,6300280," So it's kind of redundant to have chroot in here."
6300280,6303480," So, but this is the changes that are in the repo."
6303480,6309080," And I forgot to, uh, I forgot to fetch them before I developed this huge as feature."
6311000,6315960," So that means, uh, I mean, I need to stash this entire thing."
6315960,6318440," I can fetch the latest changes."
6318440,6319640," All right."
6319640,6321720," So let's take a look at how many of them there are."
6321720,6323400," Uh, okay."
6323400,6329480," So this is how many changes they may conflict with whatever I just implemented."
6329480,6332120," They may conflict."
6332120,6333560," So I don't freaking know."
6333560,6333800," Okay."
6333800,6336360," I can merge, uh, whatever I have."
6336360,6339480," So here's the stuff in the stash that I just stashed."
6340280,6340760," Uh, right."
6340760,6345320," So if you take a look at the current, uh, um, at the current knob,"
6345320,6348520," the current ch knob is actually less messy, as you can see."
6348520,6348760," Right."
6348760,6351240," So it just sets environment variables and stuff like that."
6351240,6355320," Um, this is how day of work turns into three."
6355320,6355960," Exactly."
6355960,6356360," Exactly."
6356360,6358680," You just forgot to fetch the latest changes and it's just going to be."
6358680,6360440," Anyway."
6360440,6362840," So I have my changes in the stash."
6362840,6365400," Uh, so let's actually try to pop them."
6367560,6367800," Okay."
6367800,6371080," Apply stash three ways, which requires first staging."
6371080,6371320," Yeah."
6371320,6371560," Okay."
6371560,6371960," Let's go."
6371960,6374440," All right."
6374440,6375960," So let's take a look at what we have in here."
6375960,6381720," Um, interesting, interesting, interesting."
6381720,6393160," So we have a three, uh, oof."
6393160,6396520," Can you just re, that reveal, revert, bro."
6399000,6399480," Okay."
6399480,6406360," So this is kind of, this, this is fucked, honestly."
6406360,6407560," Why is it so fucked?"
6407560,6411800," This doesn't, it looks like nested."
6411800,6413800," Uh, ours."
6413800,6421880," Uh, so there is a little bit of a problem is that I also introduced the git hash baking."
6423640,6429320," Ooh, that's completely fucked up everything."
6429320,6433000," So there's too much conflict in here in a build system, right?"
6433000,6437880," So, because we have a little bit of a system that bakes the hash, which is understandable."
6437880,6439640," Um, all right."
6439640,6443720," And we have a system that, you know, builds this thing."
6443720,6445960," It's, it's not really that bad, honestly."
6445960,6447320," It's not that bad, I think."
6448280,6451000," Um, so let me, let me think."
6451000,6454680," So we definitely want to have the hash building."
6454680,6456600," So git, git hash."
6456600,6457960," We're extracting git hash."
6457960,6459160," Right."
6459160,6461560," So we do all of these things and that's fine."
6461560,6466760," So this is just the old way of building, uh, the application."
6466760,6468360," We don't need it anymore."
6468360,6468600," Right."
6468600,6469320," So we don't need it."
6469320,6471800," Um, okay."
6471800,6475560," Then, ah, I see what's going on."
6475560,6477160," I see what's going on."
6477160,6479000," So this is just that."
6479000,6486120," So this is git hash building."
6486120,6487320," This is git hash building."
6487320,6489480," Let's, ah, where are we going?"
6489480,6493000," Um, so here we build TT."
6493000,6496760," So that's understandable."
6496760,6497880," Here we build TT."
6497880,6500680," Templates."
6500680,6503560," Here we get in the hash."
6503560,6506840," Then we append, uh, the compiler."
6506840,6511080," And then we either append one thing or another thing depending on whether we have hash or not."
6511080,6512520," That's understandable."
6512520,6513240," That's understandable."
6513240,6514280," That's understandable."
6514280,6515960," Then we append the rest of the things."
6515960,6517720," That's also understandable."
6517720,6522120," So, uh, here is another variations of building things."
6522680,6529560," That variation contains very useful addition of, um, of this stuff."
6529560,6530600," Okay."
6530600,6531640," So we can just remove that."
6531640,6533880," We don't need that stuff anymore."
6533880,6535640," Uh, after that."
6535640,6536440," Okay."
6536440,6537240," So we're building."
6537240,6539880," So this is the repetition of the template building."
6539880,6540840," We don't need that."
6541880,6543000," Uh, and I suppose."
6543000,6545080," Yeah."
6545080,6547400," So that's basically what we want on this line."
6547400,6549320," That's basically what we want."
6549320,6552200," We want first build templates."
6552200,6553080," All right."
6553080,6554680," So we're building the templates."
6554680,6557560," Then we're, uh, extracting the hashes."
6557560,6559560," We're passing the hashes in here."
6559560,6561240," And then we're running this entire thing."
6561240,6564760," Where do we build SQLite?"
6564760,6567080," So we'll build SQLite in here."
6567080,6568040," I think that's it."
6568040,6568360," All right."
6568360,6571800," So if we take a look at what's going on in here, everything seems to be fine."
6571800,6575000," Uh, so this stuff is on stage."
6575000,6578040," Uh, so can I just continue?"
6578040,6580680," So I suppose there is no merge in place."
6580680,6584200," So it's just some of these stashes, uh, like this."
6584200,6586200," Uh, okay."
6586200,6588120," All right."
6588120,6588680," That's cool."
6588680,6589160," That's cool."
6589160,6589640," That's cool."
6589640,6589640," That's cool."
6589640,6592520," Ah, okay."
6592520,6595080," So nob, everything seems to be fine."
6595080,6596440," Everything seems to be building."
6597320,6599000," Um, the templates are built."
6599000,6601560," The hashes are extracted."
6601560,6602840," Everything is built together."
6602840,6603480," Fine."
6603480,6604920," So what I was trying to say."
6604920,6605880," So I have chroot."
6605880,6606680," Right."
6606680,6614360," And it basically runs Tor as if it's in here."
6614360,6614520," Right."
6614520,6618680," So as if it's home folder in here, you can even kind of see that."
6618680,6621400," It sets home to the current build system."
6621400,6623800," It also enables migration query tracing."
6623800,6625240," And, but that's besides the point."
6625240,6627320," Um, all right."
6627320,6628440," So what I wanted to do."
6628440,6629480," Yeah."
6629480,6631240," I wanted to just do the surf."
6631240,6631560," All right."
6631560,6634680," So I can do chroot and I can run serve."
6634680,6636600," And it serves."
6636600,6636920," Right."
6636920,6638360," So now I can see that."
6638360,6639240," Right."
6639240,6644520," So it prints notifications, but there is no notifications in here yet because it uses a different database."
6645160,6660120," So what we want to do is maybe notify buy milk, buy bread, and buy coffee."
6661000,6661560," All right."
6661560,6666520," So after that, we'll want to serve this entire thing and I go."
6666520,6672040," So, uh, for instance, maybe I want to turn this entire thing into a list."
6672040,6672360," All right."
6672360,6674040," I want to turn this entire thing into a list."
6674040,6674920," How do I do that?"
6674920,6678920," So, uh, I think you do something like UL."
6678920,6679160," Right."
6679160,6681480," So the top level is the top level UL."
6681480,6682280," I don't remember."
6682280,6683400," Is it UL?"
6683400,6685160," And the elements are LI."
6685160,6688040," I think that's what it is."
6689480,6690200," Does anybody remember?"
6690200,6692680," Do we have any professional web developers in the chat?"
6692680,6694040," So this is correct."
6694040,6694280," Okay."
6694280,6694760," That's cool."
6694760,6697400," So that means if I restart the whole thing, I refresh it."
6697400,6697800," There you go."
6697800,6698360," Here's the list."
6698360,6704920," Who tells me this is not a web development?"
6704920,6706600," This is web development."
6706600,6706840," Right."
6706840,6709080," So look, like I add HTML."
6709080,6710840," I have a template engine and everything."
6710840,6711880," It's fucking works."
6711880,6718280," So it's purely in C."
6718280,6720840," And I just like modify these things and stuff like that."
6720840,6721560," That's very cool."
6721560,6724520," I can maybe add some button in here."
6724520,6724840," All right."
6724840,6729720," So, so something like, uh, is it, is it button these days?"
6729720,6730120," Button."
6730120,6731720," Uh, button."
6731720,6732840," Uh, right."
6732840,6734200," Let's refresh the whole thing."
6734200,6735720," Uh, yeah."
6735720,6737560," So, and maybe like delete."
6737560,6739400," Uh, right."
6739400,6741320," So that's, that's what we can put in here."
6741320,6742600," Uh, right."
6742600,6745400," So I can maybe have some of this kind of stuff."
6745400,6749000," Uh, road dogging buttons."
6749000,6754840," Uh, this is insanely powerful."
6754840,6756840," This is insanely powerful idea."
6756840,6759960," Uh, that's so fucking cool."
6759960,6762840," Um, maybe I can also have reminders in here."
6762840,6765400," So I can have h1 reminders."
6765400,6767640," Here are all of your reminders in here."
6767640,6769720," If you, if you need them, obviously."
6769720,6775000," So what's funny is that I have to recompile everything, but I can hot reload."
6775560,6775880," Right."
6775880,6780680," Who said I can't take the functions that renders the index."
6780680,6781000," All right."
6781000,6787080," So tor.c, uh, render index and put it into a separate, a separate DLL."
6787080,6795960," This thing, the only thing it does, it accepts data and just collect everything into the string"
6795960,6796360," builder."
6796360,6796600," Right."
6796600,6798040," So it doesn't interact with anything."
6798040,6799880," It could be put into a separate DLL."
6799880,6801720," Uh, right."
6801720,6805080," So it could be put in a separate DLL and you can hot reload that DLL."
6805080,6807800," You can hot reload pre-compiled templates."
6807800,6812360," You can then even write some sort of a system with web socket that"
6812360,6814920," automatically reloads the page or something like that."
6814920,6818280," You can turn like web is not that hard."
6818280,6818520," Right."
6818520,6821320," So it's, there's no magic in here anywhere."
6821320,6826600," So that's what I always trying to say, but web devs don't listen to me."
6826600,6828200," Majority of web devs, not everyone."
6828200,6829160," Oh yeah."
6829160,6833640," So it's like PHP with a question mark."
6833640,6834280," Yeah, exactly."
6834280,6835240," It's like PHP."
6835240,6841160," But I think, uh, syntactically, I kind of like the percents because of how concise they"
6841160,6842280," turn out to be."
6842280,6844120," Like, look how concise this is."
6844120,6848680," So the only problem we can have in here is that I can't really use percent within the code"
6848680,6853240," and I can't really use percent outside of the code, but I don't really use it that often."
6854200,6859080," Um, the template has access to the host language instead of separate template."
6859080,6860040," Exactly."
6860040,6862520," That's why it's so goddamn fucking powerful."
6862520,6864040," Uh, right."
6864040,6866280," And it just looks nice as well."
6866280,6866920," It's just fine."
6867720,6870680," Uh, we can take a look at what exactly it generated into."
6870680,6871160," Right."
6871160,6872520," So this is how it looks like."
6872520,6873880," So it generated into that."
6873880,6880600," Um, but what's funny is that if you don't use any template engine, you're going to end up writing this"
6880600,6882600," mess yourself manually."
6882600,6883880," Right."
6883880,6889160," If you just decide, decide to not use it, you're going to write this mess."
6889160,6890760," Uh, percent modular."
6890760,6891880," Yeah, that is true."
6891880,6892760," That is true."
6892760,6898280," So because of that, I think this template engine should have some sort of a mechanism for escaping"
6898280,6902200," percents, but I don't really know how exactly to do that yet."
6902200,6903960," It could be backslash."
6903960,6905320," It could be something else."
6905320,6907880," It could be double percent, right?"
6907880,6915640," Um, so anyways, uh, it's, I've seen mess like that in Perl."
6915640,6919480," I see where you're going with that."
6919480,6925720," But anyways, uh, so what we can do now, we can actually, uh, copy paste this entire stuff in here."
6925720,6929480," And now we can say that we're going to be accepting reminders."
6929480,6929720," Right."
6929720,6933480," So reminder, uh, are they called reminders?"
6933480,6937240," Um, reminders, uh, remind."
6937240,6937480," Yeah."
6937480,6939320," So they're literally just called reminders."
6939320,6940840," All right."
6940840,6947640," So, and in a reminder, we have an item, um, escape escaped."
6948280,6949320," I really don't like that."
6949320,6951560," They have to do it like this, but I mean, I don't have a choice."
6951560,6956440," Um, so reminder, let's see."
6956440,6964360," What's funny is that if you accessing any of the fields that don't exist, it will tell you that at"
6964360,6966600," compile time, it will fail with the compilation error."
6966600,6971800," So, yeah, that's pretty cool."
6972360,6974840," Uh, for example, in this case, right?"
6974840,6977960," As you can see, uh, this thing does not exist."
6977960,6983800," The only problem I see with this template engine is that it fails in here, which fucking sucks."
6983800,6987080," It kind of sucks."
6987080,6992600," Like how am I supposed to like, see where have, where this thing corresponds to in a template?"
6993160,6999640," We can use a similar technique we used in the mutualizer bundler."
6999640,7001080," Right."
7001080,7002040," So do you guys remember?"
7002040,7004920," Mutualizer, mutualizer."
7004920,7008120," So I wrote a bundler in the mutualizer."
7008120,7013160," So I'm going to actually put this thing in the chat and for people on YouTube, it's going to be in the description, obviously."
7013880,7014680," Uh, right."
7014680,7018680," So it's not really, I think, bundler or not bundler."
7018680,7019240," Let me see."
7019240,7020200," So mutualizer."
7020200,7026920," So we have resources, which is fonts, icons, shaders, and so on and so forth."
7026920,7030600," We pack them into a single binary blob and we bake them into the executable."
7030600,7033720," So executable doesn't depend on separate files."
7033720,7037400," So there's less moving parts when you deploy this application."
7038520,7038840," Right."
7038840,7045160," So, and essentially what the build system does, it generates bundle.h."
7045160,7052920," But since this is a generated code, the failure in that code doesn't mean that you have to fix this code because it's a generated code."
7052920,7054920," The generation is going to override it."
7054920,7061480," So what we're doing here, we actually on each line tell you where exactly that line was generated."
7061480,7064440," So it was generated at SRC build knob stage two."
7064920,7070040," So SRC build knob stage two, line 96."
7070040,7072920," And you can exactly find where it was generated."
7072920,7077400," It would be kind of cool if our template engine did the same thing."
7077400,7078520," Right."
7078520,7086760," So essentially it generates a bunch of stuff, but it also tells you where exactly the code that generated that thing lies."
7086760,7087880," Right."
7087880,7088840," You know what I'm talking about?"
7089560,7098200," So, but it's kind of difficult to implement it right now because we don't keep track of the position of the thing that we're compiling in a template."
7098200,7100280," So if we take a look at the TTC."
7100280,7101480," Right."
7101480,7107560," So we're just splitting the entirety of the content of the template by percents and just compiling the chunks."
7107560,7111320," We don't know the locations anywhere in there."
7111320,7116520," So one of the things we could have done is maybe process this entire thing by line by line."
7116520,7117880," Right."
7117880,7124600," So and just keep track of the lines and tell you where exactly within the lines the code was generated and stuff like that."
7124600,7125720," But I will do that later."
7125720,7125960," Right."
7125960,7127960," So it's a story for another time."
7127960,7134920," But so what I'm just wanting to do, I just want you to highlight the downside of this template approach and how you can fix that."
7134920,7135560," Right."
7135560,7144680," So if there's any compilation errors that can happen in the generated code and you can't really easily find where exactly in the original template you failed."
7144680,7147320," Unless you also generate the positions and stuff like that."
7147320,7149000," So this is how to solve that."
7149000,7158120," You could have a step where you strip out all the 0x02 stuff, run it in let fail, not remove the version if not fail."
7158120,7159000," I don't know."
7159000,7166680," I don't want to do that because the reason why I generate bytes is because I have to think less about escaping and stuff like that."
7166680,7167640," Right."
7167640,7171720," So I just like provide bytes and that's it."
7171720,7177720," It will be kind of cool if compilers supported some sort of a source map."
7177720,7179800," That's an interesting idea."
7179800,7181000," Is that a thing?"
7181000,7181400," Right."
7181400,7188440," So, damn, this is such a cool idea because the generated code is actually only present."
7188440,7190440," A lot of projects generate some code."
7190440,7196360," Because of that, failure in the generated code does not correspond to the actual place you have to fix."
7196360,7203960," You can solve that by having source maps for C code in the compiler."
7203960,7206520," Because source map usually for web tools and stuff like that."
7206520,7213080," And honestly, web tools source map solve literally exactly this problem."
7213080,7216600," Has anybody came up with the solution to that?"
7216600,7219080," This is actually a cool idea."
7219080,7223560," You can make a startup out of that and scam a shit ton of VCs."
7223560,7227560," Bro, where are the tech bros?"
7227560,7232280," Guys, you can scam a bunch of more VCs with this idea."
7233640,7234200," Come on!"
7234200,7239080," I mean, that's a cool idea, no less."
7239080,7240120," So it's just like, yeah."
7240120,7246920," I think Sentry already does this."
7246920,7248760," So too late for VC bros."
7248760,7249160," Sentry?"
7249160,7250520," I don't know what is a Sentry though, but..."
7250520,7253240," I think..."
7253240,7256680," So I kind of believe that you can abuse C preprocessor to do that."
7256680,7259400," Maybe, but I don't know."
7261240,7263480," Taking notes register in startup right now, let's see."
7263480,7267320," Anyways, so as you can see, it fails."
7267320,7270760," So let's try to recompile it one more time."
7270760,7274360," So it doesn't have reminders, but what we have to do now is..."
7275960,7282280," go to the tor.c, find RenderIndex and accept Reminders."
7282280,7284920," Reminders, Reminders."
7284920,7287160," And that should be honestly it."
7287160,7289320," So we just recompile it."
7290680,7293400," So Reminders are somewhere down below."
7293400,7296360," So let's actually put this entire thing near Main."
7296360,7299320," So it has an access to all of these things."
7299320,7300840," Okay."
7300840,7303320," So when I render this thing, it wants to have Reminders."
7303880,7305240," So let's provide the Reminders."
7305240,7309000," Load Active Reminders."
7309000,7310760," Reminders."
7310760,7314920," I think that's how it goes in here."
7314920,7318360," So yeah."
7318360,7320120," So this is Load Active Reminders."
7320120,7323720," And let's allocate Reminders."
7327000,7327320," All right."
7327320,7328200," And it compiles."
7328200,7330680," So now I can restart the whole thing."
7330680,7333400," And here are our Reminders."
7333400,7334760," But we don't have any Reminders."
7334760,7335800," So let's actually add some."
7335800,7338040," So Tor."
7338040,7342680," Remind me your mom."
7342680,7344680," Well, maybe tomorrow."
7344680,7348840," 20, 24, 10, every single day."
7348840,7351960," Remind me about your mom every single day."
7351960,7353000," So that's what I want to have."
7353000,7354280," All right."
7354280,7355800," And it didn't fucking work."
7355800,7356760," What the fuck?"
7356760,7358120," It doesn't remind me about your mom."
7358120,7360360," Fuck."
7360360,7364520," Something is wrong."
7364520,7367080," Load Active Reminders."
7367080,7370280," Okay."
7370280,7371720," Tor."
7371720,7373960," I'm an idiot."
7373960,7378440," Because you're supposed to do that within the chroot envi..."
7378440,7378840," Okay."
7378840,7381240," chroot environment actually fucked me in the ass."
7381240,7385560," I want to be reminded about your mom every single fucking day."
7385560,7386840," starting from tomorrow."
7386840,7388440," All right."
7388440,7389000," There you go."
7389000,7390680," So let's surf."
7390680,7392680," And let's refresh."
7392680,7393640," Here is your mom."
7393640,7395240," In the Reminders."
7395240,7395800," Separately."
7395800,7401320," So we have a template engine that is also statically typed."
7401320,7402200," Basically."
7402200,7404680," So I can modify something in the template engine."
7404680,7408600," And if it's missing something, it's not going to compile until you fix all of the errors."
7410520,7412840," This is very powerful."
7412840,7416200," I'm telling you, this is insanely powerful system."
7416200,7417400," Holy shit."
7417400,7426040," I could implement these buttons, but that means I need to have different end points to the server."
7426040,7428360," So that means I need to parse the requests."
7428360,7430920," And it's kind of outside of the scope of what I want you to do today."
7430920,7434600," Today, I want you to just like integrate this template rendering system into the Tor."
7434600,7438360," So then I can further expand it and extend it and stuff like that."
7438360,7443800," Maybe I can have different templates for different stats and everything."
7443800,7446040," This is a very powerful system."
7446040,7447560," I can keep extending it."
7447560,7448600," And yeah."
7448600,7449960," I really like it."
7449960,7451320," This is so cool."
7451320,7453960," This is really, really fucking cool."
7453960,7456440," So I can go into here."
7456440,7461240," And then I can quickly probably change H1 to H2."
7461240,7461800," Boom."
7461800,7465960," And in here, I can have H1, which is Tor."
7465960,7468600," Then I restart the whole thing."
7468600,7469640," And it's just like, there we go."
7469640,7471480," Here's the Tor notification and all these things."
7471480,7476440," So I can move the buttons maybe at the end."
7476440,7478680," But they're not going to be aligned properly, right?"
7478680,7481960," If I put the button in here somewhere, right?"
7481960,7484600," So if I put it in here somewhere."
7484600,7485000," Yeah."
7485000,7489480," They don't look good because they're not aligned properly."
7489480,7491240," There we go."
7491240,7494120," Plug for hot reload."
7494120,7494360," Yeah."
7494360,7496680," So we can, we already discussed this."
7496680,7499000," You can actually hot reload this kind of thing."
7499000,7503160," If you put all of the templates into DLM."
7503160,7504760," All right."
7504760,7507400," So I'm already streaming for almost three hours, honestly."
7507400,7507960," Right."
7507960,7511640," So I guess I achieved everything I wanted to achieve today."
7511640,7511960," Right."
7511960,7516600," So I revived this genius, honestly, if I do say so myself."
7516600,7517080," Right."
7517080,7518520," It feels like I'm bragging."
7518520,7520280," I'm saying that I'm genius."
7520280,7523800," But when I say that, I don't feel that I created it."
7523800,7527160," It's just like, like, I don't know."
7527160,7530040," Like, it doesn't feel like I came up with that idea."
7530040,7531640," Maybe it's not my idea."
7531640,7532760," It's definitely not my idea."
7532760,7535880," Maybe like five years ago was quite some time ago."
7535880,7538920," So maybe I actually got inspired by some other idea,"
7538920,7540360," but I don't remember where I saw that."
7541320,7544520," It's just like, there's no way I come up with this idea."
7544520,7548520," It's too fucking genius for me to come up with this idea."
7548520,7550840," Because I must have stolen somewhere."
7553480,7555560," So anyway, it's a really cool idea."
7555560,7560440," I revived this idea and I integrated it with Tor."
7560440,7560680," Right."
7560680,7563720," So with the simple TCP server and stuff like that, it works."
7563720,7566040," And it works really well."
7567000,7570040," So let me see who subscribed."
7570040,7571560," If anybody subscribed."
7571560,7571960," Let me see."
7571960,7572520," Let me see."
7572520,7573880," So ifox already called you."
7573880,7574440," Claire P."
7574440,7575560," Thank you so much for your time."
7575560,7575880," Thank you."
7575880,7576120," Thank you."
7576120,7576760," Thank you."
7576760,7577960," I guess that's it for today."
7577960,7580840," Thanks everyone who's watching right now."
7580840,7581640," Really appreciate it."
7581640,7583080," Have a good one."
7583080,7585880," And I see you all on the next recreation programming session."
7585880,7588380," with Mr. Azorzin. I love you."

start,end,text
240,6480," looks like we're live hello everyone and welcome to yet another recreational programming session"
6480,12000," with a mr azuzin let's make a little bit of announcement and officially start the stream as"
12000,20880," usual so red circle uh live on twitch and what are we doing today on twitch.i television website"
20880,26880," today we're doing uh easy 3d in c with raylib how about that so i'm gonna give the link to where"
26880,31600," we're doing all that uh twitch.tv/starting i'm gonna ping everyone who's interested in being"
31600,37520," pinged and there we go the stream has officially started the stream has officially started so"
37520,41120," what did we do on the previous stream on the previous stream we were exploring the k-means"
41120,46480," clustering algorithm right and it's a very simple algorithm that given like sort of like a points"
46480,52560," in some euclidean space uh which represent maybe representations or observations or something like"
52560,59760," that uh so you try to fit them into k clusters right and uh it's actually very very simple it's"
59760,67520," actually very simple uh let me demonstrate you how it looks like so um essentially we generated uh five"
67520,74480," clusters in here you can clearly see that there is a five clusters and uh so the colors of dot represents"
74480,79760," to which cluster it sort of belongs and here we have centroids of the of the cluster so the"
80480,86240," goal of the algorithm to find the optimum position of the centroids so they could uh they correctly"
86240,91920," identify the clusters so it's an iterative algorithm and if you just iterate a few times as you can see"
91920,97120," centroids go to the center of the clusters and there you go we actually identified all of the five clusters"
97120,102480," successfully right so it's actually kind of fun algorithm right so there is a lot of applications for"
102480,107360," for this kind of stuff and on the previous stream i was a little bit struggling to come up with"
107360,113200," interesting application on the stream to implement right and then after the stream i found such"
113200,121200," application right so and such application is a color a color quantization so the idea i suppose"
121200,128000," i haven't read uh like anything about color quantization right so i'm basically gonna try to guess"
128000,135760," how it works so each uh point each pixel is basically a point in a color space right and"
135760,141840," you take all of the colors all the unique colors you put them in a color space and you essentially"
141840,150480," feed them into k clusters and there you go you got a palette you've got a palette so you can basically now"
150480,156480," reduce the size of the image by using the palette that doesn't uh reduce the quality of the image too"
156480,162960," much right so for example here we have 24 bits rgb color and after the core quantization uh it looks"
162960,169280," a little bit like less quality but still it represents the palette represents the the image quite well"
169280,175680," right so and this is what k-means clusters can be used for right so and as far as you know it"
175680,182640," it's originated in signal processing like that right so um and this is exactly what i wanted"
182640,189520," to implement today but since it's a color space it is a 3d space um this kind of visualization that"
189520,195520," we have in here is not gonna cut it right because it's a 2d visualization it would be kind of nice to"
195520,202720," actually see all of the points in the color space in 3d right and see the actual clusters and stuff like"
202720,209760," that that would have been cool and luckily raylib uh raylib has such capabilities right so because"
209760,215600," it's a library that was um you know developed for video games right so obviously it has 3d capabilities"
215600,222320," that we didn't really explore that much on our streams where we use raylib unfortunately so i decided"
222320,228800," that that could be a very good opportunity to actually explore uh 3d capabilities of raylib"
228800,232560," what do you guys think i think it's actually a pretty cool idea so and that's exactly what we're"
232560,237200," going to be doing today right so we're going to explore the 3d visualization capabilities of raylib"
237200,242640," right and then we're going to use them to implement k-means clustering on 3d and then once we have a k-means"
242640,250320," cluster on 3d we can try to do color quantization uh right and try to maybe sort of like reduce the"
250320,254480," sizes of the image or something like that this kind of stuff by the way is very useful for converting"
255120,263680," for instance pngs to gifs right so because gif has sort of like a mode where you can basically store a"
263680,269920," palette right instead of like a full rgb colors you can just like provide the palette and the palette can"
269920,276480," be provided i think in rgb colors right so you can basically compress some images right so essentially if"
276480,285040," you say each pixel is going to be uh one of the 16 colors right so you can actually store uh such"
285040,289840," thing in a few bits somewhere like it greatly compressing the image itself you can come up"
289840,296960," with a format like that so yeah all right uh so let's go ahead and see what we can do like"
296960,303840," to be fair i think i never tried 3d capabilities of raylib i think i tried them one time long time ago"
303840,308160," but i think raylib was well i mean it really didn't really change that much but i feel like it was"
308160,314960," different i was different and i forgot everything so it was long time ago so anyway uh let's try um"
314960,320800," you know to let's try to learn all that from scratch so i'm going to create a separate executable right"
320800,327440," so because we already have a lot of stuff in the previous executable here related to 2d stuff right so"
327440,332960," it's kind of difficult to integrate 3d stuff in here so i want to start from scratch so i'm going to keep"
332960,338320," both of these things like side by side uh right i'm going to keep them side by side so the first thing"
338320,343200," we're going to do we're going to create a simple hello world how about that so i'm going to do it like"
343200,355760," this so the usual thing uh sdio so print f and uh we're going to do hello world hello world and i'm going to"
355760,363520," go into my build script script right and uh i'm going to try to just build it so essentially here"
363520,368720," is the command line that builds a single executable and what i'm thinking is that maybe i'm going to"
368720,373680," factor it out because i'm going to use the same command line for building the second executable as"
373680,381600," well right so uh let's actually do something like uh build program right build program and we're going"
381600,389600," to accept uh the source source path in here and maybe the output path right so the output path uh all of"
389600,395840," that is needed for for these things so this is the output path and this is the source path uh right and"
395840,403520," then uh we're going to basically factor out this entire stuff to here right like so so and i'm going"
403520,410000," to replace this thing with the output path and this thing with the source path so and then we are"
410000,415120," running it in here so and if it returns false that means it failed but i think i'm going to propagate"
415120,422720," the the result of this thing uh you know to the color of the function right so there that then"
422720,429840," they can see if that particular command has failed or not so interestingly uh interestingly i think i"
429840,436240," want to do something like this right so the the command object has to be in here so and we have src"
436240,444960," main.c and the output is k means right so and this entire thing fails uh we're going to return non-zero"
444960,450080," exit code right there we go and if now i want to add another uh program that i want to build i just have"
450080,456640," to clone this command or clone this line and just do 3d 3d so now we're building two of these things"
456640,463280," right so now i can just go ahead and run knob and it built both of the commands it built both of the"
463280,470320," commands so now i have k means and now i also have the second command 3d which is hello world right so i"
470320,476320," have a very simple build system and as you can see it starts to slowly evolve all right so now i can"
476320,478480," support multiple executables in here"
478480,488480," which is pretty cool right which is pretty cool so if i want to make it work on uh with msvc for instance"
488480,493440," right so the only thing i'll have to do i'll have to implement this particular function differently and all"
493440,498640," the logic in here is going to stay the same right so maybe this kind of stuff uh at some point i'm"
498640,503920," going to factor it out like right into the knob right so maybe there will be sort of like a very"
503920,514320," simplistic cross-platform builders right that allow you to just say okay build the source path with the output"
514320,521040," and depending on the platform depending on the current platform whether it is gcc mingw msvc"
521040,526880," clang or something like that just do that differently right so something very very simple and maybe some"
526880,533040," capabilities to add include path so to abstract away some of these things it's going to work really well"
533040,539680," for simple things right so but for more complicated things we which you want to fine tune you you will"
539680,545200," still have to use an opcmd but but that's fine that's that's what you end up doing in cmake anyway as"
545200,551680," well right so if you need something that goes outside of the framework of cmake you you still go down to"
551680,556160," like commands right so and they're not particularly cross-platform anyway"
556160,560400," uh so i think i think that's fine i think that's fine actually"
560400,565600," all right so what we're going to do we're going to create the usual boilerplate with raylib"
565600,571520," all right so this is going to be a raylib.h and we're going to emit window uh this is going to be"
571520,583840," 800 600 uh 3d uh key uh means there we go and while uh window should close while it should not close"
583840,590400," while it should not close we're going to begin drawing and as far as i know in 3d this is not how you do"
590400,599520," scheiße in 3d in raylib actually right so let's actually see uh i think you do begin mode 3d right"
599520,606640," so begin 3d mode with custom custom camera with custom camera but to be fair maybe you still have to"
606640,614960," enclose that stuff within begin drawing and end drawing right because yeah okay i see so essentially"
615680,621840," you even have like mode 2d so you need mode 3d uh specifically for the camera and what is the"
621840,628800," camera what kind of parameters does it have uh right so you have a position target so the point which it"
628800,636720," looks at uh camera app vector rotating over its axis okay so it allows you to yeah i see so you have a"
636720,644240," target you you're looking forward and then you have the up and that up allows you to maybe like rotate"
644240,651840," thing or whatever so uh field of view right so camera field of view aperture in y degrees in perspective"
651840,659520," and uh projection so camera projection perspective or uh orthographic so obviously we're probably going"
659520,667360," to be doing perspective but maybe orthographic is also going to work well uh right basically do you"
667360,671680," guys know what what's the difference between perspective and orthographic and stuff like that"
671680,674640," so i can actually show you essentially just a second"
674640,685040," so it is actually super easy so essentially in perspective you have vanishing points right so"
685040,691520," if you looked into into the far you've noticed that the objects in like the further they go the"
691520,697040," farther they go away the closer they are go to the center and the smaller they become and they sort of"
697040,703120," converge into a single point that is called a vanishing point so and essentially uh if you want to draw"
703120,710480," a cube in perspective like in this like sort of perspective what you have to do uh you essentially"
710480,720000," draw uh sort of like um square so you draw a square uh like so super easy and you take all of these like"
720000,725360," corners and you move them towards the vanishing point you move them towards the vanishing point"
725360,735200," like so all right and there you go here you have the edges of that cube so essentially you can"
735200,743040," sort of draw a smaller version of that cube in here uh like so uh and there you go you essentially"
743040,749040," got a cube that is in perspective you can actually remove this helping guides and stuff like that so"
749040,754720," and you can draw that thing on in different places actually right you can draw them in different places"
754720,760560," and depending on their position on the screen and how close they are to the vanishing point uh the cubes"
760560,766160," gonna be different depending on this sort of like a perspective right so the main sort of difference in"
766160,771200," here is that they have a vanishing point so and you can actually draw a lot of them and they're going to"
771200,776400," look like uh they're sort of going out of these vanishing points so it's actually kind of cool so"
776400,782800," orthographic is going to be is just like the usual thing you have this face of the cube and you have the"
782800,787920," second face of the cube which is pretty much the same size right and it's just connected like that so"
787920,792800," there's no any vanishing point there is nothing in there nothing is vanishing everything is just like"
792800,799440," the same size so this is orthographic and usually in games you have perspective right so this is basically"
799440,808400," what it is so um so that's the difference like without going into the math of all of that stuff"
808400,814640," right just basically uh like you know in an artist service right because the technique that i showed you"
814640,819920," that uh to draw perspective things with a vanishing point is actually the technique the artists are"
819920,825920," use right so artists actually use uh you know this kind of vanishing points and stuff like that to draw"
825920,835600," perspectives and everything so wait so i guess that's the the main difference i think uh so yeah i just"
835600,840480," wanted to make sure that we understand all these fields um hopefully i didn't understand them correctly"
840480,849200," anyway so uh let's do begin drawing and then end drawing uh and in here we're gonna uh you know clear"
849200,855920," background with let's go with a green color now right so and after we're done with all of that we're gonna"
855920,862720," close the window close the window close the window i'm gonna rebuild this entire stuff and there we go so"
862720,871840," we've got a window uh we got a window with the green color all right so i wonder if there is any way to"
871840,881760," create camera 3d uh camera 3d uh so there is an alias to just camera for camera 3d so i suppose everything"
881760,888720," that returns just the camera refers to camera 3d specifically uh right there's different camera modes i'm"
888720,895680," really sure what the fuck all of that is supposed to uh mean uh maybe i want to try to use google"
895680,901680," right because i want to find maybe a function that returns sort of like a default camera"
901680,907840," right so i want to have a default camera because obviously i'm not uh you know filling up all these"
907840,913360," things myself right so i don't really know what i have to put in here do i fill it up myself uh right"
913360,918720," it will be kind of nice if if i just had some sort of a default camera right i wonder if i can just use"
918720,926240," google uh all right so google google i forgot how to use it by the way uh does it tell me how to use"
926240,931360," itself okay so it does in fact tell me how to use it right that's actually pretty cool so i'm going to"
931360,937360," do raylib and what i'm going to be looking for i'm going to be looking for something that returns camera"
937360,946560," right any does anything return a camera uh in here right so nothing really returns a camera in here"
946560,953920," surprisingly is anything like accepts the camera uh right so maybe i have to do it like that so camera"
953920,961600," void uh no nothing so i suppose things only primarily accept the camera right so that means i have to build it"
961600,969680," myself uh there is a get camera matrix uh all right that's very interesting oh okay so it's just like a"
969680,975040," transformation matrix for that specific camera all right that makes sense i suppose okay that means"
975040,982000," that we have to create the camera ourselves sure i mean we can do that camera uh camera uh 3d"
982000,988800," camera i'm going to initialize this entire thing with zero for now uh right so let's clean everything"
988800,997040," with uh you know the background color right so let me see uh get color uh i'm going to be using the"
997040,1002960," usual color little like 80 80 80 80 so that's my favorite color uh and in here we're going to do"
1002960,1007600," begin mode 3d we're going to provide the camera we're going to provide the camera and then we're going to"
1007600,1016000," end uh and mode 3d so maybe since the this thing act like sort of brackets uh i think it makes sense for"
1016000,1022160," me to maybe indent this entire stuff right so and we have to draw something here and i wonder if i can"
1022160,1029680," simply draw a cube is there any way to draw a cube uh draw cube okay"
1029680,1040800," we're already good to go look at that the uh so if you want to draw a cube uh you can just do it in here"
1040800,1046480," so position what's going to be the position let's say that position is going to be uh maybe zero zero zero"
1046480,1050800," right so something like this so this is going to be the position and i'm going to just initialize all"
1050800,1057440," of that i might as well do something like oh yeah i can do vector uh three zero i'm pretty sure"
1057440,1064800," something like that does exist in ray math right so vector three zero there you go i do remember that"
1064800,1070960," there we go that's pretty cool so it's going to be width and height um right i suppose we can say"
1070960,1081120," that it's going to be maybe one right so it's a one by one uh right so width height and length"
1081120,1086640," one by one by one uh and this entire thing is going to be red right so there you go so we have a cube"
1087200,1095360," um it would be maybe kind of nice to actually do um let's say position is going to be minus one minus"
1095360,1103520," one minus one and width height and length going to be two so it's like center mass is at the center"
1103520,1109680," of the coordinate system or something like that uh right because of that i think i'll still need to"
1110320,1116000," create position in here so this is going to be something like vector three position right so this"
1116000,1121760," is the position minus one uh minus one minus one something like that and obviously we're probably"
1121760,1127680," not going to see anything because the camera is completely uninitialized right so nothing really is"
1127680,1133520," happening in here so let's go ahead and just like rebuild uh this entire stuff and see how it goes"
1133520,1138240," right so it doesn't build because i don't have to provide anything in here and there you go"
1138240,1145680," we've got some things we see nothing we literally see nothing isn't that a poggers i think that's"
1145680,1154960," pretty freaking poggers okay so let's try to um we can take a look at some of the examples we can try"
1154960,1159680," to take a look at some of the examples but i want to try to figure out that shit myself if you know what"
1159680,1166800," i mean i want to figure out that shit myself uh and so raylib actually comes with a lot of different"
1166800,1174320," examples and stuff like that i can take a look at them i have a source code in here and uh here are"
1174320,1181360," examples oh i actually stripped examples off uh off of the raylib in usualizer do i have a source code"
1181360,1186400," in anywhere in here so i do have a source code in here so i might as well take a look at the examples"
1186400,1193520," in here there you go and uh there should be something like shaders models would you look at that right so draw"
1193520,1200960," cube texture uh right so how many just cubes waving cubes and stuff like that so there is this example"
1200960,1206560," that draws cubes and stuff and everything and i could look at that uh those examples but i don't"
1206560,1214640," want to i just want to see how intuitive the api of raylib is by itself without any examples examples are"
1214640,1221280," actually the best uh way to document uh library in my opinion right because we kind of learn like"
1221280,1226880," artificial intelligence we are intelligence right so it's just like we learn by looking at examples and"
1226880,1234800," sort of extrapolate to to the rest of the things right so we just need some points in the um you know on"
1234800,1240880," a graphic and then we can extrapolate and understand how the entire thing works so uh but something that"
1240880,1247600," is even better than examples is actually an api itself that you can sort of derive how to use that"
1247600,1254160," api by looking at the signatures by looking at the types and stuff like that right so um something like"
1254160,1260720," that is even better and raylib is actually super good at that surprisingly it is super good at that all"
1260720,1266000," right it keeps everything super simple so we can kind of like look how quickly i found how to draw"
1266000,1272320," a cube we still can't draw any cube we still can't see any cube but i can imagine that i just need to"
1272320,1278160," position the cameras like correctly right so that's what i need to do uh that's what i need to do so the"
1278160,1285600," position of the camera i suppose since i said it's zero it's zero zero zero so that means we are inside of"
1285600,1292720," the cube if that makes any sense right so we are inside of the cube uh so what we have to do we have"
1292720,1303440," to go somewhere outside of it so i suppose um the usual thing is that uh you have like x and y so x and y"
1303440,1312640," coordinates in here and z either goes like forward or it goes backwards i don't remember which one is"
1312640,1318240," like ray leap uses in here right which one ray leap uses in here but maybe we can experiment with maybe"
1318240,1326240," we can just see how it goes so anyway um so let's go ahead and just try to craft the the camera so"
1326240,1334800," we're going to do a position so the cube is uh two by two by two so and essentially if we position ourselves"
1334800,1342000," if we position ourselves at zero zero zero we have to go sort of like a backward by two right and we're"
1342000,1349120," going to assume that the z goes forward so we go backward by two so that means we're going to have"
1349120,1357360," zero zero minus two right uh maybe we can even uh create some sort of a cube size right which is going"
1357360,1363600," to be two right so it is going to be two um and because of that we're going to just subtract the cube"
1363600,1373520," size so this is a cube size uh here uh we are having something interesting so this is going to be minus"
1373520,1381360," half of the cube size right so this is minus half of the cube size cube size half so that way i can kind"
1381360,1387840," of control this kind of control this kind of thing and all that stuff is the cube size uh there we go so"
1387840,1396560," here we can maybe specify cube color something like this the cube color is going to be red and what that"
1396560,1407360," allows us to do what that allows us to do is basically uh position ourselves at z at cube size minus cube size"
1407360,1415760," half but also but also plus one so you have a little bit of a space between your eye and the cube so you"
1415760,1423840," can see the cube or maybe we can actually always go twice of the of the half of the cube twice of the"
1423840,1433920," half of the cube it's a full cube yes twice okay that's really fun but anyway uh twice of the half"
1436640,1439280," this is such a funny phrase twice of the half"
1439280,1445920," i really like it's it's one yes it's one"
1445920,1457600," um anyways so it's going to be the target the target is obviously going to be the like the cube itself"
1457600,1466000," which is positioned at um effectively zero zero zero right so this is where it's located um so up um"
1466880,1474800," so rotating over its axis the camera vector and i don't really know like uh how to do this so let's"
1474800,1483840," do up and it's going to look up right so that means z x and x and z are going to be zero and what's going"
1483840,1491440," to be y y is going to be up so that's that's what you want from me i suppose that's what you want from me"
1491440,1501040," okay so i i can provide that no big deal uh fov so i'm i'm really glad that you specify that it's in"
1501040,1507120," degrees right so because i had a couple of uh weird weird situations when i like i couldn't understand"
1507120,1511920," why my shit doesn't work and this is because i was using radiance instead of degrees but to be fair"
1511920,1518960," ray leap is kind of consistent on using degrees when it comes to angles that's kind of interesting"
1518960,1527920," actually i wonder why though so i suppose ray leap ray leap was initially designed for uh teaching people"
1527920,1532880," programming and teaching people people computer graphics like in schools in universities and stuff"
1532880,1539440," like that and obviously the students have uh you know math courses and all the math courses they they"
1539440,1546080," use degrees right so i suppose to help people accommodate for that uh so they just decided to"
1546080,1550000," what's like they use degrees all the time right because it makes sense you can just use some of the"
1550000,1555680," formulas that you learn in in a math class uh right in here in the programming class or something like"
1555680,1563680," that so so the major sort of like a thing difficulty that you face when you come from math to programming"
1563680,1569600," is just getting used to using only radiance instead of degrees but maybe i don't know maybe professional"
1569600,1576880," like mathematicians also use only degrees i don't know so uh in terms of projection uh in terms of"
1576880,1583200," projection we can uh try to use orthographic just to see how it looks like and i have to specify foe"
1583200,1590480," right so let's actually specify maybe 90 degrees right so it's going to be 90 degrees so projection"
1590480,1595760," is going to be uh right let's try orthographic and see how it goes right so this is going to be just"
1595760,1602960," orthographic projection and there you go we kind of specified everything hopefully hopefully we"
1602960,1615680," specified everything so let's see how it goes uh target did you mean uh oh"
1623040,1630640," okay that's very interesting so how did i put that dot in here accidentally so i have a compose key"
1630640,1634000," all right so i have a compose key that allows me to do these kind of things"
1634000,1639120," uh right so which is kind of cool so i suppose yeah i can see that so if i"
1639120,1645760," hold compose and then t dot it actually puts a dot in yeah right so i can actually type a lot of"
1645760,1655920," like special unicode characters and stuff like that so in russian language we use these kind of quotes"
1655920,1662160," instead of usual uh these kind of things right so this is more of like they're not really russian as"
1662160,1666640," far as i know they're french quotes right so we stole that from french if i remember correct"
1670160,1680800," um greek question mark moment yeah exactly greek question mark okay so and we can't see choice in"
1680800,1690000," this mist we literally can't see choice uh okay so we can try to understand why we can try to understand"
1690000,1697840," why this is maybe because we're coming from a wrong position we're coming from wrong position uh so"
1698560,1706080," essentially i assume that z goes forward right z goes forward uh maybe it actually goes backwards"
1706080,1710800," in that case right so what i have to do i have to actually do something like this"
1710800,1715280," all right so let's see if it's going to change anything there we go"
1715280,1726720," uh so yeah that's how we figure it out that's how we figure it out so uh forward"
1727280,1733600," is actually negative z right so how do you so i know that there is like a left-handed coordinates and"
1733600,1742240," right-handed coordinates but i can never remember like uh how do you determine okay so essentially"
1742240,1751280," you have x and y right so you x and y you align your thumb to x and you align your pointer to to y"
1751920,1759440," right right and depending on uh right on your hand the z is going to point in different directions"
1759440,1765920," so i suppose this is a right-handed coordinate system right because i just align my thumb along the x"
1765920,1772800," and i align my uh pointer along the y and the the middle finger points i suppose towards me so the"
1772800,1777360," negatives go that so because of that this is a right-handed coordinate system did i understand that"
1777360,1784560," correctly because i'm not a graphics programmer or anything like that uh right so this is a right-handed"
1784560,1791360," and this is the left-handed so this is correct okay so do we even have a mentioning of that"
1791360,1796720," in here right uh handed yeah okay holy"
1796720,1805600," uh yes they taught me this in school yeah yeah so the only thing i remember in school is that"
1805600,1812240," you have to just align some of your fingers with some axes and some other finger will show you something"
1812240,1817760," but i don't remember the details so i just went with the most logical thing right so the most logical thing"
1817760,1821680," is just like yeah and i actually guessed it that's actually pretty cool"
1821680,1834960," so it's like big ending a little ending and stuff like that um"
1834960,1843600," anyways anyways so we can so this is the orthographic projection right so this is specifically orthographic"
1843600,1850720," projection and we are not particularly interested in that i think uh we're more interested in perspective"
1850720,1858080," right but i have a feeling that the with the way with what we're drawing on the screen this is not going"
1858080,1862960," to be that much different right so this is not going to be that much different right so there's like"
1862960,1870160," nothing that indicate yeah there we go so that is kind of bizarre honestly right so"
1872160,1889200," huh why is it only only a half i have no idea honestly um so we need to understand why so in perspective it's"
1889200,1895680," uh it's actually this right i would expect it to okay so this is the target"
1896400,1909680," uh this is another thing so the position is half of the negative so and then you get the full thingy"
1909680,1917760," and that should work but yeah it's kind of weird it's kind of weird uh but anyway but anyway but anyway but"
1917760,1924000," anyway so if i try to increase the size of the cube if i try to increase the size of the cube nothing really"
1924000,1928640," changes right so because we scale all of the positions and like literally everything"
1928640,1935040," along uh with uh with the size of the cube so literally the size of the cube doesn't really matter"
1935040,1939680," and maybe because of that we can just like put something a little bit bigger than what we have in here"
1939680,1948960," um so we can try to maybe move around a little bit right so we can introduce something like is"
1948960,1961200," is key pressed and essentially maybe uh is key down right maybe if is key down key let's say s right so"
1961200,1969120," we're going backwards uh we're going backwards and as we go backwards uh we can take the camera position"
1969120,1978160," camera position uh specifically z right so and we can keep incrementing it by some sort of a speed right so"
1978160,1987360," let's actually say camera camera speed multiplied by delta time and of course delta time is the get"
1987360,1993840," frame time something like this so that allows us to go backwards right so because forward is a negative z"
1993840,1999440," and we can try to go uh forward as well so this is a very simple condition i can actually make it"
1999440,2007520," something like this so if key is down w right so we can do subtraction in here right so we can do subtraction"
2008160,2014960," okay so let me see if we can do anything about that so the camera speed let's define the camera speed"
2014960,2022000," and uh let's say that maybe it's going to be the cube size right so we're moving cube size per second"
2022000,2029280," right cube size per second so is it going to change anything yeah there we go we can move"
2029920,2037760," uh you know forward and backward and stuff like that that's pretty cool uh i still do not fully understand"
2037760,2045920," why the cube is located like that i specifically crafted the cube so um it's at the center but maybe i am"
2045920,2056080," actually wrong so maybe what you're doing huh so let me take okay let me take a look at the implementation of the"
2056080,2065840," the draw cube okay what i thought what i thought is that you specify the position of the corner over the"
2065840,2071040," corner and then you specify the sizes so the width height and length and stuff like that"
2072240,2077200," don't freaking tell me that what i'm doing is specifying the position of the center and then"
2077200,2085600," the rest so i do specify the position of the center so because of that i would expect and really when i"
2085600,2093120," draw the cube i would expect it to be called center or something i would expect it to call center we can"
2093120,2100320," actually confirm that we can actually confirm that uh by looking at the source code right so always just"
2100320,2106960," look at the source code source code is the best documentation you know why you know why source code"
2106960,2112960," is the best documentation because it is never outdated it is never outdated because if it gets outdated"
2112960,2120160," your code doesn't fucking compile you're literally forced to update your documentation before you can"
2120160,2126000," compile it the actual human readable documentation nothing actually checks whether it's up to date or"
2126000,2135440," anything like that right so it can go stale very easily right it is very trendy and it's very fashionable"
2135440,2139840," today to say oh look in the future the ai is gonna do that okay sure sure yeah"
2139840,2150000," judging by how ai treats the factual information right so"
2150000,2159440," okay so let's take a look at the implementation of that specific thing i wonder if there's like a r"
2159440,2165520," model okay so draw cube uh okay so you have this kind of"
2165520,2172960," of course they even take they even take half of the width"
2172960,2185760," ray sama why didn't you call this center cube position yeah of course why don't you have this node in a"
2186720,2196720," in a header where it's needed the most like come on come on seriously like less people are gonna look"
2196720,2202800," into the c files rather than the like h files like come on but maybe it's set somewhere in the examples"
2202800,2210000," of documentation or something like that i mean yeah i know so uh all right so you're supposed to actually"
2210000,2216800," provide the center okay so all of that scheisse must be zero and that means all that has to be zero and"
2216800,2223680," yeah there we go might as well just do vector three so my initial uh thing was correct apparently right so"
2223680,2236160," this was correct uh okay go um so vector three zero so i need to do ray maps ray maps"
2238000,2253440," ray maps okay so you can't really see anything much right so especially perspective because it's such"
2253440,2259120," a solid thing we need to implement some sort of a rotation right we need to implement some sort of rotation"
2259120,2266960," um by the way i think i want to try to make the window resizable right how do you make the window"
2266960,2272640," resizable i do remember there was some sort of a special flag there you go uh to make the window"
2272640,2279600," resizable right so now i want to see what's going to happen oh it actually adjusts everything all right"
2279600,2290960," look at that so yes so this is almost like a 3d game does it feel like a 3d game chat i'm like okay"
2290960,2301040," okay okay i'm moving backwards and i'm moving forwards this is the 3d game clearly this is a 3d clearly"
2305040,2317120," anyway so we can try to move like uh left and right uh why not so if is key uh down key a so this is"
2317120,2328400," moving to the left so camera camera position x uh is going to be essentially well so if we're gonna start"
2328400,2335680," messing with the rotations and uh targets and stuff like that um this is gonna be a little bit painful"
2335680,2345040," right so because this is not how it all works but we'll see we'll see so um x so this is gonna be minus"
2345040,2357360," x minus camera uh speed dt and then we're gonna do d it's gonna be uh x plus something like this"
2358080,2359680," right so i can oh"
2359680,2367520," this isn't okay"
2367520,2377280," oh i know i know what is going on because the target is this holy okay i see what's going on i see what is"
2377280,2386720," going on because the target is the same all right so because we still um okay okay that makes it but at"
2386720,2392000," at least we can see that it is 3d okay at least we can see we can clearly see that this is 3d"
2392000,2398160," all right i'm moving left and right but since target is locked at zero it's just like yeah"
2398160,2406400," so that's that's kind of funny so i think it may make uh this kind of shot a little bit easier"
2406400,2416240," because we can render out our scene our stuff around uh zero zero zero we can lock the camera"
2416240,2422640," looking at zero zero and we can just have a vector that moves around and it's always going to be"
2422640,2429280," looking at that center at that scene which is extremely convenient right so when you have a bunch"
2429280,2438160," of points and stuff like that uh so we can basically uh bind like a scroll mouse scroll on making that"
2438160,2446080," vector longer or shorter effectively zooming in and zooming out and for moving around uh right so we can"
2446080,2452480," just like update the angles of that vector or something like that right so you can hold mouse"
2452480,2456960," down and you'd like moving around and you can just like update certain sort of angles"
2456960,2463120," so that makes a lot of sense i think uh that makes a lot of sense maybe we can represent like a"
2463680,2471280," uh you know that specific factor as two angles right so there is like an angle for the x and y"
2471280,2477520," and another angle for the other thing and that way you can control all them yeah that's a little fun"
2477520,2483760," that's cool i really like that so i wonder if i can like literally implement that i wonder if i can"
2483760,2492400," literally implement that so essentially uh we have a magnitude uh camera magnitude which is initially"
2492400,2499840," going to be uh let's say cube size uh maybe even uh twice of the cube size right so this is initial"
2499840,2505760," magnitude and so you essentially are going to have two vectors so i don't really know the conventions"
2505760,2513280," on how people call those vectors but i'm going to call them alpha and you know better right so sort of two"
2513280,2520640," vectors you know what vectors i'm talking about right so um right if you have 3d and stuff like that"
2520640,2526720," does anybody remember how they're called right because i'm not a math person i do not know"
2526720,2538720," shit i do not know shit i just around until i find out right so z so the first angle is this one so and then"
2538720,2546720," the second angle is like this one so that way you can kind of represent uh theta and alpha right theta and"
2546720,2554720," alpha so but the first one this one is alpha and the second one is theta right so something like this"
2554720,2560080," which one is which alpha better yeah"
2563360,2570000," all right all right so i'm gonna call this uh theta theta theta sigma"
2570000,2571760," ligma"
2571760,2573840," ligma"
2573840,2577760," okay"
2577760,2579520," and this"
2579520,2586480," so instead of updating the camera like this we're gonna actually you know do that slightly differently"
2587200,2596000," um so um so and that means the camera the camera should be computed at each individual frame effectively"
2596000,2605680," right so because the actual state of the camera is this not this we are uh converting like the magnitude"
2605680,2610560," and two uh two angles to this specific camera right so that's basically what we're doing"
2611600,2622560," uh so and in here we're gonna have le position le position so let me try to see how we're gonna do all"
2622560,2631440," of that so we have x in here uh so an x if i'm not mistaken it's a cosine cosine of alpha multiplied by"
2631440,2636560," the magnitude right so this is a cosine of alpha multiplied by the magnitude and y is a sine"
2637520,2641600," of alpha multiplied by the magnitude so what's going to be the z"
2641600,2650960," uh what's going to be the z does anybody remember does anybody remember so maybe maybe by the way maybe"
2650960,2658400," we could just use matrices i know that there is a matrixing so something like rotation uh so quotarians"
2659920,2668720," transform vertex information date maybe we can use that size maybe we can use that choice rotation scale"
2668720,2682640," ah quaternion i remember using quaternion like once uh and x y z w components i don't remember what"
2682640,2689840," these components mean i mean honestly so uh and where do i put transform i put it into the model right so"
2690560,2698000," can i uh so i can get the matrix of the camera specifically but can i construct"
2698000,2704000," like a camera out of the matrix right i know that nothing really returns the camera so the answer is"
2704000,2710960," probably no the answer is probably no so get collision between ray and mesh and also oh yeah so that's"
2710960,2717440," probably the reason why you can get the matrix of the camera right that's why you can get the matrix of the camera"
2717440,2725040," because uh then you wanna check some collisions within the camera space or something like that"
2725040,2735600," so equatorian defines a line from the object x y z and the rotation w usually in radians okay so that that makes sense"
2735600,2742240," you know what uh i think i'm want to make a small break i want to make a small break and uh make a cup"
2742240,2747280," of tea because i'm already streaming for one hour uh right so and after the break we're going to continue"
2747280,2752640," figuring out how to sort of like represent the camera so i want something simple right i don't really want"
2752640,2758160," to over complicate anything right so we just need to be able to maybe just like fly around the scene and"
2758160,2762160," that should be pretty straightforward but that should be pretty straightforward if we're going to struggle"
2762160,2767440," too much we can always look at examples but i'm going to use examples as the last resort the most"
2767440,2773200," important thing for me is to just figure out things myself because that's how i achieve understanding"
2773200,2784080," i know it is laughable in 2023 already almost 2024 uh so the current sort of like um trend is that"
2784080,2792080," the less you understand the more successful you are and you think i'm exaggerating or joking or"
2792080,2799360," anything like that but look at the current web the higher you are in abstractions and the less you"
2799360,2805520," understand the cooler you are because you're so effective and get so much done doesn't matter that the"
2805520,2813200," the website website is dog slow and uh you know crashes all the time that doesn't matter like who look how"
2813200,2821600," fast i am and if you try to understand how their stack works uh you are called wrong right and especially"
2821600,2829760," right so with the rise of ai right so understanding of things is actually even lower like you know"
2829760,2836960," the reputation of being able to understand things is even lower because why you can just ask chat gpt"
2836960,2845200," so look the less you understand the more successful you are right so and so i understand that trying to"
2845200,2853440," understand the library is absolutely laughable in 2023 because that's a sign of a loser that's a sign of"
2853440,2861440," unsuccessful person that never gets anything done but maybe i am maybe i am i'm also a person that uh ran out"
2861440,2868400," of t so let's make a small break um all right so on the break i just remembered that um so the thing i'm"
2868400,2875280," thinking about is probably the polar coordinates uh polar coordinate system right this one so in a polar"
2875280,2885280," coordinate system is literally uh two angles at least in 3d and a length right so in 2d it's one angle and the"
2885280,2894080," radius right so and in 3d i wonder like this wikipedia page is kind of weird uh so does it do 3d extension in"
2894080,2900240," 3d so cylindrical coordinates uh spherical coordinate system right so that's yeah this is what i was"
2900240,2907680," thinking about it's a spherical coordinate system uh because uh polar coordinates in 3d they have two sort of"
2907680,2915360," flavors right cylindrical ones and spherical ones so i suppose in here we want uh spherical ones and we"
2915360,2923600," want to be able to convert them to cartesian uh tusion coordinate system uh right so is there any sort of"
2923600,2932800," conversion uh okay so this is a conversion from cartesian to uh this thing but from spherical ones to"
2932800,2939680," cartesian is actually super easy okay so there's a theta and uh gamma right so this is a"
2939680,2945440," fee fee i don't know greek alphabet i'm sorry"
2945440,2954480," okay listen in my life i already had to uh learn two alphabets right latin and servilic one don't"
2954480,2958000," just cut me some slack why do i have to learn a third one now"
2962800,2974160," come on how many goddamn alphabets do i have to learn like why people keep making alphabets"
2974160,2983920," uh this is fee right so this is come on uh fee yeah so i guess i guess that correctly and"
2983920,2986080," accidentally pressed ctrl q thank you so much"
2988480,2994640," uh all right spherical coordinate system i can actually open it up and by the way i suppose it"
2994640,3002720," makes sense to actually add it to the uh you know the description right so wikipedia uh spherical spherical"
3002720,3006080," spherical coordinate system"
3006080,3018160," so and uh in here we can be sure that this is more of a theta and this is fee right and this one is"
3019120,3027600," we can even prefix it like that camera uh theta phi uh and uh magnitude right so this is basically the"
3027600,3034960," different state of the camera right and i kind of really like that so let me let me see so conversion"
3034960,3044400," conversion the coordinate system conversion so x has to be this kind of stuff so we get the magnitude and"
3044400,3053360," and then we take take the scene uh and this one is theta uh and then multiply by cosine of uh phi"
3053360,3059040," right and then here we have two scenes uh"
3059040,3069920," uh theta phi uh speaking of understanding right so this doesn't be like i want to understand everything and then"
3069920,3074560," uh mind this mindlessly retypes the formula from wikipedia so yeah"
3074560,3077520," being hypocritical like that am i right so"
3077520,3083680," uh but i will understand it eventually i'll understand it eventually i'm pretty sure i can"
3083680,3087680," derive that formula it's just like it's one of the things that you have to"
3090320,3098000," sort of like derive once and then reuse as a black box maybe probably who knows"
3098000,3100880," uh"
3100880,3106960," it's like for example formula for barry center coordinates i kind of know how to derive that"
3106960,3113280," formula but i don't remember it off the top of my head right so it's just like how am i supposed to"
3113280,3118880," remember that like i can't remember that honestly right so i can derive it right then write it down so"
3118880,3123760," we're on a sheet of paper or maybe save it on the computer uh but remembering that is just like"
3123760,3130320," uh we got right from pro thank you so much for for raid yo what's up what's up what's up what's up"
3130320,3143200," so yeah essentially we we're trying to uh to do 3d using array lib not only 3d actually the main goal here"
3143200,3146320," today is to um"
3146320,3153840," to decay means clustering in 3d space so we're just using array lib for visualizing that 3d space"
3153840,3156560," right so that's what we're doing essentially um"
3156560,3158080," and up"
3158080,3161360," is kind of annoying right isn't the app supposed to"
3161360,3167200," again damn it maybe maybe it's fine maybe it's fine right so i'm going to just keep it as it is right now"
3168240,3173200," uh all right so that seems to be that seems to be fine so one of one of the first thing i would like"
3173200,3184640," to do i would like to maybe handle the wheel right so get mouse wheel movement uh huh so this is get mouse"
3184640,3193600," will for x or y so and essentially uh if we try to maybe handle this entire thing so get mouse"
3193600,3205920," will float wheel uh if will not equal zero we're going to just print it i want to see what's its value"
3206720,3213440," right is it from zero to one or like minus one to one or is it something else uh because i think it's"
3213440,3218480," quite important okay so it's minus one and one so that that's important right so that is in fact"
3218480,3225840," important so uh that means what i can do is essentially take the camera magnitude"
3227280,3236160," and uh add well to be fair right so you probably want to multiply maybe not multiply let's actually do"
3236160,3247840," add plus uh will multiply by cube size right so say that a single sort of like a click of the of the wheel"
3247840,3255040," right so um it's going to be like one cube size let's see if it's going to work and it doesn't freaking"
3255040,3263200," work something something is wrong and unused thingy in here so literally nothing happened"
3263200,3269280," literally nothing happened i'm actually quite surprised so maybe because it has to be bigger"
3269280,3277280," or something so do we even use camera magnitude in here like why nothing happened why nothing is happening"
3277280,3283280," oh okay i see"
3283280,3296400," maybe one of the things okay we can introduce something like camera uh camera magnitude uh velocity"
3296400,3303120," right so let's call it vel and initially it is zero so i think it's it's going to be way cooler right it's"
3303120,3310960," going to be way cooler you have camera magnitude plus camera magnitude velocity multiplied by dt"
3310960,3320080," right and when you do a wheel you basically do camera magnitude velocity plus the value of wheel"
3320080,3325280," right we can even maybe inline this entire thing multiplied by the cube size or what not"
3325280,3331440," uh all right so and what's interesting is that with the camera magnitude velocity you can basically keep"
3331440,3338080," making it slower right so you you can add a little bit of a friction to the camera so that way you can"
3338080,3342960," have a little bit of a smoothing uh right so which is which is kind of cool"
3342960,3353200," so and to be fair when i scroll up i would like to actually um you know"
3355360,3364560," go forward that's what i would like to have yeah so that seems to be kind of working"
3364560,3372080," but maybe it has to be even faster than that so what about like five times of the cube size"
3373760,3383040," yeah"
3383040,3391520," that's pretty cool so but maybe when we do this kind of shot we have to take the absolute value of the"
3391520,3396480," the camera magnitude"
3396480,3400800," maybe even further uh what if i"
3400800,3404560," do something like this"
3404560,3410400," all right absolute value always"
3410400,3415680," abs"
3415680,3418880," f abs of course"
3421520,3432320," but maybe it's not a particularly great idea in the sense that uh simply don't allow magnitude"
3432320,3442240," become negative right so if camera magnitude is less uh or equal than zero actually less than zero"
3442240,3448080," just make it always equal to that just make it always equal to that"
3450880,3451760," so i think that's a"
3451760,3458000," that's a good one you're still gonna go inside of this thing"
3458000,3464640," but that is fine so we can actually make it not zero but more of a like a cube size"
3464640,3471840," half right that way it's gonna always stay but to be fair it doesn't really matter honestly this"
3471840,3472560," doesn't really matter"
3472560,3478320," because uh this is not we're gonna what we're gonna have on the scene right so it doesn't"
3479840,3486880," doesn't matter uh so now uh we want to start rotating uh like changing different angles"
3486880,3489680," right so if for instance"
3489680,3495680," how we're going to be doing all that in array leap there was get mouse"
3495680,3502720," delta this one is a very interesting right this is a very interesting thing because it gives you a vector 2"
3504320,3512880," right and effectively it is a delta uh of x and y and you can use this thing to update theta and phi"
3512880,3523360," effectively right so essentially uh we can try to print uh this kind of stuff so if delta x plus delta"
3524240,3531440," y is not equal to zero we can try to just print them and see so all of that should happen"
3531440,3542160," only if is mouse button down uh mouse button left right so while we're holding the thing right well"
3542160,3546880," we're holding because that's what we're going to be doing anyway um all right and then here we can say f"
3546880,3558400," f and this is a new line delta x delta y uh there we go there we go uh yeah yeah so"
3558400,3568480," you know we probably want to have absolute values right of these things uh fobs fobs so that's what we want"
3569040,3574880," um fobs we have absolute absolutely absolute values right"
3574880,3581360," and also normalized right no not absolute normalized Jesus"
3581360,3588880," maybe because of that we want to normalize this thing does really come with normalizer"
3588880,3598480," so math nor ma lies and how does it normalize in case of a okay so in case of a zero if this entire"
3598480,3601520," stuff is zero it just like doesn't normalize which makes sense okay"
3601520,3609200," so one of the things we can do we can do vector to normalize and there we go we have a data that is"
3609200,3617600," normalized and which is basically um right this but it's not minus one or one or anything like that"
3617600,3626160," doesn't freaking matter anyway so uh what i need to do i'm going to just assign x and y on theta or phi"
3626880,3633680," camera theta uh plus delta x and let's see how it's going to go at least for the x"
3633680,3643600," uh right so it goes too fast so let's actually uh you know reduce the um you know the impact of this thing"
3643600,3653120," okay so that's already cool and uh we actually want to do minus right so we actually want to do minus"
3653120,3664880," something like this uh yes yes so that's pretty cool and i want to do phi as well so but only for y"
3664880,3668720," and i think this is where it will go haywire yeah"
3671600,3683280," because i feel like yeah so there's something about up there's something about up we also need to keep"
3683280,3695280," updating up unfortunately we need to keep updating up uh so essentially this is my hypothesis but i'm not"
3695280,3705840," 100 sure as usual because i'm a dummy dum-dum uh all right so you have a 3d scene you have 3d scene x"
3706960,3714720," y y y z and you have your like you're looking at the center in here right so you're looking at the"
3714720,3720000," center in here like so this is where you're located your position is defined with the magnitude theta and"
3720000,3728800," phi uh right and you have also this up vector right you also has the have this up vector and i suppose it"
3728800,3737680," has to be particular to like you in here it should like point in some certain direction and i wonder how"
3737680,3738640," the f would you do that"
3738640,3749920," so i'm not 100 sure how the f we will do that uh but maybe i don't want to do it right now"
3750880,3759600," um so what i'm gonna do what i'm gonna do i'm gonna just only allow rotation horizontally and"
3759600,3769360," that is gonna be it uh like allow vertical rotation because i already spent way too much time on uh"
3769360,3776720," rotation i don't i don't think it is particularly healthy so uh we're gonna call it we're gonna call it"
3776720,3784240," done for the rotation and let's actually move on to implement key means clustering in 3d because that's"
3784240,3791760," that's exactly what we want uh so we can take a look at our 2d example in in 2d example we had samples"
3791760,3800640," right so and samples were in 2d right the samples were in 2d we can port this thing here and we can call"
3800640,3806320," it three maybe it would make sense to actually call it like 3d samples and this one is going to be 2d"
3806320,3812320," samples right so obviously it will create compilation errors through which we'll have to go uh right so"
3812320,3820320," samples 2d in here right so boom uh that's pretty cool so now we have some sort of 3d samples"
3820320,3827760," and in a 2d example we had a function like generate cluster right the generate cluster would generate your"
3827760,3833120," cluster um in a particular center um in a particular center right it just generate generates your cluster"
3833120,3842720," in a particular center and in here let's actually do vector 2 vector 3 boom and uh we're using samples 3d"
3842720,3851440," samples 3d so we are generating this thing in a particular radius here is an interesting thing"
3853120,3860160," this is radius into d and the formula for this kind of conversion is going to be useful for us as well"
3860160,3865520," i wonder if ray deep has something for polar coordinates polar yeah okay ray math"
3865520,3873520," polar it doesn't have anything about polar coordinates what a shame seriously because polar"
3873520,3880560," coordinates are like quite often used in game development i think i think they are i remember when i was a kid"
3880560,3886240," in school and i was learning about game development and c plus plus and stuff like that uh like i had"
3886240,3892800," a book about that and it said that uh you know polar coordinates quite often used for like torrets right"
3892800,3899280," because you you need to sort of point the gun in a certain direction so polar coordinates are quite often used"
3899280,3909280," there uh something like from angle uh could be yeah so let me actually see uh so ray math from angle"
3909280,3912400," from axis angle oh"
3912400,3922160," get rotation quaternion for angle and axis wow maybe i can use that"
3923760,3931200," this is actually again i'm using way too much time on rotation and stuff like that i should stop"
3931200,3937360," actually i should literally stop right so because otherwise i'm not gonna get anything done for today"
3937360,3940480," so essentially what i want to do for the cluster right so i need to generate"
3940480,3951040," uh not only random magnitude uh but also random theta random theta and a random fee right and this"
3951040,3954880," is what i'm gonna be converting in here uh to the sample"
3954880,3966160," so there we go uh we can write whole about rotation after i'm done with k-means clustering because i feel"
3966160,3971840," like it may take too much time unfortunately i wish i could do that right but we have a limited time"
3971840,3977440," limited error time okay so we have like a generated clusters and everything so that's pretty cool"
3977440,3982560," uh let me try to compile this entire thing so let's go to the compilation errors rand float this is a"
3982560,3987840," function that i introduced in 2d uh right i would like to actually maybe rename this file to"
3987840,3993040," 2d if you know what i mean all right so that will require also updating the build script"
3993040,4002320," uh right so this is basically 2d uh and this is 2d you have 2d and 3d two separate things and i think"
4002320,4006960," that's pretty cool uh right so that's pretty cool uh right so rand float and we could probably have"
4006960,4014560," something like a common uh c in here and we can move some of the things there like for instance rand"
4014560,4023680," float i think it is very useful for both of the examples um i do think so right even though it's actually"
4023680,4033200," like a single function uh but doesn't really matter so let's include common dot h and for 3d let's also"
4033200,4046320," include uh common dot dot c was it it was c actually there we go so that way we can do that so rand is not"
4046320,4053920," really uh really uh available this is because we need to include std lip not a big deal not a big deal"
4053920,4062320," at all and also in 3d uh we need to include knob we are reusing knob because it has a lot of useful"
4062320,4072640," stuff in there knob implementation implementation there we go so we've got some stuff uh some warnings and"
4072640,4081360," everything so center is not particularly used in here for some reason uh and this is because i never"
4081360,4088720," actually add it right so if i do generate cluster one of the things i do in here look i add the center so"
4088720,4095200," that's probably one things i can do in here or i could have actually done something like vector 3d"
4096880,4109040," 3d add or sum where's the math vector 3d add yeah it's actually without the d uh center i can do shit like"
4109040,4119680," that so yeah that's cool uh so we also have the radius uh and the radius actually must be"
4122160,4132400," um multiplied by this which is rather weird don't we multiply it into d"
4132400,4139040," i will multiply it afterwards it's kind of weird i could have actually done it like this like i"
4139040,4145680," don't really know why i do it like don't do it like that and plus i could do the same center plus in here"
4145680,4154400," vector 2 vector to uh add center so we can do that as well in here so and bring everything to sort of the"
4154400,4162400," same thing uh okay so we have a cluster generator right so let's define some sort of like a static"
4162400,4172720," samples 3d 3d sets right and we can try to generate some shit in there right so uh generate cluster"
4173280,4179840," all right and the center is going to be i think at zero the radius is going to be around let's say"
4179840,4185120," cube size right so this is a cube size and let's generate like 10 of those things and put them into"
4185120,4192480," this set in here so we just generated a bunch of 3d things around so sort of like a cloud of um you know"
4192480,4199440," things so afterwards what we need to do uh we need to draw them right we need to draw them so let's go"
4199440,4211760," iterate through the uh samples say uh size ti zero set count plus plus i and we're going to have a vector"
4211760,4222160," three it set items i so we've got the thing we've got the thing we're trying to draw it and so we probably"
4222160,4230880," want to have like a sample size in here let's okay let's rename cube size to sample size right so because"
4230880,4242400," that's what we're going to be doing let's rename query replace um cube size all right so sample size"
4243840,4253360," uh uh and also cube color um cube color um cube color so this is going to be sample color as well"
4253360,4261920," and maybe what we want to do instead of cubes actually is to draw sphere you can draw spheres would"
4261920,4270800," you look at that all right all right all right uh so that's going to be it um sample size"
4271840,4280720," sample color there we go that's what we got and i want to make samples a little bit smaller i think"
4280720,4291120," 10 is too much i think 10 is too much um generate cluster honestly i would like to generate like 10"
4291120,4300640," of the sample size like a huge thing so vector zero whatever all right so we got this thing"
4301840,4312000," so that's all we got a bunch of things in here so there's a 10 points so this is the 10 points that"
4312000,4320800," we generate so maybe this is still too much what if i say well i mean they we have normalized device"
4320800,4327360," coordinates which are from minus one to one so i think the sample size could be even just like one"
4328080,4333280," if you know what if you know what i'm talking about so it doesn't really matter actually that much"
4333280,4345200," it doesn't matter that much um so when i start the camera the initial magnitude let's also make it like"
4345200,4356800," 20 or something so it's really far away right away what about like 100 so i wanted to be like i want to be"
4356800,4367440," able to see the whole thing uh around maybe 50 around maybe 50. and we can clearly see that so that's"
4367440,4375680," pretty cool and let's generate maybe um how many of them what about 50 of them let's generate 50 of them"
4376880,4382640," all right all right so this is sort of like one cluster that we have in here sort of like a one"
4382640,4392240," cluster uh i'm still kind of not sure like i want them to be smaller sample size yeah so everything here"
4392240,4398640," really depends on the sample size um everything here really depends on the sample size what if we just"
4399280,4409200," don't depend on the sample size in here uh all right and also in here just that because sample size is one"
4409200,4416080," anyway one anyway so what if we have make it half of that yeah that's already better"
4418080,4429520," i like it much better actually so that's so cool okay so generate cluster so radius is going to be"
4429520,4435200," around 20 around 20 but let's generate 200 of these things"
4438480,4448640," and it starts to get slower actually so it's kind of difficult for my uh computer to yeah it's it's"
4448640,4455520," too many i wonder if this is because there's too many triangles when i try to draw like spheres and"
4455520,4461680," everything that could be the case actually believe it or not what if instead of sphere i'm going to be"
4461680,4467680," drawing the cube right because it's less triangles because sphere is just like very smooth it is too"
4467680,4474720," smooth uh and requires too many polygons so let's actually try uh this yeah it's much faster i was"
4474720,4485760," actually right let's use uh let's use uh cubes instead right at least for for my pc um so when i'm"
4485760,4500560," scrolling around right so this is around let's let's make 20 okay that's cool uh now maybe we want to try to"
4500560,4509680," generate like an initial state like we want to generate more points we want to have something similar"
4509680,4519120," to mouse data set if you know what i'm talking about uh right mouse data set if i do 2d all right"
4519120,4524480," essentially you have sort of like a central well like basically several blobs right but here we can"
4524480,4531680," have a central big blob and then two smaller blobs in here so to speak right we want to have like two"
4531680,4539120," smaller blobs in here so let's actually try to do that uh so in here um i can do vector"
4539600,4543760," three right so this is going to be three right so this is going to be that and obviously it's going"
4543760,4550720," to be zero zero zero another one so if we're looking at x and y right if we're looking at x and y"
4550720,4561920," so this is the initial sort of like a radius so that means we can go minus that radius right"
4563280,4573920," we can have something like a cluster radius which is going to be 20 cluster radius right minus cluster"
4573920,4576000," cluster radius"
4576000,4586080," so this is in terms of x we go in terms of x back uh and we need to go up a little bit uh so that means"
4586080,4593200," it's going to be sort of like a cluster radius again uh and here cluster radius is going to be maybe half of it"
4593200,4602320," and also here we can have cluster count right and the second one is going to be half of that cluster"
4602320,4612480," count uh and it's going to be 200 and this one is size t uh so now if i try to do that can i see what is"
4612480,4623120," going on uh this is a wrong thing so 3d yeah so we have one ear in here right so"
4623120,4631680," one main blob and one ear so that works out really great i really like that uh so then we can try to"
4631680,4639680," generate the second ear of the mouse right so in that case it's just that and we should have the 3d"
4639680,4647120," mouse right so basically we have a set uh with three clusters right so here you can clearly see that"
4647120,4656880," this is three clusters so that's pretty cool um okay so what we want to do next we want to probably"
4656880,4665360," replicate uh this situation as into d since we're going to be splitting it into several uh k clusters"
4665360,4672400," right into k clusters we need to have the k uh right so initially it's going to be three and we also have"
4672400,4682320," uh k sets k sets of samples into like k buckets into which we put everything and k means in here and we"
4682320,4688320," also have different colors to assign to different clusters so we have this sort of set but this entire"
4688320,4695280," set is actually defined um you know in 2d terms colors by the way could be reused across both of the"
4695280,4702080," examples i can actually move uh colors into commons i think that that's actually pretty cool idea right so"
4702080,4708800," because it's like useful in both of them so but this sort of like a state right so in 2d example"
4708800,4714880," it's 2d state and here it's going to be 3d state right so here as you can see there's like like this"
4715680,4721360," uh they can be 3d uh they can be 3d and into d there is a function that generates a new state"
4721360,4727600," right so here we we have that i might as well actually do uh this kind of thing there as well"
4727600,4729360," so generate a new state"
4729360,4742480," so what is it going to do is just this and what's funny is that we can parameterize cluster radius and"
4742480,4748240," cluster count right we can literally make them parameters of this entire function"
4748240,4760800," like so and when we are generating new state new state we put 2200 in here so that way we can do this"
4760800,4769680," kind of stuff but furthermore um we also need to generate the means right and the means are uh those"
4769680,4773920," things that define the center of the cluster right so as you can see here into the example"
4773920,4780080," they are the center of the class cluster and they're moving towards uh towards the centers"
4780080,4785920," they eventually converge there right so we need something like that but for 3d uh right and in here"
4785920,4790960," we're going to be generating um"
4792400,4798640," a random 3d point right we're generating a random 3d point and it's like what's going to be the"
4798640,4810720," sort of range i suppose it's a minus cluster radius plus cluster radius cluster radius yeah something like"
4810720,4818720," this cluster radius so might as well just do something like this"
4818800,4830080," uh okay so we generated a new state and after we generated all of that we also need to g uh like"
4830080,4839360," uh render the means let's go ahead and just go through all of the means i suppose right so let's go through"
4839360,4846960," all of the means and uh here we have means i and we're going to draw a cube right we're going to draw"
4846960,4856960," a cube um but the size of the cube is going to be twice as much i suppose maybe we can have a mean size"
4858880,4871440," and um mean color that makes sense uh so so this is going to be mean size which is basically sample size"
4871440,4879120," but twice of the sample size twice of this sample size this one's going to be white"
4884960,4891520," okay good so this is a wrong one uh 3d go so let's go through the compilationers"
4891520,4901680," okay so that's cool so we have three random means in here right you have three random means"
4901680,4909120," essentially okay so there are some warnings in there i want to go through them oh this is because we"
4909120,4917680," don't use some of these things but that's fine in a 2d example we had uh an operation of reclustering"
4917680,4923360," everything we had an operation of reclustering everything so and reclustering is basically going"
4923360,4928560," and computing the length and stuff like that and fitting a particular point into a particular cluster"
4928560,4935280," we want to have this kind of function in 3d uh right but that will require changing the vector on"
4935280,4941520," which we're operating so we need to change two to three right so and that's the entire change right"
4941520,4946480," something like templates would have been actually useful in here i think um all right but it is what"
4946480,4953280," it is so flt max i think it is located in floats right so it's a maximum uh maximum value overflowed"
4953280,4960400," right okay cool so after we generated a new state we need to recluster"
4961200,4965920," the entire state so that's what we need to do we're reclustering this entire state"
4965920,4974240," and so all of the points are now located within within the clusters not only the set but also the"
4974240,4980880," clusters so what we essentially need to render in here we need to render each individual cluster"
4980880,4993360," right so we can do for size j zero j less than clusters i items j plus plus j right and in here we're going"
4993360,5000800," to have uh the point all right so actually not j whatever i'm talking about this is this is effectively"
5000800,5006480," the it all right this is effectively the it but this has to be the count"
5007680,5013680," right so we have it and that's what we want to render in here that's what we want to render in here"
5013680,5019280," but we want to render it with the color uh of the current cluster right so when we have a limited"
5019280,5025680," amount of course so we want to actually wrap around this kind of stuff so essentially uh now"
5025680,5032320," that will make all of the cubes colored according to the cluster they belong to hopefully uh we'll see"
5032320,5041360," how it goes actually yeah there we go so as you can see uh they are colored depending on the cluster"
5041360,5052720," they're currently in that's kind of the point that's going to point uh okay so and now there is a last"
5052720,5059680," operation in here uh update means right so and this is something that we have to do iteratively to"
5060320,5068240," to sort of like find all of the necessary clusters right so it's pretty easy just replace two to"
5068240,5076080," three uh right like that but there is one problem in here if we end up with a cluster that is empty we"
5076080,5082240," won't have enough information to actually update uh to actually update the means so we need to regenerate"
5082240,5088720," the means and we can only regenerate the means if we know the cluster uh radius cluster size and stuff like"
5088720,5095920," that like yeah cluster radius and cluster count so we have to pass those things to the update means"
5095920,5107680," and the way we regenerate this entire stuff is like this uh-huh just like this just like this"
5111120,5120640," update means update means update means update means yeah so we update the means and we recluster everything"
5120640,5128880," on each frame so that's basically what's going on uh so we might as well factor out these things to"
5128880,5138320," cluster ready or cluster yeah i think it's a cluster radius cluster radius 20 so it's going to float and"
5139440,5147040," to be fair to be fair we don't even need cluster count for for update means but that doesn't really matter"
5147040,5152800," so cluster count date means"
5152800,5161920," cluster radius and i also said that i want to uh provide class account but i feel like the count is not"
5161920,5168000," not needed here yeah it is not needed for update means it is actually not needed so let's actually"
5168000,5174240," not do that all right so let's maybe zoom in a little bit all right and now uh when i press space"
5174240,5182080," something went completely horrible i don't know what the is going on but that didn't work"
5183360,5194080," that is rather surprising okay wait a second um so what is going on oh yeah i see yeah because uh we're"
5194080,5201200," also supposed to divide by count z and i i forgot to do that right so that's that's basically what's"
5201200,5209440," going on so that should solve the problem i think yeah there we go so we identified all the clusters"
5209440,5215120," correctly as you can see we identified all the clusters correctly so this is a k-means cluster"
5215120,5220000," and algorithm we'll already implement it in 2d right so that was pre-state forward so this is 2d"
5220000,5226320," version of this thing right so this is 2d and now we also implemented it in 3d and why i wanted to have"
5226320,5234320," it in 3d right because i would like to do color quantization right so essentially you load up an image"
5234320,5242160," you load up colors of the image in 3d color space and then you identify the clusters and you use the"
5242160,5250160," clusters as the palette so those reducing the size of the image right so and i could do that without any"
5250160,5255920," visualization it's actually super easy to do without any visualization but it's not that interesting right"
5255920,5260400," it's it's really not that interesting it's kind of way cool it would be way cooler to see"
5261280,5266240," uh all right the actual clusters in here but now we have a way to visualize this entire stuff"
5266240,5271360," right we we really have a way to visualize this entire stuff and i think it's super cool"
5271360,5279200," uh right so okay i'm already streaming for two hours let's make a small break let's make a small break"
5279200,5286720," and after the break what we're gonna do we're gonna load up a png image png image uh collect all of the"
5286720,5294960," unique colors of the png image and put it in this 3d space visualize and try to do k-means clustering on"
5294960,5299920," that 3d space there will be a lot of points right so we just generated a random garbage right that has"
5299920,5306000," nothing to do with the reality let's try to do that on real data let's try to do that on real data sounds"
5306000,5314880," good sounds gucci sounds what tamaguchi all right so let's go ahead and load some images how about that"
5314880,5321840," so what we can use we can try to use the lana image right so but in 2023 you're supposed to use the"
5321840,5328880," ethically sourced lana image so let's actually uh let's actually get that one uh so yeah we're gonna get"
5328880,5335120," it from here gets me every time so i'm gonna put this in description for anyone who's interested right"
5335120,5342560," so so this is the ethically sourced lana uh right so let's go it's a web p i want a png so let's actually"
5342560,5352800," go with uh 512 by 512 uh right and yeah so this is what we're gonna have in here uh and i'm gonna just"
5352800,5370480," w get this lana does she have only fans i don't know you can ask her um beautiful uh so now so i suppose"
5370480,5378000," the reason why people use lana all the time i heard that the image itself has like a very specific"
5378000,5384720," properties um so i wonder if that recreation also tries to recreate those properties like very"
5384720,5391840," valuable properties of lana image um i don't know what those properties are right but yeah people say"
5391840,5398320," that it's actually very useful for testing things it's actually very useful for testing um anyways so"
5398320,5404800," as far as i know in rally you can just load the image load the image and you can just get the image"
5406000,5413600," so which is pretty cool um we'll need to actually distinguish between like two modes right because"
5413600,5420240," we have a mode that just generates random points to test things out and uh the one that loads lana and"
5420240,5426560," tries to sort of come up with a palette for for lana um right so maybe i'm going to introduce something like"
5426560,5436640," lana uh right and in here if you are in a lana mode uh if def lana uh lin"
5441120,5443520," lin and min"
5443520,5447280," lana"
5447280,5453440," anyway so"
5453440,5456480," uh and if"
5456480,5459040," then load the image"
5459040,5466960," uh and so this is uh yeah it's winter i forgot that it has also has a prefix here so i'm going to"
5466960,5475440," put it to lana and mana lana and mana"
5475440,5475840," there we go"
5475840,5482080," so this is the image we just loaded up the image"
5482080,5489360," so after that uh if we take a look at the definition of this thing uh you may notice very"
5489360,5497520," interesting uh is that the pixels are void the pixels are void so we don't really know"
5497520,5504960," their format i suppose it depends on the format so and a pixel format uh so let's take a look at the"
5504960,5514960," pixel format to be fair i would expect specifically this format um so uncompressed right is it uncompressed"
5515600,5517520," so rgb yeah"
5517520,5524480," i would like to prefer to work with this specific format and one of the things we can do after we"
5524480,5530240," loaded the image up we can say well format has to be equal to that and we can literally assert that"
5530240,5536560," all right we can literally assert that um okay now i'm going to try to run this entire thing is it"
5536560,5547360," going to load successfully uh okay so it did in fact fail so this is because it's uh r8 g8 yeah this one"
5547360,5555760," is weird wait that's a such a weird format oh it's more of a flawed thing yeah so this is not what i would"
5555760,5563440," we want uh we want uh this one uh to be fair i would like to have like a 32 but they kind of force this"
5563440,5575360," format upon us all right they kind of force this format upon us and so r8 g8 so what that means if i"
5575360,5582080," i want to be able to you know convert it to something is there like a load image"
5582080,5596320," format image format new format so convert image data to desired format so this is one of the things we"
5596320,5603760," we can do another thing we can do we can turn the image into pot very useful i don't know what it is"
5603760,5609200," it's a power of two oh i see so convert the image size to the power of two you know why it's needed"
5609200,5616640," you know why it's neat so it is needed for mip maps right so because there has to be power of two"
5616640,5625280," it's actually kind of fun uh so what i want to do essentially since i can just convert to any"
5625280,5630480," format that i want i can just simply do something like this right and i don't even have to check"
5630480,5637840," anything in here and i have to even check scheisse my new phone uh so let me see so i'm going to take a"
5637840,5647440," look at the logs uh right so image so is where is the lena header goes so yeah loaded successfully and"
5647440,5655040," one meet maps and stuff like that so we are gucci we are in fact tamaguchi so that's pretty cool"
5655760,5661680," so the next thing we need to do we need to collect unique uh pixel color unique colors essentially"
5661680,5663200," right so we need to collect unique colors"
5663200,5671280," so to do that we'll need to have some sort of a hash map right so i wonder if raylib has some sort"
5671280,5676320," of a hash map right that would be cool but i think it doesn't have any hash maps right okay let's actually"
5676320,5685200," use stb uh this ds uh stb ds dot h uh right we're going to be using this hash map i don't know why"
5685200,5687040," chromium is so slow for me today but"
5690320,5696400," so even my 3d application is faster than chromium so i mean it doesn't really do anything useful"
5696400,5707120," come on you can do that chromium i believe in you i believe in you chromium summer"
5708080,5715120," okay w get and let's download this shison so how we're going to be using all that uh we need to"
5715120,5725200," include uh include stb uh ds and all the snoobs from reddit keep crying oh she is such a hard"
5725200,5728960," language it doesn't have a hash map and stuff like that there you go it has a hash map now"
5730480,5741840," five seconds hash map hash maps hash map easy peasy lemon squeezy stop crying start coding freaking start"
5741840,5751920," coding i'm sorry i've been streaming for for two hours right so i'm already going a little bit crazy"
5751920,5758880," a little bit crazy so how this goddamn hash map works right so you need to have like a cell in which you're"
5758880,5762800," going to be storing the keys and the values let's actually take a look at this thing so there is a"
5762800,5772240," non-functional api somewhere uh right so and basically you have to define the type t and the t for"
5772240,5782960," hash map specifically must be a structure uh it must be a structure uh declare the empty hash map of type t"
5782960,5790960," access uh functional interface all right cool oh here it is i see it okay so given t is a structure type"
5790960,5798000," so it should have tk key and t value know that some functions do not require tv value uh and can have"
5798000,5808480," other fields right so essentially um we can say something like um color point and uh is going to be like"
5808480,5818880," literally this okay okay and now we can have color point and we can say that this is unique color"
5818880,5824400," points uh maybe unique points right because i don't want it to be too long and there you go"
5824400,5832400," this is a hash map this is a hash we just defined a hash map right so then uh we can start"
5832400,5840480," iterating different points right so um we can maybe define um something like this we can even use the"
5840480,5848640," color from raylib instead of uint32 right so the definition of the color from raylib is this which"
5848640,5856080," fits perfectly into uh into uint32 so we can even do something like that right so this is a color point"
5856640,5864080," then we can also have something like color points right and then we can take image uh and i don't"
5864080,5871600," remember how they're called um they're called data and we can literally just convert that so um afterwards"
5871600,5879280," uh afterwards i probably want to do it in here uh we can start iterating all of the points like it would"
5879280,5885600," be nice to have maybe points count and points count is basically going to be image width multiplied by"
5885600,5893280," image uh height uh and stuff like that i said height so there we go so we can just start iterating uh like"
5893280,5901600," this and through each individual points right we want to check if that point is present within the unique"
5901600,5908080," points right so what kind of functions should we use for that uh i think it's something like hash map get"
5908080,5914560," i or what not or maybe hash map get so this one accepts the key it accepts the key and returns the"
5914560,5921920," value corresponding to key in hash map so um and i suppose if it's missing if it's missing it's going"
5921920,5928640," to return maybe zero but maybe we have to use get i right because it returns negative value in case the"
5928640,5935360," key is not present so that's the function that we probably have to use uh right and essentially what we do"
5936000,5948960," we do unique points unique points uh right point i and that gives you the point div index and here's the"
5948960,5957440," thing if that index is less than zero the point is not in hash function that's how easy it is"
5959440,5965600," yeah that's it literally i'm not even joking like i'm not joking that's how you use this hash map"
5965600,5974800," so in c in c in c in c single file header only file come on"
5977760,5983280," uh isn't that cool uh isn't that cool isn't that poggers i know it doesn't fit the propaganda on"
5983280,5985760," reddit but i mean still pretty cool"
5985760,5995360," uh so let me let me see how do we add shits uh i'm pretty sure i'm gonna stumble upon some sort of"
5995360,6001920," problem right with this entire thing but we'll see we'll see uh okay so uh what we want to do in here we"
6001920,6011760," want to just put something uh right we can put an entire item in here right so uh like so so we put"
6011760,6021040," unique points but we first have to create the color point uh right so item and this one is going to be"
6021040,6030720," simply points i the the the same thing that we used in here and we can just push this entire thing uh and"
6030720,6036160," that effectively means that we just collected all of these things right we just collected all of these"
6036160,6041520," things and then we can answer a very interesting question how many of them do we have in there"
6042080,6052240," in um in this thing so i think it's hm len yeah hm then so we can say uh something like this s"
6052240,6062640," let's actually factor out this thing to lena path lena path const char lena path i'm gonna put it like"
6062640,6075920," that four okay so we can say uh this thing contains z u unique colors and we can do uh yeah we can do a"
6075920,6087040," lena path and we can do hm len uh unique points and after that we can actually exit right so basically"
6087040,6092080," i'm gonna sort of comment out everything after that temporarily because the only thing i care is how many"
6092080,6097360," unique colors you have in here uh okay let's see if it's gonna crash or not so maybe it's gonna be"
6097360,6105120," terrible for suppose who knows who knows so it's a single inch actually uh yeah so this thing contains"
6105120,6113440," this much unique colors which is rather interesting because uh if you take a look at the that's a lot of"
6113440,6120640," unique colors if you think about it uh right so what is that huh damn"
6121520,6130480," um so it works it works um so i'd like to maybe take something that contains less unique colors"
6130480,6138320," uh just to test how like if the hash map works properly right i'm just curious if it does so"
6138320,6145280," something like sodium pog right i think it contains less unique uh unique points so let's actually go ahead"
6145280,6157120," and try to do that um so i'm gonna do w get and uh is that how we do that oh uh sodium pog png"
6157120,6164800," do you have png there we go here is it sodium pog is it really png let me double check it is in fact png"
6164800,6171120," maybe it would make sense to actually create a folder with images right i'm gonna move lena and sodium pog in"
6171120,6178160," there and we could just accept the path to the file as the command line arguments i think it would"
6178160,6184640," make a lot of sense all right so let's rename this thing to file path let's go through compilation errors"
6184640,6190800," because i think it's gonna be easier to uh rename it like that file path and the last one is going to be"
6190800,6197920," file path there we go all right so yeah let's actually accept file path as a command line arguments so it's"
6197920,6205680," going to be int argc argv and the first thing you have in arguments is actually a problem right let's"
6205680,6218640," actually just take it out knob uh i think it's shift arguments knob h knob shift args argc argv right and then"
6219280,6227280," what we can do if argc is less or equal than zero we have to do something like knob log knob error"
6227280,6233600," no input image is provided"
6233600,6244080," we don't have to do that and we just exit with one otherwise we can do knob shift like that"
6245840,6253680," and that should work that should work so no input image is provided so we can do image lena now right"
6253680,6260000," and it says lena has this amount of unique colors and then we can say uh sodium pog and it should have"
6260000,6266240," like few uh 1267 unicorns that's kind of sus isn't it"
6269680,6276800," that's kind of says though if you compare it to the actual size of this thing so where do we get so many"
6276800,6283600," unique colors is that from the anti-aliasing it could be from the uh from the anti-aliasing and"
6283600,6289040," the shades of gray and stuff like that so that yeah okay i can see where all of these unique colors might"
6289040,6299360," be coming from uh but if we compare the actual size to like the full thing yeah okay so it's like one"
6299360,6306400," tenth of this thing one tenth of this thing um we can try to create some sort of like a very simple image"
6306960,6316240," um i wonder but to do that with something like krita it's actually a huge pain in the ass right because"
6316240,6323040," krita is so goddamn over bloated you it will take half of an hour to just load it up the logo is cute"
6323040,6328560," though i surprised do i have a surprise i think i don't have a surprise yeah i don't have a surprise"
6328560,6339760," god damn uh my paint my paint is weird with like specific sizes of the images and just like i didn't"
6339760,6346160," don't like to use that my paint is good for just like drawing on the screen but producing images is"
6346160,6354000," kind of eh but to be fair this is unacceptable honestly like what the right so uh kill all"
6354000,6363120," krita yeah fuck you uh so yeah that's a that's a problem that's what i'm talking about it's just"
6363120,6370320," like it doesn't have boundaries and it's weird and it's it's just like yeah i just want to have"
6370320,6379680," maybe two by two with the same color how can they produce such image in 2023 i don't freaking know"
6379680,6385920," right so maybe we can use ppm right and just like manually do that i don't know honestly um"
6385920,6390800," so ppm so there was some formats right different formats"
6390800,6397440," uh net net bpm"
6397440,6408880," so there is a ascii format okay so p3 uh so ppm p3"
6409680,6417440," and not pm ppm you can't freaking damn it bruv okay so maybe that's one"
6417440,6427840," just give me an example bruv okay so we got that choice and we got that choice so i can just do that"
6429600,6441920," uh write uh right uh ppl right and it's gonna be ppm uh huh so let's say uh four by four i'm gonna query"
6441920,6450720," replace this shit with 15 15 15 not 15 15 but rather maybe even zero zero all right so this is gonna be red"
6452960,6455600," um um and this one"
6455600,6459280," also gonna be red"
6476240,6486240," uh"
6486240,6486800," um"
6486800,6487680," i'm gonna be red"
6487680,6492320," i'm gonna be able to read ppl ppm no images defined though emacs is capable of reading it though look at"
6492320,6498560," that emacs is capable of reading it but image magic is incapable of converting it"
6498560,6518800," i'm just like bro bro bro bro bro bro like why doing something like that is so god damn"
6518800,6521360," that's how it's going to be i'm just going to be able to read it i'm just going to be able to read it"
6521360,6526080," i have no idea i have no idea so do we have something like a save image"
6526080,6527360," um"
6527360,6534880," i might as well just download stb image and generate this motherfucker myself"
6534880,6543120," that's just easy that's just easy that's just easy that is just that's how bad everything"
6543120,6549600," goddamn is that's how how bad everything is it's it's easier to just like you know write a c program"
6549600,6551040," and it's just that's to be this motherfucker"
6551040,6562640," and what's funny is that i don't need anything extraordinary i need once once in my life generate"
6562640,6569520," four pixels and forget about it forget about it and i can't even do that easily you need to open some"
6569520,6575840," overbloated website you need to download some overbloated shit you can't just generate fucking pixels"
6575840,6581360," it's annoying it's frustrating that's why everyone hates computers everyone hates programming"
6581360,6587280," okay so uh stb image right pixels see"
6587280,6599120," so because essentially what i want right 32 see pixels look look at that right i have like"
6599520,6600160," red color"
6600160,6608800," and i just want to have four of them just just just four of them just four pixels"
6608800,6614080," it's as simple as that crap why is that hard"
6615760,6621280," why is it so fucking hard i don't fucking know stb image dot h find stb image"
6621280,6624320," is to the image implementation"
6624320,6630880," find this to be image just to be oh it's actually right"
6630880,6634720," and then we need a different library"
6641280,6652400," yeah cpi is uh right uh and what i can do here is just uh pixels"
6652400,6665520," png size is two by two amount of components is four the data is the pixels the stride is two multiplied by four"
6666160,6674640," and that is literally it that is literally it cco pixels pixels pixels"
6674640,6684640," c uh pixels they're gonna do think they're gonna do think uh we have to link with mathematical library"
6686720,6694080," a mathematical library is needed and defined stb image yeah this is because it's right"
6694080,6697600," and we image right"
6710960,6714720," thank you very much and we can forget about that forever"
6714720,6721600," that's what i want it's literally what i want it's literally what i want why it's so hard"
6721600,6727680," like why do we have to have over bloated to just do that and if i can understand"
6727680,6731040," anyways"
6733840,6744400," so there should be one unicorn one unicorn and uh so pixels png how many unicorns one unique color so"
6744400,6751280," finally we managed to test our hash map and it works beautifully it works beautifully i'm super happy holy"
6761280,6763920," anyways um so"
6763920,6773760," now uh once we gathered all of the unique colors right once we gathered all the unique colors we want to"
6773760,6782000," put them into the set right so we have a global set thingy uh right static or maybe samples 2d"
6782000,6790240," sample 3d set that's what we have uh that's what we have we want to put all of these things there"
6791280,6799440," uh so how can we do that we can actually as far as i know this thing allows you to access those unique"
6799440,6807920," points directly so the thing you can do is just uh something like this uh maybe we could have"
6807920,6818320," unique points counts which is simply unique points count this and let's actually just print them"
6818320,6824480," right so because i want to see them so we're going to print them as hex padded with with like eight"
6824480,6828800," zero so the width is going to be eight characters right so and they're going to be padded with zero"
6828800,6838160," so these are the colors uh unique points i key right and let's actually see all of the unique points in"
6838160,6846320," here so in case of the pixel um um um and what's up what's up with that so i suppose we need to"
6846320,6851360," reinterpret this entire thing okay so i'm going to reinterpret it as you insert it to pointer and"
6851360,6862000," just do it like that that's fine uh so you don't have uh int let's include that let's include that"
6862000,6871760," what else do you want from me you want from me the uh color hm unique uh points count that's what you"
6871760,6879120," want from there we go so here is the only unique color in here that is totally fine that's expected"
6879120,6887280," but now what about sodium poke sodium poke here are all the unique uh colors in here here are all the"
6887280,6898560," unique cores um okay so we want to convert them to actually um vectors we want to convert them to"
6898560,6901600," vectors how are we going to be doing all that that's very interesting thing"
6902960,6909760," do they care about alpha channel personally i don't want to uh right so for now i'm going to"
6909760,6914080," ignore it right because that means i have to visualize in 4d space and i don't have a capability"
6914080,6919440," to visualize in 4d space so uh we're going to basically cut out the other fun that's what we're"
6919440,6925680," going to be doing um all right so i'm just iterating through all of these things and i'm going to take"
6925680,6932400," the unique color so this is going to be r and i might as well just make them from 0 to 255 who said"
6932400,6939760," i can't do that i can't do that why not so it sounds pretty pretty good so vector 3 sample uh right"
6939760,6953840," and this sample is going to be x uh y g z b and we've got that so then we can do knob d a append d a append"
6953840,6961840," set sample there we go so we generated all of that stuff so we can start with"
6961840,6969280," just pixels because it has a one unique color right so um yeah it doesn't like oh it's is it"
6969280,6977280," red green and blue gray plus i've thank you emacs for auto completion very cool uh what else do you want"
6977280,6988080," what is it called bruv uh color rgba okay so you didn't like that they're uh not floats is that what"
6988080,6995520," what you want ah because it's a key that's what you want okay okay okay okay what else do you want"
6995520,7001920," what else do you want uh semicolon yeah bro okay okay come on come on you can do that what else what else"
7001920,7009520," do you fucking want from me i accidentally put n in here just compiled it already yes thank you so much"
7009520,7017760," okay okay so we get that but it it's kind of weird right so when we generate a new state we should not"
7017760,7028480," generate uh if not defined lana so though to be fair it's not called lana anymore right so let's call it image"
7029040,7038720," oh where's lana image where is another lana image image so that's it so that's what we're going to be doing"
7038720,7047440," here okay so we can't see shise because i think that point specifically is way too far away"
7048480,7055520," uh for us to see uh for us to see anywhere so let's go ahead and just apply the sodding fog that should"
7055520,7060720," give us more uh points hopefully yo what the fuck"
7060720,7071600," yeah it's from to head okay so that's basically all of the points of that image so we can okay so we're"
7071600,7082160," starting to quantize it into three things yeah that's kind of funny so and that's how we can cluster it in"
7082160,7089520," three um yeah it's kind of interesting yeah because there's not that many colors in there there's not that"
7089520,7099120," many course uh okay so what about lana now uh so let's take a look at the lana how many colors we have there"
7101200,7109440," oh shit it's oh my fucking goodness what the fuck bravo it's too much it's fucking too much my computer is"
7109440,7110240," fucking dying"
7110240,7131120," 100k yeah it is too much actually uh i wonder if we can scale it down uh scale it down a little"
7131120,7143200," bit right what if i convert uh lana resize 32 right so it's going to be lana 32 let's take a very small"
7143200,7152880," lana a ppl lana look at that lana i mean yeah so how about this lana is it is that a good lana yeah look"
7152880,7161040," at that lana right so and let me let me see so i'm gonna just do 32 and"
7161040,7168640," that should be a little bit better right so these are the points okay so that's actually pretty cool"
7168640,7171600," uh maybe it would make sense to"
7171600,7176640," when we're rendering those things to just map them slightly differently"
7176640,7179360," right"
7179360,7181680," okay"
7181680,7186560," so it's it's like a huge thing that goes there as you can see right"
7187440,7195040," uh yeah that's a very huge thing but now we're clustering it and we found like three clusters in"
7195040,7202000," there i'm not sure if they're visible really that well but they're allowed to be able to like fly"
7202000,7205120," around them so we need some sort of like a free camera or whatnot"
7208400,7215040," so we've already found three clusters as you can see so can you see them so this is like the red"
7215040,7221600," cluster the this cluster and this cluster uh or something like that so it's pretty cool"
7224560,7234160," so now uh what if i what if i actually convert these things into something more like from zero to one"
7234160,7244240," right when i'm generating the clusters so i can just simply define them to 255 zero f and that's basically"
7244240,7252960," that all right so that will make them yeah that that made it rather small right so that made them rather"
7252960,7254560," small um"
7254560,7260720," and another thing i can do now i can multiply it by maybe"
7260720,7265440," what about cluster radius that's a good idea"
7267360,7276720," um i can move this thing in here uh and do the cluster radius so this is a very good constant"
7276720,7282400," that could be useful for this kind of stuff yeah that's that's much better"
7282400,7292000," uh-huh and we found three clusters in this image right so well i mean we said find three clusters here"
7293760,7300240," and we found it we can reduce the size of the sample sample size let's make it you know fourth of one"
7300240,7306320," that's much better so that's it's basically the thing we have in here"
7306320,7309200," so that's pretty cool"
7309200,7312800," here are the classes"
7312800,7322720," okay so let's imagine let's imagine that we want to have a palette of 16"
7323360,7332080," right palette of 16. uh so we want to split this entire stuff to 16 colors can we do that"
7332080,7338000," well it's struggling true to find 16 course but this is probably because"
7338000,7344560," we don't really have that many points so the image is too small i think we need to have different"
7344560,7351680," sizes of lena uh all right so we can do 64. let's actually try 64."
7352960,7361040," right lena 64. a little bit bigger lena okay so this is a little bit bigger lena uh let's do 64."
7361040,7368960," okay so this is a little bit more points hopefully right because more resolution and stuff like that"
7368960,7377840," uh but eventually hopefully it finds some of the clusters right so as you can see some of the centroids"
7377840,7381920," centroids are just moving around because they can't really fit right they can't really find"
7381920,7389840," the cluster for themselves so my goal is to have the situation when all the centroids kind of found"
7389840,7395360," their place yeah so around here so this kind of separation of things is pretty good and you know"
7395360,7399920," what would be even cooler if instead of like random colors we use the course of the"
7400800,7409280," points themselves we do kind of have information about the color uh within the point within the"
7409280,7416240," centroid we can actually recover it uh so we use cluster radius to do this kind of thing right so it's"
7416720,7423360," yeah what we can do we can take the mean uh we can take the mean"
7423360,7430400," and try to recover color from it right so x is from zero to cluster cluster radius so we can divide"
7430400,7436640," it by the cluster radius convert it for zero to one and multiply it by 255 and just assign it to red"
7437200,7446000," right and the green is going to be y and blue is going to be z right and essentially we can do color"
7446000,7454080," color uh like this and alpha is of course 255 right so something like this and instead of these colors we"
7454080,7461760," can just use that right so we're literally using the color of the image so we can clearly see the colors of"
7461760,7471200," lena hopefully uh we'll see how it goes so this yeah there we go so these are the colors of lena do they"
7471200,7481760," look like colors of lena i think they do these are the colors of lena look at that right that's pretty cool"
7483760,7491440," so i would like to even increase more resolution right so uh what about 128"
7491440,7503360," 128 so even bigger yeah so let's actually start working with this size of lena uh right 128 and we have to go"
7503360,7513600," here all right it's start to lag a little bit but not too much so i suppose when you just have"
7513600,7525360," more of these things um i feel like when we're generating the means yo that's so cool"
7525360,7538400," okay so we found this sort of distribution of these things uh we found the distribution yeah okay so and"
7538400,7547280," we can turn this into palette we can now turn this into palette uh right so essentially go through each"
7547280,7555440," an individual pixel go through each individual pixel and check which cluster it belongs to which cluster"
7555440,7563520," it belongs to and use the color of that cluster and the color of that cluster is the mean uh right and"
7563520,7571200," then you can maybe save it to the format that supports palettes right and the this specific uh"
7571200,7578400," sort of uh like array of colors should be really good representation of the image itself"
7578400,7584960," right it should be a really good representation itself so we can try to do that actually we can try to do"
7584960,7595200," that this is kind of cool i really like that um so yeah i wonder if it's going to be too uh too slow"
7595200,7608080," we need to assign uh some sort of a point some sort of a key we need to assign some sort of a key so let's actually do"
7608080,7619760," um if if is key pressed uh maybe key s and this is where we can try to do that this is where we can try to do that"
7622640,7631680," uh we can modify the image directly and that is probably fine because we have a copy of that image"
7631680,7640480," in a set anyway so that's fine so i can modify this thing directly so all right let's start iterating"
7640480,7648480," through the points one more time so we had this kind of thing right so we have points and points we"
7648480,7656480," already have this thing right so that means i can just uh start iterating in here uh size t zero points"
7656480,7663840," count uh plus plus i and there we go so the only problem here is that how can we check uh how can we"
7663840,7677920," know the cluster cluster of color right so i can provide the color in here and i want to know the cluster of this"
7677920,7687520," thing so what cluster does it belong to it might be even something like negative or something uh right so"
7687520,7696160," in that case if k is less than zero we can maybe knob log knob error"
7696160,7707840," um could not um color out of cluster right we're not gonna crash but we're gonna break"
7707840,7714720," out of the slope right so we're just breaking out of that loop um to be fair i'd like to break out of"
7714720,7721920," everything that is happening here as well um so but that is only possible if we"
7721920,7726880," yeah i don't know how to do that but we'll see we'll see um"
7729680,7738560," and maybe that's fine let's just like maybe log that and don't do anything uh okay so we you found"
7738560,7745120," the cluster so then you can just take the color of that cluster and the color of that cluster is just"
7745120,7754000," literally literally this right so it's literally this uh we can um just use k in here and there you go here is"
7754000,7762320," the color of the cluster there is the color of the cluster and then um you can take the points i and"
7762320,7770880," assign the color of that cluster that's how you bring everything to the uh to the same thing so after"
7770880,7776960," that we need to save the image but as far as i know radi doesn't expose anything for saving image save"
7776960,7786640," image right so there's a load image but you can't really save image a dump image um is that unload"
7786640,7793280," image unload image just delegates the memory so there is a way to do screenshot uh so take screenshot"
7794400,7800400," right and it it can save things but it doesn't allow you to save your own images maybe it uses something"
7800400,7807680," um that we could reuse i just don't know the name of this thing so raylib uh raylib src"
7807680,7815680," let's go here and let's do grab rn i want to see implementation of these things specifically"
7816880,7828320," uh what do you use uh what do you use rl read text format export of course of course it's an export"
7828320,7836080," image you dummy dumb dumb of course the opposite of load image is export image not save the image"
7838160,7857600," you dummy dumb obviously obviously oh my god silly me silly me imagine thinking that opposite of load"
7857600,7863360," is save imagine thinking that how do you range have how we have to be"
7865840,7873920," i don't know i don't know i don't know mate anyways so um i'm sorry"
7873920,7880640," uh so yeah we're exporting the image and stuff like that all right"
7880640,7889120," let's give it a try let's give it a try uh so i wonder if it's going to be too slow um"
7891920,7907840," okay ah okay cluster uh of course yeah i still this thing not implemented god damn it uh yeah so"
7907840,7915840," you're giving a color you're giving a color and uh what you want to do honestly"
7920240,7930560," honestly um i think um i think you can basically treat that thing as clustering right so we already"
7930560,7937840," have an operation in um a recluster and we just iterate through all of the"
7937840,7945920," within each individual point we're iterating each individual cluster and we see to which mean it is the"
7945920,7946640," closest"
7946640,7959680," and that is basically the algorithm that we want to have in here right so okay cluster of color"
7959680,7966400," so i'm going to literally copy paste it right so because i think and what's funny is that it's literally"
7966400,7972160," has a key k that is minus okay this is perfect right so this is literally perfect"
7973120,7979840," um okay so you have the color but then you need to convert color to p"
7979840,7984080," and how we convert color to p right so we have to"
7984080,7991040," deal with this entire thing right where's the conversion yeah that's how we do that"
7994640,7999600," so this is the color uh so this is the color uh so there's a couple of things that i would probably"
7999600,8003600," like to factor out into separate functions because it does make sense"
8003600,8011360," it does make sense but not for now i think i can do that later"
8011360,8018560," it's quite surprising yeah so we could implement reclustering in terms of this function by the way"
8019600,8024720," we could implement reclustering in terms of this function uh i don't see any problems with that"
8024720,8034160," uh right okay so cluster this is just a warning nobody cares subtract p uh well it has to this is the p"
8034160,8036160," sample is p"
8036160,8044880," uh-huh that's pretty cool cluster why are you still showing me that okay so this is the cluster"
8045920,8051200," count is it cluster count um"
8051200,8053200," and cluster radius"
8053200,8061760," this is in fact cluster radius what else all right so what are the warnings what are the warnings you have"
8061760,8067280," program that is unused can it by the way does it work in in c if i put underscore in here"
8071360,8075680," wait it doesn't that would have been actually kind of cool i think that would have been kind of cool"
8075680,8082320," but it is what it is and it isn't what is it i wonder if i can do some stupid like avoid the cluster"
8082320,8090080," count right so um because that's easier just a second i want to get rid of the warnings i'm sorry"
8090080,8095520," they bother the heck out of me uh all right they bother the heck out of me um"
8096240,8104400," so and yeah maybe i can just do something like this uh not all the warnings well i mean generate classes"
8104400,8114000," is not used in this specific case but maybe uh i can do something like avoid generate cluster"
8117280,8117680," like this"
8117680,8122320," because they want colors are unused"
8122320,8134320," ah whatever uh okay so i'm fine with that one all right let's try to quantize everything let's try to"
8134320,8142560," quantize everything to the point when we don't have any weird things that are jumping around at some point"
8142560,8149120," we're gonna find okay so there we go so all of these centroids are perfectly fit so we can continue"
8149120,8154800," iterating all right and it will find a better and better approximation for the colors right but at some"
8154800,8160480," point we can just stop right so i'm pressing space and it keeps approximating approximating and i think"
8160480,8168480," here it doesn't really change anymore so now i can press s and um okay so i think it already generated the"
8168480,8178800," thing so and now we can take a look at that specific image uh right so what the f is going on honestly"
8178800,8181520," um just a second"
8181520,8184080," uh with png"
8184080,8189440," why on earth would you make it like that is so weird but anyway"
8189440,8197120," um so this is lena with 64 colors uh with 16 colors i'm sorry"
8198480,8201120," it even has a little bit of a dizzy ring holy"
8201120,8213600," what the this is so cool uh and now if i open the other lena um so images uh 500 actually 128"
8213600,8218000," uh so what i want to do now i want to put them side by side"
8218000,8226320," right so this is the original well it already had some sort of a dizzy ring okay so and this is with 16 colors"
8228480,8236160," so this is super cool because this is full colors versus 16 and 16 looks decent"
8236160,8240640," it still looks decent so that's what's cool about it"
8240640,8251040," that is insane holy we can have less colors by the way chat that's what's cool about this entire"
8251040,8254160," shit we can keep producing the amount of calls what about eight colors"
8254160,8260560," what about eight colors let's see uh all right"
8260560,8266320," only eight colors let's just let it do the trick"
8266320,8273280," uh last cluster cannot find okay so last class i found its place all right so this is only eight colors"
8276560,8283360," it's it it still learns a little bit i think it still learns some stuff okay all right let's save it"
8283360,8291680," uh and take a look at this entire thing all right this is eight colors"
8291680,8299280," still looks good still looks decent more or less you can see that the quality is less but i mean it's"
8299280,8305120," still representative of the image all right let's keep decreasing the amount of course"
8305120,8310400," uh what about four four colors uh let's see"
8310400,8313520," okay"
8313520,8325600," let's try to find so only four colors it's actually quickly identified like the major cool yeah it is"
8325600,8333600," sort of like the key colors this sort of like a red dark red this purple and the two shades of"
8333600,8340000," beige or something right so it quickly identifying them right and it found it converged basically so"
8340000,8346640," let's actually save that uh and open this entire thing and yeah so this is the original image with"
8346640,8354400," just four colors and it picked four four colors perfectly it's actually kind of insane how perfectly"
8354400,8356960," this is the original image with this is the original image with this image with the image with the image"
8356960,8364400," this is so cool i didn't even expect it to be so fucking cool"
8364400,8370640," this 3d visualization makes it even better i think you can clearly see like these things"
8370640,8377200," uh what about two yeah yeah so let's actually see if we can do two i think two is going to be like the last thing"
8377680,8383120," um right i don't think it's gonna be it is gonna look really good"
8383120,8391360," okay so that's another bad idea to use these two colors right"
8393440,8395040," right so let's see"
8395040,8409280," not bad what's funny is that it's such a simple algorithm but it finds like a very good approximation"
8409280,8417440," of the course like holy shit what the it's not bad right for two colors right if you have to pick two"
8417440,8424720," colors i think it's it's good uh one color now i mean it's just like i mean it's going to be an"
8424720,8430640," average of all course it's like yeah it's like a mean of all course i didn't think one makes that much sense"
8431760,8438080," uh now do hsv instead of rgb i don't know we're already doing that for three hours i think rgb is"
8438080,8447920," is more than enough all right so that's pretty cool so let me quickly uh recompile that with maybe"
8447920,8456080," eight colors right let's take a look at the eight colors so yeah that's the result of today's stream"
8456080,8462720," right i think it's a pretty cool application of uh k-mean clustering it is insanely cool application"
8462720,8469280," because you can clearly see the usefulness of the algorithm right uh right i really like to implement"
8469280,8473760," this kind of thing it's just it's not just like some theoretical right so you you can see that in"
8473760,8480480," practice uh right and with 3d visualization it's actually super cool i also like how easy it is to throw"
8481040,8488800," like a little bit of a 3d visualization in really right so you can literally see how it all goes"
8488800,8498800," it's pretty cool it's pretty cool so the next stop hopefully is going to be the gz paper right the gz"
8498800,8503280," paper so for those who doesn't know right for those who didn't watch the previous stream there's another"
8503280,8509680," cool application of uh k-means clustering algorithm not only for coming up with the palette for for the images"
8509680,8517680," and stuff like that so apparently you can quite easily classify different uh documents"
8517680,8525040," using k-means clustering and simply by g-zipping the documents i didn't read the paper yet but from"
8525040,8532000," what i read so you can just take the g-zipped version of the documents and do k-means clustering"
8532000,8537520," and that will will be a pretty good classification of the uh of the documents on different topics and"
8537520,8542960," stuff like that apparently uh right so i haven't read it yet and this is going to be the next thing"
8542960,8547920," that we're going to try to do with this algorithm i wonder if the 3d visualization is going to be"
8547920,8553680," helpful for us maybe it will maybe it will not i don't know we'll see we'll see but in any case uh"
8553680,8559280," that's it for today thanks everyone who's watching me right now i really appreciate that have a good one"
8559280,8566640," and i see you all on the next recreation programming session with amista azuzin i love you"

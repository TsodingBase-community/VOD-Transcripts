start,end,text
0,6580," Hello everyone and welcome to yet another recreational programming session with Ahu, Mr. Azuzin."
6580,13040," So, today we want to develop a little bit of a language, right?"
13040,20880," So, essentially we'll be working on this random art thingy, which is a random shader generator, right?"
20880,27080," It generates random shaders which create cool patterns which we can't watch because GitHub is shit."
27080,30820," But we can actually run this entire thing on our machine locally, right?"
30820,33520," So, let's actually rebuild it. Let's actually run GUI."
33520,37720," So, and there we go. This is a random pattern, right?"
37720,41060," It's too bright. So, let me actually restart it and pick a different pattern."
41060,47940," It's still too bright. So, maybe they look the same honestly, but they're supposed to be random."
47940,52660," Maybe we are unlucky. Yeah, there we go. That's a little bit better."
52660,60400," That's a little bit more interesting, right? And every time you do this thing, it generates a random shader and displays it to you."
60400,66940," So, the shader is actually generated based on a grammar that we had coded within the code, right?"
66940,68900," So, let's find default grammar."
68900,72000," And the grammar is basically like BNF, right?"
72060,77180," So, you have a bunch of rules and a bunch of branches with their probabilities, by the way."
77180,86420," BNF doesn't really have probabilities, but here we have probabilities because this is what we had in the paper, in the original paper, where we got this idea from, right?"
86420,90120," So, this is the paper. All of that is going to be in the description, obviously, and stuff like that."
90120,94300," The link to the source code and everything, right?"
94300,98260," So, it's basically BNF, but also with probabilities for the branches."
98260,101300," Like, this is the grammar that we had coded, right?"
101300,104220," So, as you can see, here is the rule."
104220,105780," Here's how you rewrite it."
105780,111980," There are several branches separated by bars, and there's also probabilities associated with each individual branch."
112480,118560," So, as of right now, we kind of hot-coded this entire thing in the code, right, directly."
118560,121000," As you can see, we just push branches and everything."
121000,129540," But it would be nicer if we just could describe grammars in a separate file with its own separate language, right?"
129540,132540," So, and this is what I want you to do, to work on today, right?"
132540,135440," So, how are we going to develop the language?"
135440,139940," So, it's going to be grammar, let's say, BNF."
141440,146460," So, we already discussed the idea for the grammar in one of the previous streams."
146460,149080," The link to the playlist is going to be in the description."
149080,154460," So, but essentially, we're going to specify the name of the rule, right?"
154460,160820," So, the rewrite operator, and then for each branch, we're going to have a bar, right?"
160820,163120," So, which then describes the expression."
163120,170860," So, for the entry, we're going to have only one expression, which is basically a triple CCC, right?"
170860,175260," So, maybe I'm going to call it E, so it looks exactly like in the paper in here."
175260,180960," What's interesting is that, so, triple is basically a vector 3."
180960,185300," So, what I was thinking is that instead of, like, calling it a triple, let's actually literally call it vector 3,"
185780,189920," similar to how it is called in shaders themselves, right?"
189920,196080," So, and every time you want to add a new branch, you just add it like this, right?"
196080,207420," So, and the reason why we start each individual branch with a bar is because I want to increase the probability of a certain branch by just adding more bars to it."
207680,213040," So, the probability of this branch is going to be higher than, like, the rest of them."
213040,214440," So, that's basically the idea."
214440,220840," And since each individual branch starts with a bar, I think the rewrite operator is kind of redundant, right?"
220920,226220," So, we're going to have essentially our own format, which looks like this, right?"
226220,233080," So, essentially, you write the name of the rule, and these are all of the possible branches."
233080,240220," They all start with a bunch of bars, and the amount of bars indicates how likely, you know, that branch is in the process of generator."
240460,244800," So, it doesn't really have a way to sort of, like, finish the sequence of branches, right?"
244800,248800," So, and one of the symbols we can use is basically like a semicolon, right?"
248800,252680," So, semicolon indicates that, okay, so you're done describing the branches of the grammar."
252680,257400," So, for E, in here, we have only one branch, which generates, like, a vector 3."
257400,260920," So, the next one is going to be A, right?"
260920,268280," So, it's a terminal rule, and that terminal rule consists of either a random value from minus 1 to 1,"
268640,273460," or a variable x, or a variable y, like this, right?"
273460,276980," And all of them have equal probabilities, right?"
276980,280660," All of them have equal probabilities, and here we end this entire thing."
280660,287600," So, and then we define C, which is either A, or add operation, or multiplication, right?"
287600,288660," So, let's actually quickly do that."
288660,294800," So, it's going to be A, or add operation, which also uses C, so this is a recursive thing,"
294800,298200," or multiply operation, like so."
298320,299860," And here we add them, right?"
299860,303200," So, this is how we describe this specific grammar in our language."
303200,305060," So, this is how our language is going to look like."
305060,310560," So, now."
310560,315040," So, what's interesting is that we need to specify the probabilities."
315040,318980," I'm a little bit bad with fractions, right?"
319060,325140," But the chat told me on one of the previous streams that if you just multiply it by 2, it's going to be 2 eighths."
325140,330060," So, that means here we have to put two bars and three bars for these ones."
330060,332960," So, these two things, right?"
332960,335360," So, they are more probable than this one."
335360,337880," And this is how we sort of encode the probabilities."
337880,343120," The reason why I do probabilities like that is because it becomes kind of visual, right?"
343120,350720," So, we could have basically added like 2 and 3 in here, but it's not particularly convenient, right?"
350720,356360," So, like with amount of bars, you can instantly like sort of see relative like value."
356360,359080," What is more probable than another one?"
359080,361160," So, I think it's kind of cool, right?"
361160,362760," So, I want to keep it like that."
362760,364480," Right."
364620,366600," So, this is basically what we need to parse."
366600,370620," But before we can parse this entire thing, we need to lex it."
370620,373900," So, lexing is a painful topic for me, right?"
373900,378040," So, because it's so deceivingly simple, right?"
378040,379700," So, it's actually deceivingly complex."
379700,380520," How do you even say that?"
380520,383620," So, it feels like it's simple, but in reality, it's complex."
383620,385520," That's what I'm trying to say, right?"
385520,394160," So, and every time I sit down to like implement quickly a lexer, I end up wasting an entire freaking stream implementing the goddamn fucking lexer."
394620,401560," So, one of the options that I can, you know, have is use stb-celexer, right?"
401560,406820," But stb-celexer has proven to be a huge pain in the ass."
406820,409100," Well, this is not stb, right?"
409100,414620," So, somebody actually squatted the handle stb, okay?"
414620,417060," Okay, then anyways, right?"
417240,424780," So, one of the things I, like, I have as an option is stb-celexer, but it's unusable, honestly."
424780,432680," It has a really weird API, and when you try to actually use it to then parse some things, it's a huge pain in the ass."
432680,434700," It's an absolute huge pain in the ass."
435100,448540," And since every time I implement a lexer, I kind of end up with a similar thing, what I did, I basically finally extracted sort of like the generic lexer that I usually implement into a separate library, right?"
448540,453520," So, I did that yesterday called a lexer, right?"
454380,456240," So, and this is what we're going to be doing today."
456240,458220," This is what we're going to be using today, right?"
458220,460540," So, we're going to use this library, so you can find it in here."
460540,461900," I'm going to copy-paste it in the chat."
461900,467560," And for people who's watching all of that on YouTube, it's going to be in the description as well."
467560,468880," So, it's pretty simple, right?"
468880,473040," So, essentially, you just specify different concepts, right?"
473040,479120," And you make the lexer aware of that concept, and it's capable of parsing them things."
479120,480840," Not really parsing, lexing them."
480840,483020," So, then you can parse this entire stuff."
483380,486920," So, let's actually go ahead and see how we can use this entire stuff."
486920,490240," So, I'm going to actually download it raw, right?"
490240,491400," So, let's go ahead and do that."
491400,494880," I'm going to put it somewhere, maybe here, wget."
494880,497280," Let's fucking go."
497280,499000," All right."
499000,500980," So, I think I forgot to save this entire thing."
500980,510200," So, the first thing we need to do, the first thing we need to do, I suppose, we need to maybe read this entire stuff."
510780,512400," So, here we have GUI."
512400,515320," So, I'm thinking, do I want to create this separate command or not?"
515320,517040," Let's actually create this separate command."
517040,518220," So, it's going to be start CMP."
518220,519860," What is it called?"
519860,520980," Command name."
520980,521420," Right."
521500,531400," So, we're going to parse first, and then we're going to figure out what we can do about that."
531400,532840," So, string builder."
532840,536000," So, into string builder, we're going to be reading the whole thing."
536000,540700," But I suppose we're going to accept the file through the command line argument."
541220,541640," Right."
541640,550920," So, for instance, if the amount of arguments is zero, what we have to say is that you didn't provide the input path."
550920,551900," Right."
551980,563600," So, usage is program name, command name, input, and the program name is this, and the command name is this, like so."
563760,569700," An error is no input, input is provided."
569700,572500," So, that's the error that will happen in here."
572500,579600," So, here we're going to have an input path, shift argv, argc."
580600,590800," So, then, read the entire file, input path into sb, and if you failed, return one."
590800,594000," So, if you didn't fail, just return zero, so everything is successful."
594000,594480," Okay."
594480,596800," How do we create Alexa?"
596800,598220," Right."
598220,602160," So, I already downloaded it, but I didn't put it into src folder."
602160,603920," So, let's actually put it into src folder."
603920,607360," And the first thing we need to do, we need to actually include that thing."
607440,612260," It's a header-only library, so that means you need to do Alexa implementation, right?"
612260,613400," So, that's what you have to do."
613400,619280," And the first thing you need to do, you need to create the Alexa, right?"
619280,622660," So, it's a structure that contains all sorts of things."
622660,627520," You can figure the Alexa through these fields and stuff like that, right?"
627520,634120," So, but the easier way to do, the easier way to create this entire thing is just to use this constructor, so to speak, right?"
634120,636740," So, just use constructor."
637440,639140," So, we have to provide the file."
639140,641340," It's not going to read any file."
641340,645560," It only uses the file for reporting the diagnostic errors, right?"
645560,655020," So, if something bad happened, like an invalid token somewhere, unexpected token, it will print diagnostic errors, and it will use that file path to just point at that place."
655020,657400," It doesn't really read that file, right?"
657400,661000," So, it doesn't even interact with the file system whatsoever."
661000,669320," So, the content is going to be SB items, the thing that we just read from the file, and also, we have to specify how many bytes we have in there."
669320,669920," So, there we go."
669960,676240," So, the next function that we really need in here is getToken, right?"
676240,691040," So, we provide the pointer to the Alexa, so getToken is obviously going to modify the state of the Alexa, and it's going to return true or false depending on whether it encounters the end of the Alexa or an invalid token, right?"
691040,695380," So, it basically returns false when it encounters end or invalid."
695380,699220," So, that means you can just do that in a while loop, right?"
699220,706120," If you get out of the while loop, that means you encountered either the end or an invalid token, right?"
706120,707500," So, that's how it works."
707500,712720," So, and it returns the exact token through this variable, right?"
712720,717520," So, you're supposed to also allocate this structure on the stack and provide the pointer to here, right?"
717520,725340," And it just puts all of the information about the parsed, like, lexed token into that structure, so you can inspect it, right?"
725340,729560," So, and then, as we get these tokens, we can actually try to print them."
729560,736260," Alexa comes with its own diagnostic function, which is a part of the Alexa itself, right?"
736260,743180," So, it's a pointer to the function, right, which accepts the location of the token and stuff like that."
743180,747460," The level of the diagnostic, it's like a warning, info, error, and stuff like that."
747520,750140," And it's also printf style, like, right?"
750140,752600," So, it has fmt and the variadic arguments."
752600,755240," So, and essentially what we can do in here, right?"
755240,756180," So, diago f."
756180,759860," So, the location of the token is tloc, right?"
759860,763300," So, if we take a look at the token structure, it has all sorts of things."
763300,769760," It has a kind, location, begin, end, and different values at managed to parse and so on and so forth, right?"
769760,770840," One of them is a location."
771060,777180," Here, we're going to say that it's info, and then we can specify, like, what that token is."
777180,779600," We can specify the kind of the token, right?"
779600,781000," So, we can take the kind of it."
781000,791940," And the library has a function, kind name, which converts the kind, which is just a number, into a string that we can print in here."
791940,792880," And there we go."
793440,799200," So, and what we're doing, we're just, in a loop, pulling out the tokens, and we printed them, right?"
799200,800800," In their natural location."
800800,806420," So, if you quit this loop, that means you either encountered an end or an error."
806420,813440," So, after this loop, we need to make sure that it was an end and not an error or invalid token."
813680,818260," So, I have a bunch of functions, which are called expect functions."
818260,825740," They sort of assert that a token is of certain kind or was of certain type, right?"
825740,838060," So, for example, you can use this function to actually say, okay, expect that last token that we got when this thing returns false to be an end, right?"
838200,845600," So, and if it's not an end, this function will actually print diagnostic message with this diagnostic function."
845600,848640," And in that case, we can actually safely return one, right?"
848640,854300," So, this entire thing will print the diagnostics and tell us that we should quit with non-zero exit code."
854300,856660," So, why the diagnostic is this kind of function?"
856660,857760," It's a pointer to the function."
857760,860720," It is like that, so you can then replace it, right?"
860720,864780," So, this library doesn't try to enforce the way you print diagnostic messages on you."
864940,871860," It suggests you the default way of doing that, but if you don't like that, you can replace this function with your own implementation, right?"
871860,878880," So, and it will supply the location of where the error happens, all of the formats and the message, and you can put it in whatever place you want, right?"
878880,882400," So, maybe you have a GUI application, you want to display it in a GUI, okay?"
882400,884980," So, you can do that by replacing that specific function."
884980,888700," So, and the library uses that specific pointer to the function."
888700,889660," So, that's how it works."
889660,892760," It's sort of like a pointer of extension."
893000,896100," So, and there is actually several diagnostic functions, right?"
896100,900740," There is a default diagnostic function, which does the thing, right?"
900740,902340," And there's also ignore one."
902340,906780," If you just want to ignore all the diagnostic messages, you can set to this function."
906780,908260," It will just do nothing, right?"
908260,909520," So, it comes out of the box."
909520,912840," You can very quickly disable all of these diagnostic messages."
912840,917120," So, anyways, let's maybe try to run this entire thing."
917120,919480," So, I'm going to do parse, and it doesn't compile."
919580,920760," So, let's actually go to compilation error."
920760,921940," So, semicolon in here."
921940,923160," So, what else do we need in here?"
923160,926120," So, point to this thing, and there you go."
926120,926720," Okay."
926720,928340," So, as you can see, we didn't provide the input."
928340,929720," So, let's actually provide the input."
929720,931400," Grammar B and F."
931400,932060," Okay."
932060,934360," So, the first thing we encountered is a symbol."
934360,935880," This is, in fact, a symbol."
935880,937020," Right."
937020,940800," So, then we encountered something unexpected, right?"
940880,942300," So, this is an invalid token."
942300,945040," The Lexer doesn't know anything about this token."
945040,946040," Right."
946040,947580," It doesn't know anything about this token."
947580,955000," So, I can tell you that in terms of the library, these kind of tokens are called punctuations or puncts."
955000,956020," Right."
956020,963100," So, to make the token aware of this thing, you need to define an array of these punctuation marks."
963780,964680," How do you do that?"
964680,967200," You just define it as an array of strings."
967200,967600," Right."
967600,969540," So, you can create something like puncts."
969540,970720," Right."
970720,971980," So, you can just put them in there."
971980,972580," Right."
972580,975360," So, you can actually, you know, put a bar in here."
975360,976640," Right."
976640,978140," And that's about it, honestly."
978140,980480," Like, you just have an array of strings."
980480,988600," And the way you make the Lexer aware of that array of strings, you actually literally assign it to the puncts array."
988600,990700," So, let's actually find the syntax thing."
990700,991880," So, here it is."
991880,993280," So, here is the puncts array."
993700,995540," So, it's basically array of strings."
995540,996900," Because of that, it's a double pointer."
996900,1000240," And you also have to provide how many of them you have, the size of the array."
1000240,1003260," So, the array is sort of sized in here, as you can see."
1003260,1005640," Maybe I should make it actually dynamic arrays."
1005640,1010540," So, then you can, like, conveniently push new punctuation things in there."
1010540,1011820," But I'm not sure."
1011820,1012300," Right."
1012300,1014280," So, it's kind of difficult to keep track of the indices."
1014280,1022340," Because the way the Lexer tells you what kind of punctuation sign it found is through the index in that array."
1022340,1023180," Right."
1023620,1028040," And to keep track of indices, it's better to actually use it as a static array."
1028140,1029980," I'm going to show you how to do that a little bit later."
1029980,1030760," Right."
1030760,1035700," So, what we're doing here is we just do puncts and we assign puncts in here."
1035700,1038500," And then we have to specify the puncts count."
1038500,1040280," How many of them we have in there."
1040280,1043680," So, this is going to be array len puncts."
1044600,1052760," So, now, if you try to lex this entire thing, as you can see, it is aware of symbol."
1052760,1054180," It is aware of bar."
1054180,1054800," Right."
1054800,1056080," It encounters another symbol."
1056080,1058560," And then it encounters the parent."
1058560,1060600," And it's an unknown symbol in here."
1060600,1060980," Right."
1061020,1062160," An unknown punctuation."
1062160,1063640," So, let's actually add it in here."
1063640,1067280," So, it's capable of now lexing even more."
1067280,1069260," But now, it doesn't know what is a comma."
1069260,1070240," Right."
1070240,1072280," So, let's add that comma in here."
1072280,1073440," Right."
1073440,1076120," So, then it encountered a closing thing."
1076120,1077920," So, let's actually put it like this in here."
1078580,1083400," So, as you encounter like an invalid thing, you just add them to the list of these punctuation things."
1083400,1084860," Right."
1084860,1085640," Where it is."
1085640,1089360," Yeah."
1089360,1092260," So, semi-colon like so."
1092260,1093800," And I think that's about it."
1093800,1094580," Yeah."
1094580,1094920," There we go."
1094920,1096460," So, we actually lexed all of them."
1096460,1097100," Right."
1097100,1099500," So, now, it is aware of all of these things."
1099500,1101640," And actually lexes them perfectly."
1101640,1107960," So, as far as I know, we can even print their values."
1108340,1108580," Right."
1108580,1110980," So, we can do something like this."
1110980,1111620," Right."
1111620,1117120," Because the token contains begin and end."
1117120,1118400," Ponce char begin."
1118400,1119040," Right."
1119040,1125900," So, it's basically a pointer within the stream of bytes where the token starts in there and where it ends."
1125900,1129020," So, essentially, you can basically print it as a size string."
1129020,1132760," So, the size of the string is end minus begin."
1132760,1135000," And then, the beginning of the string is this."
1135000,1137380," So, because of that, we can do the following thing."
1137680,1140760," And as you can see, it literally prints all of these individual tokens."
1140760,1141460," Right."
1141460,1143680," It prints all of these individual tokens."
1143680,1157900," So, but the problem here is that, again, the way the lexor tells you what kind of punctuation you've got is by setting punct index to the index within this array that you provided in here."
1158900,1159120," Right."
1159120,1161180," So, it doesn't give you, like, the string."
1161180,1162980," You can actually compare the string."
1162980,1164120," It's not particularly convenient."
1164120,1165100," It's a size string."
1165100,1168020," But the way it tells you, it's just, like, index within that array."
1168640,1176040," So, to keep track of those indices, I think the easiest way I've found is to create enumeration for those punctuation signs."
1176040,1176280," Right."
1176280,1177920," You literally do in num."
1177920,1178580," Right."
1178580,1180680," And you say punct index."
1180680,1184860," And in here, you just define elements for each individual punctuation thing."
1184860,1185220," Right."
1185260,1187360," So, we can do punct bar."
1187360,1188320," Right."
1188320,1189440," So, all parent."
1189440,1190360," Open parent."
1190360,1191900," Then we have closed."
1191900,1193580," Then a comma."
1193580,1195300," Semicolon."
1195300,1196380," Semicolon."
1196380,1197460," Right."
1197840,1202180," And maybe we can also have something like count puncts, how many of them we have in here."
1202180,1205480," And we can allocate exactly the array in here."
1205480,1209800," So, we don't have to use array length, count puncts, like this."
1209800,1215040," And afterwards, we can just use the designated initializer."
1215040,1216680," I think this is designated initializer."
1216680,1216960," Right."
1216960,1220100," So, essentially, just do it like this."
1220100,1222180," Punct."
1222180,1224920," And boom."
1225280,1226860," So, this one is bar."
1226860,1228460," This one is all parent."
1228460,1230440," This one is a closed parent."
1230440,1230940," Right."
1230940,1231960," So, this is a closed parent."
1231960,1233240," This one is a comma."
1233240,1234720," And this one is a semicolon."
1234720,1235860," There we go."
1235860,1238580," We can even align everything by bar."
1238580,1239440," And there we go."
1239440,1243020," So, now, you can quite easily actually compare things."
1243020,1243640," Right."
1243640,1244640," So, you've got a token."
1244640,1247140," You know that the token is a punctuation."
1247140,1249140," You can do punct index."
1249140,1254760," And you can check that it is a bar like this and do something upon that."
1255140,1255260," Right."
1255260,1257640," But, usually, you're not going to be comparing things directly."
1257640,1258640," Right."
1258640,1259880," We have expect functions."
1259880,1266260," For example, there is an expect punct where you can provide the token that you get out"
1266260,1270540," of the Alexa and say, okay, I expect this index as a punctuation."
1270540,1275420," And this entire thing will first check that the kind is punct."
1275420,1277120," And then, it will check the index."
1277120,1282080," If there is some sort of a mismatch, it is going to throw a diagnostic error for you."
1282080,1283760," Automatically, you don't have to worry about it."
1283820,1287200," So, what you're going to be doing as you're parsing things is just like a sequence of expects."
1287200,1289080," I expect that punctuation."
1289080,1292160," I expect this kind and so on and so forth."
1292160,1292840," Right."
1292840,1294400," So, and there we go."
1294400,1297940," I think we have basically everything except maybe comments."
1297940,1298260," Right."
1298260,1300080," It would be kind of nice to have some comments."
1300080,1301080," Right."
1301160,1302900," So, maybe you're going to have like a conf mode."
1302900,1308500," And in the config mode, usually, a hash is a comment."
1308500,1309000," Right."
1309000,1310040," So, this is the entry."
1310040,1312500," This is the termination."
1312500,1315580," And this is like a binops, maybe."
1315580,1316320," Right."
1316320,1317620," So, this is sort of a binops."
1317620,1319240," Right."
1319380,1320880," So, we want to have comments in here."
1320880,1326740," And if we just try to parse this entire thing with comments, we get this thing where it is embedded."
1326740,1329700," Well, you specify different kinds of comments."
1329700,1333720," The Alexa supports single line comments and multi-line comments."
1334220,1335700," If you take a look at the Alexa."
1335700,1336340," Right."
1336340,1339060," So, as you can see, here is the single line comments array."
1339060,1341520," It's kind of similar to the punctuation signs."
1341520,1342140," Right."
1342140,1346200," So, you just provide an array of comments, of the prefixes for single line comments."
1346200,1349220," So, if I, you know, go here."
1349220,1351240," I can do kind of a similar thing."
1351240,1352020," Right."
1352020,1354900," So, I can say const char comments."
1354900,1355980," Right."
1355980,1358100," And here, I just say, okay."
1358100,1359640," So, one of the comments is going to be hash."
1359640,1361220," Right."
1361220,1362980," So, and in Alexa."
1364220,1368080," Single line comments is comments."
1368080,1375080," And then, we can also specify single line comments count, which is array len for the comments."
1375080,1376320," Like so."
1376320,1380500," So, if I try to parse this entire thing, it is going to work."
1380500,1380740," Right."
1380740,1383880," As you can see, it actually skips the comments."
1383880,1384300," Right."
1384300,1387220," It now recognizes the single line comments perfectly."
1387220,1387980," Right."
1387980,1392100," So, if you want to have also maybe, you know, C style comments."
1392100,1392520," Right."
1392520,1394200," So, C style comments."
1394200,1398060," Obviously, if you try to do something like that, it's not going to be correct."
1398060,1402600," But then, you can just add another style of comments in here."
1402600,1405720," And it's going to be recognized as a single line comments again."
1405720,1406160," Right."
1406160,1407600," So, it recognizes them."
1407600,1409740," It also supports multi-line comments."
1409740,1410080," Right."
1410160,1412440," So, you just have to specify a different array."
1412440,1418140," It's an array of ML comments where you specify opening and closing."
1418140,1418900," Right."
1418900,1420660," And it's just like, it's an array of this kind of thing."
1420660,1423540," So, you can have slash star, for instance, if you want to."
1423540,1424880," But I think it's so much."
1424880,1425060," Right."
1425060,1428900," So, you can have several styles of comments with different prefixes and stuff like that."
1429380,1431800," So, unfortunately, multi-line comments, they cannot be nested."
1431800,1433700," And I'm thinking, do I want to make them nested?"
1433700,1435740," Because in C, for example, they are not nested."
1435740,1438300," So, this doesn't make any sense to make them nested."
1438300,1438860," But anyway."
1438860,1440120," So, that's the library."
1440120,1440460," Right."
1440520,1443440," So, it's kind of useful for very basic cases."
1443440,1443860," Right."
1443860,1449580," When you just need to quickly come up with a prototype language on the spot, as we just did in here."
1449580,1449860," Right."
1449860,1451860," So, now we have a lexor for this specific language."
1451860,1453080," Right."
1453080,1456280," But then, for something more serious, I think you want to have a custom lexor."
1456280,1456720," Right."
1456720,1457760," So, but I don't know."
1457760,1459380," So, don't take this thing too seriously."
1459380,1461460," I developed it for my specific cases."
1461460,1463020," But it kind of works."
1463020,1463200," Right."
1463200,1464960," It doesn't support string literals, for instance."
1464960,1465520," It will."
1465520,1466100," Right."
1466100,1468240," I kind of plan to have string literals."
1468800,1473860," And you will also be able to customize the syntax for string literals."
1473860,1474060," Right."
1474060,1476880," So, maybe you want to use the double quotes or single quotes."
1476880,1477840," Right."
1477840,1480980," Maybe the quotes that are different for opening and closing."
1480980,1481540," Right."
1481540,1484320," So, maybe for like a triangle of brackets."
1484320,1484660," Right."
1484660,1486340," So, maybe you want to define strings like that."
1486340,1488820," So, you know, the opening is different than closing."
1488820,1491140," And I kind of like this kind of string literals."
1491140,1492080," I already talked about it."
1492080,1498400," It's because you can kind of easily, you know, nest them without the need to escape anything."
1498540,1498660," Right."
1498660,1501860," So, because the only thing you need to do, you need to check whether they're balanced or not."
1501860,1503100," Right."
1503100,1503820," So, it's kind of cool."
1503820,1505900," So, maybe the Alexa is also going to support that."
1505900,1506920," But all of that in the future."
1506920,1508060," We don't really need any of that."
1508060,1510260," We just need Alexa for a very simple language."
1510260,1513140," Let me maybe remove the style comments."
1513140,1513500," Right."
1513500,1516080," So, I don't know if they're needed or not."
1516080,1516860," So, yeah."
1516860,1517940," That's Alexa."
1517940,1518600," Right."
1518600,1519260," That's Alexa."
1519260,1521480," It also has a concept of keywords."
1521480,1524900," And keywords is just a special symbol."
1525480,1533040," So, it has a concept, first of all, of symbols, which are alphanumeric sequences, which may also include underscores and stuff like that."
1533040,1533580," Right."
1533660,1538420," But some of these symbols may be reserved for special cases."
1538420,1542520," And for this specific situation, it has a concept of keywords."
1542520,1543080," Right."
1543080,1546320," So, you can additionally specify the array of keywords."
1546900,1553600," And basically, what the Alexa will do, it will parse a symbol, then check it against the list of keywords."
1553600,1559380," And if that symbol is a keyword, it is going to classify it as a keyword instead of symbol."
1559380,1561760," So, as you parse things, you can actually distinguish them."
1561760,1566320," And, for example, not allow using keywords in the names of the variables."
1566320,1567020," Right."
1567020,1569520," And names of the variables."
1569640,1573560," So, that's basically, I don't think we're going to be using the concept of keywords in here."
1573560,1575460," So, the frame rate of the camera is actually dropping."
1575460,1576300," So, hello."
1576300,1578240," Yeah, I think it's better."
1578240,1581840," So, we're not going to be using keywords, but we're not going to be using punctuation marks."
1581840,1582240," Right."
1582240,1585320," So, what do we guys think about this library?"
1585320,1585800," Isn't it cool?"
1585800,1586960," I think it's pretty cool."
1586960,1587720," Right."
1587720,1589560," It's kind of very specific."
1589560,1589840," Right."
1589840,1595220," So, you can obviously see that it was designed specifically for what I usually use Alexa for."
1595220,1595500," Right."
1595500,1598500," So, I'm not even sure if it's going to be generally useful for everyone."
1598500,1600620," And, obviously, it's not super fast."
1600620,1600900," Right."
1600900,1603400," So, there's a lot of linear algorithms here and there."
1603400,1609100," So, I don't know how well it performs on huge, you know, bodies of text."
1609100,1610260," So, I'm freaking out."
1610260,1611500," We've got some subs."
1611500,1612420," Thank you."
1612420,1613860," Thank you so much for the subs."
1613860,1617260," So, NP exception."
1617260,1618620," Thank you so much for tier three."
1618620,1620760," Don't waste money, please."
1620760,1622500," Please don't waste money."
1622500,1623840," I don't get any money from that anyway."
1623840,1625340," Please switch to tier one."
1626300,1627000," But, thank you."
1627000,1628580," I appreciate the intent."
1628580,1634360," So, with the message 10 months already, thanks for all of the silent inspiration."
1634360,1635000," You're welcome."
1635000,1635560," Right."
1635560,1638280," So, I'm glad that whatever I do actually inspires people."
1638280,1640140," Because it definitely inspires me."
1640140,1640860," Right."
1640860,1645620," I just want to share all this cool stuff I discover in programming and everything."
1645620,1648640," So, I'm really glad that people also find it interesting."
1648640,1650320," Right."
1650380,1656100," Because I'm a little bit of afraid of maybe I have this like a really weird, over-obsessed,"
1656100,1659600," autistic tendency that nobody finds it interesting."
1659600,1660840," Right."
1660960,1662060," So, and it's just only me."
1662060,1664260," My weird brain finds these things interesting."
1664260,1667580," But I'm super glad that I can find on the internet other people."
1667580,1670960," So, many people who are also interested in the same kind of thing."
1670960,1671560," Right."
1671560,1674240," So, because sometimes I can tell."
1674340,1676700," Is it just me who finds these kind of things fascinating?"
1676700,1679860," Or they are actually fascinating for other people?"
1679860,1680540," And they are."
1680540,1681420," Some of them are."
1681420,1682000," Not all of them."
1682000,1682680," Not all of them."
1682680,1683820," But some of them are."
1687080,1691060," How do you balance when we have a closing in the literal?"
1691060,1693060," Example."
1693060,1696580," Right now, we don't do anything."
1696580,1698920," Because we don't even have string literals at all."
1698920,1699720," Right."
1699720,1700620," So, that's the thing."
1700620,1702840," So, I was talking hypothetically."
1702840,1707720," So, when we're going to support string literals, we're going to check for balancing somehow."
1707720,1708900," Right."
1709020,1710420," So, how are we going to be balancing?"
1710420,1715080," We're going to be just counting how many times we encounter opening things."
1715080,1719520," And we're going to make sure that we encounter closing things as many times."
1719520,1720180," Right."
1720180,1724960," So, in case you want to actually include this symbol that looks like closing."
1724960,1726660," In that case, you want to escape it."
1726660,1728620," But it's not going to be that very often, I think."
1728620,1729980," Right."
1729980,1731380," So, yeah."
1731380,1735680," So, because quite often, like you have some sort of a name."
1735680,1736380," Right."
1736560,1740040," So, you have some sort of a name that is wrapped into this thing."
1740040,1740960," Usually, okay."
1740960,1748780," Usually, it makes sense not with the triangular brackets, but with the quotes that we use in Russian language."
1748780,1751640," For instance, we're actually using the French quotes."
1751640,1751920," Right."
1751920,1753140," I don't remember how they're called."
1753140,1754480," Right."
1754480,1756980," So, there is a very specific name."
1756980,1759300," But in Russian, we call them pines."
1759300,1759860," Right."
1759860,1761240," So, because they look like pines."
1761240,1762000," Right."
1762000,1766280," So, what's funny is that in Russian language,"
1766280,1770300," which we have, like, we refer to this style of quotes as pose."
1770300,1771200," Right."
1771200,1772820," And this is, these are pines."
1772820,1778920," So, like, I don't remember how you call these kind of things in English."
1778920,1779920," Right."
1780740,1783860," And the balancing kind of makes sense when you use pines."
1783860,1784340," Right."
1784340,1786920," So, it kind of makes sense because you have some sort of a name."
1786920,1788180," Right."
1788180,1796480," And then you want to say, okay, I want to print the message which says, the name is like this."
1797260,1798680," And just print it."
1798680,1803800," So, and because of this kind of sort of pattern that you may encounter."
1803800,1804060," Okay."
1804060,1807340," I had string literal quoted."
1807340,1810420," And then I want to print it as part of the other message."
1810420,1812300," And I need to quote that message."
1813100,1815900," Because of that, nastiness is actually super common."
1815900,1822080," And because of that, like, you kind of save a little bit of a time of not escaping this kind of situation."
1822080,1826500," But it's quite rare when you actually want to do something like this."
1827060,1833480," You only want to do something like this when you want to say is that you close quotes with."
1833480,1836680," And in that case, maybe you can put something like this in here."
1836680,1837080," Right."
1837080,1840840," So, and you can, like, have double quoting or something."
1840840,1843820," Or maybe you can introduce escaping."
1843820,1845120," Right."
1845120,1850260," And because of that, when we count whether everything is balanced or not, we may not count this one."
1850260,1851140," Right."
1851140,1852800," So, there's a lot of different things."
1852800,1855980," Like, I'm basically having these kind of use cases in my head."
1856980,1867060," So, in my school, from what I've seen so far, very few people do give a fuck about programming."
1867060,1873660," They see this as a hacker corporate thing or whatever without really realizing that you can enjoy making pet projects."
1873660,1875840," Yeah, that's kind of weird."
1875840,1885220," So, people just see it as sort of, like, becoming a doctor or becoming a lawyer."
1885220,1886200," Right."
1886640,1888400," More like becoming a lawyer, I suppose."
1888400,1888740," Right."
1888740,1892200," So, programming, becoming a programmer is seen as becoming a lawyer."
1892200,1897620," Because I kind of doubt that the lawyers are super, super enthusiastic about their work."
1897620,1898300," But are they?"
1898300,1898700," I don't know."
1898700,1900560," I actually never spoke with lawyers."
1900560,1903480," So, are they enthusiastic about their work?"
1903480,1904420," Do they actually enjoy?"
1904420,1908060," Do they find, like, a, I don't know, satisfaction in their work?"
1908060,1909300," Or do they do that for money?"
1909300,1912380," Because I feel like lawyers primarily do that for money, aren't they?"
1912380,1913340," Right."
1913640,1914400," But maybe not."
1914400,1918700," Because as far as I know, this could be a very fun intellectual game."
1918700,1919540," Right."
1919680,1926720," So, yeah, I can see certain, like, a programmer-minded people becoming lawyers because it is a kind of an intellectual game."
1926720,1934020," So, yeah, I can see people being enthusiastic like that about laws and everything."
1937440,1940820," So, yeah, I've tried out so much fun programming stuff from these streams."
1940820,1941180," Nice."
1941180,1942020," I'm really glad to hear that."
1942020,1943580," So, anyway."
1943580,1945060," Yeah."
1945060,1947200," Now we need to parse this entire thing."
1947200,1948080," I suppose."
1948080,1948980," Right."
1948980,1950860," So, we need to parse this entire thing."
1950860,1955020," Whereas working for NGOs might do it for the passion."
1955020,1956660," Because..."
1956660,1967740," So, let me try to parse all of this stuff."
1967740,1969480," How are we going to be parsing?"
1969480,1978700," So, essentially, the top level of the grammar BNF file is a sequence of the rule definition."
1978700,1979340," Right."
1979540,1982020," So, here's the rule and here is its branches."
1982020,1986500," So, at the top level, we don't really have anything else."
1986500,1988540," Yeah."
1988540,1989960," We don't really have anything else."
1989960,1992980," So, because of that, we either expect a symbol."
1992980,1993560," Right."
1993560,1999140," When we start parsing the top level expression, we either expect a symbol or we expect the end file."
1999140,1999620," Right."
1999620,2002560," So, that's the only things that we expect."
2002560,2002800," Okay."
2002800,2004460," So, let's actually remove all of that stuff in here."
2004460,2007640," And for that, I think we have a special function."
2007640,2008000," Right."
2008380,2008780," Expect."
2008780,2010020," Yeah."
2010020,2011720," Expect one of kinds."
2011720,2012280," Right."
2012280,2014900," So, sometimes you will expect one single kind."
2014900,2016400," Like in case of an end."
2016400,2018960," As we were parsing everything in here."
2018960,2019260," Right."
2019260,2021220," As you can see here at the end, we expect on the end."
2021220,2024320," But sometimes you may expect either end or a symbol."
2024320,2024960," Right."
2024960,2027720," So, in that case, we probably want to use this function."
2027720,2028300," Right."
2028300,2031980," So, here is the token."
2031980,2035040," So, we need to get the token first."
2035040,2035360," Right."
2035360,2036680," So, this is going to be get token."
2037740,2043600," And we need to specify what kind of kinds."
2043600,2045800," What sorts of kinds we expect."
2045800,2048200," What sorts of kinds."
2048200,2051660," So, let's go ahead and call them like a top level start."
2051660,2055880," And here we either expect a symbol."
2055880,2056300," Right."
2056300,2058320," So, it's going to be a symbol or the end."
2060320,2062860," So, that's what they are."
2062860,2065380," Top level kind."
2065380,2068860," And we have to specify how many of them we have."
2068860,2072440," So, it's going to be array len top level start."
2072440,2077660," And obviously, if you encounter something else, this thing is going to return false."
2077660,2079060," And we have to return one."
2079160,2082100," But it's also going to put a diagnostic in there."
2082100,2082640," Right."
2082640,2084040," So, put a diagnostic in there."
2084040,2085940," So, what we have to do."
2085940,2088700," We have to see what we got."
2088700,2089900," Right."
2089960,2098640," We know that at this point, after this function, if it was successful, the kind could be either, could be only symbol or end."
2098820,2103920," So, in case of the symbol, for now, let's just print the symbol."
2103920,2104420," Right."
2104420,2106400," So, we can do something like, I don't know."
2106400,2110220," So, L diagnostic, T location."
2110220,2112780," So, let's call it info."
2112780,2117280," So, start rule."
2117280,2120400," And let's put the name of the rule in here."
2120400,2120740," Right."
2120740,2122060," We don't have to put a new line in here."
2122060,2124840," The name of the rule is going to be the sized string."
2124840,2125600," Like so."
2125600,2128060," I can never remember when you define a size string."
2128140,2129740," Is that a dot star or star dot?"
2129740,2131060," I think I already talked about it."
2131060,2133420," It's kind of difficult for me to remember, like, which one is which."
2133420,2139420," So, because of that, the size, the print effing sized strings is kind of annoying."
2139420,2143020," But to be fair, the whole idea of print eff is kind of annoying."
2143020,2143300," Right."
2143300,2145760," So, you have to kind of memorize a bunch of things."
2145760,2147140," Right."
2147140,2150400," So, in case of the end, I suppose we don't really do anything."
2150400,2154400," So, but if we get anything else, that means there is a bug in here."
2154520,2158900," Or we added a new thing in here and we didn't handle that branch specifically."
2158900,2160580," So, I'm going to put unreachable in here."
2160580,2161540," Right."
2161540,2162500," So, top level."
2162500,2163440," Like so."
2163440,2168740," Will Alexa support some kind of a grammar or will it entirely up to the implementation?"
2168740,2170200," It's going to be entirely up to implementation."
2170200,2172280," It's primarily Alexa."
2172280,2173520," It's not really POSA."
2173520,2173940," Right."
2173940,2174560," So, it's more of Alexa."
2174560,2179380," Even though it has a little bit of a parsing capabilities with these expect functions."
2179380,2179940," Right."
2179940,2181460," Because they're not necessarily Lexers."
2181460,2183520," That's already a territory of POSAs."
2183520,2187860," I think that's as much as we're going to go into the territory of POSAs."
2187860,2188200," Right."
2188200,2192660," So, it's just like Lexing plus a bunch of like a very rudimentary expect functions."
2192660,2194100," Right."
2194100,2196120," So, that's basically the idea."
2196120,2197680," All right."
2197680,2200080," So, let's actually go in here."
2200940,2203940," So, it doesn't compile because we have to provide a pointer in here."
2203940,2206260," And there we go."
2206260,2207180," So, rule E."
2207180,2210720," And since we don't parse anything further, it just printed rule E."
2210720,2213360," If we try to put something else in here."
2213360,2214120," For example, bar."
2214120,2215400," It is going to fail."
2215400,2215800," Right."
2215800,2219340," It will say expected symbol end but got punked bar."
2219340,2220080," Right."
2220080,2221520," So, this is basically what it tells you."
2221520,2221820," Right."
2221820,2224760," So, this is what these expect functions are good for."
2224760,2230060," You can say, okay, at that specific point of parsing, I expect only symbol or end."
2230140,2232460," If you get anything else, die."
2232460,2233040," Right."
2233040,2234100," It's just like, whatever."
2234100,2235560," So, this is not what we expect."
2235560,2236720," Right."
2236720,2240220," So, here we expect specifically these things."
2240220,2241060," Yeah."
2241060,2242500," So, here is the rule E."
2242500,2246360," So, after the rule E, we're going to expect a bunch of bars."
2246360,2247020," Right."
2247020,2248160," So, that's what we're going to be expecting."
2252020,2253300," So, this is going to be interesting."
2253300,2257460," So, here is the symbol."
2257460,2267260," Funnily enough, since we have like several top-level definitions, this is something that we probably want to do in a loop."
2267260,2267800," Right."
2267860,2269280," So, that's what we want to do in a loop."
2269280,2270600," So, it's going to be something like while."
2270600,2272600," Like this."
2272600,2275120," And maybe I'm going to actually do it like that."
2275120,2277600," So, this is while."
2277600,2282860," And essentially, while t kind that we have in here."
2283580,2287480," I kind of want to be able to break out of this loop."
2287480,2288200," Right."
2288200,2288580," So, maybe."
2288580,2290280," You know what?"
2290280,2293580," Can we do something like quit?"
2293580,2296080," Like while not quit."
2296080,2297680," We just keep doing that."
2297680,2300140," Once you encounter end, quit true."
2300140,2301560," Like this."
2301560,2302880," I think that makes sense."
2302880,2303100," Right."
2303100,2305940," So, if we encounter it, we just break out of that."
2305940,2306760," I can't just break."
2306760,2308860," Because if you break, you break out of the switch."
2308860,2310500," Thank you so much, C."
2310500,2311040," Right."
2311040,2313300," For break in the switch."
2313580,2316980," Honestly, like in these imperative languages."
2316980,2318480," In these imperative procedural languages."
2318480,2324320," You should be able to break out of any sort of scope."
2324320,2324840," Right."
2324840,2329200," I want to be able to, for example, say break out of if."
2329200,2329900," Right."
2329900,2331820," So, I have a huge if in here."
2331820,2332800," I do some things."
2332800,2334660," And then in here, I have another if."
2334660,2339020," And I break out of that outer if."
2339020,2340860," And I need to somehow identify it."
2340860,2341000," Right."
2341000,2341920," So, with some sort of label."
2342160,2343020," It's kind of go-to."
2343020,2346360," But it's, whatever I suggest, it's like more restraint go-to."
2346360,2349000," This is something that I think C3 does."
2349000,2350280," Right."
2350280,2351740," So, let's actually go to C3 lane."
2353380,2355380," C3 has a bunch of weird corners."
2355380,2358360," But some of the things are kind of cool in here."
2358360,2359420," For example, break."
2359420,2361980," Label break and continue."
2361980,2365480," So, you can break out of if, switch, while, and do."
2365480,2373200," And you do that by putting a label, not a specific line, but actually at specific expression."
2373900,2375340," So, Zeke also has something like that."
2375340,2375620," I see."
2375620,2376940," It's probably sold from C3."
2376940,2381860," Of course, it's sold from C3."
2381860,2382320," It's Zeke."
2382320,2382720," Right."
2382720,2383720," It's sold from C3."
2383720,2384680," So, anyways."
2384680,2386740," So, anyways."
2386740,2388740," All right."
2388740,2391400," So, yeah."
2391400,2392200," So, something like that."
2392200,2395300," I think more imperative languages should actually start doing these kind of things."
2397260,2399940," So, this is an reachable."
2399940,2403960," And how are we going to be parsing this entire thing?"
2403960,2408440," So, we need to save this symbol as something."
2408440,2409000," Right."
2409000,2417840," So, maybe instead of, like, calling it T, I should call it maybe Alexa rule name."
2417840,2420300," Alexa token, I would even say."
2420300,2420820," Right."
2420820,2422300," So, this is something like that."
2422300,2423920," Uh-huh."
2423920,2425700," Mm-mm-mm-mm."
2426820,2427260," Nah."
2427260,2428740," I want to call it like this."
2428740,2435320," So, Alexa token rule name."
2435320,2436760," I'm going to just save it."
2436760,2437160," Right."
2437160,2438360," So, I'm going to just save it."
2438360,2441720," And the next thing we kind of expect is a bar."
2441720,2442800," Don't we?"
2442800,2443280," Right."
2443280,2445020," So, the next thing we expect is a bar."
2445020,2451480," So, we're going to be basically counting the amount of bars in the branch."
2451480,2452380," Right."
2452380,2456380," So, because of that, let's call it something like a probability."
2456380,2457300," Right."
2457300,2459840," And probability is going to be the counter for the amount of bars."
2459840,2464400," So, the first thing we're going to do, we're going to expect one kind."
2464400,2469640," Since we first kind of expect only a single kind, we can just use a variant, which is expect kind."
2470420,2470860," Right."
2470860,2472340," So, we'll provide this thing."
2472340,2479780," Then, we actually have to get the token like this."
2479780,2480360," Right."
2480360,2482320," So, we get the token and only then we expect."
2482320,2484260," Then, we get the token."
2484260,2486060," And only then we expect."
2486060,2488140," And we expect specifically a bar."
2488140,2488920," Right."
2489920,2493920," Funnily enough, so, there should be at least one bar always."
2493920,2496420," So, that means probability will be at least like one."
2496420,2497280," Right."
2497280,2498280," Something like this."
2498280,2501060," So, if it fails, it's just return one."
2501060,2508180," After that, after that, I suppose what we have to do is to do that in a loop."
2508840,2509060," Right."
2509060,2520960," While that T is a bar, right, while that T is a bar, we have to keep pulling the tokens."
2520960,2521960," Right."
2521960,2523120," Keep pulling the tokens."
2523120,2525660," So, we get the token."
2525660,2527940," We check that it's a bar."
2527940,2529420," Its probability is one."
2529420,2534300," And while it is a bar, we probably increase the probability."
2534300,2536060," Right."
2536300,2539520," So, which means that we probably can start with one because it's going to be at least one."
2539520,2542700," And we keep pulling the tokens."
2542700,2543240," Right."
2543240,2547480," We keep pulling the tokens until we encounter something else."
2547480,2554040," As soon as we encounter something else, let's actually say that we're going to be expecting a semicolon."
2554040,2562300," Actually, we're going to be expecting a punct, which is a semicolon."
2562300,2562880," Right."
2562880,2568700," This is not a correct grammar that I want, but I just want this entire process to stop, essentially."
2568700,2570100," I just want this process."
2570100,2570800," Maybe not."
2570800,2572340," It's actually not stop."
2572340,2574220," Let's just return zero in here."
2574220,2577400," And I'm going to do something like this."
2577400,2580340," I'm going to do L, diagonal, F."
2581340,2588800," So, we can use the rule name, rule name location in four."
2588800,2600020," And we're going to print rule with probability, with probability, let's say, like ZU."
2600240,2601640," This is what we're going to put in here."
2601640,2602980," So, here is the probability."
2602980,2606080," Do we need anything else?"
2606080,2608360," We probably also need to print the name of the rule."
2608360,2608960," Right."
2608960,2612160," And the name of the rule is going to be this thing."
2612160,2614540," Rule name."
2614540,2620920," Man, I need a macro that actually does that for me."
2620920,2628040," Can I have something like Alexa token FMT?"
2628040,2629260," Right."
2629260,2631860," And then Alexa token arg."
2631860,2634220," And it's just does that for me."
2634220,2639080," So, we don't have to think about like what formatting thing to put in there and what not."
2639080,2639920," Right."
2639920,2641920," So, I think the time has come for me to introduce that."
2641920,2649800," So, Alexa token FMT is going to be, I suppose, you know, this kind of thing."
2649800,2651160," Right."
2651160,2658100," And arg is going to be essentially T and minus T begin."
2658100,2659500," T begin."
2659500,2660960," Yes."
2660960,2661980," Something like this."
2661980,2664680," So, it will probably make it a little bit easier for me, hopefully."
2664680,2666740," Let's try to run it."
2666740,2670440," So, this is not really a bar."
2670440,2671380," Right."
2671380,2675460," So, we are expecting the punct, which is a punct bar."
2675460,2678260," So, there's no bar kind in Alexa itself."
2678260,2679780," This is something that we defined."
2679780,2681440," All right."
2681440,2687980," So, and obviously, while the, oh, this one is rather interesting."
2687980,2700840," While the kind is punct and punct index, punct index is punct bar, we keep increasing probabilities."
2700840,2702560," So, that's basically what we're doing here."
2702560,2705760," Expected punct, but got symbol E."
2705760,2706560," All right."
2706560,2707860," That's why, that's very interesting."
2707860,2712360," So, I suppose it didn't advance."
2712360,2715020," I don't really know why it expected punct."
2715020,2716160," Right."
2716160,2721940," Because it explicitly says that I'm going to be expecting either symbol or end."
2722400,2722800," Right."
2722800,2724680," So, we got this thing."
2724680,2726420," We expected this kind of thing."
2726420,2729180," All right."
2729180,2732100," So, that means I forgot to advance this thing."
2732100,2732360," Yeah."
2732360,2733760," So, I should have done it like that."
2733760,2734780," All right."
2734780,2737180," So, now, if I try to do this kind of thing."
2737180,2738960," Rule E with probability 1."
2738960,2740840," So, that's pretty cool."
2741340,2744960," If I add 3, rule E with probability 3."
2744960,2748700," I can remove all of the bars, but that's going to be incorrect syntax."
2748700,2751820," Expected punct, but got symbol E3."
2751820,2752260," Yeah."
2752260,2753740," Look at that."
2753740,2755440," Look at fucking that."
2755780,2756880," So, that's actually super cool."
2756880,2758240," Right."
2758240,2759660," This is precisely what I want."
2759660,2765420," So, I actually want to put that into the implementation of Alexa."
2765420,2765820," Right."
2765820,2767420," So, I think it's going to be useful."
2767420,2770060," So, I already can have similar things."
2770060,2773500," So, let me find the token, the token implementation."
2773500,2773940," Right."
2773940,2775100," So, it's going to be somewhere here."
2775100,2776000," Cool."
2776000,2781580," So, we can parse the name of the rule and the probability of the first branch."
2781580,2782240," Right."
2782240,2783240," So, that's what we can do."
2783240,2785640," The probability of the first branch."
2785780,2791060," So, after that, we need to be able to parse the expression."
2791060,2791620," Right."
2791620,2792820," So, that's going to be kind of interesting."
2792820,2798100," So, how are we going to be doing that?"
2798100,2801320," Maybe we need to extract."
2801320,2805380," We already have a grammar branch."
2805380,2806020," Right."
2806020,2808080," So, we already have a grammar branch."
2808080,2810560," Maybe we can use something like this."
2810560,2810720," Yeah."
2810720,2812080," So, it has a node."
2812080,2813600," Right."
2813600,2814280," And probability."
2814440,2816480," Right now, we're using probability as a float."
2816480,2820180," But in the future, I think the probability has to become a size."
2820180,2821700," You know what?"
2821700,2827080," Let me actually refactor a little bit and change the probability from float to size."
2827080,2828400," Right."
2828400,2828940," Super quick."
2828940,2830300," So, it's going to be size T."
2831100,2834680," So, let's actually go and see what we have to do in here."
2834680,2834960," Okay."
2834960,2837040," So, when I print the grammar."
2837040,2837640," So, yeah."
2837640,2838140," Okay."
2838140,2839400," There is a grammar printer."
2839400,2842960," Which probably don't even use that often."
2842960,2843160," Right."
2843160,2844820," So, we never even fucking use it."
2844820,2845880," I just realized that."
2845880,2846840," Huh."
2846840,2847960," That's kind of cool."
2849240,2854840," So, it was from old times when we didn't really have the grammar or anything."
2854840,2860040," So, I think we need to rewrite it to actually print it with the same grammar as we have in this language."
2860040,2860300," Right."
2860300,2862340," Because it would be kind of cool to..."
2862340,2866520," Like, you print it back and it's basically copy-pastable into a file."
2866520,2866820," Right."
2866820,2867960," So, it's a valid one."
2867960,2870340," So, because of that, I think..."
2870340,2871280," Right."
2871280,2873740," I'm going to actually remove this thing and put to do."
2873740,2874440," Right."
2874440,2876240," So, grammar print."
2876240,2883960," Use the same grammar as the one we parse."
2883960,2885380," Yeah."
2885380,2886560," I think it's a good idea."
2886560,2887080," Okay."
2887080,2888040," What else do we have in here?"
2888040,2890140," So, we haven't used grammar."
2890360,2893460," So, let's actually indicate that it is, in fact, unused."
2893460,2895360," Oh, right."
2895360,2897960," So, and what I was thinking..."
2897960,2900260," So, grammar branch."
2900260,2900980," Right."
2900980,2903520," So, I changed the probability and nothing really changed."
2903520,2906920," So, let me actually change literally the name of this entire thing."
2906920,2909840," So, to break all of the places where this thing is used."
2909840,2910440," Yeah."
2910440,2911820," So, this is what I wanted in here."
2911820,2912940," Okay."
2912940,2919880," So, when we are generating the ASTs with that grammar, we're using these kind of probabilities."
2920360,2926640," So, we're using a property of these probabilities that they add up always to one."
2926640,2927500," Right."
2927500,2932100," So, now, they are integers instead of floats."
2932100,2938460," So, what we need to do, we actually need to iterate through all of these branches and add up all of their sort of probabilities."
2938740,2945780," So, we can then divide each individual probability by its sum so we can get a value from 0 to 1."
2945780,2948020," So, this is what we can do in here, actually."
2948020,2949240," So, that's actually kind of cool."
2950900,2951460," All right."
2951460,2953240," So, let me see."
2953240,2954940," So, we're going to be iterating."
2954940,2960120," So, we probably need to do that before we try to generate anything."
2960120,2960360," Right."
2960360,2962400," So, we're going to do something like this."
2962400,2965460," Though, honestly..."
2965460,2969100," So, grammar branch."
2971680,2974420," So, this one is funny."
2974420,2977100," Can we..."
2977100,2978680," Can we just..."
2978680,2982720," Like, because it's an element for the dynamic array of branches."
2982720,2990340," So, and the probabilities of all of the branches should add up to 1."
2990340,2991260," Well, not anymore."
2991260,2992720," But besides the point."
2992720,2999440," So, maybe we can actually store the probability sum in here."
2999440,3001020," Right."
3001020,3002160," So, this is something we can do."
3002160,3003260," Like, a store probability sum."
3003260,3006460," And as we define this thing, we just add up those probabilities."
3006460,3007400," Right."
3007400,3009100," So, we actually add up those probabilities."
3009100,3012120," So, and we need to do that in the place where we define those branches."
3012120,3016080," So, I think I'm going to put the underscore in here to break all of the places where this thing is used."
3016080,3018960," So, I can go in there and actually compute the probability sum."
3018960,3021300," And some probability, it could be called weight."
3022100,3023720," That's not a bad idea, actually."
3023720,3025400," Let's call it weight."
3025400,3028680," And this is going to be weight sum."
3028680,3029440," Right."
3029440,3032560," So, because the probability is a value from 0 to 1."
3032560,3032900," Yeah."
3032900,3033880," So, that makes more sense."
3033880,3034560," Okay."
3034560,3036320," So, this is the place where we're breaking everything."
3036320,3038060," And this is another place where we're breaking everything."
3038060,3040740," So, let's go through the compilation errors and refactor everything."
3040740,3043040," Hoo, hoo, hoo, hoo, hoo, hoo, hoo."
3043040,3049580," Well, I mean, there's quite a few errors, like, because of the macros and everything."
3049800,3052880," So, the count, the error count is slightly inflated."
3052880,3053260," Right."
3053260,3056880," So, one single fix when you fix, like, 10 errors at once."
3056880,3058340," Again, because of the macros."
3058340,3059300," But anyway."
3059300,3061160," So, here's the grammar branches."
3061160,3061540," Okay."
3061540,3062320," That's understandable."
3062320,3063580," Right."
3063580,3064800," So, here's the grammar branches."
3064800,3068180," And in here, we're just generating things."
3068180,3068760," Right."
3068820,3071140," So, we're just generating things."
3071140,3072360," Just generating things."
3072360,3075600," So, we can take branches."
3075600,3078340," So, we do from 0 to 1."
3078340,3081960," And as we add probability, here is the fun part."
3082960,3093660," What we have to add in here is this thing divided by branches max weight sum."
3093660,3094400," Right."
3094400,3096760," So, here is the weight."
3096760,3098420," We convert it to float."
3098420,3100260," And we divide it by weight sum."
3100460,3103600," And we're going to end up with value from 0 to 1."
3103600,3105940," And we don't even have to change the code too much."
3105940,3107880," It's still going to be broken."
3107880,3110760," It would be better to actually do all of that stuff in integers."
3110760,3112340," But I could not be bothered."
3112340,3112900," Right."
3112900,3114400," So, I'm going to just keep it like that."
3114400,3116580," I wonder if it's going to break too much."
3116760,3120960," But we can actually then just run a GUI command and see if it still works."
3120960,3121200," Right."
3121200,3121800," So, yeah."
3121800,3124800," It's very easy to check if it's going to break or not."
3124800,3125580," All right."
3125580,3126800," What's the next problem?"
3126800,3129640," So, this is weight underscore."
3129640,3130060," Yeah."
3130060,3130600," That's true."
3130600,3131700," Okay."
3131700,3133120," So, grammar branches."
3133120,3135680," So, this is what we have in here."
3135680,3136960," Okay."
3136960,3146720," So, as we append, as we create branches, what we have to do in here is just put, I suppose,"
3146760,3149320," like, yeah, just, this is going to be 1."
3149320,3149760," Right."
3149760,3154540," So, this is going to be weight, weight 1."
3154540,3165760," After we're done doing the syntax, I think, I think what we have to do is branches, branches."
3165760,3168540," When we, we actually mems set the syntax, I think, to 0."
3168540,3170140," So, that's actually super convenient."
3170940,3179060," So, what I can do is just iterate through each individual branches, which is, like, count, plus, plus, I."
3179060,3191880," And just branches, weight, sum, plus its element, branches, items, I, weights."
3191880,3196660," I want to actually put it in a single line, but it turns out to be too big."
3196760,3198020," So, I have to split it into each."
3198020,3199760," So, this is basically what we're doing in here."
3199760,3204060," So, we first append different things with different weights and everything."
3204060,3206220," And then, we sum them up."
3206220,3209620," And then, later, in the generation process, it's going to be used like that."
3209620,3210100," Okay."
3210100,3210740," That's pretty cool."
3210740,3212300," Right."
3212300,3214660," So, here is another interesting thing."
3214660,3216900," And you know what's funny?"
3216900,3219520," We already kind of did something like that before already."
3219520,3222460," So, the code wants to be like that."
3222460,3222680," Okay."
3222680,3223920," So, this is actually kind of cool."
3223920,3229340," So, because of that, here, we can do weight underscore one."
3229340,3232540," And we can duplicate throughout all of these branches in here."
3232540,3234140," Right."
3234140,3244560," So, and we can essentially copy-paste this code right before appending it into the context and then setting it."
3244560,3251840," So, we're kind of repeating this part over and over again, which we may try to automate."
3252180,3253920," Which we may try to automate."
3253920,3254880," So, something."
3254880,3258940," So, let's create something like this."
3258940,3264100," Like, grammar, grammar, append branches."
3264100,3267480," So, here we accept the grammar that we're going to be modifying."
3267480,3270120," And we're going to be accepting grammar branches."
3270120,3275080," But since we also add the sum to the grammar branches, I think we need to accept it by the pointer."
3275820,3276120," Right."
3276120,3281860," So, and we can kind of factor out this entire stuff into that function."
3281860,3283960," So, we don't have to think about it ever."
3283960,3284680," Right."
3284680,3285880," So, we iterate in the branches."
3285880,3286900," Right."
3286900,3292480," So, maybe we can even pre-initialize this entire thing with zero just in case."
3292480,3294320," But maybe that..."
3294320,3294780," Yeah."
3294780,3296320," So, I think that's going to be fine."
3296320,3297780," So, this is another thing in here."
3297860,3300240," So, we supply the grammar."
3300240,3302700," And we probably need to do something like this in here."
3302700,3303880," Something like this in here."
3303880,3304940," And there we go."
3304940,3308600," So, that's very cool."
3308600,3309480," That's very cool."
3309480,3314220," So, now, every time I need to append the new branches, I can actually do it like this."
3315220,3316520," So, that simplifies everything."
3316520,3322640," And I'm modifying the code that is going to go away anyway because we're going to parse it from the file."
3322640,3327880," But I think some of this code in the future is going to be reused by the parsing process."
3327880,3328400," Right."
3328400,3329980," So, here we had coding the grammar."
3329980,3335780," But as we un-headcode it and parsing it from a file, some of the parts of this thing are still going to be useful."
3335780,3336400," I think."
3336400,3338040," I feel like it."
3338040,3339480," Yeah."
3339600,3341160," So, I think it's going to be still useful."
3341160,3342800," So, anyways."
3342800,3345620," So, all this entire thing we're going to remove."
3345620,3347160," None of that is needed."
3347160,3350420," And it actually makes it more readable in my opinion."
3350420,3355400," So, you just append different things with different probabilities."
3355400,3356940," With different weights even."
3356940,3357900," Not really probabilities."
3357900,3358720," Different weights."
3358720,3364100," And it just does automatic computation and everything."
3364100,3366320," So, I can remove all of that stuff."
3366320,3367880," So, this is a 3.8."
3368100,3370460," So, that means weights in here."
3370460,3371000," Right."
3371000,3372640," So, weights in here has to be 2."
3372640,3374860," And this has to be."
3374860,3378520," So, weight underscore 3."
3378520,3380340," Something like this."
3380340,3381380," Oh, right."
3381380,3382440," So, yeah."
3382440,3383440," That's actually kind of cool."
3383440,3384340," I really like that."
3384340,3385200," I really like that."
3385200,3385860," I really like that."
3385860,3387040," Anyways."
3387040,3387680," Anyways."
3387680,3388080," Anyways."
3388080,3389100," So, what else do we have in here?"
3389100,3392000," So, this is weight."
3392000,3393240," It's a single one."
3393240,3395200," So, it has to be."
3395200,3396540," Is it really a pointer?"
3396980,3398020," It's a weight underscore."
3398020,3399560," Right."
3399560,3400840," So, what else do we have in here?"
3400840,3401680," So, this is a grammar."
3401680,3404820," Grammar is already a pointer."
3404820,3406780," We don't even have to think about it."
3406780,3408380," Don't even think about it, brother."
3408380,3411040," Don't even fucking think about it."
3411040,3412200," So, let's rebuild."
3412200,3413640," And everything is working."
3413640,3414580," Everything is working."
3414580,3422520," We just managed to refactor, you know, this thing from being a float to being an integer using compiler-assisted refactoring."
3422980,3426320," And carefully, strategically breaking the code in relevant places."
3426320,3427380," Right."
3427380,3433960," So, what I did in here, I renamed this thing in different places to actually make the compiler complain about these places."
3433960,3436080," And then I refactored and fix all the errors."
3436080,3436880," Right."
3436880,3438900," So, without using any ID."
3439420,3442400," So, I don't know if it still works, but theoretically, it should work."
3442400,3444380," So, let's see, actually."
3444380,3445700," Let's see if it's going to work."
3445700,3448640," I hope I didn't forget about any of the places."
3448640,3449780," So, I'm going to do GUI run."
3449780,3451920," Seems to be working."
3451920,3452620," Right."
3452780,3455300," So, what's the depth that we..."
3455300,3455460," Okay."
3455460,3459180," So, that's why the expressions are so boring, because the depth is 30."
3459180,3461300," So, let's actually set depth to 40."
3461300,3462600," Right."
3462600,3465840," This actually has to be somewhere here."
3465840,3468060," So, here is the depth 40."
3468060,3468700," There we go."
3468700,3469960," That's much more interesting."
3469960,3470960," Depth 40."
3470960,3472740," We can generate more different things."
3472740,3474540," Let's actually generate more."
3474540,3476460," Yeah."
3476860,3487220," And one of the features that this specific application has, you can press R, and it will"
3487220,3492720," start rendering the FFmpeg video, which you can then post on social media and stuff like"
3492720,3492960," that."
3492960,3493180," Right."
3493180,3495860," So, I think it will generate like 25 seconds of the video."
3495860,3501240," I think it should make the time customizable, but in the background, you can see it is just"
3501240,3502220," like doing FFmpeg."
3502220,3502960," Right."
3502960,3505460," And there is also a bar in here that indicates how much."
3506860,3509820," So, yes, yes, yes."
3509820,3514260," So, the laptop is going, by the way, as it actually..."
3514260,3517080," So, I'm streaming, doing GPU shading."
3517080,3522380," And, by the way, the stream is probably dying, but since nobody is actually watching me, nobody"
3522380,3523620," is pressing F, right?"
3523620,3525680," So, was the stream dying?"
3525680,3532820," Because my OBS actually said that the encoder was overwhelmed, because I tried to do that."
3532820,3534900," So, but anyway, so here is the video."
3534900,3536460," Stream not dying."
3536540,3536720," Okay."
3536720,3537980," That's pretty cool."
3537980,3539560," Norbit rate was a little lower."
3539560,3539940," I see."
3539940,3541340," But here's the video, right?"
3541340,3542720," So, we generated video out of that."
3542720,3543960," And, yeah."
3543960,3545380," So, that's what the thing can do."
3545380,3548980," So, and this is what I usually post on social media, right?"
3548980,3551040," So, when I discover a font pattern, right?"
3551040,3552300," So, I can now post it somewhere."
3552300,3554500," I get a lot of likes and everything."
3555040,3560140," So, since everything is working, I suppose what we can do is just rename things back, right?"
3560140,3571320," So, let's actually do, can I specifically, how can I specifically only care about this thing?"
3571320,3572580," I don't know."
3572580,3573240," But, yeah."
3574080,3576260," So, I want to actually rename those things back."
3576260,3578180," This one is very easy to rename, right?"
3578260,3579660," So, I can just rename it like this."
3579660,3580620," And it's that."
3580620,3583280," That one, I'm not quite sure."
3583280,3584740," All right."
3584740,3585620," So, this one."
3585620,3586600," Eh, not really."
3586600,3594160," So, it's kind of localized in these places, which are very easy to, you know, go through."
3596040,3607880," So, we did the refactoring, so we're not using floats anymore."
3607880,3609400," We're using integers."
3609400,3611600," And this is exactly what we're going to be having here."
3611600,3615400," And because of that, by the way, since we came up with a better name for the probability,"
3615400,3617860," let's actually call this thing weight as we parse it, right?"
3617860,3619720," So, we're parsing the weight."
3619720,3621380," So, rule."
3621380,3625640," Actually, yeah, rule with probability with weight, I would even say."
3625640,3626740," So, here is the weight."
3626740,3628120," Okay."
3628120,3628920," That's pretty cool."
3628920,3635680," So, I'm not really sure how we're going to be parsing the rules."
3635680,3636740," Right."
3636740,3642620," So, because the default grammar, when we recursively refer to other rules, right?"
3642620,3644440," For example, not rule in here, as you can see."
3644440,3646180," So, we're using integers."
3646180,3652040," And we're referring to this rule as indices within the grammar branches, right?"
3652040,3653320," So, grammar branches is an array."
3653420,3658920," And we're referring to other sort of like, well, I mean, grammar is an array of grammar branches."
3658920,3662220," And we're referring to other grammar rules through its indices."
3662220,3666580," But within the file where we describe all of that, we don't really have indices."
3666580,3668200," We only have names."
3668620,3674960," And what name is associated with what index is going to be known only later as we finish parsing everything."
3674960,3684660," Which means that, I think, again, rule or rather node rule."
3684660,3687460," Do we have an, it's called nk rule."
3687460,3688380," Yeah, this one."
3688380,3689620," Right."
3689620,3697000," Instead of being an integer, it has to be a string, which is the name."
3697560,3698160," Right."
3698160,3702680," Or maybe even a token, because we also want to know the place where it was defined."
3703780,3705660," So, in a node, we have node as."
3705660,3707000," And as you can see, here is the rule."
3707000,3716740," And I feel like one of the things we had, one of the refactorings we have to do is we need to rename, like, refactor int to token."
3716740,3717840," Right."
3717840,3721200," Because now it is kind of defined within the file."
3721200,3722020," Right."
3722020,3723220," This is a pretty big refactoring."
3723300,3725240," But I think this is something that we have to do."
3725240,3726400," Right."
3726400,3728180," So, but I'm already saying it's, like, for one hour."
3728180,3730640," But, and I think the time has come to make a small break."
3730640,3731360," Look at this thing."
3731360,3735760," I think the time has come to make a small break and make a cup of tea."
3735760,3736740," So, yeah."
3736740,3738080," All right."
3738080,3745640," So, we need to refactor our rule node to make it into a string."
3745640,3746080," Right."
3746080,3750080," So, because now we're not referring to the rules as indices."
3750080,3752520," We're referring to them by IDs."
3753180,3758840," And we get the IDs from the grammar BNF, from the file that we're trying to parse."
3758840,3759080," Right."
3759080,3761980," So, we now have to identify those things like this."
3761980,3765080," So, let's go ahead and try to do that."
3765080,3768420," So, maybe I'm going to first commit whatever we have in here."
3768420,3774780," But I kind of want to only commit things related to refactoring probability into weights."
3774780,3777340," So, I want to omit the lexing and stuff like that."
3777340,3783580," So, I'm going to actually sort of like a commit specific hunks, if you know what I mean."
3783580,3785220," So, maybe I'm going to do that one."
3785220,3787000," So, this is another one."
3787000,3787960," Uh-huh."
3787960,3789240," This is another one."
3790000,3793100," So, and hunks are those chunks of divs."
3793100,3796540," What I noticed as of late is that not everyone knows what is a hunk."
3796540,3797240," Right."
3797240,3801160," If you take a look at the div format, it consists of these sort of like chunks."
3801160,3802620," And those chunks are called hunks."
3802620,3805420," This is sort of like an official name for these things."
3805940,3809720," So, I'm going to be actually staging specific hunks in here."
3809720,3811380," And some of the hunks, I'm not going to be staging."
3811380,3813000," Everything related to lexing."
3813000,3814980," So, this is the parsing."
3814980,3815440," And yeah."
3815440,3817380," So, this is not ready yet."
3817380,3818900," Okay."
3818900,3822520," So, probability weight."
3822520,3823540," All right."
3823540,3824800," So, that's what we did in here."
3824800,3825480," I want to push that."
3825480,3829040," I just like don't want to lose any of that work."
3829040,3829280," Right."
3829280,3831220," So, I'm committing what already works."
3831220,3832300," Okay."
3832440,3836840," So, what we're going to try to do, we're going to try to change it from integer to const char"
3836840,3839960," and see if we can refactor it."
3839960,3844600," So, how many errors we're going to have if we try to just build it as it is?"
3844600,3846300," Not that many."
3846300,3846640," All right."
3846640,3848920," So, but I mean, it's a not linear process."
3848920,3850200," It's a non-linear process."
3850200,3851520," Okay."
3851520,3856400," So, when you do the rule, we have to put const char in here."
3856400,3856780," Right."
3856780,3857100," Okay."
3857100,3858820," So, that's very easy."
3858820,3860540," What's next?"
3860540,3861300," Okay."
3861300,3864080," So, when you do the rule, we're trying to print it."
3864080,3865460," So, it's actually S."
3865460,3866380," Okay."
3866380,3867920," So, so far, so good."
3867920,3878120," And when I generate the rule, as you can see, I pass the rule, but, oof, oof, oof, oof, oof."
3878120,3879460," So, what you don't like."
3879460,3881260," So, where is the function gen rule?"
3881260,3882620," Aha."
3882800,3886660," So, you have to use const char star."
3886660,3888160," There we go."
3888160,3892380," Do I check that it fails or not?"
3892380,3895720," I think, I think here I don't even have to check."
3895720,3896120," Right."
3896120,3898960," Because if it fails, it will just return null."
3898960,3899220," Right."
3899220,3900240," So, that's totally fine."
3900240,3902080," So, this becomes const char."
3902960,3907540," Two arguments make integer from pointer."
3907540,3908120," Didn't I?"
3908120,3909520," Wait a freaking second."
3909520,3910000," Didn't I?"
3910000,3910820," Ah."
3910820,3913300," Because I forward declared the same function."
3913300,3913660," Okay."
3913780,3920120," So, I have two of these instances because it's forward declared because it's a mutual recursion."
3920120,3921240," I forgot about that."
3921240,3921920," Right."
3921920,3922860," So, one function."
3922860,3925180," Function f calls to function g."
3925180,3926960," Function g calls to function f."
3926960,3930700," And to implement something like that in C, you have to forward declare."
3930700,3935400," Otherwise, the C compiler is too dumb to actually realize how to properly do that."
3935400,3938120," So, you have to make the change in two places."
3938120,3938880," Old language."
3938880,3939500," Am I right?"
3939500,3940200," Old language."
3940200,3942440," You can have a similar problem in OCaml."
3943780,3944220," Right."
3944220,3946440," For the same reason, by the way."
3946440,3948500," Because a camel is an insanely old language."
3948500,3948940," Right."
3948940,3952360," All of these old languages, they have these weird quirks."
3952360,3954100," All right."
3954100,3955260," So, okay."
3955260,3956480," This one is rather interesting."
3956480,3956940," Right."
3956940,3962100," So, as you can see, we are..."
3962100,3962640," Yeah."
3962640,3966600," So, what we have to do..."
3966600,3973600," We have to now turn rule string into a specific branch in here."
3973780,3974600," Right."
3974600,3976920," So, rule used to be an index."
3976920,3978420," Right."
3978420,3980120," Rule used to be an index."
3980120,3982640," But now, it's a name."
3982640,3985440," And we need to find the branch by name."
3985440,3990240," But we don't really have names associated with grammar branches."
3990240,3993660," We don't really have."
3993660,3995880," But maybe we should."
3995880,3997100," Right."
3997360,3998180," Maybe we should."
3998180,4002180," Let's literally introduce const char name."
4002180,4006060," But we need to assign that name as we generate the grammar."
4006060,4011380," So, we have to repeat this idea of breaking all of the places where we have grammar branches."
4011380,4012160," Right."
4012160,4015040," And going there and assigning names in there."
4015040,4016400," That's what we're going to be doing."
4016400,4016680," Right."
4016760,4020140," So, as we do in compiler-assisted refactoring, we're breaking even more things."
4020140,4024740," So, we branch out of the compiler-assisted refactoring."
4024740,4025220," All right."
4025220,4025640," Let's go."
4031640,4033180," So, I want to add it in 10."
4033180,4034620," Nice one."
4034620,4036860," Fuck my life."
4036860,4040640," Again."
4040640,4042520," So, it's kind of a meme."
4042520,4045720," The error count is a little bit inflated."
4045720,4046260," All right."
4046260,4049020," Because we have errors within the macros."
4049020,4051560," And Clank in GCST has a tendency."
4051560,4058640," If an error happens within a macro, it kind of shows you a stack trace of macro expansion."
4058640,4060380," That's why it's kind of big in here."
4060380,4061000," Right."
4061060,4061580," So, you see."
4061580,4067360," In a definition of macro, in expansion of macro, in expansion of macro, in expansion of macro."
4067360,4073540," And usually, you can just fix a whole thing like that with a single change."
4073540,4073780," Right."
4073780,4081040," So, because basically, on each error within the macro, it shows the entire sort of like a stack, expansion stack, if that makes any sense."
4081040,4081700," Right."
4081700,4084780," So, because of that, the amount of errors is a little bit inflated."
4084780,4086200," So, don't get scared of that."
4086200,4088100," It's still better than C++."
4088100,4090220," Anyway."
4090480,4093000," So, right."
4093000,4094860," So, let's actually go and try to fix that."
4094860,4097000," So, here it has to be this thing."
4097000,4098260," Right."
4098260,4099320," So, what else do we have in here?"
4099320,4099820," Yeah."
4100300,4121740," So, what we need to do is, we need to have some sort of function, which is, so, we need to have a function, branches, branches by name."
4121740,4132180," So, here we're going to accept the grammar."
4132180,4132680," So, this is going to be just a rule."
4132680,4133060," Right."
4133060,4134480," So, that's just a name."
4134480,4141920," And what we're going to get, grammar branches, branches point to that specific thing."
4141920,4146080," Maybe we have to get it by the point, just in case."
4146080,4146500," Right."
4148160,4152280," So, and essentially what we're going to do in here, we're going to just iterate through all the branches."
4152280,4152600," Right."
4152640,4156400," So, it's going to be zero, grammar, count, plus, plus, I."
4157020,4167980," And if grammar items, I, name is equal to rule, we are instantly returning that specific thing."
4167980,4176860," So, as you can see, instead of doing a const lookup of one lookup, now we're kind of doing a linear one, but we don't have that many elements anyway."
4176860,4178380," So, maybe it's going to be fine."
4178380,4181300," And it's not actually, this is how we want to do that."
4181300,4182920," So, you want to do a strcmp."
4183260,4187340," So, you don't want to be comparing strings as pointers, that's for sure."
4187340,4188960," Right."
4188960,4192560," So, let me now return null in case if we didn't find anything."
4192560,4194320," Right."
4194320,4199120," So, and in here, what we're going to do is just call this function."
4199120,4203460," So, branches by name."
4203460,4205180," Bran cheese."
4205180,4207260," Bran cheese."
4207260,4209060," Bran cheese."
4212900,4213380," Okay."
4213380,4215460," So, and that's about it."
4215460,4215640," Right."
4215640,4217600," So, we're going to do a little bit of assertion here."
4217600,4220240," So, yeah, that's it."
4220240,4223100," I don't think we need anything else specifically in here."
4223100,4226000," So, this has to be underscore."
4226000,4228600," What else do we have?"
4228600,4230100," Grammar count."
4230100,4231360," Might as well."
4231360,4236140," Queer replace grammar dot with grammar error."
4236140,4236820," Arrow."
4236820,4238760," Boom."
4238760,4240080," Anything else?"
4240080,4241340," What else do we have in here?"
4241340,4242620," So, this is underscore."
4242620,4245140," Yeah."
4245140,4248320," Maybe doing underscore thing was not a particular great idea."
4248320,4248560," Okay."
4248560,4249600," So, this one is interesting."
4249600,4255400," So, as you can see, I was creating these variables to refer to specific names and shots."
4257400,4261060," So, now what I probably have to do is remove them."
4261060,4263620," So, that will break all of the places where I refer to them."
4263620,4271600," So, what's funny is that I think what we have to do with this function that we introduced recently,"
4271600,4274600," we should probably assign a name to it."
4274800,4286300," So, we are competing weights and we're also going to be doing name, name."
4287880,4289260," So, let's agree with it."
4289260,4292840," So, branches and declared."
4292840,4293500," Oh, yeah."
4293500,4296140," Bran cheese."
4296140,4297960," Bran cheese."
4297960,4299660," This is what I'm talking about."
4299660,4300100," Look at that."
4300100,4302740," So, now, node rule C."
4302740,4310800," Instead of this thing being a variable or integer, literally just a string literal."
4311360,4313920," So, this is the kind of refactoring we're doing."
4313920,4315020," Burnt cheese."
4315020,4316460," No, bran cheese."
4316460,4319200," So, what is bran, by the way?"
4319200,4321420," Bran cheese."
4321420,4322900," I don't remember."
4322900,4323500," What does it mean?"
4323500,4327160," I remember there was a word in the dictionary."
4327160,4328720," What is it?"
4328720,4329500," Not brain."
4329500,4330280," Oh, bran."
4330280,4330620," Okay."
4330620,4334440," So, it's sort of like an outer layer of a grain."
4334440,4335140," Right."
4335140,4336140," So, remember."
4336140,4338580," So, it's pieces of grain of husk."
4338900,4343100," Because I kind of vaguely remember that word in English, but I forgot what it means."
4343100,4343380," Yeah."
4343380,4344200," So, it's a bran."
4344200,4347640," It contains a lot of nutrients, by the way."
4347640,4352480," It's good for you."
4352480,4355540," Bran cheese."
4355540,4358300," Does anybody make cheese with bran?"
4358300,4362620," Like a wheat bran or maybe like a rice bran or something."
4362620,4364360," So, that's like a cool idea, honestly."
4365120,4369900," So, you just basically, you know, enrich it with more nutrients from grains and stuff like that."
4369900,4374160," You already have nutrients in the cheese and also from grains."
4374160,4376020," Sounds cool."
4376020,4378920," And this is going to be literally bran cheese."
4378920,4381820," Anyways."
4381820,4384160," Bran cheese."
4384160,4385440," So, here is that."
4385440,4386920," And what was that, by the way?"
4387020,4388720," So, this is triple C."
4388720,4390120," This is a triple C."
4390120,4392820," And I think triple C was E."
4392820,4393360," Right."
4393360,4395500," So, this is what we call E."
4395500,4398200," Anything else?"
4398200,4398960," Anything else?"
4398960,4399240," Okay."
4399240,4403420," So, this one is X, Y, T and random."
4403420,4404460," Yeah."
4404460,4405660," So, this one is A."
4405660,4406360," Right."
4406360,4407260," So, that's what it is."
4407260,4407880," It's A."
4407880,4410720," Like a Beetlejuice, maybe."
4412620,4413020," Right."
4413020,4417040," And the last one is it's C."
4417040,4418400," All right."
4418400,4419920," So, that's cool."
4419920,4421080," Okay."
4421080,4423360," So, now we're identifying different rules with names."
4423360,4427440," And this is very important for how we parse the file."
4427440,4427820," Right."
4427820,4429320," Okay."
4429320,4430480," So, what else do we have in here?"
4430480,4432100," So, okay."
4432100,4436800," Might as well, maybe, just do something like this."
4436800,4439360," I'm going to select this entire thing."
4439360,4441840," I'm going to query replace with the regular expression."
4441840,4447520," If I have node rule and I just find any sort of character."
4447520,4449360," I think they all consist of a single character."
4449360,4451180," I'm going to capture that character."
4451180,4454680," And I'm going to literally replace it with node rule."
4454680,4457540," But that character with a quote."
4457540,4460160," Boom, boom, boom, boom."
4460160,4461260," Okay."
4461260,4461880," So, that's cool."
4461880,4463840," Can your Vim do that?"
4463840,4464840," I don't fucking think so."
4464840,4465520," Look at that shit."
4466300,4470040," Anyways, so, and then we return E because that's, yeah."
4470040,4474040," So, default grammar also returns an entry."
4474040,4474700," Right."
4474700,4478560," So, that means this entire thing should now return const char star."
4478560,4482020," And what we're going to be returning, we're going to be returning E."
4482020,4488320," A random tiny website sells bran-flavored picarina baloness."
4488320,4491420," Did I bag no less?"
4491420,4493960," I think I pronounced it first at the time correct."
4494080,4494220," Okay."
4494220,4497240," So, people actually add bran to cheese."
4497240,4500960," So, bran cheese actually exists."
4500960,4502480," Holy shit."
4502480,4503840," Bro."
4503840,4504900," Bro."
4504900,4505520," Bro."
4505520,4505960," Bro."
4506340,4509140," Ah, 69 is actually capitalized."
4509140,4512040," Baloness."
4512040,4512400," Okay."
4512400,4512760," Thank you."
4512760,4514840," Thank you so much for serenifying it."
4514840,4518380," I'm not educated enough to pronounce it properly."
4518380,4519760," So, yeah."
4519760,4523140," So, that means, bruv, we can check it."
4523140,4524040," We can change it."
4524040,4527440," We can replace E with E."
4528640,4529120," Boom."
4529120,4531080," And in the same..."
4531080,4531280," Okay."
4531280,4533100," So, we have to return the pointer."
4533100,4534200," So, that means it has to be..."
4534200,4535600," Nah, it's not going to work, unfortunately."
4535600,4536500," Sorry."
4536500,4538800," We missed a huge opportunity."
4538800,4540340," But, I mean, we can't do that."
4540340,4541760," We just can't do that."
4541760,4543900," 69 is I?"
4543900,4546100," I don't believe you."
4551100,4551500," 69."
4551500,4552560," It's capitalized."
4552560,4562200," Oh, 069."
4562200,4572780," But, it doesn't matter because we have to take a pointer to it because it's a string literal."
4572780,4573880," So, it's not going to..."
4573880,4575140," You can't do that."
4575140,4577280," Even if it's true, you can't do that."
4577280,4578060," It has to be pointer."
4578560,4581040," So, it has to be located somewhere in the membrane."
4581040,4582940," Right."
4582940,4585080," Return."
4585080,4593240," I don't think this is how C works."
4593240,4599500," L value required as unary."
4599500,4600080," Yeah."
4600080,4602180," This is..."
4602180,4602440," Okay."
4602440,4604980," Anyways."
4604980,4606280," So, default grammar."
4606280,4607380," So, this is the entry."
4607560,4611800," So, it also has to be, you know, the string literal."
4611800,4616380," So, we do that in two places, as you can see."
4616380,4616920," Apparently."
4616920,4618540," Apparently, we do that in two places."
4618540,4620000," Okay."
4620000,4621940," This one is chweight."
4621940,4624000," Yeah."
4624000,4625080," So, this is chweight."
4625080,4627840," Look at that."
4627840,4629120," We refactored everything."
4629120,4631060," I don't know if it's going to work or not."
4631060,4632780," But, yeah."
4632980,4634800," So, it wasn't that hard, honestly."
4634800,4639380," So, the only thing that we have to do, we have to introduce this linear lookup function."
4639380,4642060," And the entire logic is basically the same."
4642060,4642660," Right."
4642660,4645680," So, right."
4645680,4647560," Let's actually go ahead and just run GUI."
4647560,4649280," And it still works."
4649280,4652860," So, it still generates, like, you know, believable things."
4652860,4654220," They still look the same."
4654220,4655500," So, depth is 40."
4655500,4658540," It's probably a little bit slower."
4658540,4661440," But, the grammar is not that big."
4661440,4662880," So, it's just, like, it's fine."
4662880,4665260," It's not that much slower, I think."
4668080,4668760," Look at that."
4668760,4669520," Look at that, motherfucker."
4669520,4672720," Oh, by the way, you can also pause it on a space."
4672720,4675200," You know what would be cooler?"
4675200,4680080," Once we implement the grammar, loading grammar from the file, hot reloading the grammar."
4680080,4684260," So, you can basically modify the grammar, hot reload it, regenerate it, and stuff like that."
4684260,4685760," So, that would be actually kind of cool, I think."
4685760,4690140," Yeah."
4690140,4691060," But, anyway."
4691060,4693420," So, let's actually do a committee-committee."
4693420,4694820," Rate."
4694820,4696720," So, I think it's kind of important."
4696720,4698960," So, we changed the rule from integer."
4698960,4701200," So, this was the entire refactoring, actually."
4701200,4701900," Right."
4701900,4703520," So, from integer to const char."
4703520,4704200," Right."
4704200,4706820," And, it prompted these, all of these changes now."
4706820,4709700," It's kind of cool."
4709700,4711800," Compiler set to refactoring is actually very powerful."
4711800,4714840," Maybe one day I should make a video about it."
4714840,4717840," Just demonstrating how to do that."
4717840,4719960," Oh, by the way, I forgot this thing."
4719960,4724600," So, I need to quickly replace this thing back to what it was."
4724600,4725760," Right."
4726300,4726900," All right."
4726900,4727560," Seems to be working."
4727560,4729260," Mm-hmm."
4729260,4731760," All right."
4731760,4735740," So, now we also introduced the name in here."
4735740,4736100," Right."
4736100,4737700," So, this is just the rule."
4737700,4739920," Branches by name."
4739920,4741960," Uh-huh."
4741960,4744240," So, the default grammar."
4744240,4745540," It's that stuff."
4745540,4747320," And here comes the lexing."
4747320,4748540," Here comes the lexing."
4749100,4752580," Uh, but then comes the refactoring."
4752580,4753540," Uh-huh."
4753540,4754480," Another lexing."
4754480,4756160," All right."
4756160,4766580," So, identify rule by name instead of index."
4766580,4771720," By string name instead of integer index."
4771720,4772800," All right."
4772800,4774820," And I'm going to push that right into the repo."
4774820,4776280," Pushy, pushy."
4776280,4777140," Committee, committee."
4777140,4780700," Pushy, pushy."
4780700,4781340," Committee, committee."
4781340,4783680," Um, all right."
4783740,4787440," So, that will make it easier for us to now parse things."
4787440,4788040," Hopefully."
4788040,4788920," We'll see."
4788920,4790500," We'll see."
4790500,4790880," We'll see."
4790880,4791340," We'll see."
4791340,4795540," Uh, so, here is the thing."
4796340,4804260," Uh, so, as I go, maybe I need to have a function that does the parsing."
4804260,4807140," Uh, so, how can we do that?"
4807140,4809640," Parse, um, rule."
4809640,4814780," So, we're going to be accepting the token as the name of the rule."
4814780,4815340," Right."
4815340,4816980," So, that's going to be the name of the rule."
4816980,4821000," Um, and honestly, the rule is basically grammar branches."
4821000,4826040," So, I would expect, uh, to get something like this."
4826340,4830440," And this is something that we're going to be appending into the grammar as we parse things."
4830440,4832920," Um, right."
4832920,4834940," So, grammar branches."
4834940,4840220," Um, so, this is going to be the name that we already got in the previous step."
4840220,4849360," Uh, we also, um, no, the probability, the weights are going to be part of the, um, part of the lower level things."
4849360,4851060," So, here we're going to take the lexa."
4851060,4853300," I'm going to add music to the visual."
4853300,4854060," Nah, not really."
4854200,4856700," So, it's too much outside of the scope of what I'm doing."
4856700,4862320," Um, it's an interesting idea, but too much outside."
4862320,4866640," Um, so, here is the, uh, so, we save it as a name."
4866640,4870700," And so, in here, we start parsing the things."
4870700,4872740," Okay."
4872740,4875700," So, here is what we're going to be doing in here."
4875700,4878540," And let's go back and call that function."
4879340,4882420," Uh, so, if we encounter a symbol, right."
4882420,4890420," If we encounter a symbol, uh, we have to do this thing."
4891080,4897180," So, branches, and I suppose we're going to be indicating error with null."
4897180,4898700," Is that a good idea?"
4898700,4902640," Is that a generally good idea to indicate it with null?"
4902640,4905980," I didn't think so, because it doesn't allow me to do something cool."
4905980,4913480," Like, if not just return one and let this entire thing do all of the diagnostics and stuff."
4913920,4918220," So, because of that, I think this should return boolean, right."
4918220,4923680," It should return boolean and accept grammar branches, like so."
4923680,4928600," And, uh, here we're going to be allocating the branches on the stack."
4928600,4932600," So, branches, uh, grammar branches."
4932600,4937780," And it's going to be branches, and it's going to be branches zero, like this."
4937780,4938640," Okay."
4938640,4942960," So, we just do the branches."
4942960,4948860," And if it's fine, we got new branches that we want to append into the grammar."
4948860,4953120," So, that means we need to create grammar somewhere here, like so."
4953120,4954140," Here is the grammar."
4955060,4963000," Then, uh, what we do, append, uh, so, append branches."
4963000,4969360," So, what the function was, uh, append grammar, append branches."
4969360,4971380," Yeah, grammar, append branches."
4971380,4973920," So, this thing, that's what we need to do in here, actually."
4973920,4977360," Uh, actually, actually, actually, actually."
4977360,4978940," We're going to set the name."
4978940,4980660," We're going to set the weight sum."
4981040,4986040," But, this is something that can be actually done by the parsing process."
4986040,4990740," So, that means that we probably want to do only this for now."
4990740,4993580," Yeah, I feel like this is the only thing we want to do in here."
4993580,4996920," So, here's the grammar, and we just append branches as they are."
4996920,4997680," Okay."
4997680,4999260," So, you encounter the symbol."
4999260,5002700," You, yeah, so, you just parse the branches."
5002700,5005800," You append it to the grammar, and then you go on another round."
5005800,5009340," And, this is how you parse branches in a loop."
5010220,5011820," So, that's what we're doing in here."
5011820,5012940," That's what we're doing in here."
5012940,5015760," Now, we can focus on how you parse the branch."
5015760,5018580," Uh, branches, right?"
5018580,5019200," Several of them."
5019200,5020300," How you parse them."
5020300,5029400," So, in here, obviously, we want to assign, uh, branches, um, name, specifically."
5029400,5033460," So, the name is actually within this token, right?"
5033460,5035080," So, it is a token."
5035080,5038300," Which makes it a little bit annoying."
5039400,5054640," Um, it would be kind of cool if I could say grammar branches, and instead of name, instead of being this thing, we could say, um, token."
5055000,5061720," So, it's going to contain the sequence of characters that you need to compare with an actual ID and stuff."
5061720,5065460," And, uh, it also contains the location, right?"
5065520,5072900," So, that's one of the cool things in here is that if some sort of error has happened, you have the location of the definition of that rule."
5072900,5074260," Right?"
5075840,5081540," Uh, to be fair, it's a little bit annoying that this is called branches, but at the same time, I keep referring to it as a rule."
5081540,5085580," Um, so, I, I feel like I want to rename this whole thing."
5085660,5090180," So, I think it has to be grammar rule rather than branches, and rule contains of branches."
5090180,5095580," So, we have grammar, which contains, which is a sequence of rules, and each rule is a sequence of branches."
5095580,5097820," That makes more sense, right?"
5097820,5100440," So, because right now, we have two names for the same thing."
5100440,5103220," Branches, plural, and rule."
5103220,5104120," Uh, right."
5104160,5105300," So, let's actually stick to rule."
5105300,5107800," Uh, so, I'm going to rename these two just to rule."
5107800,5108640," Grammar rule."
5108640,5109980," Uh-huh."
5109980,5119640," Uh, yeah, so, okay, so, there will be some, yeah, so, I also should not forget to rename these things."
5119640,5121060," Okay, so, this is going to be annoying."
5121060,5123100," Okay, so, let's not do that yet."
5123100,5127560," Uh, not, don't want to overwhelm myself with refactoring, right?"
5127560,5129440," Don't want to overwhelm myself with refactoring."
5129440,5132180," So, we're going to start with this thing."
5132180,5133440," Is that a good idea?"
5134560,5135880," Is that a good idea?"
5135880,5137180," I'm not even sure."
5137180,5141960," Because that means we also have to support the default thing in here."
5141960,5147020," Right, so, that means the name has to be also a special token."
5147020,5148500," Maybe that's fine."
5148500,5151120," So, that means that name has to be something like this."
5151120,5153240," Alexa token."
5153240,5154820," Right."
5154820,5158920," And, since this thing is headcoded within the source code,"
5159240,5164180," the location of that token is going to be location within the source code."
5164180,5169500," So, we'll have to use the macros like file, line, you know, underscore, underscore, file, underscore, line, and stuff like that."
5169500,5172920," So, this is something that we'll have to do at some point, right?"
5173000,5175160," So, this is the refactoring that I may want to start."
5175160,5177200," Right, so, let's go."
5177200,5180400," So, let's see how it's going to, yeah."
5180400,5182300," So, this is the main problem."
5182300,5189720," Because, within the rule, this is a token, but this is a C string."
5189720,5193780," So, we have a token and C string."
5193780,5197500," And it's a bit annoying like that."
5197500,5203060," Which prompts a question."
5206340,5210580," Can we, maybe, refactor it again?"
5210580,5222400," But, say that a rule, let's say, nk nod rule."
5222400,5223720," What's it called nod rule?"
5223720,5226580," Const char rule."
5226580,5231860," But, say that this thing is not const char, but more like a token."
5234740,5236100," Is that a cool idea?"
5236100,5238660," Is that a divine intellect?"
5238660,5240420," Yeah."
5240420,5245780," So, I don't give it too much."
5245780,5247760," It's very interesting."
5247760,5250220," So, and then we'll have to be able to compare."
5250220,5255240," So, maybe we'll have to define a special function for the Alexa thing."
5255240,5256800," I think we need this kind of function."
5256800,5263220," Essentially, Alexa token text equals."
5263940,5264900," Maybe just equal."
5264900,5265580," So, a."
5265580,5268600," This is going to be a and b."
5268600,5272380," And it's going to return a boolean and tell you whether it's equal or not."
5272380,5275120," But, I mean, so we have to define it somewhere down there."
5275120,5277740," So, how are we going to be defining it?"
5277740,5281160," First of all, we need to compare their sizes."
5281160,5282860," So, let's actually compute their sizes."
5283680,5289380," So, a and minus a begin and we repeat that for all of these things."
5289380,5290300," So, it's going to be b."
5290300,5295240," If na not equal and b, that is instantly false."
5295240,5296400," They are not equal."
5296400,5298740," Otherwise, what we're going to be returning?"
5298740,5301220," We're going to be returning memcmp."
5301220,5301980," Right."
5301980,5303000," Memcmp."
5303000,5304540," Why c?"
5304540,5306240," I'm an idiot, honestly."
5306240,5308820," Memcmp."
5308820,5310500," Right."
5310500,5312400," Randomly generating music."
5312400,5313360," So, doing pogin."
5313360,5314500," Maybe."
5314720,5314960," Yeah."
5314960,5320420," So, we can use the same approach for generating music as we use for generating images."
5320420,5322840," That's a thing that you can do."
5322840,5324980," I'll think about that, actually."
5324980,5326680," So, a begin."
5326680,5329680," b begin."
5329680,5331320," And this is n a."
5331320,5332680," Yes."
5332680,5339100," So, now, if we are using Alexa token to identify these things."
5339100,5341920," So, we'll need to have this thing to compare stuff."
5341920,5343340," That's for sure."
5344360,5347800," Anyways, so, now, let me see."
5347800,5353820," So, rule now has to be, yeah, rule."
5353820,5355120," It has to be a token."
5355120,5358320," Alexa CMP."
5358320,5360040," I already came up with a name for it."
5360040,5360380," I'm sorry."
5360380,5363240," You're too late."
5363240,5364300," You're too late."
5364300,5368040," Alexa token FMT."
5368040,5371960," Alexa token org."
5371960,5373540," And this is the rule."
5373660,5375100," So, that's what we're going to be doing in here."
5375100,5377920," All right."
5377920,5381280," So, it doesn't like something in here."
5381280,5382560," Field precision."
5382560,5384580," Ah."
5387760,5391260," Long end expect."
5391260,5391680," Really?"
5391680,5392500," Are you for real?"
5392500,5395920," So, you don't like that I didn't."
5395920,5397280," Yeah."
5397280,5401800," Well, I mean, it would be even better to maybe even do something like this."
5401800,5407980," And also, just explicitly do something like that."
5407980,5408900," Are you going to be fine?"
5409400,5409840," All right."
5409840,5410020," All right."
5410020,5412000," So, gen rule."
5412000,5417240," I'm a little bit afraid that maybe that's not a good way to go."
5417240,5420620," So, using token as an ID."
5420620,5424020," But it actually kind of solves a lot of problem."
5424020,5425920," So, now, this is a name."
5425920,5431720," And what I want to do is, yeah, first of all, this thing has to be token."
5431720,5444920," We don't even have to do equal zero."
5444920,5447940," So, if it is, we just return that."
5447940,5449540," All right."
5449540,5451860," So, conflicting types."
5451860,5452640," That's understandable."
5452840,5454200," Don't worry about that compiler."
5454200,5456740," That's totally understandable."
5456740,5457880," What else do we have in here?"
5457880,5461280," And this is the main problem."
5461280,5471440," We probably need to come up with some sort of an epic macro."
5471440,5481620," So, we want to have a macro that, given a sister, cString, turns it into the token of the library."
5482040,5485960," And the token of the library, like, you need to fill up a bunch of fields."
5485960,5488920," And there's quite a few of them, but it's not that much."
5488920,5490700," Right."
5490700,5495000," So, obviously, it's going to be a symbol."
5495000,5495540," Okay."
5495540,5501260," So, let's actually say inline symbol."
5501260,5502440," Right."
5502440,5506440," So, this is going to be name, but as a cString."
5506440,5509940," So, let's see."
5511940,5514300," So, this is going to be, first of all, the token."
5514300,5514840," Right."
5514840,5515860," So, this is the token."
5515860,5519300," And we're closing it like that."
5519300,5523060," So, one, two, three, four."
5523060,5526240," Kind is going to be, obviously, the symbol."
5526240,5526640," Right."
5526640,5527460," So, that's the symbol."
5527460,5531540," Then, location is very interesting, by the way."
5531540,5533280," Location is insanely interesting."
5533580,5533720," Okay."
5533720,5537520," So, I'm going to put the backslash just later when I'm done with this entire thing."
5537520,5539500," I think that makes sense."
5539500,5540700," So, location."
5540700,5544600," Location."
5544600,5548660," File name."
5548660,5550380," File path."
5550380,5551960," File."
5551960,5554020," Row."
5554020,5555780," Line."
5556320,5557020," Here's the thing."
5557020,5559740," Is there any way in a C preprocessor to get the column?"
5559740,5561100," Or some sort of offset?"
5561100,5562940," Does anybody remember how to do that?"
5562940,5566680," Because, for now, I'm going to put zero in here."
5566680,5569420," But, I think the standard C doesn't really have anything."
5569420,5570060," Yeah."
5570060,5570300," Yeah."
5570300,5571200," So, there isn't."
5571200,5571560," Yeah."
5572140,5573900," So, thank you."
5573900,5574360," Thank you."
5574360,5574620," Thank you."
5574620,5574920," Thank you."
5574920,5575180," Okay."
5575180,5576900," So, begin is rather interesting."
5576900,5577640," Right."
5577640,5578500," So, begin."
5578500,5581600," So, we use name str."
5581600,5591000," And, it's a bit annoying in a sense that I can do name str."
5591000,5592580," And, this is the begin."
5592580,5598600," And, the end, I can do name str plus str."
5599000,5605280," But, I mean, I can just assume that it's a string literal."
5605280,5606760," So, I can do size of."
5606760,5610580," And, then, remember, does size of include the rest of the..."
5610580,5610740," Okay."
5610740,5614080," So, this becomes very complicated very quickly with begin and end."
5614080,5620060," But, in any case, we can actually turn this into a function."
5620060,5622180," It includes null."
5622180,5627100," But, anyway, besides the point, I think we can turn it into a function."
5627900,5629100," How are we going to be doing that?"
5629100,5630760," So, we're going to return the token."
5630760,5634800," And, just like, in line symbol implementation."
5634800,5635920," Right."
5635920,5638360," So, we're going to have name sister."
5638360,5643040," But, on top of that, we're also going to be accepting file and line."
5643040,5646280," And, we can just move all of that stuff in there."
5646280,5647500," Right."
5647500,5651820," So, we only need to make it a macro because we need the current file and line."
5651820,5654260," Everything else, it just, like, doesn't really matter."
5654660,5655920," So, let's just move it in there."
5655920,5658140," And, I think it will make it even better in my opinion."
5658140,5660440," So, return."
5660440,5662760," So, this is file."
5662760,5664480," This is line."
5664480,5666280," And, now, name str."
5666280,5668760," And, name str plus str len."
5668760,5669620," Name str."
5669620,5670340," You see?"
5670340,5670840," Easy."
5670840,5672480," So, that's it."
5672480,5675320," And, then, in here, we just do this thing."
5677240,5677440," Okay."
5677440,5684160," So, both GCC and Clang support built-in column intrinsic."
5684160,5685160," I see."
5685160,5686020," But, it's not really standard."
5686020,5689700," But, I mean, Clang and GCC are basically standard."
5689700,5691980," So, I don't know."
5691980,5693240," I'm a little bit conflicted on that."
5693240,5694420," But, anyway."
5694420,5696900," So, let's call it symbol."
5696900,5697440," Right."
5697440,5697920," So,"
5699580,5705180," Maybe we can even move that into the library."
5705180,5706200," Because, that's kind of convenient."
5706200,5706740," Isn't it?"
5706740,5706920," Right."
5706920,5710720," Being able to define, like, a token inside of the source code."
5710720,5713720," So, all of the reporting works the same."
5713720,5719200," Sounds like a cool idea, in my opinion."
5719860,5720300," Okay."
5720300,5721640," So, in here, it's just a symbol."
5721640,5724300," Like, like this."
5724300,5727080," Symbol."
5727080,5729700," Symbol."
5729700,5737140," So, append, symbol, symbol."
5737140,5739620," So, when I do the append, yeah."
5739620,5740540," Okay."
5740540,5742720," Let's go through the compression errors and see what's going on in here."
5742720,5743640," Inline symbol."
5743640,5744860," Yeah."
5744860,5745740," Symbol implementation."
5745740,5747420," Sure."
5747420,5748540," Symbol."
5749200,5749760," Might as well."
5749760,5749960," Okay."
5749960,5751440," So, let's do the following thing."
5751440,5753220," Query replace A."
5753220,5754920," Symbol."
5754920,5756380," A."
5756380,5758000," All right."
5758000,5759620," So, this is C."
5759620,5763020," And I can query replace C."
5763020,5764580," Like that."
5764580,5765240," Like that."
5765240,5767560," And here is the symbol A."
5767560,5770680," And this function is supposed to return the token."
5770680,5773140," All right."
5773140,5774060," So, what do we have in here?"
5774060,5778280," T is not defined."
5778280,5778620," Okay."
5779040,5780520," So, everything is working, actually."
5780520,5781100," Wait a second."
5781100,5781700," That's cool."
5781700,5783160," Right."
5783160,5785040," So, for now, I'm going to return false."
5785040,5787780," Maybe even to do."
5787780,5793160," So, that means the idea worked out to some extent."
5793160,5795060," Yeah."
5795060,5795620," So, okay."
5795620,5796660," A bunch of unused things."
5796660,5799160," So, let's actually declare this stuff as unused."
5799160,5800760," Name."
5800760,5801660," Brain."
5801660,5802660," Cheese."
5802660,5803940," What else do we have in here?"
5803940,5804620," Default grammar."
5804760,5806900," This has to be a token."
5806900,5810400," This is token."
5810400,5813120," This is token."
5813120,5815280," What else do we have in here?"
5815280,5816960," Yeah."
5816960,5819440," When we're parsing this thing, we just take a pointer to this stuff."
5819440,5819880," And there we go."
5819880,5820820," Everything seems to be working."
5820960,5824760," So, we refactored the idea of the rule yet again."
5824760,5826320," All right."
5826320,5829340," Isn't that cool?"
5829340,5830720," I think that's pretty freaking cool."
5831440,5832920," So, I wonder if it's going to work."
5832920,5833820," So, let's actually see."
5833820,5835380," Run GUI."
5835380,5837320," We are in the wrong place."
5837320,5838100," That's fine."
5838100,5838880," That happens."
5838880,5839800," Nothing special."
5839800,5840700," Okay."
5840700,5841540," Everything's working."
5841540,5841800," Okay."
5841800,5842980," So, we didn't break anything."
5842980,5844620," Okay."
5844620,5845780," So, let's do commute."
5845780,5850340," So, you see, like, it's an exploration process."
5850340,5850620," Right?"
5850620,5853000," It's kind of difficult to write the correct thing right away."
5853000,5854760," Sometimes you need to try a bunch of things."
5854760,5855000," Right?"
5855000,5856720," So, we tried integer."
5856720,5857780," It didn't work out."
5857780,5858660," It has to be a name."
5858660,5859920," That didn't work out either."
5859920,5863580," Now, it is a token, which is compatible with Alexa that we're using."
5863580,5868300," And on top of that, like, we have even a location of that token."
5868300,5872420," Though, it's a little bit redundant because we have location within the node."
5872420,5874140," I believe so."
5874140,5876980," I believe we do have a location within the node."
5876980,5880880," Where is the, like, we have things like file."
5880880,5881520," Yeah."
5881520,5882240," Within the node."
5882240,5885180," So, it's a little bit redundant in that regard."
5885180,5886200," Right?"
5886900,5889360," A little bit redundant in that regard."
5889360,5893280," So, maybe it's not a great idea to do it like that."
5893280,5898140," But I don't know."
5898140,5900840," So, we're already committed to that."
5900840,5901200," Right?"
5901200,5902260," So, we're already committed to that."
5902260,5902860," So, let's actually go."
5902860,5907400," So, let me see."
5907680,5910440," So, I'm going to just do that."
5910440,5912120," That."
5912120,5912880," That."
5912880,5914420," Uh-huh."
5914420,5916440," Uh-huh."
5916440,5917740," So, this is that."
5917740,5918620," That."
5918620,5919500," That."
5919500,5920380," Okay."
5920380,5923260," This is the Lexus tab."
5923260,5925080," Uh-huh."
5925080,5926180," Another Lexus tab."
5926180,5927240," And that's about it."
5928000,5928320," Okay."
5928320,5933560," So, basically, I don't know what to say."
5933560,5936800," But the point of the whole refactoring is this anyway."
5936800,5940020," So, I'm going to just put that in a commit message."
5940020,5944380," And who understands, understands."
5944380,5945040," Right."
5945040,5946720," So, I'm going to push that right into the rhythm."
5948780,5949480," All right."
5949480,5953300," Now, let's try to focus on this function."
5953300,5954160," All right."
5954160,5955660," So, what are we doing here?"
5955660,5957600," Branches name."
5957600,5960580," So, the whole refactoring was that."
5960580,5961560," I can just do that."
5961560,5966460," That's the whole refactoring."
5966460,5967680," Right."
5967680,5968620," That's the whole point."
5968620,5970460," Believe it or not."
5970460,5972080," Okay."
5972080,5975880," So, now, we need to parse different branches."
5977240,5985260," Maybe we need to have a function, something like a parse grammar branch, but a single one now."
5985260,5985920," Right."
5985920,5987260," So, something like this."
5987260,5988440," A grammar branch."
5988440,5993580," And we're probably going to do that through a grammar branch pointer."
5993580,5994700," So, here is the branch."
5994700,5996720," So, this is not implemented yet."
5996720,5998760," So, we're going to do put to do in here."
5998760,6007220," And I feel like all of that code with this stuff is going to do that."
6007220,6008600," It's going to be something like this."
6008600,6009600," Yeah."
6009600,6019880," So, we have to keep calling this function in a loop."
6019880,6020920," Right."
6020920,6023580," We have to keep calling this function in a loop."
6023580,6031420," For as long as, basically, we encounter bars."
6032000,6032540," Right."
6032540,6040840," So, that means here, we have to first get a token and verify that it is a bar."
6040840,6044160," But it could be either a bar or semicolon."
6044160,6046120," If you take a look at this thing."
6046120,6049060," So, it could be bar or it could be semicolon."
6049060,6050820," So, that means you didn't define anything."
6050820,6053320," So, you can actually define something like empty."
6054320,6058440," And that's going to be a valid thing according to how we define things."
6058440,6059040," Right."
6059040,6066900," So, that means somewhere here, we kind of actually expect one of puncts."
6066900,6067940," Right."
6068640,6074280," So, we can put something like puncts."
6074280,6075260," Maybe."
6075260,6079600," How do I want to call it expected puncts?"
6079600,6085200," Or maybe branch start."
6086020,6090880," And then we can do array len branch start."
6090880,6103580," And here, we basically have punct index, branch start, and essentially, actually, it has to be size t."
6103580,6109600," Punct bar or semicolon."
6110800,6112140," Yes, as we have."
6112140,6114220," Or semicolon."
6114220,6117940," So, if it's one of those, we just keep doing that."
6117940,6119300," So, let's do switch."
6119300,6122700," t kind."
6122700,6127660," So, in case of..."
6127660,6130380," It's actually not t kind, but punct index."
6130380,6132760," We already know that it's a punctuation."
6132760,6133100," Right."
6133100,6134780," So, it has to be an index."
6134780,6140000," I just realized that it kind of makes it difficult to, for example, expect."
6140540,6143460," Symbol or a specific punctuation mark."
6143460,6146460," So, I'll probably have to change this library to accommodate that somehow."
6146460,6147000," We'll see."
6147000,6147220," We'll see."
6147220,6150020," So, yeah."
6150020,6153960," Because it's the token IDs are kind of nested."
6153960,6156440," So, it creates a little bit of a weirdness."
6156440,6158440," But anyway."
6158440,6159360," Whatever."
6159360,6163760," I think I have a couple of ideas how we can do that."
6169560,6175140," So, case of punct bar."
6175140,6179880," If it's a bar, we have to parse a branch."
6179880,6181920," We have to parse the next branch."
6181920,6185640," So, this is going to be an Alexa."
6185640,6187680," Obviously, it can fail."
6187680,6190760," In that case, we return false."
6192200,6198500," But if it doesn't fail, we have to keep appending that branch into here."
6198500,6201220," Yes."
6201220,6206580," So, it's going to be context di append."
6206580,6210060," It's kind of similar to what we were doing in there."
6210180,6211520," So, it's already branches."
6211520,6213160," Branch."
6213160,6214320," There we go."
6214320,6216820," And obviously, we'll break in this case."
6216820,6220060," If it is semicolon, right?"
6220060,6222720," If it is semicolon, that's basically it."
6222720,6225240," We don't really do anything anymore in here."
6226680,6229200," So, it's kind of similar to this thing."
6229200,6231640," So, that means we'll probably have to have a boolean quit."
6233340,6236700," So, we're going to do the following thing."
6236700,6239320," While not quit."
6239320,6242900," Boolean quit false."
6242900,6245360," Let's put that stuff in here."
6245360,6246820," Something like that."
6246820,6247780," Look at that."
6249080,6251960," So, in default, obviously, it's going to be unreachable."
6251960,6256200," So, there's a little bit of a..."
6256200,6256440," Yeah."
6256440,6260120," Everything's fine."
6260120,6260780," Everything's fine."
6260780,6264260," So, in quit, true."
6264260,6270600," So, that's very cool."
6270600,6274000," So, we're just sequentially parsing all of these things."
6274000,6277500," We just look at the token."
6278140,6279060," Is that a bar?"
6279060,6279560," Right."
6279560,6281960," So, that means we are parsing those things."
6281960,6284960," If it's semicolon, we quit the entire process."
6284960,6287460," If it's something else, that means we forgot to update things."
6287460,6288220," That's fine."
6288220,6289680," That is totally fine."
6289680,6291920," And we'll have to continue with this thing."
6291920,6296400," So, at the end of the parsing, we have to sum up all of the weights."
6296400,6296840," Right."
6296840,6297840," So, that's kind of important."
6297840,6303060," It's kind of similar to grammar append branches to this function."
6303060,6303820," Right."
6303820,6305640," So, we just like append and waits."
6305640,6307080," We already assign the name."
6307820,6308020," Right."
6308020,6310700," So, we already assign the name in here."
6310700,6315820," But now, we also, after appending everything, we have to append the weights."
6315820,6317980," Yep."
6317980,6319480," That's it."
6319480,6320220," Honestly."
6320220,6322020," That's basically it."
6322020,6326120," For this specific function, now we need to implement this one."
6327300,6330680," And this one is going to be first collecting all of the weights."
6330680,6336140," And honestly, this one is rather easy."
6336140,6340440," We can even maybe assign weight to one right away."
6340500,6342660," Because we already consumed one bar."
6342660,6350220," So, and in here, as we are consuming more and more of the bars."
6350220,6351000," Right."
6351000,6352400," So, we're going to be doing it like this."
6352400,6354440," As we're consuming more and more of the bars."
6356380,6359920," We're increasing the weights."
6359920,6360960," Right."
6360960,6361920," So, we consume that."
6361920,6362740," Another bar."
6362740,6364940," We're just adding it in there."
6364940,6367000," And if it's something else, right."
6367000,6371080," We're starting to parse the actual expression in there."
6371220,6373280," But for now, I just want to put it to do in here."
6373280,6374180," Right."
6374180,6377100," Just to see if this entire thing compiles or not."
6377100,6382480," So, we're slowly going down in terms of how we're parsing things."
6382480,6386040," And I'm super happy to see all of that stuff."
6386040,6386980," So, yeah."
6386980,6389040," And use too many warnings."
6389040,6390260," Sometimes they're annoying."
6390260,6391120," But that's fine."
6391120,6392620," What else do we have in here?"
6392620,6398220," So, this is the token that we probably need to allocate somewhere here."
6398220,6398640," Right."
6398640,6400900," So, the token, T."
6400900,6401740," Just put it."
6401740,6403980," I'm in the wrong place, actually."
6403980,6405600," So, it has to be somewhere here."
6405600,6406080," There we go."
6406080,6409100," What else do we want in here?"
6409100,6409920," Token."
6409920,6411460," Token T."
6411460,6412600," I've got a space."
6412600,6414440," So, what do we want?"
6414440,6415980," It's already a pointer."
6415980,6418360," It's already a pointer."
6418360,6420980," So, branch."
6420980,6422320," It has to be a pointer."
6422320,6426420," And control flow reaches end without actually returning anything."
6426420,6430340," Because we have to return true in case of success."
6430340,6433060," Here, by the way, has to be false."
6433060,6435460," Copy pasting, man."
6435460,6435840," Okay."
6435840,6436940," Cool, cool, cool, cool, cool."
6436940,6441280," So, this slowly parses the branches."
6441280,6443260," Slowly but steadily."
6445260,6445700," Yeah."
6445700,6447700," This one is rather interesting."
6447700,6451840," So, as soon as we reached the end of the branches."
6451840,6453960," As soon as we reached the end of the branches."
6453960,6455640," It's going to be..."
6455640,6460140," I was thinking I wouldn't need look ahead."
6460140,6463080," I was thinking that I wouldn't need pick."
6463080,6465060," But apparently, I do need pick."
6465520,6465660," Right."
6465660,6468320," So, basically looking one token further."
6468320,6473560," So, just to check what's further there."
6473560,6474060," Right."
6474060,6476340," So, without it, it's kind of difficult to do it."
6476340,6477320," Right."
6477320,6483560," So, because instead of like consuming the token, I want to just like look ahead."
6483560,6484520," Is it a bar?"
6484520,6486140," If it's a bar, I consume it."
6486140,6489080," If it's not a bar, okay, I will pass it to the next sort of thing."
6489080,6495080," I think ability to look one token ahead is kind of like valuable in the Lexus."
6495080,6495540," Right."
6495540,6499340," So, it will make it easier to do all of this entire stuff."
6499340,6502680," So, maybe I should spend some time implementing that into the Alexa."
6502680,6505540," Yeah."
6505540,6507140," So, because without..."
6507140,6508660," Like I kind of stuck without it."
6508660,6510400," So, it will be actually kind of nice to have it here."
6510400,6513160," But I think I need to make another small break."
6513160,6514520," Right."
6514520,6516880," All right."
6516880,6518220," Let's do another small break."
6519080,6520420," Yeah."
6520420,6523500," So, and after the break, we're going to continue parsing this entire thing."
6523500,6526240," So, slowly but steadily, we're getting there."
6526240,6527380," I think."
6527380,6528480," I think we're getting there."
6528480,6531940," We already can recognize like separate higher level concept."
6531940,6533360," We already can recognize the branches."
6533360,6536220," So, now we need to recognize the expressions within the branches."
6536220,6538440," I think this one is going to be rather interesting."
6538440,6545520," So, and yeah, adding more operators is going to be rather interesting."
6546640,6551880," So, the expression could be either like a function call, right?"
6552020,6554640," Or it could be a standalone variable."
6554640,6558740," And the grammar should also accommodate that accordingly."
6558740,6559940," Right."
6559940,6560400," We'll see."
6560400,6560700," We'll see."
6560700,6564000," Save state, set state."
6564000,6569160," Maybe we can do something like that."
6569560,6581140," Because the whole state of the lexor is, yeah, but the whole state of the lexor honestly is just this."
6581140,6582980," Isn't it?"
6582980,6584900," I think it is."
6584900,6585940," Right."
6585940,6587400," So, because we don't modify the size."
6587400,6588380," We don't modify the constant."
6588380,6591680," This is just set and you forget about it."
6591680,6593660," You also set this and forget about it."
6593660,6596340," The whole, this is not a bad idea."
6597020,6601300," Honestly, wait a freaking second."
6601300,6603960," Can I just do that?"
6603960,6605700," Bro."
6605700,6608920," You just gave me a cool idea."
6608920,6616720," Because we can kind of unget a token based on their..."
6616720,6617100," Wait, wait, wait."
6617100,6618420," I'm actually really curious."
6618420,6622260," Or maybe..."
6622260,6625720," So, let me try."
6625720,6629200," So, we can introduce something like..."
6629200,6630460," That's a very cool idea."
6630460,6632300," I think it called cat69."
6632300,6633980," So, I think I'm going to actually VIP you."
6633980,6635400," Right."
6635400,6637760," So, yeah."
6637760,6638960," Because you're really helpful."
6638960,6639700," Alexa."
6639700,6641980," So, the state."
6641980,6643560," And this is going to be the state."
6643680,6646280," I'm not going to wrap these things specifically in a state yet."
6646280,6648700," Because that will prompt too much refactoring right now."
6648700,6651040," So, I'm going to have this thing as a separate stuff."
6651040,6652560," Right."
6652560,6655560," So, and what we can do is actually..."
6655560,6658460," Alexa state."
6658460,6661860," Alexa, like save."
6661860,6664900," Something like that."
6665400,6667100," And then rewind."
6667100,6674680," That is actually very easy to do."
6674680,6675740," What the fuck?"
6675740,6677400," Well, I never thought about it."
6677400,6677780," Thank you."
6677780,6684800," So, that means this is a cursor."
6684800,6686720," El cursor."
6686720,6688520," Ball."
6688520,6690840," And then roll."
6691740,6692200," And that's it."
6692200,6693840," It's just like..."
6693840,6696160," What the fuck, man?"
6696160,6698620," Why I never thought about that choice?"
6698620,6700720," What the fuck?"
6700720,6701160," Okay."
6701160,6703600," So, I can maybe use a little bit of Emacs magic."
6703600,6705240," Maybe even multiple cursors."
6705240,6706060," Essentially."
6706060,6706680," Ass."
6706680,6708180," All right."
6708180,6709380," And then boom."
6709380,6711140," Look at that."
6711140,6713240," Huh."
6719580,6720300," Okay, good."
6720300,6724300," So, it's..."
6724300,6725300," I forgot a semicolon."
6725300,6729300," Yeah, because if you think about it, it's just like..."
6729300,6731100," Huh."
6731100,6736080," I really like simple, but powerful and impactful ideas, honestly."
6736080,6737320," Right."
6737320,6741200," So, just something that is easy to implement, but it just gives you so much power."
6741200,6743980," So, yeah."
6743980,6746920," How are we going to do that?"
6748920,6752260," Essentially, essentially, essentially."
6752260,6755520," We can already try to use that."
6755520,6759640," So, when I parse the branches, if..."
6759640,6759940," Yeah."
6759940,6762940," So, I'm saving this as a mark."
6762940,6764020," Right."
6764020,6766920," So, Alexa state."
6766920,6768220," And here is the state."
6768220,6771740," And I just do Alexa save L."
6771740,6772540," Right."
6772540,6774000," So, I save this thing."
6774780,6779240," And if it's a bar, this is something that I kind of want to rewind."
6779240,6779660," Right."
6779660,6783200," So, I rewind it back to where it was."
6783200,6788580," So, then parse grammar branch can just expect as many branches as it wants."
6788580,6792420," And I don't have to even set weight to one or anything."
6792420,6792840," Right."
6792920,6795060," So, it's just like, this is so fucking cool."
6795060,6796080," Wait a fucking second."
6796080,6798600," Right."
6798600,6803020," So, in here, I just do something like that."
6803020,6807820," And I just, if it's a bar, I keep incrementing my weight."
6807820,6809200," Like so."
6809200,6812800," I just keep incrementing, keep incrementing, and so on and so forth."
6813300,6813520," Right."
6813520,6816260," And then, so, here is the token."
6816260,6819580," Here is the token."
6819580,6822580," And as I go, I feel like..."
6822580,6822960," Right."
6822960,6824540," So, Alexa state."
6824540,6826560," I just save the Alexa."
6826560,6830120," I have to actually save it every time."
6830120,6830360," Right."
6830360,6831900," So, I have to save it every time."
6831900,6832840," So, it's that."
6832840,6836020," Save L."
6837140,6844080," And so, I get the next one."
6844080,6847320," I forgot a very important thing in here, by the way."
6847320,6848940," I forgot a very important thing."
6848940,6853900," I have to actually do that in here every time."
6853900,6856480," Right."
6856480,6858160," So, I just take this thing."
6858160,6860200," I save the state."
6860200,6861400," I get the token."
6861400,6863100," Check what that token is."
6863100,6866520," If it's a bar, I rewind it back, and I just hand it over to that."
6866800,6869000," If it's a semicolon, I don't have to rewind anything."
6869000,6872300," I just quit right away, and everything is fine."
6872300,6877180," So, now in here, let's go back to this thing."
6877180,6881320," So, I save the state."
6881320,6882320," I check the state."
6882320,6883720," Is that this thing?"
6883720,6885560," Right."
6885560,6893440," If it is that thing, I don't really rewind, but I have to keep saving the state as I get to the next token."
6893440,6893840," Right."
6893840,6895100," I constantly save the state."
6895100,6896260," I constantly save the state."
6896460,6902940," And if it's something else, right, I kind of want to be able to rewind it."
6902940,6903240," Right."
6903240,6905840," So, depending on what exactly that is."
6905840,6908120," Right."
6908120,6909660," And we kind of..."
6909660,6913520," It's rather interesting."
6913800,6918420," So, it has to be specifically a symbol, I think."
6918420,6923820," Any expression in our case always starts with a symbol."
6925180,6925740," Yeah."
6925740,6936200," So, because of that, this thing has to be Alexa token, actually, Alexa expect, what is it called?"
6936200,6937880," Bye-bye in the exception."
6939140,6939560," What was the..."
6939560,6939880," What was the..."
6939880,6940820," What did I want it?"
6940820,6942040," Expect kind..."
6942040,6942280," Okay."
6942280,6946520," Expect kind symbol."
6946520,6948680," Symbol."
6948680,6952800," If it's not a symbol, return false."
6952800,6953180," Right."
6953560,6956400," So, I just keep doing this thing."
6956400,6962580," And honestly, because of that, I probably don't even need to save the state, right?"
6962620,6964400," So, because it's kind of deterministic, right?"
6964400,6965220," So, I look at that."
6965220,6967040," If it's a symbol..."
6967040,6971860," The place where I need to now rewind is I need to look ahead."
6971860,6977200," Does it have a comma or does it not?"
6978600,6980060," Honestly, I need to rewind."
6980060,6985440," I need to rewind because then I'm going to hand it to parseExpression, right?"
6985440,6989560," So, parseExpression, right?"
6989560,6992400," It's going to be L, right?"
6992400,7001900," So, what we can do is just like a Alexa rewind L to S."
7001900,7005220," So, by the way, this doesn't have to be a pointer."
7005880,7008820," I just rewind it and then I parse the expression."
7008820,7012220," So, and this is the grammar branch."
7012220,7014780," And I will have to parse it into the grammar branch."
7014780,7016160," Right."
7016160,7020260," So, where's the definition of the grammar branch?"
7020260,7021460," Why don't you..."
7021460,7021620," Yeah."
7021620,7022680," This is what I want."
7022680,7023480," This is what I want."
7023480,7024720," And node."
7024720,7025240," Okay."
7025240,7027240," This one is very, very fucking important."
7027240,7030740," So, that means this has to be parseNode, right?"
7030740,7035240," This is a parseNode where I pass L and a pointer..."
7035880,7037920," To the node within the branch."
7037920,7039160," Right."
7039160,7041680," To the node within the branch."
7041680,7044760," And if it fails, we fail the whole thing."
7044760,7045520," We return false."
7045520,7046760," Otherwise, we return true."
7046760,7048500," This is why I need to rewind."
7048500,7051120," Because I'm kind of constantly looking ahead."
7052140,7052780," All right."
7052780,7059840," So, now we need to parse the node."
7059840,7061700," Okay."
7061700,7063140," So, this one is going to be false."
7063140,7064640," This is Lexer."
7064640,7066420," We're getting there."
7066420,7069620," Thank you for the idea of the look ahead thing."
7069620,7074180," And since it's a node, I suppose it has to be like a double pointer."
7074520,7076260," So, it's not implemented yet."
7076260,7084300," So, we now went down in our grammar definition to parsing these internal things."
7084300,7087320," This is how we went there."
7087320,7089820," Like, this is how deep we went there."
7089820,7091280," That's what I'm trying to say."
7092220,7095800," So, there will be probably bugs that we'll have to debug at some point."
7095800,7096480," But anyway."
7096480,7099480," So, this one is unused."
7099480,7101680," So, that means we're getting closer."
7101680,7103440," We're getting closer to the working thing."
7103440,7105400," So, here's the token."
7105400,7105980," Okay."
7105980,7108020," We can allocate the token."
7108020,7110340," Nothing particularly special."
7110340,7111580," Let's fucking go."
7111580,7113060," Let's fucking go."
7113060,7114200," It seems to be compiling."
7114200,7115720," Very fucking cool."
7115720,7117980," Very fucking cool."
7118980,7119380," Okay."
7119380,7121600," So, yeah."
7121600,7124540," So, essentially, we have to do Alexa token."
7124540,7130080," And what I'm just doing, I'm just like getting the token."
7130080,7134280," And I'm expecting it to be specifically a symbol."
7134280,7134900," Right."
7134900,7136360," I'm expecting it to be a symbol."
7136360,7143940," So, maybe because of that, I'm going to just call it a name."
7143940,7145380," Yeah."
7145380,7146380," Just a name."
7146380,7146860," Right."
7146860,7148620," So, because that's what it's going to be."
7148980,7152360," It's just going to be a name."
7152360,7160560," And depending on what name that is."
7160560,7163920," Maybe if I can call it."
7163920,7164000," Okay."
7164000,7164200," Okay."
7164200,7169920," So, Alexa."
7169920,7173620," Expect kind."
7176220,7180700," If it's not a symbol, we return false."
7180700,7182080," All right."
7182080,7187500," So, essentially, what we're trying to parse in here, we're kind of trying to parse this kind of stuff."
7187500,7188620," All right."
7188620,7192360," So, we have two kinds of expressions."
7192360,7192700," Right."
7192700,7193960," Two kinds of nodes."
7193960,7196460," It's either a specific name."
7196460,7196980," Right."
7196980,7198460," It's either a specific name."
7198680,7201520," Or it is a function call."
7201520,7202000," Right."
7202000,7204680," It's either that, that, or that."
7204680,7213020," So, essentially, that means any expression, any node always starts with a symbol."
7213700,7226180," But then, depending on whether it has next parent, open parent, we either start parsing it as a function call or not."
7226920,7229200," So, that's where it gets very fucking interesting."
7229200,7233880," Or maybe it doesn't even fucking matter because we kind of know what names are."
7233880,7234620," Right."
7234620,7237880," So, we can actually base it off of the names."
7237880,7238220," Right."
7238220,7250000," So, for instance, if it's a random, I know that, yeah, I know that random is a name."
7250080,7251280," So, it's not a function."
7251280,7252120," Right."
7252120,7253720," I know that it's not a function."
7253720,7257760," So, I just had code it the function implementation."
7257760,7258040," Yeah."
7258040,7258280," Okay."
7258280,7260080," So, this one is going to be interesting."
7260080,7261380," So, things like this."
7261380,7262600," Right."
7262600,7267180," So, if it's something else, we just treat it as a rule."
7267180,7267520," Okay."
7267520,7268880," Okay."
7268880,7270140," That's very fucking easy."
7270140,7270600," Okay."
7270600,7271660," That's very fucking easy."
7271660,7274520," So, if it's a specific functions, we just do that."
7274520,7275620," If it's not, we do that."
7275620,7276500," Blah, blah, blah, blah, blah."
7276500,7276820," Okay."
7276820,7277300," That's easy."
7277300,7278420," That's fucking easy."
7279140,7280780," So, that's very cool."
7280780,7283680," But I think I still need to have a little bit of a break."
7283680,7284160," Right."
7284160,7287040," So, I need to make another cup of tea."
7287040,7288420," Right."
7288420,7291380," And so, then I'm going to finish this pasta."
7291380,7292940," We're actually super fucking close."
7292940,7296060," We're actually super fucking close."
7296060,7297520," And, yeah, let me see."
7297520,7298140," Let me see."
7298140,7299680," So, it doesn't even compile."
7299680,7301220," So, alexos symbol."
7301220,7302560," What do I want?"
7302560,7304140," So, it has to be T."
7304140,7305120," It has to be name."
7305120,7305580," Yeah."
7305580,7307700," That's what it has to be."
7308200,7311740," So, this one is unused because this is where we're going to be saving the node."
7311740,7313240," Right."
7313240,7316120," So, for now, I'm going to just put unused in here."
7316120,7317820," And everything should be compiled now."
7317820,7321360," It will be also kind of cool to be able to print the grammar."
7322120,7324620," We already added the grammar printer print."
7324620,7326900," So, grammar print."
7326900,7328220," Yeah."
7328220,7330140," So, we'll have to implement that."
7330140,7331620," And just like we parse the grammar."
7331620,7333320," And then we're going to try to print it back."
7333320,7337660," Just to see, you know, how well it performed and everything."
7337660,7338220," Anyways."
7338220,7339120," So, let's make some break."
7339120,7340100," All right."
7340100,7340620," We're back."
7341220,7344680," So, let's continue parsing."
7344680,7346600," So, I forgot what I was doing."
7346600,7350060," Like, where did I stop in terms of parsing?"
7350060,7357620," Maybe I should just go and constantly run the whole thing."
7357620,7359260," I think that would be a good idea."
7360520,7361000," All right."
7361000,7362380," So, just run this thing."
7362380,7363220," Maybe parse."
7363220,7365340," And this is going to be grammar BNF."
7365340,7367300," Unknown command parse."
7367300,7367600," Really?"
7367600,7369720," Did I quote something differently?"
7369720,7372580," Or how is that?"
7372580,7373280," Wait."
7373280,7374020," Wait."
7374020,7375160," What the fuck?"
7375160,7375960," Ah."
7375960,7377740," Run parse."
7377740,7378040," Okay."
7378040,7378920," So, that's fine."
7378920,7379600," Parse node."
7379600,7381300," And we actually reached it correctly."
7381300,7382540," So, which is super nice."
7382540,7390440," So, I think we need a separate parser for the..."
7390520,7393060," Argument lists."
7393060,7393740," Right."
7393740,7395320," For these kind of things."
7395320,7396920," That's what we need to have."
7396920,7403000," It would be maybe also nice to hard code how many of these arguments you want to parse."
7403000,7406600," So, we're going to be actually having only either three arguments or two."
7406600,7407480," Right."
7407480,7409620," So, it's either two or three."
7409620,7415300," So, maybe because of that, we can literally hard code a lot of things in here."
7415300,7418620," So, let me do parsePayer."
7418620,7420180," Right."
7420260,7421480," So, this is going to be parsePayer."
7421480,7425860," And so, what's going to be the Payer?"
7425860,7432740," We can actually do something like first, second."
7432740,7434360," Something like that."
7434360,7437820," So, which means I can hard code a lot of things in here."
7437820,7440700," So, token."
7440700,7442580," So, this is going to be just the T."
7442580,7445120," So, which will allow us to skip a lot of things."
7445340,7446480," So, I can do get..."
7446480,7450640," Let's get token."
7450640,7453040," L.C."
7453040,7454220," Right."
7454220,7456540," And here, we're going to be expecting specific things."
7456540,7459960," We're going to be expecting a punct."
7460120,7462480," A very specific punct, which is a punct."
7462480,7463860," OpenPattern."
7463860,7465340," So, this is going to be O.Pattern."
7465340,7468180," At the end, we're going to be expecting C.Pattern."
7468180,7469120," Right."
7469120,7474600," If any of these things failed, if this thing failed, we just return false."
7475180,7478000," So, at some point, we're also going to be expecting a comma."
7478000,7478920," Right."
7478920,7482220," But we have to do that, like, every time."
7482220,7483280," So, we get the token."
7483280,7484700," We expect what it is."
7484700,7485700," Get the token."
7485700,7486760," Expect what it is."
7486760,7487440," Right."
7487440,7494500," And between these two things, what we have to do is just parsePayerL first."
7494500,7496440," Just we're parsing the first pair."
7496440,7499080," If it didn't parse, we're going to continue."
7499460,7502800," And then, we parse the node."
7502800,7503520," Right."
7503520,7505000," It has to be actually node."
7505000,7506400," Look at that."
7506400,7507380," So, this is the node."
7507380,7508800," So, this is the second."
7508800,7512080," Don't you need one for a security?"
7512080,7513620," Maybe."
7513620,7515020," We'll see."
7515020,7516960," So, it's not that difficult to add another one."
7516960,7517640," So, that's fine."
7517640,7519380," Right."
7519380,7521340," So, this is how we're going to do it."
7521340,7523520," Right."
7523520,7525440," Because I don't want to define list of nodes."
7525440,7526480," Right."
7526560,7529780," So, I don't want to work with the concept of list of nodes."
7529780,7530480," Common."
7530480,7531720," Com, ma."
7531720,7532180," Yeah."
7532180,7532620," So, common."
7532620,7534960," Yeah."
7534960,7537340," So, just want to have specific things."
7537340,7540300," It will just make it easier to do this stuff."
7540300,7541700," All right."
7541700,7542780," So, we can have Payer."
7542780,7547460," So, we can have triples as well."
7549960,7552900," And this is the triple."
7552900,7557000," So, that means in here."
7557000,7558240," So, there is."
7558240,7559500," It will be third."
7559500,7560880," Second."
7560880,7562660," Third."
7562660,7564200," Uh-huh."
7564200,7567800," And so, here is the second and the comma."
7567800,7569900," Uh-huh."
7569900,7572720," And this is the third."
7572720,7573740," Right."
7573740,7574780," It's just easier."
7574780,7575080," Right."
7575180,7578140," So, just copy-paste a bunch of stuff and that's going to be fine."
7578140,7579580," All right."
7579580,7580400," So, parsePayer."
7580400,7583240," So, what else can we do in here?"
7583240,7586500," So, how can we call it?"
7586500,7587000," Like, parse."
7587000,7590980," A single call."
7590980,7595340," But for security, honestly, we can just, like, directly inline that thing."
7595340,7602800," So, the reason why I want to have a parse triple is because I can now use it to have this kind of situation."
7603140,7603320," Right."
7603320,7610000," So, I can look ahead, see that it starts with an open parent and just parse it as a triple because I only expect triples to be like that."
7610000,7615040," See what I'm talking about?"
7615040,7615920," Right."
7615920,7616620," Right."
7616620,7616880," Right."
7616880,7617060," Right."
7617060,7617140," Right."
7617140,7617940," So, that's cool."
7617940,7624400," So, you can reuse things like for ifs and for just triples."
7624400,7625520," Like, the same function."
7625520,7625860," Right."
7625860,7627320," So, because syntactically kind of similar."
7627320,7628880," I don't have to worry about it."
7628880,7629320," So, it's cool."
7629320,7629660," It's cool."
7629660,7631720," That's why I'm doing it like that."
7632320,7632620," All right."
7632620,7634460," So, yeah."
7634460,7641440," So, we've got the token and we expect it to be either a symbol or open parent."
7641440,7647340," And this is where it kind of, my idea with the expect function kind of broke down, unfortunately."
7647340,7650160," So, I'm a little bit annoyed because of that."
7652460,7653300," So, yeah."
7653300,7659060," Because I can't expect simultaneously symbol and some other punct."
7659060,7661120," Technically, I can."
7661120,7661680," All right."
7661680,7666440," So, but then within the punct, I have to check what kind of punctuation symbol that is."
7666440,7669220," And it's a pain in the ass, honestly."
7669220,7670280," It's a pain in the ass."
7670280,7670700," But anyway."
7672380,7673500," So, it's a pain in the ass."
7673500,7673760," So, it's a pain in the ass."
7673760,7675480," So, this is going to be the state."
7675480,7677180," And we're going to just like a save."
7677180,7678940," All right."
7678940,7680240," So, we save."
7680240,7684580," We'll look ahead whether it's symbol or not."
7684580,7685500," All right."
7685500,7687040," And if it is a symbol."
7687040,7691220," We're probably just not going to do anything."
7691220,7695080," So, let me switch upon name."
7696120,7711700," So, we expect a symbol or we expect a punctuation, which is going to be open parent."
7711700,7716540," So, otherwise, we just expect maybe unreachable."
7716540,7717500," Well, I mean, not really."
7717500,7719380," But I'm going to put it to do."
7719380,7721880," We have to, you know, handle this kind of thing."
7723840,7728040," And, by the way, these functions, they need this stuff forward declared."
7728040,7729860," Somewhere here, like so."
7729860,7731140," So, we're going to put it like this."
7731140,7735720," So, if it's a symbol, we need to know what kind of symbol it is."
7735720,7737000," All right."
7737000,7738800," We need to know what kind of symbol it is."
7738800,7743700," Is that a add or is that a multiply or some stuff like that?"
7743700,7746060," So, we're already in Alexa."
7746060,7748600," We have equals."
7748600,7749480," All right."
7749480,7752300," So, which compares it to a text."
7752560,7756140," But now we want to be able to compare it to a C string."
7756140,7761780," So, we need a variant where the second one is actually const char."
7761780,7764200," Or we can turn it into a symbol."
7764200,7766560," Which is not ideal."
7766560,7768420," But that's something we can do."
7768420,7774320," Token text equal C string."
7774840,7775360," Right."
7775360,7776360," That's what we need."
7776360,7777680," Fortunately."
7777680,7780040," Right."
7780040,7781840," So, where is equals?"
7781840,7783260," I don't see equals."
7783260,7784160," Where is equal?"
7784160,7784960," Where is it?"
7784960,7785460," Okay."
7785460,7786600," This is where it's defined."
7786600,7788260," It's a little bit annoying."
7788260,7789620," Not going to lie."
7789620,7791520," It's a tiny bit annoying."
7791520,7794660," But it's kind of similar to what we're going to be doing here anyway."
7794660,7798140," It's just like for the size of the B, we're going to do sterling B."
7799280,7799680," Right."
7799680,7801020," And that's actually it."
7801020,7801600," Believe it or not."
7801600,7802480," So, basically."
7802480,7804540," So, it's the same thing."
7804540,7806400," It's just like we use sterling instead."
7806400,7810000," So, and we're going to be doing a sequence of those things."
7810000,7810400," Right."
7810400,7813120," So, depending on what it is, it's just going to be a different thing."
7813120,7816200," So, if this thing."
7816200,7818660," So, the first one is the token, which is T."
7818660,7820620," And what is it equal to?"
7821020,7823240," So, what do we have, first of all?"
7823240,7827200," And I suppose we have things like random, right?"
7827200,7833580," Elsev, x, and so on and so forth."
7833580,7834680," Let's fucking go."
7834680,7836380," Let's fucking go."
7836380,7837720," X, Y."
7837720,7843500," So, random x, y, add malt."
7844460,7847100," And so far, that's it."
7847100,7847460," Right."
7847460,7848400," So, far that's it."
7848400,7851440," So, I'm going to just put only else in here."
7851440,7855140," And if it's something else, we're going to be treating it as a rule."
7855140,7855480," Right."
7855480,7856400," So, this is the rule."
7856400,7857440," Okay."
7857440,7859180," So, if it's a random."
7859180,7860560," So, what do we do?"
7860560,7862600," Node random."
7862600,7863780," We already have a node random."
7863780,7865080," So, I can just define it in here."
7865080,7871120," But node random actually uses the location, the current location."
7871120,7874980," So, what we have to do instead, we have to do something like this."
7874980,7887640," So, it's going to be, not really file, but more like T location file path and T location row."
7887640,7890020," That's it."
7890020,7896780," Now, look, boom, x, boom, y."
7901120,7905120," Isn't that epic?"
7905120,7906420," Isn't it epic?"
7906420,7907500," I think it's pretty epic."
7907500,7912200," So, all right."
7912200,7914060," So, maybe here is somewhere I can do to do."
7914060,7916500," All right."
7916500,7917900," So, this is going to be add."
7917900,7920120," Multiply."
7920120,7921240," And this one is rule."
7922680,7925360," So, if it's a punctuation, right?"
7925360,7929300," So, we also need to check that."
7929300,7930820," What kind of punctuation is it?"
7930820,7931540," So, it's punct."
7931540,7933740," Index has to be."
7933740,7935660," You know what?"
7935660,7936220," Fuck that."
7936220,7941240," So, vex3."
7941240,7944020," Yeah."
7944020,7946160," Don't really want to deal with that."
7946260,7948620," So, it was a kind of cool idea, but whatever."
7948620,7950120," Whatever."
7950120,7951640," Yes."
7951640,7952240," Yes."
7952240,7952740," Yes."
7952740,7954280," So, that just makes it easy."
7954280,7955740," That just makes it easy."
7955740,7957580," So, in terms of add."
7957580,7958420," All right."
7958420,7960060," So, in terms of add."
7960060,7961560," We probably have add."
7961560,7968840," So, it gives us..."
7968840,7969940," So, this is binop."
7969940,7970500," Look at that."
7970500,7971360," Look at that."
7971360,7971780," Look at that."
7971780,7972880," So, this is binop."
7973920,7977380," So, we already have file path and row."
7977380,7979760," We can put all of that stuff in here."
7979760,7982200," File path and row."
7982200,7985300," But the question is where we get LHSs."
7985300,7986140," All right."
7986140,7988360," So, we can do something like LHS."
7988360,7990520," RHS."
7990520,7991380," All right."
7991380,7993340," So, and we can say, okay."
7993340,7995700," ParsePayer."
7995700,7997820," Look at that."
7997820,7999480," ParsePayer."
8001360,8004140," If not, fail."
8004140,8005080," ParsePayer."
8005080,8007080," If not, then fail."
8007080,8013680," Yep."
8013680,8017140," And we just do node."
8017140,8024200," Can repeat the same shit for multiplication."
8027160,8031080," Except that instead of add, we have to use molt."
8031080,8033640," And vector3."
8033640,8041760," That's basically, you know, first, second, third."
8041760,8048460," Parse, triple, first, second, third."
8049540,8054540," Node, triple, lock."
8054540,8060000," So, that's what we have in here."
8060000,8061860," So, this is the file in line."
8061860,8065680," Look at that."
8065680,8066440," Look at that."
8066440,8069640," So, copy-pasting."
8069640,8071420," Copy-pasting, triple."
8071420,8072820," Yeah."
8072820,8077640," So, and rule."
8077640,8081160," Rule is literally just that."
8081160,8085260," So, we do have a node rule, which accepts literally the tokens."
8085260,8086240," So, it's going to be node."
8086240,8088040," Yeah, this one is a node."
8088040,8090220," Node rule."
8090220,8091240," Team."
8091240,8093840," Holy shit."
8094800,8098120," So, here we probably need to expect a symbol."
8098120,8098480," Right."
8098480,8104080," So, Alexa, expect, this is the kind, please."
8104080,8105120," Please expect kind."
8105120,8107660," So, it's going to be L, Alexa kind."
8107660,8113920," If it's not worked out, if it's not what we want, we just return false."
8113920,8118380," So, which means that I can just do this kind of stuff without any of this stuff."
8118380,8119380," Right."
8119440,8122080," So, we don't have to worry about any of these things."
8122080,8128040," Believe it or not, that should be it."
8128040,8129660," Believe it."
8129660,8131640," I can't believe that, but I think that's it."
8131640,8132900," I think that's it."
8132900,8136780," So, yeah."
8136780,8138780," We just hardcoded a bunch of things in here."
8138780,8141140," And, yeah."
8141140,8142460," Let's fucking go."
8142460,8144400," Go through the compilation errors."
8144960,8153060," Punct, expect, punct, operon, int, what you don't fucking like."
8153060,8156580," Oh, because I forgot to put T in here."
8156580,8157200," Okay."
8157200,8159380," So, I copy-pasted the mistake."
8159380,8160100," Fucking classic."
8160100,8160400," Okay."
8160400,8162900," So, that's fine."
8162900,8163460," That's fine."
8163460,8164900," We can overcome."
8164900,8170140," We are fucking overcoming right now."
8170140,8177100," So, sometimes we are undercoming."
8177100,8181300," But, right now, we're overcoming."
8181300,8183980," So, this is an used variable."
8183980,8184900," That's fine."
8184900,8186000," What do we have in here?"
8186000,8186480," Command."
8186480,8188740," It's just exited with some bushise."
8188740,8191240," We forgot to put true in here."
8191240,8194200," And we also forgot to put true in here."
8194200,8200440," So, let me actually do just build without the run."
8200440,8201060," Let's..."
8201060,8201460," Okay."
8201460,8204460," I think we did it, chat."
8204460,8207800," It's probably going to crash with a subfold."
8207800,8210200," And I'm going to spend a lot of time debugging it."
8210200,8216520," But, logically, logically, theoretically, we fucking did it, mate."
8216520,8218640," Fucking did it."
8219580,8224920," One of the things we probably want to do afterwards, we want to just say grammar print."
8224920,8227080," And we're going to just put a grammar in there."
8227080,8227840," Right."
8227840,8229060," So, we parsed the grammar."
8229060,8232160," Let's fucking try to print this motherfucker now."
8232160,8234840," So, will it print the same thing or will it not?"
8234840,8236000," That's a good question."
8236000,8237240," That's a good question."
8237240,8239340," So, okay."
8239340,8240520," So, I'm going to try to do that."
8240520,8242060," All right."
8242060,8243200," So, let's do run."
8243200,8247640," Exited with exit1."
8249320,8249740," Very funny."
8249740,8251100," Didn't crash."
8251100,8253400," Didn't crash, mind you."
8253400,8255760," It just means that..."
8255760,8257060," Yeah."
8257060,8259220," So, why is it return zero, though?"
8259220,8262080," So, this should not be return."
8262080,8265120," So, we should actually go round and round and round."
8265120,8266740," Expect subfold."
8266740,8267340," Yeah, exactly."
8267340,8268380," That's what we need to do."
8268380,8270440," Okay."
8270440,8271720," Okay, good."
8271720,8276000," Okay."
8276000,8277120," So, let me see."
8277300,8279920," Can we just do a little bit of a diagnostic chat?"
8279920,8284560," So, this is one of the symbols."
8284560,8288600," Let me try to do L."
8288600,8290200," Diag."
8290200,8290720," F."
8290720,8291300," T."
8291300,8291900," Log."
8291900,8293440," Trace."
8293440,8297680," And we can just put"
8297680,8306140," the token FNC, Alexa, token org."
8306140,8308820," All right."
8308820,8311220," So, I just want to see how it's going to perform."
8311220,8312040," We've got E."
8312040,8313560," Uh-huh."
8313560,8316940," So, and on the next iteration, we've got nothing."
8316940,8318860," Okay."
8320060,8321340," So, that's kind of cool."
8321340,8323320," So, if I do something like this."
8323320,8325000," So, we're kind of debugging."
8325000,8325700," All right."
8325700,8326980," So, it's still got there."
8326980,8332360," But then, at some point, parse branches have failed."
8332360,8334880," Somehow."
8336040,8338560," Even though we returned true afterwards."
8338560,8341860," I wonder at which point it failed."
8341860,8342860," So, we expected."
8342860,8345120," So, this thing didn't print anything."
8345120,8347760," This thing didn't print anything."
8347760,8351160," So, let's actually do the debugging."
8351160,8354600," I think doing the debugging would be beneficial to us."
8354600,8357480," So, we're going to be going into the parse grammar branches."
8359480,8361340," It's debugging time."
8361340,8364780," Debugger working time."
8364780,8369460," So, let's go here."
8369460,8371580," GF2, maybe."
8371580,8375200," Let's do GF2, yes."
8375200,8380920," It's kind of annoying in terms of knob."
8380920,8383540," But, I mean, maybe not really."
8383540,8384420," So, what do we have?"
8384420,8385100," Do we have GGB?"
8385100,8385400," Okay."
8386840,8390620," So, GF2 build."
8390620,8391500," What is it called?"
8391500,8392120," I forgot."
8392120,8394320," Random R."
8394320,8395960," All right."
8395960,8399840," So, I forgot how to increase the font."
8399840,8402120," So, it's not particularly visible for people."
8402120,8404320," But, that's fine."
8404320,8407380," How I was running this whole thing."
8407380,8412380," So, parse this stuff."
8412380,8412720," Okay."
8412720,8416540," Oh, my God."
8416660,8417900," It broke everything."
8417900,8421540," So, break at here."
8421540,8422560," Thank you."
8422560,8427160," Run, parse, grammar, BNF."
8427160,8427680," Boom."
8427680,8428240," Okay."
8428240,8428880," Cool."
8428880,8429480," Fine."
8429480,8430640," Now, let's fucking go."
8430640,8432040," Okay."
8432040,8433040," So, here's the token."
8433040,8433660," We've got the name."
8433660,8436020," We can even take a look at the fucking name, mate."
8436020,8437520," Let's take a look at the name."
8437520,8442800," So, begin."
8442800,8443720," Yeah, it's E."
8443720,8444900," So, that's correct."
8444900,8446600," I can confirm that."
8446600,8449360," Not quit."
8449360,8450340," Okay."
8450340,8452060," Save the state."
8452060,8453020," Get the token."
8453020,8453900," Quit."
8453900,8456600," So, punct index."
8456600,8457580," It's either."
8457580,8460240," So, this is a bar."
8461120,8463280," So, we're rewinding this entire thing."
8463280,8464120," So, that's fine."
8464120,8465260," We're going into that."
8465260,8468700," So, let's go into the parse grammar branch."
8468700,8469200," Okay."
8469200,8470680," So, this is a single branch."
8470680,8472620," So, we're saving the state."
8472620,8473740," Okay."
8473860,8475320," Why did you go there."
8475320,8475600," Why did you go there?"
8475600,8475700," Why did you go there?"
8475700,8476040," Okay."
8476040,8479960," So, all right."
8479960,8482280," Okay."
8482280,8483660," All right."
8483660,8485120," All right."
8485120,8487620," Parse in the nodes."
8487620,8490140," Not node return false."
8490280,8491460," So, this one is fine."
8491460,8491860," Okay."
8491860,8494600," So, what do we have in here?"
8494600,8498800," Get node symbol."
8498800,8500540," All right."
8500540,8502000," It's not random."
8502000,8506640," So, it's x, y, add, multiply, vec."
8507700,8508200," Okay."
8508200,8510480," So, maybe something within the triple then."
8510480,8511340," Okay."
8511340,8513640," Is it open parent?"
8513640,8514900," Okay."
8514900,8518720," Let's try to parse the node."
8518720,8520200," Aha."
8520200,8524020," It couldn't parse the node."
8524020,8524860," Ah."
8524860,8526880," Yeah."
8526880,8532020," So."
8537700,8540720," Let me take a look at the grammar in here."
8540720,8543240," So, it couldn't parse this thing."
8543240,8544620," It couldn't parse just C."
8544620,8545840," Just unknown symbol."
8545840,8547580," Aha."
8547580,8550580," So, why couldn't it parse it?"
8550580,8551000," Let's see."
8551000,8553420," Parse node."
8553420,8556940," Parse node."
8556940,8558720," Grandma grammar."
8558720,8559440," Yeah, exactly."
8559440,8563940," So, you should be able to just do that."
8563940,8564920," I don't understand."
8564920,8566300," So, it's just a symbol."
8566300,8567560," Brof, brof, brof."
8567980,8568920," So, what's up with that?"
8568920,8569500," Okay."
8569500,8572860," So, at least I know where to go."
8572860,8574040," Parse triple."
8574040,8574680," Right."
8574680,8576100," So, let's actually go there."
8576100,8578260," Yeah."
8578260,8579180," So, let's quit."
8579180,8580120," Break."
8580120,8582080," I want to kind of restart."
8582080,8586100," Break."
8586100,8586940," Parse triple."
8586940,8588380," Run."
8588380,8590260," Parse grammar."
8590260,8591220," Boom."
8591220,8593800," So, yeah."
8593800,8594680," Parse branches."
8594680,8595520," Parse node."
8595520,8596540," Parse triple."
8597300,8600080," And now, let's see."
8600080,8601100," Let's see."
8601100,8601540," Let's see."
8601540,8601980," Let's see."
8601980,8605300," So, because I did a little bit of a copy-pasting here and there."
8605300,8608080," So, first, blah, blah, blah."
8608080,8608440," Okay."
8608440,8610520," Uh-huh."
8610520,8613040," You can kill NGF to restart."
8613040,8614000," Probably."
8614000,8616900," I'm in the middle of solving problem."
8616900,8618240," I'm not learning anything new."
8618980,8619400," Okay."
8619400,8620280," I see."
8620280,8621360," Not parse."
8621360,8622660," Okay."
8622660,8625140," So, that's basically what's happening here."
8625140,8626700," Not parse."
8626700,8631640," I understand that there's some things."
8631640,8632660," It requires learning."
8632660,8634820," I'm in the middle of resolving the problem."
8634820,8636240," I'm not going to be doing that."
8636440,8636600," All right."
8636600,8639380," So, I'm going to be just doing whatever reflexes allow me to do."
8639380,8640420," All right."
8640420,8641880," So, cool."
8641880,8649900," Okay."
8651600,8652220," All right."
8652220,8653220," So, trace."
8653220,8654380," Okay."
8654380,8656160," Okay."
8656160,8658560," And then it's perfect."
8658560,8659700," Grammar print."
8659700,8660320," Let's fucking go."
8660320,8660700," Okay."
8660700,8662660," So, four size ti."
8662660,8665020," Grammar count."
8665020,8666180," Let's plus i."
8666680,8670000," So, here we're going to do just printf."
8670000,8671160," Okay."
8671160,8673700," So, Alexa."
8673700,8678180," So, I think it's a token FMC."
8678180,8681540," And I think we can just like print it like that."
8681540,8681780," Right."
8681780,8683180," So, it's just going to be new name."
8683180,8685360," Alexa token."
8685360,8687760," Token arg."
8687760,8691300," Grammar items."
8691300,8694360," What am I doing?"
8695860,8697640," It's just a name."
8697640,8697900," Right."
8697900,8698880," I didn't need that."
8698880,8701880," Do I store the..."
8701880,8702040," Yeah."
8702040,8702740," I think I do."
8702740,8704560," Yeah."
8704560,8709280," It's just grammar items name."
8709280,8710980," Yeah."
8710980,8711940," That's what it is."
8711940,8714400," So, for now, let's actually do something like this."
8714400,8714780," Right."
8714780,8716580," So, let's just only print their names."
8716580,8718180," Okay."
8718180,8719720," So, let's get rid of the trace."
8719720,8723020," I don't think it's needed."
8723020,8725400," So, here are the names of the rules."
8725400,8725840," Here are the names of the rules."
8725860,8726900," Here are the names of the rules."
8726900,8728040," That's very cool."
8728040,8731860," Now, randomfart."
8731860,8734040," Bro."
8734040,8736880," Emacs."
8736880,8743140," It actually freaking ranked the file that I recently visited at the bottom."
8743140,8745580," Anyway, I'm sorry."
8746580,8747080," So, size t grammar."
8747080,8754980," So, I think I want to do the following thing."
8754980,8760100," So, grammar branches branches."
8760100,8764440," So, I can take this thing."
8764440,8771540," Branches at branches count plus plus j."
8771760,8775780," So, we're going to be printing with a little bit of an indentation."
8775780,8788780," Then, we're going to print the weights for each individual branches."
8788780,8789100," I suppose."
8789100,8789460," Right."
8789460,8790540," So, that makes sense."
8790540,8792020," So, it's going to say stk."
8792020,8796960," K less than branches."
8799380,8802460," Yeah, we need to have a specific branch."
8802460,8804280," Grammar branch."
8804280,8805440," Brunch."
8805440,8810260," Branches items j."
8810260,8811840," That's what we have."
8811840,8816480," And for a specific branch, we're looking at its weight."
8816480,8819000," Plus plus k."
8819140,8821680," And we're just spamming bars."
8821680,8825200," Printf bar."
8825200,8826480," Like so."
8826480,8831260," Might as well, maybe, inline it so it's, you know, a little bit nicer."
8831260,8833300," So, this is space."
8833300,8835440," A bunch of bars and everything."
8835440,8836420," So, afterwards."
8836420,8843920," So, this is for a specific branch, right?"
8844060,8850420," So, and then what I need to do, I need to print node."
8850420,8851920," I think I already have a print node."
8851920,8854380," Yeah, node."
8854380,8858060," Yeah, I already have a print node."
8858060,8861480," So, I can just reuse this shit, I think."
8861480,8866300," So, for a specific branch, it's just a node like so."
8866400,8868980," And it also automatically puts a new line in there."
8868980,8873140," So, there is a little bit of a difference between how we print the triple."
8873140,8874500," But that's fine."
8874500,8876340," We just want to output some stuff."
8876340,8877160," Right."
8877160,8881600," At the end of this thing, I want to put this with new line."
8881600,8886380," Maybe even with a space like that."
8886380,8890000," It didn't fucking compile."
8890000,8891800," Branch."
8895800,8901580," Yeah, that, well, I mean, okay."
8901580,8906440," So, it's just a demonstration that it parsed it correctly."
8906440,8910520," So, yeah, so that's cool."
8910520,8916740," We managed to parse everything."
8916740,8917500," Look at that."
8917500,8920900," Look at fucking that mate."
8920900,8923260," Look at fucking that mate."
8925200,8930260," So, what if we can't find some of the grammar?"
8930260,8933640," Oh, boy."
8933640,8934180," All right."
8934180,8935440," So, how much time did it take?"
8935440,8936760," It's already three hours."
8936760,8937080," Right."
8937080,8938640," So, let's see."
8938640,8940820," And it's not even perfect yet."
8940940,8956720," Because I think if you try to refer to a non-existing thing, it is going to, to a non-existing name, it will assume it's a rule."
8956720,8963920," But then, if you try to use that rule, the generation is going to assert something."
8964140,8965140," Okay, so, I think I know."
8965140,8965140," Okay."
8965140,8965300," So, I think I know."
8965300,8966760," So, gen rule."
8966760,8970500," So, generate rule."
8970500,8971640," Where is the gen rule?"
8974040,8979660," So, where is the function grammar branch?"
8981760,8984280," I forgot how it is called."
8984280,8990480," So, the function that get grammar branch by a name."
8991560,8993340," I literally forgot."
8993340,8997480," Append, not append branches."
8997480,8998220," Not that one."
8998220,9000120," What was that called?"
9000120,9000900," Fuck."
9000900,9001280," Okay."
9001280,9004160," Arse branches."
9004160,9007400," So, I just need to find this function."
9009340,9011420," What is it fucking called?"
9011420,9017320," When you gen node, you can gen rule."
9017320,9023100," Branches by holy shit."
9023100,9023320," Okay."
9023320,9024280," So, this is what I mean."
9024280,9024840," Okay."
9024840,9033700," So, if it is null, I think what we have to do, we literally have to just freaking."
9033700,9034940," Oh, yeah."
9034940,9036360," This is dangerous, right?"
9036360,9044440," So, what we have to do, if branches, branches equal to null, just return with null."
9044440,9045840," That's what we need to do."
9045840,9049820," Then, here, we have to do diagnostics."
9049820,9051580," We have to do diagnostics."
9051580,9059440," So, maybe we're going to use Alexa, you know, default diag, which is not a good idea, right?"
9059440,9061180," So, because, whatever."
9061180,9065180," So, we don't have much time."
9065180,9066280," So, here is the grammar."
9066280,9069000," Yeah."
9069000,9072420," So, we're going to do rule, location, error."
9072420,9079080," Rule is, rule this thing, Alexa token."
9079080,9084800," Something is making my laptop work extra hard, and I don't really know what."
9087760,9089440," So, just a second, I think."
9089440,9091600," No, nothing special."
9091600,9093040," So, but it's..."
9093040,9093960," Maybe it's LBS."
9093960,9095380," Or maybe it's Chatterina."
9095380,9100160," Freaking Chatterina is just, like, actually eating up the CPU."
9100160,9101540," What the fuck?"
9101540,9104020," Let me restart Chatterina."
9104020,9105140," Something weird."
9107940,9108280," Yeah."
9108280,9113120," All right."
9113120,9114160," So, that would be done."
9114160,9121040," So, token FMT rule..."
9121040,9124280," Is..."
9124280,9125940," Too many pogs, maybe."
9125940,9128780," Rule does not exist."
9128780,9131280," So, does not exist."
9131400,9132180," Now, it's fine."
9132180,9134000," So, maybe just, like, it was weird."
9134000,9135320," Okay."
9135320,9135600," Okay."
9135600,9138000," So, Alexa token arg."
9138000,9142080," And we're just going to say that this rule does not exist."
9142080,9146400," Since it contains the location, it's probably going to point at the right location, hopefully."
9146400,9147880," Right."
9147880,9148600," Okay."
9148860,9151820," So, but it's only during the generation and stuff like that."
9151820,9159860," So, I need to tuck away this process into separate functions."
9159860,9163040," So, we need to have something like a parse grammar."
9163040,9168600," So, bool parse grammar."
9168600,9171220," So, this is going to be Lexa."
9171220,9173480," And this is going to be grammar."
9174480,9179040," And we're going to move this entire thing there."
9179040,9183040," So, it's going to be parse grammar."
9183040,9184740," Lexa grammar."
9184740,9186180," It's not."
9186180,9190020," It's going to be return one."
9190020,9195200," So, something like that."
9195200,9197540," Parse grammar."
9197540,9198020," Okay."
9198020,9202460," So, and that's probably going to be something like this."
9202460,9203400," Right."
9203480,9204900," So, I'm going to put that stuff in here."
9204900,9206580," Uh-huh."
9206580,9209460," So, everything is stacked away."
9209460,9211240," Doesn't fucking compile."
9211240,9215020," Because, yeah, we need to put token in there."
9215020,9216540," Uh-huh."
9216540,9220160," So, all of that stuff should also go into that function."
9220160,9221920," All of that stuff."
9221920,9225480," So, it didn't properly align shit."
9225480,9226100," Okay."
9226100,9226920," Are you aligned now?"
9226920,9228320," Why are you not aligned, bruv?"
9228320,9230900," Bruv, what the fuck is wrong with you?"
9230900,9232360," Like, align, please."
9232360,9234980," What the fuck am I even looking at?"
9234980,9235180," Okay."
9235180,9235720," So, finally."
9235720,9236440," Thank you."
9236440,9237160," All right."
9237160,9237420," All right."
9237420,9237440," All right."
9237440,9237640," All right."
9237640,9238020," Let's go."
9238020,9239280," What else do we have in here?"
9239280,9240460," So, this is not a pointer."
9240460,9242400," Not a pointer."
9242400,9243720," Okay."
9243720,9244000," Whatever."
9244000,9245640," What do they want?"
9245640,9247460," What's the other thing?"
9247460,9248740," What do they want?"
9249740,9252080," So, this is not a pointer, right?"
9252080,9253460," So, it's not a pointer as well."
9253460,9255340," What else do they want?"
9255340,9257440," They want a pointer?"
9257440,9258860," Yeah."
9258860,9259520," You want a pointer."
9259520,9260900," You're fine."
9260900,9261420," You're fine."
9261420,9262200," You're just control."
9262200,9263660," Return false."
9263660,9266880," But here, we also have return in case of an error."
9266880,9268460," So, that has to be false."
9268460,9270740," That has to be false."
9270740,9271600," Let's fucking go."
9271600,9273320," All right."
9273400,9275000," I fucking exited with error."
9275000,9275900," Fuck you."
9275900,9277320," All right."
9277320,9279260," So, I wonder why."
9279260,9280720," So, because it has to be true."
9280720,9281760," It has to be true."
9281760,9283000," Yeah."
9283000,9283260," Yeah."
9283260,9283540," Yeah."
9283540,9283860," Boy."
9283860,9284480," Boy."
9284480,9284960," Let's go."
9284960,9285520," Let's fucking go."
9285520,9285680," Okay."
9285680,9287540," So, we actually compressed everything."
9287540,9289080," Super fucking nice."
9289080,9297300," So, that means here, we can move this entire thing into GUI."
9297300,9298360," All right."
9298360,9300500," So, we're moving this entire thing into GUI."
9300500,9303100," Instead of doing this entire shit."
9303220,9305140," Oh, now we have to come up with the entry."
9305140,9308500," Oh, boy."
9308500,9309100," Okay."
9309100,9311880," So, I suppose entry could be just the first thing."
9311880,9316740," Let's use the first rule as an entry."
9316740,9317180," Whatever."
9317180,9317700," Fuck that."
9317700,9320300," Okay."
9320300,9321960," So, we're not predicting grammar or anything."
9321960,9324740," So, here's the grammar."
9324740,9326020," Blah, blah, blah."
9326020,9331060," So, grammar definition."
9331060,9332440," Fuck that."
9333040,9335280," So, usage, blah, blah, blah."
9335280,9336920," Input path."
9336920,9337720," We're reading that."
9337720,9339900," Then, we're setting up this entire thing."
9339900,9342360," So, it's just a grammar parsing it."
9342360,9344460," And so, it's not going to compile."
9344460,9345060," Right?"
9345060,9346120," Because there's no entry."
9346700,9357380," And the entry is going to be, the entry is going to be, the first thing."
9357380,9368880," So, we probably have to assert, well, I mean, yeah, we need to assert that grammar count is greater than zero."
9368880,9370000," So, we have at least something."
9370000,9376060," So, grammar, blah, blah, blah, blah, blah, blah, blah, blah, blah, items, I, name."
9376060,9377180," So, that's the entry."
9377180,9379420," So, we'll just take the first one as an entry in here."
9379420,9380260," It didn't fucking work."
9380260,9381280," Zero."
9381640,9383240," Of course, what else do we have in here?"
9383240,9383680," SB."
9383680,9386100," So, there is a redefinition of SB."
9386100,9388060," Is that what you're trying to tell me, bruv?"
9388060,9390240," Is that what you're trying to tell?"
9390240,9391340," Oh, my God."
9391340,9391580," Okay."
9392580,9397180," So, it should be two separatists, Bs."
9397180,9402500," How do you call that?"
9402500,9405060," Source."
9405060,9407100," SRC."
9407100,9408140," Okay."
9408140,9409340," Let's fucking go."
9409340,9410680," So, this is SRC."
9410680,9412320," Anything else?"
9412320,9414100," SRC."
9414100,9415300," SRC."
9415300,9417080," Okay."
9417080,9418240," And now on command parse."
9418240,9418840," That's cool."
9418840,9420240," We."
9422580,9423060," All right."
9423060,9425700," It's static."
9425700,9428600," You know why it is static."
9428600,9431080," You know why it is static."
9431080,9434480," It is static because we never use T."
9434480,9437260," But now we can just add T."
9437260,9440880," And it's dynamic."
9440880,9444760," Ah."
9444760,9448200," Rule T does not exist."
9448200,9448460," Okay."
9448460,9452260," So, does not exist."
9452580,9453820," We return null."
9453820,9455620," Ah."
9455620,9458260," Oh, it doesn't crash."
9458260,9459600," It just..."
9459600,9460980," Ah, that's kind of fun."
9460980,9466460," The way our generation works,"
9466460,9469380," if it encounters non-existing rules,"
9469380,9473460," it tries again until it hits the generation"
9473460,9475280," that doesn't use that rule."
9475360,9476540," That's why it's just..."
9476540,9477820," Holy fucking shit."
9477820,9479960," That is so fucking..."
9479960,9481220," This is not what we want,"
9481220,9482520," but that is fucking funny."
9482520,9483100," Right."
9483100,9485460," Remember how our dumb generation works?"
9485460,9487380," It tries different things."
9487380,9488380," Right."
9488380,9490040," It tries, like..."
9490040,9491720," Tries different things."
9491720,9492660," And if it fails,"
9492660,9494680," it just unwinds and tries again."
9494820,9496340," So, it was hitting T."
9496340,9499060," It failed pick up T"
9499060,9500060," because rule doesn't exist."
9500060,9502140," So, it was unwinds and trying different things."
9502140,9503440," And it succeeded eventually."
9503440,9504780," So..."
9504780,9508340," That is fucking funny."
9508340,9508820," I love it."
9508820,9509500," Holy shit."
9509500,9511640," It's unexpected,"
9511640,9512640," but it's just like..."
9512640,9513600," It makes sense, I guess."
9513600,9515260," Yeah."
9515400,9516040," So, anyways."
9516040,9517140," So, what we need to do,"
9517140,9518260," we need to add T."
9518260,9518760," Right."
9518760,9522140," So, how are we going to be doing all that?"
9522140,9523160," So, parse node."
9523160,9525120," Right."
9525120,9526360," So, yeah."
9526360,9526960," Let's fucking go."
9526960,9529520," So, we'll just add T in here."
9529520,9532560," It's kind of an interesting approach."
9532560,9532960," Right."
9532960,9534600," So, now, it's dynamic."
9534600,9534940," Right."
9534940,9536040," So, because it has T now."
9536040,9537980," Yeah."
9537980,9540600," So, we can redefine shit and everything."
9540600,9544760," We can probably add SQ or T,"
9544900,9545900," but it doesn't exist."
9545900,9546200," Right."
9546200,9546900," So, obviously."
9546900,9549860," How can we add a SQ or T?"
9549860,9551840," So, let me..."
9551840,9555580," Let me try maybe like a SQ or T of C."
9555580,9556420," Right."
9556420,9557880," So, that's an interesting idea."
9557880,9560220," So, it's probably going to fail."
9560220,9560560," Right."
9560560,9562160," So, because expected..."
9562160,9562420," Yeah."
9562420,9563080," Right."
9563080,9565700," So, it's thought that we're referring to a rule."
9565700,9568780," So, now, what I can do in here,"
9568780,9570420," I can probably add a SQ or T."
9570420,9572540," All parent."
9572540,9574120," Yeah."
9574400,9577780," So, let's do something like this."
9577780,9580560," If you encounter that,"
9580560,9582160," we just do oparm,"
9582160,9584180," and then we do"
9584180,9586780," C param."
9586780,9590420," Node SQ or T."
9590420,9592520," Yeah."
9592520,9594380," So, it's a UNOP."
9594380,9595180," Right."
9595180,9596440," So, this is a UNOP."
9598360,9603800," And I can put node like this."
9603800,9606100," Then, parse node."
9606100,9609400," Lexa UNOP."
9609400,9611520," Uh-huh."
9611520,9613620," If it fails, it fails."
9613620,9614660," Return false."
9614660,9618480," Then, node that."
9618480,9621440," Can I copy-paste some shit?"
9621520,9621680," Yeah."
9621680,9622900," I don't want to..."
9622900,9624640," I don't want to type it."
9624640,9627340," Uh-huh."
9627340,9629280," Cool."
9629280,9633320," This is not how it should be."
9633320,9633720," Yeah."
9633720,9635560," So, UNOP."
9635560,9636520," Or is that?"
9636520,9638960," And we expect it to be closed, like so."
9638960,9643520," It doesn't fucking compile because if I go to coma, let's fucking go."
9643520,9644060," Ooh."
9644060,9647740," Ooh."
9647740,9649340," Does it..."
9649340,9651080," It doesn't even say any errors."
9652480,9657260," That is because of SQ or T."
9657260,9659220," All right."
9659220,9668300," So, if I get rid of SQ or T, it's going to be as usual."
9668300,9671820," Negative numbers, probably."
9671820,9672080," Yeah."
9672080,9677580," So, one of the things we can do, we can just, like, malt."
9677580,9679460," Ah."
9679460,9680760," It's not going to be that easy."
9682280,9683640," Uh, yeah."
9683640,9685840," Bah."
9685840,9687160," Yeah."
9687160,9688460," So, let's just remove that."
9688460,9690900," Now, it is super easy to modify the grammar."
9690900,9692020," This is actually super cool."
9692020,9692800," ABS."
9692800,9694240," We can try to add ABS."
9694240,9700480," But we, like, that requires adding the node on all levels of the, of the abstraction."
9700480,9703100," But we can try to fucking do that nonetheless."
9703100,9703520," Right."
9703520,9707340," So, how easy it is to add the node on all level of obstructions."
9707340,9707800," Right."
9707800,9710760," So, we don't have assignment."
9710760,9711640," What are you talking about?"
9712080,9713000," Uh, all right."
9713000,9717340," So, oh, you mean the, a separate rule."
9717340,9719200," No, that's not how it works."
9719200,9721080," Uh, okay."
9721080,9725280," So, ABS."
9725280,9726440," Let's add ABS."
9726440,9728800," And how many places we have to change, make the changes."
9728800,9729200," Okay."
9729360,9730360," So, here's that."
9730360,9730400," So, here's that."
9730400,9731400," 15."
9731400,9733680," Uh, right."
9733680,9737420," So, let's add near security."
9737420,9739340," So, this is going to be ABS."
9739340,9741380," Uh, ABS."
9741380,9746620," Uh, so let's not, you know, run it."
9746620,9748380," What else do we have?"
9748380,9750600," Uh, print node."
9751480,9752360," Uh, security."
9752360,9752460," Uh, security."
9752460,9752820," Uh, yes."
9752820,9753200," Uh, yes."
9753200,9754820," Uh, yes."
9754820,9755820," Uh, yes."
9755820,9756820," Uh, yes."
9756820,9760760," Uh, evaluation."
9760760,9763980," That one is interesting."
9763980,9764780," Uh, so, ABS."
9764780,9766960," Uh, so, ABS."
9766960,9769040," Unop."
9769040,9771120," Uh-huh."
9771120,9772220," Right-hand-side."
9772220,9775480," Uh, ABSF, I suppose."
9775480,9776400," Is that how we do that?"
9776400,9778500," Man, ABSF."
9778500,9780020," It's a FOBS."
9780020,9781880," FOBSF."
9781880,9784240," FOBSF."
9784240,9785020," Uh, okay."
9785100,9793840," So, generate the node, a security, um, B, S."
9793840,9797860," Maybe I can do something like, security, ABS."
9797860,9800240," So, that's the only thing in here."
9800240,9801260," Okay."
9801260,9804120," What's the last one?"
9804120,9806420," It's when we compile it into shader."
9806420,9811340," So, I suppose it's just ABS, uh, right, in the shader."
9814220,9814640," Mm-hmm."
9814640,9817020," Come on, come on."
9817020,9820740," It's already done."
9820740,9822860," So, what else do we have?"
9822860,9823920," Uh, okay."
9823920,9829960," So, we can kind of do a similar thing."
9829960,9832580," Uh, okay."
9832580,9833960," Place the security of this."
9833960,9836920," Yeah."
9836920,9839440," All right."
9839440,9841840," So, security."
9843340,9847800," Um, it's like this."
9847800,9848940," So, it's like this."
9848940,9852600," Kind of interesting, you know?"
9852600,9856060," Mm-hmm."
9856060,9857980," Let's go."
9857980,9867200," Holy shit."
9869120,9872520," This is a plot, like a parabolas in this chat like that."
9872520,9873280," Wait a second."
9873280,9874780," I want to increase the depth."
9874780,9876260," Uh, depth 40."
9876260,9877360," Uh."
9877360,9879960," Damn."
9879960,9882760," Holy shit."
9882760,9886340," Oh, ho, ho, ho, ho."
9886340,9888520," This is so fucking..."
9888520,9889200," Oh, my God."
9889200,9890440," We need more functions."
9890440,9893940," We need more fucking functions for different things."
9894900,9896260," That is insane, bro."
9896260,9897620," Okay."
9897620,9901220," So, I think 50 probably going to be too much, but we can try."
9901220,9904300," Uh, so it's compiling the..."
9904300,9905160," Oh, it's too much."
9905160,9905920," It's definitely too much."
9905920,9907000," Let's not do 50."
9907000,9907900," It's going to be 14."
9907900,9912840," All right."
9917360,9922060," It creates this line."
9922060,9922940," So, we never..."
9922940,9923640," Oh, my God."
9923640,9924540," This is so cool."
9924540,9927900," You know what I want to try to do?"
9927900,9931940," When I'm compiling the shader,"
9931940,9937520," let's not do a sign."
9937520,9941280," Let's actually let it grow indefinitely, maybe."
9946280,9948280," Yeah, well, I mean, it goes into the infinity,"
9948280,9950000," so it's kind of weird in that regard."
9950000,9957300," But maybe we can, I don't know, make it bigger."
9957300,9958160," Multiply by 10."
9958160,9959080," What if I multiply by 10?"
9959080,9960220," It's still always..."
9960220,9960920," Holy shit."
9960920,9968660," So, yeah."
9968660,9970800," Ooh."
9970800,9973080," Uh, what about, like, 3?"
9973080,9974360," So, I think it's too much."
9975660,9977300," So, it becomes too sharp."
9977300,9979620," Ooh, ooh, ooh, ooh, ooh."
9979620,9982260," Ooh, ooh, ooh."
9982260,9984380," What was the seed, bruv?"
9984380,9985900," Uh, wait a second."
9985900,9987120," So, seed is that."
9987120,9989340," Uh, let me..."
9989340,9993200," So, let's maybe render this thing."
9993200,9998660," Um, so when I render, what's the max duration?"
9999060,10000100," I don't quite remember."
10000100,10003400," Uh, where do I set the duration?"
10003400,10008880," Uh, max render length."
10008880,10010400," Render length."
10010400,10011940," So, it's like 4."
10011940,10013460," Let's do 2."
10013460,10013900," All right."
10013900,10014840," So, I think it's too much."
10014840,10017200," And maybe I should make it configurable like that."
10017200,10019660," Um, so..."
10019660,10021320," It's gonna be seed."
10021320,10023220," Let's put that seed in here."
10023220,10024380," Uh-huh."
10024440,10025500," So, that's..."
10025500,10027640," So, you can reproduce this thing via the seed."
10027640,10028900," Let's render this thing."
10028900,10032120," Mm-hmm."
10040240,10041620," Maybe make a seed record, yeah."
10041620,10043320," All right."
10043320,10044280," That's cool."
10044280,10047000," Uh-huh."
10047000,10049540," Maybe I should do it like that, right?"
10049540,10051440," So, maybe I should put parameters into the name."
10051440,10053200," Uh, right."
10053200,10053700," But there you go."
10053700,10056500," Uh, I opened..."
10056500,10057040," I'm an idiot."
10057040,10058120," I apologize."
10058120,10060940," So, it was the wrong thing."
10060940,10062440," Um..."
10062440,10067600," Man."
10070240,10071320," Holy shit."
10071320,10077440," Okay."
10077440,10078880," Let's try different seeds."
10078880,10079460," All right."
10079460,10080620," So, different other things."
10080620,10081980," That's kind of the same."
10081980,10083680," What are the interesting functions?"
10083680,10084860," So, exponent, right?"
10084860,10086760," Uh, is probably one of the interesting functions."
10086760,10087760," Right."
10087760,10092320," So, we can try to introduce that, uh, into the grammar."
10092320,10093680," Um..."
10093680,10094920," So, how are we gonna be doing all that?"
10094920,10095760," So, it's gonna be..."
10095760,10097800," Uh, log."
10099100,10100920," Uh, let's do exponents."
10100920,10103800," Uh, xp, c."
10103800,10107960," Uh, we have just straight up sin."
10107960,10111020," Uh, maybe."
10111020,10113380," Maybe we can try sin."
10113380,10116700," And sin, cosine."
10116700,10118860," We can try those."
10119720,10121900," But I don't think we have them yet."
10121900,10123580," No."
10123580,10127140," So, um..."
10127140,10128720," Let's try with just sign."
10128720,10129560," All right."
10129560,10131180," I don't think cosine is gonna add much."
10131180,10133340," All right."
10133340,10134540," Let's go through all this stuff."
10134540,10137020," 16."
10137020,10138800," SQRT."
10138800,10140520," Cure SQRT."
10140520,10141520," SYN."
10141520,10143680," Uh-huh."
10143680,10144520," SQRT."
10146520,10156900," So, that's a very interesting way to extend things, isn't it?"
10156900,10160840," Uh, so, SYNTH."
10160840,10162980," Uh, what's the next one?"
10162980,10164440," SQRT."
10164440,10167660," Uh-huh."
10167660,10169140," Current place."
10169140,10170060," Boom."
10170060,10172640," Uh, security."
10172640,10173260," Let's see."
10173260,10175860," Uh-huh."
10175860,10178200," Boom."
10178200,10179920," That's it."
10179920,10181460," All right."
10181460,10183140," So, SYNTH is not expected."
10183140,10184360," That's fine."
10184360,10189980," Uh, and, uh, so, we're just gonna add this thing here."
10189980,10193380," So, obviously, it would be better to compress this entire stuff."
10193380,10196500," But, uh, I have a limited time."
10196620,10200200," So, please understand."
10200200,10207000," That is going too fucking crazy."
10207000,10210500," What if we get rid of the SQRT?"
10210500,10211200," Right."
10211200,10212900," So, no SQRT for now."
10212900,10214740," Holy shit."
10214740,10217760," What the fuck?"
10217760,10218160," Okay."
10218160,10221400," So, um, that's, that's fun."
10223700,10224140," Okay."
10224140,10226260," So, let's not multiply."
10226260,10226560," Right."
10226560,10228740," So, multiplication like this, maybe it's too much."
10228740,10230340," Um."
10230340,10235980," That creates pretty cool things, I think."
10235980,10238400," Um."
10238400,10240180," So, is it, okay."
10240180,10241300," So, the depth is 40."
10241300,10244300," Oh, it doesn't do anything."
10244300,10246380," Hmm."
10246380,10252380," Hmm."
10252380,10252560," Hmm."
10252560,10254440," Nah."
10254440,10258520," So, let's bring back a security."
10258520,10271580," Lerp."
10271580,10274900," Uh, is that a good idea to have Lerp in here?"
10274900,10278100," Honestly, I want to make sign more probable."
10278100,10280540," I forgot that I can make things more probable."
10281180,10281480," Right."
10281480,10284080," So, and SQRT less probable."
10284080,10287040," Oh."
10287040,10290980," So, if I make sign more probable, I get more ripples."
10290980,10292580," I just realized that."
10292580,10293700," This is actually very cool."
10293700,10295820," Let's make sign even more probable."
10295820,10296860," Let's make it dominant."
10296860,10299240," Okay."
10299240,10303520," And SQRT, let's actually make it like the least probable one."
10303520,10305040," Uh, right."
10307540,10308040," Okay."
10308040,10312840," Uh, SQRT was actually adding lines."
10312840,10326440," So, sign doesn't really add much."
10326440,10329880," What if we only make signs?"
10332880,10334040," Nah, not that interesting."
10334040,10336080," What about a bunch of ads?"
10336080,10338780," Hmm."
10338780,10340520," I think I broke it."
10340520,10343260," It doesn't do anything interesting anymore."
10343260,10345360," All right."
10345360,10346760," So, let's bring back multiplication."
10346760,10347680," What about multiplication?"
10347680,10349560," I think multiplication, it's..."
10351560,10354960," Uh, maybe abs by itself."
10354960,10356780," Also, an interesting idea."
10356780,10357980," So, let's give it a try."
10357980,10360660," So, just abs."
10360660,10365720," Nah."
10365720,10368720," Okay."
10368720,10371940," So, let's go back and let's make them like equally probable."
10372940,10374080," All of them, some of them."
10374080,10374440," Ooh."
10374440,10382160," Okay."
10382160,10383980," That is very cool."
10383980,10397380," I remember somebody was also suggesting to use the distance, essentially, SQRT of square"
10397380,10403640," of these things, uh, and just add them together like that."
10403640,10409620," So, that is also one of the, like, terminal rules that we can have in here."
10409620,10415400," It's also too bright."
10420020,10423780," Abs kind of doesn't let it, uh, properly cycle."
10423780,10426680," So, I think I'm, I want to get rid of the abs."
10426680,10430180," Huh."
10430180,10432820," That is..."
10432820,10435860," This is very fucking cool."
10435860,10438500," Ooh."
10438500,10441880," Okay."
10441880,10446740," All right."
10446740,10447620," Ooh."
10449220,10457180," So, ooh, you can't see that."
10457180,10458560," But here it is."
10458560,10459120," Look, look, look."
10459120,10463800," That's cool."
10463800,10470320," And it's usually at the edges."
10470320,10471880," This kind of stuff is at the edges."
10471880,10474720," Uh, all right."
10474720,10478360," So, finally, we implemented this language."
10478900,10480380," Right, so it was a little bit tedious."
10480380,10485300," Uh, min and max, uh, but it's just to clamp things to a certain way."
10485300,10486860," Um..."
10486860,10486860," Um..."
10486860,10491820," What determines the color?"
10491820,10495640," A function, uh, that is generated by this grammar."
10495640,10502120," So, a mathematical function that accepts x and y, uh, and gives you the color of the pixel"
10502120,10503280," at that x and y coordinates."
10503280,10507680," And we're generating random mathematical functions based on this grammar."
10507680,10509220," So, that's what we do."
10509220,10511380," So, it's all random."
10511380,10512280," It's actually random."
10512280,10515000," I think the coolest one so far, right, was this one."
10515000,10516440," Uh, right."
10516440,10517520," So..."
10517520,10520300," Yeah, that's so cool."
10520300,10525720," So, it's a random art."
10525720,10528560," Random art, a random effort."
10528560,10531720," So, uh, yep."
10531720,10534360," Let's, let's just commit whatever we have."
10534360,10536760," Uh, I think today was a pretty successful stream."
10536760,10538280," Like, we added, like, a separate language."
10538280,10539260," Like, external language."
10540640,10542600," Um, right."
10542600,10546840," Um, parse grammar from a file."
10546840,10547900," Let's go."
10547900,10548620," I'm gonna push that."
10548620,10549320," Right, here we go."
10549320,10554060," Um, how noisy neural networks would be in this?"
10554060,10554920," I don't know, honestly."
10554920,10556780," Um, I don't really know."
10556780,10559600," Maybe I'll explore that at some points."
10559600,10564500," Uh, the problem with neural networks is that if you just, like, take a random neural network"
10564500,10566860," with random weights, it's gonna be just, like, a white noise."
10566860,10569480," Uh, nothing particularly special."
10569480,10570560," Nothing particularly interesting."
10570640,10576840," Um, generating random grammar when, uh, but, but based on what?"
10576840,10579540," So, what we're generating based on?"
10579540,10580520," On another grammar?"
10580520,10581560," We can try to do that."
10581560,10582940," So, it's like a meta generation."
10582940,10585540," Uh, like meta language."
10585540,10588900," By itself, that language is already a meta language."
10588900,10592900," Right, so, because it generates, uh, another language."
10592900,10594520," Expressions in another language."
10594520,10596660," Uh, so, you just add another layer."
10596660,10598940," Uh, yeah, it's a generator over generator."
10598940,10602700," It's a generator over generator."
10602700,10604060," Pretty cool idea, honestly."
10604060,10604920," Pretty cool idea."
10604920,10606560," So, yeah."
10607140,10609400," That was random art series."
10609400,10611220," So, I'm gonna conclude it in here."
10611220,10615020," Uh, so, thanks everyone who's watching right now."
10615020,10615980," Really appreciate it."
10615980,10619840," Uh, thank you for all of the subs, resubs, recommitments."
10619840,10621100," Thank you."
10621100,10622400," Really appreciate all of that."
10622400,10623740," Uh, have a good one."
10623740,10627460," And I see you all on the next recreation programming session with Amistazozin."
10627580,10629580," We're gonna explore more interesting topic."
10629580,10631940," Explore more interesting stuff."
10631940,10632820," I love you all."
10632820,10633380," Mwah."

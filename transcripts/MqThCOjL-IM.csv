start,end,text
80,6000," Hello everyone, and welcome to yet another recreation programming session with Mr. Zozin."
6000,12880," So, since the downfall of Zig, I started to program in C3 a lot and use it in my projects"
12880,17120," and stuff like that. So, for those who doesn't know, C3 is just like a next-generation programming"
17120,23760," language that is built on top of C, right? But it actually made it better, right? Not like C++,"
23760,30800," but actually made it better. So, and one of the things I want you to do with C3 is to sort of use it as"
30800,36480," like a semi-scripting language, even though it's a compiled language, right? So, it's a native statically"
36480,42720," typed compiled language. I want you to use it as a semi-scripting language because the C3 compiler"
42720,49920," has a very interesting command called compile-run. So, which accepts the files, right? It compiles"
49920,56320," the files and then runs those files, right? So, we take a look at the signature compile-run. So,"
56320,61680," here is the signature compile-run. You just provide the files and stuff like that. So, let's actually"
61680,69040," create a simple program, right? And so, this is how you define an entry point. So, this is the main."
69040,76640," And one of the important thing for any sort of like a scripting, for any script, right, is to be able to"
76640,81200," handle command line arguments, right? So, as far as you know, this is how you accept command line"
81200,86800," arguments, right? So, just basically an array of strings, right? So, and the arguments are basically"
86800,92000," the parameters of the main function. And let's go ahead and just print whatever parameters we got in"
92000,100240," there. So, first of all, we have to import stdio, io, stdio, and we're going to do print and not ln,"
100960,110000," it's not some sort of a l language, right? So, they got rid of that l, right? So, and there you go,"
110000,114720," let's actually print this args, right? So, let's actually try to run this into anything, and let's"
114720,119840," see what it's going to do. So, it's compiling, and as you can see, it's running. So, this is the arguments"
119840,126720," that we've got. Usually, traditionally, the first argument in the argument list is the path to the"
126720,131040," program that you're running, which is understandable. Okay, at some point, I decided, okay, I want to"
131040,135040," provide some arguments in here, right? I want to provide some arguments. So, I'm going to do foo,"
135040,144240," and file names must be known empty, name c foo is invalid. Ah! So, you can actually provide several"
144240,149760," files in here, and it basically interpreted foo as one of the files. Okay, so this is very common. Usually,"
149760,154320," traditionally, to sort of separate the files that you want to run, and the arguments, you have to put"
154320,159440," something like dash dash. Okay, so that's not a big deal, right? I can put dash dash in here,"
159440,162880," and it doesn't work."
162880,172960," So, and apparently, apparently, this language, like this subcommand specifically,"
172960,179920," does not support arguments that you want to pass to your program. And you can even take a look at the"
179920,187760," signature of this entire thing. It only accepts the files. It only accepts the files. How you are"
187760,197760," supposed to compete with zig? I'm disappointed. I'm freaking disappointed. We can't allow these"
197760,205680," goddamn zig developers to win. We must fucking fix that. And that's going to be the topic of today's stream."
205680,212240," Right. So, I'm going to try to contribute this feature to the compiler, right? So, I already talked"
212240,217680," to the creator. I created an issue about that. And we agreed that I'm going to implement that, right?"
217680,222320," So, that's basically the topic for today's stream. Seriously. That's literally the topic for the stream."
222320,227680," Isn't that cool? We're going to do a compiler hacking. We're going to do a compiler hacking."
228240,236400," Let's go. Let's fucking go, mate. Let's fucking go. So, thank you. Thank you so much for all of the subs."
236400,241520," Really appreciate it. Thank you. Thank you. Thank you. Okay. So, I already learned how to compile this"
241520,248400," project on my machine. It uses LLVM and anything involved with LLVM is a huge pain in the ass."
249040,254400," So, I prepared it in that sense, right? So, I just learned how to compile this project and let's"
254400,260480," actually go ahead and set it up. So, I'm going to clone the source code of this entire thing. So,"
260480,266880," where are we going to go, actually? Let's go to third-party. All right. And let's just clone this"
266880,274160," entire thing. But I don't want to clone everything because this entire thing is actually almost 2000 of"
274160,279120," commits. Look at that. It's actually a pretty old project as far as I know. It's actually pretty old."
279120,286560," So, let's commit or let's actually clone with depth one. So, if I understand correctly, it will just clone"
286560,293600," the latest commit and nothing else. All right. So, what do we have in here? So, here we have a"
293600,300560," classical CMake project, right? So, it has a CMake list. And as far as I know, it also has instructions"
300560,309120," on how to build this entire thing. Let's actually find that. Installing on Mac, getting started with"
309120,315680," Hello World. Compiling. Okay. So, this is compiling on void Linux. Compiling on other Linux Unix variants."
315680,324400," Okay. So, we need CMake. I already do have CMake. So, install or compile LLVM LLD. Compile LLVM."
324400,339680," Anyway. So, yeah. Just go ahead and compile LLVM. It's that fucking easy. It's like, yeah. Just compile LLVM."
339680,346960," Clone C3C GitHub Repositor. We already did that. So, we enter it. And just do the usual thing. So,"
346960,352400," let's create the build folder. Let's create the build folder. So, this is going to be a build."
352400,361200," Let's go. So, within the build folder, you actually CD. CD is nuts. You CD into the folder and you do CMake"
361200,368160," dot dot. Right. So, you say basically configure the parent folder, but do that into the build folder,"
368160,373520," so to speak. So, all of the chat will go into the build folder. Right. So, let's go ahead and"
373520,378960," try to configure this entire franchise. Let's configure this entire franchise. And it got"
378960,386000," configured successfully. Right. It actually found LLVM 15 on my machine. So, this is the LLVM that comes"
386000,392640," with Debian. Right. So, it seems to be happy. Right. So, it seems to be happy with what is going on in"
392640,399520," here. So, we can go ahead and try to build this entire thing now. So, so far, so good. So, far, so good."
400560,417520," Okay. Okay. So, it's a pretty huge ass wrapper, as you can see. Huge ass wrapper. It's only wrapper."
417520,427360," So, we're wrapping something. But, I mean, I have a... I forgot about this one. I forgot that it blows up this"
427360,435200," violently. Right. So, what do we have in here? So, it blew up and it says that unsupported LLVM version 17"
435200,443760," plus is needed. Isn't it nice when it doesn't fail at configuration phase with this kind of error,"
443760,449360," but fails at the compilation phase? So, it kind of gives you a hope that this shit is going to compile"
449360,463600," and it just does the switch. Right. So, this is basically what happens. But, fear not. I prepared"
463600,470080," before the stream. I actually knew that this is going to happen. I actually knew. So, what I did,"
470080,479360," I downloaded the 18th LLVM. Not just 17th LLVM. 18th LLVM. How about that? But, you didn't expect that"
479360,484800," to happen. So, it's located somewhere in user local... Yeah, here it is. It's a clang plus"
484800,496320," LLVM 18.1.8 x86.69 Linux GNU Ubuntu. I mean, it works on my machine. Even though I'm using Debian,"
496320,502240," it does in fact work on my machine. So, as far as I know, what you have to do, you just have to specify"
502240,508480," LLVM dir. Right. So, if you have a custom LLVM, you have to specify LLVM dir. And you have to specify,"
508480,516480," like, specifically. Specify specifically. I know. Very funny. So, LLVM lib cmake llvm. Right. So,"
516480,522800," you have to go deeper. You have to go deeper into the folder and you have to specify that one. So,"
522800,531440," you can't just specify this one. You have to go deeper into lib, right, and then cmake llvm."
532160,537440," This is what we have to specify. Right. This is what we have to specify. So, I can actually grab"
537440,543760," this path. And let's go ahead into the build. Right. So, it already created a bunch of sheets."
543760,553680," So, let's go ahead and say that I want to do a LLVM dir. Boom. This path. Is it going to do... No,"
553680,562080," it didn't fucking work, mate. I'm actually kind of surprised. So, maybe I have to remove the whole"
562080,568960," thing. So, let me actually rebuild, create a new build, just in case. Let's create a new build."
568960,577040," Is it going to work? Oh, yeah. So, now it worked. I'm really glad that the creators of cmake list"
577040,582400," actually print all of this stuff. So, I can see if it picked up the correct LLVM. So, now it is 18. So,"
582400,587360," before it was actually pretty 15. So, now cmake caches your shit. Very annoying. Yeah. So,"
587360,593760," it even has these files cmake cache and basically contains everything it caches in there. But it's"
593760,598000," easier to just like, you know, delete all that stuff and start over. All right. Let's go ahead and"
598000,602880," just try to build something, I think. So, maybe we'll be able to finally compile this stuff. So,"
602880,618000," it's compiling that wrapper again. Okay. Next, I need a little bit of a tin bro. I could see that. But,"
618000,625920," I mean, it actually works with 18. So, I already tried that. Hello, hello, hello. So, we're just waiting for the wrapper."
625920,648240," Why not j and proc? This is a single translation unit. Well, I mean, while it is compiling that,"
648240,652880," it could have been compiling more other stuff. So, yeah. I mean, whatever. Okay. So, it's compiling the"
652880,658960," rest of the stuff. So, it's compiling some libraries. And now, finally, the main c3 compiler."
658960,666640," Yeah. I should have given it more cores. But, I mean, it is what it is and it isn't what it isn't."
669760,679440," It isn't what it isn't. So, it's already 35%, 34% actually. Let VM code gen expression."
679440,690960," So, this entire thing is written in C. So, I suppose this wrapper basically wraps C++ code so it's available"
690960,697200," to the C code of the compiler. I think that's what's going on. Yeah. Because you can't really use"
697920,704080," very easily and straightforwardly, you know, code written in C++ and C. You have to wrap it in a"
704080,710880," certain way to sort of like expose ABI correctly. So, that's why we have this wrapper, I suppose. We"
710880,717840," can even take a look at it. So, it's somewhere src maybe. It's actually somewhere wrapper. Yeah, here it"
717840,725120," is. And it's just a wrapper CPP. Right. For hacking the C API. Okay. That makes sense. Let's get rid of the"
725120,733760," the white spaces in here. And yep. So, yeah, it exposes this kind of function. Right. LLVM link. Right. So,"
733760,741200," and it's like available to C code. So, you can see extern C. So, it means this stuff is runnable in C."
741200,746160," All right. So, we're linking the executable C3C. And"
752160,764080," something went wrong. Something really went wrong. So, type info. It couldn't find some type info."
764080,772640," This is a bummer. But here is the thing. All right. If you try to reconfigure it again,"
772640,779760," you will notice something interesting. You'll notice something interesting. LLVM was not built with RTTI."
781360,786400," So, RTTI is basically runtime type information. Right. So, it's a special feature of C++ that"
786400,793200," allows you at runtime, like explore types and stuff like that. Right. So, and the version of LLVM that"
793200,800000," I downloaded from the official repository of LLVM doesn't really have RTTI. And apparently,"
800000,807200," wrapper CPP depends on something RTTI-ish. Right. It depends on something RTTI-ish."
807200,813440," You know what's funny is that this message is actually a custom message of the CMake list."
813440,819840," Right. It is printed in here. Right. So, essentially, after configuring LLVM. Right. So, here we have a"
819840,827440," find package, LLVM version, blah, blah, blah. So, I suppose LLVM enabled RTTI was created by find package."
827440,834080," Right. So, in here, what we do, we check whether RTTI was enabled and was not enabled. And we just print whether it is"
834080,840240," built in or not built in. But what's funny is that that's about it. That's about it."
840240,846320," That's everything we're doing here. Right. We don't really use it like for anything."
847120,854000," So, what I found we need to do, we actually need to link the wrapper. We need to link the wrapper"
854000,863920," with a flag, I think, FNO RTTI. Right. So, it doesn't, you know, try to use RTTI or like type information or"
863920,870240," stuff like that. So, where do we compile the wrappers? So, it should be, yeah, there we go. So, C3 wrappers."
870240,881360," Yeah, this one. So, essentially, what we can do, we can do target link options. Right. So, maybe,"
881360,890400," I don't remember. So, it's not really target compile options. Right. So, because it's more like a"
890400,896080," compilation. Right. And in here, I don't remember how to use this entire thing. So, let me actually find it."
896080,900960," Right. So, we just want to add additional flag to the compilation of that specific target, to"
900960,906480," the compilation of the wrappers. That's why I hate CMake, by the way. Right. I can't just add the flag."
906480,911200," I have to learn their stupid language. I have to learn their stupid system. It's just like the whole"
911200,918080," shed that stays in like between the compiler and me. Right. This entire wall for whatever"
918080,922400," fucking reason. Right. So, I don't fucking understand why people use this stuff. But I mean,"
922400,927920," it is what it is, and it isn't what it isn't. Is it not? I think it is. Right. So, and this stupid"
927920,934640," thing is just so bizarre. It has this... You can't just add compiler options. They have to be like"
934640,943600," public, private, and interface. And they... It basically defines the scope of them. It's just like,"
943600,949040," it doesn't fucking make any sense, bruh. It's just a goddamn flag. Just add it to the list of the flags"
949040,954000," when you call the compiler, bruh. It's like, what the fuck is wrong with you CMake developers? I don't"
954000,958560," fucking understand. So, anyway, what we have to do, we have to do something like private. All right. F"
958560,965360," no RTTI. Right. So, and that will add that flag in here. Right. So, when we're linking... linking."
965360,972320," Yeah. When we're compiling this entire stuff. All right. So, let's try to maybe rebuild this entire"
972320,977840," thing. Right. Let's try to rebuild this entire stuff and maybe it's going to... it's going to go better."
977840,984560," So, this time, let me actually give it like, maybe, I don't know, like a three cores. Right. So, while it is"
984560,989040," compiling the wrapper. Right. So, it will compile something else. But, I mean, there's not that many"
989040,993680," parallel things you can do in here. Apparently, the other stuff depends on the wrapper. So,"
993680,998640," it is what it is and it isn't what it isn't. Is it not? I think it is."
1001120,1012160," So, yes. Yes. Yes. Okay. So, thank you so much to cube a lot for the subscription. So,"
1012160,1017680," with the mystery right in C3. Compiler in C3. That will be interesting. So, I think this is something"
1017680,1022320," that needs to be done at some point. For sure. I think that's something that needs to be done."
1022320,1029040," So, yeah. Thank you everyone for subscribing. Thank you. Thank you. Thank you. And for the bits as well."
1029040,1036400," Texas Jack 666. Thank you so much for the cheer with LLVM winky face. Oh, rest in peace LLVM."
1036400,1042240," Okay. So, we're linking this in test stuff. Right. We're linking this in test stuff. And hopefully,"
1042240,1049840," it will link successfully this time. Hopefully. I'm pretty sure it will. Right. I'm pretty sure it will."
1051120,1062080," So, we just compiled C3C. So, yeah. It's kind of interesting why this flag is like never handled."
1062080,1072960," No. Where's RTTY. So, where's RTTI. Yeah. So, you have this flag. You could have actually used it. Right. So,"
1072960,1083600," no. So, essentially if this thing like not enabled. Just add this flag to C3 wrapper."
1083600,1089760," And if something like that. I think that's this is how you do. Look at this language. Right. So,"
1091520,1098960," look at this goddamn language. It's just like how is that a thing. So, I'm not sure if this is how"
1098960,1103840," we do not. So, yeah. You can actually put not in here. Yeah. So."
1105920,1111680," And if. Yeah. I don't fucking understand. It's the most bizarre like scripting language. It's like"
1111680,1118240," it's so fucking ugly. It's almost like it was not planned to be a scripting language. But it kind of"
1118240,1124400," the domain required you to have a scripting language. So, it's kind of evolved out of"
1124400,1129920," not a scripting language. Right. So, it's like I don't fucking understand."
1132320,1137760," It looks like a function because it freaking is. Because it freaking is a function. Right. So,"
1137760,1144640," this thing. Like I have a feeling that this thing was just originally not designed to be a scripting"
1144640,1150800," language. Right. But since the building C++ project is a very complicated thing that"
1150800,1157120," needs Turing completeness. The scriptedness of this thing was forced on the language that"
1157120,1160560," was not originally designed to be scripting language. That's what it feels like to me at least."
1161280,1166720," So, yeah. It is what it is and it isn't what it isn't. I could. Like I worked with CMake for quite"
1166720,1171440," some time. Right. So, I still don't fucking understand it. Like why is that even a thing?"
1171440,1179040," Why is that a thing? This should not be a thing. Anyways. So, we got C3. So, we can even test it in"
1179040,1187920," here. So, here's our C3. We can maybe find usage in here. Maybe modify it. So, I wonder if I can find"
1187920,1197440," like specifically this. Okay. So, it's probably not as easy. Yeah. Here it is. Usage"
1197440,1205840," of your mom. Haha. Funny. And so, then I'm going to go into here and I'm going to recompile this entire"
1205840,1213360," stuff. Look at that. That will relink the whole thing. And I hope it's not going to take too much time."
1213360,1218960," So, we're utilizing incremental building as you can see. Right. So, we only rebuild this thing and then"
1218960,1225040," we're just linking only that. So, but it's taking some time. So, I don't know how we're going to be"
1225040,1230160," developing. So, I think we should not compile very often. Right. So, we should not compile very often."
1230160,1236320," I also suspect that this is because of O3. Right. So, there's a lot of O3's in here. Look at that."
1236320,1241840," So, yeah. It is highly optimized. It is highly optimized."
1242400,1255280," So, if msvc. Right. So, this is msvc. If not msvc. If true. Okay. That's a good start. I suppose"
1255280,1260640," this is basically to flip-flop between different branches. Right. So, it's just like now you're using"
1260640,1266400," this branch. So, I also do that from time to time. Right. So, I also do that from time to time. So, one of the"
1266400,1273200," the things we can maybe try to do is just like a O2. Just to not waste too much time on, you know,"
1273200,1278640," on recompilation. But I suppose, yeah. Well, that was fast. It didn't require too much recompilation."
1278640,1288640," Anyway. So, if I try to now run C3C. Right. Usage of your mom. So, we just established that we're"
1288640,1295280," capable of modifying the project and the modifications are reflected in the behavior of the project. Right."
1296000,1303440," So, this is how you come into the project and assert the dominance. Right. So, that's how we do that."
1303440,1308880," It actually helps you to build the confidence in working with the project. Right. You look at the"
1308880,1313680," output of the program. You just grab something in the output of the program. You find the place where"
1313680,1320240," it's printed. You modify it and you see that that thing has been modified. That's how you assert the"
1320240,1325600," dominance on the project. This is how you say, I'm in control now. Look, I can change"
1325600,1331360," things and the program change behavior. This is very important. It, again, gives you confidence."
1331360,1333040," So, yeah."
1333040,1338800," All right. Let's go ahead and maybe take a look at how the project works."
1338800,1345760," So, here we have the entry point. So, yeah. So, there's different mains and stuff like that."
1345760,1351520," Depending on whether it's a Windows or not Windows, the entry point is slightly different. On Windows, you have"
1351520,1359760," this weird W something-something on the actual operating systems. On normal operating systems, the entry point is main."
1359760,1368240," Right. On Windows, you have this abomination. So, I'm probably going to be jumping a lot. So, what I probably want to do,"
1368240,1377040," what I probably want to do, I want to actually find all of the files with the name that ends with either C or H."
1377040,1380720," That's probably what I want to do. So, this is how many files we have. How many of them?"
1380720,1388720," This is 122 files. Right. So, 122 files. So, let's actually feed them into e-tags like so."
1388720,1397200," Right. So, we've got a tags file which is 301 kilobytes. Right. So, this is basically all of the"
1397200,1402400," all of the declarations, definitions and stuff like that. So, now, I should be able quite easily to jump"
1402400,1408400," around hopefully. We'll see. We'll see. So, let me do the tags and there we go. So, I can also jump back."
1408400,1417360," Right. And all of that without language server. So, Zoomer brain is incapable of comprehending how we can"
1417360,1423040," jump around in the project without the language server. Like, how the do you do that? They can't"
1423040,1427760," comprehend that. Right. So, you need a separate process running constantly through which you're"
1427760,1434080," communicating via the network and stuff like that. No. It's just like it's it's a tags file like no server"
1434080,1441520," or anything. So, it's that freaking simple. It's a lost technology. It's an ancient lost technology."
1441520,1450000," All right. So, this is the real main. Right. Oh, they're using actually long jumps. Look at that."
1450000,1458320," They're using long jumps. So, it's like a set jump and stuff like that. All right. So, here we're parsing"
1458320,1465360," command lines. So, this is basically where we probably have to do. So, we initialize the compiler."
1465360,1473360," So, compile initialization and then. Okay. So, here are different commands. Right. So, you have a command"
1474000,1483600," compile. So, do we have compile compile run. Right. So, here it is. Okay. So, as you can see, basically,"
1483600,1492400," compile run actually shares the same code with other commands like compile, compile only, dynamic lib and"
1492400,1501120," stuff like that. So, like eight different commands. If you go into the compile target. Okay. So, you need"
1501120,1508240," default build target. Right. So, you initialize something. Right. So, we need to find the place"
1508240,1514240," where the actual running of the program after the compilation is happening. So, as you can see here,"
1514240,1520800," we have a compilation, but I don't see running. Right. So, if it's a compile run after compile,"
1520800,1526000," I would expect something like a run. Right. So, essentially, maybe there is a run in here. No,"
1526000,1533600," there is no run in here. So, it must be inside of that compile somewhere. So, compile, run, compile,"
1533600,1540240," run. So, compile target. So, let's take a look in here. So, symbolic tables and stuff like that. So,"
1540240,1546960," iterating. Oh, this is actually pretty cool. So, this is like a magical definitions. Right. So,"
1546960,1552960," this is the defines that are not defined anywhere, but within the internals of the compiler. And this is"
1552960,1557600," the internals of the compiler, where all of these things are defined, like sizes of different types"
1557600,1564000," and whatnot. All right. That's actually pretty cool. I really like that. Okay. So, compiler lacks. So,"
1564000,1571920," this is lex in parsing. Compiler, compiler. Compiler. Okay. Compiler, compiler. We're getting deeper."
1572880,1583840," Sema analysis run. Okay. Too many modules. So, how many modules can you have? Only 100,000 modules? You can"
1583840,1590320," only have 100,000 modules in this thing? How are you supposed to compete with DIG with that? I'm joking,"
1590320,1597040," by the way. Like, I don't know. Does DIG even have, you know, limitation on modules? Does it even have"
1597040,1604240," limitation on modules? I don't freaking know. Maybe it can support only one-handed modules? I don't know."
1604240,1612800," We need to check that. We need to investigate. Anyways. So, all right. So, we have some target and"
1612800,1620320," shise. Active fail to create output directory. That's a lot of failures, but that's fine. So, unreachable."
1621840,1632320," So, there's some other stuff. There's all the things. All the things. So, let's actually go"
1632320,1636480," at the end. This is a huge fucking function. This is a huge fucking function because"
1636480,1647360," running the program should be somewhere at the end. Running the program should be somewhere at the end"
1648080,1659440," of this entire thing. Free arenas. Men of the culture. Another man of the culture using arenas."
1659440,1667120," What the fuck? To be fair, arena is actually perfect for compilers, right? So, because especially if you're"
1667120,1671840," parsing something, right? So, you just tend to, you know, allocate shit on of like a small,"
1672560,1677200," small objects and you don't want to be bothered, you know, deallocating and stuff like that, right?"
1677200,1685680," So, just like whatever. It's just like whatever, whatever, whatever. So, do you have like a run?"
1685680,1692640," Okay. So, let's actually search for task queue. Oh, run after compile. Okay. There you go. Run after"
1692640,1697920," compile. So, active target. So, what is, what the fuck is active tag? I wonder if we can find it. Nah."
1697920,1704720," Well, I mean, it's a global thing. It's a build target. Right. So, run after compile. And this is"
1704720,1713520," a huge ass structure. So, build target, which has a lot of things in here, right? It has a lot of"
1713520,1724080," things in here. So, essentially, do you remember, right? So, how the compiler run was actually sharing the"
1724080,1730720," same code. It was actually sharing the same code with these kind of commands, right? So, whether the"
1730720,1737920," program is run after compilation or not is actually determined by that run after compile flag, which is"
1737920,1745840," probably set before that switch case. So, probably somewhere in the parse arguments, right? Somewhere in"
1745840,1751440," the parse arguments, depending on the command, that flag run after compile is set. And because of that,"
1752240,1758640," compile run and compile can share the same compile target, right? So, because it's up to the flag to"
1758640,1764080," decide whether this thing is going to be run or not, right? So, essentially, some of the commands may"
1764080,1770640," imply running after compilation. Some of them may not, right? In case of compile run, it is implied to run"
1770640,1774800," after compilation. In case of compile, it's probably not implied to run after compilation. So, this is"
1774800,1782080," basically how this entire system kind of works, so to speak. All right. So, let's actually go in here."
1782080,1790320," So, this is the compiler and somewhere in here, compile, run after, yeah, after compiler, right? So,"
1790320,1798240," and what do we do in here? We are taking the output.exe, we're doing some sanitization with paths and stuff"
1798240,1804640," like that. So, we have some sort of a scratch buffer. If it's on Windows, we're trying to, you know, fix up"
1804640,1811760," the path to actually conform to their anal system of paths, right? So, delimiters, backslashes and stuff"
1811760,1819200," like that. And notice how it's only for Windows, right? So, for all of the normal operating systems,"
1819200,1824160," like, you don't even have to do any of that, right? It's only for fucking Windows. But anyway."
1824160,1827760," So, and then you're just launching the program with system."
1827760,1833200," I really like that."
1833200,1840000," This is the, this is the chattest thing I've ever seen. It's just like, system. Yes."
1844800,1852800," It feels like this is a very old code, right? So, it was probably written at the very beginning of"
1852800,1859760," the development where like, it doesn't matter. So, we want to have something, right? So, but I mean,"
1859760,1865280," system is kind of cross-platform, right? So, it will work like anywhere. But by definition,"
1865280,1872560," system doesn't allow you easily to pass arguments in there, right? Because system will just use whatever"
1872560,1877040," shell, whatever underlying shell your operating system has, right? So, in case of Linux, it's"
1877040,1882960," probably going to bash or some other, some other shell that you set up in case of the Windows is going"
1882960,1890000," to be probably CMD. I wonder like, in case of Windows, maybe it's going to be sometimes PowerShell. I don't"
1890000,1897600," freaking know. So, to actually, you know, add additional arguments, we will have to refactor this specific"
1897600,1903600," thing, actually, believe it or not. We'll have to refactor this stuff somehow. So, it's, this is"
1903600,1909600," probably why it was not yet implemented, right? Because nobody kind of really wants to do that."
1909600,1915920," So, maybe several people tried to just tackle it and they're just like, oh, it's, oh, you have to"
1915920,1924560," refactor this in. Okay, we'll just do that later. We'll just do that later. So, but here's an interesting"
1924560,1930400," thing. So, we, if we want to do that, right? So, if we want to add support for additional arguments,"
1930400,1936000," this is not the place where we have to do modifications, right? So, the place where we have"
1936000,1943280," to do modifications is where we parse the command lines and stuff like that. So, Windows doesn't"
1943280,1948560," have an exact web, so it's more involved, right? So, here is an interesting thing. Here's an interesting"
1948560,1960160," thing. In the library of C3, there is somewhere in OS subprocess, right? It's a cross-platform way to run"
1960160,1967440," subprocesses, right? So, there is a literal function, I think, called create, and you can literally just"
1967440,1972160," pass an array of strings in there, and it's a cross-platform. It's basically like a knob"
1972160,1977600," implementation, right? Like knob run sync command. So, and as you can see, this is a POSEX implementation,"
1977600,1983360," and there is another create for a Windows implementation, right? So, for Windows,"
1983360,1987920," and it uses WinAPI and stuff like that. So, it's a cross-platform, but it's implemented in C3."
1988960,1996560," Look what we have at the top. It's actually based on something called subprocess.h, right? So,"
1996560,2003920," it's basically like a rewritten from C to C3, and this is the library that is used in here."
2003920,2011760," And I'm thinking, can I just freaking use this library? I mean, it's already written in C,"
2011760,2021120," and it's like, on this, one of the modules of C3 is based on it, so it kind of makes sense to just use"
2021120,2026640," it then, unless there's some pro, some licensing issues. But if there are some licensing issues,"
2026640,2031600," that means there are some licensing issues with this code as well, because it's based on it or something."
2031600,2037520," Right. So, yeah, I'm going to give the link to this entire thing to the chat and maybe to people in the"
2037520,2048800," description. So, yeah. So, subprocess.h. Is it based on the Python thing? So, some people say about"
2048800,2057600," subprocess.py. Right. So, is it also based on something as simple? Right. Is it a single? No,"
2057600,2065360," there's no mention of Python, which makes sense. Why would a C program mention some stinky Python?"
2065360,2075200," That makes sense to me, I think. That makes sense to me. So, .py. There's no .py, as I expected."
2085200,2088800," Okay. So, let's take a look at where we parse all of that. So, we'll probably parse it in here."
2088800,2095280," ""Parse arguments"". Okay. So, let's get rid of the white spaces. So, and, okay. So, as you can see here,"
2095280,2102400," we accept C and argv. And this is where we do all of the parsing. Right. So, and build options is the"
2102400,2108080," thing into which we parse and everything. So, that's a lot of different parameters and flags and stuff like"
2108080,2120240," that. So, does it have like a run after? No, it doesn't. Okay. So, yeah. Drag none warning type."
2120240,2133120," Uh-huh. Arg index. Arg index. So, we're iterating through this entire thing. Okay. This is probably the place"
2133120,2140480," where we do all of that. So, iterating the arguments. Okay. If the current argument starts with dash,"
2140480,2148960," we actually parse it as an option and then skip to the next iteration. Right. So, if the argument starts"
2148960,2155120," with a dash, it is treated in a very special way. So, what is parse option? Uh-huh. Okay. So, this is just"
2155120,2164160," different options that set up different things. Makes sense to me. Cool. So, if it doesn't start with dash."
2164160,2172640," Right. Uh-huh. We check if the command... Oh! Command is missing. So, build options has the current compiler"
2172640,2177360," command and the compiler command is one of these enumerations. Okay. That is very povers. That's"
2177360,2182560," very clean. And one of the values of the command could be command missing. And it is the first one"
2182560,2189200," because it relies on zero initialization. So, this is actually pretty clean code."
2189200,2201360," Not in an uncle-box sense clean, but I mean actually good. Right. So, anyways. So, okay. So, if the"
2201360,2208480," command is missing... So, that means we're trying to parse this thing as a command. So, we'll parse in a"
2208480,2214000," command. And yeah. So, we're just basically matching it against one of the existing things."
2214000,2219760," And one of the things that we're really interested in is a compile-run command. Oh! It doesn't really"
2219760,2226320," do anything except like setting the current command into the compile-run command. Okay. So, that makes"
2226320,2232800," sense to me. Okay. So, I really like that I didn't even have to step debug through this code. I can just like"
2232800,2238720," read it. Right. I can linearly read it and it just makes sense. Right. So, it all makes sense."
2238720,2247920," Okay. So, we parse the command. All right. So, if this thing doesn't start with a dash"
2248640,2255600," and the command is already set, the rest of the arguments are actually"
2255600,2264000," the arguments of the command. Okay. So, here we're checking whether the command accepts files or..."
2264000,2272240," So, this feels like a hack. Or command generate headers. So, it means it accepts file."
2275120,2280480," So, what the fuck is going on? Okay. So, this is a very interesting..."
2280480,2289920," All right. So, this is all the commands that accept files. This is all the commands that"
2289920,2295920," don't accept files. I can see myself writing this kind of code, actually. Like,"
2295920,2300160," there's nothing wrong with that. So, it's actually very clean. Right. It's just like a switch."
2302320,2306080," And then you have unreachable in here. So, by the way, I want to take a look at how unreachable is"
2306080,2312960," implemented in here. It's a fatal error. Okay. So, in case of a fatal error... So, the author is using"
2312960,2318960," do while zero. Right. So, error exit. Okay. So, this is error exit. And in error exit, what do we have in"
2318960,2323920," here? Okay. So, exit. I just want to see how exactly does it compile. Does it do abort?"
2324480,2326560," Oh! It's doing long jump!"
2326560,2337920," So, it basically unwinds like back into the main. Right. So, when some sort of like a bad thing happens,"
2337920,2345920," it doesn't just crash the thing. It goes back to the main. What's with the long jump thing? So,"
2346560,2356000," it's basically... The long jump is set up at the beginning of the main, I'm pretty sure. Right. So,"
2356000,2363840," here at the beginning of the main, we basically set the jump and then we start the compilation. Right."
2363840,2372560," And then when you do the long jump, right. So, it will go back into this state. So, the way long jump"
2372560,2378720," in C works, it works actually slightly differently than exceptions in C++ and Java and all of these other"
2378720,2385040," languages. Right. So, when exception is thrown, it starts unwinding the stack. So, it basically starts"
2385040,2393520," exiting all of the things. In case of the long jumps, what set long jump does? Right. It saves this"
2393520,2400720," state of the environment, whatever that means depending on the environment. So, in case of x86-64,"
2400720,2408480," it basically saves the state of the registers. It isn't just goto. No, this is... Long jump is not goto."
2408480,2415520," Long jump is capable of jumping between procedures. Goto is only capable of jumping within a single procedure."
2415520,2423200," There is a long story to why it's there. I mean, it makes sense."
2423200,2429360," Like, a lot of compilers written in C use this pattern. You don't really have to explain that."
2429360,2435520," Right. So, TCC does the same thing. Right. It's a very common thing to do if you're writing a compiler in C."
2435520,2440480," So, yeah. So, I've seen that already. So, there's nothing new for me in here."
2440480,2444960," So, essentially, long jump... What does long jump do?"
2444960,2455760," So, essentially, I think on x86-64, it simply saves the state of all of the registers of the CPU. Right."
2455760,2464880," So, and then when you want to jump back, it just restores them. And registers contain such things as"
2465120,2471280," instruction pointer. Right. They contain instruction pointer. And they also contain the stack pointer."
2471280,2477920," So, that means if you jump back to the point that you set."
2477920,2484720," So, the execution will literally go back to where you set the jump and the stack is also going to be restored."
2484720,2490080," So, it literally rewinds the program. Yes. It literally rewinds the program."
2491440,2498480," So, but it's not going to easily work in such an environment as C++ because C++ literally requires"
2498480,2509040," carefully unwinding the stack so it can call destructors. So, in C++, nobody uses long jumps"
2509040,2515600," because it never calls destructors or anything. It's not local go-to. Yeah, basically. It's not local go-to."
2519040,2527760," So, and it's used to basically exit from a very, very nested call stack. Right. When you have like a, you know,"
2527760,2534800," a very deep call stack and something happened here and you need to quickly go back like and"
2534800,2543360," wind the entire thing. You just do that. So, back in the C front days, it was used to implement C++ exception."
2543360,2548880," Oh, that's actually very interesting. So, C++ exception were implemented on top of the long jumps."
2549040,2558640," Right. So, yeah. Okay. And again, it's a very common pattern in compilers written in C. Right."
2558640,2562640," Again, TCC does that. Right. We looked into the source code of TCC. It's whatever that."
2568880,2586080," So, yeah. And generally, the way you're probably going to do that, you're going to store the pointer to"
2586080,2592720," the stack in a global variable. And that raises the question, why the are you storing a pointer to the"
2592720,2600880," stack in a global variable? Excuse me. Why the are you doing that? Like, do you think you're"
2600880,2606000," programming in Rust or something where like, it's going to, you know, yell at you or something?"
2607280,2612880," You're an adult. You're programming in C. You take responsibility for that. So..."
2612880,2620000," RSP is a global variable. Okay. Fair enough. Fair enough. RSP is a global variable."
2620000,2626960," Anyways. Anyways. So, we need to go back. We need to go back into parsing strikes."
2628160,2639040," We need to go back. We need to go back. So, compile run. So, here it is. So, this is the compile target."
2639040,2650160," And now, we are interested in parsing. We are interested in parsing. So, essentially,"
2651200,2656640," when we are appending the file. When we are appending the file, what exactly do we do in here?"
2656640,2669040," Okay. So, vec size build option files. All right. So, what is files? Okay. So, this is build options,"
2669040,2676080," right? So, it looks... Yeah. So, this is build options, in fact. So, it has files. And it's a pointer to"
2676080,2683440," pointer. So, I suppose it's some sort of a, like, probably dynamic array. Vex size. So, what the"
2683440,2691120," fuck is going on? Okay. So, hmm. V header. What the fuck?"
2691120,2701520," I know what she did in here. I know what she did in here. Holy shit. Classic. So many"
2701520,2708480," fucking classics in the source code. First, the long jump, the exception handling, and now this"
2708480,2715360," shit? Stretchy buffer. Do you guys know what the fuck this shit is? Do you guys... Are you even old"
2715360,2723120," enough to know what the fuck you're looking at? Dude, are you even fucking old? This is goddamn classic."
2723120,2729920," So, essentially, seven lengths before the actual pointer. Exactly. Right. So, this is the header."
2730880,2737200," So, let me actually show you what the fuck it is. It's so cool. It's my favorite trick."
2737200,2743520," The Pascal... I think it is reminiscent of Pascal stuff. Yeah, it is. So, essentially,"
2743520,2753200," you have a pointer that points at the beginning of the array of fixed elements, right? So, the pointer"
2753200,2760400," actually points in here, and you have an array of fixed elements, and so on and so forth. Right. But,"
2760880,2769200," but, but, but, but, before that point, right before that pointer, you have a header, you have a header,"
2769200,2777760," right, that stores a meta information about that array. Usually, it stores the size of the array,"
2777760,2784160," something, maybe the size of the element, or something like that. Just some meta information."
2784160,2792480," So, and that actually enables you to, you know, have more or less generic functions that, for example,"
2792480,2798320," append elements into the array, because they get all the necessary meta information from that specific"
2798320,2803440," header, right? So, and the way you actually do that, you take the pointer to the beginning of the array. So,"
2803440,2808080," this is the pointer to the beginning of the array, and notice how it is a void star pointer. So, we don't"
2808080,2814960," have any information, you know, about the type in here. We're casting that pointer straight up into the"
2814960,2822240," pointer of the header, right? So, now it becomes a pointer over here, and we do -1. By doing -1, we literally"
2822240,2828320," step by one header, and we get the pointer that points at the beginning of the header, and we go, we got the header,"
2828320,2832800," we can get all of the meta information, and specifically in here, we're taking the size."
2832800,2838400," What other stuff do we store in that header? So, we are storing size, capacity..."
2838400,2847280," This is a... You sneaky... This is so fucking cool!"
2847280,2853680," Damn! Like, I think this is the first time I see something like that. So,"
2855040,2863040," So, the actual header, like the size of the header includes that, and the size of this thing is going"
2863040,2874800," to be zero. So, essentially, it basically overlaps. Yeah... So, I forgot... I forgot the name of this"
2874800,2880800," feature of C++... of C. What's this feature? Yeah, flexible array member. Thank you, thank you, thank you."
2880800,2885280," Flexible array member. So, essentially, flexible array member doesn't contribute to the size of the"
2885280,2891360," structure, but it allows you to go outside of the boundaries of the structure, right? So, essentially,"
2891360,2897280," as soon as you start iterating through this data, you're going outside of the header. Effectively,"
2897280,2902720," you're going into the data, and that member is called data."
2904720,2911280," That is so cool. That is so cool. So, by getting a header, you don't lose the pointer to the data,"
2911280,2915280," it's like right up to the header, and there you go. You can access it through a flexible array member."
2915280,2920800," So, this is very smart. I really like that. I really like the source code."
2920800,2926720," Is the source code of Zeek as cool as the source code of C3? I don't fucking think."
2926720,2935360," We should actually do a review of Zeek source code. Should we do that? I don't know. It's probably"
2935360,2941360," okay. I'm pretty sure it's okay. All right. So, as far as I know, Zeek was rewritten in itself,"
2941360,2949200," right? Relatively recently. So, it's probably entirely in Zeek. Can your source code do that? So,"
2949200,2956560," yeah. So, you know what that means? That means we already have an infrastructure for dynamic arrays."
2956560,2964320," So, if I want to add a dynamic array of something, for example, arguments, I can just do that because"
2964320,2973200," we already have a dynamic arrays. So, that's pretty cool. I like that. Okay. So, we are painting the file."
2973200,2981360," So, if the size of the file is equal to max files, max files may be specified. So, we have limitations of"
2981360,2989280," how many files... Really? Only 2048 files? How are we supposed to compete with Zeek with these little files?"
2989280,2997040," I don't know. But what's the limitation for files on Zeek? I don't really know. But anyway, and then we do"
2997040,3006480," vec_add. I can respect that. So, let's actually see vec_add. Right. Oh, it's a macro. Look at that."
3006480,3014160," So, we're taking the vec, but first, before taking it, we're expanding it. And expansion takes the size"
3014160,3020320," of the element, right? So, as you can see, we're dereferencing vec, effectively taking the actual"
3020320,3026160," element. So, it's the size of the element. So, we're expanding this entire thing. And expanding this entire"
3026160,3032320," thing. It's probably a reallocation, right? So, we're checking the capacity, and then this is the vec_new,"
3032320,3037120," then we're copying, blah, blah, blah. So, it's a custom realloc, by the way. So, they don't use"
3037120,3043120," realloc, right? So, they do their own realloc. So, this is a new vec. So, they're using calloc. Okay."
3043120,3046880," So, that's fair enough. I would implement that slightly differently, but I mean, that's a fair"
3046880,3054480," implementation anyway. So, then this is the temporary thing. You reassign a temporary thing. So, vec_add"
3055440,3063840," can modify the pointer, right? So, it can modify the pointer. So, you have to be aware of that."
3063840,3074640," And then, we just take the size of it, and we just add the value to the last element. Okay. Fair enough."
3074640,3081360," That's basically dynamic, right? That's basically dynamic, right? It is similar to stbds, I think. It is"
3081360,3091120," similar to stbds, right? So, let me find it. So, it's nothings stb, right? Stb has a header on the"
3091120,3099760," library, which has hash tables and dynamic arrays, and the dynamic arrays are just like that in here,"
3099760,3106800," right? So, they also basically point us to the beginning of the elements, but then they have a header"
3107600,3113280," before the first element, right? And they're also extended in a similar way. So, this is what it"
3113280,3119280," reminds me, right? So, it reminds me of stbds, right? So, it takes some time to actually do that,"
3119280,3124560," but yeah, it's basically that, right? I'm not sure if it's directly inspired by that, but I mean,"
3124560,3130160," it's a common, you know, it's a common pattern to implement it like that. It's a very common pattern"
3130160,3140080," to implement it like that. So, it's going to be stbds.h. Okay, that's cool. All right. So, we're just"
3140080,3151840," appending this thing. Cool. So, what I'm thinking, since in build options, what do we have? We have files."
3153120,3164400," We probably should have arguments as well, right? So, yeah, probably the name could have been better,"
3164400,3171280," right? So, oh, it uses tabs. Do I use tabs? I don't have tabs set. Okay, so,"
3171280,3178240," got them. Anyway, so, I'm going to be actually adding tabs manually. I'm going to be adding tabs manually."
3179920,3191920," All right. So, build options, build options. So, what I'm thinking, so, we have command accepts files."
3191920,3194480," Maybe we should also introduce something"
3194480,3207120," like command accept arguments or something like that. Command accept arguments. So, what I want to do,"
3208160,3224080," I want to try to use this, so, idea that, let me see, c3c. So, compile run files, right? So, this is basically"
3224080,3236320," files and then optional dash dash and then args, right? So, that means, that means here, what we have to do, we have to kind of"
3236320,3248720," take a look at the other thing. So, this is two tabs, right? And I'm writing very dumb code again, right?"
3248720,3256720," So, it's totally fine. If this thing is equal to another dash, so, we got dash dash. It's not a particularly"
3256720,3265680," great idea, honestly. We probably need to check for dash dash. Is there any way to just check that? So, current,"
3265680,3274160," arg is that, arg is that. So, do we use cmp, strcmp in this code base? So, we have arg match, and arg match is,"
3274160,3285920," oh, this is actually very convenient. So, arg match, uh-huh. So, and the current arg is, okay. Oh, this is actually very convenient."
3287520,3297280," So, current arg is a global thing. So, that means I can, if, like, arg match,"
3297280,3307840," like this, and this is where, why did you do that emacs? My emacs is not set up to actually, you know, support,"
3308400,3312400," you know, tabs. So, I have to struggle. I literally have to struggle."
3312400,3322160," All right. So, if it's that, what we have to do, we have to maybe collect args, right? So,"
3322160,3331360," do we even have boolean? I'm pretty sure, yeah, we do have boolean. Collecting args. So, initially, it's false,"
3332080,3338400," but as soon as we sort of get dash dash, right? So, as soon as we get dash dash, it becomes true,"
3338400,3348480," right? It sort of becomes true. And if we are accepting files and blah blah blah, and if we are collecting"
3348480,3354400," collecting args, well, in that case,"
3356560,3366240," in that case, we append not really append file, but we append args, right? So, append arg build options."
3366240,3371520," And what's funny is that we never actually provide the file, because the file is taken from the"
3371520,3381120," current arg. This is a very convenient way of using global variables, honestly. I kind of like that. I kind"
3381120,3392800," of dig that. Are you happy, chat? All right. So, now, we're going to continue doing that."
3392800,3401680," All right. So, we're going to do else. And yeah, we're going to do it like that now."
3405760,3412960," All right. So, now we need to implement append arg. I feel like we're going to be implementing it in a"
3412960,3428320," similar way as append file. Right. So, but this is going to be args. So, max args may be specified. So,"
3428320,3434880," we have max files. Let's have max args as well in here. We said we can't do that. We can do that."
3435520,3441600," max args. So, exit compiler fails. So, this is the args, current arg, and there you go."
3441600,3446080," There you go. There you go. There you go, my friend. There you go."
3446080,3456000," I'm sorry. I don't know what the fuck is wrong with me. So, this is a very stupid and naive way of"
3456000,3460080," implementing this entire thing. So, I'm not even sure where exactly it is going to blow up."
3461440,3469280," So, but I think, I think, I think, I think, I think you should also check that we have some sort of a"
3469280,3475520," command in here and some other stuff. But I mean, it's probably fine for now. So, let's actually see if"
3475520,3482640," this is still compilable. All right. So, I want to check if like, you know, this first approximation"
3482640,3488480," kind of works to some extent. All right. So, it's rebuilding everything. So, we touched a lot of"
3488480,3493760," places. Add continue. Do I need to add continue? I didn't think I need to add continue. Did I"
3493760,3500000," forget to add continue? No. Continue is there. So, we don't need continue. We don't need continue."
3500000,3525760," All right. So, we probably need to do a break soon because I ran out of water. So, I'll need to refill my water."
3526720,3532160," So, it's linking. Linking is actually the happiest step in here, unfortunately."
3532160,3540240," Okay. So, this is C3C. And it's not particularly, like, we won't be able to see anything, honestly."
3540240,3549680," We won't be able to see anything. So, where is a test? Right. So, I think test is located somewhere in here."
3550240,3563360," So, here it is. So, let's put it to main3. And I can now do build C3C compile run main C3C. Okay. So,"
3563360,3573760," is it going to run things? If I try to, for instance, do foo, it cannot do that. But now, if I do dash dash,"
3575360,3584560," cannot process the unknown option. That is bizarre. I would... Now, I know what you actually meant when"
3584560,3592000," you said you forgot to continue. Thank you so much. Okay. You probably meant in here. Yeah. Yeah. So,"
3592000,3597360," we probably need to do continue in here. You're right. Man. I don't remember how to add tabs in"
3599360,3606160," in Emacs. I never use tabs. So, I literally don't know how to configure Emacs to use tabs instead of"
3606160,3613200," springs. Because I never use them. This is so fucking funny. Anyway."
3613200,3618800," So, I wonder... It probably has something to do with also"
3618800,3623200," simpc mode. Right. So, let me take a look at this. Simpc."
3624800,3633120," So, the simp... And it's not here, actually. It's Emacs local simpc. So, there's the indent,"
3633120,3641520," desired indentation. So, here's the function that, you know, defines how you're supposed to indent."
3641520,3650480," And desired indentation, indent length. And it just, you know, returns. So, indent len is four."
3651760,3656880," Uh, yeah. And it's just like four spaces, I suppose. And..."
3656880,3662640," Uh, I guess. I don't remember how to do that. Okay. So, we're going to be struggling. It doesn't matter"
3662640,3668320," anyway. Right. So, edit config. Do we even have an edit config in here? Yeah. We don't have an edit"
3668320,3678720," config. Anyways. Anyways. Anyways. So, we set the continue. Right. Let's go ahead and now try to rebuild"
3678720,3686640," build into anything. Uh, it's going to be build j. So, incremental compilation. Incremental compilation."
3686640,3697120," Look at that. Look at that. So, it doesn't help with linking C3C, but, uh, yeah. It only recompiled build options."
3700160,3706080," Hmm. Hmm. Hmm. Time to beatbox. I mean, too late. We already finished the compilation."
3706080,3714720," All right. So, if I try to do this thing, it will complain: ""Woo-hoo! Foo is invalid!"" But if I put dash dash"
3714720,3722080," in here, boom! It is compiling main.c3, I suppose. And, okay, it's run it. But it didn't run it with,"
3723120,3729600," uh, you know, uh, with the arguments that we provided. Right. But it actually, you know, probably"
3729600,3735680," collected the arguments somewhere. One of the things we can do now, by the way, is to try to print those"
3735680,3742960," arguments with which we have to run the program. Um, right. So, let me see. So, here is where we do all of"
3742960,3748480," that. So, this is the compile, uh, run. So, this is the compile target. So, this is where we do the"
3748480,3758480," compilation. Uh, this is a compiler compiler. Run after compile. Here it is. Here it is. And this is"
3758480,3769920," probably where we want to do all of that. So, let's put it like this. For, uh, size t, uh, vec size."
3770720,3776960," So, and where is the build option? Um, so, there's an active target. So, what is the active target?"
3776960,3784240," It's a build target. And within the build target, do we have, uh, files? Oof."
3784240,3795280," I'm not really sure. So, do we have build options that we're collecting in there? Build options. I didn't see"
3795280,3803200," them, honestly. I have a strange feeling. I have a strange feeling that we'll have to transfer"
3803200,3813840," those arguments that we collected to, to somewhere. So, there is a so-called active target."
3814960,3823200," So, run after compile. Uh-huh. And run after compile is build target."
3823200,3834320," So, we're probably collecting all of that in the wrong place, right? That system name line is so scary."
3834320,3844160," It is kind of scary. Uh, right. So, you can probably... Can you name a file something like... Can you literally name a file..."
3848800,3866800," something? Uh, it's basically a shell injection, isn't it? Right? So, it's a shell injection."
3866800,3875040," Uh, you can put it in the global context. Okay. So, I don't really know what is a global context. Is it literally called global context?"
3875760,3885920," Is it context? I don't know. So, build options, global context. Um, anyways, uh, I'm registering for more"
3885920,3891200," than one hour and, uh, I think I want to make a small break, right? So, we kind of established the idea,"
3891200,3896560," right? So, essentially, we just need to collect the arguments as we parse them, right? We just need to"
3896560,3902720," collect them and we need to create them in some sort of a global thing. Uh, right. So, where we want to do that? Build target makes sense."
3902720,3914720," Yeah, I suppose it does make sense. Um, so, append args, uh, just a single arg, but I don't see a target in here,"
3914720,3920960," do I? I don't see a target in here. I feel like it's created much later. I think it's created much later."
3920960,3925760," Anyway, so, I want to make a small break, uh, refill my water, uh, thinking a little bit and then we're"
3925760,3933280," going to continue. All right. Um, okay. So, let's see what we can do in here. Uh, I'm, I wonder where"
3933280,3943840," do we actually set, uh, run after compile. So, we don't really even set run after compile in here."
3943840,3951520," Okay, so, I'm really curious. Where do we even set that, uh, grep run after compile?"
3951520,3953600," Run after compile."
3953600,3957840," Interesting. Um, so,"
3957840,3962320," so, this is basically in the compiler. So, this is the builder."
3963040,3970320," All right. Update build target from options. Uh-huh. So, what is that? Uh-huh."
3970320,3976480," Update build target from options."
3976480,3985760," That makes sense. So, this is where we kind of transfer information from build options into the build target."
3987440,3994960," That makes a lot of sense. Okay. So, the question is where we call this thing. Uh, right. So, grep rn. Uh-huh."
3994960,4005440," So, there's two places where we call it. Cool. Init default build target. Okay. Uh-huh. Uh-huh. And"
4007280,4014800," Init build target. So, what I'm thinking. What I'm thinking. What I'm thinking."
4014800,4027120," So, for each. So, if the command run, run after compile, we might as well. Um,"
4027120,4032640," I'm not sure how good of an idea it is to do it like that. So, let me actually read the rest of the"
4032640,4043360," stuff. So, if the command output headers. Uh-huh. So, there's two switches in here, by the way."
4043360,4054560," There's two separate switches on the same options command. I'm not really sure why. So, they kind of like..."
4056000,4064080," I suppose they're sort of split semantically. So, here the semantic is running after compilation. So,"
4064080,4071280," that's the semantic of this switch. The semantic of this switch is output headers. So, since the"
4071280,4078080," semantic of this switch is running after compilation, I think, uh, transferring files is going to be"
4078080,4089760," somewhere here. I think so. Oh, and by the way. So, clean run and run may also accept the arguments. But I'm"
4089760,4095760," not sure if they actually handle them there. Um, by the way, I never actually checked that. So, let me,"
4095760,4105520," let me see. C3C. Uh-huh. Just this one. Run. You just run the target. So, I suppose just the regular"
4105520,4113360," run command also doesn't really handle... Yeah, it also doesn't handle, does it? Right? Because it's a..."
4113360,4120880," They have the same code for running after compilation. That is very interesting. That's very interesting,"
4120880,4127600," actually. Okay. So, we're getting somewhere. That means, uh, we're getting somewhere. So, run, compile,"
4127600,4132640," run, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah, blah."
4132640,4145120," So, and what I'm thinking is that can we just do target, uh, target args equal build option, like options args."
4145120,4153760," So, we're effectively moving args from one structure to another structure, completely ignoring memory"
4153760,4161120," management. I really like that. I really like the fact that we're just like, oh, we're just moving"
4161120,4166720," the ownership from one place to another. Who's owning that? Who fucking care? I don't fucking know."
4166720,4174000," Uh, so, who's gonna clean up this, uh, like, who cares? So, the compiler is gonna die at the end of"
4174000,4179760," the compilation anyway. So, what's the point of managing memory? Am I right? So, like, really,"
4179760,4186800," who, who cleans it, cleans it up? Is it even cleaned up? Uh, right, because in the compilers, it doesn't"
4186800,4191760," really matter that much. So, in the compiler, you can just, like, spam memory and just, like, you know,"
4191760,4197360," don't worry about it. So, this is what the compiler, by the way, does, right? And this is why it gets so much"
4197360,4204320," shit for it, right? Because sometimes, uh, you can't even compile it, the compiler itself, because it"
4204320,4207840," consumes too much memory, because it constantly leaks, because it's going to be delegated at the end of"
4207840,4218160," the compilation anyway. Um, so, I wonder how the, um, how it is cleaned up, how it is cleaned up. So, it's"
4218160,4227520," probably, let's find where we use the vectors. I'm actually really curious. So, there's a vec add, right?"
4227520,4236080," So, it is located in here. So, there's a vec add. Maybe there is somewhere, uh, for something that frees"
4236080,4244640," this entire stuff. So, there's a free arena. Wait, aren't we, aren't we allocating shit in an arena? If I do"
4244640,4258000," vec add, when I'm expanding this thing, I do vec new, I'm using calloc, and add calloc."
4258000,4266560," We don't have to worry about this, scheisse. We don't have to worry, because it's down in the arena."
4268640,4275280," Right. So, I suppose it's going to be just, like, deallocated, like, at some point, in some phase."
4275280,4280000," But, I mean, we have to be really careful in which phase it is deallocated and stuff."
4280000,4285360," Right, right, right, right, right, right, right. So,"
4285360,4292560," where were we? So, update, yes. So, this is where"
4294320,4299200," we care about this stuff. So, this is initialization. You need default build targets."
4299200,4302560," Do we do anything with arena in here? I don't think so."
4302560,4310960," So, we can also check free arena in how many places we call it. There's not that many places"
4310960,4316160," where we call this kind of stuff. Active target, check out, compile, compile."
4317440,4322640," So, I'm just a little bit afraid that I'm going to basically transfer"
4322640,4330160," the dynamic array to a different place, and the arena is going to get cleaned up,"
4330160,4336240," so it becomes a garbage. So, I kind of need to clone it. So, I kind of need to clone it. So,"
4336240,4340320," that's what I have to do. But maybe I shouldn't just worry about it right now. So, I don't think it"
4340320,4348000," matters that much right now. I think it matters that much right now. So, let's just do that."
4348000,4355120," And in a build target, in a build target, like, ideally, it would be better to just, like, you know, clone."
4355120,4363200," So, we have a bunch of stuff in here, like, exec. What the fuck is exec? This one is interesting,"
4363200,4372320," actually. I don't know what it is, but I mean. So, let's maybe put some, I don't know, somewhere here"
4372320,4383760," maybe, const char r design. Yeah. So, it's going to be that. And let's go ahead and try to build the whole"
4383760,4392160," thing. Let's see. Let's go. Let's go, let's go, let's go. All right. So, it didn't compile. Yeah,"
4392160,4400320," because I, this is bullshit. So, active target, right. So, active target args, and it's going to be, like,"
4400320,4412080," i less. So, vex size, it's u int 32. Okay. So, it's more like u int 32t, and then i plus plus. So,"
4412080,4418800," what I wanted to do in here, in fact, I just wanted to print the whole thing. All right. I just wanted"
4418800,4437760," to print and see. All right. So, it's going to print f s, and this is just the args I'm printing. Let's go."
4439600,4445840," Okay. So, let me take a look at the subs. Thank you so much. Tim Scar for Twitch Prime with a message."
4445840,4451120," I hope you all have a great day today, fellow C3 compiler dev clubbers. Thank you. Thank you so much."
4451120,4455760," Ronan Ru. Thank you so much for tier one. Thank you. Thank you. Thank you. All right. So, invalid,"
4455760,4464240," it's not. So, active target is actually not a pointer in our case, is it? It's not. What is it called?"
4466160,4474000," Wait. It can't find it. Okay. So, it's not a pointer, but at the same time, I couldn't find the"
4474000,4481440," definition of it. I guess it's fine. I guess this is fine. The tab struggle is so hilarious. I could not"
4481440,4486480," be bothered to actually do that, and it's not like a bottleneck of what I'm doing anyway."
4488800,4496240," I'm not actively typing a lot of code. I'm actually exploring code, right? So, I mean, I'm in a mode of"
4496240,4502800," reading code. So, I don't really need to, like, have a proper support for tabs or whatever. It doesn't"
4502800,4512480," matter. Doesn't matter. Maybe run arcs to not confuse. It doesn't matter. It's the details."
4512480,4517680," What I'm trying to do right now is to have a working version that does what, like, roughly. We can think"
4517680,4523840," about the more, like, less confusing names a little bit later, right? So, all of that is a bike shading,"
4523840,4531600," like, come on. So, we don't even have a working version yet. So, you're jumping way ahead. I know it's,"
4531600,4535680," it's easy to think about this kind of stuff, about, like, you know, names of the variables, but"
4535680,4544560," this is the easiest part. Anyways. So, let me see. So, it's going to build C3 and I want to do compile"
4544560,4555360," run and main C3. Right. So, if I try to run it, if I try to run it. Okay. So, it did the thing. And if"
4555360,4566080," I try to just do foo, it will complain. If I try to do foo, uh-huh. So, look at that. So, it knows about"
4566080,4574400," the argument. It knows about the argument. So, that means if I do foo bar buzz, it will do the thing."
4576400,4583760," We have the arguments. So, that's pretty cool. Isn't it? I think it is. So, the only thing that is left in"
4583760,4589520," here is to actually, um, you know, run it with these arguments, but we can't really do that with"
4589520,4594880," the system in here. We can't really do that with the system in here. Though we have this kind of an"
4594880,4601600," interesting system of a scratch buffer. Right. We have a system of a scratch buffer. I can append"
4601600,4610000," characters in there. Wait a fucking second. I kind of hate it. I kind of hate the fact..."
4610000,4615600," I'm so sorry."
4619760,4624640," This is not a proper way to solve that because you need to think about escaping the shells and stuff."
4624640,4631360," Like, I know that. Don't tell me about that. Okay. Uh, but I hate how easy it is to just do that."
4631360,4639680," I fucking hate it because I can just do scratch buffer append. Right. So, and I can just keep"
4639680,4648560," appending, uh, a space effectively. Right. So, a space and then, um, yeah, something like that."
4649760,4662560," That's it. Um, uh, this is again not a proper solution. Right. So, don't try it at home. Right."
4662560,4668880," But that's, that's a solution that may work. Um, all right."
4668880,4677760," Since they use system name, I wouldn't really mind this solution."
4678400,4680960," This is a good opportunity to do a proper solution though."
4680960,4686720," Uh, right. So, if we are touching this place anyway, you might as well actually, you know,"
4686720,4690800," clean it up and stuff like that. Uh, okay. Let's go. What do we have here?"
4690800,4700960," Um, yeah, it fucking works. It's, it's that fucking easy."
4704640,4706560," Yeah. Yeah. That's the, that's the solution."
4706560,4716160," Um, what's funny is that I think it will break, uh, somewhere here. Right. So, if I do something like"
4716160,4721120," this, I'm pretty sure it will break. I'm pretty sure it will break. So, let's actually see how it"
4721120,4729120," will react today. Yeah. So, yeah. So, you see here escaping kind of broke and this was two separate"
4729120,4735680," arguments in here. So, this was two separate arguments, but I mean, it's a pretty, you know,"
4735680,4739920," quick hack that we did in here. Right. So, it's a pretty quick hack and now we can, you know,"
4739920,4747040," start iterating upon this hack, uh, and adding some, some more stuff in here. So, uh, I really like that."
4747040,4754480," So, I'm a little bit worried about this part. I need to double check that there's no arena clean"
4754480,4761440," up bit like between these calls. So, this thing does not become invalid or something. Right. I need"
4761440,4767200," to really learn about the lifetimes of the objects in this entire project. Like, I don't know if this is"
4767200,4780480," okay. Nice. I'm going to put it to do. Uh, make sure, uh, that args does not, uh, you know, is not cleaned,"
4780480,4791040," is not freed before getting to the run after compile part. Right. So, this is kind of important. So,"
4791040,4797120," this is the first thing we have in here. So, build options. Yeah. So, I probably want to get rid of"
4797120,4804560," that. We don't need that. That was your mom part. Um, so, what is that? Is that? Did they replace this"
4804560,4811600," with spaces or something? No, I don't think so. It's kind of, it's kind of bizarre. Um, yeah. Collecting"
4811600,4827040," orgs. So, if it was that, um, I'm not sure if that's a good solution because we can try to do dash dash before"
4827440,4836480," having this kind of stuff. Um, we can do it like this. Um, so, let me revert the whole thing. All right."
4836480,4845200," Let's get rid of this stuff. And command is not missing. Right. So, the command does in fact exist."
4845200,4853520," Right. So, the command was set up. Right. If the command was not provided yet, this thing doesn't make sense."
4853520,4871760," So, yeah. What's funny is that it also starts to automatically work for anything that accepts"
4871760,4871920," files and runs things. So, um, yeah. So, we'll see. I'll need to think about all that stuff. I'll need to think about all this stuff."
4871920,4889360," You could try to just go ahead and learn how to use subprocess. I'm not sure if the authors of C3 are okay"
4890320,4896080," um, with me using subprocess. Right. So, but I just want to try that because it's like easy to just"
4896080,4903680," to start using in here. Um, okay. So, you just provide an array of const chars"
4904640,4909760," and that's it. So, you just create the subprocess. Is that fucking easy?"
4909760,4916880," Okay. But, I mean, what's funny is that I have a name and arguments separately."
4916880,4922720," So, that means I need to somehow concatenate them. Is there any variant of like where"
4922720,4928080," first I provide the name and then the arguments? There should be something for that, I think."
4928080,4934720," There should be something for that. Um, so, since when do you care if you do something the right"
4934720,4940080," way? I mean, I need to make sure that this, uh, you know, pull request is accepted. Right. So,"
4940080,4946080," that's, that's one thing I need to do. Uh, src. So, we have utilities. Does it have a place for"
4946080,4952000," third-party things? Does it have a place for third-party things? I don't, I'm not really sure, honestly."
4952880,4958800," It doesn't. Oh, okay. So, there are dependencies. So, there's a minis. Uh, I wonder if I can,"
4958800,4968640," yeah. So, I'm like, I can try to actually put subprocess in there. Um, okay. So, let's go to the"
4968640,4974000," subprocess. Um, let's see."
4979280,4982320," So, let's go ahead and download that."
4982320,4991760," Do they have their own processing? I don't think so. They use system. So, the answer is probably no."
4991760,4999520," But they do have their own processing for, uh, in the standard library of C3, but it's implemented in C3."
4999520,5007520," Right. So, we can't use it from C. So, that's kind of interesting, actually. Um, so, okay. I'm gonna wget that"
5007520,5016000," thing. Uh-huh. And in build options. It's actually not build options. Uh, compile."
5016000,5029760," All right. I wonder if I can just include a subprocess page in here. So, I just want to see"
5030640,5034080," if it's going to compile. I think if it's going to find that thing."
5034080,5048000," All right. So, here we're using. Okay. So, I probably do. So, this is utils."
5048000,5058560," How do you access minis? Right. So, there is a minis dependency. How do you do that? It's part. Ah, it's part of the utils."
5058560,5063760," And when you combine the utils, it's actually visible in there. Okay. So, I suppose."
5063760,5071840," So, and what is pwed? Oh, it's part of the C."
5071840,5075920," Yeah. I think I'm doing something correctly. So, I need to"
5075920,5081840," do it like that. Oof. Bro, bro, bro, bro, bro. I think I need to use RG."
5081840,5091520," So, how do you include that?"
5091520,5107440," So, I'm just thinking how the path is set up. If this is like a separate utility, right? So, it has a main"
5107440,5113680," and stuff. Does it have a main? I'm actually not sure. All right. So, let's take a look at the CMake."
5113680,5125840," Unzipper. Unzipper. Cool. So, include paths. Include directories. Yeah. Include directories."
5127760,5142960," So, you simply give the whole thing in here. Yeah. So, let's actually find the backend. So, then you do give it to that. C3 private."
5142960,5160720," We might as well maybe just give..."
5163120,5173200," There's not that many. So, okay. I think I can give it in here then. CMake source tier."
5173200,5183120," Dependencies. Just here. Just give it the dependencies. All right. So, and let's try to build this entire stuff,"
5183120,5203760," hoping that maybe it will do the trick. All right. So, let's take a look at the subs. Nobody subscribed. Okay."
5208240,5214000," So, since we modified CMakeList.txt. So, it wants to rebuild everything."
5214000,5223360," Okay. Cool. So, it actually worked. Right. So, the compiler."
5223360,5233760," So, it was fine with subprocess. I suppose the subprocess is header only. Right. So, it probably has the"
5233760,5240560," simply... Oh, it doesn't have that. So, how does... How do you use that? Does it just also include"
5240560,5252000," implementations or not? Bro. Bro. Like, is it only me or GitHub became substantially slower recently? I mean,"
5252000,5258560," my laptop is dying. I understand that. But I feel like GitHub just substantially, even when I'm not streaming,"
5258560,5264400," not only me. Okay. So, like, I heard somebody said that they actually switched to React."
5264400,5273760," Um, so... How they don't fucking see that? This is the problem with giving developers a goddamn"
5273760,5279040," supercomputers. You know what I'm talking about? These goddamn developers, they are developing everything"
5279040,5283840," on a fucking supercomputer. And now, like, normal people with normal computers trying to use that"
5283840,5292000," shit. It's unusable. Fucking... Don't give supercomputers to developers. Don't fucking... Like, give them,"
5292000,5299760," like, 6502. Like, for real. The Ben Ears computer. Force them to develop shit on that computer. For real."
5299760,5308960," Anyway. Russian government is slowing down GitHub, probably. For everyone, by the way. For everyone."
5309840,5314400," So, how are we supposed to do... Do you just include that or do you do something else? Okay. No problem."
5314400,5322800," Uh, so... Single header cross-panded allows users... So, it automatically includes the implementation. So,"
5322800,5327360," you don't have to do anything. Right? If I understand correctly. I suppose."
5329120,5335280," Um, so, here's the environment. Blah, blah, blah, blah, blah, blah, blah, blah. Okay. So,"
5335280,5344400," let me see. Implementation. Yeah. So, create. Creates a process. You create a command line. Is there"
5344400,5353120," any variant? So, you create a command line. Uh-huh. So, you join."
5355600,5364000," Honestly, that's kind of a bit annoying. That's a bit annoying because I have name of the program"
5364000,5374160," separately and arguments separately. So, what I have to do is just, like, create another vector."
5374160,5382240," I guess. Uh, run after compile. Okay. Well, I can try to do that. It's kind of stupid. But, I mean,"
5382880,5392880," I'm not doing the smartest thing here either. So, uh, okay. So, here we've got the name. Right. So, here"
5392880,5401520," we've got the name. Let's now create the command line choice. Uh, const char. Uh, so, how do you call that?"
5401520,5411840," Uh, so, create. Yeah. Let's literally call it command line. Uh, command line. So, I'm gonna be this,"
5411840,5420560," and it's gonna be originally null. Uh, right. And here, what I'm gonna be doing, chat. What I'm gonna"
5420560,5427360," be doing, I'm gonna be first do add. So, I'm literally adding this entire thing. I'm adding the name in here."
5427360,5432320," Then, I'm iterating through the orgs. Then, I'm iterating through the orgs. Then, I'm iterating through the orgs."
5432320,5440400," Then, I'm adding all of these things into the command line. Command line. Uh-huh. So,"
5440400,5448160," then, I'm launching this stuff. And, instead of doing this, right, I'm gonna be doing a sub process."
5452880,5459600," So, this is the sub process. So, I just provide the command line, like so. Right. The command line"
5459600,5464400," that I build in here. I hope it's going to be compatible, because this command line has a very"
5464400,5470160," sus signature. So, I'm not sure if it's going to be compatible. We'll see. We'll see. The winner gets t."
5470160,5480640," that's for sure. So, in here, what we had. So, we had zero. All right. So, like in terms of options,"
5480640,5486560," we just had zero in here. And in here, we just did out process. Do I really care about it? Maybe I do,"
5486560,5494000," in fact, care. So, I might as well just like keep it like this. Right. So, might as well just keep it"
5494000,5501840," like this. So, here is the process and stuff like that. And yeah. So, we've got the sub process. Let's"
5501840,5509600," go. And in here, we're just like starting this entire thing. All right. So, we're simply starting this stuff."
5509600,5521680," So, we've got the result. And it's kind of similar. So, hmm. What's interesting is that I feel like"
5521680,5525360," this entire POSIX stuff is not needed since we're using sub process create."
5525360,5531680," I think we don't need that. Right. So, if you take a look at the implementation of this entire stuff."
5531680,5540160," Right. Where is it? Yeah. So, okay. So, it goes down in here. Where is the implementation?"
5540160,5547760," Yeah. Okay. So, here is the windows part. So, there should be also some POSIX part where they do wife exit"
5547760,5553520," and stuff like that. Do they have wife exit? Yeah. There we go. So, all of the wife excited,"
5553520,5561440," exciting your wife. Right. So, this is a wife excited macro is done in subpresses.h. So, you don't have"
5561440,5568720," to excite your wife yourself because there is already a library for that. So, you can outsource"
5568720,5577760," exciting your wife into third party single header library. So, now let's actually see. So, we can remove"
5577760,5584720," all of that stuff in here. Right. So, we can remove all of that stuff. And by the way, yeah. So, this is"
5584720,5590000," the exit code. So, it's actually literally compatible with all of that. All right. So, it's literally"
5590000,5597120," compatible with all of this stuff. So, we can call it a rat. There we go. It actually simplified everything."
5597120,5606080," It actually simplified. So, yeah. That's about it. That's everything. So,"
5608160,5618080," damn, damn, damn, damn. So, but I also would like to maybe print. Okay. So, launching."
5618080,5624800," Let's put it this way. So, space."
5627520,5637200," So, this is extra."
5637200,5652400," Right. And at the end, at the end, we'll use the printf. All right. So, we're launching and just all"
5652400,5656720," the arguments and stuff like that because I want to see what exactly I'm running in here. I want to be"
5656720,5664080," able to see all of that stuff. Okay. So, let's go ahead and just like... By the way, do I"
5664080,5668400," really have to provide this stuff? Like, I don't care about exact subprocess. I feel like I can just"
5668400,5677040," supply a new in there. Chat. Like, I know it's hard to believe, but I feel like we can just supply a"
5677040,5685280," fucking new in there and it will just ignore that. Isn't that exciting? That would definitely excite my wife"
5685920,5690640," if I had one. So, eh, nah."
5690640,5698400," Wife is not excited seeing that. They don't check whether the out process is null or not."
5698400,5705760," Wife is upset. Anyways. So, that means we have to actually provide something non-null."
5705760,5712400," Anyway. All right. So, let's go ahead and just like rebuild this entire stuff and see if it fails."
5712400,5716320," So, first try, mother fucker. Wife is excited."
5716320,5720560," Imagine your wife is sad. Yes."
5720560,5724720," So..."
5724720,5731120," Fuck. I have to excite my wife myself. Exactly."
5731120,5733760," I have to do everything myself. I have to do everything myself."
5733760,5743360," Right. So, let's do build and c3c. Let's do compile run. And I just want to, you know, do this thing."
5743360,5747280," Right. So, compile run. I'm just running this entire thing. Launching main."
5747280,5750800," It was fine. But it's not correct, by the way."
5752240,5758320," Because it didn't print it. I think something with stdout got fucked up, brother."
5758320,5762400," Yep. So..."
5767280,5773040," So, I suppose we have to do something with the options. So, it probably didn't redirect the stdout."
5773040,5775680," Wife is not excited."
5775680,5776720," Right."
5776720,5782080," Because, for instance, if I do something like this."
5783040,5785280," Is wife excited?"
5785280,5788560," And I try to run this shit."
5788560,5792880," Wife is not excited."
5792880,5795360," Wife is upset."
5795360,5797360," Wife is upset."
5797360,5800560," So, we have to do..."
5800560,5803440," We have to learn about subprocess and everything."
5804320,5806000," So, what are the options?"
5806000,5808080," What are the actual options in here?"
5808080,5810720," A bit field of subprocess options to pass."
5810720,5812720," All right."
5812720,5813760," Okay. So, here they are."
5813760,5815440," So, what kind of options do we have with them?"
5815440,5819920," Combined stdout std error."
5819920,5822400," This is not the one."
5822400,5825440," The child process should inherit the environment in a"
5825440,5827360," option enable sync."
5827360,5832320," How can I just, like, redirect stdout?"
5834320,5843760," So, what's the subprocess?"
5843760,5847360," Damn, that sucks."
5847360,5851600," Is it s?"
5851600,5853360," Yeah, here's the s."
5853360,5856240," Do we have an access to the internal structure of this shit?"
5856240,5859280," So, this is..."
5859280,5860800," Is it, like, opaque?"
5860800,5862080," I don't get it."
5862080,5863120," Is it opaque or not?"
5863760,5864800," Where's the definition?"
5864800,5868240," Ah, here it is."
5868240,5868480," Okay."
5868480,5869760," So, here is the definition."
5869760,5873680," So, we have an access to the standard input, standard output, standard error."
5873680,5881840," Wait, do I really have to, like, you know, read everything and just do that?"
5881840,5882480," Inherit?"
5882480,5884480," Okay."
5884480,5889520," So, inherit subprocess."
5891840,5893040," But it's an environment."
5893040,5896480," And I say the child process should inherit the environment variables of the parent."
5896480,5901760," It has nothing to do with, yeah, with the stdout."
5901760,5903280," So, it's not about inheriting."
5903280,5906880," Actually, I just remembered."
5906880,5912720," I played with subprocess.c3 and I had literally the same feature."
5912720,5914560," This looks like a small dick, honestly."
5914560,5915680," Like, but anyway."
5915680,5917520," So, I literally had the same problem."
5917520,5925920," And what I had to do, I literally had to manually, like, read from the stdout and just bring it to my stdout."
5927280,5930720," So, small pp, right."
5930720,5934560," You know, in Cyrillic alphabet."
5934560,5936640," Oh, fuck, I can't."
5936640,5939440," I need Ukrainian keyboards."
5939440,5942080," Set inputs."
5942080,5944960," Where is the Ukrainian keyboard?"
5944960,5947600," Yeah, now we're fucking talking."
5947600,5950880," Now we're fucking talking."
5950880,5956240," Anyway, so, um, um, all right."
5956240,5966240," So, let me, let me think, let me think, let me think, how we're going to be doing all that."
5966240,5969520," I suppose this is how we have to do that, essentially."
5969520,5970800," That's how we have to do that."
5972880,5976240," So, the compile, um, so subprocess."
5976240,5988560," We can actually, okay, so let's allocate some buffer."
5988560,5992560," Uh, char some buffer."
5992560,5995920," Yeah, some buffer."
5995920,5999440," Um, kilobyte or something?"
5999440,6000480," Yeah."
6002240,6004720," And we're going to do fgets, right."
6004720,6013520," So, fgets, fgets, fgets, fgets, fgets, fgets, fgets."
6013520,6025360," And essentially, we just supply some buffer, size of some buffer."
6025360,6029360," And so, we are reading the output."
6029360,6032400," So, it's going to be subprocess std out."
6032400,6033600," Right."
6033600,6039840," I suppose we're going to be doing that while this is sort of true."
6039840,6044720," But fgets returns you, well, I mean, yeah."
6044720,6046880," It returns you the string."
6046880,6049120," It returns the string."
6049120,6052240," But we already kind of have a string in some buffer."
6052240,6054160," So, we don't really need it anyway."
6054160,6057760," So, what we can do, now we can do fputs."
6057760,6059760," fputs."
6059760,6061840," fputs."
6061840,6063520," fputs."
6063520,6064320," fputs."
6064320,6068640," It's kind of similar."
6068640,6070160," Yeah."
6073760,6076720," This one is going to be some buffer."
6076720,6079440," std out."
6079440,6082080," We probably also have to do."
6082080,6085040," So, it actually very much depends."
6085040,6086800," Yeah."
6086800,6089600," We need to do std error also simultaneously."
6089600,6093200," But one of the things we can do, we can do combined stdin and std error."
6096000,6096960," Not subprocess."
6096960,6098800," Well, I don't know what you're talking about."
6098800,6100400," Like, I haven't finished writing the code."
6100400,6102080," Let me finish my thoughts."
6102080,6102480," Chat."
6102480,6103600," Chat."
6103600,6107120," Stop trying to make code compilable before I finished writing it."
6107120,6107760," Chat."
6107760,6109040," This is not how it works."
6109040,6109760," Okay."
6109760,6112720," So, how was it?"
6112720,6113680," Like a combined..."
6113680,6115840," Right."
6115840,6117520," So, let's actually put it like this."
6117520,6119680," So, this is going to be that."
6119680,6120480," Oh, right."
6124800,6129280," So, let me actually try to compile the whole thing."
6129280,6135120," All right."
6135120,6138720," So, we have subprocess std out."
6138720,6140160," So, subprocess..."
6140160,6144400," So, what does it say?"
6144400,6146960," Has no member std out."
6146960,6151520," Don't freaking tell me, brother, that it's opaque structure."
6151520,6155440," Maybe you access it through a field of some sort."
6155440,6156400," I mean through a method."
6156400,6160880," Subprocess std out."
6160880,6162080," Yeah."
6162080,6163280," That's how you do that."
6163280,6163680," All right."
6163680,6164000," All right."
6164000,6164240," All right."
6164240,6164320," All right."
6164320,6168400," What is this op?"
6168400,6169680," Getter."
6169680,6170640," Shutter."
6176160,6176880," Bro."
6176880,6176880," Bro."
6176880,6177120," Like..."
6177120,6179840," This is C."
6179840,6189040," This is what happens when Java developers start programming in C."
6189040,6189760," Like, come on."
6189760,6191280," What the fuck is this shit?"
6191280,6191840," Anyway."
6191840,6192160," Sorry."
6194560,6197360," So, um..."
6197360,6200160," Getters shitters."
6200160,6202720," Getters shitters."
6202720,6207760," Okay."
6207760,6209280," So, struct subprocess."
6209280,6212000," Incompatible type."
6212000,6213200," So, what exactly?"
6213200,6214160," Oh, you want a pointer?"
6214160,6216080," You want a pointer?"
6216080,6217360," I'm going to give you a fucking point."
6217360,6217760," Okay."
6217760,6218160," Let's go."
6218160,6225680," Getters, setters, shatters."
6225680,6226240," Exactly."
6226240,6229920," Getters, setters, and shatters."
6229920,6235200," All right."
6235200,6238080," So, let's see if I can run this thing."
6242240,6243040," Wife's excited."
6243040,6245040," Is wife excited?"
6245040,6245760," Wife's excited."
6245760,6247280," Wife's excited."
6247280,6252320," So, the only problem here is that now it combines std out and std error."
6252320,6255200," Which is honestly not ideal."
6255200,6256160," I feel like..."
6256160,6256640," Okay."
6256640,6261840," So, if subprocess has the same flow as subprocess c3,"
6261840,6264240," I think it has to be extended."
6264240,6272160," I think there should be an option to basically not wire into std out and std error."
6272240,6273120," And just let..."
6273120,6277520," You know, combine them with the parent one."
6277520,6279440," Right."
6279440,6283680," Because if you take a look at the subprocess create."
6283680,6286240," Create."
6286240,6287920," So, xc."
6287920,6289520," Specifically with xc."
6289520,6289760," Okay."
6289760,6290640," So, here's the windows."
6290640,6291760," I don't really care about the windows."
6291760,6293200," Let's take a look at the postex."
6293200,6294400," Straight up into the postex."
6294400,6296480," What are we doing here?"
6296480,6299120," So, here is the stuff for the pipe."
6299120,6299440," Right."
6299440,6302320," So, they essentially do the pipe."
6302320,6303200," So, yeah."
6303200,6304240," They create the pipe."
6304240,6306080," They always create the pipe."
6306080,6307040," And then..."
6307040,6308800," Oh, this one is actually very interesting."
6308800,6312320," So, I recently discovered that."
6312320,6313600," So, actions."
6313600,6321920," So, you basically add what kind of actions for the child to perform after it was forked."
6322880,6326080," You know how you first fork a child?"
6326080,6326400," Right."
6326400,6331680," And then, in the child, you do additional actions before doing executable."
6331680,6334080," You know that?"
6334080,6338080," So, you can actually use spawn instead of fork."
6338080,6338400," Right."
6338400,6341440," And if you're using spawn instead of fork."
6341440,6347840," What you have to do, you have to kind of append actions to perform after spawning."
6347840,6350000," After spawning."
6350000,6353360," Because you don't really have an access to the child."
6353360,6355600," This is kind of a bizarre concept."
6355600,6357600," But apparently, it is a postex concept."
6357600,6359360," This is a postex function chat."
6361840,6362320," Look at this."
6362320,6366720," Postex spawn file actions at close."
6366720,6368000," This is a postex action."
6368000,6371120," You can do man on that function."
6371120,6375200," And there will be a page for this thing."
6375200,6376720," Just a second."
6376720,6378640," Oh, there is no page for that."
6378640,6379840," But, I mean, you can google it up."
6379840,6381600," Right."
6381600,6383040," And you'll find man page."
6383040,6389520," So, I've never seen postex functions to have such a long ass names."
6391840,6395120," You're running subprocess twice in CompileC."
6395120,6395920," Do I?"
6395920,6396480," Where?"
6396480,6397040," Where?"
6397040,6397840," What are you talking about?"
6397840,6402960," Whatever."
6402960,6405360," Thank you."
6405360,6406160," Thank you so much."
6406160,6406480," All right."
6406480,6408080," So."
6408080,6409920," And it's actually exits."
6409920,6412080," Bruh."
6412080,6414080," This is such an old code."
6414080,6414400," Right."
6414400,6420480," Because now there is like a system of unwinding and everything."
6420480,6420720," Right."
6420720,6424400," So, this is definitely like an old code."
6424400,6426240," But anyways."
6426240,6427920," All right."
6427920,6430240," So, let me try to recompile the whole thing."
6430240,6432480," Let me try to recompile the whole thing."
6432480,6439200," And I want to try the moment of truth."
6439200,6439520," Right."
6439520,6444400," So, the moment of truth is whether do we parse things correctly."
6448240,6448560," All right."
6448560,6449040," So, come on."
6449040,6450080," You can do that."
6450080,6450800," I believe in you."
6450800,6451840," You can link this thing."
6451840,6453280," There we go."
6454960,6457600," And then I can do just run it."
6457600,6457920," Right."
6457920,6459440," So, wife should be excited."
6459440,6461280," Wife should be excited."
6461280,6462720," If I try to do foo bar."
6462720,6466080," So, foo is not like an existing thing."
6466080,6467920," But now, if I put it like that."
6467920,6472400," Wife excited."
6472400,6474480," And we have the arguments in here."
6474480,6474720," Right."
6474720,6476320," So, I can even do buzz."
6476320,6477440," I can even do buzz."
6477440,6482240," And here is the moment of truth."
6482240,6485600," So, this should be treated as a single argument."
6485600,6487600," This should be treated as a single argument."
6487600,6488000," Let's go."
6489600,6490480," And it is."
6490480,6493200," So, there is no comma in here."
6493200,6496720," So, all of this stuff is parsed correctly."
6496720,6501040," And since we're using subprocess.h, it should be cross-platform."
6501040,6504960," It should be cross-platform."
6504960,6508320," So, that's pretty cool, isn't it?"
6510160,6516080," So, I don't know how many mistakes I actually made in here."
6516080,6516320," All right."
6516320,6518640," So, because I made lots of assumptions."
6518640,6521200," And I kind of slapped it all together."
6521200,6525040," So, I'm not really sure."
6525040,6533920," The thing that kind of bothers me is the fact that we, you know,"
6533920,6536800," have to redirect std out like that."
6536800,6540640," Maybe there is something in the FAQ for subprocess, right?"
6540640,6543200," So, there was some sort of an FAQ."
6543200,6547120," Why doesn't process not inherit the environment of the parent when the environment is null?"
6547120,6547520," Blah, blah."
6547520,6551600," Why doesn't internet process?"
6551600,6556880," If you spawn a process that needs internet access, you will need to use the option"
6556880,6558480," inherit environment option during creation."
6558480,6560640," The subprocess has inherit environment variables."
6560640,6562160," Blah, blah, blah."
6562160,6565200," Set environment with child process."
6566480,6569760," Yeah, so this is kind of annoying."
6569760,6571040," All right."
6571040,6572640," So, std out."
6572640,6576560," So, process std out."
6576560,6577440," You just get..."
6577440,6581840," Also, by the way, you probably also need to destroy, right?"
6581840,6583920," You also probably need to destroy this entire thing."
6583920,6587360," So, there is a read std out."
6587360,6587920," What is the..."
6593360,6593680," Okay."
6593680,6596480," Read in a synchronous."
6596480,6602640," If you want to be able to read a process before calling process join or it cannot use std out"
6602640,6604960," because it's very surprising, you do not allow this."
6604960,6605200," Okay."
6605200,6606560," So, I probably have to..."
6606560,6606880," Yeah."
6606880,6612320," I definitely need to look into that a little bit more and clean up the pull request."
6612880,6617840," But the bulk of the pull request is basically ready."
6617840,6618640," Right."
6618640,6620720," So, it is basically ready."
6620720,6623280," Yeah."
6623280,6627840," And I think I'm going to do all of the cleaning up off screen."
6627840,6628800," Right."
6628800,6630560," Because I didn't think it's that interesting to pitch."
6630560,6633360," But overall, I think we achieved the goal of the day stream."
6634960,6635280," Right."
6635280,6639760," So, we extended the compiler and we added a way to do the argument."
6639760,6641680," Okay."
6641680,6642640," I guess that's it for today."
6642640,6644080," I'm ready to see you in photo hours."
6644080,6646000," Thanks everyone who's watching me right now."
6646000,6647040," I really appreciate that."
6647040,6650880," Thank you for all the subs, resubs, recommitments, and stuff like that."
6650880,6652320," And yeah."
6652320,6656080," I see you all on the next recreation programming session with"
6656080,6657440," Ahu Amista Azuzin."
6657440,6657920," I love you."
6657920,6661120," All right."
6661120,6662080," This is the next day."
6662080,6665600," And there's quite a few things that I would like to do before I can make a pull request."
6665600,6669600," So, I decided to actually document the whole process."
6669600,6673360," So, first of all, I figured out how to use tabs in Emacs."
6673360,6673520," Right."
6673520,6674320," I just remembered."
6674320,6681760," So, what I need to do is to enable indent tabs mode for my C-MOD."
6681760,6682000," Right."
6682000,6685440," So, if I go here, simpc mode, where is the hook for simpc mode?"
6685440,6686320," Right."
6686320,6690640," So, then here I have to just do indent tabs mode."
6690640,6691680," And that's it."
6691680,6691840," Right."
6691840,6694320," So, I'm going to just restart Emacs just in case."
6694320,6699440," And that should just automatically support tabs instead of spaces."
6699440,6700560," It's that apparently easy."
6700560,6701120," I just forgot."
6701120,6703040," I just never use tabs instead of spaces."
6703040,6704000," I'm sorry."
6704000,6704160," Right."
6704160,6708240," When I actually need to, I just like, I don't, I can't remember how to do that."
6708240,6710080," I simply can't remember how to do that."
6710640,6716240," So, let's actually find where we are handling the compile run command."
6716240,6716560," All right."
6716560,6717760," So, here is the text."
6717760,6721680," So, this is somewhere."
6721680,6724400," Yeah."
6724400,6727440," So, here's where we parse in the command."
6727440,6732080," And we're specifically looking for compile, maybe."
6732080,6732400," Yeah."
6732400,6734320," So, somewhere down below, I think."
6734320,6736000," Oh, yeah."
6736000,6737280," We're using spaces in here."
6737280,6738560," This is my code, by the way."
6738560,6738800," Right."
6738800,6743680," So, it's pretty nice that it actually highlights the wrong kind of indentation."
6743680,6747280," So, since I'm streaming offline, I don't need to piece off my chat."
6747280,6748960," So, I can finally remove this entire thing."
6748960,6750560," Okay."
6750560,6751840," So, here's an interesting thing."
6751840,6759520," So, what I'm doing in here, I'm kind of conflating the commands that accept files"
6759520,6763120," and run the program out after compilation."
6763120,6766560," I kind of put like an equal sign between them."
6766560,6769600," But I feel like this is not necessarily true."
6769600,6770000," Right."
6770000,6777040," So, the commands that accept files and run the program out of the compilation, they intersect,"
6777040,6779840," but the set is not entirely equal."
6779840,6780960," Right."
6780960,6787600," So, I can even try to maybe run C3C just to see, just to take a look at what kind of commands do we have."
6787600,6787760," Right."
6787760,6793760," So, for example, we have run command which obviously runs the program after the compilation,"
6793760,6798880," but it doesn't accept the files because it's one of these commands that uses the project.json"
6798880,6801680," project format of C3 that I don't use."
6801680,6801920," Right."
6801920,6806400," So, it doesn't need to accept files, but it still runs this entire thing."
6806400,6811920," So, I think it would actually benefit from being able to pass command line arguments,"
6811920,6816320," but nonetheless, right, as you can see, these things do not particularly intersect."
6816320,6821360," So, because of that, I have to be like a little bit careful with all that."
6822640,6826320," So, essentially, what are we doing in here?"
6826320,6830160," So, arg match dash dash."
6830160,6836880," So, we're using this thing as a separator between the files and command line arguments that we're"
6836880,6840800," collecting in the build options and stuff like that."
6840800,6852560," So, what I'm thinking is that we only have to do that, right, if the command is compile run."
6853600,6853920," Right."
6853920,6860000," So, I think for now, since the scope of the issue is to add support for compile run command,"
6860000,6863040," I'm going to only enable that for compile run command."
6863040,6870800," And in the future, if this kind of stuff will be useful for other commands, it should be easy to add that."
6870800,6871040," Right."
6871040,6876400," So, it should be easy to just like enable this kind of functionality for other commands, like just run."
6876400,6876640," Right."
6876640,6880560," So, but since the scope is smaller, so I don't really want to, you know,"
6881200,6882560," overblow this scope."
6882560,6888400," So, I'm not even sure if overblow is even a verb, but anyway, I don't speak English anyway."
6888400,6894160," So, what we can do in here is essentially, let's do the following thing."
6895120,6901520," So, I feel like if we went into the collecting args mode, right, if we went into collecting arg modes,"
6901520,6907120," it doesn't really matter what is going on down below, we should just collect args, right?"
6907120,6908400," So, just like indefinitely."
6908400,6913120," If we manage to go into this mode, just keep collecting the args, right?"
6913120,6914880," Nothing else matters, right?"
6914880,6916160," So, nothing else matters."
6916160,6919760," So, it's just going to be something like this, because look at that."
6919760,6923920," So, here we're handling flags, right?"
6923920,6928080," So, here we're handling flags, but as soon as we put dash dash, right?"
6928080,6933680," So, we have C3, compile run, maybe some special flags, right?"
6933680,6938560," So, flag one, flag two, they probably go, yeah."
6938560,6941200," So, yeah, they could be like that, right?"
6941200,6943600," So, then file one, file two, and stuff like that."
6943600,6951280," As soon as we put dash dash, none of the flags that we put afterwards should be considered the"
6951280,6952400," flags of the command."
6952400,6954800," They should be considered the flags of the program."
6954800,6958480," So, as soon as we kind of went into this collecting args mode,"
6958480,6963200," like, we just keep appending everything into the arguments, right?"
6963200,6965120," And ignore everything else, right?"
6965120,6966640," I think it only makes sense."
6966640,6969040," I think it only makes sense, right?"
6969040,6975520," So, if we are not in the collecting args mode and the current command,"
6975520,6977680," since we only support compile run command,"
6977680,6987120," the current command is compile run and the current thing is matching dash dash,"
6987120,6991600," we just go into the collecting args mode and we get stuck in here, right?"
6991600,6992720," So, we get stuck in here."
6992720,6998560," So, otherwise, if we encounter dash, this is flag of the subcommand."
6998560,7000560," We parse that, right?"
7000560,7005680," If the command is missing something that is not, dash is basically the subcommand."
7005680,7012320," Here, if we accept in the file, we just append that file to the command, right?"
7012320,7016640," So, and that will only work if we are not in the collecting args mode."
7016640,7018480," And, yeah, that's about it."
7018480,7026480," The only thing that kind of bothers me is that why generate headers is not inside of the command accept files, right?"
7026480,7028000," So, it's just like, it's kind of bizarre."
7028000,7029680," Is that some sort of a special command?"
7030240,7032080," Right, so I'm not really sure."
7032080,7040080," Because in here, in accept files, it says it doesn't accept file, but in here, they made an exception for that."
7040080,7045920," Unless a command accept files is used in several places."
7045920,7048480," Let's actually see how many places it is used."
7048480,7050640," Maybe there is another place."
7050640,7052480," I'm not sure."
7052480,7053440," Okay, so there's a..."
7053440,7056240," Okay, there's at least two places."
7056240,7058640," There's at least two places in here."
7060000,7060320," Yeah."
7060320,7067760," Okay, so in this specific place, generate headers is going to be considered to not accept in files."
7067760,7071440," So, it's sort of like a hack created specifically for that."
7071440,7076000," I'm not really sure what to make of that, but I don't want to touch that, right?"
7076000,7080880," So, I was thinking maybe I can just like move this into, I think, like, target behind command accept files."
7080880,7083440," I probably don't want to do that, right?"
7083440,7085920," So, it's not a particularly great idea."
7086720,7092640," So, yeah, I think that we enabled these things specifically only for compile run command, right?"
7092640,7099760," So, in the future, if we want to add support for more things in here, we can just like do that, right?"
7099760,7107760," So, for example, we can say this or command run."
7107760,7115040," And you can just add like different commands in here that support, you know, arguments that you can pass."
7115040,7119280," Or, in the future, we could create similar functions, right?"
7119280,7123200," So, command accept files, command passes arguments."
7123200,7125760," I think it makes sense, right?"
7125760,7127360," So, command passes arguments."
7127360,7132480," But since right now it's only one command, I think I'm going to keep it in here."
7132480,7137760," Maybe, I don't know, let's actually go ahead and create like an equivalent of this thing, right?"
7137760,7139440," So, command accepts files."
7139440,7144640," Let's go ahead and just say bool command passes args."
7144640,7147200," So, why not?"
7147200,7149280," Command passes args."
7149280,7150640," Right."
7150640,7152000," So, I'm going to put it in here."
7152000,7158080," And right now I'm going to copy paste this entire thing and just put it in here."
7159200,7159760," Right."
7159760,7169440," So, everything does not accept, like nothing, except, except passes args, except compile run,"
7169440,7171760," which is true."
7171760,7173600," Right."
7173600,7175280," Okay."
7175280,7176640," Like, listen, listen."
7176640,7178480," I know that it looks silly."
7178480,7179920," I know that it looks silly."
7179920,7188400," But, if we add more commands in the future, this switch becomes non-exhaustive, meaning"
7188400,7194640," that some of the cases here are not handled, and the compiler will actually force you to go there"
7194640,7201520," and review that function again so you can make sure that the set of the commands that pass argument"
7201520,7202640," is correct."
7202640,7204640," That's why we're doing it in here."
7204640,7209280," I understand that it looks silly for people who only recently started to program, for example,"
7209280,7211280," like five years ago or something."
7211280,7215520," But for people who've been programming for decades, they do understand why the"
7215520,7217760," fuck you want to write such silly code."
7217760,7218240," Right."
7218240,7222480," Because they do know the power of compiler-assisted refactoring."
7222480,7222720," Right."
7222720,7227760," So, again, if you add a new thing, the compiler will force you to go to this place and review it."
7227760,7229680," Revise it, essentially."
7229680,7232960," So, that's why I'm writing such silly code."
7232960,7234800," So, anyways."
7234800,7238320," So, here we can say, okay, passes args."
7239600,7240000," Right."
7240000,7246000," So, command passes args and so we just provide the command in there."
7246000,7246240," Right."
7246240,7248880," So, I suppose we can do something like that."
7248880,7253520," Interestingly, so, missing command is one of the commands."
7253520,7255600," Does command accept files has that?"
7255600,7255840," Yeah."
7255840,7256080," Okay."
7256080,7256880," So, it does have that."
7256880,7257280," All right."
7257280,7258560," Makes sense."
7258560,7259120," Makes sense."
7259920,7260320," Okay."
7260320,7265280," So, let's go ahead and try to maybe, I don't know, compile this."
7265280,7267520," So, this is a wrong folder."
7267520,7269280," Let's go somewhere here."
7269280,7270640," And I'm going to just do this."
7270640,7271680," Okay."
7271680,7272240," That's not compiled."
7272240,7274320," Let's take a look at the problems we have in here."
7274320,7276240," Passes args implicit declaration."
7276240,7277680," Is it defined somewhere?"
7277680,7280480," It's probably defined in the wrong place."
7280480,7283200," So, where accept files is defined?"
7283200,7285760," It's defined in here."
7285760,7288240," And I suppose there's a builder h."
7288240,7290160," Okay."
7290160,7295200," So, let me try to maybe search."
7295200,7299600," Because there should be like a forward declaration somewhere for this function."
7299600,7300880," Here is the forward declaration."
7300880,7301040," Yeah."
7301040,7301760," There you go."
7302320,7305280," Command passes args."
7305280,7305840," Let's go."
7305840,7308880," Let's fucking go."
7308880,7311120," All right."
7311120,7313200," Reveal that choice."
7313200,7320480," It is so fast when I'm not streaming."
7320480,7320960," Look at that."
7320960,7322880," It is super fast."
7322880,7325120," Even though it should not matter."
7325120,7325680," Right."
7325680,7328320," Because it's just like it's still encoding video."
7328320,7331840," But for some reason, when I'm just recording and not streaming, it is"
7331840,7332320," faster."
7332320,7333600," Okay."
7333600,7336240," So, here it seems to be working."
7336240,7339760," So, let me try to do c3c."
7339760,7343280," So, what I want to do, I want to do compile run."
7343280,7346880," And this one is going to be main c3."
7346880,7348000," Let's take a look at that."
7348000,7348480," Okay."
7348480,7350080," So, and then I can do full bar."
7350080,7352160," It does not work."
7352160,7352480," All right."
7352480,7355840," So, then if I do it like that, it does work."
7355840,7358000," So, I can put some stuff in here."
7358000,7359120," Right."
7359120,7360160," So, it passed correctly."
7360160,7364880," So, if I put dashes in here, it will pass them like this."
7364880,7369600," But if I try to do it like that, it will tell me that the flags are not correct."
7369600,7369840," Right."
7369840,7372640," So, I cannot process the unknown flag full."
7372640,7373200," Okay."
7373200,7374400," So, that makes sense."
7374400,7374960," That makes sense."
7374960,7376320," Right."
7376320,7379600," So, right now, only compile run supports additional arguments."
7379600,7383520," But I feel like in the future, run should also support additional arguments."
7383520,7386320," But again, let's not go ahead of ourselves."
7386320,7389120," Let's just make it easy to add that in the future."
7389120,7389520," Right."
7389520,7390800," Anyways."
7390800,7392480," So, this is one of the things I wanted to do."
7392480,7392800," All right."
7392800,7395760," So, I wanted to make sure that I'm only adding support for compile run."
7395760,7396960," Right."
7396960,7398000," And everything's fine."
7398000,7402720," So, the next thing I would like to do, I probably would like to maybe update the usage in here."
7402720,7402880," Right."
7402880,7409280," So, as you can see, compile run doesn't indicate that it can accept command line arguments."
7409280,7411520," So, let's actually find the place where we're doing all that."
7411520,7418080," So, let me go ahead and just do maybe something like rg vim grep."
7418080,7419440," Should be very easy to find."
7419440,7421440," Come on, bro."
7421440,7423520," Here's the place."
7423520,7425200," So, there's a tester pi."
7425200,7425520," Right."
7425520,7427040," So, some python code."
7427040,7430080," And is that the usage?"
7430080,7431520," I feel like that's the usage, right?"
7431520,7435040," So, compile run."
7435040,7436480," So, how are we going to be indicating all that?"
7436480,7444240," I suppose we can say something like arg1 and then dot dot dot."
7444240,7445600," Right."
7445600,7450240," So, actually, this kind of optional."
7450240,7450400," Right."
7450400,7454480," You can just provide dash dash and you don't have to provide any arguments."
7454480,7454720," Right."
7454720,7458800," So, I think it makes sense to actually put it like this."
7458800,7461440," You can do dash dash and then optional arguments."
7461440,7465520," Honestly, it just kind of indents it in a weird way."
7465520,7465760," Right."
7465760,7467760," So, now it makes it super long."
7467760,7470240," I'm not sure what make up of that."
7470240,7474240," So, I wonder if this is okay to do something like this."
7474240,7475680," All right."
7475680,7481200," And then here, let's also re-indent everything super quick."
7481200,7482560," There we go."
7482560,7483440," All right."
7483440,7486000," So, now it looks like this."
7486000,7490000," And so, let's go ahead and try to rebuild the whole thing."
7490000,7496000," So, it's linking."
7496000,7496720," It's blinking."
7496720,7500240," And everything is fine."
7500240,7500640," All right."
7500640,7502160," So, let's try to run this entire thing."
7502960,7503600," C3C."
7503600,7508720," I hope it's not too indented to the right."
7508720,7513280," So, as a free time compiler run is the longest signature in here."
7513280,7515680," Unfortunately."
7515680,7516160," But yeah."
7516160,7516960," It is what it is."
7516960,7518080," And it isn't what it isn't."
7518080,7519440," Okay."
7519440,7520640," So, this one is done."
7520640,7527120," Another thing I want you to do is actually related to the discussion we had in the issue after the"
7527120,7527920," yesterday stream."
7529040,7530960," So, let me find the right."
7530960,7532480," So, we did a little bit of discussion."
7532480,7536480," I know that Lerner was actually in the chat."
7536480,7540400," But don't remember what he said about me using subprocess.h."
7540400,7542640," Because the chat is kind of noisy."
7542640,7542880," Right."
7542880,7545680," So, I don't really listen to it too closely."
7545680,7548480," So, I don't really know his opinion about this entire thing."
7548480,7550240," So, I decided to ask in the comments."
7550240,7550480," Right."
7550480,7554000," So, if it is okay to use subprocess.h."
7554000,7557040," So, what he said is that I'll probably look at subprocess.h"
7557040,7559360," and then grab exactly the parts we want."
7559360,7562400," And then make a slimmed down version of that eventually."
7562400,7564080," But yes, you can do that."
7564080,7565760," This is actually a good idea."
7565760,7569120," And this is something that we probably want to do."
7569120,7573840," Because as of right now, subprocess.h doesn't even do what we want to do."
7573840,7574800," Right."
7574800,7578480," So, because we had to fight with subprocess.h."
7578480,7583040," Because it forcefully redirects std out and std error."
7583040,7584160," Right."
7584160,7587440," So, there's a lot of stuff that it does we just simply don't need."
7587440,7590400," Let me actually find where we run this entire thing."
7590400,7596000," So, I think I can just like grab for run after compile."
7596000,7596320," Right."
7596320,7597840," Something like run after compile."
7597840,7598400," And let's."
7598400,7600880," So, this is the active target."
7600880,7602880," There we go."
7602880,7603920," The thing we had to do."
7603920,7606400," We had to organize this stupid loop."
7606400,7606640," Right."
7606640,7608880," So, we had to have some buffer."
7608880,7609200," Right."
7609200,7613200," So, we had to just have gets and then flush it in std out."
7613200,7616880," So, if you just create a process in a very naive way."
7616880,7621280," It will just redirect std out and std error automatically."
7621280,7622880," You don't really have to do anything."
7622880,7630240," In fact, we can achieve the right behavior of subprocess.h by removing code from subprocess.h."
7631760,7633600," That's the irony of the situation."
7633600,7634720," That's the irony of the situation."
7634720,7641440," And what's funny is that knob works exactly as we need."
7641440,7641600," Right."
7641600,7642640," So, if you take a look at the knob."
7642640,7645040," So, where is knob?"
7645040,7647280," I think it's located somewhere in mutualizer."
7647280,7647440," Right."
7648240,7651520," A mutualizer knob.h."
7651520,7652320," Knob.h."
7652320,7654000," So, it's a function specifically run."
7654000,7658000," I think it's called knob.cmd."
7658000,7661840," Knob.cmd run async."
7661840,7663360," Knob.cmd run async."
7663360,7666480," So, let me actually disable the white space modes and stuff like that."
7666480,7668080," So, here's the windows implementation."
7668080,7671760," For BOSIX implementation, it's actually very straightforward."
7671760,7672640," We just do fork."
7672640,7675520," And then we just do exec."
7675520,7677120," Right."
7677120,7678960," And what's funny is that..."
7678960,7686640," Remember how I complained that we had to concatenate the name of the program and then the args?"
7686640,7692080," Exactly.p already accepts the name of the program, the path of the program,"
7692080,7694960," and the command line arguments separately."
7694960,7696160," It already does that."
7696160,7698240," So, and that's the entirety of the code."
7698240,7702560," If we take a look at how subprocess.h does that, I think it's much, much bigger."
7702560,7704960," So, where's the dependency?"
7704960,7706800," So, here's the subprocess.h."
7706800,7710720," And let's find subprocess create."
7710720,7711680," Right."
7711680,7713440," So, here is subprocess create."
7713440,7717040," And specifically, it calls to subprocess xc."
7717040,7717360," Right."
7717360,7718960," So, extended version."
7719840,7723680," Well, this is the windows and here is the POSIX one."
7723680,7725520," So, that's the entirety of the POSIX."
7725520,7727760," So, we can take a look at how much it takes in here."
7727760,7729440," Right."
7729440,7731520," There's quite a lot of code, right?"
7731520,7736560," Because it needs to capture the std out and redirect std in and so on and so forth."
7736560,7738240," So, it does a lot of heavy lifting."
7738240,7740080," So, it's 151..."
7740080,7743120," It actually removed this stuff."
7743120,7743680," I don't know."
7743680,7745280," One more time."
7745280,7745920," Right."
7745920,7751520," So, 151 lines to run the child process for POSIX specifically."
7751520,7752640," We're not talking about windows."
7752640,7757200," Versus knob and how many lines we have in here."
7758080,7759920," And it's like 21 lines."
7759920,7761200," It's 21 lines."
7761200,7765280," And these 21 lines actually do exactly what we want."
7765280,7767040," And we don't have to fight with them."
7767040,7772480," But in case of a subprocess, these 151 lines do more that we need."
7772480,7774800," And we have to actively fight what they do."
7774800,7777840," So, that's kind of an interesting situation in here."
7777840,7779920," So, we do definitely want to strip down."
7779920,7786720," So, I might as well just go ahead and copy paste the knob in here."
7786720,7788640," knob run async."
7788640,7790000," And that would be better."
7790000,7793200," So, the only problem in here is with Windows version."
7793200,7793360," Right."
7793360,7798720," So, that's the only problem we have in here is that the Windows version does not..."
7798720,7799920," Yeah."
7799920,7803760," So, use more reliable rendering of the command instead of scmd rather."
7803760,7804000," Right."
7804000,7812160," So, the problem with WinAPI is that it accepts command line arguments as a single goddamn string."
7813440,7817760," It doesn't accept it as an array of const chars or anything like that."
7817760,7820080," It wants you to have a single string."
7820080,7827760," And it's your responsibility to actually render everything correctly and escape everything correctly and wrap everything in double quotes correctly."
7827760,7830000," It's fucking your responsibility."
7830000,7833920," Not the developers of Windows or anything like that."
7834640,7838320," Dave Plummer, where is the next episode of blame me for that?"
7838320,7840160," I'm not sure if you actually did that, but to me."
7840160,7845920," But now we're going to be blaming you for everything in WinAPI."
7845920,7846240," Anyway."
7846240,7846640," I'm sorry."
7846640,7847120," I'm joking."
7847120,7847600," I'm joking."
7847600,7848080," It's a joke."
7848800,7850560," So, what do I want you to do?"
7850560,7853360," What's interesting about subprocess, right?"
7853360,7863040," So, what's interesting about subprocess is that the developers of subprocess went through entire hassle of rendering the command line correctly."
7863040,7863840," Right."
7863840,7865760," So, let's actually take a look at that."
7865760,7869120," Subprocess create XC."
7869120,7871200," Create XC."
7871200,7872080," Where is that?"
7872080,7872800," Yeah, there we go."
7872800,7877040," So, there's a lot of code for redirecting and stuff like that."
7877040,7880160," And somewhere down below, let me see."
7880160,7880800," Yeah, there we go."
7880800,7884080," Combine command line together into a single string."
7884080,7886240," So, this is where it starts."
7886240,7890240," And that's the code responsible for concatenating command line."
7890240,7894000," Yeah, I think it continues to here."
7894000,7897600," And it's quoting and oh my god, bruh."
7897600,7899680," Bruh."
7902800,7903280," There we go."
7903280,7904800," So, this is where it stops."
7904800,7906080," And as you can see after that."
7906080,7907760," So, the command line combined."
7907760,7909520," We do the actual create process."
7909520,7912000," And it took 71 lines of code."
7912000,7920560," 71 lines of code responsible not for even setting up a new process, opening handles."
7920560,7922560," None of that shit."
7922560,7926560," Purely string manipulation to escape that stuff."
7926560,7929760," Just freaking think about that."
7930320,7936080," 71 lines of code of pure string manipulation just to run a goddamn child process."
7936080,7939200," WinAPI, everyone."
7939200,7941280," Freaking WinAPI."
7941280,7945200," Anyway."
7945200,7949520," So, I'm glad that I don't really work with WinAPI like very often, right?"
7949520,7949760," So."
7953040,7955920," PostEx is bullshit."
7955920,7957680," It is filled with random bullshit."
7957680,7963120," But I swear to God, WinAPI bullshit is on the next level, honestly."
7963120,7964880," It's on the next level."
7964880,7970720," So, what's interesting is that I feel like we can do a little bit of an interesting surgery."
7971520,7974800," What if we just use the knobs version?"
7974800,7976960," Let's just use the knobs version."
7976960,7984000," But still the escaping and concatenating of the command line from subprocess."
7985200,7986800," I think that's a very interesting idea."
7986800,7989920," Because we're going to end up with the code that is exactly what we want."
7989920,7990160," Right?"
7990160,7997200," Which just runs the child process without redirecting std out, std error or anything like that."
7997200,8003680," And in fact, I think this escaping code could have been useful for knob generally."
8003680,8005600," But we need to check the license."
8005600,8007440," What's the license of this entire thing?"
8007440,8009040," So, can I just like use it?"
8009040,8012480," So, this is free unencumbered software into public."
8012480,8012880," Okay."
8012880,8014160," So, it's public domain."
8014160,8016480," I didn't even have to credit the author."
8016480,8017200," It's public domain."
8017200,8022000," Anyone is free to copy, modify, publish, use, compile, sell, or distribute the software,"
8022000,8025760," either in source code form or compile binary for any purpose, blah, blah, blah."
8025760,8027120," And jurisdiction to recognize."
8027120,8027680," Yeah."
8027680,8032320," So, there's some problems with public domain that in some places in the world,"
8032320,8034880," it's not a thing that you can do."
8034880,8035120," Right?"
8035120,8038000," So, there's no such a legal notion as public domain."
8038000,8041760," So, because of that, sometimes you just need to use an actual license."
8041760,8043280," So, yeah."
8043280,8045200," But anyway."
8045200,8049680," So, it's totally fine for us to copy this kind of code."
8049680,8050480," So, that's pretty cool."
8050480,8050960," That's pretty cool."
8050960,8051520," That's pretty cool."
8051520,8053200," Okay."
8053200,8055120," So, what I'm thinking."
8055120,8057120," Am I thinking what I'm thinking?"
8057120,8060800," So, I suppose I'm going to be just copy pasting this and that stuff."
8063840,8073520," So, in here, let's go ahead and just, you know, copy this entire thing into the compiler dot c."
8073520,8077680," So, I'm going to..."
8077680,8079520," That's a lot of code, bro."
8079520,8079840," Okay."
8079840,8082240," So, I want to put it somewhere here."
8083680,8088240," Let's quickly replace one, two, three, four spaces with just a single tab."
8088240,8088480," Boom."
8088480,8090320," Actually, did it work?"
8090320,8090560," Okay."
8090560,8092080," I think I did a fucky-bucky."
8092080,8094720," So, one, two, one, two."
8094720,8097440," Tap."
8097440,8097920," Boom."
8097920,8098400," There we go."
8098400,8101360," So, everything works nicely."
8101360,8104400," So, I probably want to rename this to something else."
8104400,8105440," Okay."
8105440,8109280," Run subprocess."
8109280,8109520," Right."
8109520,8111200," Let's call it run subprocess."
8111200,8115600," Let's not call it subprocess run because it kind of collides with the name scheme of subprocess.h."
8115600,8117280," So, let's call it run subprocess."
8117280,8121440," So, in here, I would like to maybe accept the name."
8122080,8124800," And then I would like to accept maybe the args."
8124800,8126080," Right."
8126080,8128640," So, what we're going to be accepting in here is rather interesting."
8128640,8129200," Do we want to..."
8129200,8131520," So, knob_proc."
8131520,8132880," Right."
8132880,8139760," So, in knob, knob_proc is either handle or integer."
8139760,8140560," Right."
8140560,8142320," It's either handle or integer."
8142320,8146160," And the question is how we're going to be handling all of that."
8146160,8148400," So, I suppose..."
8148400,8151200," Do we have separate..."
8151200,8152480," Okay."
8152480,8154240," OS type windows."
8154240,8155120," But, yeah, whatever."
8155120,8157120," Okay."
8157120,8161280," So, I feel like we don't really need that."
8161280,8166640," So, this is needed purely for logging things."
8166640,8166880," Right."
8166880,8169120," We don't need that either."
8169120,8172080," So, in here, I'm going to just return integer for now."
8172080,8176720," So, since I'm not on Windows, this entire code is not going to be compilable."
8176720,8179440," We're going to test it a little bit later, maybe through wine."
8179440,8180640," We'll see."
8180640,8181840," We'll see how we can do that."
8181840,8183360," Okay."
8183360,8186480," So, in case of an error, how are we going to be reporting an error?"
8186480,8187840," I'm really curious."
8187840,8190560," I'm really, really curious."
8190560,8194640," So, in case of a subprocess, how did we do that?"
8194640,8198240," subprocess create.exe."
8200720,8207120," So, if some sort of error has happened, how we have..."
8207120,8212640," So, we just returned -1 without even specifying that something weird happened."
8212640,8214400," Okay."
8214400,8216960," So, yeah, we didn't even log anything."
8216960,8218080," All right."
8218080,8219680," So, that makes sense, I suppose."
8219680,8223600," So, let's not log anything and let's just always return -1 in this specific case."
8224960,8225360," Okay."
8225360,8229440," So, CP this was supposed it's a child pid."
8229440,8231680," So, this leaks a bit of memory."
8231680,8232720," So, what are we doing here?"
8232720,8235040," Command line null."
8235040,8236640," Aha."
8236640,8240080," So, I see what is going on in here."
8240080,8244240," We were basically appending..."
8246640,8249600," So, I just realized that we're leaking a little bit of memory in here."
8249600,8252000," Yeah."
8252000,8256400," So, we still need to allocate and reallocate a little bit of stuff."
8256400,8265040," Because the last element in here has to be null."
8265040,8265680," NULL."
8265680,8265920," Right."
8265920,8269600," So, if we take a look at the exactlyp in here."
8269600,8269920," Right."
8269920,8275280," So, let's actually do something like man exactlyp."
8275280,8279680," And what is that?"
8279680,8285440," So, there's somewhere documentation that talks about args."
8286000,8290480," So, the argv argument is an array of pointers to null terminated strings"
8290480,8292320," that represent argument least available."
8292320,8297200," The first argument by convention should be pointed to the file name associated with the file."
8297200,8300480," The array of pointers might be terminated by a null pointer."
8300480,8300720," Right."
8300720,8302960," So, we kind of need to do this kind of thing."
8302960,8307680," We still kind of need to do this stuff."
8307680,8310400," And I'm thinking what's the easiest way to do that."
8310400,8314560," We do have dynamic arrays in the compiler."
8314560,8315680," We can try to use them."
8315680,8315840," Right."
8315840,8317360," So, vector add and whatnot."
8317360,8319840," It's actually super easy to do that."
8319840,8323120," So, in here it's going to be name."
8323120,8324800," Right."
8324800,8326080," So, this is going to be name."
8326080,8329120," And cmd null."
8329120,8330640," This is going to be const char."
8330640,8333040," Initially, it's going to be null."
8333040,8336000," So, and what do we do in here?"
8336000,8336320," Right."
8336320,8341120," So, first of all, we do vec add cmd null."
8341120,8343280," Name."
8343280,8345280," So, the first thing has to be the name."
8345280,8347520," Then we have to iterate through all of the arguments."
8347520,8349280," Right."
8349280,8352640," So, and since the arguments."
8352640,8352960," Yeah."
8352960,8354000," Something like this."
8354000,8358800," Since the arguments is probably a vector as well."
8358800,8361440," We're going to be expecting it to be a vector."
8361440,8361760," Right."
8361760,8363920," So, let's do it like this."
8363920,8365360," You institute it to t."
8365360,8365760," Zero."
8365760,8367840," And, yeah."
8367840,8369280," It's definitely going to be a vector."
8369280,8369920," Vec size."
8369920,8372480," So, this is going to be args plus plus i."
8372480,8377760," And then we just do vec add cmd null args i."
8377760,8378800," There we go."
8378800,8384320," And after that, we have to append a null in here."
8384320,8385520," There we go."
8385520,8386880," So, it's kind of the same in here."
8386880,8387040," Right."
8387040,8388400," So, it's kind of the same."
8388400,8391680," So, now in here I can do cmd null."
8391680,8394640," But I think it would make sense to actually call it args null."
8394640,8396320," Right."
8396320,8398320," So, args null."
8398320,8401920," And in here we don't really leak anything anymore."
8401920,8405760," Because the vectors are allocated in the arena anyway."
8405760,8406720," So, who cares."
8406720,8406960," Right."
8406960,8408000," So, nobody really cares."
8408000,8412320," So, in here we just say that we couldn't start the child process."
8412320,8416000," But in that specific case we don't have to exit."
8416000,8417520," Like, we don't have to return anything."
8417520,8418880," Because we are in the child process."
8418880,8420960," We can just like do exit in here."
8420960,8422480," And here we do enrichable."
8422480,8426320," As far as I know in C3 codebase we already have enrichable."
8426320,8427600," Right."
8427600,8428800," So, it's just that."
8428800,8429760," So, we can do it like this."
8429760,8431360," Which is super cool."
8431360,8432320," Which is super cool."
8432320,8432960," And yeah."
8432960,8435040," It actually made the entire thing smaller."
8435040,8436800," It actually made it much, much smaller."
8436800,8438800," All right."
8438800,8440080," So, one of the things I want to do."
8440080,8442000," I probably want to get rid of the subprocess."
8442000,8442320," Right."
8442320,8445760," So, then using subprocess create."
8445760,8448640," Subprocess create should fail."
8448640,8450800," I actually saw some spaces in here."
8450800,8452080," Oh, it's not my code."
8452080,8453440," I'm not going to be modifying it then."
8453440,8455120," All right."
8455120,8456880," I'm not going to be modifying it then."
8456880,8458000," So, where is the compilation?"
8458000,8458240," All right."
8458240,8460080," Let's go ahead and try to compile this entire thing."
8460080,8461280," And go to the compilation errors."
8461280,8463760," And see how it all works out."
8463760,8464960," Yep."
8466400,8467920," Let's see how it all works out."
8467920,8473200," So, I should have not done minus b."
8473200,8474880," Minus b just rebuild everything."
8474880,8476320," Right."
8476320,8478480," So, I want to do minus g5."
8478480,8480320," But it's probably going to be rebuilding everything now."
8480320,8481760," Okay."
8481760,8482720," So, args null."
8482720,8486720," So, what you don't like minus freunde."
8486720,8489200," This is because it's incompatible pointer."
8489200,8492320," So, there was a reason why I was casting that pointer."
8492320,8495760," Noob.cmd run async."
8495760,8497520," Right."
8497520,8501120," Because somewhere here, I was actually specifically casting it to this kind of point."
8501120,8503280," Because otherwise, it doesn't really work."
8503280,8506640," And by the way, in here, we'll probably have to wait."
8506640,8509760," We will have to do wife excitement."
8509760,8510160," Right."
8510160,8511680," So, if you know what I'm talking about."
8511680,8513440," We will have to excite our wife."
8513440,8515040," Okay."
8515040,8516560," So, and in here, what do we have in here?"
8516560,8518640," So, we don't even have to do this kind of stuff anymore."
8518640,8519200," Look at that."
8519200,8520960," We don't have to do that."
8520960,8525600," So, we can now do something like run subprocess."
8525600,8526000," Right."
8526000,8529840," And in here, what we can just provide, we can just provide the name."
8529840,8532960," And where are the args?"
8532960,8534000," Where are the args?"
8534000,8536800," We can just say active target args."
8536800,8539200," Something like this."
8539200,8539520," Right."
8539520,8541920," So, the active args."
8541920,8546000," And on top of this kind of stuff, as you can see, we are..."
8546000,8547600," Yeah."
8547600,8549360," We're also doing that."
8549360,8552160," So, we don't really need to do this kind of stuff."
8552160,8552480," Right."
8552480,8558240," So, we can just say launching, then print all of these things."
8558240,8563440," So, here, I'm just like iterating all the args because I want to print, because I want to log all of that stuff."
8563440,8564960," Run."
8564960,8566720," Then I run the subprocess."
8567680,8570320," And then if it fails, right, it fails."
8570320,8571920," Okay."
8571920,8577280," So, in here, we don't even have to do this kind of stuff anymore."
8577280,8578160," Yeah."
8578160,8580720," We don't even have to do this kind of stuff anymore."
8580720,8585680," And we also have to make sure that whatever we return here is actually the exit code."
8586400,8588800," As of right now, it is not particularly true."
8588800,8592880," So, because we need to do the wife excitement, right?"
8592880,8594960," So, wife excited."
8594960,8597040," So, that's basically what we have to do."
8597040,8602000," So, the way we do that, by the way, is we do that in a loop, right?"
8602000,8604800," Because we're waiting for the status of the pit to change."
8604800,8609600," But it could be changing not to exit it, right?"
8609600,8611280," So, that's one of the things in here."
8611280,8612960," So, it could be changed not to exit it."
8612960,8620320," So, because of that, we have to be a little bit careful, right?"
8620320,8620560," Okay."
8620560,8624400," So, I'm going to be grabbing this entire loop, right?"
8624400,8629040," So, here, I actually return pid, which is rather interesting."
8629040,8630000," But, I mean, that's fine."
8630000,8632320," Okay."
8632320,8634160," So, this is the spaces."
8634160,8638000," Let's quickly query replace the spaces with tabs."
8638000,8638560," There we go."
8640160,8642720," And, what do we do?"
8642720,8647520," So, we're waiting for this thing to exit."
8647520,8652240," And, for whatever reason, we may not actually be able to wait on that bit."
8652240,8655520," Well, I don't really know what to return in that case, right?"
8655520,8656800," So, I'm going to just return minus one."
8656800,8661840," So, then, if the status of the thing is exited."
8661840,8664800," So, if it exited, I just get the exit status."
8666640,8670640," So, an exit status is the thing that we care about."
8670640,8671440," Okay."
8671440,8673600," So, all of that stuff is not really neat, right?"
8673600,8678560," Because we expect this run sub process command to return exit code."
8678560,8680240," And that is the exit code."
8680240,8682000," So, we can just return it like this."
8682000,8683440," Okay."
8683440,8685520," So, and this command was terminated."
8685520,8688400," This command was terminated."
8688400,8691280," And, do we want a log of that?"
8691280,8693200," How do we even log things, by the way?"
8693200,8694560," So, we use Eprint."
8694560,8695920," Yeah."
8695920,8698960," So, for errors, we use Eprintf."
8698960,8699920," What is Eprintf?"
8699920,8701120," I never really used it."
8701120,8702800," Is that a..."
8702800,8703200," No."
8703200,8704880," This is its own thing."
8704880,8705440," Let me see."
8705440,8705760," Okay."
8705760,8706080," I see."
8706080,8708000," So, it just..."
8708000,8708400," Oh, okay."
8708400,8709200," It just prints to..."
8709200,8712880," You could have just made it a macro, bro."
8712880,8714560," Right?"
8714560,8717120," You could have just made it a macro."
8717120,8719920," There's no need for this thing to be a function, right?"
8719920,8721760," In fact, it's even easier to make it as a macro."
8721760,8724080," You don't have to deal with a real list or anything like that."
8724080,8724640," But, whatever."
8724640,8725760," Okay."
8725760,8727920," So, I suppose we could just..."
8727920,8729920," Yeah."
8729920,8733280," I think we could just do the logging in here."
8733280,8736160," So, all of the logging that I kind of stripped off of here."
8736160,8739280," We could just do that in Eprint."
8739280,8740160," Yeah."
8740160,8740880," Eprintf."
8740880,8742160," So, why not?"
8742160,8746160," ""Command process was terminated by this thing."""
8746160,8749120," Funnily enough."
8749120,8750000," Funnily enough."
8751520,8752720," ""Command process."""
8752720,8756240," So, let's put it this way."
8756240,8760000," ""S"" and we just do name."
8760000,8760720," Right?"
8760720,8761680," So, we just do name."
8761680,8765520," This was terminated by this kind of thing."
8765520,8768240," And we simply return minus one."
8768240,8776720," So, and in here, we could do Eprintf."
8778240,8782240," And what we were saying in here."
8782240,8784080," ""Could not wait on command."""
8784080,8784320," Yeah."
8784320,8785520," So, let's actually use that."
8785520,8794240," ""Could not wait on as."""
8794960,8796240," So, this one is going to be name."
8796240,8798400," ""pid""."
8798400,8800000," So, I think it's a..."
8800000,8801200," Is it really a proc?"
8801200,8804560," I'm not quite sure."
8804560,8804800," Yeah."
8804800,8807120," Because proc in here is cpid."
8807120,8811280," So, in this entire thing, we have to replace proc with cpid."
8811280,8812880," Because we combine two functions."
8812880,8815120," Like, these two stuff were separate functions before."
8815120,8816960," We're combining them into a single function now."
8818320,8818640," Right."
8818640,8820160," So, this one is that."
8820160,8822480," ""Could not wait on that."""
8822480,8823760," ""Determinated by that."""
8823760,8824480," Blah, blah, blah."
8824480,8827840," This one has to be Eprintf."
8827840,8831760," Let me actually see Eprintf."
8831760,8831920," Yeah."
8831920,8833280," So, it's actually capitalized."
8833280,8837200," Right."
8837200,8837440," Okay."
8837440,8839840," What else do we have in here?"
8839840,8841760," So, I would like to maybe log some stuff."
8842960,8843280," Right."
8843280,8846160," So, let's actually go ahead and log some stuff."
8846160,8851520," ""nob run cmd run async."""
8851520,8853440," Where is that?"
8853440,8854400," Oh, right."
8854400,8855760," ""else."""
8855760,8860000," ""Could not fork child process."""
8860000,8862800," So, this is one of the things we want to print in here."
8862800,8864880," So, I was removing all of that login."
8864880,8866800," Now, I'm putting it back."
8866800,8867120," Right."
8867120,8869600," Because I didn't know that I could log all this stuff."
8869600,8869840," Right."
8869840,8870640," Don't judge me."
8871840,8873600," This actually happens to me very often."
8873600,8873760," Right."
8873760,8876160," So, I can just remove some stuff and then I realize."
8876160,8876720," Oh, okay."
8876720,8878640," I can put it back now."
8878640,8879440," Right."
8879440,8885440," ""Could not fork child process as name because of this error."""
8885440,8886320," Right."
8886320,8891680," So, in here, we can say ""Could not exact child process as name."""
8891680,8893680," There we go."
8893680,8896720," So, it's always nice to have a little bit of a login in here."
8896720,8896880," Right."
8896880,8899440," So, just like roughly know what the is going on, bro."
8900880,8901280," So, yeah."
8901280,8902320," This is a very good function."
8902320,8902480," Right."
8902480,8904000," You're forking the thing."
8904000,8905520," Then you are preparing."
8905520,8907680," You're exec_vp-ing the argument."
8907680,8911120," Oh, I think I know why I wasn't caring about this thing leaking."
8911120,8912720," Because it was happening in the child process."
8912720,8919600," And the image of the child process is going to be replaced after exec_vp anyway."
8919600,8921520," So, who cares if we leaked anything in there?"
8921520,8922480," So, it doesn't matter."
8923840,8924640," Okay."
8924640,8926320," So, yeah."
8926320,8926960," That's pretty cool."
8926960,8928480," That's pretty cool."
8928480,8928960," That's pretty cool."
8928960,8929440," That's pretty cool."
8929440,8930320," So, this is cp."
8930320,8933040," Let's try to compile this entire sheet and see."
8933040,8934640," So, it doesn't have error ""no""."
8934640,8936240," It's kind of surprising, honestly."
8936240,8939360," So, because error ""no""."
8939360,8942080," Is it C standard compliant?"
8942080,8942720," I think it is."
8942720,8942880," Yeah."
8942880,8944480," So, it's part of the C standard."
8944480,8948800," So, we might as well actually include error ""no.h""."
8948800,8951760," Because I'm really surprised that it's not."
8951760,8952000," Okay."
8952000,8952960," So, all of that compile."
8952960,8953440," Look at that."
8953440,8955520," Look at that, bruv."
8955520,8956480," Look at that, bruv."
8956480,8956960," Look at that."
8956960,8957440," Look at that."
8957440,8958240," Look at that, bruv."
8958240,8960720," Okay."
8960720,8961600," That's very progress."
8961600,8962240," I really like that."
8962240,8965360," So, now what I want to do."
8965360,8973760," I want to just like go ahead and build C3, compile, run, and just like main C3."
8974640,8974960," All right."
8974960,8976640," Okay."
8976640,8977680," So, I'm excited."
8977680,8981600," And again, I don't even have to fight with the code of the running process."
8981600,8984240," I don't have to have this loop that reads stuff."
8984240,8986240," It just like automatically does that for me."
8986240,8987840," With less code."
8987840,8989760," With just less code."
8989760,8993200," So, and now I can do something like foo and bar."
8993200,8996080," And all of that should be passed there as well."
8996080,8998400," And it is in fact passed there."
8998400,9002080," And in here, if I put this kind of thing, it should be passed there as well."
9002080,9002640," Correctly."
9002640,9003200," Okay."
9003200,9004880," So, we don't need subprocess anymore."
9004880,9007440," In fact, chat, chat."
9007440,9011120," I know that you're not there because nobody's watching right now, but chat."
9011120,9012960," We can just get rid of this subprocess.h."
9012960,9013760," It's not needed."
9013760,9015120," Fuck you, subprocess.h."
9015120,9016640," I mean, thank you for the code."
9016640,9023280," I should have not deleted that because I was about to steal some code from it."
9023280,9024320," I get fucking that."
9024320,9024560," Okay."
9025120,9026960," So, thank you, by the way, for the codes."
9026960,9027440," So, thank you."
9027440,9027600," Thank you."
9027600,9027760," Thank you."
9027760,9029040," I'm sorry for saying fuck you."
9029040,9031360," It's actually a pretty cool piece of code."
9031360,9031840," I'm sorry."
9031840,9032480," I'm sorry."
9032480,9033360," I'm actually sorry."
9033360,9034480," Anyways."
9034480,9035920," So, I was joking."
9035920,9036640," I was joking."
9036640,9037040," Of course."
9037040,9041440," But we need to test how it's going to work without this entire stuff."
9042000,9048800," So, I actually added like, you know, search path to include."
9048800,9051120," So, this is probably something that I will have to remove now."
9051120,9054000," Include path."
9054000,9055600," Include directories."
9055600,9055920," Right."
9055920,9058400," So, there is include directories."
9058400,9061200," And this is, yeah, this is what I added in here."
9061200,9062880," We don't need that stuff anymore."
9062880,9065440," We don't need that stuff anymore."
9065440,9065760," Okay."
9072000,9072640," Can you hear that?"
9072640,9075200," There's a police coming for me."
9075200,9076960," I'm not sure if you can hear that."
9076960,9079200," And there's no chat around."
9079200,9079680," Oh, okay."
9079680,9080880," So, this is actually committed."
9080880,9082480," So, I can bring it back."
9082480,9083040," Look at that."
9083040,9084720," This is the power."
9084720,9088320," This is the power of version control system."
9088320,9089120," Cheers, by the way."
9089120,9092720," Okay."
9092720,9095280," I can easily just bring it back."
9095280,9097280," Just bring it back."
9097280,9098080," Just bring it back."
9098080,9099520," All right."
9100080,9103600," So, now I need to test this entire size on Windows."
9103600,9108160," But it don't have Windows machines."
9108160,9110480," So, the question is like, how the fuck I'm going to do that?"
9110480,9117760," So, I could use Wine, but I won't be able to build it with Wine,"
9117760,9119920," if I understand correctly."
9119920,9123840," It's kind of bizarre, honestly."
9123840,9124640," It's kind of bizarre."
9124640,9129360," So, how do we even do that?"
9129360,9132480," So, if there is some Windows code, usually."
9132480,9135520," How do we even handle the Windows code?"
9135520,9136880," Do we use MSVC?"
9136880,9138720," Macro."
9138720,9139600," So, WimGrep."
9139600,9140240," Let's actually see."
9140240,9142960," Do we use MSVC anywhere?"
9142960,9146720," I don't see the usage of MSVC."
9146720,9147680," Thank you."
9147680,9150240," So, do we use underscore Win32."
9150240,9152720," There's quite a few."
9152720,9153680," Well, I mean, okay."
9153680,9157440," There's one place where we do that."
9157440,9160640," There's one place where we look for that."
9160640,9164800," So, do we include Win API like Windows.h anywhere?"
9164800,9166080," We actually don't."
9166080,9166080," We actually don't."
9166080,9170720," No, we do."
9170720,9174080," It's in utils, but it's just the utils."
9174080,9178480," Okay."
9178480,9180080," So, there is this thing."
9180080,9180800," There's this thing."
9180800,9182400," It's called if platform Windows."
9183280,9183680," Okay."
9183680,9186720," So, is it defined somewhere?"
9186720,9188960," Who defines this in typing?"
9188960,9190400," So, there's JVimGrep."
9190400,9192560," Or JVimGrep."
9192560,9193680," Is it defined anywhere?"
9193680,9194560," So, define."
9194560,9195280," Yeah, there we go."
9195840,9197200," So, it's somewhere in comments."
9197200,9199120," Interesting."
9199120,9201440," Very, very interesting."
9201440,9202640," Very, very interesting."
9202640,9205440," Platform Windows."
9205440,9206400," Maybe as well."
9206400,9208160," It's defined somewhere in CMake."
9208160,9213760," So, CMake, CMake, CMake, CMake, CMake."
9213760,9215120," Find MSVC."
9215120,9219760," But anyways."
9219760,9223040," So, I was thinking maybe I could create like a very small,"
9224960,9228560," very small example, right?"
9228560,9233520," Where I could just take my run subprocess."
9233520,9235440," I'm just taking it there."
9235440,9239440," And I'm just trying to run the program."
9239440,9242080," And then I'm going to compile it with MinGW."
9242080,9246000," And run it in Wine to make sure that, you know,"
9246000,9248080," it runs correctly and stuff like that."
9248080,9249840," So, this is what I was thinking about."
9249840,9251280," Right."
9251280,9254640," So, how we can call that?"
9254640,9259600," So, maybe like a small, like a bench."
9259600,9259760," Right."
9259760,9261040," So, we're going to call it Bench."
9261040,9266560," So, in here, I'm going to maybe just include that."
9266560,9271040," And in here, in here, in here."
9271040,9273120," What's the program we're going to run?"
9273120,9273280," Okay."
9273280,9275120," So, we already have main."
9275120,9275280," Right."
9275280,9276480," So, we already have main."
9276480,9278400," Even if I run it."
9278400,9279840," It says Y Excited."
9279840,9282000," So, this is already compiled from C3."
9282000,9283440," So, we can already use that."
9283440,9286960," So, let me try to do that."
9286960,9290080," I'm going to just do it like this."
9290080,9292240," And here, I just do main."
9292240,9295360," And here, I can just do args."
9295360,9295600," All right."
9295600,9298480," So, because you can always do something like args."
9298480,9300320," Maybe even like this."
9300320,9306320," And in here, I'm going to put full and then maybe bar."
9306320,9309200," And then we have to put a null in here."
9309200,9311040," But we don't really have to put null in there."
9311040,9315120," because it's going to be nullified by the run subprocess."
9315120,9317120," So, int ret."
9317120,9320320," And if ret not equal to zero."
9320320,9321280," Okay."
9321280,9328640," So, maybe we can extract this entire thing to a separate sort of like a variable."
9328640,9330480," Let's see."
9330480,9331120," Emacs."
9331120,9331840," Shut the fuck up."
9331840,9332640," Emacs."
9332640,9333120," Right."
9333120,9335280," So, we can say."
9335280,9336800," Let's put it this way."
9337760,9340400," s exited with d."
9340400,9343520," There we go."
9343520,9344880," So, in here, we can just return one."
9344880,9349280," Let's just return red."
9349280,9350720," I think that's a good idea."
9350720,9352400," I think that's a good idea."
9352400,9352640," Okay."
9352640,9357920," So, now, if I try to build bench.c, is it going to even build?"
9357920,9365200," So, it kind of depends on all of these like special things like unistd and stuff like that."
9365200,9366240," So, let me see."
9366240,9368320," I have to do fork."
9368320,9370080," All right."
9370080,9370640," So, yeah."
9370640,9372400," We do need unistd."
9372400,9375040," So, let's put that in here."
9375040,9378640," So, what's the next thing that we need in here?"
9378640,9379600," What's the next thing?"
9379600,9381440," Now, we need ePrintf."
9381440,9381760," Okay."
9381760,9383440," So, in case of ePrintf."
9383440,9384240," As I already said."
9384240,9386240," You could have made it a macro."
9386240,9386400," Right."
9386400,9388800," So, ePrintf as just a format."
9388800,9390160," And then the rest of the things."
9390160,9392160," And we just simply redirect all of that."
9392160,9393040," ePrintf."
9393040,9395040," std error."
9395040,9396080," Format."
9396080,9397120," And like a VA."
9397120,9399200," VA args."
9399200,9399760," Like this."
9399760,9400160," Right."
9400160,9402880," There's no need to create an actual function in here."
9402880,9404480," str error."
9404480,9406240," So, this is part of this string."
9407360,9408560," What else do we have in here?"
9408560,9408960," Error."
9408960,9409360," No."
9409360,9409680," Yeah."
9409680,9410640," That's understandable."
9410640,9411760," That's just error."
9411760,9412080," No."
9412080,9413920," What else do we have in here?"
9413920,9415600," Vecadd."
9415600,9415920," Okay."
9415920,9416880," This is annoying."
9416880,9417200," Right."
9417200,9418640," So, fuck you."
9418640,9419600," Okay."
9419600,9421680," Vecadd."
9421680,9423120," Can I just."
9423120,9423520," Like."
9423520,9425600," I can't even use it that easily."
9425600,9426400," Fuck."
9426400,9435360," I can't use it separately from the rest of the stuff."
9435360,9436080," That's annoying."
9436080,9438480," So, it's a libh."
9438480,9442720," And I wonder if I can just like include libh."
9442720,9443840," Right."
9443840,9445280," So, and Vecadd."
9445280,9447200," I'm pretty sure I won't be able to usually use that."
9447200,9449280," So, it's part of the sscutils."
9449280,9450880," So, if I try to compile it."
9450880,9451440," Right."
9451440,9453040," So, it doesn't exist in here."
9453040,9456320," I can do something like src utils."
9456320,9457200," Right."
9457200,9458560," Just search it in there."
9458560,9463120," But then it can't find calloc arena."
9463120,9463920," Right."
9463920,9467120," And calloc arena is part of the utils malloc.c."
9467120,9468240," Okay."
9468240,9471040," So, we can just do something like src malloc."
9471040,9475120," src utils malloc.c."
9475120,9476880," All right."
9476880,9480880," And now it depends on a shit ton of other things."
9480880,9482240," By the way, waitpid."
9482240,9483760," Waitpid."
9483760,9484880," Let me see."
9484880,9486080," So, this is waitpid."
9486080,9486720," What does it want?"
9486720,9488640," It wants syswait."
9488640,9490320," Right."
9490320,9492240," It wants syswait."
9492240,9494640," Let's put it in here."
9494640,9495920," Like so."
9495920,9497440," Man."
9497440,9498640," This is a rabbit hole."
9498640,9501040," We won't be able to easily just do that."
9501040,9504080," So, error exit is located in errors."
9504080,9504400," Right."
9504400,9508480," So, and this is part of the utils, of course."
9508480,9509360," Okay."
9509360,9511520," So, src utils errors."
9511520,9513120," What else do we want in here?"
9513120,9514640," You want memory init."
9514640,9516240," Right."
9516240,9517680," And it's part of the malloc."
9517680,9518080," Really?"
9518080,9520800," But I already undefined."
9520800,9525840," So, that means maybe it just means that I have to first put this thing in here."
9526640,9527520," And only then."
9527520,9529600," And function exit."
9529600,9529920," Okay."
9529920,9530880," Exit compiler."
9530880,9533280," And, okay."
9533280,9536640," And it's main."
9536640,9538240," Huh."
9538240,9538960," Are you real?"
9538960,9541440," Undefined reference to exit."
9542000,9542320," Okay."
9542320,9545040," I can copy-paste this thing into the bench."
9545040,9547040," Like so."
9547040,9549280," So, this is exit compiler."
9549280,9551040," Right."
9551040,9552400," So, on error jump."
9552400,9552960," All right."
9552960,9556320," So, where this thing is located."
9556320,9559200," It's located in here somewhere."
9559200,9561920," So, yeah."
9561920,9563920," Now, if I try to run that."
9563920,9569360," So, it complains about the lack of this thing, which is part of the vmem."
9569360,9569840," Okay."
9569840,9571520," So, we can fix that as well."
9572000,9574960," I'm sure if you can see that because it's getting longer."
9574960,9580240," SRC utils vmem.c."
9580240,9580560," Okay."
9580560,9585120," And it compiled."
9585120,9585840," Look at that."
9585840,9586160," Okay."
9586160,9590880," This is the dumbest shit I've ever done."
9590880,9595840," So, to just have an access to these goddamn vectors."
9597360,9598000," What I had."
9598000,9603520," I had to compile with like a chunk of utilities from the compiler itself."
9603520,9606000," That's literally what I had to do."
9606000,9608800," I'm surprised it works."
9608800,9610560," I'm fucking surprised it works."
9610560,9610960," But yeah."
9610960,9612320," This is what I had to do in here."
9612320,9612720," All right."
9612720,9619760," So, and I do that because I want to preserve this code as it is because that's the code that will go into the pull request."
9619760,9622800," Like I could replace it with a different kind of dynamic array."
9622800,9626880," But I mean, I'm testing that code with this kind of dynamic array."
9626880,9627840," You know what I'm talking about?"
9627840,9629760," Like I can't just replace it with something else."
9629760,9631920," I have to use exactly the same dynamic array."
9631920,9632480," God damn it."
9632480,9634400," Otherwise, it's not going to work."
9634400,9636240," So, it's kind of stupid."
9636240,9636960," I understand that."
9636960,9638080," But it is what it is."
9638080,9638960," It isn't what it isn't."
9638960,9639680," Anyway."
9639680,9640880," So, this is how we build that."
9640880,9642480," And if I try to run the center, I think."
9642480,9643840," Is it going to even do that?"
9643840,9646640," So, assertion main size."
9646640,9648000," Okay."
9648000,9651120," So, I suppose we probably need to initialize it first."
9651120,9652480," Yeah."
9652480,9654480," So, I have a feeling."
9654480,9658240," So, there was some sort of a memory initialization in the main function."
9658240,9661040," So, let's go ahead and just like see."
9661040,9663280," Bench B."
9663280,9665840," So, they also call it bench for whatever reason."
9665840,9666160," Okay."
9666160,9670000," So, memory must be handled here."
9670000,9671360," Okay."
9671360,9673600," So, max memory zero."
9673600,9674800," Aha."
9674800,9676400," All right."
9676400,9679040," So, I feel like this is what we have to do first."
9679040,9680960," So, we need to initialize the memory."
9680960,9683120," Otherwise, we can't really allocate any memory."
9683120,9684320," Okay."
9684320,9685920," So, let's actually put this stuff in here."
9685920,9689520," And let's try to recompile the whole thing."
9689520,9690320," Max memory."
9690320,9691520," So, what is the max memory?"
9691520,9694320," So, in the main."
9694320,9696800," So, max memory."
9696800,9697840," Okay."
9697840,9701360," So, I suppose it's equal to zero."
9701360,9702960," What if I set it to zero?"
9702960,9704320," Aha."
9704320,9706480," So, if it's available."
9706480,9710240," So, set max limit to something else."
9710240,9711600," Okay."
9711600,9716400," I suppose it's fine to just, you know, set it to zero."
9716400,9718880," So, what's the type of it?"
9718880,9719760," So, size t."
9719760,9722560," Size t is equal to zero."
9723120,9724960," I'm still not sure if I'm doing it correctly."
9724960,9726000," But, I mean, who cares?"
9726000,9726480," Yeah, there we go."
9726480,9726880," It works."
9726880,9729120," Nice."
9729120,9731360," So, it complains about some stuff."
9731360,9733920," Because I suppose to do it like this."
9733920,9735440," Right."
9735440,9736320," Let's try to recompile."
9736320,9737920," And probably going to, after recompilation,"
9737920,9739440," instantly run this entire thing."
9739440,9740800," Look at that."
9740800,9741680," It even works."
9741680,9745440," My Frankenstein monster actually works."
9745440,9746400," Right."
9746400,9748800," So, it's kind of funny."
9748800,9749120," Right."
9749120,9751840," So, it's this technique where I just like,"
9751840,9754640," I need to test a piece of code."
9754640,9754960," Right."
9754960,9757840," So, but testing that piece of code within the entirety of the project"
9757840,9758960," is kind of not possible."
9758960,9759200," Right."
9759200,9761120," Because I need to compile it for Windows."
9761120,9763600," But compiling the entire thing for Windows is kind of hard"
9763600,9765280," because it's CMake and stuff like that."
9765280,9767120," And I'm on Linux and everything."
9767120,9770400," So, I just took the chunk of the project,"
9770400,9774320," separated it, and compiled it separately without CMake."
9774960,9782000," So now it should be easier for me to compile this thing, for instance, with MinGW, right? So MinGW,"
9782000,9791120," right, I don't quite remember. How do you do MinGW? So let's take a look at Visualizer, right? So"
9791120,9799280," because I do build Visualizer with MinGW, so somewhere here there should be MinGW. So it's a"
9799280,9806640," x86, 64, w64, MinGW32, blah, blah, blah, blah, blah, blah, blah. So that's what we have to do in here."
9806640,9817680," All right. So it's x86, w64, MinGW, I suppose GCC. Yeah, it's GCC. Let's go."
9817680,9826640," Okay, this is perfect. Right. So essentially what we have to do now, if dev_win32"
9827600,9836400," do something else. Otherwise, include those things. And if, like so, look at that. I mean,"
9836400,9845280," I wanted to do... whatever. So it doesn't properly indent anything. Okay, now we're freaking talking,"
9845280,9854480," it was trying to build this scheisse. So we have to include windows bimbos."
9855920,9861040," Now we're talking, look at that. So we're compiling this windows code."
9861040,9866800," Okay, so it fails at rendering the whole thing."
9866800,9874080," Which is great news because this is exactly what I wanted to steal from subprocess, right? So we'll go"
9874080,9883920," ahead and do that. Subprocess, create xc. Where is that thing? Jesus, I need to disable white space mode."
9883920,9895120," Now, where is that stuff? Ah, so this is where it ends. And where does it start? I didn't see it."
9897120,9901600," Combine command line together into a single string. That's what I want."
9901600,9909040," All right. So let's just steal the entirety of this thing. All right, cool."
9909840,9916240," Now, in the bench, in the bench, I'm gonna just put the syntax tab in here."
9916240,9927600," So there's a lot of spaces in here, but I'm pretty sure I can just indent. And it kind of works. It"
9927600,9933840," almost works, I would even say. I'm going to just quickly create, replace one, two, three, four with a tab."
9933840,9942400," Boom, boom, boom, boom, boom. I want you in my room. Let's spend the night together. I'm so sorry. Anyways."
9942400,9949520," So let's get rid of that stuff, I suppose. And we don't have to free anything in here."
9949520,9956000," Okay, so this one is rather interesting. So I want to actually say that,"
9957440,9965440," you know, combine coming out together into a single string. Stalling from subprocess dot h. Yeah."
9965440,9974320," I think it's fair. I think it's fair. All right. So now let's try. So theoretically setting null to"
9974320,9981520," this should not be a problem. Check for errors, blah, blah, blah. Okay. So that is fine. That is totally fine."
9982400,9991360," Okay. All right. We're going places. LEN. Okay. So when you're referring to LEN in subprocess.h,"
9991360,9996480," what the is LEN and where is it defined? Where the LEN is defined?"
10002960,10010480," LEN is just, okay, it's just one of these things. Subprocess size. Can I simply, brother,"
10010480,10020640," do something like this? It's written in this like an old style C89C, right? Where you first define"
10020640,10027440," all of the variables and then you use them. And apparently LEN is reused several times. Yeah,"
10027440,10034800," it is reused several times. So here it is used again. So to not redefine it. It's a very old style C."
10034800,10042560," I recognize it. It's a bit annoying, but I mean, it is what it is. It's fine. It's fine. Okay. So what"
10042560,10050880," do we have in here? So I. Okay. So in original subprocess, I suppose I is also defined at the beginning"
10050880,10060320," of the function. It freaking is. But I mean, I guess it makes sense, right? So it's written in this old"
10060320,10066000," style. So it's compilable by the majority of C compilers. It's understandable. It's perfectly"
10066000,10075680," understandable. Okay. Fine, fine, fine, fine. Okay. Okay. Let's go. Let's go. So command line. This is not"
10075680,10085200," really a command line per se, right? So I would say... Oh, fuck. You know what is surprising?"
10085200,10089680," The most surprising part is that"
10089680,10097040," Vec size worked on args, even though args is not a vec."
10098640,10106800," I think it should be. You know what we should do? I should make it a vec and essentially just do null"
10106800,10122800," and do vec add args like so. vec add args bar. Let me try to compile that for Linux. Right. So what does it"
10122800,10130800," say? I forgot this kind of stuff. What else do we want? This has to be just like this. And it seems to"
10130800,10140320," be working. Okay, cool. So now let's try to build for Windows. Bimbos. Microsoft. Microsoft bimbos. So"
10140320,10150400," uint32t and this one has to be vec size args. That's what we're doing here. That's how we roll."
10151360,10159440," So for the trailing space. What the fuck are you doing here?"
10159440,10171120," Okay. What else do we have? I suppose we have to replace command line everywhere within the loop with"
10171120,10176640," args, right? So it's called args. Command line. This is args now."
10179440,10185760," cool. What else do we have in here? So I'm just following compilation errors, right? So it's purely"
10185760,10190480," compiler-assessive-refactoring. Supratus null. In the sub-process, Supratus null is like why do"
10190480,10197120," they have these custom things? It's kind of bizarre. Right? In C++ it's null. In C it's..."
10197120,10204400," Okay, it's probably for very old C. That's what that's probably what it is. Let's quickly replace the"
10204400,10213040," whole thing with just null. It's not needed. It's really not needed, brother. What else do we have? Okay, let's go."
10221200,10232000," What am I even looking at? How is that a thing in sub-process? All right, because... Okay, strpbrk."
10235040,10242240," They are looking at one command line and if it's zero and sub-process null. So they're specifically"
10242240,10250240," looking for just zero in here, right? So they're probably looking for a null terminator. Ah, I think I..."
10250240,10255200," Okay, that makes sense, I suppose. That makes sense. It's such a weird code, bro."
10258000,10270080," Okay. Next, please. Anything else? Anything else? So this is J. Yeah, we can call it J. Anything else?"
10270080,10281360," All right, so command line combined. Command line combined. Aloka! Aloka!"
10282800,10292000," All right, so it's just a char*. Okay, so let's define it somewhere right before the loop in here. Next."
10292000,10304080," So whatever else we have in here. So protest_cast. What is that? Oh, it's just a cast. All right."
10305120,10314720," Um, so... Yeah, okay. It's not even needed in C, honestly, because what does Aloka return? Aloka!"
10314720,10320480," It's not even available for me. Okay, whatever. It probably returns Void* and you can cast Void*"
10320480,10329600," to pretty much any kind of pointer, so it doesn't really matter. Aloka! Okay, so implicit declaration"
10329600,10336800," of Aloka. So, really? Are you? Are you for real, brother? Aloka!"
10349680,10360560," Okay, I can still do that as well. I'm not sure what it's all about, but I can still do that."
10360560,10366800," Uh, still doesn't. Did you mean malloc? Bro."
10370320,10379920," I wonder... I wonder... What if I put this thing here as well? So for the reason MinGW32 was not"
10379920,10384800," recognized in here, probably. Subprocess_size_t is probably..."
10384800,10390880," Okay, so parameter name without apps in the function..."
10391840,10401360," Okay, so I can just call it size_t, I suppose. Are we good? Are we good? Finally!"
10401360,10409120," Okay, so this one is just int. Um, all right. So this is just int."
10409120,10417600," Mm-hmm. Now this is a very interesting way of doing that. Uh-huh. So, and the command line,"
10417600,10423920," so it's just args, qreplace, command, line, args? Boom. Nah."
10423920,10430800," Uh-huh. So, I probably... Yeah."
10430800,10437600," I probably fucked up some replacement there, but I mean, it's easy to fix later."
10437600,10441040," So, is it compile? Okay, so it's fine."
10441680,10447200," NeatQuoting. It's one of these things that are, uh, you know, not defined in here, so it's int."
10447200,10454480," Um, I wonder if it's c reused. Can I just, like, you know, define it in here and forget about it?"
10454480,10458160," Man, this code is annoying."
10464080,10467600," Comparison between... Okay, this has to be zero."
10467600,10474160," I feel like I'm wasting too much time on this code. Right, so..."
10474160,10478160," It's a weird code."
10478160,10484400," Okay, so I'm done with this code. That's what's surprising, finally. Jesus Christ."
10486080,10493200," Uh, I spent too much time fucking adapting it to whatever I was, like, making. Um, mmm. Anyways..."
10493200,10502240," Jesus, bruv, bruv, bruv. Uh, okay. So, uh, after... So, this is a create process A."
10502240,10509760," And here, I'm just, like, using command line combined. All right. So, this is a command line"
10510400,10515440," combined. That's what it is. And that should be already compilable."
10515440,10526400," Okay. So, this is log. And here, I just want to use ePrintF. Uh-huh. So, here, I just do that. Uh-huh."
10526400,10535360," So, that's understandable. Okay. Almost there. Invalid proc. So, in here, I can just, like, return maybe"
10536160,10541040," minus one. Uh, I don't even have to return the age process, honestly."
10541040,10549440," Holy shit. It works. So, I define reference a log. A log."
10549440,10557040," Honestly, it's kind of bizarre. Um, a log."
10560000,10566240," Where can I find a log, though? So, it's part of this, like, a POSIX, like, a Windows POSIX thing."
10566240,10570800," Um, but I'm not 100% sure. So, here's the alook."
10570800,10574000," Here's the alook."
10574000,10579840," It's understandable. Underscore alook."
10581360,10587200," And do I have to include anything? So, it's malog."
10587200,10597360," I mean, so, it also very much depends whether it's msvc or not."
10597360,10605920," Uh-huh. Okay. Okay. So, I see what is going on in here. I see what is going on in here."
10607680,10614160," So, if it's msvc, malog.h should be enough. Can I just say malog.h and never"
10614160,10619600," do any of this shit? Maybe that will work fine."
10619600,10626160," Uh, it kind of, it kind of did, but not really."
10627920,10634000," It kind of did, but not really. Can I just use alook, not alook underscore or anything like that?"
10634000,10636080," I feel like alook is part of the C standard, isn't it?"
10636080,10640960," What's the process is doing? Um, so, let me, let me do."
10640960,10644400," Wait. Oh, well, it's just run the Linux version. It doesn't really matter."
10644400,10649680," Um, so, alook, it's a standard C library. Yeah, there we go. It's a standard C library. What the"
10649680,10656160," fuck is that? Bro, bro, bro. Uh, it should be, it should be a thing. But for some reason,"
10656160,10659440," for min.gw, it doesn't really work. All right. So, there's something,"
10659440,10664640," some problem in here, incompatible implicit handler, and blah, blah, blah, blah, blah, blah, blah. Okay."
10664640,10670160," We're almost there, though. Uh, well, I mean, it compiled technically. All right. So,"
10670160,10679680," technically it compiles, so everything's fine. Okay. So, can I now wait for the process? Right. So,"
10679680,10685280," because we just run it, but we don't really wait for the process. Um, so let me, let me see what we can"
10685280,10697440," do about that. Um, so, yes, we used to use them. Um, in knob.h, knob wait, uh, proc wait. Yeah, there we go."
10697440,10702640," So, how do we wait in Windows? So, this is the code that we use to wait for the process,"
10702640,10709280," right? So, that's the code we use. Uh, I might as well just like, you know, get it. And that's it."
10709280,10724240," So, so, we close the handle H process. Uh-huh. So, let's query replace these spaces with that. Oh, right."
10725040,10732000," That's pretty cool. So, we're waiting not really for proc per se. We're waiting for the thing that"
10732000,10741680," we were returning in here. Uh, so, by proc and for H process. Um, might as well. Well, I mean, let's,"
10741680,10754480," let's put it in here. Uh, like this. Uh-huh. No, I think it was fine actually. Uh-huh. Let's put space. So, we're"
10754480,10764640," waiting for that. Um, so, here we can say ePrintF could net wait, uh, bidon child because that."
10764640,10774400," Now, we return minus one. So, exit status. We get the exit status. Uh, and if we couldn't, uh, we just do that."
10775600,10785520," Right. So, ePrintF could not get, uh, blah, blah, blah. Return minus one. So, now, this is what we have to"
10785520,10792400," return. But before we can return, we need to set proc. We need to close the, uh, the proc. And proc is this"
10792400,10799200," thing. So, now, I can just do that. And this is the exit status. Boom."
10801280,10808160," That's it. All right. So, this should be the stripped down version of the subprocess create."
10808160,10815120," And it's 159 lines of code and includes both, uh, you know, Windows and Linux. And it does exactly"
10815120,10823040," what we want. It even handles the, uh, the parsing and everything. Uh, okay. So, let me now try to run"
10823040,10828640," this entire thing. Okay. So, there's a problem with the lock and there's also a problem with this thing."
10828640,10836160," So, because it's a proc, so we have to directly work with this thing. Okay. Next."
10836160,10847440," Uh, yep. It's totally fine. So, it's running, but it's running like a, you know, weird Linux version. Though,"
10848160,10859280," this one is rather bizarre, isn't it? Yeah. So, because we're never really running bench.exe."
10859280,10866320," Right. So, it created bench.exe. Uh, and if I try to do bench.exe, you can't run it because it's a"
10866320,10872640," Windows executable. So, now, I can try to do wine. Uh, right. So, it will wait a little bit. It will just do"
10872640,10879040," that. But I think it eventually will try to run it. Uh, unable to pay dev. Okay."
10879040,10886560," All right. That's very interesting. So, I suppose it couldn't run this entire thing. That's basically"
10886560,10895120," what it means. Um, yeah. I have a feeling that that's basically what it means. Um, nothing particularly"
10895120,10905760," special. Uh, so, it could not just, uh, in bench, uh, base thread init thing, blah, blah, blah, blah, blah, blah, blah."
10905760,10915040," All right. So, let me now, if we had something to run, though, what if we had something to run?"
10916560,10923120," How can we have something to run? I feel like I can't cross-compile with C3, or can I? If I do something"
10923120,10932080," like C3, uh, can I have cross-compilation? Cross. Uh, okay. So, we can probably do that."
10932080,10940560," But I don't think it's going to be that convenient. It's easy, I think, to just have a hello world."
10942320,10952720," Uh-huh. So, let's create main, um, win C. Uh, and in here, we're going to just do something like this."
10952720,10965600," So, in here, we're going to do argc char argv. And I'm going to be simply iterating, uh, from 0 to argc"
10965600,10974400," plus plus i. And I'm going to be simply printing all of these things. Argv i. Right. So, what I want to do,"
10974400,10988000," I want to do x86, 64, w64, blah, blah, blah, gcco, main win, main win.c. Right. So, and that gives me, uh,"
10988000,10995920," win xz. So, if I try to run, uh, in wine, main win xz. Right."
10995920,11002480," It should print something. There we go. So, it printed this kind of stuff. If I put full bar,"
11002480,11009360," it should also print them as well. Okay. So, there we go. So, here is the full path. And this is the"
11009360,11017040," arguments that we pass in there. So, in the bench, in the bench, I want to, uh, do the following"
11017040,11026000," thing. So, I want to do win xz. So, what if I try to run that thing? Uh, okay. So, uh, we are compiling"
11026000,11032400," the bench. Right. We're just compiling the bench. Uh-huh. So, it complains about the locker. That's"
11032400,11037120," fine. That is expected. It's, it run the Windows version, Linux version, but it doesn't really matter."
11037120,11047040," So, now, if I try to do wine bench xz, will it do the thing? Yeah. It won't do the thing. So, it can't do."
11047040,11054080," Uh, so, there is access to zero, surprisingly. Some sort of access to zero. And I don't really know"
11054080,11062080," where exactly and what's the reason it has access to zero. Probably somewhere in here, in, in this code."
11062960,11072880," Um, okay. So, I can try to assert, maybe, command line combined, not equal to null. Maybe a locker"
11072880,11082400," actually returned null. Honestly, it's kind of annoying. Like, this is such a complicated code for"
11082400,11090560," something that could have been just like a stretcher buffer or whatnot. And as far as I know, doesn't, um,"
11091920,11096640," Yeah. We could have just, like, used a stretcher buffer in here, honestly."
11096640,11103280," So, what are we doing here? We just iterate through all of that. So, there's also len plus plus. Like,"
11103280,11112000," why this is a thing, bruh? Len plus plus. I honestly don't fucking understand why."
11113840,11118560," Okay. So, I suppose what we're doing here, we're trying to figure out, yeah. So, first we're trying"
11118560,11126400," to figure out how much we need to allocate. And only then we're combining. Oh, this is so error porn. Bro."
11126400,11134320," This is so error porn. Why would you do that? Um, I think it would be better, uh, to just, like,"
11134320,11140720," use the stretcher buffer. And as far as I know, um, there is a stretcher buffer implementation within the"
11140720,11151040," compiler. Uh, so, let me see. Stretch. So, uh, run after compile. Right. So, run after compile."
11151040,11157200," So, scratch buffer clear. And it's part of the string utils. Right. So, you can do scratch buffer"
11157200,11163600," clear. Uh, then you can append char. You can probably append more things. Can you append, like,"
11163600,11168400," a whole... This one is rather interesting. So, you append character by character, though."
11169600,11174800," Okay. Well, let me see what we can do in here. So, uh, scratch buffer to string. Scratch... You can do"
11174800,11181920," scratch buffer print app, bro. Okay. We should use scratch buffer in here instead of that elimination."
11181920,11189760," Uh, that's for fucking sure. That's for fucking sure. Okay. So, I spent so much time crafting this"
11189760,11196880," code and it's kind of useless, honestly. It's, like, it's error prone. Right. It's error prone. It first"
11196880,11203680," figures out how much to allocate. This is such an old style C. This is why C has a bad rep,"
11203680,11211200," honestly. Because of people who write C like that. Like, I mean, this is trying to do acrobatics. Right."
11211200,11216080," First trying to figure out how much size it will take and then doing the actual computation. So,"
11216080,11221280," that means if something changes within the way you render the string, you have to update two places."
11221280,11225200," But these two places are a mess already, so you'll definitely forget to update something."
11226320,11235840," Again, this is why C had a bad rep, literally. Like, bruh. What the fuck? Anyways, so, um, yeah,"
11235840,11243040," it even returns minus one or whatever. Uh, yeah. So, essentially, what do we want to do? Um, it's not equal"
11243040,11256000," to zero. Uh, so let's do stretch, uh, stretch, scratch buffer, scratch, scratch buffer clear. Right. So,"
11256000,11261680," this is a scratch buffer clear. Uh, let's get rid of all of that. This is stupid, honestly. I don't like"
11261680,11270800," this. Uh-huh. So, and uh-huh. Okay. That's cool. So, scratch buffer clear. So, here we just append into the"
11270800,11280160," scratch buffer just a space. All right. So, scratch buffer append char just a space. Boom. Look at that."
11280720,11286080," Remove that. So, if it's greater than zero. Right. So, that means it needs to be append into the space."
11286080,11292240," So, what the, what the fuck is strprk? Uh, so, I don't remember what the fuck is this function. I don't"
11292240,11297520," remember using that with this function. Search a string for any offset of bytes. So, if the string contains any"
11297520,11307600," of this stuff, uh, right, or it is basically zero. So, that means it needs quoting. Uh, so, we need to add,"
11307600,11316640," uh, double quote in here. Okay. So, that's cool. So, then we are iterating from zero, right, up until"
11316640,11325840," there is the, uh, this thing in here. Uh, and yeah. So, what we are appending in here is simply backslash,"
11325840,11333040," like so. And in here, we're simply appending another backslash, right? So, yes, let's hook it in."
11333040,11341120," So, and in here, we're simply appending, uh, one of these args. There we go."
11342320,11348320," And here, we're simply appending. Man, like using scratch buffer for, for this specific thing is"
11348320,11354000," actually too goddamn easy, honestly. It's too goddamn easy. So, then we're just putting zero in here,"
11354000,11360960," and I'm not sure if that's something we have to care about. So, because, uh, when I do to string,"
11360960,11366240," it does to zero automatically, like null termination automatically. We don't even have to do that."
11366240,11373840," So, it means in here, I can do, uh, scratch buffer to string. Look, oh my god, this is so goddamn"
11373840,11378720," fucking cool, bro, bro. So, that simplifies everything. That simplifies freaking everything."
11378720,11383360," So, but that means I'll also have to compile this entire stuff with the scratch buffer. So,"
11383360,11387440," if I try to compile it right now, it's not going to work. And by the way, I don't have to use this"
11387440,11395840," stupid aloka. Bro, I'm so goddamn happy. That's stupid aloka. Aloka. Um, right. So, yeah, we don't have"
11395840,11400720," to do that. Um, do I hope I did it correctly? I think I did it correctly. I just forgot to remove"
11400720,11406320," that last thing. So, I hope everything's fine. All right. Anyway, uh, what else do we have in here?"
11411200,11416880," Okay. So, this is exactly what I was talking about. So, we need to string utils. Uh-huh. That's fine."
11416880,11424080," We can do that. Chat. We can do that. Utils. String utils. Let's go. So, let's actually remove that"
11424080,11432640," because it's not needed. Uh-huh. And if I try to run that, it should compile now. Uh, should compile now."
11432640,11440160," Works. Without any warnings or anything like that. Without stupid aloka. It just works. But I'm not"
11440160,11445840," sure if it will guarantee, like, actually, uh, working in here. Uh, by the way, so, I want to"
11445840,11453280," compare, like, how we run the process. Is it similar to how subprocess does that? I'm really"
11453280,11459360," curious because we set a lot of nulls in there. And I do remember that subprocess also set a lot of nulls"
11459360,11466000," in there. So, I want to kind of compare them side by side. Yeah, kind of, kind of similar. Right. So,"
11466880,11471760," null. Uh, so, let's actually maybe align them so they are kind of similar."
11471760,11482800," Null. Null. Combined. Combined. Null. Null. Null. Null. True. One. Zero. Flags. Uh,"
11482800,11487360," but they probably do set some flags because they do redirection and stuff like that."
11487360,11492560," User environment. I suppose null just means that maybe it's inherited or something. Null. Null."
11492560,11499360," then start in 4, we set start in 4, np.process in 4. That's pretty much what it does, right?"
11499360,11508000," So interestingly, yeah, so now then it waits. Does it wait for the process? Where does it wait"
11508000,11515840," for the process? I don't see it waiting for the process. But we do wait for it. So close handle"
11517280,11524400," and blah, blah, blah. All right, so that seems fine. That seems fine."
11524400,11535040," All right, so obviously on Windows it's bigger. So is this enough to actually escape everything"
11535040,11542400," for the create part to say? I'm actually not sure, but anyway. So if we try to run it now, I feel like"
11542400,11550160," it's still going to segFault because maybe the problem was not in that. But who knows? Maybe it will work this time."
11550160,11559360," Okay. Okay, so at least it said could not create child process too."
11561200,11570240," Right, so exit it with minus. Okay, so that makes sense. Could not create... All right, that is actually cool."
11570240,11578320," Not really cool, but I mean, you get the idea. So maybe there's something with the command line. Let me"
11580240,11592160," grab that. Combine... Wait a freaking second. I feel like there's something fishy in here because we never"
11592160,11599520," really appended the actual name, right? We only appended the arguments. We need to append the actual name."
11599520,11612080," So let's do scratch. I'm sorry. Append. Can we do string? Nah, I think we have to do print tab. Yeah,"
11612080,11617760," we'll probably have to do print tab. Okay, fair enough, fair enough. This one is going to be just new."
11617760,11625440," That's what we have to do in here. Check, check. I know you're not here, but I'm just imagining you. I'm"
11625440,11631840," confabulating it. I want you to print the actual command line, but I feel like it's incorrect anyway,"
11631840,11636560," so there's no point in printing it. Okay, now let's go ahead and try to run it."
11636560,11649360," Still couldn't create it. Fuck you. Okay, so let's actually try to print then. Okay, so command line"
11650800,11658960," const char command line and before printing this entire stuff, let's just like do that."
11658960,11668640," s command line. So there's something wrong with std out because it skips the spaces as you can see."
11668640,11676320," Right. Oh wait, I didn't recompile. Fuck. That's probably why. I will never succeed in the"
11677040,11682800," in the game development industry. So const qualified from target... Ah, it doesn't like the const qualifier"
11682800,11686960," one. It's not that big right here. Uh-huh."
11686960,11694240," All right, it's taking some time to actually build that, but I don't know. I don't know what causes that."
11694240,11702720," Okay, so and yeah, so when it's printing this entire stuff, like I'm not sure"
11704160,11710560," what to think of that. Right. So is it because of the printer it doesn't print the spaces or is it legit"
11710560,11719280," skips all the spaces? Like I'm... I don't know. Right. So, but this one looks legit more or less. Right."
11719280,11728160," So this one looks legit. I'm not sure about the dash in here, but it couldn't create the child process."
11728160,11734480," So it returns the code. Right. Could not create child process. Get last error. Let's try to google"
11734480,11742080," that and find the code. The code is 2. I don't really know what it means honestly. Get last error. So there"
11742080,11748240," was system code. Oh, fuck. I missed it. I fucking missed it. Okay. So here it is. So what's the second code?"
11748880,11758640," Uh, the code 2 was not successful. File not found. Okay. That's, that's good. I guess that's good."
11758640,11766080," Main win xe. It couldn't find the file even though it's, it's literally the same."
11767440,11774080," Okay. Maybe you just want backslashes. Is that what you want? Maybe just okay. So maybe,"
11774080,11779760," maybe that's what you want. I couldn't understand that for, for windows, for windows program. Maybe"
11779760,11785680," that makes sense. All right. So what about that? Um,"
11789680,11803760," yeah, it couldn't find that. That's bizarre. Even though, um, yeah. So maybe the search path is not"
11803760,11812800," correct. So this is, yes, it's fine. It's here. Should be running. It doesn't, doesn't run. Um, so that's"
11812800,11827360," bizarre. That is literally bizarre. Can't find it. Can't find it. What if I literally had code it, like in here?"
11827360,11833280," Is it going to work? Main win xe."
11835520,11846720," Uh, what about without this entire thing? So let's reveal that and also do wine bench xe. Something"
11846720,11854080," stupid in here, right? So something with the paths or escaping or some other stuff. I'm really not sure."
11854080,11863840," Oh, okay. So I probably didn't have to. Okay. So command line. Let's do command line."
11864480,11870960," So the only thing I had to do is just not provide dot dash dash or whatnot. Is that why you didn't like that?"
11870960,11878480," I swear to God, if that was the reason. Bro. Fuck you. Seriously."
11878480,11893360," What if I don't provide any arguments? Bro. I feel like it doesn't like additional arguments now. That's"
11893360,11896640," probably what's going on here. Probably doesn't like additional arguments."
11896640,11902080," Oh, holy shit. Okay."
11902080,11910080," I see. Um, oh yeah, because it's okay. That makes sense."
11910080,11914880," So the way we iterate"
11917840,11925280," Ah, the way we actually handle this entire thing. Okay. So I see what is going on. What we have to do in"
11925280,11931600," here. So it expects it to be null terminated or something. Okay. So it has to be Vex size. All"
11931600,11939360," right. All right. I think I figured it out. Uh, all right. So you insert it too. There we go."
11939920,11945680," So, and I wonder if Vex size does it check. Yeah. Okay. So it checks for null and everything. All right."
11945680,11951840," So now this thing should, I think I figured it out. Finally. I think I figured it out. Damn, this entire"
11951840,11956240," sort of like a footnote takes like another session. This is literally the second session. What the"
11956240,11965280," the fuck? Uh, okay. So now we're freaking talking. Okay. So, and I can try to append some stuff in here. I"
11965280,11972160," probably need to update my win thingy. Probably need to update my win thingy."
11974640,11981200," Yeah. It didn't work. Okay. That's cool. I'm really happy to see that. Though."
11981200,11999680," What? Motherfucking what? Um, so this old ass code. Yeah. So it still didn't work. Um, so this is how we iterate."
12002800,12010640," so args, so vex size. Uh, that is understandable."
12010640,12015680," No, it should be fine, honestly. Um,"
12015680,12032640," args i. So looking for that args i 0 needs quoting. Yeah, scratch. So that's understandable. And then in"
12032800,12038960," here, uh, we just do needs quoting. I'd like to maybe combine this into, I think I kind of like this"
12038960,12048960," kind of stuff combined. Needs quoting. Uh huh. Might as well make it boolean. Right. So it's either,"
12048960,12058960," um, this thing contains spaces, tabs, or view, whatever it is. I suppose it's a vertical tab or something. Or it's"
12058960,12068000," empty. Right. So that's what it means. Or it's empty. That means it requires quoting. It requires quoting."
12068000,12073040," And that's why we append this entire thing. And then while like we're iterating through this entire thing"
12073040,12077360," up until it's not equal to 0, that's understandable. And within this thing,"
12077360,12084480," for the default case, we just don't do anything. Uh, if we encounter backslash. Right. So if we encounter"
12084480,12093840," backslash and the next thing is, um, you know, quote, we do that. All right. And"
12096400,12102400," I feel like there's something bizarre in here. Uh, maybe I did a fucky-wacky, but I mean the world should"
12102400,12112640," be fine. Yeah, it should be fine. So I don't understand what's wrong here. I don't really understand."
12112640,12120880," It should be fine. One more time. One more time. It would be nice to see where exactly it fails and"
12120880,12129680," ultimate or whatnot. But I mean whatever. Yeah. Okay."
12129680,12142400," Oof. Oof, oof, oof, oof. Um, so I don't really know, bro. It kind of worked fine. So with null, it works fine."
12143520,12148000," With null, it works fine. But then there's something, something weird going on."
12148000,12159360," Yeah. Okay. So by the way, for this thing, I would like to maybe wrap around this thing with lines."
12159360,12169280," So I see where it starts and ends. Um, so main win, main win. Yeah, let's recompile this in desktop."
12171040,12177520," And let's just run the bench so we can see where it ends and starts and stuff like that."
12177520,12187600," Okay. So, yeah, so this is where it starts, but we didn't provide any arguments. So"
12187600,12194880," that is understandable now. Uh, and it just can't do that. All right. So it can't just do that. I wonder"
12194880,12202560," if it actually fails some somewhere at just pushing this thing. So let me see. Maybe it just fails"
12202560,12208240," somewhere else. I don't know. Um, so it doesn't like red. Let's set it to zero, whatever."
12211440,12221360," Uh, let's set it to zero. Okay. We'll go. We'll go. We'll go. We can do that. Okay. So that was fine. So that means it fails"
12221360,12226800," in here. And I honestly don't know what exactly is going on there."
12230000,12232240," It should be fine. So here's the command line."
12232240,12244080," So let's not print it then. So maybe that's maybe the printing is the thing that kind of ruins it."
12245040,12252400," I don't know. No, I don't see any problem. Also"
12252400,12263920," I think I know. This becomes redundant since this is the first thing that we want to append in here."
12263920,12271520," We always want to prepend each argument with a space. All right. I really like where it's all going."
12271520,12275600," I really like where it's all going. Like it all becomes simpler and simpler and simpler."
12275600,12277760," Uh, and yeah, I really like that."
12277760,12281600," So,"
12281600,12287760," this, this escaping is kind of weird. Uh, let me double check if I didn't"
12287760,12291120," screw it up anywhere. Um,"
12291120,12296240," because it's, it kind of doesn't make sense to me. Like almost all of the code now makes sense to me,"
12296240,12300560," except that one, except that one. And I can't even find it anymore."
12301520,12310160," Um, so sub process. Create XZ. Where is that? Uh huh."
12310160,12320000," Okay. Where is this? So much useless code, bruh. Uh huh."
12320000,12327680," Yeah, that's, that's literally what I said in here. We're gonna, if it's equal to,"
12329120,12338400," so if it's a quote and the next one is double quote, we append backslash and then on the next iteration."
12338400,12345760," Ah, I see. Yeah, I see, I see what's going on. So then we always append that thing."
12345760,12348800," All right. That makes sense. Okay. That makes sense."
12351440,12357840," So if it's backslash and the next one is dead. Yeah."
12357840,12364960," It's kind of weird. Like you can write it simpler, right? But I don't want to do it right now."
12364960,12373200," You can definitely write that simpler. Okay. Um, do we do orgs?"
12376160,12390480," Oh my God. Where is the chat when I need him? Where is the chat when I need him? God damn."
12390480,12398000," So I wouldn't mind a little bit of a back sitting right now just to catch that one. Okay. Damn it, mate."
12398800,12407360," I always complain about the chats, but then when there's no chat, I'm sad. Look at that. Look at that."
12407360,12415520," Fucking did it, mate. We fucking did it, mate. We fucking did it, mate. We fucking did it, mate."
12415520,12423040," So, and yeah, so we can now copy paste this code to the main compiler and it should work because we're"
12423040,12430480," using the main compiler functions anyway. So that's what we do. That's what we do."
12430480,12434720," That's what we do. Uh, so yeah, that's pretty progress. Not gonna lie."
12434720,12443600," Uh, that's pretty progress. So we'll go ahead and do that. Uh, so I can, let's test again, uh, but"
12443600,12451440," compiling to Linux, right? So let's compile on Linux now. So it works on Windows, but let's compile it on,"
12451440,12459440," on Linux and let's run the bench. Uh, right. So yeah, it was actually trying to run, uh, this thing."
12459440,12466960," So let's actually change it back. Uh, and on Linux, it also, well, I mean, it ran the C3 version, right?"
12466960,12472480," I mean, it still worked. It still worked. Everything's fine. Okay. So that's actually pretty cool."
12472480,12478720," So I have this stripped down version, uh, of run process, uh, right. So, which I can now"
12479280,12487200," put into, into the compiler, run process. And it's kind of okay. Right. So there's a couple of to do's"
12487200,12492800," in here. So this is where we stole that. So vertically, blah, blah, blah, check for errors in get, uh,"
12492800,12497520," I don't know if it's that important, honestly, because it's a standard error and standard handle and whatnot,"
12497520,12506480," but then I don't know. Do we even do that in sub process? Right. So when I do HSTD error and set it to anything,"
12507040,12514160," um, we, we never actually called to get STD handle, right? So yeah, it's never even called to that,"
12514160,12519040," right? Because we redirecting and everything. Maybe it makes sense to actually put it to the, like,"
12519040,12528320," check errors. Okay, bro, bro, that is so freaking cool. So let me, let me take a look at the changes,"
12528320,12534960," how many changes we've made. So now it's an error. No, run sub process, right? So this is a Windows part,"
12534960,12544960," uh, right. And now we greatly, greatly simplified, um, this entire thing. So program completed with,"
12545680,12551280," um, honestly, we have to do something like this. If, um, you know,"
12551280,12566800," ret, um, so ret less than zero. Uh, we have like a compile error or compile exit. Compiler exits."
12567760,12578400," Where is that thing? I quite vividly remember it. So grab compiler exits, compile exit. What was that?"
12578400,12589840," Compiler error. What was the function that unwinds? Bro, I don't remember. Exit compiler. Yeah,"
12589840,12599600," so that's probably what we want to do. Uh, exit compiler. Yeah. So compiler success exit. Uh-huh. Okay."
12599600,12609040," So let me go back to here. And, uh, let me go back to here. If it's less than, basically,"
12609040,12618080," exit compiler, uh, exit compiler, just something like one, doesn't really matter. Uh, because like,"
12618080,12624400," if it's negative, that means this thing printed something to the standard output, right. It printed"
12624400,12632000," something to the standard output. You don't really have to log that. Um, and then, um, what I mean?"
12632000,12643520," Yeah. If it's not equal to zero, exit compiler, return. Yeah. I think that makes sense, right? Because if it's"
12643520,12651440," negative, we printed the problem, uh, if it's positive, uh, that means it's an actual exit code. And the"
12651440,12657280," negative, well, it means that there was an error even trying to run the whole thing. Uh, right. So"
12657280,12662160," there was an error even trying to run the whole thing. And this, uh, will print, this will actually"
12662160,12671600," log the problem. Right. So we'll see how it goes. Okay. So, uh, that's cool. That's cool. That's cool."
12671600,12684560," And, um, yeah, so this is a builder. That makes sense. Uh, and yeah, we've got that stuff. Cool."
12684560,12701840," Now let me maybe go to build and just rebuild everything and see if it's buildable."
12701840,12711600," So pretty epic. The last thing that is left to implement in here, by the way, the last thing that"
12711600,12719280," is left is to add that functionality functionality to CI, right? So we're trying to add that functionality."
12719280,12727520," So I was actually assigned five hours ago. Okay. So that's pretty cool. Um, so, and, uh, okay. So this"
12727520,12741200," entire thing compiles and, uh, build c3, uh, c3c, uh, where is that? I didn't see that. Okay. So build, uh, c3c, compile, run."
12741200,12749760," Oh boy. Uh, so what was it called? Main, main c3. Uh, right. So we can just try to run that, uh,"
12749760,12758000," program, uh, completed with exit code zero. So then we can just try to do full bar. It's not going to work."
12758000,12765680," Just try to do it like that. Uh, it should work and it actually works correctly. Uh, and yeah, so the"
12765680,12776000," usual stuff. Now, uh, the Travis, uh, GitHub, let's take a look at the CI. So we have different jobs in here."
12776640,12786560," So this is the, uh, build MSVC strategy matrix. Okay. So the only matrix within MSVC is just a release debug."
12786560,12796560," Okay. So we do a little bit of a compile run in here. Uh, right. So, and we're using examples and, uh,"
12796560,12802640," where are the examples? Um, I have a feeling that maybe examples are,"
12806080,12814720," yeah, maybe examples are separate repo. Maybe that's what's going on here. Uh, c3 link. Yeah."
12814720,12824000," So because we already have a less, we could use, let me try to find the directory examples. Maybe it's"
12824000,12830960," one of the directors in here. Find directory with the name examples. Okay. So it's part of the resources."
12831680,12837360," Find file at points. Ooh, that's, that's a lot of it. Oh, holy shit, bro, bro, bro."
12837360,12843840," Okay. There's a comp, it doesn't really accept command line arguments. Okay. So that's, that's fair."
12843840,12852320," That's fair. FASTA game of life. Okay. So does anybody accept command line arguments in here? So let me see."
12853120,12861120," uh, grab for anyone whose main is something like string. Okay. So somebody, uh, accepts. So there is a plus minus."
12861120,12868640," Uh, what's that? What's that? What's that? What's that? Um, I don't really know what the fuck it is."
12869760,12877120," Okay. So I don't know why I was opening all of that, but whatever. Um, and bodies."
12877120,12885520," I guess it's fine. We need something simple, honestly. We need something simple that just processes"
12885520,12892880," command line arguments. Like no more, no less. Um, and I don't even know where to put all that stuff."
12894080,12901200," Not working. Oh, it's not, not networking, not working. Well, I mean, it's kind of net,"
12901200,12910080," networking, isn't it? Well, I mean, it's not working. Okay. I see. So we have Raylib, uh, swap time. Um,"
12910080,12918480," can I just add args? This example doesn't, don't have to be like legit examples, right? Because this one is"
12918480,12926960," kind of a not real ls, honestly. It's just like kind of weird ls, I would even say. Can we just have args"
12926960,12940080," c3, uh, and, um, I'm not sure if it's a good idea, but, so import stdio, so string args and just like, you know,"
12942960,12951440," I, you, print n, um, args. We may even try to, yeah, whatever."
12951440,12964400," Uh, so, what I can now try to do with, uh, what was the, it was a YAML of something. Okay, so here is the main."
12964960,12979920," Um, what we want to do, we want to run example args full bar, uh, buzz, buzz, something like this."
12979920,12989280," This is what we want to have in here. Uh, so next thing, so try, oh, this is just like a testing,"
12990880,12997280," uh, try run compile tests, so msys min-gw."
12997280,13006480," Okay, so build msys. So what was the requirement? What was the requirement?"
13006480,13012720," If you want to implement, uh, try at running it on at least one of the CI runs so that we can catch any"
13012720,13017920," regressions and keep in mind that it needs separate testing form as we see in other platforms. Linux and"
13017920,13025120," macOS behaves the same. Okay, that's understandable. Uh, right, so msvc here, so we are running this thing."
13025120,13029920," Uh, and again, we can just like copy paste some of that stuff. Um,"
13029920,13038880," args c3. All right, so in here, that's what we can do. Um,"
13040800,13050400," So this is msys build. It should be cross-platform already by itself."
13050400,13057520," Print linking. I'm not sure if this is particularly useful, but we can do that."
13057520,13066240," Uh, all right, so this is for this msys2 min-gw. Hopefully it will compile with it."
13067120,13074800," So msys-clang. Um, yeah, kind of the same thing. We can do the same thing in there."
13074800,13083280," We can do the same thing in them without printing the linking."
13085280,13091520," All right, so build Linux. This one is easy peasy. Holy shit, brother."
13091520,13100880," Uh-huh. So compile run examples. Uh-huh. So this one is just."
13100880,13107040," Compile run unit tests. Not that big of a deal."
13108480,13114560," Okay, so what is that? So compile run. That's a lot of different. Okay, Ubuntu 20."
13114560,13118720," Ubuntu 20. Okay, so we can do that."
13118720,13122160," Example run. Okay."
13122160,13132560," Uh-huh. Build mac. So this is a compile run examples. Okay, so this is another one."
13133680,13143360," Uh-huh. So what else do we have in here? Okay, so let's take a look at how many stuff we got in here."
13143360,13150720," Uh, so I deleted some white spaces. Maybe I should not do that because it's kind of, you know, polluting the"
13152080,13158640," the pull requests. All right, so trailing white spaces. I want to only keep the things that are relevant in here."
13158640,13164640," Um, yeah, this one is also irrelevant. Oh, it's really, actually."
13164640,13168480," Um, not really."
13168480,13173440," Uh-huh. So this is that, that, that, and that."
13174880,13179440," Uh, yeah, by the way, so maybe I should probably"
13179440,13187120," just set it. So I'm going to bring all of these deleted white spaces back because I'm just afraid"
13187120,13193280," that I may be deleted something important. But anyway, um, so yeah, so this thing I automatically"
13193280,13196880," deleted white spaces. I hope it's not that big of a deal. I really hope so."
13197680,13203200," Um, okay, so we've done that. We've done that. Do I want to"
13203200,13210720," um, do separate commits in here? I'm not really sure what exactly I want to do with all of that."
13210720,13217840," Uh, but one of the things I want to do for sure is to delete the dependencies, right? So I'm going to delete"
13217840,13227600," the dependencies.h and we can just start with, um, compiling this thing saying that we removed the"
13227600,13234480," dependency on, uh, subprocess, right? So we can do something like that. Um,"
13234480,13256800," distill subprocess h down, um, to its essential functionality using a little bit of code from knob.h."
13257520,13272320," Right. I don't know if I want to actually, um, using, um, using, oh, I mean, yeah, using a little bit of"
13272320,13287440," code from knob.h. And I'm going to put it in here. Come on, you can do that. Open up. So I'm just waiting until it, you know, unstacks, because it currently"
13287440,13301280," stuck up pressed. Why? It should give me the current commit. Yeah. So this is the first thing. Uh, so here build."
13301280,13312000," Okay. So in here, this is a separate commit as well. This is a separate commit as well. And in here, what we do,"
13312000,13320480," what we did, what we did, in fact, is basically edit support for the arguments only for the, um,"
13320480,13325840," for the command, uh, for the compile run, right? So that's what we did essentially."
13326880,13331840," Uh, for the compile run. So we didn't need that stuff anymore."
13331840,13343120," So collect args only for compile run. And, um, so"
13345680,13355440," here run compile run with args on CI. This is another thing. Um, so yeah, I'm going to just push"
13355440,13361040," this entire stuff into the origin. And I think the time has come to finally create a pull request for"
13361040,13366720," this entire thing, because I feel like, yeah, that's, that's literally what we want to do. And I'm also"
13366720,13375200," curious if I failed any, um, any CI, right? So I think that's the interesting part. Did we fail any CIs?"
13375200,13382960," Uh, so let me, let me see. Even if we failed, I probably going to fix that already off screen, but yeah."
13384640,13396320," Uh, come on. All right. Compare and pull a request. A, a, a, a wreck. West, west, west. Uh, compile. Um,"
13396320,13402240," okay. Count automatically merge. Don't worry, you can still create the pull request."
13402240,13412640," Ah, so there's probably some, some conflicts and shit like that. All right. So, I, okay. So the only thing"
13412640,13418320," I care about, I'm going to probably fix the, um, the merge conflicts already off screen."
13418320,13425440," Uh, the only thing I'm interested in is the CI, right? Can I see the results of CI? Uh, hopefully,"
13425440,13433920," hopefully it will work. Where is the, where is my branch though? Uh, I didn't see my branch."
13433920,13440560," I hope I didn't accidentally create the pull request. Oh, GitHub is so slow. It's painful, bro."
13441440,13448240," This is unusable. Please fire the entire team at Microsoft who's responsible for this shit. It is"
13448240,13455040," unusable. This is trash. Why people at Microsoft are getting paid so fucking much developing this thing?"
13455040,13459040," I have no idea, honestly. I have no idea."
13461040,13468240," We need the next layer of wave. Quick. Next layer of wave. Please. Please. Quickly."
13468240,13476800," Um, all right. So the only thing I want is to see whether CI failed or not. So that's the only thing I care about."
13476800,13478080," Um,"
13481680,13488320," It probably doesn't run. Ah, yeah, I know. I know this kind of problem, right? It probably doesn't even run CI."
13488320,13497920," So because, um, first the CI needs to be approved by the owner of the, um, you know, of the, of the repo,"
13497920,13503440," right? It needs to be approved by the owner of the repo. You know what? Maybe we can try to, uh, fix the,"
13504240,13510640," you know, merge conflicts, right? I'm really curious how they're gonna work out. Uh, so I'm fetching the"
13510640,13517040," latest stuff from the upstream, uh, upstream master, right? So let's actually see how far it went. Okay."
13517040,13523360," So not that much. Okay. We'll go ahead and just like try to rebase this entire thing. Uh, right."
13523360,13532000," So I'm going to rebase it on top. Well, I mean, uh, so I probably want to push the master, push the"
13532000,13539200," master into the origin. I kind of want to sync up my origin just in case. No, no. Okay. So the origin"
13539200,13547920," is synced up and, uh, let's rebase this thing onto the master and let's see how miserably it's going to"
13547920,13555280," fail. So it's already failed. So, which is expected. Um, and let me see, let me see. So what do we have"
13555280,13563360," in here? Uh, so there's some modifications with, yeah, with launching this entire stuff, surprisingly,"
13564080,13572400," delete after run. Okay. So the intro introduced delete after run. Um, cool. Um, yeah. So they"
13572400,13581280," actually touched the core of what I'm doing here. Uh, all right. Okay. Okay. Okay. Okay. Uh, so"
13581280,13591360," let me, uh, revert the whole thing. Um, so delete after run. And, uh, we also probably want to keep this"
13591360,13595920," thing here as well, right? That's another thing that we kind of want to keep them here. Okay. So this one"
13595920,13602800," was easy. This one was easy. This one is a little bit more involved, I would say. Uh, so, but I suppose"
13602800,13610080," it's all related to delete after run. All of that is related to delete after run. Uh, in that case, it"
13610080,13617120," should be relatively easy to figure out how to do all of that stuff. You just run."
13620240,13628000," Uh, so the conflict actually occurred before we switched to the completely new API. So I have"
13628000,13635680," to kind of resolve it from that perspective. Okay. Um, so in here, so we just do that. So then we're just"
13635680,13641200," waiting, but then where is the delete after run? I didn't see delete after run, honestly. Where's the delete?"
13642480,13651760," Uh, okay. Where am I? Bro, bro, bro. Uh, delete. What happened? Why am I? Okay. So everything's fine."
13651760,13663280," Everything's fine. Um, yeah. So we only care about this thing. Uh, delete after run and on POSIX."
13663280,13667280," This is so bizarre. Why are you deleting before waiting for the process?"
13667280,13677440," That is honestly bizarre, but okay. So first you run it, then you're deleting that file"
13677440,13684960," and then you're waiting. This may work, but I feel like it has to be actually kind of done after you"
13685680,13689840," finished waiting for everything. It's just like, it kind of doesn't make sense to me, honestly."
13689840,13696160," Okay. I kind of understand what is going on in here. Right. So I would probably want to do something"
13696160,13705120," like this. All right. So active target. Um, right. So here we just create this process. And I feel like"
13705120,13713360," this entire thing will create even more conflicts now. Ah, bro, that is annoying. That is honestly"
13713360,13723600," annoying. So it's going to create even more conflicts. Yikes, yikes, yikes, yikes. Okay. So this is the name."
13723600,13730960," We create the name. Then we are constructing these things. Then we are creating the sub process. Right."
13730960,13735760," Then we're draining all this stuff. All that will go away, by the way, in the next commit, but we have"
13735760,13742800," to fix this thing. Uh, right. And then we're deleting this entire stuff. Um, it's kind of annoying."
13742800,13749200," So print, it's, it's very stupid, honestly."
13749200,13758240," Okay. So let's just commit it as this, because I expected to, uh, to just fail later. All right. Yeah."
13758240,13764400," So it failed again at the same place. Yeah. So that's, that's completely understandable. That's"
13764400,13774080," completely understandable. Um, so yeah. So let me take a look at, uh, why is it in a completely different"
13774080,13782320," place, bro? Where, where, okay. Here it is. There it is. Here it is. Okay. So we definitely don't need"
13782320,13797040," that. So the only thing we care about is here. We definitely don't need that. Uh huh. Okay. Okay."
13797040,13804720," So run sub process and file delete, by the way, what's that? It's just, uh, delete. Okay. So that makes sense."
13804720,13813120," That makes sense. Um, so delete after run. So we run the sub process. It is waiting and then we're"
13813120,13818880," trying to delete. That doesn't make much sense to me, honestly. That doesn't make much sense to me."
13818880,13824960," But anyway, so we kind of want to actually do it in here."
13827840,13836560," Uh, so program completed with the exit code. Uh huh. So we just run it. But, uh, run sub process kind of"
13836560,13844480," blocks. Does a system also block? I don't remember on this lane. Does it block? Um, behaves as if it used"
13844480,13851040," fork to create a child that executes, uh, return value. Okay. And if the child process could not be,"
13851040,13856320," if shell, if all calls succeed, then return value is the termination status. Okay. So that's probably"
13856320,13863440," what we wanted right then. Right. So we run it. Then we delete this and that thing. Okay. So I think"
13863440,13879120," that makes sense now to us. Uh, right. So we're going to continue the whole thing. Ah, um, yes, please. All right."
13881760,13892160," Um, I want to go back. Uh, so I'm going to push into, um, um, into the origin compile arc. Probably"
13892160,13900880," have to force push, by the way. So force push into origin. Right. Because I rebased this and that thing."
13900880,13904080," Uh, I probably want to even squash this and that thing because there's some"
13904080,13907360," bullshit going on. I personally don't really like squashing, but I'm not sure"
13908160,13915520," if the maintenance of this project are okay with squashing. Uh, so yeah, I want to go back to the"
13915520,13920880," master and I'm going to go into the compiler. Uh, and let me revert everything just in case."
13920880,13929920," delete after run. So I just want to double check that this entire thing does what I expect it does."
13929920,13937760," Honestly, like, why do you do wife exit, return status, blah, blah, blah. It doesn't make any"
13937760,13944400," fucking sense because systemd just waits for you or like, well, I mean, no, no, no, no, it's, it doesn't"
13944400,13950800," make sense. You're just like extracting additional stuff in here. Yeah. And we also printing where the"
13950800,13959600," program was interrupted or where the program was stopped by a signal. Uh, so yeah, we probably want to,"
13960160,13966880," yeah. So I just actually removed a lot of like useful behavior in here. So that was bad idea. That was"
13966880,13976800," actually a bad idea. So what the program exited, what the program ex like stopped and whatnot. So, um, yeah."
13976800,13983920," Okay. Okay. Okay. Okay. Okay. Okay. I'm just thinking, do I want to do it right now? Because"
13984560,13988800," already spending too much time on this thing. So it's already two hours, right? So I spent another"
13988800,13996480," two hours. Uh, I'm not sure if I want to be spending that even more. So, all right. So I guess"
13996480,14002800," I'm going to finish it off off screen. All right. So, because yeah, it's already finished, right? So we"
14002800,14009280," figured that we distilled everything down to run a sub process, but man, I want to actually make a pull"
14009280,14017680," request on, on, on camera. I want to make a pull request on camera. Um, so I could do that, but I need"
14017680,14024480," to revert back the cool changes that I deleted throughout the entire thing. So delete after run."
14024480,14031600," So basically if it exited, we just say it exited with the code. Uh, right. So if it's signaled,"
14031600,14037600," we say it's interrupted. If it stopped, we do that and so on and so forth. I kind of need to put it back,"
14037600,14041920," but I'm already a little bit tired. So you know what? I'm going to make a small break, right? I'm"
14041920,14046960," going to refill my water and stuff like that. And after the small break, I'm going to put it everything"
14046960,14052080," back. So I think it's not that difficult to actually like bring all of that stuff back. Um, all right."
14052080,14058000," So let's make some break and my mouse is dead. Uh, just a second. Um, all right, I'm back. I really"
14058000,14064640," needed that break. Holy shit. So yeah, I didn't even make any break. Like I was like programming for two"
14064640,14070720," hours straight. Like Jesus, like understandable that like it was difficult for me. So essentially,"
14070720,14076880," uh, let's actually save that. And I basically need to bring that back because I accidentally deleted this"
14076880,14086000," entire functionality, uh, from, uh, from my code, right? So let's go here, uh, and let me compile on,"
14086000,14092320," uh, right. If we take a look at what's going on in here. Uh, so yeah, there's some weird stuff going on in here,"
14092320,14101840," but if I jump into the run sub process, um, on the POSIX side specifically, um, right. If we exit it,"
14101840,14110000," we just like return exit. So what I'm thinking is that, uh, what we have to do, what we have to do"
14110000,14120240," is to simply just print. So as you can see in here, um, you know, completed with exit code, blah, blah,"
14120240,14127360," right. So that's basically what happened in here, uh, completed with exit code, this,"
14127360,14138880," and we just return the status. Uh, and the status actually is this. So we might as well. Um, so the"
14138880,14149040," status is int. All right. So status. So program exit with code that. And, uh, we might as well just return it"
14149040,14155920," right away. So this is the status with which we returned. So then if signals, uh, we have to say,"
14155920,14164560," um, all right, that program was interrupted. Um, so that's what we want to say. Program interrupted by"
14164560,14172320," signal. Uh, and I'm sure sure why it is not e-printed though, but I mean, that's fine. So this is the signal,"
14173360,14180480," uh, and it's part of the status. So it's basically the same. It's just like we're restoring the, uh, the"
14180480,14190080," original, um, you know, the original sort of messaging, right? The original wording of the error messages."
14190080,14195280," So, and now this one is interesting. So if stopped, uh, stopped by signal."
14195840,14202080," Uh, so, and in that case, do we do anything particular special? So we just say that it's"
14202080,14211520," stopped, uh, and that's about it, right? So, and otherwise it's finished with unexpected code."
14213120,14220000," Right. I mean, I'm not even sure. So the thing about program being stopped is that it can be resumed"
14220720,14234160," though. So let me actually see. I think it's kind of weird. Um, no, there's no, uh, let me, let me see."
14234160,14244400," So I think it's more about waiting on what not. I think it's documented somewhere in a wait bid."
14246320,14256080," man wait bid. If exit. So if it's signaled returns true if the child was terminated by a signal,"
14256080,14265120," right? So, um, yeah, signal, uh, if stopped, uh, returns true if the child process was start by"
14265120,14272960," delivery of a signal. This is possible only if the call was done using, um, untraced or when the child is"
14272960,14278560," being traced. This is possible only if the call was done using untraced. And it's kind of,"
14278560,14286000," so number of a signal which caused the child to stop. Um, so I don't really know what's,"
14286000,14294720," so returns true if the child was resumed by delivery. I feel like, yeah, so it could be resumed."
14294720,14301040," So just because child stopped doesn't really mean anything. I don't think we should be handling that."
14301040,14307520," So I like, I'm going to remove that. And I think stopped is particularly useful in here. Um,"
14307520,14313920," so could not wait on bid. Uh, yeah."
14313920,14323600," So in here we are saying pretty much, yeah, we're pretty much using the same error messaging. Okay."
14323600,14329680," So I don't know why I was worried about this this much, right? So we're just using the same error messaging."
14329680,14336720," Uh, all right. And when we are calling run sub process, right? So we're deleting this entire thing."
14336720,14345200," If it's negative, uh, it was locked for us. If it's, yeah, I think, I think it's totally fine, right?"
14345200,14351920," So, um, so the only thing maybe I want to do here is exit failure or something."
14351920,14358960," Um, yeah, I think that's enough. I think that's enough. So run the process."
14358960,14364800," So this is that. If it's negative, it's either terminated by signal or something else."
14364800,14374080," Uh, and let me see what else we have in here. Um, so might as well just use ePrint F."
14374080,14376080," Yeah."
14376080,14381760," That makes more sense."
14384560,14395360," All right. Um, so restore original error message when terminated by signal."
14395360,14403600," Yeah. So, and let me push that in here. So I think this is basically enough to create a pull request."
14403600,14406960," I think this is basically enough to create a pull request. Um,"
14409120,14417040," So did I push everything? I hope I pushed everything. Uh-huh. So, all right, all right."
14417040,14425760," Uh, so I didn't preview nothing to preview. Oh, it's just that. Okay. So we've done that."
14425760,14432480," We removed some white spaces. I'm not sure if that's a good idea. Uh, so emacs files."
14433360,14440480," Oof. I'm not sure if that's a good idea, honestly. Yeah. I should be not doing that."
14440480,14443920," Uh, some of the things I definitely want to bring back."
14443920,14449600," So O2F, no exception. Yeah. So let me go and bring that stuff back."
14449600,14455120," Uh, maybe I should have actually checked the div locally before creating the pull request."
14455120,14463120," Well, let's not create a pull request. Um, so CMake. Um, I'll definitely need to squash at some point."
14464160,14471680," So O3. Uh, uh, uh, yeah."
14471680,14480720," Restore back the optimization level on, uh, on POSIX."
14480720,14485360," Oh, and another thing I forgot, I actually forgot that I wanted to do,"
14485360,14491600," is that instead of using Win32 or some other stuff, I wanted to use like a platform Windows."
14492160,14498080," Right. So I think that makes more sense, because that's the things that are used throughout the code."
14498080,14503600," Um, so let me try to rebuild everything just to make sure, like just, you know, smoke test."
14503600,14510560," Um, I think we're getting closer, right? So I think we're almost ready to create a pull request."
14510560,14516560," So that's a big thing. That's a big thing. It's a, it's a relatively big feature."
14517600,14520160," There is a reason why nobody was trying to tackle it, right?"
14520160,14524240," Because you need to refactor the code a little bit."
14524240,14526640," You need to refactor the code a little bit."
14529520,14536640," Oh, yeah. And so I was warned about that. I was actually warned about that."
14536640,14540960," Uh, so no FTA is valid for, but not for C."
14540960,14544160," Oof, oof, oof, oof, oof."
14544160,14547920," So I'm curious what exactly happened in there. Yeah."
14547920,14556480," So if I take a look at the discussions in there, um, I was literally warned about it. Where are all the issues?"
14558400,14565440," Uh-huh. So it is expected. Uh, I saw you had some problems with RTTI, uh, so"
14565440,14570800," um, I think I've updated CMake file correctly to deal with this,"
14570800,14576640," sending F no RTTI on Linux and JR on Windows, but most of the recompiled lines are with RTTI,"
14576640,14581120," so CI doesn't, uh, whatever. You might have fixed this in your local branch already, but I"
14581680,14588400," I'll just tell you in case you try master and it's trying to overwrite your stuff and then it doesn't work"
14588400,14595680," anyway. I think this is exactly what's happening. So LVM was not built with RTTI. So let me go into"
14595680,14610240," this CMake file and search for RTTI. Okay. So, uh-huh. Uh-huh. Uh-huh. Uh-huh. So, yeah,"
14610240,14616160," I can try to remove this thing. I can try to remove this thing. It's not neat anymore. This is my thing,"
14616160,14624480," but it's not working correctly because, uh, I know precisely why it doesn't work. Because you made it"
14624480,14631520," public. What you have to do, you have to make it private. Uh, you have to make it private, uh, because"
14631520,14638800," otherwise it tries to apply to, like, literally everything, right? So it needs to be applied only to"
14638800,14645760," this thing. Uh, all right. So let's actually go ahead and fix that. So in here, okay, so I can, uh, compile"
14645760,14660080," that separately. So win, uh, 32 platform windows, uh, right? So this one and, um, yeah, uh, apply, uh,"
14661680,14689120," applying it applying it to everything, uh, applying it to the rest to C files. Um, because it is not valid for C files,"
14689840,14699760," only for C plus plus, right? So that's basically what we're doing here. So now if I try to compile"
14699760,14705760," this entire thing, it will be working, right? So you just need to make it, uh, private. All right. So"
14705760,14711040," we have a little bit of a problem in here because we never really, uh, included windows. So this is"
14711040,14721840," something we probably need to do. Um, so if platform windows and if, uh, what's the windows? Do we ever"
14721840,14727600," include windows anywhere? Uh, I don't remember that we included windows, but I think it was in utilities."
14728400,14734720," So, uh, let me see, do we do like a lean and mean, we never do lean and mean, but maybe it's not pretty"
14734720,14747200," that important. Okay. So where's the compilation? There we go. So, uh, let's go. Okay. I'm really glad"
14747200,14757120," glad that is that I decided to do the smoke test. Oof. Why it didn't work, bruh? Um,"
14760080,14766560," if depth. Ooh, the platform windows is actually used in a really weird way. Honestly,"
14766560,14776160," it is used in a really weird way. It's not like checked for if depth. You literally check for, yeah,"
14776160,14784080," it's kind of bizarre. Yeah. I think, I think I know what's going on. I have to do if,"
14784960,14796480," if platform windows. Yeah. Now it makes sense. All right. All right. So we're getting there. Hopefully"
14796480,14809520," we're getting there. So I think I did everything. I hope I didn't forget anything. Um, yeah, I wanted to"
14809520,14815520," check the diff before, uh, you know, before making the pull request because maybe it contains some stuff"
14815520,14826480," that is not needed anymore. Yeah. Mm. Okay. So that's fine. And we're going to do a little bit of a test."
14826480,14835200," Likely we already have orgs in example, so we can quite easily do that. Uh, so it's going to be build."
14836000,14843920," All right. Where is the, okay, here it is. Build c3c, uh, compile, compile, run,"
14843920,14855440," resources, resources, examples, orgs, c3. Let's go. Ah, fuck. Okay. So that's cool. Resources, examples,"
14855440,14865520," orgs, c3. I forgot to actually fix that. Uh-huh. So then we can do full."
14866000,14873520," Uh, bar. Uh, bar. Ah, that's cool. So everything seems to be working. Okay."
14873520,14887360," So here we're going to do fix, uh, args c3 example. All right. And in here, what else do we do in here is,"
14889200,14897840," Um, okay. Yeah. If platform windows do. Uh-huh. Okay."
14897840,14911920," Fix the usage of platform windows macro. All right. So let's push that one more time. All right. So, um,"
14912480,14921520," I don't really know how to do any to squash or not. I think GitHub had an ability to squash before merge."
14921520,14926320," So I didn't really have to squash myself if the author wants me to squash the pull request."
14926320,14932000," So I haven't used GitHub like that for quite some time. So I don't know what kind of features it has."
14932720,14941200," But I think it had like auto squash or something. Okay. I forget that I wanted to first check the diff."
14941200,14949440," All right. So let's see if we have any in the diff that we would like to not have in the pull request."
14950480,14958080," Uh, so this is not that big of a bullshit. So there's, yeah. So I did this thing. Uh, I'm not sure how bad it is,"
14958080,14967520," but it's just like a random formatting and whatnot. Um, so there's that. I guess it's fine. So there's this"
14968720,14982400," then the org. Uh, so it's probably removed some space and whatnot. Uh-huh. And this is platform. Uh-huh. Uh-huh."
14982400,14992800," All right. Okay. So I think it's fine. Okay. Let's create a pull request. Finally, let's create a pull request."
14994160,15010240," Um, okay. Implement, implement passing arguments to a program via compile run."
15010240,15021040," So what's the issue? The issue is number 1233. Close."
15023120,15026880," Uh-huh. All right. So what we want to do."
15026880,15052080," All right. So what I want to do."
15052080,15061520," Um, so I want to, I probably want to write something in there, but I'm not really sure what to write in there."
15069680,15087280," I replaced, uh, uh, system, uh, with, uh, custom, uh, custom, uh, subprocess, which should work on both POSIX and, uh, POSIX and Windows."
15087280,15106800," It's a combination, uh, uh, some ideas I took from subprocess.h, uh, and knob.h, right? So subprocess."
15107840,15125440," Let me actually find, uh, subprocess.h, so it's this thing, um, mm, mm, mm, mm, mm."
15125440,15146880," Okay. Okay. Okay. Come on. You can do that. You can do that. Okay."
15146880,15155440," Come on. You can do that. You can do that. Okay."
15159520,15172320," So, all right. Um, subprocess.h is under, uh, is public domain, uh, domain."
15172960,15187920," Nob.h is my thing under MIT, but this specific, uh, um, piece of code is trivial enough."
15187920,15196960," So, I, uh, uh, I, uh, I, uh, use it to public domain as well."
15196960,15198880," Smiley face."
15198880,15201440," Uh, all right."
15201440,15203760," So, what we'll see."
15203760,15217200," Please let me know if there are any problems with the, uh, approach."
15218800,15221840," Please let me know if there are, there are any problems with the approach."
15221840,15226000," Okay. I guess let's go. Uh, let's create a pull request."
15226000,15233120," Um, so yeah, that was quite the journey. That was quite the journey."
15233120,15238000," Um, so the, yeah, so the CI is not gonna run right away."
15238000,15242000," Um, so we'll have to wait until the author approves that."
15242000,15245680," So, but then we're gonna go through the, uh, you know, several iterations of, like,"
15245680,15248080," reviewing, fixing the comments and stuff like that."
15248080,15252800," I'm probably not gonna be recording that unless there's something interesting pops up."
15252800,15256080," Right. So, but I don't think there will be anything particularly interesting."
15256080,15260320," It's probably gonna be something stylistic or some bugs that I didn't notice."
15260320,15262960," I don't expect anything, like, significant."
15262960,15267120," Uh, right. So, um, we'll need to wait until CI."
15267120,15269680," So, just to see if it works on other platforms."
15269680,15274800," But, uh, that specific piece of code from knob was actually tested on Windows."
15274800,15279760," I did, in fact, tested it on Windows, um, when I was using it in other projects."
15279760,15281200," So, I can expect it to work."
15281200,15281920," But, who knows?"
15281920,15282880," Right. So, it's software."
15282880,15284000," You never know."
15284000,15285440," That's why we have CI."
15285440,15286000," All right."
15286000,15287120," That's it for today."
15287120,15288960," Thanks, everyone, who's watching right now."
15288960,15290000," We appreciate that."
15290000,15290800," Have a good one."
15290800,15295120," And I see you all on the next Recreation Programming Session with a Mr. Azuzin."
15295120,15297120," Hopefully, by the time this word releases,"
15297120,15299600," this feature is gonna be available in the compiler."
15299600,15301600," Love you."

start,end,text
80,9440," Hello and welcome to another Zodin session. So I decided to make a very quick Zodin session just"
9440,16000," to fix one of the problems that we had in Emote Jam. Emote Jam is a website that generates animated"
16000,20880," emotes for BGTV and stuff like that. If you never heard about it you can find it in the description"
20880,27200," and of course it is completely open source. You can find the source code in the description as well"
27200,37920," on github. Source code okay so one of the things we did recently we migrated this website from javascript"
37920,43520," to typescript so there's a recording of the session where we did that you can find it on youtube. I'm"
43520,50480," going to leave the link in the description as well. It has a bright thumbnail you will instantly see."
50480,60960," Thank you thank you youtube youtube knows uh what i want all right so js2ts migration stream right so"
60960,69120," you can find it in here if you're interested. So and uh we have one of the components of the uh of"
69120,76240," duplication that we have is an expression evaluator right so we have our own expression evaluator that"
76240,85280," accepts a small subset of um javascript and allows you to evaluate it in a very sandboxed environment"
85280,92800," without using the actual javascript eval uh we developed this entire thing uh as well on uh on one"
92800,99920," of those sorting sessions i will leave the link in the description as well um i think um i don't quite"
99920,106240," i remember what is it called uh inserting daily uh i think it's called like implementing javascript and"
106240,114480," javascript or something uh it should be available excuse me on my channel yeah this one re-implementing"
114480,121040," javascript in javascript for safer evolve right so for more context about what this component is uh"
121840,130880," you can watch this stream safer evolved okay what's the problem um so first what we can do um"
130880,136480," let me enable fly check i think i should actually enable fly check in my emacs configuration but i"
136480,142160," couldn't bother to actually do that right now uh essentially imagine that uh you have expression"
142160,148160," like this one plus two multiplied by three so the first thing you do you compile that expression you do"
148160,154240," compile um compile expert and there we go and this entire thing will return you well it's supposed to"
154240,159600," return you an expression right so and i think i forgot to actually update my bindings right there we"
159600,165440," go so it is supposed to return you an expression uh what you can do then you can run that expression"
165440,170800," uh out of the completion of the completion doesn't want to work yeah there we go and when you run this"
170800,176000," expression uh providing the user context we didn't provide any user context because we didn't use any"
176000,181600," custom variables or functions uh it will return you a number right and then we can try to bring this"
181600,187360," entire thing just to see what's going to happen so according to um you know common mathematical sense"
187360,194080," this should be seven right so two by three is six plus one is seven if we try to run this entire thing"
194080,198960," uh using the node i think i forgot to recompile this entire stuff so let me actually run"
198960,207520," the node in uh watch mode so it constantly recompiles everything i tap um okay no no errors were found and"
207520,214800," now i can try to run my js eval js and as you can see it actually printed seven precisely what you would"
214800,219360," expect uh precisely what you would expect if i actually increase this kind of thing so this is going"
219360,227760," to be nine because uh two by uh eight um two by four is eight and plus one is going to be nine okay so"
227760,236960," what's the problem the problem is that um our um evaluator doesn't take into account the binary operator"
236960,243680," precedence right usually the precedence of the multiplication is higher than the addition and"
243680,249040," this thing works completely accidentally because of our parser actually interpreting this expression like"
249040,256800," this right if the associativity of the parser was a little bit different um in it would not work"
256800,264240," right it would not work right so we can break this expression by actually swapping these arguments"
264240,271520," around what if it was uh two multiplied by three plus one and let's see what's going to happen suddenly"
271520,278720," instead of being seven it became eight the question is why because again our parser interpreted it as"
278720,286480," this right so first it actually added um three uh plus one which is four and then multiplied by two"
286480,292160," right what's interesting is that in the uh in the session where i was developing this entire system"
292160,298720," in the uh re-implementing javascript and javascript i actually mentioned precedence of the binary operators"
298720,305600," but then i completely forgot to implement it so i mean yeah it works for now but it needs to be fixed"
305600,313760," i think at some time ago the calculator on one of the versions of windows also didn't take into account"
313760,319840," the precedence of the binary operators and yeah it's it's actually super easy to forget to do that"
319840,326800," to implement this specific feature okay and i think i even have an issue for that so let me see uh"
326800,334720," precedence of the operators is not handled properly in the duration of the filters yeah yeah yeah so it's"
334720,339360," an issue 66 okay let's let's go ahead and try to fix that so i'm going to create a separate branch"
340240,345840," and uh we'll see we'll see also this one is a very important change i'm going to actually commit it in"
345840,361040," the scope of 66 um issue all right um six make compile expert uh return expert nice one uh okay cool"
361920,368720," so what first uh what's the first thing we we're going to do uh we need to establish a table uh the"
368720,375520," correspondence table table of the binary operator and its presidents we already have a table which"
375520,382080," actually establishes the correspondence between the binary operator and the function that is applied to"
382080,388320," that specific binary operator maybe we can actually store the president's operator in the same place"
388320,392960," right so maybe it would make sense to introduce some sort of interface uh and that interface is going"
392960,399600," to be binary operation uh definition right and the binary definition um operation definition consists of"
399600,407440," the function which is the binary operation function and its presidents presidents uh which is going to be"
407440,416960," a number right uh there we go and that way um so this is a binary operation and uh this table is going to"
416960,421600," contain not to contain not functions but their definitions so that completely breaks everything"
421600,427680," so that means we have to go ahead and fix everything so this is going to be the function and the presidents"
427680,433520," so plus and minus have the lowest presidents so we're going to actually set it to zero all right"
433520,442800," uh minus is going to be also the same presidents as the plus uh and all these three they have a higher"
442800,452560," precedence than plus and minus so they're going to be one uh funk uh presidents on and let's just close"
452560,460720," this into i think and then funk presidents one uh precedence i don't even know how to pronounce"
460720,465760," that word correctly to be fair but i don't speak english so i'm allowed to mispronounce words"
468160,475040," all right so uh that definitely broke all of the places where we use uh binary ops so let's actually"
475040,479680," go to those places and try to fix them so what we're trying to do in here we're trying to actually"
479680,485120," invoke a function so i think it has to be something like this can i actually like pretty print that a"
485120,491280," little bit so i run the function then uh this is my expression actually a run to expression okay so that"
491280,497920," that looks a little bit better yeah uh what's the next one uh and i guess that's it so we don't even"
497920,503920," have any problems in here so that was the whole refactoring which is pretty nice which is pretty nice"
507600,511200," so now we need to parse everything according to the precedence"
511200,523920," so if we take a look at the expression uh some sort of expression one multiplied by two plus three"
523920,532000," multiplied by four plus five multiplied by six right so we're basically going to have a function that sort"
532000,537120," of climbs the precedence right we're not going to implement the precedence climbing but we're going"
537120,543920," to implement something that precedence climbing try to uh optimize right so there's a recursive scheme"
543920,548640," uh which actually can be boiled down to precedence climbing and if you never heard about precedence"
548640,553280," climbing uh precedence climbing i'm going to leave the link about this thing in the description"
553280,559600," so uh we're not implementing precedence climate per se but we're implementing this recursive scheme that is"
559600,566160," explained in the wikipedia article about precedence climbing so i'm gonna leave this entire thing um in"
566160,578400," the description as well president's uh parsing scheme uh scheme we are using we're gonna implement the"
578400,583120," precedence climbing a little bit later uh right so for now i just want to keep the things a little bit"
583120,587920," simpler though precedence climbing itself doesn't really look that complicated it's just like i didn't have"
587920,596720," time to wrap my head around it right so it seems to be less um less recursive than you know direct"
596720,601120," implementation of this entire thing but i don't know maybe at some point actually i will make a session"
601120,607520," where i will try to look into the uh precedence climbing as a matter of fact um let me actually write"
607520,618320," write it down uh as a topic as a possible topic of the coding session uh president's climbing right so"
618320,624240," this is going to be yeah i write my down i write my topics down uh on the on the piece of paper right"
624240,631360," as a as an epic programmer i trust paper more than i trust computer as a matter of fact me being a programmer"
631360,637360," for 15 years actually told me that you should never trust computers so the more i program the"
637360,644160," more i realizing that trusting computers is the last thing you want in your life so believe me um"
644160,652240," i trusted computers way too many times and i was burned by that way too many times you never trust computers"
652240,655360," don't trust them no choose"
655360,660080," all right"
660080,662720," so"
662720,669200," okay so we have this thing uh why do i have two emacs is open i'm not quite sure"
669200,676240," so this is one oh i see so i have one separate emacs for description and one separate emacs for editing i"
676240,682960," don't know why uh it's not very emacs of me right because you usually have a single emacs for everything"
682960,689600," um all right so essentially we have this expression and we start parsing with the president's zero"
689600,696000," right so that means uh the first thing you want to try to do is to parse uh"
697680,706320," like basically chop off an expression with the president's p plus one off of this entire thing"
706320,714640," right so essentially um we have some sort of a function like parse and the uh it's starting"
714640,721760," presidents right so this is going to be the input um that's actually very unfortunate i want to do"
721760,726960," something like this so this is going to be the input uh and this is our recursive function"
726960,732800," so an input is going to be somewhere here like this right so first we want to try to do we want to"
732800,743680," chop off um um an expression with the president's plus one right so and essentially what it will do"
743680,750960," it will go recursively back into parse and now it will try to uh basically chop off this entire thing"
750960,766000," right so after this call the next token right the next token uh must be equal to plots right or rather"
766000,775760," the presidents of that token right presidents uh of that token must be equal to the presidents that we"
775760,780240," expecting in here right they must be expecting in here right it must they must be equal if they're not"
780240,786160," um i guess we can just basically return this expression back so this is going to be left hand"
786160,793840," side and for instance if this is equal uh then it's fine but otherwise it is going to be returned"
793840,802240," like this right there we go uh so after that uh since we already removed the token from the input"
803280,808080," what we need we need to do we need to parse the right hand side of this expression and we're going"
808080,816800," to be parsing it as uh the expression of the same presidents as you can see so uh the expression that"
816800,822560," we're trying to parse is the presenters of plus but then we have another one which is of the same presidents"
823120,830720," uh and this is going to be our right hand side right and then after that uh we're essentially returning the"
830720,838160," um the ast node the ast node with the left hand side and right hand side"
838800,845840," so yeah that's basically the modification that we have to uh make to our parsing scheme uh and i don't"
845840,850480," know why i'm writing this in pseudocode because it's almost the javascript code that i need to write"
850480,858160," in my project uh yeah so and another interesting thing is uh is that if uh the presidents right if the"
858160,865360," presidents is um greater or equal than the maximum presidents right in our case the maximum presence right now is"
865360,873440," two uh that means we're trying to parse this thing as a primary expression parse primary um yeah it's"
873440,878720," going to be like that and yeah we can instantly return this and primary expression is basically"
878720,885520," anything that is not related to the binary operators it's like numbers variables function calls or"
886640,891600," uh expressions wrapped in parentheses so what's interesting is that the expression that is"
891600,897520," wrapped in parentheses it basically resets the whole president's climbing scheme and starts like sort of"
897520,904880," from the beginning again um so yeah let's go ahead and implement this entire thing so i need to do"
904880,913200," what i need to establish uh some sort of a constant uh max presidents oh by the way i remember that"
913200,920880," typescript had enumerations similar to like c can i use enumerations for presidents in here let me"
920880,928400," actually check it out typescript enumerations um handbook enums i already looked into them and that's"
928400,935600," why i remember them because already yes mine got this is actually pretty cool so we'll start off with"
935600,941040," the numeric announce which are probably more familiar if you're coming from other languages uh enum above we"
941040,951280," have an enumeric num uh okay that's pretty cool um must have enum member must have initializer really um"
951280,961280," okay so let me try to just experiment with this entire thing and uh we'll see how it will go uh"
961920,969840," enum presidents like binary presidents right and so what we're going to have in here is basically"
969840,977440," presidents zero which is initially zero then we're going to have one uh right so is it totally fine okay"
977440,986400," and then we're going to have max presidents uh max presidents will that thing work right and then um i'm"
986400,993840," gonna try to do something like binary uh presidents there we go so this one seems to be working so"
993840,1002640," presidents zero um okay huh binary president do i have to do something like this to make it yeah apparently"
1002640,1011040," uh so i don't like the word presidents because it's very very huge so can we um"
1012800,1020960," uh you know make it a little bit shorter maybe a query replace precedence uh precedence with prec"
1020960,1031920," uh and something like that yeah probably yeah yeah so we have funk and prec nice"
1031920,1042640," uh so uh this is not really maximum precedence it's sort of like a count count prex right so count prex"
1042800,1050080," prex uh yeah yeah okay so we need to do something like this we need to do something like this binary"
1050080,1057600," track uh prex zero then might as well actually just copy paste this entire part and just put it like"
1057600,1066720," that so this is going to be binary prex and i'm really curious uh what will be printed if i try to print"
1066720,1076560," binary op binary prep uh count prex right so count prex and let's just go ahead and print that okay so"
1076560,1084000," there's two of them nice nice nice so this is the amount of precedences we have um all right so that's"
1084000,1091120," pretty cute so parse expression we don't have a function called parse expression um for some reason"
1091120,1096640," it's called just parse i would rather prefer to actually call it parse expert uh so that will"
1096640,1103200," probably introduce a couple of errors in here um uh yeah okay so here they are for some reason it"
1103200,1111520," doesn't want to jump to the errors um but yeah we definitely do have like errors uh parse expression"
1111520,1124800," right another one doesn't want uh moved past last error okay uh restart the server fly check"
1124800,1134480," fly check it doesn't want to move to the next error this is so embarrassing um okay"
1137280,1145120," this is actually very sad um so if i introduce some sort of error in here right will it be will it allow"
1145120,1156560," me to move uh fly check next error okay i guess we have to use it like that then uh usually it it works"
1156560,1163040," without any problems but something got broken in my emacs so there's nothing i can do about that emacs am i"
1163040,1178080," right so uh all right so i think i refactored everything and again i need to go into the uh"
1178080,1185280," into the parse expression function here it is and uh one thing we probably need to do here we need to"
1185280,1189040," introduce the precedence right so we need to introduce the precedence and it's going to be preck"
1189680,1196560," uh and in fact it's going to be binary preck there we go but initially it is going to be a binary preck"
1196560,1209520," zero binary uh preck preck zero yeah there we go so and again if the uh precedence is greater or equal"
1209520,1217920," than uh binary preck count uh precks we're just parsing this entire thing uh as a primary expression parse"
1217920,1227200," primary uh lexa uh there we go uh otherwise uh we're trying to parse the left-hand side uh as we"
1227200,1232720," already mentioned we're trying to parse the left-hand side as the expression with the higher precedence"
1232720,1238720," right so we have to do something like uh parse expression uh but the preck is going to be plus one"
1238720,1245760," you see there we go okay and now we're taking the operation token right we're taking the operation token and"
1246880,1254240," we're checking that it is in um oh this one is very interesting so we are checking that it's not"
1254240,1263840," null that it exists right then we probably want to check um that it is located in uh the binary operations"
1263840,1276320," and if it is located in binary operations uh we have to take binary or peace of token uh precedence right um and"
1276320,1281600," if it's equal to the current precedence if it is equal to the current precedence we keep parsing this"
1281600,1289840," entire thing otherwise we put the token back and just return left-hand side and uh yeah so we parse"
1289840,1296800," the red or right-hand side with the same precedence as we are uh okay so we have a problem in here"
1296800,1306000," uh any value something something i don't quite understand why it has to do with any values but okay so op"
1306000,1310720," token is supposed to be um oh yeah yeah okay i see so"
1310720,1321280," um i think i have to do something like as binary or op right as binary op uh is it going to be fine it"
1321280,1326480," seems to be compiling okay so there's no any errors in here and everything seems to be fine"
1326480,1335280," right hopefully um okay so let's actually try to i think this is the entire fix to be fair this is the like how you add the precedence to to your"
1335280,1342960," parser if you have parser implemented in a similar uh way uh right so the entire sort of uh scheme"
1342960,1348320," of um you know supporting the precedence is basically this i think i think i didn't make any mistakes if i"
1348320,1354000," did please let me know and we're also going to quickly just check it out so uh i'm going to compile"
1354000,1359920," compile expression uh compile expression uh compile expression uh one plus two multiplied by three right"
1359920,1368000," so we might as well even print the entire thing right we can print the entire expression um maybe we're"
1368000,1375600," going to do src all right so this is src all right so this is src then expression the compiled expression"
1375600,1386880," uh to src and then um the the value right the value of that expression run expression uh expert and i want to"
1386880,1397600," actually print all of these things separately right so it's going to be console uh log src src and then"
1397600,1404720," we're going to have expression and then we're going to have a value there we go this is not how you print"
1404720,1412800," the value this is how you print your value all right so uh let's go uh if i try to run this so the final"
1412800,1419920," expression is um this right source of the expression one plus two plus three so it got parsed like this"
1419920,1428480," so at the root we have plus and uh then at the left hand side we have a symbol uh which is correct right"
1428480,1434400," so and then at the right hand side we have another binary operation and it actually doesn't print this"
1434400,1443360," entire thing fully and i think i know why because console log is ppega so you have to do something"
1443360,1454320," like console log expert and only then i think even then it doesn't print this entire thing fully um i"
1454320,1460720," don't remember how i made it actually print uh the entire thing yeah it doesn't it doesn't want to print"
1460720,1473760," this entire thing um i don't know i already forgot but in any case so uh this value is correct regardless"
1473760,1480560," of what's the expression right so you have source uh like this and you have seven so now if i swap these"
1480560,1485760," things around and uh let's see what's going to happen is it still going to be seven it is still seven"
1486560,1491040," it is still seven but if you wanted to evaluate to something else for example eight you can"
1491040,1496960," explicitly add parentheses and in that case it's going to be evaluated as eight so we managed to"
1496960,1503840," add the precedence to the passing we managed to add the precedence to the passing and the issue is"
1503840,1509600," finally fixed hopefully uh if i made any mistakes please let me know in the comments below so let's"
1509600,1518720," actually make a pull request um all right so furthermore i want to actually test that i didn't"
1518720,1528160," break the whole website uh so if i recompile everything just in case uh so i can also go to emote gem and do"
1528160,1539360," python 3 uh http server 69 69 69 69 there we go uh and i'm gonna just open this entire thing in here so"
1539360,1545440," here's the website i think i didn't break anything so i'm gonna open the feature params uh i'm gonna try to"
1545440,1552800," uh modify some things so this thing is going to be actually moving very very fast the scale is going to be"
1552800,1559680," very big jump height is going to be very small and the amount of hops is going to be uh yeah it can be"
1559680,1563760," two if i try to render this entire thing uh is it looked perfectly"
1563760,1571200," yeah it seems to be looked perfectly so i don't think i broke anything per se"
1571760,1574800," uh let me actually try the original filter"
1574800,1586480," everything is perfect okay so and let's let me take a look at the console console doesn't have any errors"
1586480,1594640," by itself so yeah i guess we can finally uh subject me this entire thing um"
1596160,1611120," so not 69 uh make the um expression evaluator uh evaluator uh respect uh precedence"
1611120,1616720," right i hope i spelled that correctly if i didn't spell that correctly i really apologize for that"
1616720,1629440," okay let's make a pull request uh super quick so i'm gonna copy this entire thing in here"
1629440,1633120," and this entire thing is gonna close that"
1633120,1638160," all right how many changes did we make"
1640480,1647440," not that menu to be fair not that menu uh and typescript uh checked all the types and stuff like"
1647440,1653840," that all right so that's it for now uh thanks everyone um i hope you enjoyed the uh this small"
1653840,1660560," session uh half an hour session uh check out the links in the description um so yeah thanks everyone"
1660560,1665440," for watching see you on the on the next session uh love you"
